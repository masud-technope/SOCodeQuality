<p>Here is my code. The idea is that ImageView gets color filter when user touches it, and color filter is removed when user stops touching it.</p>

<p>Martin Booka Weser, Andr√°s, Ah Lam, altosh,  solution doesn't work when ImageView has also onClickEvent.
worawee.s and kcoppock (with ImageButton) solution requires background, which has no sense when ImageView is not transparent.</p>

<p>This one is extension of <a href=""http://stackoverflow.com/a/7754032/185022"">AZ_</a> idea about color filter.</p>

<pre><code>class PressedEffectStateListDrawable extends StateListDrawable {

    private int selectionColor;

    public PressedEffectStateListDrawable(Drawable drawable, int selectionColor) {
        super();
        this.selectionColor = selectionColor;
        addState(new int[] { android.R.attr.state_pressed }, drawable);
        addState(new int[] {}, drawable);
    }

    @Override
    protected boolean onStateChange(int[] states) {
        boolean isStatePressedInArray = false;
        for (int state : states) {
            if (state == android.R.attr.state_pressed) {
                isStatePressedInArray = true;
            }
        }
        if (isStatePressedInArray) {
            super.setColorFilter(selectionColor, PorterDuff.Mode.MULTIPLY);
        } else {
            super.clearColorFilter();
        }
        return super.onStateChange(states);
    }

    @Override
    public boolean isStateful() {
        return true;
    }
}
</code></pre>

<p>usage:</p>

<pre><code>Drawable drawable = new FastBitmapDrawable(bm);
imageView.setImageDrawable(new PressedEffectStateListDrawable(drawable, 0xFF33b5e5));
</code></pre>
