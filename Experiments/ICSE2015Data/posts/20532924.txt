<p>Seems a banal solution but I usually put simply a TextView in the front of the spinner. The whole Xml looks like this. (hey guys, don't shoot me, I know that some of you don't like this kind of marriage):</p>

<pre><code>&lt;FrameLayout
    android:id=""@+id/selectTypesLinear""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""
    android:orientation=""horizontal"" &gt;

    &lt;Spinner
        android:id=""@+id/spinnerExercises""
        android:layout_width=""match_parent""
        android:layout_height=""match_parent""
        android:entries=""@array/exercise_spinner_entries""
        android:prompt=""@string/exercise_spinner_prompt""
     /&gt;                         
    &lt;TextView
        android:id=""@+id/spinnerSelectText""
        android:layout_width=""match_parent""
        android:layout_height=""match_parent""
        android:text=""Hey! Select this guy!""
        android:gravity=""center""
        android:background=""#FF000000"" /&gt;


&lt;/FrameLayout&gt;
</code></pre>

<p>Then I hide the TextView when an Item was selected. Obviously the background color of the TextView should be the same as the Spinner. Works on Android 4.0. Don't know on older versions.</p>

<p>Yes. Because the Spinner calls setOnItemSelectedListener at the beginning, the hiding of the textview could be a little bit tricky, but can be done this way:</p>

<pre><code>    Boolean controlTouched;

    exerciseSpinner.setOnTouchListener(new OnTouchListener() {


        @Override
        public boolean onTouch(View v, MotionEvent event) {
            controlTouched = true; // I touched it but but not yet selected an Item.
            return false;
        }

    });
    exerciseSpinner.setOnItemSelectedListener(new OnItemSelectedListener() {

        @Override
        public void onItemSelected(AdapterView&lt;?&gt; arg0, View arg1,
                int arg2, long arg3) {
            if (controlTouched) { // Are you sure that I touched it with my fingers and not someone else  ?
                spinnerSelText.setVisibility(View.GONE);
            }
        }

        @Override
        public void onNothingSelected(AdapterView&lt;?&gt; arg0) {
        }

    });
</code></pre>
