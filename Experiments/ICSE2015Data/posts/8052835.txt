<p>Link: <a href=""http://www.androidsnippets.com/get-installed-applications-with-name-package-name-version-and-icon"" rel=""nofollow"">http://www.androidsnippets.com/get-installed-applications-with-name-package-name-version-and-icon</a></p>

<p>Here a good example:</p>

<pre><code>class PInfo {
    private String appname = """";
    private String pname = """";
    private String versionName = """";
    private int versionCode = 0;
    private Drawable icon;
    private void prettyPrint() {
        Log.v(appname + ""\t"" + pname + ""\t"" + versionName + ""\t"" + versionCode);
    }
}

private ArrayList&lt;PInfo&gt; getPackages() {
    ArrayList&lt;PInfo&gt; apps = getInstalledApps(false); /* false = no system packages */
    final int max = apps.size();
    for (int i=0; i&lt;max; i++) {
        apps.get(i).prettyPrint();
    }
    return apps;
}

private ArrayList&lt;PInfo&gt; getInstalledApps(boolean getSysPackages) {
    ArrayList&lt;PInfo&gt; res = new ArrayList&lt;PInfo&gt;();        
    List&lt;PackageInfo&gt; packs = getPackageManager().getInstalledPackages(0);
    for(int i=0;i&lt;packs.size();i++) {
        PackageInfo p = packs.get(i);
        if ((!getSysPackages) &amp;&amp; (p.versionName == null)) {
            continue ;
        }
        PInfo newInfo = new PInfo();
        newInfo.appname = p.applicationInfo.loadLabel(getPackageManager()).toString();
        newInfo.pname = p.packageName;
        newInfo.versionName = p.versionName;
        newInfo.versionCode = p.versionCode;
        newInfo.icon = p.applicationInfo.loadIcon(getPackageManager());
        res.add(newInfo);
    }
    return res; 
}
</code></pre>
