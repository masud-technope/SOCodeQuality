151777","151822","220","<p>The <code>savedInstanceState</code> is only for saving state associated with a current instance of an Activity, for example current navigation or selection info, so that if Android destroys and recreates an Activity, it can come back as it was before.  See the documentation for <a href=""http://developer.android.com/reference/android/app/Activity.html#onCreate%28android.os.Bundle%29""><code>onCreate</code></a> and <a href=""http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState%28android.os.Bundle%29""><code>onSaveInstanceState</code></a></p>

<p>For more long lived state, consider using a SQLite database, a file, or preferences.  See <a href=""http://developer.android.com/reference/android/app/Activity.html#SavingPersistentState"">Saving Persistent State</a>.</p>
"
"151777","151940","1151","<p>You need to override <code>onSaveInstanceState(Bundle savedInstanceState)</code> and write the application state values you want to change to the <code>Bundle</code> parameter like this:</p>

<pre><code>@Override
public void onSaveInstanceState(Bundle savedInstanceState) {
  super.onSaveInstanceState(savedInstanceState);
  // Save UI state changes to the savedInstanceState.
  // This bundle will be passed to onCreate if the process is
  // killed and restarted.
  savedInstanceState.putBoolean(""MyBoolean"", true);
  savedInstanceState.putDouble(""myDouble"", 1.9);
  savedInstanceState.putInt(""MyInt"", 1);
  savedInstanceState.putString(""MyString"", ""Welcome back to Android"");
  // etc.
}
</code></pre>

<p>The Bundle is essentially a way of storing a NVP (""Name-Value Pair"") map, and it will get passed in to <code>onCreate()</code> and also <code>onRestoreInstanceState()</code> where you'd extract the values like this:</p>

<pre><code>@Override
public void onRestoreInstanceState(Bundle savedInstanceState) {
  super.onRestoreInstanceState(savedInstanceState);
  // Restore UI state from the savedInstanceState.
  // This bundle has also been passed to onCreate.
  boolean myBoolean = savedInstanceState.getBoolean(""MyBoolean"");
  double myDouble = savedInstanceState.getDouble(""myDouble"");
  int myInt = savedInstanceState.getInt(""MyInt"");
  String myString = savedInstanceState.getString(""MyString"");
}
</code></pre>

<p>You would usually use this technique to store instance values for your application (selections, unsaved text, etc.).</p>
"
"151777","2785419","39","<p><code>onSaveInstanceState</code> is called when the system needs memory and kills an application. It is not called when the user just closes the application. So I think application state should also be saved in <code>onPause</code> It should be saved to some persistent storage like <code>Preferences</code> or <code>Sqlite</code></p>
"
"151777","2893765","10","<p>Really <code>onSaveInstance</code> state callen when the Activity goes to background</p>

<p>Quote from the docs:
""the method <code>onSaveInstanceState(Bundle)</code>  is called before placing the activity in such a background state""</p>
"
"151777","2909211","181","<p>Note that it is <strong><em>NOT</em></strong> safe to use <code>onSaveInstanceState</code> and <code>onRestoreInstanceState</code>, according to the documentation on Activity states in <a href=""http://developer.android.com/reference/android/app/Activity.html"">http://developer.android.com/reference/android/app/Activity.html</a>.</p>

<p>The document states (in the 'Activity Lifecycle' section):</p>

<blockquote>
  <p>Note that it is important to save
  persistent data in <code>onPause()</code> instead
  of <code>onSaveInstanceState(Bundle)</code>
  because the later is not part of the
  lifecycle callbacks, so will not be
  called in every situation as described
  in its documentation.</p>
</blockquote>

<p>In other words, put your save/restore code in <code>onPause()</code> and <code>onResume()</code> instead!</p>
"
"151777","3584836","82","<p>My colleague wrote an article explaining Application State on Android devices including explanations on Activity Lifecycle and State Information, How to Store State Information, and saving to State <code>Bundle</code> and <code>SharedPreferences</code> and <a href=""http://www.eigo.co.uk/Managing-State-in-an-Android-Activity.aspx"">take a look at here</a>.</p>

<p>The article covers three approaches:</p>

<h2>Store local varible/UI control data for application lifetime (ie temporarily) using Instance State Bundle</h2>

<pre><code>[Code sample – Store State in State Bundle]
@Override
public void onSaveInstanceState(Bundle savedInstanceState) 
{
  // Store UI state to the savedInstanceState.
  // This bundle will be passed to onCreate on next call.  EditText txtName = (EditText)findViewById(R.id.txtName);
  String strName = txtName.getText().toString();

  EditText txtEmail = (EditText)findViewById(R.id.txtEmail);
  String strEmail = txtEmail.getText().toString();

  CheckBox chkTandC = (CheckBox)findViewById(R.id.chkTandC);
  boolean blnTandC = chkTandC.isChecked();

  savedInstanceState.putString(“Name”, strName);
  savedInstanceState.putString(“Email”, strEmail);
  savedInstanceState.putBoolean(“TandC”, blnTandC);

  super.onSaveInstanceState(savedInstanceState);
}
</code></pre>

<h2>Store local varible/UI control data between application instances (ie permanently) using Shared Preferences</h2>

<pre><code>[Code sample – Store State in SharedPreferences]
@Override
protected void onPause() 
{
  super.onPause();

  // Store values between instances here
  SharedPreferences preferences = getPreferences(MODE_PRIVATE);
  SharedPreferences.Editor editor = preferences.edit();  // Put the values from the UI
  EditText txtName = (EditText)findViewById(R.id.txtName);
  String strName = txtName.getText().toString();

  EditText txtEmail = (EditText)findViewById(R.id.txtEmail);
  String strEmail = txtEmail.getText().toString();

  CheckBox chkTandC = (CheckBox)findViewById(R.id.chkTandC);
  boolean blnTandC = chkTandC.isChecked();

  editor.putString(“Name”, strName); // value to store
  editor.putString(“Email”, strEmail); // value to store
  editor.putBoolean(“TandC”, blnTandC); // value to store    
  // Commit to storage
  editor.commit();
}
</code></pre>

<h2>Keeping object instances alive in memory between activities within application lifetime using Retained Non-Configuration Instance</h2>

<pre><code>[Code sample – store object instance]
private cMyClassType moInstanceOfAClass;// Store the instance of an object
@Override
public Object onRetainNonConfigurationInstance() 
{
  if (moInstanceOfAClass != null) // Check that the object exists
      return(moInstanceOfAClass);
  return super.onRetainNonConfigurationInstance();
}
</code></pre>
"
"151777","6457934","21","<p>Saving state is a kludge at best as far as I'm concerned. If you need to save persistent data, just use an <a href=""http://en.wikipedia.org/wiki/SQLite"" rel=""nofollow"">SQLite</a> database. Android makes it <strong><em>SOOO</em></strong> easy.</p>

<p>Something like this:</p>

<pre><code>import java.util.Date;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

public class dataHelper {

    private static final String DATABASE_NAME = ""autoMate.db"";
    private static final int DATABASE_VERSION = 1;

    private Context context;
    private SQLiteDatabase db;
    private OpenHelper oh ;

    public dataHelper(Context context) {
        this.context = context;
        this.oh = new OpenHelper(this.context);
        this.db = oh.getWritableDatabase();
    }

    public void close()
    {
        db.close();
        oh.close();
        db = null;
        oh = null;
        SQLiteDatabase.releaseMemory();
    }


    public void setCode(String codeName, Object codeValue, String codeDataType)
    {
        Cursor codeRow = db.rawQuery(""SELECT * FROM code WHERE codeName = '""+  codeName + ""'"", null);
        String cv = """" ;

        if (codeDataType.toLowerCase().trim().equals(""long"") == true)
        {
            cv = String.valueOf(codeValue);
        }
        else if (codeDataType.toLowerCase().trim().equals(""int"") == true)
        {
            cv = String.valueOf(codeValue);
        }
        else if (codeDataType.toLowerCase().trim().equals(""date"") == true)
        {
            cv = String.valueOf(((Date)codeValue).getTime());
        }
        else if (codeDataType.toLowerCase().trim().equals(""boolean"") == true)
        {
            String.valueOf(codeValue);
        }
        else
        {
            cv = String.valueOf(codeValue);
        }

        if(codeRow.getCount() &gt; 0) //exists-- update
        {
            db.execSQL(""update code set codeValue = '"" + cv +
                ""' where codeName = '"" + codeName + ""'"");
        }
        else // does not exist, insert
        {
            db.execSQL(""INSERT INTO code (codeName, codeValue, codeDataType) VALUES("" +
                    ""'"" + codeName + ""',"" +
                    ""'"" + cv + ""',"" +
                    ""'"" + codeDataType + ""')"" );
        }
    }

    public Object getCode(String codeName, Object defaultValue)
    {
        //Check to see if it already exists
        String codeValue = """";
        String codeDataType = """";
        boolean found = false;
        Cursor codeRow  = db.rawQuery(""SELECT * FROM code WHERE codeName = '""+  codeName + ""'"", null);
        if (codeRow.moveToFirst())
        {
            codeValue = codeRow.getString(codeRow.getColumnIndex(""codeValue""));
            codeDataType = codeRow.getString(codeRow.getColumnIndex(""codeDataType""));
            found = true;
        }

        if (found == false)
        {
            return defaultValue;
        }
        else if (codeDataType.toLowerCase().trim().equals(""long"") == true)
        {
            if (codeValue.equals("""") == true)
            {
                return (long)0;
            }
            return Long.parseLong(codeValue);
        }
        else if (codeDataType.toLowerCase().trim().equals(""int"") == true)
        {
            if (codeValue.equals("""") == true)
            {
                return (int)0;
            }
            return Integer.parseInt(codeValue);
        }
        else if (codeDataType.toLowerCase().trim().equals(""date"") == true)
        {
            if (codeValue.equals("""") == true)
            {
                return null;
            }
            return new Date(Long.parseLong(codeValue));
        }
        else if (codeDataType.toLowerCase().trim().equals(""boolean"") == true)
        {
            if (codeValue.equals("""") == true)
            {
                return false;
            }
            return Boolean.parseBoolean(codeValue);
        }
        else
        {
            return (String)codeValue;
        }
    }


    private static class OpenHelper extends SQLiteOpenHelper {

        OpenHelper(Context context) {
            super(context, DATABASE_NAME, null, DATABASE_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            db.execSQL(""CREATE TABLE IF  NOT EXISTS code"" +
            ""(id INTEGER PRIMARY KEY, codeName TEXT, codeValue TEXT, codeDataType TEXT)"");
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        }
    }
}
</code></pre>

<p>A simple call after that</p>

<pre><code>dataHelper dh = new dataHelper(getBaseContext());
String status = (String) dh.getCode(""appState"", ""safetyDisabled"");
Date serviceStart = (Date) dh.getCode(""serviceStartTime"", null);
dh.close();
dh = null;
</code></pre>
"
"151777","6495812","29","<p>Both methods are useful and valid and both are best suited for different scenarios:</p>

<ol>
<li>The user terminates the application and re-opens it at a later date, but the application needs to reload data from the last session – this requires a persistent storage approach such as using SQLite.</li>
<li>The user switches application and then comes back to the original and wants to pick up where they left off -  save and restore bundle data (such as application state data) in <code>onSaveInstanceState()</code> and <code>onRestoreInstanceState()</code> is usually adequate.</li>
</ol>

<p>If you save the state data in a persistent manner, it can be reloaded in an <code>onResume()</code> or <code>onCreate()</code> (or actually on any lifecycle call). This may or may not be desired behaviour. If you store it in a bundle in an <code>InstanceState</code>, then it is transient and is only suitable for storing data for use in the same user ‘session’ (I use the term session loosely) but not between ‘sessions’.</p>

<p>It is not that one approach is better than the other, like everything, it is just important to understand what behaviour you require and to select the most appropriate approach.</p>
"
"151777","9148893","17","<p>I think I found the answer. Let me tell what I have done in simple words:</p>

<p>Suppose I have two activities, activity1 and activity2 and I am navigating from activity1 to activity2 (I have done some works in activity2) and again back to activity 1 by clicking on a button in activity1. Now at this stage I wanted to go back to activity2 and I want to see my activity2 in the same condition when I last left activity2.</p>

<p>For the above scenario what I have done is that in the manifest I made some changes like this:</p>

<pre><code>&lt;activity android:name="".activity2""
          android:alwaysRetainTaskState=""true""      
          android:launchMode=""singleInstance""&gt;
&lt;/activity&gt;
</code></pre>

<p>And in the activity1 on the button click event I have done like this:</p>

<pre><code>Intent intent = new Intent();
intent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
intent.setClassName(this,""com.mainscreen.activity2"");
startActivity(intent);
</code></pre>

<p>And in activity2 on button click event I have done like this:</p>

<pre><code>Intent intent=new Intent();
intent.setClassName(this,""com.mainscreen.activity1"");
startActivity(intent);
</code></pre>

<p>Now what will happen is that whatever the changes we have made in the activity2 will not be lost, and we can view activity2 in the same state as we left previously.</p>

<p>I believe this is the answer and this works fine for me. Correct me if I am wrong.</p>
"
"151777","9956341","9","<p>Meanwhile I do in general no more use </p>

<pre><code>Bundle savedInstanceState &amp; Co
</code></pre>

<p>the live cycle is for most activities too complicated and not necessary.
And google states itself, it is NOT even reliable.</p>

<p>My way is to save any changes immediately in the preferences</p>

<pre><code> SharedPreferences p;
 p.edit().put(..).commit()
</code></pre>

<p>in some way SharedPreferences work similar like Bundles.
And naturally and at first such values have to be red from preferences.</p>

<p>In the case of complex data you may use Sqlite instead of using preferences.</p>

<p>When applying this concept, the activity just continues to use the last saved state, regardless whether it was an initial open with reboots in between or a reopen due to the back stack.</p>
"
"151777","12277349","8","<p>The <code>onSaveInstanceState(bundle)</code> and <code>onRestoreInstanceState(bundle)</code> methods are useful for data persistence merely while rotating the screen (orientation change).<br>
They are not even good while switching between applications (since the <code>onSaveInstanceState()</code> method is called but <code>onCreate(bundle)</code> and <code>onRestoreInstanceState(bundle)</code> is not invoked again.<br>
For more persistence use shared preferences. <a href=""http://www.eigo.co.uk/Managing-State-in-an-Android-Activity.aspx"">read this article</a>  </p>
"
"151777","12983901","62","<p>This is a classic 'gotcha' of Android development. There are two issues here:</p>

<ul>
<li>There is a subtle Android Framework bug which greatly complicates application stack management during development, at least on legacy versions (not entirely sure if/when/how it was fixed). I'll discuss this bug below.</li>
<li>The 'normal' or intended way to manage this issue is, itself, rather complicated with the duality of onPause/onResume and onSaveInstanceState/onRestoreInstanceState</li>
</ul>

<p>Browsing across all these threads, I suspect that much of the time developers are talking about these two different issues simultaneously ... hence all the confusion and reports of ""this doesn't work for me"".</p>

<p>First, to clarify the 'intended' behavior: onSaveInstance and onRestoreInstance are fragile and only for transient state. The intended usage (afaict) is to handle Activity recreation when the phone is rotated (orientation change). In other words, the intended usage is when your Activity is still logically 'on top', but still must be reinstantiated by the system. The saved Bundle is not persisted outside of the process/memory/gc, so you cannot really rely on this if your activity goes to the background. Yes, perhaps your Activity's memory will survive its trip to the background and escape GC, but this is not reliable (nor is it predictable).</p>

<p>So if you have a scenario where there is meaningful 'user progress' or state that should be persisted between 'launches' of your application, the guidance is to use onPause and onResume. You must choose and prepare a persistent store yourself.</p>

<p>BUT - there is a very confusing bug which complicates all of this. Details are here:</p>

<p><a href=""http://code.google.com/p/android/issues/detail?id=2373"">http://code.google.com/p/android/issues/detail?id=2373</a></p>

<p><a href=""http://code.google.com/p/android/issues/detail?id=5277"">http://code.google.com/p/android/issues/detail?id=5277</a></p>

<p>Basically, if your application is launched with the SingleTask flag, and then later on you launch it from the home screen or launcher menu, then that subsequent invocation will create a NEW task ... you'll effectively have two different instances of your app inhabiting the same stack ... which gets very strange very fast. This seems to happen when you launch your app during development (i.e. from Eclipse or Intellij), so developers run into this a lot. But also through some of the app store update mechanisms (so it impacts your users as well).</p>

<p>I battled through these threads for hours before I realized that my main issue was this bug, not the intended framework behavior. A great writeup and <del>workaround</del> (UPDATE: see below) seems to be from user @kaciula in this answer:</p>

<p><a href=""http://stackoverflow.com/questions/3042420/home-key-press-behaviour/4782423#4782423"">Home key press behaviour</a></p>

<p><strong>UPDATE June 2013</strong>: Months later, I have finally found the 'correct' solution. You don't need to manage any stateful startedApp flags yourself,  you can detect this from the framework and bail appropriately. I use this near the beginning of my LauncherActivity.onCreate:</p>

<pre><code>if (!isTaskRoot()) {
    Intent intent = getIntent();
    String action = intent.getAction();
    if (intent.hasCategory(Intent.CATEGORY_LAUNCHER) &amp;&amp; action != null &amp;&amp; action.equals(Intent.ACTION_MAIN)) {
        finish();
        return;
    }
}
</code></pre>
"
"151777","14257820","-7","<p>Sometimes even <code>onSaveInstanceState(bundle)</code> and <code>onRestoreInstanceState(bundle)</code> can be pain in the head if you have more complex activity class with a bunch of variables and instances. Therefore to skip this hard job of saving every variable in <code>onSaveInstanceState(bundle)</code> and restoring it on <code>onRestoreInstanceState(bundle)</code> you can simply add this to your manifest inside your activity tag.</p>

<pre><code>&lt;activity android:configChanges=""keyboardHidden|orientation"" /&gt;
</code></pre>
"
"151777","23115933","3","<p>My problem was that I needed persistence only during the application lifetime (i.e. a single execution including starting other sub-activities within the same app and rotating the device etc). I tried various combinations of the above answers but did not get what I wanted in all situations. In the end what worked for me was to obtain a reference to the savedInstanceState during onCreate:</p>

<pre><code>mySavedInstanceState=savedInstanceState;
</code></pre>

<p>and use that to obtain the contents of my variable when I needed it, along the lines of:</p>

<pre><code>if (mySavedInstanceState !=null) {
   boolean myVariable = mySavedInstanceState.getBoolean(""MyVariable"");
}
</code></pre>

<p>I use <code>onSaveInstanceState</code>and <code>onRestoreInstanceState</code> as suggested above but I guess i could also or alternatively use my method to save the variable when it changes (e.g. using <code>putBoolean</code>)</p>
"
"419184","439486","26","<p>Using suggestions from others, I think I got it to work:</p>

<p>(using SDK v1 R2)</p>

<p>It's not perfect, since i need to delete the entire conversation, but for our purposes, it's a sufficient compromise as we will at least know all messages will be looked at and verified.  Our flow will probably need to then listen for the message, capture for the message we want, do a query to get the thread_id of the recently inbounded message and do the delete() call.</p>

<p>In our Activity:</p>

<pre><code>Uri uriSms = Uri.parse(""content://sms/inbox"");
Cursor c = getContentResolver().query(uriSms, null,null,null,null); 
int id = c.getInt(0);
int thread_id = c.getInt(1); //get the thread_id
getContentResolver().delete(Uri.parse(""content://sms/conversations/"" + thread_id),null,null);
</code></pre>

<p>Note:  I wasn't able to do a delete on content://sms/inbox/ or content://sms/all/</p>

<p>Looks like the thread takes precedence, which makes sense, but the error message only emboldened me to be angrier.  When trying the delete on sms/inbox/ or sms/all/, you will probably get:</p>

<pre><code>java.lang.IllegalArgumentException: Unknown URL
    at com.android.providers.telephony.SmsProvider.delete(SmsProvider.java:510)
    at android.content.ContentProvider$Transport.delete(ContentProvider.java:149)
    at android.content.ContentProviderNative.onTransact(ContentProviderNative.java:149)
</code></pre>

<p>For additional reference too, make sure to put this into your manifest for your intent receiver:</p>

<pre><code>&lt;receiver android:name="".intent.MySmsReceiver""&gt;
    &lt;intent-filter&gt;
        &lt;action android:name=""android.provider.Telephony.SMS_RECEIVED""&gt;&lt;/action&gt;
    &lt;/intent-filter&gt;
&lt;/receiver&gt;
</code></pre>

<p>Note the receiver tag does not look like this:</p>

<pre><code>&lt;receiver android:name="".intent.MySmsReceiver"" 
    android:permission=""android.permission.RECEIVE_SMS""&gt;
</code></pre>

<p>When I had those settings, android gave me some crazy permissions exceptions that didn't allow android.phone to hand off the received SMS to my intent.  So, DO NOT put that RECEIVE_SMS permission attribute in your intent!  Hopefully someone wiser than me can tell me why that was the case.</p>
"
"419184","851165","20","<p>So, I had a play, and it <em>is</em> possible to delete a received SMS.
Unfortunately it's not all plain sailing :(</p>

<p>I have a receiver that picks up on incoming SMS messages.  Now the way the Android SMS incoming routing works is that the piece of code responsible for decoding the messages sends a Broadcast (it uses the <code>sendBroadcast()</code> method - which unfortunately is NOT the version that lets you simply call <code>abortBroadcast()</code>) whenever a message arrives.</p>

<p>My receiver may or may not be called before the Systems SMS receiver, and in any case the received broadcast has no property that could reflect the <code>_id</code> column in the SMS table.</p>

<p>However, not being one to be stopped that easily I post myself (via a Handler) a delayed message with the SmsMessage as the attached object.  (I suppose you could post yourself a Runnable too...)</p>

<pre><code>handler.sendMessageDelayed(handler.obtainMessage(MSG_DELETE_SMS, msg), 2500);
</code></pre>

<p>The delay is there to ensure that by the time the message arrives all of the Broadcast receivers will have finished their stuff and the message will be safely ensconced in the SMS table.</p>

<p>When the message (or Runnable) is received here is what I do:</p>

<pre><code>case MSG_DELETE_SMS:
    Uri deleteUri = Uri.parse(""content://sms"");
    SmsMessage msg = (SmsMessage)message.obj;

    getContentResolver().delete(deleteUri, ""address=? and date=?"", new String[] {msg.getOriginatingAddress(), String.valueOf(msg.getTimestampMillis())});
</code></pre>

<p>I use the originating address and timestamp field to ensure a very high probability of deleting ONLY the message I am interested in.  If I wanted to be even more paranoid I could include the <code>msg.getMessageBody()</code> content as part of the query.</p>

<p>Yes, the message IS deleted (hooray!).
Unfortunately the notification bar is not updated :(</p>

<p>When you open up the notification area you'll see the message sitting there for you... but when you tap on it to open it up - it's gone!</p>

<p>To me, this isn't quite good enough - I want all trace of the message to disappear - I don't want the user to think there is a TXT when there isn't (that would only cause bug reports).</p>

<p>Internally in the OS the phone calls <code>MessagingNotification.updateNewMessageIndicator(Context)</code>, but I that class has been hidden from the API, and I did not want to replicate all of that code just for the sake of making the indicator accurate.</p>
"
"419184","986554","2","<p>I couldn't get it to work using dmyung's solution, it gave me an exception when getting either the message id or thread id.</p>

<p>In the end, I've used the following method to get the thread id:</p>

<pre><code>private long getThreadId(Context context) {
	long threadId = 0;

	String SMS_READ_COLUMN = ""read"";
    String WHERE_CONDITION = SMS_READ_COLUMN + "" = 0"";
    String SORT_ORDER = ""date DESC"";
    int count = 0;

    Cursor cursor = context.getContentResolver().query(
                    SMS_INBOX_CONTENT_URI,
          new String[] { ""_id"", ""thread_id"", ""address"", ""person"", ""date"", ""body"" },
                    WHERE_CONDITION,
                    null,
                    SORT_ORDER);

    if (cursor != null) {
            try {
                count = cursor.getCount();
                if (count &gt; 0) {
                    cursor.moveToFirst();
                    threadId = cursor.getLong(1);                              
                }
            } finally {
                    cursor.close();
            }
    }


	return threadId;
}
</code></pre>

<p>Then I could delete it. However, as Doug said, the notification is still there, even the message is displayed when opening the notification panel. Only when tapping the message I could actually see that it's empty. </p>

<p>So I guess the only way this would work would be to actually somehow intercept the SMS before it's delivered to the system, before it even reaches the inbox. However, I highly doubt this is doable. Please correct me if I'm wrong.</p>
"
"419184","4545437","0","<p>You just try the following code.It will delete all the sms that are all in phone (Received or Sent)</p>

<pre><code>Uri uri = Uri.parse(""content://sms"");

ContentResolver contentResolver = getContentResolver();

Cursor cursor = contentResolver.query(uri, null, null, null,
  null);



while (cursor.moveToNext()) {

 long thread_id = cursor.getLong(1);
 Uri thread = Uri.parse(""content://sms/conversations/""
   + thread_id);
 getContentResolver().delete(thread, null, null);
}
</code></pre>
"
"419184","4765829","0","<p>Sample for deleting one SMS, not conversation:</p>

<pre><code>getContentResolver().delete(Uri.parse(""content://sms/conversations/"" + threadID), ""_id = ?"", new String[]{id});
</code></pre>
"
"419184","6211214","65","<p>""As of Android 1.6, incoming SMS message broadcasts (<code>android.provider.Telephony.SMS_RECEIVED</code>) are delivered as an ""ordered broadcast"" — meaning that you can tell the system which components should receive the broadcast first.""</p>

<p>This means that you can intercept incoming message and abort broadcasting of it further on.</p>

<p>In your <code>AndroidManifest.xml</code> file, make sure to have priority set to highest:</p>

<pre><code>&lt;receiver android:name="".receiver.SMSReceiver"" android:enabled=""true""&gt;
    &lt;intent-filter android:priority=""1000""&gt;
        &lt;action android:name=""android.provider.Telephony.SMS_RECEIVED"" /&gt;
    &lt;/intent-filter&gt;
&lt;/receiver&gt;
</code></pre>

<p>In your <code>BroadcastReceiver</code>, in <code>onReceive()</code> method, before performing anything with your message, simply call <code>abortBroadcast();</code></p>

<p>EDIT: As of KitKat, this doesn't work anymore apparently.</p>

<p>EDIT2: More info on how to do it on KitKat here:</p>

<p><a href=""http://stackoverflow.com/questions/25988574/delete-sms-from-android-on-4-4-4-affected-rows-0zero-after-deleted"">Delete SMS from android on 4.4.4 (Affected rows = 0(Zero), after deleted)</a></p>
"
"419184","6981892","1","<p>Also update the manifest file as to delete an sms you need write permissions.</p>

<pre><code>&lt;uses-permission android:name=""android.permission.WRITE_SMS""/&gt;
</code></pre>
"
"419184","7078523","5","<p>Its better to use the _id and thread_id to delete a message.</p>

<p>Thread_id is something assigned to the messages coming from same user.
So, if you use only thread_id, all the messages from the sender will get deleted.</p>

<p>If u use the combination of _id, thread_id, then it will delete the exact message you are looking to delete.</p>

<pre><code>Uri thread = Uri.parse( ""content://sms"");
int deleted = contentResolver.delete( thread, ""thread_id=? and _id=?"", new String[]{String.valueOf(thread_id), String.valueOf(id)} );
</code></pre>
"
"419184","11310771","0","<p>Now <code>abortBroadcast();</code> method can be used for restricting the incoming message to go to inbox.</p>
"
"419184","13806604","0","<p>Use one of this method to select the last received SMS and delete it, here in this case i am getting the top most sms and going to delete using thread and id value of sms, </p>

<pre><code>         try
        {
        Uri uri = Uri.parse(""content://sms/inbox"");         
        Cursor c =v.getContext().getContentResolver().query(uri, null, null ,null,null); 
        int i=c.getCount();

        if(c.moveToFirst()) 
        {}
        }
        catch(CursorIndexOutOfBoundsException ee)
            {
             Toast.makeText(v.getContext(), ""Error :""+ ee.getMessage() ,Toast.LENGTH_LONG).show();
            }
</code></pre>
"
"419184","13895140","8","<pre><code>public boolean deleteSms(String smsId) {
        boolean isSmsDeleted = false;
        try {
            mActivity.getContentResolver().delete(
                    Uri.parse(""content://sms/"" + smsId), null, null);
            isSmsDeleted = true;

        } catch (Exception ex) {
            isSmsDeleted = false;
        }
        return isSmsDeleted;
    }
</code></pre>

<p>use this permission in AndroidManifiest</p>

<pre><code>&lt;uses-permission android:name=""android.permission.WRITE_SMS""/&gt;
</code></pre>
"
"419184","18591311","0","<p>Try this i am 100% sure this will work fine:-
//just put conversion address here for delete whole conversion by address(don't forgot to add read,write permission in mainfest)
Here is Code:</p>

<p>String address=""put address only"";</p>

<pre><code>Cursor c = getApplicationContext().getContentResolver().query(Uri.parse(""content://sms/""), new String[] { ""_id"", ""thread_id"", ""address"", ""person"",
                                                                      ""date"", ""body"" }, null, null, null);

    try {
        while (c.moveToNext()) {
            int id = c.getInt(0);
            String address = c.getString(2);
            if(address.equals(address)){
            getApplicationContext().getContentResolver().delete(Uri.parse(""content://sms/"" + id), null, null);}
        }

    }catch(Exception e){

    }
</code></pre>
"
"419184","19357199","0","<pre><code>@Override
    protected void onListItemClick(ListView l, View v, int position, long id) {
        SMSData sms = (SMSData) getListAdapter().getItem(position);
        Toast.makeText(getApplicationContext(), sms.getBody(),
                Toast.LENGTH_LONG).show();
        Toast.makeText(getApplicationContext(), sms.getNumber(),
                Toast.LENGTH_LONG).show();

        deleteSms(sms.getId());

    }

    public boolean deleteSms(String smsId) {
        boolean isSmsDeleted = false;
        try {
            MainActivity.this.getContentResolver().delete(
                    Uri.parse(""content://sms/"" + smsId), null, null);
            isSmsDeleted = true;

        } catch (Exception ex) {
            isSmsDeleted = false;
        }
        return isSmsDeleted;
    }
</code></pre>
"
"419184","22424045","1","<p><strong>Use this function to delete specific message thread or modify according your needs:</strong></p>

<pre><code>public void delete_thread(String thread) 
{ 
  Cursor c = getApplicationContext().getContentResolver().query(
  Uri.parse(""content://sms/""),new String[] { 
  ""_id"", ""thread_id"", ""address"", ""person"", ""date"",""body"" }, null, null, null);

 try {
  while (c.moveToNext()) 
      {
    int id = c.getInt(0);
    String address = c.getString(2);
    if (address.equals(thread)) 
        {
     getApplicationContext().getContentResolver().delete(
     Uri.parse(""content://sms/"" + id), null, null);
    }

       }
} catch (Exception e) {

  }
}
</code></pre>

<p><strong>Call this function simply below:</strong></p>

<pre><code>delete_thread(""54263726"");//you can pass any number or thread id here
</code></pre>

<p><strong>Don't forget to add android mainfest permission below:</strong></p>

<pre><code>&lt;uses-permission android:name=""android.permission.WRITE_SMS""/&gt;
</code></pre>
"
"454315","456941","112","<p>Use the standard Java DateFormat class.</p>

<p>For example to display the current date and time do the following:</p>

<pre><code>Date date = new Date(location.getTime());
DateFormat dateFormat = android.text.format.DateFormat.getDateFormat(getApplicationContext());
mTimeText.setText(""Time: "" + dateFormat.format(date));
</code></pre>

<p>You can initialise a Date object with your own values, however you should be aware that the constructors have been deprecated and you should really be using a Java Calendar object.</p>
"
"454315","3401023","12","<p>This will do it: </p>

<pre><code>Date date = new Date();
java.text.DateFormat dateFormat =
    android.text.format.DateFormat.getDateFormat(getApplicationContext());
mTimeText.setText(""Time: "" + dateFormat.format(date));
</code></pre>
"
"454315","3930115","77","<p>In my opinion, <code>android.text.format.DateFormat.getDateFormat(context)</code> makes me confused because this method returns <code>java.text.DateFormat</code> rather than <code>android.text.format.DateFormat</code> - -"".</p>

<p>So, I use the fragment code as below to get the current date in my format.</p>

<pre><code>android.text.format.DateFormat df = new android.text.format.DateFormat();
df.format(""yyyy-MM-dd hh:mm:ss"", new java.util.Date());

or

android.text.format.DateFormat.format(""yyyy-MM-dd hh:mm:ss"", new java.util.Date());
</code></pre>

<p>In addition, you can use others formats. Follow <em><a href=""http://developer.android.com/reference/android/text/format/DateFormat.html"">DateFormat</a></em>.</p>
"
"454315","6842958","4","<p>This code would return the current date and time:</p>

<pre><code>public String getCurrDate()
{
    String dt;
    Date cal = Calendar.getInstance().getTime();
    dt = cal.toLocaleString();
    return dt;
}
</code></pre>
"
"454315","9867761","1","<p>Try:</p>

<pre><code>event.putExtra(""startTime"", ""10/05/2012"");
</code></pre>

<p>And when you are accessing passed variables:</p>

<pre><code>SimpleDateFormat formatter = new SimpleDateFormat(""dd/MM/yyyy"");
Date date = formatter.parse(bundle.getString(""startTime""));
</code></pre>
"
"454315","11167219","4","<p>Use these two as a class variables:</p>

<pre><code> public java.text.DateFormat dateFormat = new SimpleDateFormat(""dd/MM/yyyy"");
 private Calendar mDate = null;
</code></pre>

<p>And use it like this:</p>

<pre><code> mDate = Calendar.getInstance();
 mDate.set(year,months,day);                   
 dateFormat.format(mDate.getTime());
</code></pre>
"
"454315","13928593","8","<p><strong>Use SimpleDateFormat</strong></p>

<p>Like this:</p>

<pre><code>event.putExtra(""starttime"", ""12/18/2012"");

SimpleDateFormat format = new SimpleDateFormat(""MM/dd/yyyy"");
Date date = format.parse(bundle.getString(""starttime""));
</code></pre>
"
"454315","14359251","8","<p>Use build in Time class!</p>

<pre><code>Time time = new Time();
time.set(0, 0, 17, 4, 5, 1999);
Log.i(""DateTime"", time.format(""%d.%m.%Y %H:%M:%S""));
</code></pre>
"
"454315","18529339","0","<p>The android Time class provides 3 formatting methods <a href=""http://developer.android.com/reference/android/text/format/Time.html"" rel=""nofollow"">http://developer.android.com/reference/android/text/format/Time.html</a></p>

<p>This is how I did it:</p>

<pre><code>/**
* This method will format the data from the android Time class (eg. myTime.setToNow())   into the format
* Date: dd.mm.yy Time: hh.mm.ss
*/
private String formatTime(String time)
{
    String fullTime= """";
    String[] sa = new String[2];

    if(time.length()&gt;1)
    {
        Time t = new Time(Time.getCurrentTimezone());
        t.parse(time);
        // or t.setToNow();
        String formattedTime = t.format(""%d.%m.%Y %H.%M.%S"");
        int x = 0;

        for(String s : formattedTime.split(""\\s"",2))
        {   
            System.out.println(""Value = "" + s);
            sa[x] = s;
            x++;
        }
        fullTime = ""Date: "" + sa[0] + "" Time: "" + sa[1];
    }
    else{
        fullTime = ""No time data"";
    }
    return fullTime;
}
</code></pre>

<p>I hope thats helpful :-)</p>
"
"454315","19823960","1","<p>I use it like this:</p>

<pre><code>public class DateUtils {
    static DateUtils instance;
    private final DateFormat dateFormat;
    private final DateFormat timeFormat;

    private DateUtils() {
        dateFormat = android.text.format.DateFormat.getDateFormat(MainApplication.context);
        timeFormat = android.text.format.DateFormat.getTimeFormat(MainApplication.context);
    }

    public static DateUtils getInstance() {
        if (instance == null) {
            instance = new DateUtils();
        }
        return instance;
    }

    public synchronized static String formatDateTime(long timestamp) {
        long milliseconds = timestamp * 1000;
        Date dateTime = new Date(milliseconds);
        String date = getInstance().dateFormat.format(dateTime);
        String time = getInstance().timeFormat.format(dateTime);
        return date + "" "" + time;
    }
}
</code></pre>
"
"454315","20936275","9","<p>Following this: <a href=""http://developer.android.com/reference/android/text/format/Time.html"">http://developer.android.com/reference/android/text/format/Time.html</a></p>

<p>Is better to use Android native Time class:</p>

<pre><code>Time now = new Time();
now.setToNow();
</code></pre>

<p>Then format:</p>

<pre><code>Log.d(""DEBUG"", ""Time ""+now.format(""%d.%m.%Y %H.%M.%S""));
</code></pre>
"
"454315","23019434","2","<p>This is my method, you can define and input and output format.</p>

<pre><code>public static String formattedDateFromString(String inputFormat, String outputFormat, String inputDate){
    if(inputFormat.equals("""")){ // if inputFormat = """", set a default input format.
        inputFormat = ""yyyy-MM-dd hh:mm:ss"";
    }
    if(outputFormat.equals("""")){
        outputFormat = ""EEEE d 'de' MMMM 'del' yyyy""; // if inputFormat = """", set a default output format.
    }
    Date parsed = null;
    String outputDate = """";

    SimpleDateFormat df_input = new SimpleDateFormat(inputFormat, java.util.Locale.getDefault());
    SimpleDateFormat df_output = new SimpleDateFormat(outputFormat, java.util.Locale.getDefault());

    // You can set a different Locale, This example set a locale of Country Mexico.
    //SimpleDateFormat df_input = new SimpleDateFormat(inputFormat, new Locale(""es"", ""MX""));
    //SimpleDateFormat df_output = new SimpleDateFormat(outputFormat, new Locale(""es"", ""MX""));

    try {
        parsed = df_input.parse(inputDate);
        outputDate = df_output.format(parsed);
    } catch (Exception e) { 
        Log.e(""formattedDateFromString"", ""Exception in formateDateFromstring(): "" + e.getMessage());
    }
    return outputDate;

}
</code></pre>
"
"454315","25211092","0","<h1>Avoid j.u.Date</h1>

<p>The Java.util.Date and .Calendar and SimpleDateFormat in Java (and Android) are notoriously troublesome. Avoid them. They are so bad that Sun/Oracle gave up on them, supplanting them with the new java.time package in Java 8 (not in Android as of 2014). The new <a href=""http://docs.oracle.com/javase/8/docs/api/java/time/package-summary.html"" rel=""nofollow""><code>java.time</code></a> was inspired by the <a href=""http://www.joda.org/joda-time/"" rel=""nofollow"">Joda-Time</a> library.</p>

<h1>Joda-Time</h1>

<p><a href=""http://www.joda.org/joda-time/"" rel=""nofollow"">Joda-Time</a> does work in Android.</p>

<p>Search StackOverflow for ""Joda"" to find many examples and much discussion.</p>

<p>A tidbit of source code using Joda-Time 2.4.</p>

<p>Standard format.</p>

<pre><code>String output = DateTime.now().toString(); 
// Current date-time in user's default time zone with a String representation formatted to the ISO 8601 standard.
</code></pre>

<p>Localized format.</p>

<pre><code>String output = DateTimeFormat.forStyle( ""FF"" ).print( DateTime.now() ); 
// Full (long) format localized for this user's language and culture.
</code></pre>
"
"477572","552403","17","<p>I did the following to take the image and resize it on the fly. Hope this helps</p>

<pre><code> Bitmap bm;
 bm = Bitmap.createScaledBitmap(BitmapFactory.decodeFile(filepath),100, 100, true);
 mPicture = new ImageView(context);
 mPicture.setImageBitmap(bm);
</code></pre>
"
"477572","823966","575","<p>To fix OutOfMemory you should do something like that:</p>

<pre><code>BitmapFactory.Options options=new BitmapFactory.Options();
options.inSampleSize = 8;
Bitmap preview_bitmap=BitmapFactory.decodeStream(is,null,options);
</code></pre>

<p>This inSampleSize option reduces memory consumption.</p>

<p>Here's a complete method. First it reads image size without decoding the content itself. Then it finds the best inSampleSize value, it should be a power of 2. And finally the image is decoded.</p>

<pre><code>//decodes image and scales it to reduce memory consumption
private Bitmap decodeFile(File f){
    try {
        //Decode image size
        BitmapFactory.Options o = new BitmapFactory.Options();
        o.inJustDecodeBounds = true;
        BitmapFactory.decodeStream(new FileInputStream(f),null,o);

        //The new size we want to scale to
        final int REQUIRED_SIZE=70;

        //Find the correct scale value. It should be the power of 2.
        int scale=1;
        while(o.outWidth/scale/2&gt;=REQUIRED_SIZE &amp;&amp; o.outHeight/scale/2&gt;=REQUIRED_SIZE)
            scale*=2;

        //Decode with inSampleSize
        BitmapFactory.Options o2 = new BitmapFactory.Options();
        o2.inSampleSize=scale;
        return BitmapFactory.decodeStream(new FileInputStream(f), null, o2);
    } catch (FileNotFoundException e) {}
    return null;
}
</code></pre>
"
"477572","3549021","245","<p>I've made a small improvement to Fedor's code. It basically does the same, but without the (in my opinion) ugly while loop and it always results in a power of two. Kudos to Fedor for making the original solution, I was stuck until I found his, and then I was able to make this one :)</p>

<pre><code> private Bitmap decodeFile(File f){
    Bitmap b = null;

        //Decode image size
    BitmapFactory.Options o = new BitmapFactory.Options();
    o.inJustDecodeBounds = true;

    FileInputStream fis = new FileInputStream(f);
    BitmapFactory.decodeStream(fis, null, o);
    fis.close();

    int scale = 1;
    if (o.outHeight &gt; IMAGE_MAX_SIZE || o.outWidth &gt; IMAGE_MAX_SIZE) {
        scale = (int)Math.pow(2, (int) Math.ceil(Math.log(IMAGE_MAX_SIZE / 
           (double) Math.max(o.outHeight, o.outWidth)) / Math.log(0.5)));
    }

    //Decode with inSampleSize
    BitmapFactory.Options o2 = new BitmapFactory.Options();
    o2.inSampleSize = scale;
    fis = new FileInputStream(f);
    b = BitmapFactory.decodeStream(fis, null, o2);
    fis.close();

    return b;
}
</code></pre>
"
"477572","4117431","8","<p>Use this <code>bitmap.recycle();</code> Its solve the problem 100%. Without any image quality issue.</p>
"
"477572","6062032","18","<p>It seems that this is a very long running problem, with a lot of differing explanations.  I took the advice of the two most common presented answers here, but neither one of these solved my problems of the VM claiming it couldn't afford the bytes to perform the <strong>decoding</strong> part of the process.  After some digging I learned that the real problem here is the decoding process taking away from the <strong>NATIVE</strong> heap.  </p>

<p>See here: <a href=""http://stackoverflow.com/questions/1955410/bitmapfactory-oom-driving-me-nuts/5493182#5493182"">BitmapFactory OOM driving me nuts</a></p>

<p>That lead me to another discussion thread where I found a couple more solutions to this problem.  One is to call<code>System.gc();</code> manually after your image is displayed.  But that actually makes your app use MORE memory, in an effort to reduce the native heap.  The better solution as of the release of 2.0 (Donut) is to use the BitmapFactory option ""inPurgeable"".  So I simply added <code>o2.inPurgeable=true;</code> just after <code>o2.inSampleSize=scale;</code>.</p>

<p>More on that topic here: <a href=""http://groups.google.com/group/android-developers/browse_thread/thread/146a3a354ce3e8e3/61e113036089d696"">Is the limit of memory heap only 6M? </a></p>

<p>Now, having said all of this, I am a complete dunce with Java and Android too.  So if you think this is a terrible way to solve this problem, you are probably right.  ;-)  But this has worked wonders for me, and I have found it impossible to run the VM out of heap cache now.  The only drawback I can find is that you are trashing your cached drawn image.  Which means if you go RIGHT back to that image, you are redrawing it each and every time.  In the case of how my application works, that is not really a problem.  Your mileage may vary.</p>
"
"477572","6116316","36","<p>It's a <a href=""http://code.google.com/p/android/issues/detail?id=8488"" rel=""nofollow"">known bug</a>, it's not because of large files. Since Android Caches the Drawables, it's going out of memory after using few images. But I've found an alternate way for it, by skipping the android default cache system.</p>

<p><strong>Solution</strong>:
Move the images to ""assets"" folder and use the following function to get BitmapDrawable:</p>

<pre><code>public static Drawable getAssetImage(Context context, String filename) throws IOException {
    AssetManager assets = context.getResources().getAssets();
    InputStream buffer = new BufferedInputStream((assets.open(""drawable/"" + filename + "".png"")));
    Bitmap bitmap = BitmapFactory.decodeStream(buffer);
    return new BitmapDrawable(context.getResources(), bitmap);
}
</code></pre>
"
"477572","6235991","8","<p>I have resolved the same issue in the following manner.</p>

<pre><code>Bitmap b = null;
        Drawable d;
        ImageView i = new ImageView(mContext);
        try 
        {
            b = Bitmap.createBitmap(320,424,Bitmap.Config.RGB_565);
            b.eraseColor(0xFFFFFFFF);
            Rect r = new Rect(0, 0,320 , 424);
            Canvas c = new Canvas(b);
            Paint p = new Paint();
            p.setColor(0xFFC0C0C0);
            c.drawRect(r, p);
            d = mContext.getResources().getDrawable(mImageIds[position]);
            d.setBounds(r);
            d.draw(c);

         /*   BitmapFactory.Options o2 = new BitmapFactory.Options();
            o2.inTempStorage = new byte[128*1024];
            b = BitmapFactory.decodeStream(mContext.getResources().openRawResource(mImageIds[position]), null, o2);
            o2.inSampleSize=16;
            o2.inPurgeable = true;*/
        }
        catch (Exception e){}
        i.setImageBitmap(b);
</code></pre>
"
"477572","7116158","34","<p>I had this same issue and solved it by avoiding the BitmapFactory.decodeStream or decodeFile functions and instead used BitmapFactory.decodeFileDescriptor</p>

<p>decodeFileDescriptor looks like it calls different native methods than the decodeStream/decodeFile.</p>

<p>Anyway what worked was this (note that I added some options as some had above, but that's not what made the difference. What is critical is the call to <strong>Bitmap.decodeFileDescriptor</strong> instead of <strong>decodeStream</strong> or <strong>decodeFile</strong>):</p>

<pre><code>private void showImage(String path)   {
    Log.i(""showImage"",""loading:""+path);
    BitmapFactory.Options bfOptions=new BitmapFactory.Options();
    bfOptions.inDither=false;                     //Disable Dithering mode
    bfOptions.inPurgeable=true;                   //Tell to gc that whether it needs free memory, the Bitmap can be cleared
    bfOptions.inInputShareable=true;              //Which kind of reference will be used to recover the Bitmap data after being clear, when it will be used in the future
    bfOptions.inTempStorage=new byte[32 * 1024]; 


    File file=new File(path);
    FileInputStream fs=null;
    try {
        fs = new FileInputStream(file);
    } catch (FileNotFoundException e) {
        //TODO do something intelligent
        e.printStackTrace();
    }

    try {
        if(fs!=null) bm=BitmapFactory.decodeFileDescriptor(fs.getFD(), null, bfOptions);
    } catch (IOException e) {
        //TODO do something intelligent
        e.printStackTrace();
    } finally{ 
        if(fs!=null) {
            try {
                fs.close();
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
    }
    //bm=BitmapFactory.decodeFile(path, bfOptions); This one causes error: java.lang.OutOfMemoryError: bitmap size exceeds VM budget

    im.setImageBitmap(bm);
    //bm.recycle();
    bm=null;



}
</code></pre>

<p>I think there is a problem with the native function used in decodeStream/decodeFile. I have confirmed that a different native method is called when using decodeFileDescriptor.  Also what I've read is ""that Images (Bitmaps) are not allocated in a standard Java way but via native calls; the allocations are done outside of the virtual heap, but are
<strong><em>counted against it!</em></strong>""</p>
"
"477572","8415366","9","<p>None of the answers above worked for me, but I did come up with a horribly ugly workaround that solved the problem. I added a very small, 1x1 pixel image to my project as a resource, and loaded it into my ImageView before calling into garbage collection. I think it might be that the ImageView was not releasing the Bitmap, so GC never picked it up. It's ugly, but it seems to be working for now.</p>

<pre><code>if (bitmap != null)
{
  bitmap.recycle();
  bitmap = null;
}
if (imageView != null)
{
  imageView.setImageResource(R.drawable.tiny); // This is my 1x1 png.
}
System.gc();

imageView.setImageBitmap(...); // Do whatever you need to do to load the image you want.
</code></pre>
"
"477572","8527745","140","<p>I come from iOS experience and I was frustrated to discover such a pathetic issue with something so basic as loading and showing an image. After all, everyone that is having this issue is trying to display reasonably sized images. Anyway, here are the two changes that fixed my problem (and made my app very responsive).</p>

<p>1) Every time you do <code>BitmapFactory.decodeXYZ()</code>, make sure to pass in a <code>BitmapFactory.Options</code> with <code>inPurgeable</code> set to <code>true</code> (and preferably with <code>inInputShareable</code> also set to <code>true</code>).</p>

<p>2) NEVER use <code>Bitmap.createBitmap(width, height, Config.ARGB_8888)</code>. I mean NEVER! I've never had that thing not raise memory error after few passes. No amount of <code>recycle()</code>, <code>System.gc()</code>, whatever helped. It always raised exception. The one other way that actually works is to have a dummy image in your drawables (or another Bitmap that you decoded using step 1 above), rescale that to whatever you want, then manipulate the resulting Bitmap (such as passing it on to a Canvas for more fun). So, what you should use instead is: <code>Bitmap.createScaledBitmap(srcBitmap, width, height, false)</code>. If for whatever reason you MUST use the brute force create method, then at least pass <code>Config.ARGB_4444</code>. </p>

<p>This is almost guaranteed to save you hours if not days. All that talk about scaling the image, etc. does not really work (unless you consider getting wrong size or degraded image a solution). </p>

<p>But google, seriously?</p>
"
"477572","9436548","7","<p>I just ran into this issue a couple minutes ago. I solved it by doing a better job at managing my listview adapter. I thought it was an issue with the hundreds of 50x50px images I was using, turns out I was trying to inflate my custom view each time the row was being shown. Simply by testing to see if the row had been inflated I eliminated this error, and I am using hundreds of bitmaps. This is actually for a Spinner, but the base adapter works all the same for a ListView. This simple fix also greatly improved the performance of the adapter.  </p>

<pre><code>@Override
public View getView(final int position, View convertView, final ViewGroup parent) {

    if(convertView == null){
        LayoutInflater inflater = (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        convertView = inflater.inflate(R.layout.spinner_row, null);
    }
...
</code></pre>
"
"477572","9896387","7","<p>I've spent the entire day testing these solutions and the only thing that worked for me is the above approaches for getting the image and manually calling the GC, which I know is not supposed to be necessary, but it is the only thing that worked when I put my app under heavy load testing switching between activities.  My app has a list of thumbnail images in a listview in (lets say activity A) and when you click on one of those images it takes you to another activity (lets say activity B) that shows a main image for that item.  When I would switch back and forth between the two activities, I would eventually get the OOM error and the app would force close.  </p>

<p>When I would get half way down the listview it would crash.</p>

<p>Now when I implement the following in activity B, I can go through the entire listview with no issue and keep going and going and going...and its plenty fast.</p>

<pre><code>@Override
public void onDestroy()
{   
    Cleanup();
    super.onDestroy();
}

private void Cleanup()
{    
    bitmap.recycle();
    System.gc();
    Runtime.getRuntime().gc();  
}
</code></pre>
"
"477572","10127787","180","<p>The <a href=""http://developer.android.com/training/index.html"">Android Training</a> class, ""<a href=""http://developer.android.com/training/displaying-bitmaps/index.html"">Displaying Bitmaps Efficiently</a>"", offers some great information for understanding and dealing with the exception <code>java.lang.OutOfMemoryError: bitmap size exceeds VM budget</code> when loading Bitmaps.</p>
"
"477572","10964402","9","<p>This worked for me!</p>

<pre><code>public Bitmap readAssetsBitmap(String filename) throws IOException {
        try {
            BitmapFactory.Options options = new BitmapFactory.Options(); 
            options.inPurgeable = true;
            Bitmap bitmap = BitmapFactory.decodeStream(assets.open(filename), null, options);
            if(bitmap == null) {
                throw new IOException(""File cannot be opened: It's value is null"");
            }
            else {
                return bitmap;
            }
        } catch (IOException e) {
            throw new IOException(""File cannot be opened: "" + e.getMessage());
        }

    }
</code></pre>
"
"477572","12107692","24","<p>I have seen a lot of questions about OOM exceptions and caching lately. The developer guide has <a href=""http://developer.android.com/training/displaying-bitmaps/cache-bitmap.html"" rel=""nofollow"">a really good article</a> on this, but some tends to fail on implementing it in a suitable way. </p>

<p>Because of this I wrote an example application that demonstrates caching in an Android environment. This implementation has not yet gotten an OOM.</p>

<p>Look at the end of this answer for a link to the source code.</p>

<h2>Requirements:</h2>

<ul>
<li>Android API 2.1 or higher (I simply could not manage to get the available memory for an application in API 1.6 - that is the only piece of code that doesn't work in API 1.6)</li>
<li><a href=""http://developer.android.com/tools/extras/support-library.html"" rel=""nofollow"">Android support package</a></li>
</ul>

<p><img src=""http://i.stack.imgur.com/cjk99.png"" alt=""Screenshot""></p>

<h2>Features:</h2>

<ul>
<li><em>Retains the cache if there is an orientation change</em>, using a singleton</li>
<li>Use <em>one eighth</em> of the assigned application memory to the cache (modify if you want) </li>
<li>Large bitmaps <em>gets scaled</em> (you can define the maximum pixels that you want to allow)</li>
<li>Controls <em>that there is an internet connection available</em> before downloading the bitmaps</li>
<li>Makes sure that you are only instantiating <em>one task</em> per row</li>
<li>If <em>you are flinging</em> the <code>ListView</code> away, it simply won't download the bitmaps between</li>
</ul>

<h2>This does not include:</h2>

<ul>
<li>Disk caching. This should be easy to implement anyway - just point to a different task that grabs the bitmaps from the disk</li>
</ul>

<h2>Sample code:</h2>

<p>The images that are being downloaded are images (75x75) from Flickr. However, put whatever image urls you want to be processed, and the application will scale it down if it exceeds the maximum. In this application the urls are simply in a <code>String</code> array.</p>

<p>The <a href=""http://developer.android.com/reference/android/util/LruCache.html"" rel=""nofollow""><code>LruCache</code></a> has a good way to deal with bitmaps. However, in this application I put an instance of an <code>LruCache</code> inside another cache class that I created in order to get the application more feasible.</p>

<p>Cache.java's critical stuff (the <code>loadBitmap()</code> method is the most important):</p>

<pre><code>public Cache(int size, int maxWidth, int maxHeight) {
    // Into the constructor you add the maximum pixels
    // that you want to allow in order to not scale images.
    mMaxWidth = maxWidth;
    mMaxHeight = maxHeight;

    mBitmapCache = new LruCache&lt;String, Bitmap&gt;(size) {
        protected int sizeOf(String key, Bitmap b) {
            // Assuming that one pixel contains four bytes.
            return b.getHeight() * b.getWidth() * 4;
        }
    };

    mCurrentTasks = new ArrayList&lt;String&gt;();    
}

/**
 * Gets a bitmap from cache. 
 * If it is not in cache, this method will:
 * 
 * 1: check if the bitmap url is currently being processed in the
 * BitmapLoaderTask and cancel if it is already in a task (a control to see
 * if it's inside the currentTasks list).
 * 
 * 2: check if an internet connection is available and continue if so.
 * 
 * 3: download the bitmap, scale the bitmap if necessary and put it into
 * the memory cache.
 * 
 * 4: Remove the bitmap url from the currentTasks list.
 * 
 * 5: Notify the ListAdapter.
 * 
 * @param mainActivity - Reference to activity object, in order to
 * call notifyDataSetChanged() on the ListAdapter.
 * @param imageKey - The bitmap url (will be the key).
 * @param imageView - The ImageView that should get an
 * available bitmap or a placeholder image.
 * @param isScrolling - If set to true, we skip executing more tasks since
 * the user probably has flinged away the view.
 */
public void loadBitmap(MainActivity mainActivity, 
        String imageKey, ImageView imageView,
        boolean isScrolling) {
    final Bitmap bitmap = getBitmapFromCache(imageKey); 

    if (bitmap != null) {
        imageView.setImageBitmap(bitmap);
    } else {
        imageView.setImageResource(R.drawable.ic_launcher);
        if (!isScrolling &amp;&amp; !mCurrentTasks.contains(imageKey) &amp;&amp; 
                mainActivity.internetIsAvailable()) {
            BitmapLoaderTask task = new BitmapLoaderTask(imageKey,
                    mainActivity.getAdapter());
            task.execute();
        }
    } 
}
</code></pre>

<p>You shouldn't need to edit anything in the Cache.java file unless you want to implement disk caching.</p>

<p>MainActivity.java's critical stuff:</p>

<pre><code>public void onScrollStateChanged(AbsListView view, int scrollState) {
    if (view.getId() == android.R.id.list) {
        // Set scrolling to true only if the user has flinged the       
        // ListView away, hence we skip downloading a series
        // of unnecessary bitmaps that the user probably
        // just want to skip anyways. If we scroll slowly it
        // will still download bitmaps - that means
        // that the application won't wait for the user
        // to lift its finger off the screen in order to
        // download.
        if (scrollState == SCROLL_STATE_FLING) {
            mIsScrolling = true;
        } else {
            mIsScrolling = false;
            mListAdapter.notifyDataSetChanged();
        }
    } 
}

// Inside ListAdapter...
@Override
public View getView(final int position, View convertView, ViewGroup parent) {           
    View row = convertView;
    final ViewHolder holder;

    if (row == null) {
        LayoutInflater inflater = getLayoutInflater();
        row = inflater.inflate(R.layout.main_listview_row, parent, false);  
        holder = new ViewHolder(row);
        row.setTag(holder);
    } else {
        holder = (ViewHolder) row.getTag();
    }   

    final Row rowObject = getItem(position);

    // Look at the loadBitmap() method description...
    holder.mTextView.setText(rowObject.mText);      
    mCache.loadBitmap(MainActivity.this,
            rowObject.mBitmapUrl, holder.mImageView,
            mIsScrolling);  

    return row;
}
</code></pre>

<p><code>getView()</code> gets called very often. It's normally not a good idea to download images there if we haven't implemented a check that ensure us that we won't start an infinite amount of threads per row. Cache.java checks whether the <code>rowObject.mBitmapUrl</code> already is in a task and if it is, it won't start another. Therefore, we are most likely not exceeding the work queue restriction from the <code>AsyncTask</code> pool.</p>

<h2>Download:</h2>

<p>You can download the source code from <a href=""https://www.dropbox.com/s/pvr9zyl811tfeem/ListViewImageCache.zip"" rel=""nofollow"">https://www.dropbox.com/s/pvr9zyl811tfeem/ListViewImageCache.zip</a>.</p>

<hr>

<h2>Last words:</h2>

<p>I have tested this for a few weeks now, I haven't gotten a single OOM exception yet. I have tested this on the emulator, on my Nexus One and on my Nexus S. I have tested image urls that contain images that were in HD quality. The only bottleneck is that it takes more time to download.</p>

<p>There is only one possible scenario where I can imagine that the OOM will appear, and that is if we download many, really big images, and before they get scaled and put into cache, will simultaneously take up more memory and cause an OOM. But that isn't even an ideal situation anyway and it most likely won't be possible to solve in a more feasible way.</p>

<p>Report errors in the comments! :-)</p>
"
"477572","12688726","8","<p>This works for me.</p>

<pre><code>Bitmap myBitmap;

BitmapFactory.Options options = new BitmapFactory.Options(); 
options.InPurgeable = true;
options.OutHeight = 50;
options.OutWidth = 50;
options.InSampleSize = 4;

File imgFile = new File(filepath);
myBitmap = BitmapFactory.DecodeFile(imgFile.AbsolutePath, options);
</code></pre>

<p>and this is on C# monodroid.
you can easily change the path of the image. what important here is the options to be set.</p>
"
"477572","13157505","5","<p>This code will help to load large bitmap from drawable</p>

<pre><code>public class BitmapUtilsTask extends AsyncTask&lt;Object, Void, Bitmap&gt; {

Context context;

public BitmapUtilsTask(Context context) {
    this.context = context;
}

/**
 * Loads a bitmap from the specified url.
 * 
 * @param url The location of the bitmap asset
 * @return The bitmap, or null if it could not be loaded
 * @throws IOException
 * @throws MalformedURLException
 */
public Bitmap getBitmap() throws MalformedURLException, IOException {       

    // Get the source image's dimensions
    int desiredWidth = 1000;
    BitmapFactory.Options options = new BitmapFactory.Options();
    options.inJustDecodeBounds = true;

    BitmapFactory.decodeResource(context.getResources(), R.drawable.green_background , options);

    int srcWidth = options.outWidth;
    int srcHeight = options.outHeight;

    // Only scale if the source is big enough. This code is just trying
    // to fit a image into a certain width.
    if (desiredWidth &gt; srcWidth)
        desiredWidth = srcWidth;

    // Calculate the correct inSampleSize/scale value. This helps reduce
    // memory use. It should be a power of 2
    int inSampleSize = 1;
    while (srcWidth / 2 &gt; desiredWidth) {
        srcWidth /= 2;
        srcHeight /= 2;
        inSampleSize *= 2;
    }
    // Decode with inSampleSize
    options.inJustDecodeBounds = false;
    options.inDither = false;
    options.inSampleSize = inSampleSize;
    options.inScaled = false;
    options.inPreferredConfig = Bitmap.Config.ARGB_8888;
    options.inPurgeable = true;
    Bitmap sampledSrcBitmap;

    sampledSrcBitmap =  BitmapFactory.decodeResource(context.getResources(), R.drawable.green_background , options);

    return sampledSrcBitmap;
}

/**
 * The system calls this to perform work in a worker thread and delivers
 * it the parameters given to AsyncTask.execute()
 */
@Override
protected Bitmap doInBackground(Object... item) {

    try 
    { 
      return getBitmap();
    } catch (MalformedURLException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }
    return null;
 }
</code></pre>

<p>}</p>
"
"477572","13204525","5","<p>This seems like the appropriate place to share my utility class for loading and processing images with the community, you are welcome to use it and modify it freely.</p>

<pre><code>package com.emil;

import java.io.IOException;
import java.io.InputStream;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;

/**
 * A class to load and process images of various sizes from input streams and file paths.
 * 
 * @author Emil http://stackoverflow.com/users/220710/emil
 *
 */
public class ImageProcessing {

    public static Bitmap getBitmap(InputStream stream, int sampleSize, Bitmap.Config bitmapConfig) throws IOException{
        BitmapFactory.Options options=ImageProcessing.getOptionsForSampling(sampleSize, bitmapConfig);
        Bitmap bm = BitmapFactory.decodeStream(stream,null,options);
        if(ImageProcessing.checkDecode(options)){
            return bm;
        }else{
            throw new IOException(""Image decoding failed, using stream."");
        }
    }

    public static Bitmap getBitmap(String imgPath, int sampleSize, Bitmap.Config bitmapConfig) throws IOException{
        BitmapFactory.Options options=ImageProcessing.getOptionsForSampling(sampleSize, bitmapConfig);
        Bitmap bm = BitmapFactory.decodeFile(imgPath,options);
        if(ImageProcessing.checkDecode(options)){
            return bm;
        }else{
            throw new IOException(""Image decoding failed, using file path."");
        }
    }

    public static Dimensions getDimensions(InputStream stream) throws IOException{
        BitmapFactory.Options options=ImageProcessing.getOptionsForDimensions();
        BitmapFactory.decodeStream(stream,null,options);
        if(ImageProcessing.checkDecode(options)){
            return new ImageProcessing.Dimensions(options.outWidth,options.outHeight);
        }else{
            throw new IOException(""Image decoding failed, using stream."");
        }
    }

    public static Dimensions getDimensions(String imgPath) throws IOException{
        BitmapFactory.Options options=ImageProcessing.getOptionsForDimensions();
        BitmapFactory.decodeFile(imgPath,options);
        if(ImageProcessing.checkDecode(options)){
            return new ImageProcessing.Dimensions(options.outWidth,options.outHeight);
        }else{
            throw new IOException(""Image decoding failed, using file path."");
        }
    }

    private static boolean checkDecode(BitmapFactory.Options options){
        // Did decode work?
        if( options.outWidth&lt;0 || options.outHeight&lt;0 ){
            return false;
        }else{
            return true;
        }
    }

    /**
     * Creates a Bitmap that is of the minimum dimensions necessary
     * @param bm
     * @param min
     * @return
     */
    public static Bitmap createMinimalBitmap(Bitmap bm, ImageProcessing.Minimize min){
        int newWidth, newHeight;
        switch(min.type){
        case WIDTH:
            if(bm.getWidth()&gt;min.minWidth){
                newWidth=min.minWidth;
                newHeight=ImageProcessing.getScaledHeight(newWidth, bm);
            }else{
                // No resize
                newWidth=bm.getWidth();
                newHeight=bm.getHeight();
            }
            break;
        case HEIGHT:
            if(bm.getHeight()&gt;min.minHeight){
                newHeight=min.minHeight;
                newWidth=ImageProcessing.getScaledWidth(newHeight, bm);
            }else{
                // No resize
                newWidth=bm.getWidth();
                newHeight=bm.getHeight();
            }
            break;
        case BOTH: // minimize to the maximum dimension
        case MAX:
            if(bm.getHeight()&gt;bm.getWidth()){
                // Height needs to minimized
                min.minDim=min.minDim!=null ? min.minDim : min.minHeight;
                if(bm.getHeight()&gt;min.minDim){
                    newHeight=min.minDim;
                    newWidth=ImageProcessing.getScaledWidth(newHeight, bm);
                }else{
                    // No resize
                    newWidth=bm.getWidth();
                    newHeight=bm.getHeight();
                }
            }else{
                // Width needs to be minimized
                min.minDim=min.minDim!=null ? min.minDim : min.minWidth;
                if(bm.getWidth()&gt;min.minDim){
                    newWidth=min.minDim;
                    newHeight=ImageProcessing.getScaledHeight(newWidth, bm);
                }else{
                    // No resize
                    newWidth=bm.getWidth();
                    newHeight=bm.getHeight();
                }
            }
            break;
        default:
            // No resize
            newWidth=bm.getWidth();
            newHeight=bm.getHeight();
        }
        return Bitmap.createScaledBitmap(bm, newWidth, newHeight, true);
    }

    public static int getScaledWidth(int height, Bitmap bm){
        return (int)(((double)bm.getWidth()/bm.getHeight())*height);
    }

    public static int getScaledHeight(int width, Bitmap bm){
        return (int)(((double)bm.getHeight()/bm.getWidth())*width);
    }

    /**
     * Get the proper sample size to meet minimization restraints
     * @param dim
     * @param min
     * @param multipleOf2 for fastest processing it is recommended that the sample size be a multiple of 2
     * @return
     */
    public static int getSampleSize(ImageProcessing.Dimensions dim, ImageProcessing.Minimize min, boolean multipleOf2){
        switch(min.type){
        case WIDTH:
            return ImageProcessing.getMaxSampleSize(dim.width, min.minWidth, multipleOf2);
        case HEIGHT:
            return ImageProcessing.getMaxSampleSize(dim.height, min.minHeight, multipleOf2);
        case BOTH:
            int widthMaxSampleSize=ImageProcessing.getMaxSampleSize(dim.width, min.minWidth, multipleOf2);
            int heightMaxSampleSize=ImageProcessing.getMaxSampleSize(dim.height, min.minHeight, multipleOf2);
            // Return the smaller of the two
            if(widthMaxSampleSize&lt;heightMaxSampleSize){
                return widthMaxSampleSize;
            }else{
                return heightMaxSampleSize;
            }
        case MAX:
            // Find the larger dimension and go bases on that
            if(dim.width&gt;dim.height){
                return ImageProcessing.getMaxSampleSize(dim.width, min.minDim, multipleOf2);
            }else{
                return ImageProcessing.getMaxSampleSize(dim.height, min.minDim, multipleOf2);
            }
        }
        return 1;
    }

    public static int getMaxSampleSize(int dim, int min, boolean multipleOf2){
        int add=multipleOf2 ? 2 : 1;
        int size=0;
        while(min&lt;(dim/(size+add))){
            size+=add;
        }
        size = size==0 ? 1 : size;
        return size;        
    }

    public static class Dimensions {
        int width;
        int height;

        public Dimensions(int width, int height) {
            super();
            this.width = width;
            this.height = height;
        }

        @Override
        public String toString() {
            return width+"" x ""+height;
        }
    }

    public static class Minimize {
        public enum Type {
            WIDTH,HEIGHT,BOTH,MAX
        }
        Integer minWidth;
        Integer minHeight;
        Integer minDim;
        Type type;

        public Minimize(int min, Type type) {
            super();
            this.type = type;
            switch(type){
            case WIDTH:
                this.minWidth=min;
                break;
            case HEIGHT:
                this.minHeight=min;
                break;
            case BOTH:
                this.minWidth=min;
                this.minHeight=min;
                break;
            case MAX:
                this.minDim=min;
                break;
            }
        }

        public Minimize(int minWidth, int minHeight) {
            super();
            this.type=Type.BOTH;
            this.minWidth = minWidth;
            this.minHeight = minHeight;
        }

    }

    /**
     * Estimates size of Bitmap in bytes depending on dimensions and Bitmap.Config
     * @param width
     * @param height
     * @param config
     * @return
     */
    public static long estimateBitmapBytes(int width, int height, Bitmap.Config config){
        long pixels=width*height;
        switch(config){
        case ALPHA_8: // 1 byte per pixel
            return pixels;
        case ARGB_4444: // 2 bytes per pixel, but depreciated
            return pixels*2;
        case ARGB_8888: // 4 bytes per pixel
            return pixels*4;
        case RGB_565: // 2 bytes per pixel
            return pixels*2;
        default:
            return pixels;
        }
    }

    private static BitmapFactory.Options getOptionsForDimensions(){
        BitmapFactory.Options options = new BitmapFactory.Options();
        options.inJustDecodeBounds=true;
        return options;
    }

    private static BitmapFactory.Options getOptionsForSampling(int sampleSize, Bitmap.Config bitmapConfig){
        BitmapFactory.Options options = new BitmapFactory.Options();
        options.inJustDecodeBounds = false;
        options.inDither = false;
        options.inSampleSize = sampleSize;
        options.inScaled = false;
        options.inPreferredConfig = bitmapConfig;
        return options;
    }
}
</code></pre>
"
"477572","13656169","27","<p>I think best way to avoid the <code>OutOfMemoryError</code> is to face it and understand it.</p>

<p>I made an <a href=""https://play.google.com/store/apps/details?id=net.coocood.oomresearch"">app</a> to intentionally cause <code>OutOfMemoryError</code>, and monitor memory usage.</p>

<p>After I've done a lot of experiments with this App, I've got the following conclusions:</p>

<p>I'm gonna talk about SDK versions before Honey Comb first.</p>

<ol>
<li><p>Bitmap is stored in native heap, but it will get garbage collected automatically, calling recycle() is needless.</p></li>
<li><p>If {VM heap size} + {allocated native heap memory} >= {VM heap size limit for the device}, and you are trying to create bitmap, OOM will be thrown.</p>

<p>NOTICE: VM HEAP SIZE is counted rather than VM ALLOCATED MEMORY.</p></li>
<li><p>VM Heap size will never shrink after grown, even if the allocated VM memory is shrinked. </p></li>
<li><p>So you have to keep the peak VM memory as low as possible to keep VM Heap Size from growing too big to save available memory for Bitmaps.</p></li>
<li><p>Manually call System.gc() is meaningless, the system will call it first before trying to grow the heap size.</p></li>
<li><p>Native Heap Size will never shrink too, but it's not counted for OOM, so no need to worry about it.</p></li>
</ol>

<p>Then, let's talk about SDK Starts from Honey Comb.</p>

<ol>
<li><p>Bitmap is stored in VM heap, Native memory is not counted for OOM.</p></li>
<li><p>The condition for OOM is much simpler: {VM heap size} >= {VM heap size limit for the device}. </p></li>
<li><p>So you have more available memory to create bitmap with the same heap size limit,  OOM is less likely to be thrown.</p></li>
</ol>

<p>Here is some of my observations about Garbage Collection and Memory Leak.</p>

<p>You can see it yourself in the App. If an Activity executed an AsyncTask that was still running after the Activity was destroyed, the Activity will not get garbage collected until the AsyncTask finish.</p>

<p>This is because AsyncTask is an instance of an anonymous inner class, it holds a reference of the Activity.</p>

<p>Calling AsyncTask.cancel(true) will not stop the execution if the task is blocked in an IO operation in background thread.</p>

<p>Callbacks are anonymous inner classes too, so if a static instance in your project holds them and do not release them, memory would be leaked.</p>

<p>If you scheduled a repeating or delayed task, for example a Timer, and you do not call cancel() and purge() in onPause(), memory would be leaked.</p>
"
"477572","13792186","2","<p>I tried Thomas Vervest's approach, but it returns a scale of 1 for image size 2592x1944 when IMAGE_MAX_SIZE is 2048.</p>

<p>This version worked for me based on all the other comments provided by others:</p>

<pre><code>private Bitmap decodeFile (File f) {
    Bitmap b = null;
    try {
        // Decode image size
        BitmapFactory.Options o = new BitmapFactory.Options ();
        o.inJustDecodeBounds = true;

        FileInputStream fis = new FileInputStream (f);
        try {
            BitmapFactory.decodeStream (fis, null, o);
        } finally {
            fis.close ();
        }

        int scale = 1;
        for (int size = Math.max (o.outHeight, o.outWidth); 
            (size&gt;&gt;(scale-1)) &gt; IMAGE_MAX_SIZE; ++scale);

        // Decode with inSampleSize
        BitmapFactory.Options o2 = new BitmapFactory.Options ();
        o2.inSampleSize = scale;
        fis = new FileInputStream (f);
        try {
            b = BitmapFactory.decodeStream (fis, null, o2);
        } finally {
            fis.close ();
        }
    } catch (IOException e) {
    }
    return b;
}
</code></pre>
"
"477572","14673834","6","<p>Great answers here, but I wanted a <strong>fully usable class</strong> to address this problem.. so I did one.</p>

<p>Here is my <strong>BitmapHelper class</strong> that is OutOfMemoryError proof :-)</p>

<pre><code>import java.io.File;
import java.io.FileInputStream;

import android.graphics.Bitmap;
import android.graphics.Bitmap.Config;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Matrix;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;

public class BitmapHelper
{

    //decodes image and scales it to reduce memory consumption
    public static Bitmap decodeFile(File bitmapFile, int requiredWidth, int requiredHeight, boolean quickAndDirty)
    {
        try
        {
            //Decode image size
            BitmapFactory.Options bitmapSizeOptions = new BitmapFactory.Options();
            bitmapSizeOptions.inJustDecodeBounds = true;
            BitmapFactory.decodeStream(new FileInputStream(bitmapFile), null, bitmapSizeOptions);

            // load image using inSampleSize adapted to required image size
            BitmapFactory.Options bitmapDecodeOptions = new BitmapFactory.Options();
            bitmapDecodeOptions.inTempStorage = new byte[16 * 1024];
            bitmapDecodeOptions.inSampleSize = computeInSampleSize(bitmapSizeOptions, requiredWidth, requiredHeight, false);
            bitmapDecodeOptions.inPurgeable = true;
            bitmapDecodeOptions.inDither = !quickAndDirty;
            bitmapDecodeOptions.inPreferredConfig = quickAndDirty ? Bitmap.Config.RGB_565 : Bitmap.Config.ARGB_8888;

            Bitmap decodedBitmap = BitmapFactory.decodeStream(new FileInputStream(bitmapFile), null, bitmapDecodeOptions);

            // scale bitmap to mathc required size (and keep aspect ratio)

            float srcWidth = (float) bitmapDecodeOptions.outWidth;
            float srcHeight = (float) bitmapDecodeOptions.outHeight;

            float dstWidth = (float) requiredWidth;
            float dstHeight = (float) requiredHeight;

            float srcAspectRatio = srcWidth / srcHeight;
            float dstAspectRatio = dstWidth / dstHeight;

            // recycleDecodedBitmap is used to know if we must recycle intermediary 'decodedBitmap'
            // (DO NOT recycle it right away: wait for end of bitmap manipulation process to avoid
            // java.lang.RuntimeException: Canvas: trying to use a recycled bitmap android.graphics.Bitmap@416ee7d8
            // I do not excatly understand why, but this way it's OK

            boolean recycleDecodedBitmap = false;

            Bitmap scaledBitmap = decodedBitmap;
            if (srcAspectRatio &lt; dstAspectRatio)
            {
                scaledBitmap = getScaledBitmap(decodedBitmap, (int) dstWidth, (int) (srcHeight * (dstWidth / srcWidth)));
                // will recycle recycleDecodedBitmap
                recycleDecodedBitmap = true;
            }
            else if (srcAspectRatio &gt; dstAspectRatio)
            {
                scaledBitmap = getScaledBitmap(decodedBitmap, (int) (srcWidth * (dstHeight / srcHeight)), (int) dstHeight);
                recycleDecodedBitmap = true;
            }

            // crop image to match required image size

            int scaledBitmapWidth = scaledBitmap.getWidth();
            int scaledBitmapHeight = scaledBitmap.getHeight();

            Bitmap croppedBitmap = scaledBitmap;

            if (scaledBitmapWidth &gt; requiredWidth)
            {
                int xOffset = (scaledBitmapWidth - requiredWidth) / 2;
                croppedBitmap = Bitmap.createBitmap(scaledBitmap, xOffset, 0, requiredWidth, requiredHeight);
                scaledBitmap.recycle();
            }
            else if (scaledBitmapHeight &gt; requiredHeight)
            {
                int yOffset = (scaledBitmapHeight - requiredHeight) / 2;
                croppedBitmap = Bitmap.createBitmap(scaledBitmap, 0, yOffset, requiredWidth, requiredHeight);
                scaledBitmap.recycle();
            }

            if (recycleDecodedBitmap)
            {
                decodedBitmap.recycle();
            }
            decodedBitmap = null;

            scaledBitmap = null;
            return croppedBitmap;
        }
        catch (Exception ex)
        {
            ex.printStackTrace();
        }
        return null;
    }

    /**
     * compute powerOf2 or exact scale to be used as {@link BitmapFactory.Options#inSampleSize} value (for subSampling)
     * 
     * @param requiredWidth
     * @param requiredHeight
     * @param powerOf2
     *            weither we want a power of 2 sclae or not
     * @return
     */
    public static int computeInSampleSize(BitmapFactory.Options options, int dstWidth, int dstHeight, boolean powerOf2)
    {
        int inSampleSize = 1;

        // Raw height and width of image
        final int srcHeight = options.outHeight;
        final int srcWidth = options.outWidth;

        if (powerOf2)
        {
            //Find the correct scale value. It should be the power of 2.

            int tmpWidth = srcWidth, tmpHeight = srcHeight;
            while (true)
            {
                if (tmpWidth / 2 &lt; dstWidth || tmpHeight / 2 &lt; dstHeight)
                    break;
                tmpWidth /= 2;
                tmpHeight /= 2;
                inSampleSize *= 2;
            }
        }
        else
        {
            // Calculate ratios of height and width to requested height and width
            final int heightRatio = Math.round((float) srcHeight / (float) dstHeight);
            final int widthRatio = Math.round((float) srcWidth / (float) dstWidth);

            // Choose the smallest ratio as inSampleSize value, this will guarantee
            // a final image with both dimensions larger than or equal to the
            // requested height and width.
            inSampleSize = heightRatio &lt; widthRatio ? heightRatio : widthRatio;
        }

        return inSampleSize;
    }

    public static Bitmap drawableToBitmap(Drawable drawable)
    {
        if (drawable instanceof BitmapDrawable)
        {
            return ((BitmapDrawable) drawable).getBitmap();
        }

        Bitmap bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), Config.ARGB_8888);
        Canvas canvas = new Canvas(bitmap);
        drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
        drawable.draw(canvas);

        return bitmap;
    }

    public static Bitmap getScaledBitmap(Bitmap bitmap, int newWidth, int newHeight)
    {
        int width = bitmap.getWidth();
        int height = bitmap.getHeight();
        float scaleWidth = ((float) newWidth) / width;
        float scaleHeight = ((float) newHeight) / height;

        // CREATE A MATRIX FOR THE MANIPULATION
        Matrix matrix = new Matrix();
        // RESIZE THE BIT MAP
        matrix.postScale(scaleWidth, scaleHeight);

        // RECREATE THE NEW BITMAP
        Bitmap resizedBitmap = Bitmap.createBitmap(bitmap, 0, 0, width, height, matrix, false);
        return resizedBitmap;
    }

}
</code></pre>
"
"477572","14731953","5","<p>In one of my application i need to take picture either from <code>Camera/Gallery</code>. If user click image from Camera(may be 2MP, 5MP or 8MP), image size varies from <code>kB</code>s to <code>MB</code>s. If image size is less(or up to 1-2MB) above code working fine but if i have image of size above 4MB or 5MB then <code>OOM</code> comes in frame :(</p>

<p>then i have worked to solve this issue &amp; finally i've made the below improvement to Fedor's(All Credit to Fedor for making such a nice solution) code :)</p>

<pre><code>private Bitmap decodeFile(String fPath) {
    // Decode image size
    BitmapFactory.Options opts = new BitmapFactory.Options();
    /*
     * If set to true, the decoder will return null (no bitmap), but the
     * out... fields will still be set, allowing the caller to query the
     * bitmap without having to allocate the memory for its pixels.
     */
    opts.inJustDecodeBounds = true;
    opts.inDither = false; // Disable Dithering mode
    opts.inPurgeable = true; // Tell to gc that whether it needs free
                                // memory, the Bitmap can be cleared
    opts.inInputShareable = true; // Which kind of reference will be used to
                                    // recover the Bitmap data after being
                                    // clear, when it will be used in the
                                    // future

    BitmapFactory.decodeFile(fPath, opts);

    // The new size we want to scale to
    final int REQUIRED_SIZE = 70;

    // Find the correct scale value. 
    int scale = 1;

    if (opts.outHeight &gt; REQUIRED_SIZE || opts.outWidth &gt; REQUIRED_SIZE) {

        // Calculate ratios of height and width to requested height and width
        final int heightRatio = Math.round((float) opts.outHeight
                / (float) REQUIRED_SIZE);
        final int widthRatio = Math.round((float) opts.outWidth
                / (float) REQUIRED_SIZE);

        // Choose the smallest ratio as inSampleSize value, this will guarantee
        // a final image with both dimensions larger than or equal to the
        // requested height and width.
        scale = heightRatio &lt; widthRatio ? heightRatio : widthRatio;//
    }

    // Decode bitmap with inSampleSize set
    opts.inJustDecodeBounds = false;

    opts.inSampleSize = scale;

    Bitmap bm = BitmapFactory.decodeFile(fPath, opts).copy(
            Bitmap.Config.RGB_565, false);

    return bm;

}
</code></pre>

<p>I hope this will help the buddies facing the same problem!</p>

<p>for more please refer <a href=""http://developer.android.com/training/displaying-bitmaps/load-bitmap.html""><em>this</em></a></p>
"
"477572","15698823","-3","<p>After setting an bitmap to imageview, recycle it like this:</p>

<pre><code>bitmap.recycle();
bitmap=null;
</code></pre>
"
"477572","17638009","3","<p>My 2 cents: i solved my OOM errors with bitmaps by:</p>

<p>a) scaling my images by a factor of 2</p>

<p>b) using <a href=""http://square.github.io/picasso/"" rel=""nofollow"" title=""Picasso"">Picasso</a> library in my custom Adapter for a ListView, with a one-call in getView like this: <code>Picasso.with(context).load(R.id.myImage).into(R.id.myImageView);</code></p>
"
"477572","17833438","1","<pre><code>          BitmapFactory.Options options = new Options();
        options.inSampleSize = 32;
        //img = BitmapFactory.decodeFile(imageids[position], options);

        Bitmap theImage = BitmapFactory.decodeStream(imageStream,null, options);
        Bitmap img=theImage.copy(Bitmap.Config.RGB_565,true);
        theImage.recycle();
        theImage = null;
        System.gc();
        //ivlogdp.setImageBitmap(img);
        Runtime.getRuntime().gc();
</code></pre>
"
"477572","18503779","0","<p>use this concept this will help you, After that set the imagebitmap on image view</p>

<pre><code>public static Bitmap convertBitmap(String path)   {

        Bitmap bitmap=null;
        BitmapFactory.Options bfOptions=new BitmapFactory.Options();
        bfOptions.inDither=false;                     //Disable Dithering mode
        bfOptions.inPurgeable=true;                   //Tell to gc that whether it needs free memory, the Bitmap can be cleared
        bfOptions.inInputShareable=true;              //Which kind of reference will be used to recover the Bitmap data after being clear, when it will be used in the future
        bfOptions.inTempStorage=new byte[32 * 1024]; 


        File file=new File(path);
        FileInputStream fs=null;
        try {
            fs = new FileInputStream(file);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }

        try {
            if(fs!=null)
            {
                bitmap=BitmapFactory.decodeFileDescriptor(fs.getFD(), null, bfOptions);
            }
            } catch (IOException e) {

            e.printStackTrace();
        } finally{ 
            if(fs!=null) {
                try {
                    fs.close();
                } catch (IOException e) {

                    e.printStackTrace();
                }
            }
        }

        return bitmap;
    }
</code></pre>

<p>If you want to make a small image from large image with height and width like 60 and 60 and scroll the listview fast then use this concept</p>

<pre><code>public static Bitmap decodeSampledBitmapFromPath(String path, int reqWidth,
            int reqHeight) {

        final BitmapFactory.Options options = new BitmapFactory.Options();
        options.inJustDecodeBounds = true;
        BitmapFactory.decodeFile(path, options);

        options.inSampleSize = calculateInSampleSize(options, reqWidth,
                reqHeight);

        // Decode bitmap with inSampleSize set
        options.inJustDecodeBounds = false;
        Bitmap bmp = BitmapFactory.decodeFile(path, options);
        return bmp;
        }

    public static int calculateInSampleSize(BitmapFactory.Options options,
            int reqWidth, int reqHeight) {

        final int height = options.outHeight;
        final int width = options.outWidth;
        int inSampleSize = 1;

        if (height &gt; reqHeight || width &gt; reqWidth) {
            if (width &gt; height) {
                inSampleSize = Math.round((float) height / (float) reqHeight);
            } else {
                inSampleSize = Math.round((float) width / (float) reqWidth);
             }
         }
         return inSampleSize;
        }
</code></pre>

<p>I hope it will help you much.</p>

<p>You can take help from developer site <a href=""http://developer.android.com/training/displaying-bitmaps/load-bitmap.html"" rel=""nofollow"">Here</a></p>
"
"477572","18544069","2","<p>All the solutions here require setting a IMAGE_MAX_SIZE. This limits devices with more powerful hardware and if the image size is too low it looks ugly on the HD screen.</p>

<p>I came out with a solution that works with my Samsung Galaxy S3 and several other devices including less powerful ones, with better image quality when a more powerful device is used.</p>

<p>The gist of it is to calculate the maximum memory allocated for the app on a particular device, then set the scale to be lowest possible without exceeding this memory. Here's the code:</p>

<pre><code>public static Bitmap decodeFile(File f)
{
    Bitmap b = null;
    try
    {
        // Decode image size
        BitmapFactory.Options o = new BitmapFactory.Options();
        o.inJustDecodeBounds = true;

        FileInputStream fis = new FileInputStream(f);
        try
        {
            BitmapFactory.decodeStream(fis, null, o);
        }
        finally
        {
            fis.close();
        }

        // In Samsung Galaxy S3, typically max memory is 64mb
        // Camera max resolution is 3264 x 2448, times 4 to get Bitmap memory of 30.5mb for one bitmap
        // If we use scale of 2, resolution will be halved, 1632 x 1224 and x 4 to get Bitmap memory of 7.62mb
        // We try use 25% memory which equals to 16mb maximum for one bitmap
        long maxMemory = Runtime.getRuntime().maxMemory();
        int maxMemoryForImage = (int) (maxMemory / 100 * 25);

        // Refer to
        // http://developer.android.com/training/displaying-bitmaps/cache-bitmap.html
        // A full screen GridView filled with images on a device with
        // 800x480 resolution would use around 1.5MB (800*480*4 bytes)
        // When bitmap option's inSampleSize doubled, pixel height and
        // weight both reduce in half
        int scale = 1;
        while ((o.outWidth / scale) * (o.outHeight / scale) * 4 &gt; maxMemoryForImage)
        scale *= 2;

        // Decode with inSampleSize
        BitmapFactory.Options o2 = new BitmapFactory.Options();
        o2.inSampleSize = scale;
        fis = new FileInputStream(f);
        try
        {
            b = BitmapFactory.decodeStream(fis, null, o2);
        }
        finally
        {
            fis.close();
        }
    }
    catch (IOException e)
    {
    }
    return b;
}
</code></pre>

<p>I set the maximum memory used by this bitmap to be 25% of maximum allocated memory, you may need to adjust this to your needs and make sure this bitmap is cleaned up and don't stay in memory when you've finished using it. Typically I use this code to perform image rotation (source and destination bitmap) so my app needs to load 2 bitmaps in memory at the same time, and 25% gives me a good buffer without running out of memory when performing image rotation.</p>

<p>Hope this helps someone out there..</p>
"
"477572","20397338","0","<p>Hi Please visit the  link <a href=""http://developer.android.com/training/displaying-bitmaps/index.html"" rel=""nofollow"">http://developer.android.com/training/displaying-bitmaps/index.html</a></p>

<p>or just try to retrieve bitmap with the given function</p>

<pre><code>private Bitmap decodeBitmapFile (File f) {
    Bitmap bitmap = null;
    try {
        // Decode image size
        BitmapFactory.Options o = new BitmapFactory.Options ();
        o.inJustDecodeBounds = true;

        FileInputStream fis = new FileInputStream (f);
        try {
            BitmapFactory.decodeStream (fis, null, o);
        } finally {
            fis.close ();
        }

        int scale = 1;
        for (int size = Math.max (o.outHeight, o.outWidth); 
            (size&gt;&gt;(scale-1)) &gt; IMAGE_MAX_SIZE; ++scale);

        // Decode with input-stram SampleSize
        BitmapFactory.Options o2 = new BitmapFactory.Options ();
        o2.inSampleSize = scale;
        fis = new FileInputStream (f);
        try {
            bitmap  = BitmapFactory.decodeStream (fis, null, o2);
        } finally {
            fis.close ();
        }
    } catch (IOException e) {
    }
    return bitmap ;
}
</code></pre>
"
"477572","20718356","0","<p>To fix OutOfMemory you should do something like that please try this code</p>

<pre><code>public Bitmap loadBitmap(String URL, BitmapFactory.Options options) {
                Bitmap bitmap = null;
                InputStream in = null;
                options.inSampleSize=4;
                try {
                    in = OpenHttpConnection(URL);
                    Log.e(""In====&gt;"", in+"""");
                    bitmap = BitmapFactory.decodeStream(in, null, options);
                    Log.e(""URL====&gt;"", bitmap+"""");

                    in.close();
                } catch (IOException e1) {
                }
                return bitmap;
            }
</code></pre>

<p>and</p>

<pre><code>try {
                    BitmapFactory.Options bmOptions;
                    bmOptions = new BitmapFactory.Options();
                    bmOptions.inSampleSize = 1;
                    if(studentImage != null){
                        galleryThumbnail= loadBitmap(IMAGE_URL+studentImage, bmOptions);    
                    }

                    galleryThumbnail=getResizedBitmap(galleryThumbnail, imgEditStudentPhoto.getHeight(), imgEditStudentPhoto.getWidth());
                    Log.e(""Image_Url==&gt;"",IMAGE_URL+studentImage+"""");

                } catch (Exception e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
</code></pre>
"
"477572","21333347","1","<p>use these code for every image in select from SdCard or drewable to convert bitmap object.</p>

<pre><code>Resources res = getResources();
WindowManager window = (WindowManager) getSystemService(Context.WINDOW_SERVICE);
Display display = window.getDefaultDisplay();
@SuppressWarnings(""deprecation"")
int width = display.getWidth();
@SuppressWarnings(""deprecation"")
int height = display.getHeight();
try {
        if (bitmap != null) {
            bitmap.recycle();
            bitmap = null;
            System.gc();
        }
bitmap = Bitmap.createScaledBitmap(BitmapFactory
                .decodeFile(ImageData_Path.get(img_pos).getPath()),
                width, height, true);
} catch (OutOfMemoryError e) {
        if (bitmap != null) {
            bitmap.recycle();
            bitmap = null;
            System.gc();
        }
        BitmapFactory.Options options = new BitmapFactory.Options();
        options.inPreferredConfig = Config.RGB_565;
        options.inSampleSize = 1;
        options.inPurgeable = true;
        bitmapBitmap.createScaledBitmap(BitmapFactory.decodeFile(ImageData_Path.get(img_pos)
.getPath().toString(), options), width, height,true);
}
return bitmap;
}
</code></pre>

<p>use your image path instend of <strong>ImageData_Path.get(img_pos).getPath()</strong> .</p>
"
"531427","2888607","92","<p>There are ways to make this a more generic solution, if that suits your needs.</p>

<p>For example, if you want to generically have all list preferences show their choice as summary, you could have this for your <code>onSharedPreferenceChanged</code> implementation:</p>

<pre><code>public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
    Preference pref = findPreference(key);

    if (pref instanceof ListPreference) {
        ListPreference listPref = (ListPreference) pref;
        pref.setSummary(listPref.getEntry());
    }
}
</code></pre>

<p>This is easily extensible to other preference classes.</p>

<p>And by using the <code>getPreferenceCount</code> and <code>getPreference</code> functionality in <code>PreferenceScreen</code> and <code>PreferenceCategory</code>, you could easily write a generic function to walk the preference tree setting the summaries of all preferences of the types you desire to their <code>toString</code> representation</p>
"
"531427","2932703","5","<p>Thanks, Reto, for the detailed explanation!</p>

<p>In case this is of any help to anyone, I had to change the code proposed by Reto Meier to make it work with the SDK for Android 1.5</p>

<pre><code>@Override
protected void onResume() {
    super.onResume();

    // Setup the initial values
    mListPreference.setSummary(""Current value is "" + mListPreference.getEntry().toString()); 

    // Set up a listener whenever a key changes            
    ...
}
</code></pre>

<p>The same change applies for the callback function <code>onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key)</code> </p>

<p>Cheers,</p>

<p>Chris</p>
"
"531427","4147631","12","<p>This is the code you need to set the summary to the chosen value. It also sets the values on startup and respects the default values, not only on change. Just change ""R.layout.prefs"" to your xml-file and extend the setSummary-method to your needs. It actually is only handling ListPreferences, but it is easy to customize to respect other Preferences.</p>

<pre><code>package de.koem.timetunnel;

import android.content.SharedPreferences;
import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
import android.os.Bundle;
import android.preference.ListPreference;
import android.preference.Preference;
import android.preference.PreferenceActivity;
import android.preference.PreferenceGroup;

public class Prefs 
    extends PreferenceActivity 
    implements OnSharedPreferenceChangeListener {

   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);

    this.addPreferencesFromResource(R.layout.prefs);
    this.initSummaries(this.getPreferenceScreen());

    this.getPreferenceScreen().getSharedPreferences()
      .registerOnSharedPreferenceChangeListener(this);
    }

  /**
    * Set the summaries of all preferences
    */
  private void initSummaries(PreferenceGroup pg) {
    for (int i = 0; i &lt; pg.getPreferenceCount(); ++i) {
    Preference p = pg.getPreference(i);
    if (p instanceof PreferenceGroup)
      this.initSummaries((PreferenceGroup) p); // recursion
    else
      this.setSummary(p);
    }
  }

  /**
    * Set the summaries of the given preference
    */
  private void setSummary(Preference pref) {
    // react on type or key
      if (pref instanceof ListPreference) {
      ListPreference listPref = (ListPreference) pref;
      pref.setSummary(listPref.getEntry());
      }
  }

  /**
    * used to change the summary of a preference
    */
  public void onSharedPreferenceChanged(SharedPreferences sp, String key) {
    Preference pref = findPreference(key);
    this.setSummary(pref);
  }

// private static final String LOGTAG = ""Prefs"";
}
</code></pre>

<p>koem</p>
"
"531427","4238588","6","<p>Thanks for this tip!</p>

<p>I have one preference screen and want to show the value for each list preference as the summary.</p>

<p>This is my way now:</p>

<pre><code>public class Preferences extends PreferenceActivity implements OnSharedPreferenceChangeListener {

@Override
protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        addPreferencesFromResource(R.xml.preferences);
}

@Override
protected void onResume() {
    super.onResume();

    // Set up initial values for all list preferences
    Map&lt;String, ?&gt; sharedPreferencesMap = getPreferenceScreen().getSharedPreferences().getAll();
    Preference pref;
    ListPreference listPref;
    for (Map.Entry&lt;String, ?&gt; entry : sharedPreferencesMap.entrySet()) {
        pref = findPreference(entry.getKey());
        if (pref instanceof ListPreference) {
            listPref = (ListPreference) pref;
            pref.setSummary(listPref.getEntry());
        }
    }

    // Set up a listener whenever a key changes            
    getPreferenceScreen().getSharedPreferences().registerOnSharedPreferenceChangeListener(this);
}

@Override
protected void onPause() {
    super.onPause();

    // Unregister the listener whenever a key changes            
    getPreferenceScreen().getSharedPreferences().unregisterOnSharedPreferenceChangeListener(this);    
}

public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
    Preference pref = findPreference(key);

    if (pref instanceof ListPreference) {
        ListPreference listPref = (ListPreference) pref;
        pref.setSummary(listPref.getEntry());
    }
}
</code></pre>

<p>This works for me, but I'm wondering what is the best solution (performance, stability, scalibility): the one Koem is showing or this one?</p>
"
"531427","4325239","78","<p>Here is my solution... FWIW</p>

<pre><code>package com.example.PrefTest;

import android.content.SharedPreferences;
import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
import android.os.Bundle;
import android.preference.EditTextPreference;
import android.preference.ListPreference;
import android.preference.Preference;
import android.preference.PreferenceActivity;
import android.preference.PreferenceGroup;
import android.preference.PreferenceManager;

public class Preferences extends PreferenceActivity implements
        OnSharedPreferenceChangeListener {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        addPreferencesFromResource(R.xml.preferences);
        PreferenceManager.setDefaultValues(Preferences.this, R.xml.preferences,
            false);
        initSummary(getPreferenceScreen());
    }

    @Override
    protected void onResume() {
        super.onResume();
        // Set up a listener whenever a key changes
        getPreferenceScreen().getSharedPreferences()
                .registerOnSharedPreferenceChangeListener(this);
    }

    @Override
    protected void onPause() {
        super.onPause();
        // Unregister the listener whenever a key changes
        getPreferenceScreen().getSharedPreferences()
                .unregisterOnSharedPreferenceChangeListener(this);
    }

    public void onSharedPreferenceChanged(SharedPreferences sharedPreferences,
            String key) {
        updatePrefSummary(findPreference(key));
    }

    private void initSummary(Preference p) {
        if (p instanceof PreferenceGroup) {
            PreferenceGroup pGrp = (PreferenceGroup) p;
            for (int i = 0; i &lt; pGrp.getPreferenceCount(); i++) {
                initSummary(pGrp.getPreference(i));
            }
        } else {
            updatePrefSummary(p);
        }
    }

    private void updatePrefSummary(Preference p) {
        if (p instanceof ListPreference) {
            ListPreference listPref = (ListPreference) p;
            p.setSummary(listPref.getEntry());
        }
        if (p instanceof EditTextPreference) {
            EditTextPreference editTextPref = (EditTextPreference) p;
            if (p.getTitle().toString().contains(""assword""))
            {
                p.setSummary(""******"");
            } else {
                p.setSummary(editTextPref.getText());
            }
        }
        if (p instanceof MultiSelectListPreference) {
            EditTextPreference editTextPref = (EditTextPreference) p;
            p.setSummary(editTextPref.getText());
        }
    }
}
</code></pre>
"
"531427","8004498","25","<p>My option is to extend ListPreference and it's clean:</p>

<pre><code>public class ListPreferenceShowSummary extends ListPreference {

    private final static String TAG = ListPreferenceShowSummary.class.getName();

    public ListPreferenceShowSummary(Context context, AttributeSet attrs) {
        super(context, attrs);
        init();
    }

    public ListPreferenceShowSummary(Context context) {
        super(context);
        init();
    }

    private void init() {

        setOnPreferenceChangeListener(new OnPreferenceChangeListener() {

            @Override
            public boolean onPreferenceChange(Preference arg0, Object arg1) {
                arg0.setSummary(getEntry());
                return true;
            }
        });
    }

    @Override
    public CharSequence getSummary() {
        return super.getEntry();
    }
}
</code></pre>

<p>Then you add in your settings.xml:</p>

<pre><code>&lt;yourpackage.ListPreferenceShowSummary
    android:key=""key"" android:title=""title""
    android:entries=""@array/entries"" android:entryValues=""@array/values""
    android:defaultValue=""first value""/&gt;
</code></pre>
"
"531427","9079031","0","<p>To set the summary of a <code>ListPreference</code> to the value selected in a dialog you could use this code:</p>

<pre><code>package yourpackage;

import android.content.Context;
import android.util.AttributeSet;

public class ListPreference extends android.preference.ListPreference {

    public ListPreference(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    protected void onDialogClosed(boolean positiveResult) {
        super.onDialogClosed(positiveResult);
        if (positiveResult) setSummary(getEntry());
    }

    protected void onSetInitialValue(boolean restoreValue, Object defaultValue) {
        super.onSetInitialValue(restoreValue, defaultValue);
        setSummary(getEntry());
    }
}
</code></pre>

<p>and reference the <code>yourpackage.ListPreference</code> object in your <code>preferences.xml</code> remembering to specify there your <code>android:defaultValue</code> as this triggers the call to <code>onSetInitialValue()</code>.</p>

<p>If you want you can then modify the text before calling <code>setSummary()</code> to whatever suits your application.</p>
"
"531427","9938201","8","<p>Android <a href=""http://developer.android.com/reference/android/preference/ListPreference.html#getSummary%28%29"">documentation</a> says one can use a String formatting marker in <code>getSummary()</code>:</p>

<blockquote>
  <p>If the summary has a String formatting marker in it (i.e. ""%s"" or ""%1$s""), then the current entry value will be substituted in its place.</p>
</blockquote>

<p>Simply specifying <code>android:summary=""Clean up messages after %s days""</code> in ListPreference xml declaration worked for me.</p>
"
"531427","10650442","2","<p>I've seen all voted answers show how to set the summary with the exact current value, but the asker wanted also something like:</p>

<blockquote>
  <p>""Clean up messages after <strong>x</strong> days""* &lt;- summary where <strong>x</strong> is the current Preference value </p>
</blockquote>

<p><strong>Here is my answer for achieving that</strong></p>

<p>As <a href=""http://developer.android.com/reference/android/preference/ListPreference.html#getSummary%28%29"" rel=""nofollow"">documentation</a> says about <code>ListPreference.getSummary()</code>:</p>

<blockquote>
  <p>Returns the summary of this ListPreference. If the summary has a String formatting marker in it (i.e. ""%s"" or ""%1$s""), then the current
  entry value will be substituted in its place.</p>
</blockquote>

<p>However, I tried in several devices and it doesn't seem to work. With some research I found a good solution in <a href=""http://stackoverflow.com/a/7018053/824430"">this answer</a>. It simply consists of extend every <code>Preference</code> you use and override <code>getSummary()</code> to work as specified by Android documentation.</p>
"
"531427","11210367","16","<p>After several hours I've been spent to solve such problem I've implemented this code:</p>

<p>[UPDATE: the final version listing] </p>

<pre><code>public class MyPreferencesActivity extends PreferenceActivity {
    ...
    ListPreference m_updateList;
    ...
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        addPreferencesFromResource(R.xml.preferences);

        m_updateList = (ListPreference) findPreference(getString(R.string.pref_update_interval_key));
        String currentValue = m_updateList.getValue();
        if (currentValue == null) {
            m_updateList.setValue((String)m_updateList.getEntryValues()[DEFAULT_UPDATE_TIME_INDEX]);
            currentValue = m_updateList.getValue();
        }
        updateListSummary(currentValue);    

        m_updateList.setOnPreferenceChangeListener(new OnPreferenceChangeListener() {
            @Override
            public boolean onPreferenceChange(Preference preference, Object newValue) {
                updateListSummary(newValue.toString());
                return true;
            }       
        });     
    }

    private void updateListSummary(String newValue) {
        int index = m_updateList.findIndexOfValue(newValue);
        CharSequence entry = m_updateList.getEntries()[index];
        m_updateList.setSummary(entry);
    }
}
</code></pre>

<p>That was the only solution that worked for me fine. Before I've tried to subclass from ListPreferences and to implement android:summary=""bla bla bla %s"". Neither worked.</p>
"
"531427","11336057","3","<p>I solved the issue with the following descendant of ListPreference: </p>

<pre><code>public class EnumPreference extends ListPreference {

    public EnumPreference(Context aContext, AttributeSet attrs) {
        super(aContext,attrs);
    }

    @Override
    protected View onCreateView(ViewGroup parent) {
        setSummary(getEntry());
        return super.onCreateView(parent);
    }

    @Override
    protected boolean persistString(String aNewValue) {
        if (super.persistString(aNewValue)) {
            setSummary(getEntry());
            notifyChanged();
            return true;
        } else {
            return false;
        }
    }
}
</code></pre>

<p>Seems to work fine for me in 1.6 up through 4.0.4.</p>
"
"531427","11609799","11","<p>You can override default Preference classes and implement the feature.</p>

<pre><code>public class MyListPreference extends ListPreference  {
    public MyListPreference(Context context) { super(context); }
    public MyListPreference(Context context, AttributeSet attrs) { super(context, attrs); }
    @Override
    public void setValue(String value) {
        super.setValue(value);
        setSummary(getEntry());
    }
}
</code></pre>

<p>Later in you xml you can use custom preference like </p>

<pre><code>&lt;your.package.name.MyListPreference 
    android:key=""noteInterval""
    android:defaultValue=""60""
    android:title=""Notification Interval""
    android:entries=""@array/noteInterval""
    android:entryValues=""@array/noteIntervalValues""
    /&gt;
</code></pre>
"
"531427","14064584","2","<p>If you only want to display the plain text value of each field as its summary, the following code should be the easiest to maintain. It requires only two changes (lines 13 and 21, marked with ""change here""):</p>

<pre><code>package com.my.package;

import android.content.SharedPreferences;
import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
import android.os.Bundle;
import android.preference.EditTextPreference;
import android.preference.ListPreference;
import android.preference.Preference;
import android.preference.PreferenceActivity;

public class PreferencesActivity extends PreferenceActivity implements OnSharedPreferenceChangeListener {

    private final String[] mAutoSummaryFields = { ""pref_key1"", ""pref_key2"", ""pref_key3"" }; // change here
    private final int mEntryCount = mAutoSummaryFields.length;
    private Preference[] mPreferenceEntries;

    @SuppressWarnings(""deprecation"")
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        addPreferencesFromResource(R.xml.preferences_file); // change here
        mPreferenceEntries = new Preference[mEntryCount];
        for (int i = 0; i &lt; mEntryCount; i++) {
            mPreferenceEntries[i] = getPreferenceScreen().findPreference(mAutoSummaryFields[i]);
        }
    }

    @SuppressWarnings(""deprecation"")
    @Override
    protected void onResume() {
        super.onResume();
        for (int i = 0; i &lt; mEntryCount; i++) {
            updateSummary(mAutoSummaryFields[i]); // initialization
        }
        getPreferenceScreen().getSharedPreferences().registerOnSharedPreferenceChangeListener(this); // register change listener
    }

    @SuppressWarnings(""deprecation"")
    @Override
    protected void onPause() {
        super.onPause();
        getPreferenceScreen().getSharedPreferences().unregisterOnSharedPreferenceChangeListener(this); // unregister change listener
    }

    private void updateSummary(String key) {
        for (int i = 0; i &lt; mEntryCount; i++) {
            if (key.equals(mAutoSummaryFields[i])) {
                if (mPreferenceEntries[i] instanceof EditTextPreference) {
                    final EditTextPreference currentPreference = (EditTextPreference) mPreferenceEntries[i];
                    mPreferenceEntries[i].setSummary(currentPreference.getText());
                }
                else if (mPreferenceEntries[i] instanceof ListPreference) {
                    final ListPreference currentPreference = (ListPreference) mPreferenceEntries[i];
                    mPreferenceEntries[i].setSummary(currentPreference.getEntry());
                }
                break;
            }
        }
    }

    public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
        updateSummary(key);
    }

}
</code></pre>
"
"531427","16251890","1","<pre><code>public class ProfileManagement extends PreferenceActivity implements
OnPreferenceChangeListener {
    EditTextPreference screenName;
    ListPreference sex;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            addPreferencesFromResource(R.layout.profile_management);

            screenName = (EditTextPreference) findPreference(""editTextPref"");
            sex = (ListPreference) findPreference(""sexSelector"");

            screenName.setOnPreferenceChangeListener(this);
            sex.setOnPreferenceChangeListener(this);

    }   

    @Override
    public boolean onPreferenceChange(Preference preference, Object newValue) {
        preference.setSummary(newValue.toString());
        return true;
    }
}
</code></pre>
"
"531427","17663235","0","<p>Here's my solution:</p>

<h2>Build a preference type 'getter' method.</h2>

<pre><code>protected String getPreference(Preference x) {
    // http://stackoverflow.com/questions/3993982/how-to-check-type-of-variable-in-java
    if (x instanceof CheckBoxPreference)
        return ""CheckBoxPreference"";
    else if (x instanceof EditTextPreference)
        return ""EditTextPreference"";
    else if (x instanceof ListPreference)
        return ""ListPreference"";
    else if (x instanceof MultiSelectListPreference)
        return ""MultiSelectListPreference"";
    else if (x instanceof RingtonePreference)
        return ""RingtonePreference"";
    else if (x instanceof SwitchPreference)
        return ""SwitchPreference"";
    else if (x instanceof TwoStatePreference)
        return ""TwoStatePreference"";
    else if (x instanceof DialogPreference) // Needs to be after ListPreference
        return ""DialogPreference"";
    else
        return ""undefined"";
}
</code></pre>

<h2>Build a 'setSummaryInit' method.</h2>

<pre><code>public void onSharedPreferenceChanged(SharedPreferences prefs, String key) {
        Log.i(TAG, ""+ onSharedPreferenceChanged(prefs:"" + prefs + "", key:"" + key + "")"");
        if( key != null ) {
            updatePreference(prefs, key);
            setSummary(key);
        } else {
            Log.e(TAG, ""Preference without key!"");
        }
        Log.i(TAG, ""- onSharedPreferenceChanged()"");
    }

    protected boolean setSummary() {
        return _setSummary(null);
    }

    protected boolean setSummary(String sKey) {
        return _setSummary(sKey);
    }

    private boolean _setSummary(String sKey) {
        if (sKey == null) Log.i(TAG, ""Initializing"");
        else Log.i(TAG, sKey);

        // Get Preferences
        SharedPreferences sharedPrefs = PreferenceManager
                .getDefaultSharedPreferences(this);

        // Iterate through all Shared Preferences
        // http://stackoverflow.com/questions/9310479/how-to-iterate-through-all-keys-of-shared-preferences
        Map&lt;String, ?&gt; keys = sharedPrefs.getAll();
        for (Map.Entry&lt;String, ?&gt; entry : keys.entrySet()) {
            String key = entry.getKey();
            // Do work only if initializing (null) or updating specific preference key
            if ( (sKey == null) || (sKey.equals(key)) ) {
                String value = entry.getValue().toString();
                Preference pref = findPreference(key);
                String preference = getPreference(pref);
                Log.d(""map values"", key + "" | "" + value + "" | "" + preference);
                pref.setSummary(key + "" | "" + value + "" | "" + preference);
                if (sKey != null) return true;
            }
        }
        return false;
    }

    private void updatePreference(SharedPreferences prefs, String key) {
        Log.i(TAG, ""+ updatePreference(prefs:"" + prefs + "", key:"" + key + "")"");
        Preference pref = findPreference(key);
        String preferenceType = getPreference(pref);
        Log.i(TAG, ""preferenceType = "" + preferenceType);
        Log.i(TAG, ""- updatePreference()"");
    }
</code></pre>

<h2>Initialize</h2>

<p>Create public class that PreferenceActivity and implements OnSharedPreferenceChangeListener</p>

<pre><code>protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    PreferenceManager.setDefaultValues(this, R.xml.global_preferences,
    false);
    this.addPreferencesFromResource(R.xml.global_preferences);
    this.getPreferenceScreen().getSharedPreferences()
        .registerOnSharedPreferenceChangeListener(this);
}

protected void onResume() {
    super.onResume();
    setSummary();
}
</code></pre>
"
"531427","18807490","24","<p>If you use <code>PreferenceFragment</code>, this is how I solved it. It's self explanatory.</p>

<pre><code>public static class SettingsFragment extends PreferenceFragment implements OnSharedPreferenceChangeListener {
    @Override
    public void onCreate(Bundle savedInstanceState) {
      super.onCreate(savedInstanceState);
      addPreferencesFromResource(R.xml.settings);
      getPreferenceScreen().getSharedPreferences().registerOnSharedPreferenceChangeListener(this);
    }

    @Override
    public void onResume() {
      super.onResume();
      for (int i = 0; i &lt; getPreferenceScreen().getPreferenceCount(); ++i) {
        Preference preference = getPreferenceScreen().getPreference(i);
        if (preference instanceof PreferenceGroup) {
          PreferenceGroup preferenceGroup = (PreferenceGroup) preference;
          for (int j = 0; j &lt; preferenceGroup.getPreferenceCount(); ++j) {
            updatePreference(preferenceGroup.getPreference(j));
          }
        } else {
          updatePreference(preference);
        }
      }
    }

    @Override
    public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
      updatePreference(findPreference(key));
    }

    private void updatePreference(Preference preference) {
      if (preference instanceof ListPreference) {
        ListPreference listPreference = (ListPreference) preference;
        listPreference.setSummary(listPreference.getEntry());
      }
    }
  }
</code></pre>
"
"531427","20586544","0","<p>Here,all these are cut from Eclipse sample <code>SettingsActivity</code>.
I have to copy all these too much codes to show how these android developers choose perfectly for more generalized and stable coding style.
<p>I left the codes for adapting the <code>PreferenceActivity</code> to tablet and greater API.</p>

<pre><code>public class SettingsActivity extends PreferenceActivity {

@Override
protected void onPostCreate(Bundle savedInstanceState) {
    super.onPostCreate(savedInstanceState);

    setupSummaryUpdatablePreferencesScreen();
}

private void setupSummaryUpdatablePreferencesScreen() {

    // In the simplified UI, fragments are not used at all and we instead
    // use the older PreferenceActivity APIs.

    // Add 'general' preferences.
    addPreferencesFromResource(R.xml.pref_general);

    // Bind the summaries of EditText/List/Dialog preferences to
    // their values. When their values change, their summaries are updated
    // to reflect the new value, per the Android Design guidelines.
    bindPreferenceSummaryToValue(findPreference(""example_text""));
    bindPreferenceSummaryToValue(findPreference(""example_list""));
}

/**
 * A preference value change listener that updates the preference's summary
 * to reflect its new value.
 */
private static Preference.OnPreferenceChangeListener sBindPreferenceSummaryToValueListener = new Preference.OnPreferenceChangeListener() {

    private String TAG = SettingsActivity.class.getSimpleName();

    @Override
    public boolean onPreferenceChange(Preference preference, Object value) {
        String stringValue = value.toString();

        if (preference instanceof ListPreference) {
            // For list preferences, look up the correct display value in
            // the preference's 'entries' list.
            ListPreference listPreference = (ListPreference) preference;
            int index = listPreference.findIndexOfValue(stringValue);

            // Set the summary to reflect the new value.
            preference.setSummary(
                index &gt;= 0
                ? listPreference.getEntries()[index]
                : null);
        } else {
            // For all other preferences, set the summary to the value's
            // simple string representation.
            preference.setSummary(stringValue);
        }
        Log.i(TAG, ""pref changed : "" + preference.getKey() + "" "" + value);
        return true;
    }
};

/**
 * Binds a preference's summary to its value. More specifically, when the
 * preference's value is changed, its summary (line of text below the
 * preference title) is updated to reflect the value. The summary is also
 * immediately updated upon calling this method. The exact display format is
 * dependent on the type of preference.
 *
 * @see #sBindPreferenceSummaryToValueListener
 */

private static void bindPreferenceSummaryToValue(Preference preference) {
    // Set the listener to watch for value changes.
    preference.setOnPreferenceChangeListener(sBindPreferenceSummaryToValueListener);

    // Trigger the listener immediately with the preference's
    // current value.
    sBindPreferenceSummaryToValueListener.onPreferenceChange(preference,
                                                             PreferenceManager
                                                             .getDefaultSharedPreferences(preference.getContext())
                                                             .getString(preference.getKey(), """"));
}

}
</code></pre>

<p><code>xml/pref_general.xml</code></p>

<pre><code>&lt;PreferenceScreen xmlns:android=""http://schemas.android.com/apk/res/android"" &gt;

&lt;!-- NOTE: EditTextPreference accepts EditText attributes. --&gt;
&lt;!-- NOTE: EditTextPreference's summary should be set to its value by the activity code. --&gt;
&lt;EditTextPreference
android:capitalize=""words""
android:defaultValue=""@string/pref_default_display_name""
android:inputType=""textCapWords""
android:key=""example_text""
android:maxLines=""1""
android:selectAllOnFocus=""true""
android:singleLine=""true""
android:title=""@string/pref_title_display_name"" /&gt;

&lt;!-- NOTE: Hide buttons to simplify the UI. Users can touch outside the dialog todismiss it.--&gt;
&lt;!-- NOTE: ListPreference's summary should be set to its value by the activity code. --&gt;
&lt;ListPreference
android:defaultValue=""-1""
android:entries=""@array/pref_example_list_titles""
android:entryValues=""@array/pref_example_list_values""
android:key=""example_list""
android:negativeButtonText=""@null""
android:positiveButtonText=""@null""
android:title=""@string/pref_title_add_friends_to_messages"" /&gt;

&lt;/PreferenceScreen&gt;
</code></pre>

<p><code>values/strings_activity_settings.xml</code></p>

<pre><code>&lt;resources&gt;
&lt;!-- Strings related to Settings --&gt;

&lt;!-- Example General settings --&gt;

&lt;string name=""pref_title_display_name""&gt;Display name&lt;/string&gt;
&lt;string name=""pref_default_display_name""&gt;John Smith&lt;/string&gt;

&lt;string name=""pref_title_add_friends_to_messages""&gt;Add friends to messages&lt;/string&gt;
&lt;string-array name=""pref_example_list_titles""&gt;
&lt;item&gt;Always&lt;/item&gt;
&lt;item&gt;When possible&lt;/item&gt;
&lt;item&gt;Never&lt;/item&gt;
&lt;/string-array&gt;
&lt;string-array name=""pref_example_list_values""&gt;
&lt;item&gt;1&lt;/item&gt;
&lt;item&gt;0&lt;/item&gt;
&lt;item&gt;-1&lt;/item&gt;
&lt;/string-array&gt;
&lt;/resources&gt;
</code></pre>

<p><strong>NOTE:</strong> Actually I just want to comment like ""Google's sample for PreferenceActivity is also interesting"". But I haven't enough reputation points.So please don't blame me.<p>
(Sorry for bad English)</p>
"
"531427","21906829","0","<h2>For EditTextPreference:</h2>

<pre><code>public class MyEditTextPreference extends EditTextPreference {
    public MyEditTextPreference(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
    }

    public MyEditTextPreference(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    @Override
    public void setText(String text) {
        super.setText(text);
        setSummary(text);
    }
}
</code></pre>
"
"531427","25083261","2","<p>Maybe like ListPreference: Modify getSummary to get what you want:</p>

<pre><code>package your.package.preference;

import android.content.Context;
import android.util.AttributeSet;

public class EditTextPreference extends android.preference.EditTextPreference{
        public EditTextPreference(Context context, AttributeSet attrs, int defStyle) {
            super(context, attrs, defStyle);
        }

        public EditTextPreference(Context context, AttributeSet attrs) {
            super(context, attrs);
        }

        public EditTextPreference(Context context) {
            super(context);
        }

        @Override
        public CharSequence getSummary() {
            String summary = super.getSummary().toString();
            return String.format(summary, getText());
        }
    }
</code></pre>

<p>And use this in your xml:</p>

<pre><code>&lt;your.package.EditTextPreference
                android:key=""pref_alpha""
                android:summary=""Actual value: %s""
                android:title=""Title""
                android:defaultValue=""default""
                /&gt;
</code></pre>

<p>So you are able to write a summary with %s for actual value.</p>
"
"541966","559781","586","<p>Here's what I created to hold the images that my app is currently displaying. Please note that the ""Log"" object in use here is my custom wrapper around the final Log class inside Android.</p>

<pre><code>package com.wilson.android.library;

/*
 Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
""License""); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
*/
import java.io.IOException;

public class DrawableManager {
    private final Map&lt;String, Drawable&gt; drawableMap;

    public DrawableManager() {
        drawableMap = new HashMap&lt;String, Drawable&gt;();
    }

    public Drawable fetchDrawable(String urlString) {
        if (drawableMap.containsKey(urlString)) {
            return drawableMap.get(urlString);
        }

        Log.d(this.getClass().getSimpleName(), ""image url:"" + urlString);
        try {
            InputStream is = fetch(urlString);
            Drawable drawable = Drawable.createFromStream(is, ""src"");


            if (drawable != null) {
                drawableMap.put(urlString, drawable);
                Log.d(this.getClass().getSimpleName(), ""got a thumbnail drawable: "" + drawable.getBounds() + "", ""
                        + drawable.getIntrinsicHeight() + "","" + drawable.getIntrinsicWidth() + "", ""
                        + drawable.getMinimumHeight() + "","" + drawable.getMinimumWidth());
            } else {
              Log.w(this.getClass().getSimpleName(), ""could not get thumbnail"");
            }

            return drawable;
        } catch (MalformedURLException e) {
            Log.e(this.getClass().getSimpleName(), ""fetchDrawable failed"", e);
            return null;
        } catch (IOException e) {
            Log.e(this.getClass().getSimpleName(), ""fetchDrawable failed"", e);
            return null;
        }
    }

    public void fetchDrawableOnThread(final String urlString, final ImageView imageView) {
        if (drawableMap.containsKey(urlString)) {
            imageView.setImageDrawable(drawableMap.get(urlString));
        }

        final Handler handler = new Handler() {
            @Override
            public void handleMessage(Message message) {
                imageView.setImageDrawable((Drawable) message.obj);
            }
        };

        Thread thread = new Thread() {
            @Override
            public void run() {
                //TODO : set imageView to a ""pending"" image
                Drawable drawable = fetchDrawable(urlString);
                Message message = handler.obtainMessage(1, drawable);
                handler.sendMessage(message);
            }
        };
        thread.start();
    }

    private InputStream fetch(String urlString) throws MalformedURLException, IOException {
        DefaultHttpClient httpClient = new DefaultHttpClient();
        HttpGet request = new HttpGet(urlString);
        HttpResponse response = httpClient.execute(request);
        return response.getEntity().getContent();
    }
}
</code></pre>
"
"541966","2773496","65","<p><strong>Update: Note that this answer is pretty ineffective now. The Garbage Collector acts aggressively on SoftReference and WeakReference, so this code is NOT suitable for new apps.</strong>  (Instead, try libraries like <a href=""https://github.com/nostra13/Android-Universal-Image-Loader"">Universal Image Loader</a> suggested in other answers.)</p>

<p>Thanks to James for the code, and Bao-Long for the suggestion of using SoftReference. I implemented the SoftReference changes on James' code. Unfortunately SoftReferences caused my images to be garbage collected too quickly. In my case it was fine without the SoftReference stuff, because my list size is limited and my images are small.</p>

<p>There's a discussion from a year ago regarding the SoftReferences on google groups: <a href=""http://groups.google.com/group/android-developers/browse_thread/thread/ebabb0dadf38acc1"">link to thread</a>. As a solution to the too-early garbage collection, they suggest the possibility of manually setting the VM heap size using dalvik.system.VMRuntime.setMinimumHeapSize(), which is not very attractive to me.</p>

<pre><code>public DrawableManager() {
    drawableMap = new HashMap&lt;String, SoftReference&lt;Drawable&gt;&gt;();
}

public Drawable fetchDrawable(String urlString) {
    SoftReference&lt;Drawable&gt; drawableRef = drawableMap.get(urlString);
    if (drawableRef != null) {
        Drawable drawable = drawableRef.get();
        if (drawable != null)
            return drawable;
        // Reference has expired so remove the key from drawableMap
        drawableMap.remove(urlString);
    }

    if (Constants.LOGGING) Log.d(this.getClass().getSimpleName(), ""image url:"" + urlString);
    try {
        InputStream is = fetch(urlString);
        Drawable drawable = Drawable.createFromStream(is, ""src"");
        drawableRef = new SoftReference&lt;Drawable&gt;(drawable);
        drawableMap.put(urlString, drawableRef);
        if (Constants.LOGGING) Log.d(this.getClass().getSimpleName(), ""got a thumbnail drawable: "" + drawable.getBounds() + "", ""
                + drawable.getIntrinsicHeight() + "","" + drawable.getIntrinsicWidth() + "", ""
                + drawable.getMinimumHeight() + "","" + drawable.getMinimumWidth());
        return drawableRef.get();
    } catch (MalformedURLException e) {
        if (Constants.LOGGING) Log.e(this.getClass().getSimpleName(), ""fetchDrawable failed"", e);
        return null;
    } catch (IOException e) {
        if (Constants.LOGGING) Log.e(this.getClass().getSimpleName(), ""fetchDrawable failed"", e);
        return null;
    }
}

public void fetchDrawableOnThread(final String urlString, final ImageView imageView) {
    SoftReference&lt;Drawable&gt; drawableRef = drawableMap.get(urlString);
    if (drawableRef != null) {
        Drawable drawable = drawableRef.get();
        if (drawable != null) {
            imageView.setImageDrawable(drawableRef.get());
            return;
        }
        // Reference has expired so remove the key from drawableMap
        drawableMap.remove(urlString);
    }

    final Handler handler = new Handler() {
        @Override
        public void handleMessage(Message message) {
            imageView.setImageDrawable((Drawable) message.obj);
        }
    };

    Thread thread = new Thread() {
        @Override
        public void run() {
            //TODO : set imageView to a ""pending"" image
            Drawable drawable = fetchDrawable(urlString);
            Message message = handler.obtainMessage(1, drawable);
            handler.sendMessage(message);
        }
    };
    thread.start();
}
</code></pre>
"
"541966","3466952","96","<p><a href=""http://android-developers.blogspot.com/2010/07/multithreading-for-performance.html"">Multithreading For Performance</a>, a tutorial by Gilles Debunne.</p>

<p>This is from the Android Developers Blog. The suggested code uses:</p>

<ul>
<li><code>AsyncTasks</code>.</li>
<li>A hard, limited size, <code>FIFO cache</code>.</li>
<li>A soft, easily <code>garbage collect</code>-ed cache.</li>
<li>A <em>placeholder</em> <code>Drawable</code> while you download.</li>
</ul>

<p><img src=""http://i.stack.imgur.com/xdEVJ.png"" alt=""enter image description here""></p>
"
"541966","7861011","54","<p>High performance loader - after examining the methods suggested here,
I used <a href=""http://negativeprobability.blogspot.com/2011/08/lazy-loading-of-images-in-listview.html"">Ben's solution</a> with some changes - </p>

<ol>
<li><p>I realized that working with drawables is faster that with bitmaps so I uses drawables instead</p></li>
<li><p>Using SoftReference is great, but it makes the cached image to be deleted too often, so I added a Linked list that holds images references, preventing from the image to be deleted, until it reached a predefined size</p></li>
<li><p>To open the InputStream I used java.net.URLConnection which allows me to use web cache (you need to set a response cache first, but that's another story)</p></li>
</ol>

<p>My code:</p>

<pre><code>import java.util.Map; 
import java.util.HashMap; 
import java.util.LinkedList; 
import java.util.Collections; 
import java.util.WeakHashMap; 
import java.lang.ref.SoftReference; 
import java.util.concurrent.Executors; 
import java.util.concurrent.ExecutorService; 
import android.graphics.drawable.Drawable;
import android.widget.ImageView;
import android.os.Handler;
import android.os.Message;
import java.io.InputStream;
import java.net.MalformedURLException; 
import java.io.IOException; 
import java.net.URL;
import java.net.URLConnection;

public class DrawableBackgroundDownloader {    

private final Map&lt;String, SoftReference&lt;Drawable&gt;&gt; mCache = new HashMap&lt;String, SoftReference&lt;Drawable&gt;&gt;();   
private final LinkedList &lt;Drawable&gt; mChacheController = new LinkedList &lt;Drawable&gt; ();
private ExecutorService mThreadPool;  
private final Map&lt;ImageView, String&gt; mImageViews = Collections.synchronizedMap(new WeakHashMap&lt;ImageView, String&gt;());  

public static int MAX_CACHE_SIZE = 80; 
public int THREAD_POOL_SIZE = 3;

/**
 * Constructor
 */
public DrawableBackgroundDownloader() {  
    mThreadPool = Executors.newFixedThreadPool(THREAD_POOL_SIZE);  
}  


/**
 * Clears all instance data and stops running threads
 */
public void Reset() {
    ExecutorService oldThreadPool = mThreadPool;
    mThreadPool = Executors.newFixedThreadPool(THREAD_POOL_SIZE);
    oldThreadPool.shutdownNow();

    mChacheController.clear();
    mCache.clear();
    mImageViews.clear();
}  

public void loadDrawable(final String url, final ImageView imageView,Drawable placeholder) {  
    mImageViews.put(imageView, url);  
    Drawable drawable = getDrawableFromCache(url);  

    // check in UI thread, so no concurrency issues  
    if (drawable != null) {  
        //Log.d(null, ""Item loaded from mCache: "" + url);  
        imageView.setImageDrawable(drawable);  
    } else {  
        imageView.setImageDrawable(placeholder);  
        queueJob(url, imageView, placeholder);  
    }  
} 


private Drawable getDrawableFromCache(String url) {  
    if (mCache.containsKey(url)) {  
        return mCache.get(url).get();  
    }  

    return null;  
}

private synchronized void putDrawableInCache(String url,Drawable drawable) {  
    int chacheControllerSize = mChacheController.size();
    if (chacheControllerSize &gt; MAX_CACHE_SIZE) 
        mChacheController.subList(0, MAX_CACHE_SIZE/2).clear();

    mChacheController.addLast(drawable);
    mCache.put(url, new SoftReference&lt;Drawable&gt;(drawable));

}  

private void queueJob(final String url, final ImageView imageView,final Drawable placeholder) {  
    /* Create handler in UI thread. */  
    final Handler handler = new Handler() {  
        @Override  
        public void handleMessage(Message msg) {  
            String tag = mImageViews.get(imageView);  
            if (tag != null &amp;&amp; tag.equals(url)) {
                if (imageView.isShown())
                    if (msg.obj != null) {
                        imageView.setImageDrawable((Drawable) msg.obj);  
                    } else {  
                        imageView.setImageDrawable(placeholder);  
                        //Log.d(null, ""fail "" + url);  
                    } 
            }  
        }  
    };  

    mThreadPool.submit(new Runnable() {  
        @Override  
        public void run() {  
            final Drawable bmp = downloadDrawable(url);
            // if the view is not visible anymore, the image will be ready for next time in cache
            if (imageView.isShown())
            {
                Message message = Message.obtain();  
                message.obj = bmp;
                //Log.d(null, ""Item downloaded: "" + url);  

                handler.sendMessage(message);
            }
        }  
    });  
}  



private Drawable downloadDrawable(String url) {  
    try {  
        InputStream is = getInputStream(url);

        Drawable drawable = Drawable.createFromStream(is, url);
        putDrawableInCache(url,drawable);  
        return drawable;  

    } catch (MalformedURLException e) {  
        e.printStackTrace();  
    } catch (IOException e) {  
        e.printStackTrace();  
    }  

    return null;  
}  


private InputStream getInputStream(String urlString) throws MalformedURLException, IOException {
    URL url = new URL(urlString);
    URLConnection connection;
    connection = url.openConnection();
    connection.setUseCaches(true); 
    connection.connect();
    InputStream response = connection.getInputStream();

    return response;
}
}
</code></pre>
"
"541966","14827292","9","<p>Well, image loading time from the Internet has many solutions. You may also use the library <a href=""https://code.google.com/p/android-query/wiki/ImageLoading"" rel=""nofollow"">Android-Query</a>. It will give you all the required activity. Make sure what you want to do and read the library wiki page. And solve the image loading restriction.</p>

<p>This is my code:</p>

<pre><code>    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        View v = convertView;
        if (v == null) {
            LayoutInflater vi = (LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            v = vi.inflate(R.layout.row, null);
        }

        ImageView imageview = (ImageView) v.findViewById(R.id.icon);
        AQuery aq = new AQuery(convertView);

        String imageUrl = ""http://www.vikispot.com/z/images/vikispot/android-w.png"";

        aq.id(imageview).progress(this).image(imageUrl, true, true, 0, 0, new BitmapAjaxCallback(){

            @Override
            public void callback(String url, ImageView iv, Bitmap bm, AjaxStatus status){
                iv.setImageBitmap(bm);
            }
        });
    }
    return v;
}
</code></pre>

<p>It should be solve your lazy loading problem.</p>
"
"541966","17090817","10","<p>I have been using NetworkImageView from the new Android Volley Library <code>com.android.volley.toolbox.NetworkImageView</code>, and it seems to be working pretty well. Apparently, this is the same view that is used in <a href=""http://en.wikipedia.org/wiki/Google_Play"" rel=""nofollow"">Google Play</a> and other new Google applications. Definitely worth checking out.</p>

<ul>
<li><p><a href=""http://blogs.captechconsulting.com/blog/raymond-robinson/google-io-2013-volley-image-cache-tutorial"" rel=""nofollow"">Google I/O 2013 volley image cache tutorial</a></p></li>
<li><p><a href=""https://developers.google.com/events/io/sessions/325304728"" rel=""nofollow"">Developers Google events</a></p></li>
</ul>
"
"541966","17716992","2","<pre><code>public class ImageDownloader {

Map&lt;String, Bitmap&gt; imageCache;

public ImageDownloader() {
    imageCache = new HashMap&lt;String, Bitmap&gt;();

}

// download function
public void download(String url, ImageView imageView) {
    if (cancelPotentialDownload(url, imageView)) {

        // Caching code right here
        String filename = String.valueOf(url.hashCode());
        File f = new File(getCacheDirectory(imageView.getContext()),
                filename);

        // Is the bitmap in our memory cache?
        Bitmap bitmap = null;

        bitmap = (Bitmap) imageCache.get(f.getPath());

        if (bitmap == null) {

            bitmap = BitmapFactory.decodeFile(f.getPath());

            if (bitmap != null) {
                imageCache.put(f.getPath(), bitmap);
            }

        }
        // No? download it
        if (bitmap == null) {
            try {
                BitmapDownloaderTask task = new BitmapDownloaderTask(
                        imageView);
                DownloadedDrawable downloadedDrawable = new DownloadedDrawable(
                        task);
                imageView.setImageDrawable(downloadedDrawable);
                task.execute(url);
            } catch (Exception e) {
                Log.e(""Error==&gt;"", e.toString());
            }

        } else {
            // Yes? set the image
            imageView.setImageBitmap(bitmap);
        }
    }
}

// cancel a download (internal only)
private static boolean cancelPotentialDownload(String url,
        ImageView imageView) {
    BitmapDownloaderTask bitmapDownloaderTask = getBitmapDownloaderTask(imageView);

    if (bitmapDownloaderTask != null) {
        String bitmapUrl = bitmapDownloaderTask.url;
        if ((bitmapUrl == null) || (!bitmapUrl.equals(url))) {
            bitmapDownloaderTask.cancel(true);
        } else {
            // The same URL is already being downloaded.
            return false;
        }
    }
    return true;
}

// gets an existing download if one exists for the imageview
private static BitmapDownloaderTask getBitmapDownloaderTask(
        ImageView imageView) {
    if (imageView != null) {
        Drawable drawable = imageView.getDrawable();
        if (drawable instanceof DownloadedDrawable) {
            DownloadedDrawable downloadedDrawable = (DownloadedDrawable) drawable;
            return downloadedDrawable.getBitmapDownloaderTask();
        }
    }
    return null;
}

// our caching functions
// Find the dir to save cached images
private static File getCacheDirectory(Context context) {
    String sdState = android.os.Environment.getExternalStorageState();
    File cacheDir;

    if (sdState.equals(android.os.Environment.MEDIA_MOUNTED)) {
        File sdDir = android.os.Environment.getExternalStorageDirectory();

        // TODO : Change your diretcory here
        cacheDir = new File(sdDir, ""data/ToDo/images"");
    } else
        cacheDir = context.getCacheDir();

    if (!cacheDir.exists())
        cacheDir.mkdirs();
    return cacheDir;
}

private void writeFile(Bitmap bmp, File f) {
    FileOutputStream out = null;

    try {
        out = new FileOutputStream(f);
        bmp.compress(Bitmap.CompressFormat.PNG, 80, out);
    } catch (Exception e) {
        e.printStackTrace();
    } finally {
        try {
            if (out != null)
                out.close();
        } catch (Exception ex) {
        }
    }
}

// download asynctask
public class BitmapDownloaderTask extends AsyncTask&lt;String, Void, Bitmap&gt; {
    private String url;
    private final WeakReference&lt;ImageView&gt; imageViewReference;

    public BitmapDownloaderTask(ImageView imageView) {
        imageViewReference = new WeakReference&lt;ImageView&gt;(imageView);
    }

    @Override
    // Actual download method, run in the task thread
    protected Bitmap doInBackground(String... params) {
        // params comes from the execute() call: params[0] is the url.
        url = (String) params[0];
        return downloadBitmap(params[0]);
    }

    @Override
    // Once the image is downloaded, associates it to the imageView
    protected void onPostExecute(Bitmap bitmap) {
        if (isCancelled()) {
            bitmap = null;
        }

        if (imageViewReference != null) {
            ImageView imageView = imageViewReference.get();
            BitmapDownloaderTask bitmapDownloaderTask = getBitmapDownloaderTask(imageView);
            // Change bitmap only if this process is still associated with
            // it
            if (this == bitmapDownloaderTask) {
                imageView.setImageBitmap(bitmap);

                // cache the image

                String filename = String.valueOf(url.hashCode());
                File f = new File(
                        getCacheDirectory(imageView.getContext()), filename);

                imageCache.put(f.getPath(), bitmap);

                writeFile(bitmap, f);
            }
        }
    }

}

static class DownloadedDrawable extends ColorDrawable {
    private final WeakReference&lt;BitmapDownloaderTask&gt; bitmapDownloaderTaskReference;

    public DownloadedDrawable(BitmapDownloaderTask bitmapDownloaderTask) {
        super(Color.WHITE);
        bitmapDownloaderTaskReference = new WeakReference&lt;BitmapDownloaderTask&gt;(
                bitmapDownloaderTask);
    }

    public BitmapDownloaderTask getBitmapDownloaderTask() {
        return bitmapDownloaderTaskReference.get();
    }
}

// the actual download code
static Bitmap downloadBitmap(String url) {
    HttpParams params = new BasicHttpParams();
    params.setParameter(CoreProtocolPNames.PROTOCOL_VERSION,
            HttpVersion.HTTP_1_1);
    HttpClient client = new DefaultHttpClient(params);
    final HttpGet getRequest = new HttpGet(url);

    try {
        HttpResponse response = client.execute(getRequest);
        final int statusCode = response.getStatusLine().getStatusCode();
        if (statusCode != HttpStatus.SC_OK) {
            Log.w(""ImageDownloader"", ""Error "" + statusCode
                    + "" while retrieving bitmap from "" + url);
            return null;
        }

        final HttpEntity entity = response.getEntity();
        if (entity != null) {
            InputStream inputStream = null;
            try {
                inputStream = entity.getContent();
                final Bitmap bitmap = BitmapFactory
                        .decodeStream(inputStream);
                return bitmap;
            } finally {
                if (inputStream != null) {
                    inputStream.close();
                }
                entity.consumeContent();
            }
        }
    } catch (Exception e) {
        // Could provide a more explicit error message for IOException or
        // IllegalStateException
        getRequest.abort();
        Log.w(""ImageDownloader"", ""Error while retrieving bitmap from ""
                + url + e.toString());
    } finally {
        if (client != null) {
            // client.close();
        }
    }
    return null;
 }
}
</code></pre>
"
"541966","17775153","1","<p>I had this issue and implemented lruCache. I believe you need API 12 and above or use the compatiblity v4 library. lurCache is fast memory, but it also has a budget, so if you're worried about that you can use a diskcache... It's all described in <em><a href=""http://developer.android.com/training/displaying-bitmaps/cache-bitmap.html"" rel=""nofollow"">Caching Bitmaps</a></em>.</p>

<p>I'll now provide my implementation which is a <a href=""http://en.wikipedia.org/wiki/Singleton_pattern"" rel=""nofollow"">singleton</a> I call from anywhere like this:</p>

<pre><code>//Where the first is a string and the other is a imageview to load.

DownloadImageTask.getInstance().loadBitmap(avatarURL, iv_avatar);
</code></pre>

<p>Here's the ideal code to cache and then call the above in getView of an adapter when retrieving the web image:</p>

<pre><code>public class DownloadImageTask {

    private LruCache&lt;String, Bitmap&gt; mMemoryCache;

    /* Create a singleton class to call this from multiple classes */

    private static DownloadImageTask instance = null;

    public static DownloadImageTask getInstance() {
        if (instance == null) {
            instance = new DownloadImageTask();
        }
        return instance;
    }

    //Lock the constructor from public instances
    private DownloadImageTask() {

        // Get max available VM memory, exceeding this amount will throw an
        // OutOfMemory exception. Stored in kilobytes as LruCache takes an
        // int in its constructor.
        final int maxMemory = (int) (Runtime.getRuntime().maxMemory() / 1024);

        // Use 1/8th of the available memory for this memory cache.
        final int cacheSize = maxMemory / 8;

        mMemoryCache = new LruCache&lt;String, Bitmap&gt;(cacheSize) {
            @Override
            protected int sizeOf(String key, Bitmap bitmap) {
                // The cache size will be measured in kilobytes rather than
                // number of items.
                return bitmap.getByteCount() / 1024;
            }
        };
    }

    public void loadBitmap(String avatarURL, ImageView imageView) {
        final String imageKey = String.valueOf(avatarURL);

        final Bitmap bitmap = getBitmapFromMemCache(imageKey);
        if (bitmap != null) {
            imageView.setImageBitmap(bitmap);
        } else {
            imageView.setImageResource(R.drawable.ic_launcher);

            new DownloadImageTaskViaWeb(imageView).execute(avatarURL);
        }
    }

    private void addBitmapToMemoryCache(String key, Bitmap bitmap) {
        if (getBitmapFromMemCache(key) == null) {
            mMemoryCache.put(key, bitmap);
        }
    }

    private Bitmap getBitmapFromMemCache(String key) {
        return mMemoryCache.get(key);
    }

    /* A background process that opens a http stream and decodes a web image. */

    class DownloadImageTaskViaWeb extends AsyncTask&lt;String, Void, Bitmap&gt; {
        ImageView bmImage;

        public DownloadImageTaskViaWeb(ImageView bmImage) {
            this.bmImage = bmImage;
        }

        protected Bitmap doInBackground(String... urls) {

            String urldisplay = urls[0];
            Bitmap mIcon = null;
            try {
                InputStream in = new java.net.URL(urldisplay).openStream();
                mIcon = BitmapFactory.decodeStream(in);

            } 
            catch (Exception e) {
                Log.e(""Error"", e.getMessage());
                e.printStackTrace();
            }

            addBitmapToMemoryCache(String.valueOf(urldisplay), mIcon);

            return mIcon;
        }

        /* After decoding we update the view on the main UI. */
        protected void onPostExecute(Bitmap result) {
            bmImage.setImageBitmap(result);
        }
    }
}
</code></pre>
"
"541966","17917897","4","<p>I can recommend a different way that works like a charm: Android Query.</p>

<p>You can download that <a href=""http://en.wikipedia.org/wiki/JAR_%28file_format%29"" rel=""nofollow"">JAR</a> file from <a href=""http://code.google.com/p/android-query/downloads/list"" rel=""nofollow"">here</a></p>

<pre><code>AQuery androidAQuery = new AQuery(this);
</code></pre>

<p>As an example:</p>

<pre><code>androidAQuery.id(YOUR IMAGEVIEW).image(YOUR IMAGE TO LOAD, true, true, getDeviceWidth(), ANY DEFAULT IMAGE YOU WANT TO SHOW);
</code></pre>

<p>It's very fast and accurate, and using this you can find many more features like animation when loading, getting a bitmap (if needed), etc.</p>
"
"541966","18281334","2","<p>I use <a href=""http://bit.ly/droidQuery"" rel=""nofollow"">droidQuery</a>. There are two mechanisms for loading an image from a URL. The first (shorthand) is simply:</p>

<pre><code>$.with(myView).image(url);
</code></pre>

<p>This can be added into an <code>ArrayAdapter</code>'s <code>getView(...)</code> method very easily.</p>

<hr>

<p>The longhand method will give a lot more control, and has options not even discussed here (such as cacheing and callbacks), but a basic implementation that specifies the output size as 200px x 200px can be found here:</p>

<pre><code>$.ajax(new AjaxOptions().url(url)
                        .type(""GET"")
                        .dataType(""image"")
                        .imageWidth(200).imageHeight(200)
                        .success(new Function() {
                            @Override
                            public void invoke($ droidQuery, Object... params) {
                                myImageView.setImageBitmap((Bitmap) params[0]);
                            }
                        })
                        .error(new Function() {
                            @Override
                            public void invoke($ droidQuery, Object... params) {
                                AjaxError e = (AjaxError) params[0];
                                Log.e(""$"", ""Error "" + e.status + "": "" + e.error);
                            }
                        }));
</code></pre>
"
"541966","18592615","3","<p>You can try the <strong><em>Aquery</em> Android</strong> library for lazy loading image and listview... The below code may help you..... <a href=""http://code.google.com/p/android-query/downloads/detail?name=android-query-full.0.25.10.jar"" rel=""nofollow"">download library from here</a>.</p>

<pre><code>AQuery aq = new AQuery(mContext);
aq.id(R.id.image1).image(""http://data.whicdn.com/images/63995806/original.jpg"");
</code></pre>
"
"541966","19392742","12","<p>This is a common problem on Android that has been solved in many ways by many people.  In my opinion the best solution I've seen is the relatively new library called <a href=""http://square.github.io/picasso/"">Picasso</a>.  Here are the highlights:</p>

<ul>
<li>Open source, but headed up by <code>Jake Wharton</code> of <a href=""http://actionbarsherlock.com/"">ActionBarSherlock</a> fame.</li>
<li>Asynchronously load images from network or app resources with one line of code</li>
<li>Automatic <code>ListView</code> detection</li>
<li>Automatic disk and memory caching</li>
<li>Can do custom transformations</li>
<li>Lots of configurable options</li>
<li>Super simple API</li>
<li>Frequently updated</li>
</ul>
"
"541966","22862991","8","<p>Use Jake Wharton's  Picasso Library. 
(A Perfect ImageLoading Library form the developer of ActionBarSherlock)</p>

<p>A powerful image downloading and caching library for Android.</p>

<p>Images add much-needed context and visual flair to Android applications. Picasso allows for hassle-free image loading in your application—often in one line of code!</p>

<pre><code>Picasso.with(context).load(""http://i.imgur.com/DvpvklR.png"").into(imageView);
</code></pre>

<p>Many common pitfalls of image loading on Android are handled automatically by Picasso:</p>

<p>Handling ImageView recycling and download cancelation in an adapter.
Complex image transformations with minimal memory use.
Automatic memory and disk caching.</p>

<p><a href=""http://square.github.io/picasso/"">Picasso Jake Wharton's Library</a></p>
"
"541966","23798872","3","<p><a href=""http://square.github.io/picasso/"" rel=""nofollow""><strong>Picasso</strong></a> allows for hassle-free image loading in your application—often in one line of code!</p>

<pre><code>Picasso.with(context).load(""http://i.imgur.com/DvpvklR.png"").into(imageView);
</code></pre>

<p>Many common pitfalls of image loading on Android are handled automatically by <a href=""http://square.github.io/picasso/"" rel=""nofollow""><strong>Picasso</strong></a>:</p>

<ul>
<li>Handling ImageView recycling and download cancelation in an adapter.</li>
<li>Complex image transformations with minimal memory use.</li>
<li>Automatic memory and disk caching.</li>
</ul>

<p><img src=""http://i.stack.imgur.com/ILaaN.png"" alt=""enter image description here""></p>
"
"541966","24339989","0","<p>Another way to do it, is through your adapter in a thread in your getView() method :</p>

<pre><code>                        Thread pics_thread = new Thread(new Runnable(){

                            @Override
                            public void run() {

                            Bitmap bitmap = getPicture(url);

                            if(bitmap!=null){

                                runOnUiThread(new Runnable(){

                                        @Override
                                        public void run() {

                                        holder.imageview.setImageBitmap(bitmap)
                                        adapter.notifyDataSetChanged();

                                        }

                                });

                            }


                        });

                        pics_thread.start();
</code></pre>

<p>of course, you should always cache your images to avoid extra operations, you could put your images in a HashMap array, check if the image exists in the array, if not, proceed with the thread or else load the image from you HashMap array. Also always check that you are not leaking memory, bitmaps and drawables are often heavy on memory. It is up to you to optimize your code.</p>
"
"574195","659810","2","<p>Found it:  </p>

<pre><code>03-18 12:40:02.842: INFO/ActivityManager(68): Starting activity: Intent { action=android.intent.action.VIEW data=(URL TO A FLV FILE OF THE VIDEO) type=video/* comp={com.google.android.youtube/com.google.android.youtube.YouTubePlayer} (has extras) }
</code></pre>
"
"574195","1309821","95","<p>This will work on a device but not the emulator per <a href=""http://stackoverflow.com/a/599119/50776"">Lemmy's answer</a>.</p>

<p><code>startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""http://www.youtube.com/watch?v=cxLG2wtE7TM"")));</code></p>
"
"574195","4129191","0","<p>You can also just grab the <code>WebViewClient</code> </p>

<pre><code>wvClient = new WebViewClient() {
@Override
public boolean shouldOverrideUrlLoading(WebView view, String url) {
  if (url.startsWith(""youtube:"")) {
    String youtubeUrl = ""http://www.youtube.com/watch?v=""
    + url.Replace(""youtube:"", """");
  startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(youtubeUrl)));
}
return false;
}
</code></pre>

<p>Worked fine in my app.</p>
"
"574195","4132198","0","<p>Try this,</p>

<pre><code>       WebView webview = new WebView(this); 

       String htmlString = ""&lt;html&gt; &lt;body&gt; &lt;embed src=\""youtube link\""; type=application/x-shockwave-flash width=""+widthOfDevice+"" height=""+heightOfDevice+""&gt; &lt;/embed&gt; &lt;/body&gt; &lt;/html&gt;"";

       webview.loadData(htmlString ,""text/html"", ""UTF-8"");
</code></pre>
"
"574195","4181530","9","<pre><code>    Intent videoClient = new Intent(Intent.ACTION_VIEW);
    videoClient.setData(Uri.parse(""http://m.youtube.com/watch?v=""+videoId));
    startActivityForResult(videoClient, 1234);
</code></pre>

<p>where videoId is the video id of the youtube video that has to be played. This code works fine on Motorola Milestone.</p>

<p>But basically what we can do is to check for what activity is loaded when you start the Youtube app and accordingly substitute for the packageName and the className.</p>
"
"574195","5375841","1","<p>Try this:</p>

<pre><code>public class abc extends Activity implements OnPreparedListener{

  /** Called when the activity is first created. */

  @Override
    public void onCreate(Bundle savedInstanceState)
  {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);
    startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""http://www.youtube.com/watch?v=cxLG2wtE7TM"")));          


    @Override
      public void onPrepared(MediaPlayer mp) {
        // TODO Auto-generated method stub

    }
  }
}
</code></pre>
"
"574195","6781064","3","<p>Replying to old question, just to inform you guys that package have changed, heres the update</p>

<pre><code>Intent videoClient = new Intent(Intent.ACTION_VIEW);
videoClient.setData(""VALID YOUTUBE LINK WITH HTTP"");
videoClient.setClassName(""com.google.android.youtube"", ""com.google.android.youtube.WatchActivity"");
startActivity(videoClient);
</code></pre>

<p>This works very well, but when you call normal Intent with ACTION_VIEW with valid youtube URL user gets the Activity selector anyways.</p>
"
"574195","7115040","22","<p>Here's how I solved this issue:</p>

<pre><code>Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(""vnd.youtube://"" + video_id);
startActivity(intent);
</code></pre>

<p>Now that I've done some more research, it looks like I only needed 'vnd.youtube:VIDEO_ID' instead of two slashes after the colon (':' vs. '://'):</p>

<p><a href=""http://it-ride.blogspot.com/2010/04/android-youtube-intent.html"">http://it-ride.blogspot.com/2010/04/android-youtube-intent.html</a></p>

<p>I tried most of the suggestions here and they didn't really work very well with all of the supposed ""direct"" methods raising exceptions.  I would assume that, with my method, if the YouTube app is NOT installed, the OS has a default fallback position of something other than crashing the app.  The app is theoretically only going on devices with the YouTube app on them anyway, so this should be a non-issue.</p>
"
"574195","7334252","16","<p>Use my code .. I am able to play youtube video using this code ... you just need to provide  youtube video id in the ""videoId"" variable ....</p>

<pre><code>String videoId = ""Fee5vbFLYM4"";
Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(""vnd.youtube:""+videoId)); 
intent.putExtra(""VIDEO_ID"", videoId); 
startActivity(intent); 
</code></pre>
"
"574195","9375105","3","<p>EDIT: The below implementation proved to have problems on at least some HTC devices (they crashed). For that reason I don't use setclassname and stick with the action chooser menu. I strongly discourage using my old implementation.</p>

<p><strong>Following is the old implementation:</strong></p>

<pre><code>Intent intent = new Intent(android.content.Intent.ACTION_VIEW, Uri.parse(youtubelink));
                if(Utility.isAppInstalled(""com.google.android.youtube"", getActivity())) {
                    intent.setClassName(""com.google.android.youtube"", ""com.google.android.youtube.WatchActivity"");
                }
                startActivity(intent);
</code></pre>

<p>Where Utility is my own personal utility class with following methode:</p>

<pre><code>public static boolean isAppInstalled(String uri, Context context) {
    PackageManager pm = context.getPackageManager();
    boolean installed = false;
    try {
        pm.getPackageInfo(uri, PackageManager.GET_ACTIVITIES);
        installed = true;
    } catch (PackageManager.NameNotFoundException e) {
        installed = false;
    }
    return installed;
}
</code></pre>

<p>First I check if youtube is installed, if it is installed, I tell android which package I prefer to open my intent.</p>
"
"574195","12439378","18","<p>And how about this</p>

<pre><code>public static void watchYoutubeVideo(String id){
    try{
         Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(""vnd.youtube:"" + id));
         startActivity(intent);                 
         }catch (ActivityNotFoundException ex){
             Intent intent=new Intent(Intent.ACTION_VIEW, 
             Uri.parse(""http://www.youtube.com/watch?v=""+id));
             startActivity(intent);
         }
}
</code></pre>
"
"574195","26190016","1","<pre><code>/**
 * Intent to open a YouTube Video
 * 
 * @param pm
 *            The {@link PackageManager}.
 * @param url
 *            The URL or YouTube video ID.
 * @return the intent to open the YouTube app or Web Browser to play the video
 */
public static Intent newYouTubeIntent(PackageManager pm, String url) {
    Intent intent;
    if (url.length() == 11) {
        // youtube video id
        intent = new Intent(Intent.ACTION_VIEW, Uri.parse(""vnd.youtube://"" + url));
    } else {
        // url to video
        intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
    }
    try {
        if (pm.getPackageInfo(""com.google.android.youtube"", 0) != null) {
            intent.setPackage(""com.google.android.youtube"");
        }
    } catch (NameNotFoundException e) {
    }
    return intent;
}
</code></pre>
"
"600207","3780768","10","<p>You can use this (i didnt try this yet, but hope this works)</p>

<pre><code>if(startService(someIntent) != null) { 
    Toast.makeText(getBaseContext(), ""Service is already running"", Toast.LENGTH_SHORT).show();
}else {
    Toast.makeText(getBaseContext(), ""There is no service running, starting service.."", Toast.LENGTH_SHORT).show();
}
</code></pre>

<p>the startService method return a ComponentName object, if there is an already running service, if not null will returned.</p>

<p><a href=""http://developer.android.com/reference/android/content/Context.html#startService%28android.content.Intent%29"" rel=""nofollow"">http://developer.android.com/reference/android/content/Context.html#startService%28android.content.Intent%29</a></p>

<p>This is not like checking i think, because its starting the service, so you can add <code>stopService(someIntent);</code> 
under the code </p>
"
"600207","4976311","2","<p><code>onDestroy</code> isn't always called in the service so this is useless! </p>

<p>For example: Just run the app again with one change from Eclipse. The application is forcefully exited using SIG: 9.</p>
"
"600207","4976378","29","<p>Got it! </p>

<p>You MUST call <code>startService()</code> for your service to be properly registered and passing <code>BIND_AUTO_CREATE</code> will not suffice.</p>

<pre><code>    Intent bindIntent = new Intent(this,ServiceTask.class);
    startService(bindIntent);
    bindService(bindIntent,mConnection,0);
</code></pre>

<p>And now the ServiceTools class:</p>

<pre><code>public class ServiceTools {
    private static String LOG_TAG = ServiceTools.class.getName();

    public static boolean isServiceRunning(String serviceClassName){
        final ActivityManager activityManager = (ActivityManager)Application.getContext().getSystemService(Context.ACTIVITY_SERVICE);
        final List&lt;RunningServiceInfo&gt; services = activityManager.getRunningServices(Integer.MAX_VALUE);

        for (RunningServiceInfo runningServiceInfo : services) {
            if (runningServiceInfo.service.getClassName().equals(serviceClassName)){
                return true;
            }
        }
        return false;
     }
}
</code></pre>
"
"600207","5921190","611","<p>I use following from inside an activity:</p>

<pre><code>private boolean isMyServiceRunning(Class&lt;?&gt; serviceClass) {
    ActivityManager manager = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);
    for (RunningServiceInfo service : manager.getRunningServices(Integer.MAX_VALUE)) {
        if (serviceClass.getName().equals(service.service.getClassName())) {
            return true;
        }
    }
    return false;
}
</code></pre>

<p>And call it using:</p>

<pre><code>isMyServiceRunning(MyService.class)
</code></pre>

<p>This works reliably because it is based on the information about running services provided by the Android operating system through 
<a href=""http://developer.android.com/reference/android/app/ActivityManager.html#getRunningServices%28int%29"">ActivityManager#getRunningServices</a>.</p>

<p>All the approaches using onDestroy or onSometing events or Binders or static variables will not work reliably because as a developer you never know, when Android decides to kill you process or which of the mentioned callbacks are called or not. Please note the ""killable"" column in the <a href=""http://developer.android.com/reference/android/app/Activity.html#ActivityLifecycle"">lifecycle events table</a> in Android documentation.</p>
"
"600207","6070918","21","<p>I would like to propose a small complement to this old thread.</p>

<p>My goal is to know wether a service is running without actualy running it if it is not running.</p>

<p>Calling bindService or calling an intent that can be caught by the service is not a good idea then as it will start the service if it is not running.</p>

<p>So, as miracle2k suggested, the best is to have a static field in the service class to know whether the service has been started or not.</p>

<p>To make it even cleaner, I suggest to transform the service in a singleton with a very very lazy fetching : i.e the is no istanciation at all of the singleton instance through static methods. The static getInstance method of your service/singleton just return the instance of the singleton if it has been created. But it doesn't actualy start or instanciate the singleton itself. The service is only started through normal service start methods.</p>

<p>It would then be even cleaner to modify the singleton design pattern to rename the confusing getInstance method into something like isInstanceCreated() : boolean method.</p>

<p>The code will look like : </p>

<pre><code>public class MyService extends Service 
{
   private static MyService instance = null;

   public static boolean isInstanceCreated() { 
      return instance != null; 
   }//met

   @Override 
   public void onCreate()
   {
      instance = this;
      ....
   }//met

   @Override 
   public void onDestroy() 
   {
      instance = null;
      ...
   }//met
}//class
</code></pre>

<p>This solution is elegant but only relevant if you have access to the service class and only for classes iside the app/package of the service. If your classes are outside of the service app/package then you could query the ActivityManager with limitations underlined by Pieter-Jan Van Robays.</p>
"
"600207","12448802","1","<p>I just want to add a note to the answer by @Snicolas. The following steps can be used to check stop service with/without calling <code>onDestroy()</code>.</p>

<ol>
<li><p><code>onDestroy()</code> called: Go to Settings -> Application -> Running Services -> Select and stop your service.</p></li>
<li><p><code>onDestroy()</code> not Called: Go to Settings -> Application -> Manage Applications -> Select and ""Force Stop"" your application in which your service is running. However, as your application is stopped here, so definitely the service instances will also be stopped.</p></li>
</ol>

<p>Finally, I would like to mention that the approach mentioned there using a static variable in singleton class is working for me.</p>
"
"600207","16789071","1","<p>For the use-case given here we may simply make use of the <code>stopService()</code> method's return value. It returns <code>true</code> if there exists the specified service and it is killed. Else it returns <code>false</code>. So you may restart the service if the result is <code>false</code> else it is assured that the current service has been stopped. :) It would be better if you have a look at <a href=""http://developer.android.com/reference/android/content/Context.html#stopService%28android.content.Intent%29"" rel=""nofollow"">this</a>.</p>
"
"600207","17435583","0","<p>Take it easy guys... :)</p>

<p>I think the most suitable solution is holding a key-value pair in <code>SharedPreferences</code> about if the service is running or not.</p>

<p>Logic is very straight; at any desired position in your service class; put a boolean value which will act as a flag for you about whether the service is running or not. Then read this value whereever you want in your application.</p>

<p>A sample code which I am using in my app is below:</p>

<p>In my Service class (A service for Audio Stream), I execute the following code when the service is up;</p>

<pre><code>private void updatePlayerStatus(boolean isRadioPlaying)
{
        SharedPreferences sharedPref = this.getSharedPreferences(getString(R.string.str_shared_file_name), Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = sharedPref.edit();
        editor.putBoolean(getString(R.string.str_shared_file_radio_status_key), isRadioPlaying);
        editor.commit();
}
</code></pre>

<p>Then in any activity of my application, I am checking the status of the service with the help of following code;</p>

<pre><code>private boolean isRadioRunning() {
        SharedPreferences sharedPref = this.getSharedPreferences(getString(R.string.str_shared_file_name), Context.MODE_PRIVATE);

        return sharedPref.getBoolean(getString(R.string.str_shared_file_radio_status_key), false);
}
</code></pre>

<p>No special permissions, no loops... Easy way, clean solution :)</p>

<p>If you need extra information, please refer the link below:
<a href=""http://developer.android.com/training/basics/data-storage/shared-preferences.html"" rel=""nofollow"">http://developer.android.com/training/basics/data-storage/shared-preferences.html</a></p>

<p>Hope this helps.</p>
"
"600207","22681644","0","<p>There can be several services with the same class name. </p>

<p>I've just created two apps. The package name of the first app is <code>com.example.mock</code>. I created a subpackage called <code>lorem</code> in the app and a service called <code>Mock2Service</code>. So its fully qualified name is <code>com.example.mock.lorem.Mock2Service</code>.</p>

<p>Then I created the second app and a service called <code>Mock2Service</code>. The package name of the second app is <code>com.example.mock.lorem</code>. The fully qualified name of the service is <code>com.example.mock.lorem.Mock2Service</code>, too.</p>

<p>Here is my logcat output.</p>

<pre><code>03-27 12:02:19.985: D/TAG(32155): Mock-01: com.example.mock.lorem.Mock2Service
03-27 12:02:33.755: D/TAG(32277): Mock-02: com.example.mock.lorem.Mock2Service
</code></pre>

<p>A better idea is to compare <code>ComponentName</code> instances because <code>equals()</code> of <code>ComponentName</code> compares both package names and class names. And there can't be two apps with the same package name installed on a device.</p>

<p>The equals() method of <code>ComponentName</code>.</p>

<pre><code>@Override
public boolean equals(Object obj) {
    try {
        if (obj != null) {
            ComponentName other = (ComponentName)obj;
            // Note: no null checks, because mPackage and mClass can
            // never be null.
            return mPackage.equals(other.mPackage)
                    &amp;&amp; mClass.equals(other.mClass);
        }
    } catch (ClassCastException e) {
    }
    return false;
}
</code></pre>

<p><a href=""http://developer.android.com/reference/android/content/ComponentName.html"" rel=""nofollow"">ComponentName</a></p>
"
"600207","24729110","0","<pre><code>public boolean check(){
     ActivityManager manager = (ActivityManager) getSystemService(ACTIVITY_SERVICE);
    for (RunningServiceInfo service : manager.getRunningServices(Integer.MAX_VALUE)) 
            {
                if (""com.example.yourpackagename.YourserviceName""
                        .equals(service.service.getClassName())) 
                {
                    return true;
                }
            }
         return false;
    }
</code></pre>
"
"600207","25172051","0","<p>Again, another alternative that people might find cleaner if they use pending intents (for instance with the <code>AlarmManager</code>: </p>

<pre><code>public static boolean isRunning(Class&lt;? extends Service&gt; serviceClass) {
    final Intent intent = new Intent(context, serviceClass);
    return (PendingIntent.getService(context, CODE, intent, PendingIntent.FLAG_NO_CREATE) != null);
}
</code></pre>

<p>Where <code>CODE</code> is a constant that you define privately in your class to identify the pending intents associated to your service.</p>
"
"660151","660671","3","<p>I do not see a related method for that attribute in the EditText
class.  However, there are other similar things you could use such as
<code>android:focus/setFocusable(boolean)</code> or create another TextView whose
<code>android:editable=""false""</code> and use <code>setVisiblilty()</code> to switch between the
editable and not editable views.  If you use <code>View.GONE</code> the user will
never know there are two EditTexts.</p>

<p>If your feeling ambitious you could probably do something with the EditText's <code>onTextChanged</code> listener like having it react with a <code>setText</code>.</p>
"
"660151","911407","8","<p>I think an <a href=""http://developer.android.com/reference/android/text/InputFilter.html""><code>InputFilter</code></a> that rejects all changes is a good solution:</p>

<pre><code>editText.setFilters(new InputFilter[] {
    new InputFilter() {
    	public CharSequence filter(CharSequence src, int start,
    		int end, Spanned dst, int dstart, int dend) {
    		return src.length() &lt; 1 ? dst.subSequence(dstart, dend) : """";
    	}
    }
});</code></pre>
"
"660151","2112807","3","<p>[Posting a new answer, since I can't comment on Josef's answer.]</p>

<p>The input filter works fine, but it has a subtle bug in it: typing over a selection will delete all the text.</p>

<p>For example, say you have the text <code>""foo""</code> in the <code>EditText</code>.  If you select it all (e.g., by double-clicking on it) and type <code>'a'</code>, the text will disappear.  This is because the <code>InputFilter</code> will be called as:</p>

<pre><code>filter(""a"", 0, 1, ""foo"", 0, 3);
</code></pre>

<p>The proposed input filter will return the empty string in this case (because <code>src.length() &lt; 1</code> is <code>false</code>), which explains the missing text.</p>

<p>The solution is to simply return <code>dst.subSequence(dstart, dend)</code> in the filter function.  This will work fine even for deletions.</p>
"
"660151","4341748","17","<pre><code>editText.setFocusable(false);
editText.setClickable(false);
</code></pre>

<p>this ensure the <code>EditText</code> control can't be selected and focused, so it can't be edited.</p>
"
"660151","4438248","-1","<p>I think the correct way to achieve the desired effect is:</p>

<pre><code>mEditView.setText(""my text"", BufferType.NORMAL);
</code></pre>

<p>If you want to switch between editable and non-editable you can do the following:</p>

<pre><code>// Switch to non-editable
mEditView.setText(mEditView.getText(), BufferType.NORMAL);

// Switch back to editable
mEditView.setText(mEditView.getText(), BufferType.EDITABLE);
</code></pre>
"
"660151","6351859","10","<p>The best way to do this is with this single line of code:</p>

<pre><code>textView.setKeyListener(null);
</code></pre>

<p>The docs say for this method:</p>

<blockquote>
  <p>Sets the key listener to be used with
  this TextView. This can be null to
  disallow user input.</p>
</blockquote>
"
"660151","8460635","1","<p>I wanted to also point out an alternative solution that works nicely if you are creating new instances of an EditView. You can override the method getDefaultEditable() as suggested by the docs to return false. E.g.</p>

<pre><code>EditText view = new EditText(DiscountCalculator.this) {
    public boolean getDefaultEditable() {
        return false;
    }
};
</code></pre>
"
"660151","9275658","6","<p>I just tried this myself,</p>

<p>To disable editing text:</p>

<pre><code>.setFocusable(false);
</code></pre>

<p>this also sets setFocusableInTouchMode to false!</p>

<p>To enable editing text:</p>

<pre><code>setFocusableInTouchMode(true);
</code></pre>

<p>this also sets setFocusable to true;</p>
"
"660151","15963573","2","<pre><code>android:editable=""false"" 
android:inputType=""none"" 
</code></pre>

<p>in your xml
 or</p>

<pre><code>EditText mEdit = (EditText) findViewById(R.id.yourid);
mEdit.setEnabled(false);
</code></pre>

<p>or </p>

<pre><code>EditText mEdit = (EditText) findViewById(R.id.yourid);
mEdit.setKeyListener(null);
</code></pre>
"
"660151","16862490","0","<p>The only solution I have found for this scenario is to create 2 layouts.  One is editable and one is not.  You may have to create more than 2 layouts based on various conditions.  Store the conditions in SharedPreferences or other means and load the relevant layout based on conditions after restarting the Activity.  Here's an example:</p>

<p>in onCreate() of the activity:</p>

<pre><code>    configuration = new Configuration(this.getSharedPreferences(Configuration.SHARED_PREFERENCES_FILE_NAME, Context.MODE_PRIVATE));
    manualSettingsMode = configuration.isManualSettingsMode();
    if(manualSettingsMode){
        setContentView(R.layout.editableconfigurationsettings);
    }else {
        setContentView(R.layout.configurationsettings);
    }
</code></pre>

<p>The activity can be restarted based on testing for condition and calling functions as:</p>

<pre><code>private void setManualEditing(){
    configuration.set_isManualSettingsMode(true);
    this.recreate();
}

private void setAutoEditing(){
    configuration.set_isManualSettingsMode(false);
    this.recreate();
}
</code></pre>

<p>Hope this helps.  There really has to be a better solution, but this is what I've been doing.  Ideally, one would be able to do this on individual fields and not have to reload the activity / layouts. -bobby</p>
"
"660151","17723635","0","<p>You can try this :</p>

<pre><code>                    mEditText.setFocusable(false);
        mEditText.setClickable(false);
        mEditText.setFocusableInTouchMode(false);
        mEditText.setLongClickable(false);
        mEditText.setInputType(InputType.TYPE_NULL);
</code></pre>

<p>This will completely disable EditText, disable long press if you don't want user to open edit text options</p>
"
"867518","3291885","26","<p>I found this solution:</p>

<pre><code>String[] items = new String[] {""Select One"", ""Two"", ""Three""};
Spinner spinner = (Spinner) findViewById(R.id.mySpinner);
ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(this,
            android.R.layout.simple_spinner_item, items);
adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
spinner.setAdapter(adapter);

spinner.setOnItemSelectedListener(new OnItemSelectedListener() {
    @Override
    public void onItemSelected(AdapterView&lt;?&gt; arg0, View arg1, int position, long id) {
        items[0] = ""One"";
        selectedItem = items[position];
    }

    @Override
    public void onNothingSelected(AdapterView&lt;?&gt; arg0) {
    }
});
</code></pre>

<p>Just change the array[0] with ""Select One"" and then in the onItemSelected, rename it to ""One"".</p>

<p>Not a classy solution, but it works :D</p>
"
"867518","3427058","112","<p>Here's a general solution that overrides the Spinner view. It overrides setAdapter() to set the initial position to -1, and proxies the supplied SpinnerAdapter to display the prompt string for position less than 0.</p>

<p>This has been tested on Android 1.5 through 4.2, but buyer beware! Because this solution relies on reflection to call the private AdapterView.setNextSelectedPositionInt() and AdapterView.setSelectedPositionInt(), it's not guaranteed to work in future OS updates. It seems likely that it will, but it is by no means guaranteed.</p>

<p>Normally I wouldn't condone something like this, but this question has been asked enough times and it seems like a reasonable enough request that I thought I would post my solution.</p>

<pre><code>/**
 * A modified Spinner that doesn't automatically select the first entry in the list.
 *
 * Shows the prompt if nothing is selected.
 *
 * Limitations: does not display prompt if the entry list is empty.
 */
public class NoDefaultSpinner extends Spinner {

    public NoDefaultSpinner(Context context) {
        super(context);
    }

    public NoDefaultSpinner(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    public NoDefaultSpinner(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
    }

    @Override
    public void setAdapter(SpinnerAdapter orig ) {
        final SpinnerAdapter adapter = newProxy(orig);

        super.setAdapter(adapter);

        try {
            final Method m = AdapterView.class.getDeclaredMethod(
                               ""setNextSelectedPositionInt"",int.class);
            m.setAccessible(true);
            m.invoke(this,-1);

            final Method n = AdapterView.class.getDeclaredMethod(
                               ""setSelectedPositionInt"",int.class);
            n.setAccessible(true);
            n.invoke(this,-1);
        } 
        catch( Exception e ) {
            throw new RuntimeException(e);
        }
    }

    protected SpinnerAdapter newProxy(SpinnerAdapter obj) {
        return (SpinnerAdapter) java.lang.reflect.Proxy.newProxyInstance(
                obj.getClass().getClassLoader(),
                new Class[]{SpinnerAdapter.class},
                new SpinnerAdapterProxy(obj));
    }



    /**
     * Intercepts getView() to display the prompt if position &lt; 0
     */
    protected class SpinnerAdapterProxy implements InvocationHandler {

        protected SpinnerAdapter obj;
        protected Method getView;


        protected SpinnerAdapterProxy(SpinnerAdapter obj) {
            this.obj = obj;
            try {
                this.getView = SpinnerAdapter.class.getMethod(
                                 ""getView"",int.class,View.class,ViewGroup.class);
            } 
            catch( Exception e ) {
                throw new RuntimeException(e);
            }
        }

        public Object invoke(Object proxy, Method m, Object[] args) throws Throwable {
            try {
                return m.equals(getView) &amp;&amp; 
                       (Integer)(args[0])&lt;0 ? 
                         getView((Integer)args[0],(View)args[1],(ViewGroup)args[2]) : 
                         m.invoke(obj, args);
            } 
            catch (InvocationTargetException e) {
                throw e.getTargetException();
            } 
            catch (Exception e) {
                throw new RuntimeException(e);
            }
        }

        protected View getView(int position, View convertView, ViewGroup parent) 
          throws IllegalAccessException {

            if( position&lt;0 ) {
                final TextView v = 
                  (TextView) ((LayoutInflater)getContext().getSystemService(
                    Context.LAYOUT_INFLATER_SERVICE)).inflate(
                      android.R.layout.simple_spinner_item,parent,false);
                v.setText(getPrompt());
                return v;
            }
            return obj.getView(position,convertView,parent);
        }
    }
}
</code></pre>
"
"867518","3844894","8","<p>I got the same problem for spinner, with an empty selection, and I found a better solution. Have a look at this simple code.</p>

<pre><code>Spinner lCreditOrDebit = (Spinner)lCardPayView.findViewById(R.id.CARD_TYPE);
spinneradapter lAdapter = 
  new spinneradapter(
    BillPayScreen.this, 
    ndroid.R.layout.simple_spinner_item,getResources().getStringArray(R.array.creditordebit));
lAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
lCreditOrDebit.setAdapter(lAdapter);
</code></pre>

<p>Here spinneradapter is a small customization for arrayadapter. It looks like this:</p>

<pre><code>import android.content.Context;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;

public class spinneradapter extends ArrayAdapter&lt;String&gt;{
    private Context m_cContext;
    public spinneradapter(Context context,int textViewResourceId, String[] objects) {
        super(context, textViewResourceId, objects);
        this.m_cContext = context;
    }

    boolean firsttime = true;
    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        if(firsttime){
            firsttime = false;
            //Just return some empty view
            return new ImageView(m_cContext);
        }
        //Let the array adapter take care of it this time.
        return super.getView(position, convertView, parent);
    }
}
</code></pre>
"
"867518","4101664","6","<p>XML file:    </p>

<pre><code>&lt;Spinner android:id=""@+id/locationSpinner""
    android:layout_width=""fill_parent""
    android:layout_height=""wrap_content""
    android:prompt=""@string/select_location"" /&gt;
</code></pre>

<p>Activity:</p>

<pre><code>private Spinner featuresSelection;
private ArrayAdapter&lt;CharSequence&gt; featuresAdapter;
private List&lt;CharSequence&gt; featuresList;
</code></pre>

<p>onCreate:</p>

<pre><code>featuresList = new ArrayList&lt;CharSequence&gt;();
featuresAdapter = new ArrayAdapter&lt;CharSequence&gt;(this,
  android.R.layout.simple_spinner_item, featuresList);
featuresAdapter.setDropDownViewResource(
  android.R.layout.simple_spinner_dropdown_item);
featuresSelection = ((Spinner) yourActivity.this
  .findViewById(R.id.locationSpinner));
featuresSelection.setAdapter(featuresAdapter);
featuresSelection.setOnItemSelectedListener(
  new MyOnItemSelectedListener());
</code></pre>

<p>Some function (add things to the adapter programmatically)></p>

<pre><code>featuresAdapter.add(""some string"");
</code></pre>

<p>Now you have an empty spinner and you can write code to not open the dialog if empty. Or they can press back. But you also populate it with a function or another list during run time.</p>
"
"867518","5790662","83","<p>I ended up using a <code>Button</code> instead. While a <code>Button</code> is not a <code>Spinner</code>, the behavior is easy to customize.</p>

<p>First create the Adapter as usual:</p>

<pre><code>String[] items = new String[] {""One"", ""Two"", ""Three""};
ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(this,
        android.R.layout.simple_spinner_dropdown_item, items);
</code></pre>

<p>Note that I am using the <code>simple_spinner_dropdown_item</code> as the layout id. This will help create a better look when creating the alert dialog.</p>

<p>In the onClick handler for my Button I have:</p>

<pre><code>public void onClick(View w) {
  new AlertDialog.Builder(this)
  .setTitle(""the prompt"")
  .setAdapter(adapter, new DialogInterface.OnClickListener() {

    @Override
    public void onClick(DialogInterface dialog, int which) {

      // TODO: user specific action

      dialog.dismiss();
    }
  }).create().show();
}
</code></pre>

<p>And that's it!</p>
"
"867518","7701044","2","<p>I have a spinner on my main.xml and its id is <code>@+id/spinner1</code></p>

<p>this is what i write in my OnCreate function :</p>

<pre><code>spinner1 = (Spinner)this.findViewById(R.id.spinner1);
final String[] groupes = new String[] {""A"", ""B"", ""C"", ""D"", ""E"", ""F"", ""G"", ""H""};
ArrayAdapter&lt;CharSequence&gt; featuresAdapter = new ArrayAdapter&lt;CharSequence&gt;(this, android.R.layout.simple_spinner_item, new ArrayList&lt;CharSequence&gt;());
featuresAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
spinner1.setAdapter(featuresAdapter);
for (String s : groupes) featuresAdapter.add(s);

spinner1.setOnItemSelectedListener(new OnItemSelectedListener() {
     public void onItemSelected(AdapterView&lt;?&gt; arg0, View arg1, int position, long id) {
         // Here go your instructions when the user chose something
         Toast.makeText(getBaseContext(), groupes[position], 0).show();
     }
     public void onNothingSelected(AdapterView&lt;?&gt; arg0) { }
});
</code></pre>

<p>It doesn't need any implementation in the class.</p>
"
"867518","8020125","2","<p>I have tried like the following. Take a button and give the click event to it. By changing the button background, it seems to be a spinner.</p>

<p>Declare as global variables alertdialog and default value..</p>

<pre><code>AlertDialog d;
static int default_value = 0;
final Button btn = (Button) findViewById(R.id.button1);
btn .setOnClickListener(new View.OnClickListener() {

@Override
public void onClick(View v)
{
    //c.show();
    final CharSequence str[] = {""Android"",""Black Berry"",""Iphone""};
        AlertDialog.Builder builder =
          new AlertDialog.Builder(TestGalleryActivity.this).setSingleChoiceItems(
            str, default_value,new  DialogInterface.OnClickListener() {

            @Override
            public void onClick(DialogInterface dialog, int position)
            {
                Toast.makeText(TestGalleryActivity.this,
                               """" + position,
                               Toast.LENGTH_SHORT).show();
                default_value = position;
                btn.setText(str[position]);
                if(d.isShowing())
                    d.dismiss();
            }
        }).setTitle(""Select Any"");
        d = builder.create();
        d.show();
    }
});
</code></pre>
"
"867518","9840475","0","<p>When extending <code>SpinnerAdapter</code>, you override two <code>View</code>-producing methods, <code>getView(int, View, ViewGroup)</code> and <code>getDropDownView(int, View, ViewGroup)</code>.  The first one supplies the <code>View</code> inserted into the <code>Spinner</code> itself; the second supplies the <code>View</code> in the drop-down list (as the name suggests).  You can override the <code>getView(...)</code> so that, until an item has been selected, it displays a <code>TextView</code> containing a prompt; then, when you detect an item has been selected, you change it to display a <code>TextView</code> corresponding to that.</p>

<pre><code>public class PromptingAdapter extends SpinnerAdapter {

    //... various code ...

    private boolean selectionmade = false;

    //call this method from the OnItemSelectedListener for your Spinner
    public setSelectionState(boolean b) {
        selectionmade = b;
    }

    @Override
    public View getView(int position, View recycle, ViewGroup container) {
        if(selectionmade) {
            //your existing code to supply a View for the Spinner
            //you could even put ""return getDropDownView(position, recycle, container);""
        }
        else {
            View output;
            if(recycle instanceof TextView) {
                 output = recycle;
            }
            else {
                 output = new TextView();
                 //and layout stuff
            }
            output.setText(R.string.please_select_one);
            //put a string ""please_select_one"" in res/values/strings.xml
            return output;
        }
    }

//...
}
</code></pre>
"
"867518","12221309","80","<p>What you can do is decorate your SpinnerAdapter with one that presents a 'Select Option...' View initially for the Spinner to display with nothing selected.</p>

<p>Here is a working example tested for Android 2.3, and 4.0 (it uses nothing in the compatibility library, so it should be fine for awhile) Since it's a decorator, it should be easy to retrofit existing code and it works fine with CursorLoaders also. (Swap cursor on the wrapped cursorAdapter of course...)</p>

<p>There is an Android bug that makes this a little tougher to re-use views. (So you have to use the setTag or something else to ensure your convertView is correct.) <a href=""http://code.google.com/p/android/issues/detail?id=17128"">Spinner does not support multiple view types</a></p>

<p>Code notes: 2 constructors</p>

<p>This allows you to use a standard prompt or define your own 'nothing selected' as the first row, or both, or none. (Note: Some themes show a DropDown for a Spinner instead of a dialog. The Dropdown doesn't normally show the prompt)</p>

<p>You define a layout to 'look' like a prompt, for example, grayed out...</p>

<p><img src=""http://i.stack.imgur.com/aEL12.png"" alt=""Initial nothing selected""></p>

<p>Using a standard prompt (notice that nothing is selected):</p>

<p><img src=""http://i.stack.imgur.com/zFvtw.png"" alt=""With a standard prompt""></p>

<p>Or with a prompt and something dynamic (could have had no prompt also):</p>

<p><img src=""http://i.stack.imgur.com/TRDiy.png"" alt=""Prompt and nothing selected row""></p>

<p><strong>Usage in above example</strong></p>

<pre><code>    Spinner spinner = (Spinner) findViewById(R.id.spinner);
    ArrayAdapter&lt;CharSequence&gt; adapter = ArrayAdapter.createFromResource(this, R.array.planets_array, android.R.layout.simple_spinner_item);
    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    spinner.setPrompt(""Select your favorite Planet!"");

    spinner.setAdapter(
      new NothingSelectedSpinnerAdapter(
            adapter,
            R.layout.contact_spinner_row_nothing_selected,
            // R.layout.contact_spinner_nothing_selected_dropdown, // Optional
            this));
</code></pre>

<p><strong>contact_spinner_row_nothing_selected.xml</strong></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;TextView xmlns:android=""http://schemas.android.com/apk/res/android""
    android:id=""@android:id/text1""
    style=""?android:attr/spinnerItemStyle""
    android:singleLine=""true""
    android:layout_width=""match_parent""
    android:layout_height=""wrap_content""
    android:ellipsize=""marquee""
    android:textSize=""18sp""
    android:textColor=""#808080""
    android:text=""[Select a Planet...]"" /&gt;
</code></pre>

<p><strong>NothingSelectedSpinnerAdapter.java</strong></p>

<pre><code>import android.content.Context;
import android.database.DataSetObserver;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListAdapter;
import android.widget.SpinnerAdapter;

/**
 * Decorator Adapter to allow a Spinner to show a 'Nothing Selected...' initially
 * displayed instead of the first choice in the Adapter.
 */
public class NothingSelectedSpinnerAdapter implements SpinnerAdapter, ListAdapter {

    protected static final int EXTRA = 1;
    protected SpinnerAdapter adapter;
    protected Context context;
    protected int nothingSelectedLayout;
    protected int nothingSelectedDropdownLayout;
    protected LayoutInflater layoutInflater;

    /**
     * Use this constructor to have NO 'Select One...' item, instead use
     * the standard prompt or nothing at all.
     * @param spinnerAdapter wrapped Adapter.
     * @param nothingSelectedLayout layout for nothing selected, perhaps
     * you want text grayed out like a prompt...
     * @param context
     */
    public NothingSelectedSpinnerAdapter(
      SpinnerAdapter spinnerAdapter,
      int nothingSelectedLayout, Context context) {

        this(spinnerAdapter, nothingSelectedLayout, -1, context);
    }

    /**
     * Use this constructor to Define your 'Select One...' layout as the first
     * row in the returned choices.
     * If you do this, you probably don't want a prompt on your spinner or it'll
     * have two 'Select' rows.
     * @param spinnerAdapter wrapped Adapter. Should probably return false for isEnabled(0)
     * @param nothingSelectedLayout layout for nothing selected, perhaps you want
     * text grayed out like a prompt...
     * @param nothingSelectedDropdownLayout layout for your 'Select an Item...' in
     * the dropdown.
     * @param context
     */
    public NothingSelectedSpinnerAdapter(SpinnerAdapter spinnerAdapter,
            int nothingSelectedLayout, int nothingSelectedDropdownLayout, Context context) {
        this.adapter = spinnerAdapter;
        this.context = context;
        this.nothingSelectedLayout = nothingSelectedLayout;
        this.nothingSelectedDropdownLayout = nothingSelectedDropdownLayout;
        layoutInflater = LayoutInflater.from(context);
    }

    @Override
    public final View getView(int position, View convertView, ViewGroup parent) {
        // This provides the View for the Selected Item in the Spinner, not
        // the dropdown (unless dropdownView is not set).
        if (position == 0) {
            return getNothingSelectedView(parent);
        }
        return adapter.getView(position - EXTRA, null, parent); // Could re-use
                                                 // the convertView if possible.
    }

    /**
     * View to show in Spinner with Nothing Selected
     * Override this to do something dynamic... e.g. ""37 Options Found""
     * @param parent
     * @return
     */
    protected View getNothingSelectedView(ViewGroup parent) {
        return layoutInflater.inflate(nothingSelectedLayout, parent, false);
    }

    @Override
    public View getDropDownView(int position, View convertView, ViewGroup parent) {
        // BUG! Vote to fix!! http://code.google.com/p/android/issues/detail?id=17128 -
        // Spinner does not support multiple view types
        if (position == 0) {
            return nothingSelectedDropdownLayout == -1 ?
              new View(context) :
              getNothingSelectedDropdownView(parent);
        }

        // Could re-use the convertView if possible, use setTag...
        return adapter.getDropDownView(position - EXTRA, null, parent);
    }

    /**
     * Override this to do something dynamic... For example, ""Pick your favorite
     * of these 37"".
     * @param parent
     * @return
     */
    protected View getNothingSelectedDropdownView(ViewGroup parent) {
        return layoutInflater.inflate(nothingSelectedDropdownLayout, parent, false);
    }

    @Override
    public int getCount() {
        int count = adapter.getCount();
        return count == 0 ? 0 : count + EXTRA;
    }

    @Override
    public Object getItem(int position) {
        return position == 0 ? null : adapter.getItem(position - EXTRA);
    }

    @Override
    public int getItemViewType(int position) {
        // Doesn't work!! Vote to Fix! http://code.google.com/p/android/issues/detail?id=17128 -
        // Spinner does not support multiple view types
        // This method determines what is the convertView, this should
        // return 1 for pos 0 or return 0 otherwise.
        return position == 0 ?
               getViewTypeCount() - EXTRA :
               adapter.getItemViewType(position - EXTRA);
    }

    @Override
    public int getViewTypeCount() {
        return adapter.getViewTypeCount() + EXTRA;
    }

    @Override
    public long getItemId(int position) {
        return adapter.getItemId(position - EXTRA);
    }

    @Override
    public boolean hasStableIds() {
        return adapter.hasStableIds();
    }

    @Override
    public boolean isEmpty() {
        return adapter.isEmpty();
    }

    @Override
    public void registerDataSetObserver(DataSetObserver observer) {
        adapter.registerDataSetObserver(observer);
    }

    @Override
    public void unregisterDataSetObserver(DataSetObserver observer) {
        adapter.unregisterDataSetObserver(observer);
    }

    @Override
    public boolean areAllItemsEnabled() {
        return false;
    }

    @Override
    public boolean isEnabled(int position) {
        return position == 0 ? false : true; // Don't allow the 'nothing selected'
                                             // item to be picked.
    }

}
</code></pre>
"
"867518","15807631","2","<p>So this is my final example ""all-in"" for a button-spinner</p>

<p>In <strong>activity_my_form.xml</strong></p>

<pre><code>    &lt;Button
        android:id=""@+id/btnSpinnerPlanets""
        android:layout_width=""fill_parent""
        android:layout_height=""wrap_content""
        android:gravity=""left|center_vertical""
        android:singleLine=""true""
        android:text=""@string/selectAPlanet""
        android:textSize=""10sp""
        android:background=""@android:drawable/btn_dropdown""&gt;
    &lt;/Button&gt;
</code></pre>

<p>In <strong>strings.xml</strong></p>

<pre><code>&lt;string name=""selectAPlanet""&gt;Select planet&amp;#8230;&lt;/string&gt;

&lt;string-array name=""planets__entries""&gt;
    &lt;item&gt;The Sun with a name very long so long long long long longThe Sun with a name very long so long long long long longThe Sun with a name very long so long long long long long&lt;/item&gt;
    &lt;item&gt;Mercury&lt;/item&gt;
    &lt;item&gt;Venus&lt;/item&gt;
    &lt;item&gt;Earth&lt;/item&gt;
    &lt;item&gt;Mars&lt;/item&gt;
    &lt;item&gt;Jupiter&lt;/item&gt;
    &lt;item&gt;Saturn&lt;/item&gt;
    &lt;item&gt;Uranus&lt;/item&gt;
    &lt;item&gt;Neptune&lt;/item&gt;
&lt;/string-array&gt;
</code></pre>

<p>In <strong>MyFormActivity.java</strong></p>

<pre><code>public class MyFormActivity extends Activity {
    @Override
    public void onCreate(Bundle savedInstanceState) {
        ((Button) findViewById(R.id.btnSpinnerPlanets)).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                final String[] items = view.getResources().getStringArray(R.array.planets__entries);
                ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(MyFormActivity.this, android.R.layout.simple_spinner_dropdown_item, items);
                new AlertDialog.Builder(MyFormActivity.this).setTitle(""the prompt"").setAdapter(adapter, new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        ((Button) findViewById(R.id.btnSpinnerPlanets)).setText(items[which]);
                        dialog.dismiss();
                    }
                }).create().show();
            }
        });     

    }

}   
</code></pre>

<p>Finally I obtained a font size configurable no first item selectable button spinner!!!
<em>Thanks to HRJ</em></p>
"
"867518","17738487","0","<p>None of the previously submitted answers really worked the way I wanted to solve this issue. To me the ideal solution would provide the “Select One”  (or whatever initial text) when the spinner is first displayed. When the user taps the spinner, the initial text shouldn’t be a part of the drop down that is displayed.</p>

<p>To further complicate my particular situation, my spinner data is coming form a cursor that is loaded via the LoaderManager callbacks.</p>

<p>After considerable experimentation I came up with the following solution:</p>

<pre><code>public class MyFragment extends Fragment implements
LoaderManager.LoaderCallbacks&lt;Cursor&gt;{

private static final String SPINNER_INIT_VALUE = ""Select A Widget"";
private Spinner mSpinner;
private int mSpinnerPosition;
private boolean mSpinnerDropDownShowing = false;
private View mSpinnerDropDown;

private MyCursorAdapter mCursorAdapter;

...

@Override
public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState){
...

mCursorAdapter = new MyCursorAdapter(getActivity());

mSpinner = (Spinner) rootView.findViewById(R.id.theSpinner);
mSpinner.setOnTouchListener(mSpinnerTouchListener);
mSpinner.setAdapter(mCursorAdapter);

...
}

//Capture the touch events to toggle the spinner's dropdown visibility
private OnTouchListener mSpinnerTouchListener = new View.OnTouchListener() {
    @Override
    public boolean onTouch(View view, MotionEvent motionEvent) {
        if(mSpinnerDropDown != null &amp;&amp; mSpinnerDropDownShowing == false){
            mSpinnerDropDownShowing = true;
            mSpinnerDropDown.setVisibility(View.VISIBLE);
        }
        return false;
    }
};

//Capture the click event on the spinner drop down items
protected OnClickListener spinnerItemClick = new OnClickListener(){

    @Override
    public void onClick(View view) {
        String widget = ((TextView) view.findViewById(android.R.id.text1)).getText().toString();

        if(!widget.equals(SPINNER_INIT_VALUE)){
            if(mCursorAdapter != null){
                Cursor cursor = mCursorAdapter.getCursor();
                if(cursor.moveToFirst()){
                    while(!cursor.isAfterLast()){
                        if(widget.equals(cursor.getString(WidgetQuery.WIDGET_NAME))){

                            ...

                            //Set the spinner to the correct item
                            mSpinnerPosition = cursor.getPosition() + 1;
                            mSpinner.setSelection(mSpinnerPosition);
                            break;
                        }
                        cursor.moveToNext();
                    }
                }
            }
        }

        //Hide the drop down. Not the most elegent solution but it is the only way I could hide/dismiss the drop down
        mSpinnerDropDown = view.getRootView();
        mSpinnerDropDownShowing = false;
        mSpinnerDropDown.setVisibility(View.GONE);
    }
};

private class MyCursorAdapter extends CursorAdapter {

    private final int DISPLACEMENT = 1;
    private final int DEFAULT_ITEM_ID = Integer.MAX_VALUE;

    private Activity mActivity;

    public MyCursorAdapter(Activity activity) {
            super(activity, null, false);
            mActivity = activity;
    }

    //When loading the regular views, inject the defualt item
    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        if(position == 0){
            if(convertView == null){
                convertView = mActivity.getLayoutInflater().inflate(R.layout.list_item_widget, parent, false);
            }
            return getDefaultItem(convertView);
        }
        return super.getView(position - DISPLACEMENT, convertView, parent);
    }

    //When loading the drop down views, set the onClickListener for each view
    @Override
    public View getDropDownView(int position, View convertView, ViewGroup parent){
        View view = super.getDropDownView(position, convertView, parent);
        view.setOnClickListener(spinnerItemClick);
        return view;
    }

    //The special default item that is being injected
    private View getDefaultItem(View convertView){
        TextView text = (TextView) convertView.findViewById(android.R.id.text1);
        text.setText(SPINNER_INIT_VALUE);
        return convertView;
    }

    @Override
    public long getItemId(int position) {
        if (position == 0) {
            return DEFAULT_ITEM_ID;
        }
        return super.getItemId(position - DISPLACEMENT);
    }

    @Override
    public boolean isEnabled(int position) {
        return position == 0 ? true : super.isEnabled(position - DISPLACEMENT);
    }

    @Override
    public int getViewTypeCount() {
        return super.getViewTypeCount() + DISPLACEMENT;
    }

    @Override
    public int getItemViewType(int position) {
        if (position == 0) {
            return super.getViewTypeCount();
        }

        return super.getItemViewType(position - DISPLACEMENT);
    }

    @Override
    public View newView(Context context, Cursor cursor, ViewGroup parent) {
        return mActivity.getLayoutInflater().inflate(R.layout.list_item_widget, parent, false);
    }

    @Override
    public void bindView(View view, Context context, Cursor cursor){

        if(cursor.isAfterLast()){
            return;
        }

        TextView text = (TextView) view.findViewById(android.R.id.text1);
        String WidgetName = cursor.getString(WidgetQuery.WIDGET_NAME);
        text.setText(WidgetName);
    }
}
}
</code></pre>
"
"867518","18139272","1","<p>You can change it to a Text View and use this:</p>

<pre><code>android:style=""@android:style/Widget.DeviceDefault.Light.Spinner""
</code></pre>

<p>and then define the <code>android:text</code> property.</p>
"
"867518","19429843","0","<p>I handle this by using a button instead of a Spinner.   <a href=""https://github.com/sberg413/SpinnerButton"" rel=""nofollow"">I have the sample project up on GitHub.</a></p>

<p>In the project, i'm displaying both the Spinner and button to show that they indeed look identical.  Except the button you can set the initial text to whatever you want.  </p>

<p>Here's what the activity looks like:</p>

<pre><code>package com.stevebergamini.spinnerbutton;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.Spinner;

public class MainActivity extends Activity {

    Spinner spinner1;
    Button button1;
    AlertDialog ad;
    String[] countries;

    int selected = -1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        spinner1 = (Spinner) findViewById(R.id.spinner1);
        button1 = (Button) findViewById(R.id.button1);

        countries = getResources().getStringArray(R.array.country_names);

        //  You can also use an adapter for the allert dialog if you'd like
        //  ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(this, android.R.layout.simple_spinner_dropdown_item, countries);        

        ad = new AlertDialog.Builder(MainActivity.this).setSingleChoiceItems(countries, selected,  
                new  DialogInterface.OnClickListener() {

                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            button1.setText(countries[which]);
                            selected = which;
                            ad.dismiss();

                        }}).setTitle(R.string.select_country).create(); 


        button1.setOnClickListener( new OnClickListener(){

            @Override
            public void onClick(View v) {
                ad.getListView().setSelection(selected);
                ad.show();              
            }});

    }

}
</code></pre>

<p><strong>NOTE:</strong>  Yes, I realize that this is dependent on the applied Theme and the look will be slightly different if using Theme.Holo.  However, if you're using one of the legacy themes such as Theme.Black, you're good to go.</p>
"
"867518","20532924","0","<p>Seems a banal solution but I usually put simply a TextView in the front of the spinner. The whole Xml looks like this. (hey guys, don't shoot me, I know that some of you don't like this kind of marriage):</p>

<pre><code>&lt;FrameLayout
    android:id=""@+id/selectTypesLinear""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""
    android:orientation=""horizontal"" &gt;

    &lt;Spinner
        android:id=""@+id/spinnerExercises""
        android:layout_width=""match_parent""
        android:layout_height=""match_parent""
        android:entries=""@array/exercise_spinner_entries""
        android:prompt=""@string/exercise_spinner_prompt""
     /&gt;                         
    &lt;TextView
        android:id=""@+id/spinnerSelectText""
        android:layout_width=""match_parent""
        android:layout_height=""match_parent""
        android:text=""Hey! Select this guy!""
        android:gravity=""center""
        android:background=""#FF000000"" /&gt;


&lt;/FrameLayout&gt;
</code></pre>

<p>Then I hide the TextView when an Item was selected. Obviously the background color of the TextView should be the same as the Spinner. Works on Android 4.0. Don't know on older versions.</p>

<p>Yes. Because the Spinner calls setOnItemSelectedListener at the beginning, the hiding of the textview could be a little bit tricky, but can be done this way:</p>

<pre><code>    Boolean controlTouched;

    exerciseSpinner.setOnTouchListener(new OnTouchListener() {


        @Override
        public boolean onTouch(View v, MotionEvent event) {
            controlTouched = true; // I touched it but but not yet selected an Item.
            return false;
        }

    });
    exerciseSpinner.setOnItemSelectedListener(new OnItemSelectedListener() {

        @Override
        public void onItemSelected(AdapterView&lt;?&gt; arg0, View arg1,
                int arg2, long arg3) {
            if (controlTouched) { // Are you sure that I touched it with my fingers and not someone else  ?
                spinnerSelText.setVisibility(View.GONE);
            }
        }

        @Override
        public void onNothingSelected(AdapterView&lt;?&gt; arg0) {
        }

    });
</code></pre>
"
"867518","22774285","5","<p>There is no default API to set hint on Spinner. To add it we need a small workaround with out that not safety reflection implementation</p>

<pre><code>List&lt;Object&gt; objects = new ArrayList&lt;Object&gt;();
objects.add(firstItem);
objects.add(secondItem);
// add hint as last item
objects.add(hint);

HintAdapter adapter = new HintAdapter(context, objects, android.R.layout.simple_spinner_item);
adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

Spinner spinnerFilmType = (Spinner) findViewById(R.id.spinner);
spinner.setAdapter(adapter);

// show hint
spinner.setSelection(adapter.getCount());
</code></pre>

<p>Adapter source: </p>

<pre><code>public class HintAdapter
        extends ArrayAdapter&lt;Objects&gt; {

    public HintAdapter(Context theContext, List&lt;Object&gt; objects) {
        super(theContext, R.id.text1, R.id.text1, objects);
    }

    public HintAdapter(Context theContext, List&lt;Object&gt; objects, int theLayoutResId) {
        super(theContext, theLayoutResId, R.id.text1, objects);
    }

    @Override
    public int getCount() {
        // don't display last item. It is used as hint.
        int count = super.getCount();
        return count &gt; 0 ? count - 1 : count;
    }
}
</code></pre>

<p><a href=""http://yakivmospan.wordpress.com/2014/03/31/spinner-hint/"">Original source</a></p>
"
"867518","23005376","19","<p>I know this question has lot of Answer but I found the simplest and easiest way to do.</p>

<p><strong><a href=""http://yakivmospan.wordpress.com/2014/03/31/spinner-hint/"">This solution</a> is independent of API level ,it will work for all API level</strong>.</p>

<p>Idea is  to set the last item of spinner as default one..ie </p>

<pre><code>spinner.setSelection(lastIndex);//index starts from 0.so if spinner has 5 item the lastIndex is 4
</code></pre>

<p>Item at last index should be your Title of spinner like ""Select Country""</p>

<p>And while populating the spinner decrease the count of item by one.i.e
//Count starts from 1 to total item.</p>

<pre><code>    @Override
public int getCount() {
// don't display last item. It is used as hint.
int count = super.getCount();
return count &gt; 0 ? count - 1 : count;
}
</code></pre>

<p>So your code flow will be like this</p>

<pre><code>List&lt;Sting&gt; objects = new ArrayList&lt;String&gt;();
objects.add(""India"");
objects.add(""Pakistan"");
objects.add(""China"");
// add hint as last item
objects.add(""Select Country"");

HintAdapter adapter = new HintAdapter(context, objects, android.R.layout.simple_spinner_item);
adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

 Spinner spinnerFilmType = (Spinner) findViewById(R.id.spinner);
spinner.setAdapter(adapter);

// show hint
spinner.setSelection(adapter.getCount());
</code></pre>

<p>HintAdapter.java</p>

<pre><code> public class HintAdapter   extends ArrayAdapter&lt;Objects&gt; {

public HintAdapter(Context theContext, List&lt;Object&gt; objects) {
    super(theContext, R.id.text1, R.id.text1, objects);
}

public HintAdapter(Context theContext, List&lt;Object&gt; objects, int theLayoutResId) {
    super(theContext, theLayoutResId, R.id.text1, objects);
}

@Override
public int getCount() {
    // don't display last item. It is used as hint.
    int count = super.getCount();
    return count &gt; 0 ? count - 1 : count;
}
}
</code></pre>

<p>Spinner Title
<img src=""http://i.stack.imgur.com/g0vuV.png"" alt=""Spinner Title"">
Spinner Item
<img src=""http://i.stack.imgur.com/0PBNJ.png"" alt=""Spinner Items""></p>
"
"867518","23760798","0","<p>for me it worked something like this. has the improvement that only changes the text in SOME options, not in all.</p>

<p>First i take the names of the spinner and create the arrayadapter with a customize view, but it doesn't matter now, the key is override the getView, and inside change the values u need to change. In my case was only the first one, the rest i leave the original</p>

<pre><code>public void rellenarSpinnerCompeticiones(){
        spinnerArrayCompeticiones = new ArrayList&lt;String&gt;();
        for(Competicion c: ((Controlador)getApplication()).getCompeticiones()){
            spinnerArrayCompeticiones.add(c.getNombre());
        }
        //ArrayAdapter&lt;String&gt; spinnerArrayAdapter = new ArrayAdapter&lt;String&gt;(this,R.layout.spinner_item_competicion,spinnerArrayCompeticiones);
        ArrayAdapter&lt;String&gt; spinnerArrayAdapter = new ArrayAdapter&lt;String&gt;(this, R.layout.spinner_item_competicion, spinnerArrayCompeticiones){
            @Override
            public View getView(int position, View convertView, ViewGroup parent) {
                LayoutInflater vi = (LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                final View v = vi.inflate(R.layout.spinner_item_competicion, null);
                final TextView t = (TextView)v.findViewById(R.id.tvCompeticion);
                if(spinnerCompeticion.getSelectedItemPosition()&gt;0){
                    t.setText(spinnerArrayCompeticiones.get(spinnerCompeticion.getSelectedItemPosition()));
                }else{
                    t.setText(""Competiciones"");
                }
                return v;
            }
        };
        spinnerArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        spinnerCompeticion.setAdapter(spinnerArrayAdapter);
    }
</code></pre>
"
"867518","26475701","1","<p>This code has been tested and works on Android 4.4</p>

<p><img src=""http://i.stack.imgur.com/onnOf.png"" alt=""enter image description here""></p>

<pre><code>Spinner spinner = (Spinner) activity.findViewById(R.id.spinner);
ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(activity, android.R.layout.simple_spinner_dropdown_item) {

            @Override
            public View getView(int position, View convertView, ViewGroup parent) {

                View v = super.getView(position, convertView, parent);
                if (position == getCount()) {
                    ((TextView)v.findViewById(android.R.id.text1)).setText("""");
                    ((TextView)v.findViewById(android.R.id.text1)).setHint(getItem(getCount())); //""Hint to be displayed""
                }

                return v;
            }       

            @Override
            public int getCount() {
                return super.getCount()-1; // you dont display last item. It is used as hint.
            }

        };

        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        adapter.add(""Daily"");
        adapter.add(""Two Days"");
        adapter.add(""Weekly"");
        adapter.add(""Monthly"");
        adapter.add(""Three Months"");
        adapter.add(""HINT_TEXT_HERE""); //This is the text that will be displayed as hint.


        spinner.setAdapter(adapter);
        spinner.setSelection(adapter.getCount()); //set the hint the default selection so it appears on launch.
        spinner.setOnItemSelectedListener(this);
</code></pre>
"
"867518","26539868","0","<p>I found many good solutions for this. most is working by adding an item to the end of adapter, and don't display the last item in drop-down list.
The big problem for me was the spinner drop-down list will start from the bottom of the list. So user see the last items instead of the first items (in case of have many items to show), after touch the spinner for the first time.</p>

<p>So I put the hint item to the beginning of the list. and hide the first item in drop-down list.</p>

<pre><code>private void loadSpinner(){

    HintArrayAdapter hintAdapter = new HintArrayAdapter&lt;String&gt;(context, 0);

    hintAdapter.add(""Hint to be displayed"");
    hintAdapter.add(""Item 1"");
    hintAdapter.add(""Item 2"");
            .
            .
    hintAdapter.add(""Item 30"");

    spinner1.setAdapter(hintAdapter);

    //spinner1.setSelection(0); //display hint. Actually you can ignore it, because the default is already 0
    //spinner1.setSelection(0, false); //use this if don't want to onItemClick called for the hint

    spinner1.setOnItemSelectedListener(yourListener);
}

private class HintArrayAdapter&lt;T&gt; extends ArrayAdapter&lt;T&gt; {

    Context mContext;

    public HintArrayAdapter(Context context, int resource) {
        super(context, resource);
        this.mContext = context
    }

    @Override 
    public View getView(int position, View convertView, ViewGroup parent) {

        LayoutInflater inflater = (LayoutInflater) mContext.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
        View view = inflater.inflate(android.R.layout.simple_spinner_item, parent, false);
        TextView texview = (TextView) view.findViewById(android.R.id.text1);

        if(position == 0) {
            texview.setText("""");
            texview.setHint(getItem(position).toString()); //""Hint to be displayed""
        } else {
            texview.setText(getItem(position).toString());
        }

        return view;
    }

    @Override
    public View getDropDownView(int position, View convertView, ViewGroup parent) {

        LayoutInflater inflater = (LayoutInflater) mContext.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
        View view;

        if(position == 0){
            view = inflater.inflate(R.layout.spinner_hint_list_item_layout, parent, false); // Hide first row
        } else {
            view = inflater.inflate(android.R.layout.simple_spinner_dropdown_item, parent, false);
            TextView texview = (TextView) view.findViewById(android.R.id.text1);
            texview.setText(getItem(position).toString());
        } 

        return view;
    }
}
</code></pre>

<p>set the below layout in @Override getDropDownView() when position is 0, to hide the first hint row.</p>

<p>R.layout.spinner_hint_list_item_layout:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    xmlns:tools=""http://schemas.android.com/tools""
    android:layout_width=""match_parent""
    android:layout_height=""wrap_content"" &gt;

&lt;/LinearLayout&gt;
</code></pre>
"
"1016896","1016941","1759","<p>If you want the display dimensions in pixels you can use <a href=""http://developer.android.com/reference/android/view/Display.html#getSize%28android.graphics.Point%29""><code>getSize</code></a>:</p>

<pre><code>Display display = getWindowManager().getDefaultDisplay();
Point size = new Point();
display.getSize(size);
int width = size.x;
int height = size.y;
</code></pre>

<p>If you're not in an <code>Activity</code> you can get the default <code>Display</code> via <code>WINDOW_SERVICE</code>:</p>

<pre><code>WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);
Display display = wm.getDefaultDisplay();
</code></pre>

<p>Before <code>getSize</code> was introduced (in API level 13), you could use the <code>getWidth</code> and <code>getHeight</code> methods that are now deprecated:</p>

<pre><code>Display display = getWindowManager().getDefaultDisplay(); 
int width = display.getWidth();  // deprecated
int height = display.getHeight();  // deprecated
</code></pre>

<p>For the use case you're describing however, a margin/padding in the layout seems more appropriate.</p>
"
"1016896","4847027","189","<p>One way is:</p>

<pre><code>Display display = getWindowManager().getDefaultDisplay(); 
int width = display.getWidth();
int height = display.getHeight();
</code></pre>

<p>It is deprecated, and you should try the following code instead. The first two lines of code gives you the DisplayMetrics objecs. This objects contains the fields like heightPixels,widthPixels.</p>

<pre><code>DisplayMetrics metrics = new DisplayMetrics();
getWindowManager().getDefaultDisplay().getMetrics(metrics);

metrics.heightPixels;
metrics.widthPixels;
</code></pre>
"
"1016896","5573121","77","<p>It may not answer your question, but it could be useful to know (I was looking for it myself when I came to this question) that if you need a View's dimension but your code is being executed when its layout has not been laid out yet (for example in <code>onCreate()</code> ) you can setup a <code>ViewTreeObserver.OnGlobalLayoutListener</code> with <code>View.getViewTreeObserver().addOnGlobalLayoutListener()</code> and put the relevant code that needs the view's dimension there. The listener's callback will be called when the layout will have been laid out.</p>
"
"1016896","8600041","12","<p>For dynamically scaling using XML there is an attribute called ""android:layout_weight"" </p>

<p>The below example, modified from synic's response on <a href=""http://stackoverflow.com/questions/2581481/assign-width-to-half-available-screen-width-declaratively"">this thread</a>, shows a button that takes up 75% of the screen (weight = .25) and a text view taking up the remaining 25% of the screen (weight = .75).</p>

<pre><code>&lt;LinearLayout android:layout_width=""fill_parent""
    android:layout_height=""wrap_content""
    android:orientation=""horizontal""&gt;

    &lt;Button android:layout_width=""fill_parent""
        android:layout_height=""wrap_content""
        android:layout_weight="".25""
        android:text=""somebutton""&gt;

    &lt;TextView android:layout_width=""fill_parent""
        android:layout_height=""Wrap_content""
        android:layout_weight="".75""&gt;
&lt;/LinearLayout&gt;
</code></pre>
"
"1016896","8763439","8","<p>I found this did the trick.</p>

<pre><code>Rect dim = new Rect();
getWindowVisibleDisplayFrame(dim);
</code></pre>
"
"1016896","9772463","11","<p>Using the following code in Activity.</p>

<pre><code>DisplayMetrics metrics = new DisplayMetrics();
getWindowManager().getDefaultDisplay().getMetrics(metrics);
int height = metrics.heightPixels;
int wwidth = metrics.widthPixels;
</code></pre>
"
"1016896","11077005","10","<p>Find width and height of the screen:</p>

<pre><code>width = getWindowManager().getDefaultDisplay().getWidth();
height = getWindowManager().getDefaultDisplay().getHeight();
</code></pre>

<p>Using this, we can get the latest and above SDK 13.</p>

<pre><code>// New width and height
int version = android.os.Build.VERSION.SDK_INT;
Log.i("""", "" name == ""+ version);
Display display = getWindowManager().getDefaultDisplay();
int width;
if (version &gt;= 13) {
    Point size = new Point();
    display.getSize(size);
    width = size.x;
    Log.i(""width"", ""if =&gt;"" +width);
}
else {
    width = display.getWidth();
    Log.i(""width"", ""else =&gt;"" +width);
}
</code></pre>
"
"1016896","11226010","9","<pre><code>public class AndroidScreenActivity extends Activity {

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        DisplayMetrics dm = new DisplayMetrics();
        getWindowManager().getDefaultDisplay().getMetrics(dm);
        String str_ScreenSize = ""The Android Screen is: ""
                                   + dm.widthPixels
                                   + "" x ""
                                   + dm.heightPixels;

        TextView mScreenSize = (TextView) findViewById(R.id.strScreenSize);
        mScreenSize.setText(str_ScreenSize);
    }
}
</code></pre>
"
"1016896","11623621","61","<p>If you want to support pre Honeycomb (highly likely), you will need to put in backward compatibility prior to API 13. Something like:</p>

<pre><code>int Measuredwidth = 0;
int Measuredheight = 0;
Point size = new Point();
WindowManager w = getWindowManager();

if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB_MR2)
{
    w.getDefaultDisplay().getSize(size);

    Measuredwidth = size.x;
    Measuredheight = size.y;
}
else
{
    Display d = w.getDefaultDisplay();
    Measuredwidth = d.getWidth();
    Measuredheight = d.getHeight();
}
</code></pre>

<p>Of course the deprecated methods will eventually be taken out of the the most recent SDKs, but while we still rely on most of our users having Android 2.1, 2.2 and 2.3, this is what we are left with.</p>
"
"1016896","12936941","17","<p>I have two functions, one for sending the context and the other getting height and width in pixels:</p>

<pre><code>public static int getWidth(Context mContext){
    int width=0;
    WindowManager wm = (WindowManager) mContext.getSystemService(Context.WINDOW_SERVICE);
    Display display = wm.getDefaultDisplay();
    if(Build.VERSION.SDK_INT&gt;12){
        Point size = new Point();
        display.getSize(size);
        width = size.x;
    }
    else{
        width = display.getWidth();  // Deprecated
    }
    return width;
}
</code></pre>

<p>and</p>

<pre><code>public static int getHeight(Context mContext){
    int height=0;
    WindowManager wm = (WindowManager) mContext.getSystemService(Context.WINDOW_SERVICE);
    Display display = wm.getDefaultDisplay();
    if(Build.VERSION.SDK_INT&gt;12){
        Point size = new Point();
        display.getSize(size);
        height = size.y;
    }
    else{
        height = display.getHeight();  // Deprecated
    }
    return height;
}
</code></pre>
"
"1016896","13913159","4","<p>First load the XML file and then write this code:</p>

<pre><code>setContentView(R.layout.main);      
Display display = getWindowManager().getDefaultDisplay();
final int width = (display.getWidth());
final int height = (display.getHeight());
</code></pre>

<p>Show width and height according your screen resolution.</p>
"
"1016896","13954704","7","<p>There is a non-deprecated way to do this using DisplayMetrics (API 1), that avoids the try/catch messiness:</p>

<pre><code> // initialize the DisplayMetrics object
 DisplayMetrics deviceDisplayMetrics = new DisplayMetrics();

 // populate the DisplayMetrics object with the display characteristics
 getWindowManager().getDefaultDisplay().getMetrics(deviceDisplayMetrics);

 // get the width and height
 screenWidth = deviceDisplayMetrics.widthPixels;
 screenHeight = deviceDisplayMetrics.heightPixels;
</code></pre>
"
"1016896","14056281","11","<p>This is the code I use for the task:</p>

<pre><code>// `activity` is an instance of Activity class.
Display display = activity.getWindowManager().getDefaultDisplay();
Point screen = new Point();
if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB_MR2) {
    display.getSize(screen);
} else {            
    screen.x = display.getWidth();
    screen.y = display.getHeight();
}
</code></pre>

<p>Seems clean enough and yet, takes care of the deprecation.</p>
"
"1016896","15444877","9","<p>Need to say, that if you are not in <code>Activity</code>, but in <code>View</code> (or have variable of <code>View</code> type in your scope), there is not need to use <code>WINDOW_SERVICE</code>. Then you can use at least two ways.</p>

<p>First:</p>

<pre><code>DisplayMetrics dm = yourView.getContext().getResources().getDisplayMetrics();
</code></pre>

<p>Second:</p>

<pre><code>DisplayMetrics dm = new DisplayMetrics();
yourView.getDisplay().getMetrics(dm);
</code></pre>

<p>All this methods we call here is not deprecated.</p>
"
"1016896","15699681","32","<p>I have tried all possible ""solutions"" unsuccessfully and I noticed that Elliott Hughes' ""Dalvik Explorer"" app always shows correct dimension on any Android device/OS version. I ended up looking at his open source project that can be found here: <a href=""https://code.google.com/p/enh/"">https://code.google.com/p/enh/</a></p>

<p>Here's all the relevant code:</p>

<pre><code>WindowManager w = activity.getWindowManager();
Display d = w.getDefaultDisplay();
DisplayMetrics metrics = new DisplayMetrics();
d.getMetrics(metrics);
// since SDK_INT = 1;
widthPixels = metrics.widthPixels;
heightPixels = metrics.heightPixels;
try {
    // used when 17 &gt; SDK_INT &gt;= 14; includes window decorations (statusbar bar/menu bar)
    widthPixels = (Integer) Display.class.getMethod(""getRawWidth"").invoke(d);
    heightPixels = (Integer) Display.class.getMethod(""getRawHeight"").invoke(d);
} catch (Exception ignored) {
}
try {
    // used when SDK_INT &gt;= 17; includes window decorations (statusbar bar/menu bar)
    Point realSize = new Point();
    Display.class.getMethod(""getRealSize"", Point.class).invoke(d, realSize);
    widthPixels = realSize.x;
    heightPixels = realSize.y;
} catch (Exception ignored) {
}
</code></pre>

<p>EDIT: slightly improved version (avoid firing exceptions on non-supported OS version):</p>

<pre><code>WindowManager w = activity.getWindowManager();
Display d = w.getDefaultDisplay();
DisplayMetrics metrics = new DisplayMetrics();
d.getMetrics(metrics);
// since SDK_INT = 1;
widthPixels = metrics.widthPixels;
heightPixels = metrics.heightPixels;
// includes window decorations (statusbar bar/menu bar)
if (Build.VERSION.SDK_INT &gt;= 14 &amp;&amp; Build.VERSION.SDK_INT &lt; 17)
try {
    widthPixels = (Integer) Display.class.getMethod(""getRawWidth"").invoke(d);
    heightPixels = (Integer) Display.class.getMethod(""getRawHeight"").invoke(d);
} catch (Exception ignored) {
}
// includes window decorations (statusbar bar/menu bar)
if (Build.VERSION.SDK_INT &gt;= 17)
try {
    Point realSize = new Point();
    Display.class.getMethod(""getRealSize"", Point.class).invoke(d, realSize);
    widthPixels = realSize.x;
    heightPixels = realSize.y;
} catch (Exception ignored) {
}
</code></pre>
"
"1016896","16131766","7","<p>I would wrap the getSize code like this:</p>

<pre><code>@SuppressLint(""NewApi"")
public static Point getScreenSize(Activity a) {
    Point size = new Point();
    Display d = a.getWindowManager().getDefaultDisplay();
    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB) {
        d.getSize(size);
    } else {
        size.x = d.getWidth();
        size.y = d.getHeight();
    }
    return size;
}
</code></pre>
"
"1016896","16511635","11","<p>Isn't this a much better solution? <a href=""http://developer.android.com/reference/android/util/DisplayMetrics.html"">DisplayMetrics</a> comes with everything you need and works from API 1.</p>

<pre><code>public void getScreenInfo(){
    DisplayMetrics metrics = new DisplayMetrics();
    getActivity().getWindowManager().getDefaultDisplay().getMetrics(metrics);

    heightPixels = metrics.heightPixels;
    widthPixels = metrics.widthPixels;
    density = metrics.density;
    densityDpi = metrics.densityDpi;
}
</code></pre>

<p>You can also get the actual display (including screen decors, such as Status Bar or software navigation bar) using <a href=""http://developer.android.com/reference/android/view/Display.html#getRealMetrics%28android.util.DisplayMetrics%29"">getRealMetrics</a>, but this works on 17+ only.</p>

<p>Am I missing something?</p>
"
"1016896","16691531","4","<p>There are times when you need to know the precise dimensions of the available space for a layout when in an activity's onCreate.
After some thought I worked out this way of doing it.</p>

<pre><code>public class MainActivity extends Activity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        startActivityForResult(new Intent(this, Measure.class), 1);
        // Return without setting the layout, that will be done in onActivityResult.
    }

    @Override
    protected void onActivityResult (int requestCode, int resultCode, Intent data) {
        // Probably can never happen, but just in case.
        if (resultCode == RESULT_CANCELED) {
            finish();
            return;
        }
        int width = data.getIntExtra(""Width"", -1);
        // Width is now set to the precise available width, and a layout can now be created.            ...
    }
}

public final class Measure extends Activity {
    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
       // Create a LinearLayout with a MeasureFrameLayout in it.
        // Just putting a subclass of LinearLayout in works fine, but to future proof things, I do it this way.
        LinearLayout linearLayout = new LinearLayout(this);
        LinearLayout.LayoutParams matchParent = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT);
        MeasureFrameLayout measureFrameLayout = new MeasureFrameLayout(this);
        measureFrameLayout.setLayoutParams(matchParent);
        linearLayout.addView(measureFrameLayout);
        this.addContentView(linearLayout, matchParent);
        // measureFrameLayout will now request this second activity to finish, sending back the width.
    }

    class MeasureFrameLayout extends FrameLayout {
        boolean finished = false;
        public MeasureFrameLayout(Context context) {
            super(context);
        }

        @SuppressLint(""DrawAllocation"")
        @Override
        protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
            super.onMeasure(widthMeasureSpec, heightMeasureSpec);
            if (finished) {
                return;
            }
            finished = true;
            // Send the width back as the result.
            Intent data = new Intent().putExtra(""Width"", MeasureSpec.getSize(widthMeasureSpec));
            Measure.this.setResult(Activity.RESULT_OK, data);
            // Tell this activity to finish, so the result is passed back.
            Measure.this.finish();
        }
    }
}
</code></pre>

<p>If for some reason you don't want to add another activity to the Android manifest, you can do it this way:</p>

<pre><code>public class MainActivity extends Activity {
    static Activity measuringActivity;

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        Bundle extras = getIntent().getExtras();
        if (extras == null) {
            extras = new Bundle();
        }
        int width = extras.getInt(""Width"", -2);
        if (width == -2) {
            // First time in, just start another copy of this activity.
            extras.putInt(""Width"", -1);
            startActivityForResult(new Intent(this, MainActivity.class).putExtras(extras), 1);
            // Return without setting the layout, that will be done in onActivityResult.
            return;
        }
        if (width == -1) {
            // Second time in, here is where the measurement takes place.
            // Create a LinearLayout with a MeasureFrameLayout in it.
            // Just putting a subclass of LinearLayout in works fine, but to future proof things, I do it this way.
            LinearLayout linearLayout = new LinearLayout(measuringActivity = this);
            LinearLayout.LayoutParams matchParent = new LinearLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);
            MeasureFrameLayout measureFrameLayout = new MeasureFrameLayout(this);
            measureFrameLayout.setLayoutParams(matchParent);
            linearLayout.addView(measureFrameLayout);
            this.addContentView(linearLayout, matchParent);
            // measureFrameLayout will now request this second activity to finish, sending back the width.
        }
    }

    @Override
    protected void onActivityResult (int requestCode, int resultCode, Intent data) {
        // Probably can never happen, but just in case.
        if (resultCode == RESULT_CANCELED) {
            finish();
            return;
        }
        int width = data.getIntExtra(""Width"", -3);
        // Width is now set to the precise available width, and a layout can now be created. 
        ...
    }

class MeasureFrameLayout extends FrameLayout {
    boolean finished = false;
    public MeasureFrameLayout(Context context) {
        super(context);
    }

    @SuppressLint(""DrawAllocation"")
    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
        if (finished) {
            return;
        }
        finished = true;
        // Send the width back as the result.
        Intent data = new Intent().putExtra(""Width"", MeasureSpec.getSize(widthMeasureSpec));
        MainActivity.measuringActivity.setResult(Activity.RESULT_OK, data);
        // Tell the (second) activity to finish.
        MainActivity.measuringActivity.finish();
    }
}    
</code></pre>
"
"1016896","17327869","3","<p>If you don't want the overhead of WindowManagers, Points, or Displays, you can grab the height and width attributes of the topmost View item in your XML, provided its height and width are set to match_parent. (This is true so long as your layout takes up the entire screen.)</p>

<p>For example, if your XML starts with something like this:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;RelativeLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    xmlns:tools=""http://schemas.android.com/tools""
    android:id=""@+id/entireLayout""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent"" &gt;
</code></pre>

<p>Then <code>findViewById(R.id.entireLayout).getWidth()</code> will return the screen's width and <code>findViewById(R.id.entireLayout).getHeight()</code> will return the screen's height.</p>
"
"1016896","18282566","6","<p>This is not an answer for the OP, as he wanted the display dimensions in real pixels. I wanted the dimensions in ""device-independent-pixels"", and putting together answers from here <a href=""http://stackoverflow.com/a/17880012/253938"">http://stackoverflow.com/a/17880012/253938</a> and here <a href=""http://stackoverflow.com/a/6656774/253938"">http://stackoverflow.com/a/6656774/253938</a> I came up with this:</p>

<pre><code>    DisplayMetrics displayMetrics = Resources.getSystem().getDisplayMetrics();
    int dpHeight = (int)(displayMetrics.heightPixels / displayMetrics.density + 0.5);
    int dpWidth = (int)(displayMetrics.widthPixels / displayMetrics.density + 0.5);
</code></pre>
"
"1016896","18466470","17","<p>For accessing the height of the status bar for Android devices, we prefer a programmatic way to get it:</p>

<h3>Sample code</h3>

<pre><code>    int resId = getResources().getIdentifier(""status_bar_height"",
                                             ""dimen"",
                                             ""android"");
    if (resId &gt; 0) {
        result = getResources().getDimensionPixelSize(resId);
    }
</code></pre>

<p>The variable <code>result</code> gives the height in the pixel.</p>

<h3>For quick access</h3>

<p><img src=""http://i.stack.imgur.com/1HxlM.png"" alt=""Enter image description here""></p>

<p>For more information about height of <code>Title bar</code>, <code>Navigation bar</code> and <code>Content View</code>, kindly look on <em><a href=""http://www.emirweb.com/ScreenDeviceStatistics.php"">Android Device Screen Sizes</a></em>.</p>
"
"1016896","18694821","4","<p>For who is searching for <em>usable screen dimension</em> without <strong>Status Bar</strong> and <strong>Action Bar</strong> (also thanks to Swapnil's answer):</p>

<pre><code>DisplayMetrics dm = getResources().getDisplayMetrics();
float screen_w = dm.widthPixels;
float screen_h = dm.heightPixels;

int resId = getResources().getIdentifier(""status_bar_height"", ""dimen"", ""android"");
if (resId &gt; 0) {
    screen_h -= getResources().getDimensionPixelSize(resId);
}

TypedValue typedValue = new TypedValue();
if(getTheme().resolveAttribute(android.R.attr.actionBarSize, typedValue, true)){
    screen_h -= getResources().getDimensionPixelSize(typedValue.resourceId);
}
</code></pre>
"
"1016896","19746176","2","<p>I have a splash screen activity with a LinearLayout (match_parent) as a root view.
This is the code in the onCreate of that activity. I use these measures in all other activities of the app.</p>

<pre><code>int displayWidth = getRawDisplayWidthPreHoneycomb();
    int rawDisplayHeight = getRawDisplayHeightPreHoneycomb();
    int usableDisplayHeight = rawDisplayHeight - getStatusBarHeight();
    pf.setScreenParameters(displayWidth, usableDisplayHeight);

    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB) {
        LinearLayout myView = (LinearLayout) findViewById(R.id.splash_view);
        myView.addOnLayoutChangeListener(new OnLayoutChangeListener() {
            @Override
            public void onLayoutChange(View v, int left, int top, int right, int bottom, int oldLeft, int oldTop, int oldRight, int oldBottom) {
                if (left == 0 &amp;&amp; top == 0 &amp;&amp; right == 0 &amp;&amp; bottom == 0) {
                    return;
                }
                int displayWidth = Math.min(right, bottom);
                int usableDisplayHeight = Math.max(right, bottom);
                pf.setScreenParameters(displayWidth, usableDisplayHeight);
            }
        });
    }

private int getRawDisplayWidthPreHoneycomb() {
    WindowManager windowManager = getWindowManager();
    Display display = windowManager.getDefaultDisplay();
    DisplayMetrics displayMetrics = new DisplayMetrics();
    display.getMetrics(displayMetrics);

    int widthPixels = displayMetrics.widthPixels;
    int heightPixels = displayMetrics.heightPixels;

    return Math.min(widthPixels, heightPixels);
}

private int getRawDisplayHeightPreHoneycomb() {
    WindowManager w = getWindowManager();
    Display d = w.getDefaultDisplay();
    DisplayMetrics metrics = new DisplayMetrics();
    d.getMetrics(metrics);

    int widthPixels = metrics.widthPixels;
    int heightPixels = metrics.heightPixels;

    return Math.max(widthPixels, heightPixels);
}

public int getStatusBarHeight() {
    int statusBarHeight = 0;

    int resourceId = getResources().getIdentifier(""status_bar_height"", ""dimen"", ""android"");
    if (resourceId &gt; 0) {
        statusBarHeight = getResources().getDimensionPixelSize(resourceId);
    }

    return statusBarHeight;
}
</code></pre>

<p>This results in a height and width of the usable display, excluding any type of bars (status bar, navigation bar), for all API versions and different type of devices (phones and tablets).</p>
"
"1016896","19841367","2","<p>Follow the methods below :: </p>

<pre><code>    public static int getWidthScreen(Context context) {
        return getDisplayMetrics(context).widthPixels;
    }

    public static int getHeightScreen(Context context) {
        return getDisplayMetrics(context).heightPixels;
    }

    private static DisplayMetrics getDisplayMetrics(Context context) {
        DisplayMetrics displayMetrics = new DisplayMetrics();
        WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);
        wm.getDefaultDisplay().getMetrics(displayMetrics);
        return displayMetrics;
    }
</code></pre>
"
"1016896","20655654","8","<pre><code>DisplayMetrics dimension = new DisplayMetrics();
getWindowManager().getDefaultDisplay().getMetrics(dimension);
int w = dimension.widthPixels;
int h = dimension.heightPixels;
</code></pre>
"
"1016896","22114931","1","<pre><code> Display disttt = getWindowManager().getDefaultDisplay(); 
 Point size = new Point();
 disttt.getSize(size);
 int width = size.x;
 int height = size.y;
</code></pre>
"
"1016896","22936231","-2","<p>USe this code it will tell dimensions of screen</p>

<pre><code>DisplayMetrics metrics = new DisplayMetrics();
getWindowManager().getDefaultDisplay().getMetrics(metrics);
int h = metrics.heightPixels;
int w = metrics.widthPixels;
</code></pre>
"
"1016896","24168871","1","<p><strong>Simple function compatible with lower versions as well.</strong></p>

<pre><code>/**
 * @return screen size int[width, height]
 *
 * */
public int[] getScreenSize(){
    Point size = new Point();
    WindowManager w = getWindowManager();

    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB_MR2){
        w.getDefaultDisplay().getSize(size);
        return new int[]{size.x, size.y};
    }else{
        Display d = w.getDefaultDisplay();
        //noinspection deprecation
        return new int[]{d.getWidth(), d.getHeight()};
    }
}
</code></pre>

<p><strong>To use:</strong></p>

<pre><code>int width = getScreenSize()[0];
int height = getScreenSize()[1];
</code></pre>
"
"1016896","25621575","1","<pre><code>DisplayMetrics dm = getResources().getDisplayMetrics();
float fwidth = dm.density * dm.widthPixels;
float fheight = dm.density * dm.heightPixels;
</code></pre>

<p>If <code>getSize</code> gets you an error due to your minSDKVersion and you don't want to use deprecated methods (<code>getWidth</code> &amp; <code>getHeight</code>), the <code>getMetrics</code> solution was originally posted on 2011 by Balaji.K... And Nik added a comment explaining <code>getDisplayMetrics</code> also considers the status bar size.</p>

<p>Some other comments refer to multiply by the scale (<strong>density</strong>) in order to get the precise float value of the dimensions. Tested in Android v2.2 (API 8) and v4.0 with good results and <strong>no errors/warnings</strong>.</p>
"
"1101380","1102367","7","<p>Some modified builds used to set the <a href=""http://d.android.com/reference/java/lang/System.html#getProperty%28java.lang.String,%20java.lang.String%29"">system property</a> <code>ro.modversion</code> for this purpose. Things seem to have moved on; my build from TheDude a few months ago has this:</p>

<pre><code>cmb@apollo:~$ adb -d shell getprop |grep build
[ro.build.id]: [CUPCAKE]
[ro.build.display.id]: [htc_dream-eng 1.5 CUPCAKE eng.TheDudeAbides.20090427.235325 test-keys]
[ro.build.version.incremental]: [eng.TheDude.2009027.235325]
[ro.build.version.sdk]: [3]
[ro.build.version.release]: [1.5]
[ro.build.date]: [Mon Apr 20 01:42:32 CDT 2009]
[ro.build.date.utc]: [1240209752]
[ro.build.type]: [eng]
[ro.build.user]: [TheDude]
[ro.build.host]: [ender]
[ro.build.tags]: [test-keys]
[ro.build.product]: [dream]
[ro.build.description]: [kila-user 1.1 PLAT-RC33 126986 ota-rel-keys,release-keys]
[ro.build.fingerprint]: [tmobile/kila/dream/trout:1.1/PLAT-RC33/126986:user/ota-rel-keys,release-keys]
[ro.build.changelist]: [17615# end build properties]
</code></pre>

<p>The emulator from the 1.5 SDK on the other hand, running the 1.5 image, also has root, is probably similar to the <a href=""http://developer.android.com/guide/developing/device.html#dev-phone-1"">Android Dev Phone 1</a> (which you presumably want to allow) and has this:</p>

<pre><code>cmb@apollo:~$ adb -e shell getprop |grep build
[ro.build.id]: [CUPCAKE]
[ro.build.display.id]: [sdk-eng 1.5 CUPCAKE 148875 test-keys]
[ro.build.version.incremental]: [148875]
[ro.build.version.sdk]: [3]
[ro.build.version.release]: [1.5]
[ro.build.date]: [Thu May 14 18:09:10 PDT 2009]
[ro.build.date.utc]: [1242349750]
[ro.build.type]: [eng]
[ro.build.user]: [android-build]
[ro.build.host]: [undroid16.mtv.corp.google.com]
[ro.build.tags]: [test-keys]
[ro.build.product]: [generic]
[ro.build.description]: [sdk-eng 1.5 CUPCAKE 148875 test-keys]
[ro.build.fingerprint]: [generic/sdk/generic/:1.5/CUPCAKE/148875:eng/test-keys]
</code></pre>

<p>As for the retail builds, I don't have one to hand, but various searches under <code>site:xda-developers.com</code> are informative. Here is a <a href=""http://forum.xda-developers.com/showthread.php?t=477103"">G1 in the Netherlands</a>, you can see that <code>ro.build.tags</code> does not have <code>test-keys</code>, and I think that's probably the most reliable property to use.</p>
"
"1101380","2153646","1","<p>Try writing a file to <code>/data</code> &mdash; it's one of the few writable file systems on the device, and that particular path can only be written to by root.</p>
"
"1101380","6348009","3","<p>Two additional ideas, if you want to check if a device is root capable from your app:</p>

<ol>
<li>Check for the existing of the 'su' binary: run ""which su"" from <code>Runtime.getRuntime().exec()</code></li>
<li>Look for the SuperUser.apk in <code>/system/app/Superuser.apk</code> location</li>
</ol>
"
"1101380","6425854","1","<p>Here is my code based on some answers here:</p>

<pre><code> /**
   * Checks if the phone is rooted.
   * 
   * @return &lt;code&gt;true&lt;/code&gt; if the phone is rooted, &lt;code&gt;false&lt;/code&gt;
   * otherwise.
   */
  public static boolean isPhoneRooted() {

    // get from build info
    String buildTags = android.os.Build.TAGS;
    if (buildTags != null &amp;&amp; buildTags.contains(""test-keys"")) {
      return true;
    }

    // check if /system/app/Superuser.apk is present
    try {
      File file = new File(""/system/app/Superuser.apk"");
      if (file.exists()) {
        return true;
      }
    } catch (Throwable e1) {
      // ignore
    }

    return false;
  }
</code></pre>
"
"1101380","6563615","27","<p>The RootTools library offers simple methods to check for root:</p>

<pre><code>RootTools.isRootAvailable()
</code></pre>

<p><a href=""http://code.google.com/p/roottools/"">http://code.google.com/p/roottools/</a></p>
"
"1101380","8097801","63","<p>Here is a class that will check for Root one of three ways. </p>

<pre><code>/** @author Kevin Kowalewski */
public class Root {

    private static String LOG_TAG = Root.class.getName();

    public boolean isDeviceRooted() {
        return checkRootMethod1() || checkRootMethod2() || checkRootMethod3();
    }

    public boolean checkRootMethod1() {
        String buildTags = android.os.Build.TAGS;
        return buildTags != null &amp;&amp; buildTags.contains(""test-keys"");
    }

    public boolean checkRootMethod2() {
        try {
            File file = new File(""/system/app/Superuser.apk"");
            return file.exists();
        } catch (Exception e) return false;
    }

    public boolean checkRootMethod3() {
        return new ExecShell().executeCommand(SHELL_CMD.check_su_binary)!=null;
    }
}   

/** @author Kevin Kowalewski */
public class ExecShell {

    private static String LOG_TAG = ExecShell.class.getName();

    public static enum SHELL_CMD {
        check_su_binary(new String[] { ""/system/xbin/which"", ""su"" });

        String[] command;

        SHELL_CMD(String[] command) {
            this.command = command;
        }
    }

    public ArrayList&lt;String&gt; executeCommand(SHELL_CMD shellCmd) {
        String line = null;
        ArrayList&lt;String&gt; fullResponse = new ArrayList&lt;String&gt;();
        Process localProcess = null;
        try {
            localProcess = Runtime.getRuntime().exec(shellCmd.command);
        } catch (Exception e) {
            return null;
        }
        BufferedWriter out = new BufferedWriter(new OutputStreamWriter(
                localProcess.getOutputStream()));
        BufferedReader in = new BufferedReader(new InputStreamReader(
                localProcess.getInputStream()));
        try {
            while ((line = in.readLine()) != null) {
                Log.d(LOG_TAG, ""--&gt; Line received: "" + line);
                fullResponse.add(line);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        Log.d(LOG_TAG, ""--&gt; Full response was: "" + fullResponse);
        return fullResponse;
    }
}
</code></pre>
"
"1101380","15371209","8","<p>Instead of using isRootAvailable() you can use isAccessGiven(). Direct from RootTools <a href=""https://code.google.com/p/roottools/wiki/Usage"">wiki</a>:</p>

<pre><code>if (RootTools.isAccessGiven()) {
    // your app has been granted root access
}
</code></pre>

<blockquote>
  <p>RootTools.isAccessGiven() not only checks that a device is rooted, it
  also calls su for your app, requests permission, and returns true if
  your app was successfully granted root permissions. This can be used
  as the first check in your app to make sure that you will be granted
  access when you need it.</p>
</blockquote>

<p><a href=""https://code.google.com/p/roottools/"">https://code.google.com/p/roottools/</a></p>
"
"1101380","15485210","18","<p>In my application I was checking if device is rooted or not by executing ""su"" command. But today I've removed this part of my code. Why? </p>

<p>Because my application became a memory killer. How? Let me tell you my story.</p>

<p>There were some complaints that my application was slowing down devices(Of course I thought that can not be true). I tried to figure out why. So I used MAT to get heap dumps and analyze, and everything seemed perfect. But after relaunching my app many times I realized that device is really getting slower and stopping my application didn't make it faster (unless I restart device). I analyzed dump files again while device is very slow. But everything was still perfect for dump file.
Then I did what must be done at first. I listed processes.</p>

<pre><code>$ adb shell ps
</code></pre>

<p>Surprize; there were many processes for my application (with my application's process tag at manifest). Some of them was zombie some of them not.</p>

<p>With a sample application which has a single Activity and executes just ""su"" command, I realized that a zombie process is being created on every launch of application. At first these zombies allocate 0KB but than something happens and zombie processes are holding nearly same KBs as my application's main process and they became standart processes.</p>

<p>There is a bug report for same issue on bugs.sun.com: <a href=""http://bugs.sun.com/view_bug.do?bug_id=6474073"">http://bugs.sun.com/view_bug.do?bug_id=6474073</a> this explains if command is not found zombies are going to be created with exec() method. But I still don't understand why and how can they become standart processes and hold significant KBs. (This is not happening all the time)</p>

<p>You can try if you want with code sample below;</p>

<pre><code>String commandToExecute = ""su"";
executeShellCommand(commandToExecute);
</code></pre>

<p>Simple command execution method;</p>

<pre><code>private boolean executeShellCommand(String command){
    Process process = null;            
    try{
        process = Runtime.getRuntime().exec(command);
        return true;
    } catch (Exception e) {
        return false;
    } finally{
        if(process != null){
            try{
                process.destroy();
            }catch (Exception e) {
            }
        }
    }
}
</code></pre>

<p>To sum up; I have no advice for you to determine if device is rooted or not. But if I were you I would not use Runtime.getRuntime().exec().</p>

<p>By the way; RootTools.isRootAvailable() causes same problem.</p>
"
"1101380","22909547","0","<p>Further to @Kevins answer, I've recently found while using his system, that the Nexus 7.1 was returning <code>false</code> for all three methods - No <code>which</code> command, no <code>test-keys</code> and <code>SuperSU</code> was not installed in <code>/system/app</code>.</p>

<p>I added this:</p>

<pre><code>public static boolean checkRootMethod4(Context context) {
    return isPackageInstalled(""eu.chainfire.supersu"", context);     
}

private static boolean isPackageInstalled(String packagename, Context context) {
    PackageManager pm = context.getPackageManager();
    try {
        pm.getPackageInfo(packagename, PackageManager.GET_ACTIVITIES);
        return true;
    } catch (NameNotFoundException e) {
        return false;
    }
}
</code></pre>

<p>This is slightly <em>less</em> useful in some situations (if you need guaranteed root access) as it's completely possible for SuperSU to be installed on devices which don't have SU access.</p>

<p>However, since it's possible to have SuperSU installed and working but <strong>not</strong> in the <code>/system/app</code> directory, this extra case will root (haha) out such cases.</p>
"
"1101380","23946045","0","<p>Indeed it is interesting question and so far nobody has deserved award. I use the following code:</p>

<pre><code>  boolean isRooted() {
      try {
                ServerSocket ss = new ServerSocket(81);
                ss.close();
                                    return true;
            } catch (Exception e) {
                // not sure
            }
    return false;
  }
</code></pre>

<p>The code is certainly not bulletproof, because network can be not available so you get an exception. If this method returns true then 99% you can be sure, otherwise just 50% that not. Networking permission can also spoil the solution.</p>
"
"1101380","23952951","7","<p><a href=""http://code.google.com/p/roottools/"">http://code.google.com/p/roottools/</a></p>

<p><strong>If you do not want to use the jar file</strong> just use the code:</p>

<pre><code>public static boolean findBinary(String binaryName) {
        boolean found = false;
        if (!found) {
            String[] places = { ""/sbin/"", ""/system/bin/"", ""/system/xbin/"",
                    ""/data/local/xbin/"", ""/data/local/bin/"",
                    ""/system/sd/xbin/"", ""/system/bin/failsafe/"", ""/data/local/"" };
            for (String where : places) {
                if (new File(where + binaryName).exists()) {
                    found = true;

                    break;
                }
            }
        }
        return found;
    }
</code></pre>

<p>Program will try to find su folder:</p>

<pre><code>private static boolean isRooted() {
        return findBinary(""su"");
    }
</code></pre>

<p><strong><em>Example:</em></strong></p>

<pre><code>if (isRooted() == true ){
textView.setText(""Device Rooted"");

}
else{
textView.setText(""Device Unrooted"");
}
</code></pre>
"
"1101380","24300186","0","<p>Using my library at <a href=""http://www.github.com/vaibhavpandeyvpz/rootbox"" rel=""nofollow"" title=""Go to github project"">rootbox</a>, it is pretty easy. Check the required code below:</p>

<pre><code>    //Pass true to &lt;Shell&gt;.start(...) call to run as superuser
    Shell shell = null;
    try {
            shell = Shell.start(true);
    } catch (IOException exception) {
            exception.printStackTrace();
    }
    if (shell == null)
            // We failed to execute su binary
            return;
    if (shell.isRoot()) {
            // Verified running as uid 0 (root), can continue with commands
            ...
    } else
            throw Exception(""Unable to gain root access. Make sure you pressed Allow/Grant in superuser prompt."");
</code></pre>
"
"1101380","26555414","0","<pre><code>    public static boolean isRootAvailable(){
            Process p = null;
            try{
               p = Runtime.getRuntime().exec(new String[] {""su""});
               writeCommandToConsole(p,""exit 0"");
               int result = p.waitFor();
               if(result != 0)
                   throw new Exception(""Root check result with exit command "" + result);
               return true;
            } catch (IOException e) {
                Log.e(LOG_TAG, ""Su executable is not available "", e);
            } catch (Exception e) {
                Log.e(LOG_TAG, ""Root is unavailable "", e);
            }finally {
                if(p != null)
                    p.destroy();
            }
            return false;
        }
 private static String writeCommandToConsole(Process proc, String command, boolean ignoreError) throws Exception{
            byte[] tmpArray = new byte[1024];
            proc.getOutputStream().write((command + ""\n"").getBytes());
            proc.getOutputStream().flush();
            int bytesRead = 0;
            if(proc.getErrorStream().available() &gt; 0){
                if((bytesRead = proc.getErrorStream().read(tmpArray)) &gt; 1){
                    Log.e(LOG_TAG,new String(tmpArray,0,bytesRead));
                    if(!ignoreError)
                        throw new Exception(new String(tmpArray,0,bytesRead));
                }
            }
            if(proc.getInputStream().available() &gt; 0){
                bytesRead = proc.getInputStream().read(tmpArray);
                Log.i(LOG_TAG, new String(tmpArray,0,bytesRead));
            }
            return new String(tmpArray);
        }
</code></pre>
"
"1109022","1109108","1638","<p>You can force Android to hide the virtual keyboard using the <a href=""http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html"">InputMethodManager</a>, calling <a href=""http://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html#hideSoftInputFromWindow%28android.os.IBinder,%20int%29""><code>hideSoftInputFromWindow</code></a>, passing in the token of the window containing your edit field.</p>

<pre><code>EditText myEditText = (EditText) findViewById(R.id.myEditText);  
InputMethodManager imm = (InputMethodManager)getSystemService(
      Context.INPUT_METHOD_SERVICE);
imm.hideSoftInputFromWindow(myEditText.getWindowToken(), 0);
</code></pre>

<p>This will force the keyboard to be hidden in all situations. In some cases you will want to pass in <code>InputMethodManager.HIDE_IMPLICIT_ONLY</code> as the second parameter to ensure you only hide the keyboard when the user didn't explicitly force it to appear (by holding down menu).</p>
"
"1109022","1845995","67","<p>Please try this below code in <code>oncreate</code>()</p>

<pre><code>EditText edtView=(EditText)findViewById(R.id.editTextConvertValue);
edtView.setInputType(0);
</code></pre>
"
"1109022","2059394","381","<p>Also useful for hiding the soft keyboard is:</p>

<pre><code>getWindow().setSoftInputMode(
      WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
</code></pre>

<p>This can be used to suppress the keyboard until the user actually touches the edittext view.</p>
"
"1109022","2247715","79","<p>Meier's solution works for me too.  In my case the top level of my App is a tabHost and I want to hide the keyword when switching tabs - I get the window token from the tabHost View.</p>

<pre><code>   tabHost.setOnTabChangedListener(new OnTabChangeListener()
        {
        public void onTabChanged(String tabId)
            {
            InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
            imm.hideSoftInputFromWindow(tabHost.getApplicationWindowToken(), 0);
            }
        }
</code></pre>
"
"1109022","7094191","35","<p>Simplest way:</p>

<pre><code>//Show soft-keyboard:
getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);
//hide keyboard :
 getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
</code></pre>
"
"1109022","7696791","276","<p>You must use the following code to hide the soft keyboard :                 </p>

<pre><code>private void hideKeyboard() {
    InputMethodManager inputManager = (InputMethodManager) this.getSystemService(Context.INPUT_METHOD_SERVICE);

    // check if no view has focus:
    View view = this.getCurrentFocus();
    if (view != null) {
        inputManager.hideSoftInputFromWindow(view.getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);
    }
}
</code></pre>

<p>Where <code>this</code> is the Activity.</p>
"
"1109022","8494559","5","<p>If you want to close the soft keyboard during a unit or functional test, you can do so by clicking the ""back button"" from your test:</p>

<pre><code>// Close the soft keyboard from a Test
getInstrumentation().sendKeyDownUpSync(KeyEvent.KEYCODE_BACK);
</code></pre>

<p>I put ""back button"" in quotes, since the above doesn't trigger the <code>onBackPressed()</code> for the Activity in question. It just closes the keyboard.</p>

<p>Make sure to pause for a little while before moving on, since it takes a little while to close the back button, so subsequent clicks to Views, etc., won't be registered until after a short pause (1 second is long enough ime).</p>
"
"1109022","9041949","23","<p>If all the other answers here don't work for you as you would like them to, there's another way of manually controlling the keyboard.</p>

<p>Create a function with that will manage some of the <code>EditText</code>'s properties:</p>

<pre><code>public void setEditTextFocus(boolean isFocused)
{
    searchEditText.setCursorVisible(isFocused);
    searchEditText.setFocusable(isFocused);
    searchEditText.setFocusableInTouchMode(isFocused);

    if (isFocused)
    {
        searchEditText.requestFocus();
    }
}
</code></pre>

<p>Then, make sure that onFocus of the <code>EditText</code> you open/close the keyboard:</p>

<pre><code>        searchEditText.setOnFocusChangeListener(new OnFocusChangeListener()
        {
            @Override
            public void onFocusChange(View v, boolean hasFocus)
            {
                if (v == searchEditText)
                {
                    if (hasFocus)
                    {
                        //open keyboard
                        ((InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE)).showSoftInput(searchEditText,
                                InputMethodManager.SHOW_FORCED);

                    }
                    else
                    { //close keyboard
                        ((InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE)).hideSoftInputFromWindow(
                                searchEditText.getWindowToken(), 0);
                    }
                }
            }
        });
</code></pre>

<p>now, whenever you want to open the keyboard manually call: </p>

<pre><code>setEditTextFocus(true);
</code></pre>

<p>And for closing call:</p>

<pre><code>setEditTextFocus(false);
</code></pre>
"
"1109022","9401141","17","<p>from so searching, here I found an answer that works for me</p>

<pre><code>// Show soft-keyboard:
        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);

// Hide soft-keyboard:
        getWindow().setSoftInputMode(
                WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
</code></pre>
"
"1109022","9494042","114","<p>Hi i got one more solution to hide keyboard by :</p>

<pre><code>InputMethodManager imm = (InputMethodManager) getSystemService(Activity.INPUT_METHOD_SERVICE);
imm.toggleSoftInput(InputMethodManager.HIDE_IMPLICIT_ONLY, 0);
</code></pre>

<p>Here pass HIDE_IMPLICIT_ONLY at the position of showFlag and 0 at the position of hiddenFlag. It will forcefully close soft Keyboard.</p>
"
"1109022","10439581","15","<p>I'm using a custom keyboard to input an Hex number so I can't have the IMM keyboard show up...</p>

<p>In v3.2.4_r1 <code>setSoftInputShownOnFocus(boolean show)</code> was added to control weather or not to display the keyboard when a TextView gets focus, but its still hidden so reflection must be used:</p>

<pre><code>if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB_MR2) {
    try {
        Method method = TextView.class.getMethod(""setSoftInputShownOnFocus"", boolean.class);
        method.invoke(mEditText, false);
    } catch (Exception e) {
        // Fallback to the second method
    }
}
</code></pre>

<hr>

<p>For older versions, I got very good results (but far from perfect) with a <code>OnGlobalLayoutListener</code>, added with the aid of a <code>ViewTreeObserver</code> from my root view and then checking if the keyboard is shown like this:</p>

<pre><code>@Override
public void onGlobalLayout() {
    Configuration config = getResources().getConfiguration();

    // Dont allow the default keyboard to show up
    if (config.keyboardHidden != Configuration.KEYBOARDHIDDEN_YES) {
        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(mRootView.getWindowToken(), 0);
    }
}
</code></pre>

<p>This last solution may show the keyboard for a split second and messes with the selection handles.</p>

<p>When in the keyboard enters full screen, onGlobalLayout isn't called. To avoid that, use <a href=""https://developer.android.com/reference/android/widget/TextView.html#setImeOptions%28int%29"">TextView#setImeOptions(int)</a> or in the TextView XML declaration:</p>

<pre><code>android:imeOptions=""actionNone|actionUnspecified|flagNoFullscreen|flagNoExtractUi""
</code></pre>

<p><strong>Update:</strong> Just found what dialogs use to never show the keyboard and works in all versions:</p>

<pre><code>getWindow().setFlags(WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM,
        WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM);
</code></pre>
"
"1109022","10442532","22","<pre><code>protected void hideSoftKeyboard(EditText input) {
        input.setInputType(0);
        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(input.getWindowToken(), 0);

    }
</code></pre>
"
"1109022","10593138","9","<p>Here's how you do it in Mono for Android (AKA MonoDroid)</p>

<pre><code>InputMethodManager imm = GetSystemService (Context.InputMethodService) as InputMethodManager;
if (imm != null)
    imm.HideSoftInputFromWindow (searchbox.WindowToken , 0);
</code></pre>
"
"1109022","12430318","10","<p>Above answers work for different scenario's but  <strong>If you want to hide the keyboard inside a view and struggling to get the right context try this:</strong></p>

<pre><code>setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                hideSoftKeyBoardOnTabClicked(v);
     }
}

private void hideSoftKeyBoardOnTabClicked(View v) {
        if (v != null &amp;&amp; context!=null) {
            InputMethodManager imm = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);
            imm.hideSoftInputFromWindow(v.getApplicationWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);
        }
    }
</code></pre>

<p>and to get the context fetch it from constructor:) </p>

<pre><code>public View/RelativeLayout/so and so (Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        this.context = context;
        init();
    }
</code></pre>
"
"1109022","13925047","2","<p>I created a layout partially from xml and partially from a custom layout engine, which is all handled in-code. The only thing that worked for me was to keep track of whether or not the keyboard was open, and use the keyboard toggle method as follows:</p>

<pre><code>public class MyActivity extends Activity
{
    /** This maintains true if the keyboard is open. Otherwise, it is false. */
    private boolean isKeyboardOpen = false;

    @Override
    public void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        LayoutInflater inflater;
        inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        View contentView = inflater.inflate(context.getResources().getIdentifier(""main"", ""layout"", getPackageName()), null);

        setContentView(contentView);
        contentView.getViewTreeObserver().addOnGlobalLayoutListener(new OnGlobalLayoutListener() 
        {
            public void onGlobalLayout() 
            {
                Rect r = new Rect();
                contentView.getWindowVisibleDisplayFrame(r);
                int heightDiff = contentView.getRootView().getHeight() - (r.bottom - r.top);
                if (heightDiff &gt; 100) 
                    isKeyboardVisible = true;
                else
                    isKeyboardVisible = false;
             });
         }
    }

    public void closeKeyboardIfOpen()
    {
        InputMethodManager imm;
        imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
        if (isKeyboardVisible)
            imm.toggleSoftInput(InputMethodManager.HIDE_IMPLICIT_ONLY, 0);
    }   
}
</code></pre>
"
"1109022","15396882","5","<p>For my case, I was using the a SearchView in the actionbar. After a user performs a search, the keyboard would pop open again.</p>

<p>Using the InputMethodManager did not close the keyboard. I had to clearFocus and set the focusable of the search view to false:</p>

<pre><code>        mSearchView.clearFocus();
        mSearchView.setFocusable(false);
</code></pre>
"
"1109022","15587937","18","<p><a href=""http://stackoverflow.com/a/9494042/197359"">Saurabh Pareek</a> has the best answer so far.</p>

<p>Might as well use the correct flags, though.</p>

<pre><code>/* hide keyboard */
((InputMethodManager) getSystemService(Activity.INPUT_METHOD_SERVICE))
    .toggleSoftInput(InputMethodManager.SHOW_IMPLICIT, 0);

/* show keyboard */
((InputMethodManager) getSystemService(Activity.INPUT_METHOD_SERVICE))
    .toggleSoftInput(0, InputMethodManager.HIDE_IMPLICIT_ONLY);
</code></pre>

<p>Example of real use</p>

<pre><code>/* click button */
public void onClick(View view) {      
  /* hide keyboard */
  ((InputMethodManager) getSystemService(Activity.INPUT_METHOD_SERVICE))
      .toggleSoftInput(InputMethodManager.SHOW_IMPLICIT, 0);

  /* start loader to check parameters ... */
}

/* loader finished */
public void onLoadFinished(Loader&lt;Object&gt; loader, Object data) {
    /* parameters not valid ... */

    /* show keyboard */
    ((InputMethodManager) getSystemService(Activity.INPUT_METHOD_SERVICE))
        .toggleSoftInput(0, InputMethodManager.HIDE_IMPLICIT_ONLY);

    /* parameters valid ... */
}
</code></pre>
"
"1109022","15851463","9","<p>I have spent more than two days working through all of the solutions posted in the thread and have found them lacking in one way or another.  My exact requirement is to have a button that will with 100% reliability show or hide the on screen keyboard.  When the keyboard is in its hidden state is should not re-appear, no matter what input fields the user clicks on.  When it is in its visible state the keyboard should not disappear no matter what buttons the user clicks.  This needs to work on Android 2.2+ all the way up to the latest devices.</p>

<p>You can see a working implementation of this in my app <a href=""https://play.google.com/store/apps/details?id=au.com.lukesleeman.rpn&amp;hl=en"">clean RPN</a>.</p>

<p>After testing many of the suggested answers on a number of different phones (including froyo and gingerbread devices) it became apparent that android apps can reliably:</p>

<ol>
<li>Temporarily hide the keyboard.  It will re-appear again when a user
focuses a new text field.</li>
<li>Show the keyboard when an activity starts
and set a flag on the activity indicating that they keyboard should
always be visible.  This flag can only be set when an activity is
initialising.</li>
<li>Mark an activity to never show or allow the use of the
keyboard.  This flag can only be set when an activity is
initialising.</li>
</ol>

<p>For me, temporarily hiding the keyboard is not enough.  On some devices it will re-appear as soon as a new text field is focused.  As my app uses multiple text fields on one page, focusing a new text field will cause the hidden keyboard to pop back up again.</p>

<p>Unfortunately item 2 and 3 on the list only work reliability when an activity is being started.  Once the activity has become visible you cannot permanently hide or show the keyboard.  The trick is to actually restart your activity when the user presses the keyboard toggle button.  In my app when the user presses on the toggle keyboard button, the following code runs:</p>

<pre><code>private void toggleKeyboard(){

    if(keypadPager.getVisibility() == View.VISIBLE){
        Intent i = new Intent(this, MainActivity.class);
        i.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
        Bundle state = new Bundle();
        onSaveInstanceState(state);
        state.putBoolean(SHOW_KEYBOARD, true);
        i.putExtras(state);

        startActivity(i);
    }
    else{
        Intent i = new Intent(this, MainActivity.class);
        i.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
        Bundle state = new Bundle();
        onSaveInstanceState(state);
        state.putBoolean(SHOW_KEYBOARD, false);
        i.putExtras(state);

        startActivity(i);
    }
}
</code></pre>

<p>This causes the current activity to have its state saved into a Bundle, and then the activity is started, passing through an boolean which indicates if the keyboard should be shown or hidden.</p>

<p>Inside the onCreate method the following code is run:</p>

<pre><code>if(bundle.getBoolean(SHOW_KEYBOARD)){
    ((InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE)).showSoftInput(newEquationText,0);
    getWindow().setSoftInputMode(LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);
}
else{
    getWindow().setFlags(WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM,
            WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM);
}
</code></pre>

<p>If the soft keyboard should be shown, then the InputMethodManager is told to show the keyboard and the window is instructed to make the soft input always visible. If the soft keyboard should be hidden then the WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM is set.</p>

<p>This approach works reliably on all devices I have tested on - from a 4 year old HTC phone running android 2.2 up to a nexus 7 running 4.2.2.  The only disadvantage with this approach is you need to be careful with handling the back button.  As my app essentially only has one screen (its a calculator) I can override onBackPressed() and return to the devices home screen.</p>
"
"1109022","16191917","3","<pre><code>public static void hideSoftKeyboard(Activity activity) {

        InputMethodManager inputMethodManager = (InputMethodManager)activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
        inputMethodManager.hideSoftInputFromWindow(activity.getCurrentFocus().getWindowToken(), 0);
    }
</code></pre>
"
"1109022","16620746","4","<pre><code>public static void hideSoftKeyboard(Activity activity) {
    InputMethodManager inputMethodManager = (InputMethodManager)  activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
    inputMethodManager.hideSoftInputFromWindow(activity.getCurrentFocus().getWindowToken(), 0);
}
</code></pre>

<p>after that call on onTouchListener:</p>

<pre><code>findViewById(android.R.id.content).setOnTouchListener(new OnTouchListener() {
    @Override
    public boolean onTouch(View v, MotionEvent event) {
        Utils.hideSoftKeyboard(activity);
        return false;
    }
});
</code></pre>
"
"1109022","16653355","1","<p>Tried all here in desperation, combining all methods,  and of course the keyboard will not close in Android 4.0.3 (it did work in Honeicomb AFAIR).</p>

<p>Then suddenly I found an apparently winning combination:</p>

<pre><code>textField.setRawInputType(InputType.TYPE_CLASS_TEXT |InputType.TYPE_TEXT_VARIATION_NORMAL);
</code></pre>

<p>combined with your usual recipes</p>

<pre><code>blahblaj.hideSoftInputFromWindow ...
</code></pre>

<p>hope this stops somebody from committing suicide .. I was close to it. Of course, I have no idea why it works.</p>
"
"1109022","17789187","51","<p>To help clarify this madness, I'd like to begin by apologizing on behalf of all Android users for Google's downright ridiculous treatment of the soft keyboard. The reason there are so many answers, each different, for the same simple question is because this API, like many others in Android, is horribly designed. I can think of no polite way to state it.</p>

<p>I want to hide the keyboard.  I expect to provide Android with the following statement: <code>Keyboard.hide()</code>. The end. Thank you very much.  But Android has a problem.  You must use the <code>InputMethodManager</code> to hide the keyboard. OK, fine, this is Android's API to the keyboard. BUT! You are required to have a <code>Context</code> in order to get access to the IMM. Now we have a problem.  I may want to hide the keyboard from a static or utility class that has no use or need for any <code>Context</code>. or And FAR worse, the IMM requires that you specify what <code>View</code> (or even worse, what <code>Window</code>) you want to hide the keyboard FROM. </p>

<p>This is what makes hiding the keyboard so challenging. Dear Google: When I'm looking up the recipe for a cake, there is no <code>RecipeProvider</code> on Earth that would refuse to provide me with the recipe unless I first answer WHO the cake will be eaten by AND where it will be eaten!! </p>

<p>This sad story ends with the ugly truth: to hide the Android keyboard, you will be required to provide 2 forms of identification: a <code>Context</code> and either a <code>View</code> or a <code>Window</code>. </p>

<p>I have created a static utility method which can do the job VERY solidly, provided you call it from an Activity. </p>

<pre><code>public static void hide_keyboard(Activity activity) {
    InputMethodManager inputMethodManager = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
    //Find the currently focused view, so we can grab the correct window token from it.
    View view = activity.getCurrentFocus();
    //If no view currently has focus, create a new one, just so we can grab a window token from it
    if(view == null) {
        view = new View(activity);
    }
    inputMethodManager.hideSoftInputFromWindow(view.getWindowToken(), 0);
}
</code></pre>

<p>Be aware that this utility method ONLY works when called from an Activity! The above method calls the getCurrentFocus method of the target Activity to fetch the proper window token. </p>

<p>But suppose you want to hide the keyboard from an EditText hosted in a DialogFragment? You can't use the method above for that:</p>

<pre><code>hide_keyboard(get_activity()); //won't work
</code></pre>

<p>This won't work because you'll be passing a reference to the Fragment's host Activity, which will have no focused control while the Fragment is shown! Wow! So, for hiding the keyboard from Fragments, I resort to the lower-level, more common, and uglier:</p>

<pre><code>public static void hide_keyboard_from(Context context, View view) {
    InputMethodManager inputMethodManager = (InputMethodManager) context.getSystemService(Activity.INPUT_METHOD_SERVICE);
    inputMethodManager.hideSoftInputFromWindow(view.getWindowToken(), 0);
}
</code></pre>

<p>Below is some additional information gleaned from more time wasted chasing this solution:</p>

<p><strong>About windowSoftInputMode</strong></p>

<p>There's yet another point of contention to be aware of. By default, Android will automatically assign initial focus to the first EditText or focusable control in your Activity.  It naturally follows that the InputMethod (typically the soft keyboard) will respond to the focus event by showing itself. The <code>windowSoftInputMode</code> attribute in <code>AndroidManifest.xml</code>, when set to <code>stateAlwaysHidden</code>, instructs the keyboard to ignore this automatically-assigned initial focus. </p>

<pre><code>&lt;activity
    android:name="".MyActivity""
    android:windowSoftInputMode=""stateAlwaysHidden""/&gt;
</code></pre>

<p>Almost unbelievably, it appears to do nothing to prevent the keyboard from opening when you touch the control (unless <code>focusable=""false""</code> and/or <code>focusableInTouchMode=""false""</code> are assigned to the control). Apparently, the windowSoftInputMode setting applies only to automatic focus events, not to focus events triggered from touch events.</p>

<p>Therefore, <code>stateAlwaysHidden</code> is VERY poorly named indeed. It should perhaps be called <code>ignoreInitialFocus</code> instead. </p>

<p>Hope this helps.</p>
"
"1109022","18148069","7","<p>use this</p>

<pre><code>this.getWindow().setSoftInputMode(
            WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
</code></pre>
"
"1109022","18624972","2","<p>Alternatively to <a href=""http://stackoverflow.com/a/9494042/451962"">this all around solution</a>, if you wanted to close the soft keyboard <strong>from anywhere</strong> without having a reference to the (EditText) field that was used to open the keyboard, but still wanted to do it if the field was focused, you could use this (from an Activity):</p>

<pre><code>if (getCurrentFocus() != null) {
  InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
  imm.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), 0);
}
</code></pre>
"
"1109022","18671531","9","<p>This should work:</p>

<pre><code>public class KeyBoard {

    public static void toggle(Activity activity){
        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
        if (imm.isActive()){
            imm.toggleSoftInput(InputMethodManager.HIDE_IMPLICIT_ONLY, 0); // hide
        } else {
            imm.toggleSoftInput(0, InputMethodManager.HIDE_IMPLICIT_ONLY); // show
        }
    }//end method

    public static void hide(Activity activity){
        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
        imm.toggleSoftInput(InputMethodManager.HIDE_IMPLICIT_ONLY, 0); // hide
    }//end method

    public static void show(Activity activity){
        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
        imm.toggleSoftInput(0, InputMethodManager.HIDE_IMPLICIT_ONLY); // show
    }//end method
}//end class

KeyBoard.toggle(activity);
</code></pre>
"
"1109022","19175363","2","<p>This method will always always work at any cost. Just Use it wherever you want to hide the keyboard</p>

<pre><code>public static void hideSoftKeyboard(Context mContext,EditText username){
        if(((Activity) mContext).getCurrentFocus()!=null &amp;&amp; ((Activity) mContext).getCurrentFocus() instanceof EditText){
            InputMethodManager imm = (InputMethodManager)mContext.getSystemService(Context.INPUT_METHOD_SERVICE);
            imm.hideSoftInputFromWindow(username.getWindowToken(), 0);
        }
    }
</code></pre>

<p>Use it like this :</p>

<p>Whatever is the version of Android. This method will surely work</p>
"
"1109022","19564101","0","<p>This works for me :</p>

<pre><code> @Override
 public boolean dispatchTouchEvent(MotionEvent event) {
View v = getCurrentFocus();
boolean ret = super.dispatchTouchEvent(event);

if (v instanceof EditText) {
    View w = getCurrentFocus();
    int scrcoords[] = new int[2];
    w.getLocationOnScreen(scrcoords);
    float x = event.getRawX() + w.getLeft() - scrcoords[0];
    float y = event.getRawY() + w.getTop() - scrcoords[1];

    Log.d(""Activity"",
            ""Touch event "" + event.getRawX() + "","" + event.getRawY()
                    + "" "" + x + "","" + y + "" rect "" + w.getLeft() + "",""
                    + w.getTop() + "","" + w.getRight() + "",""
                    + w.getBottom() + "" coords "" + scrcoords[0] + "",""
                    + scrcoords[1]);
    if (event.getAction() == MotionEvent.ACTION_UP
            &amp;&amp; (x &lt; w.getLeft() || x &gt;= w.getRight() || y &lt; w.getTop() || y &gt; w
                    .getBottom())) {

        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(getWindow().getCurrentFocus()
                .getWindowToken(), 0);
    }
}
return ret;
</code></pre>

<p>}</p>
"
"1109022","20095505","4","<p>It works for me..</p>

<pre><code>EditText editText=(EditText)findViewById(R.id.edittext1);
</code></pre>

<p>put below line of code in onClick()</p>

<pre><code>editText.setFocusable(false);
editText.setFocusableInTouchMode(true);
</code></pre>

<p>here hide the keyboard when we click the Button and when we touch the EditText keyboard will be display.</p>

<p><strong>(OR)</strong></p>

<pre><code>getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
</code></pre>
"
"1109022","20344271","5","<p>This worked for me for all the bizarre keyboard behavior</p>

<pre><code>    private boolean isKeyboardVisible() {
    Rect r = new Rect();
    //r will be populated with the coordinates of your view that area still visible.
    mRootView.getWindowVisibleDisplayFrame(r);

    int heightDiff = mRootView.getRootView().getHeight() - (r.bottom - r.top);
    return heightDiff &gt; 100; // if more than 100 pixels, its probably a keyboard...

}

protected void showKeyboard() {
    if (isKeyboardVisible())
        return;
    InputMethodManager inputMethodManager = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
    if (getCurrentFocus() == null) {
        inputMethodManager.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);
    } else {
        View view = getCurrentFocus();
        inputMethodManager.showSoftInput(view, InputMethodManager.SHOW_FORCED);

    }
}

protected void hideKeyboard() {
    if (!isKeyboardVisible())
        return;
    InputMethodManager inputMethodManager = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
    View view = getCurrentFocus();
    if (view == null) {
        if (inputMethodManager.isAcceptingText())
            inputMethodManager.toggleSoftInput(InputMethodManager.HIDE_NOT_ALWAYS, 0);
    } else {
        if (view instanceof EditText)
            ((EditText) view).setText(((EditText) view).getText().toString()); // reset edit text bug on some keyboards bug
        inputMethodManager.hideSoftInputFromInputMethod(view.getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);
    }
}
</code></pre>
"
"1109022","21208462","0","<pre><code>public static void closeInput(final View caller) {  
    caller.postDelayed(new Runnable() {
        @Override
        public void run() {
            InputMethodManager imm = (InputMethodManager) caller.getContext().getSystemService(Context.INPUT_METHOD_SERVICE);
            imm.hideSoftInputFromWindow(caller.getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);
        }
    }, 100);
}
</code></pre>

<p>This method generally works, but there is one condition: you can't have <code>android:windowSoftInputMode=""any_of_these""</code> set</p>
"
"1109022","22208996","1","<p>This worked for me.</p>

<pre><code>    public static void hideKeyboard(Activity act, EditText et){
    Context c = act.getBaseContext();
    View v = et.findFocus();
    if(v==null)
        return;
    InputMethodManager inputManager = (InputMethodManager) c.getSystemService(Context.INPUT_METHOD_SERVICE);
    inputManager.hideSoftInputFromWindow(v.getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);
}
</code></pre>
"
"1109022","23855355","3","<p>Just use this optimized code in your activity:</p>

<pre><code>if(this.getCurrentFocus() != null)
{
InputMethodManager inputManager = (InputMethodManager) this.getSystemService(Context.INPUT_METHOD_SERVICE);
                inputManager.hideSoftInputFromWindow(this.getCurrentFocus().getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);
}
</code></pre>
"
"1109022","24601425","0","<p>An alternative using <code>SearchView</code> would be to use this code:</p>

<pre><code>searchView = (SearchView) searchItem.getActionView();    
searchView.setOnQueryTextListener(new OnQueryTextListener() {

                @Override
                public boolean onQueryTextSubmit(String query) {
                    InputMethodManager imm = (InputMethodManager)
                            getSystemService(getApplicationContext().INPUT_METHOD_SERVICE);
                        imm.hideSoftInputFromWindow(searchView.getApplicationWindowToken(), 0);
    }
</code></pre>

<p>This is a SearchView search box in the ActionBar that when the text from the query is submitted (the user presses either <code>Enter</code> key or a search button/icon), then the <code>InputMethodManager</code> code gets activated and makes your soft keyboard go down. This code was put in my <code>onCreateOptionsMenu()</code>. <code>searchItem</code> is from <code>MenuItem</code> which is part of the default code for the <code>onCreateOptionsmenu()</code>. Thanks to @mckoss for a good chunk of this code!</p>
"
"1109022","25119481","4","<h2>The short answer</h2>

<p>In your <code>OnClick</code> listener call the <code>onEditorAction</code> of the <code>EditText</code> with <code>IME_ACTION_DONE</code></p>

<pre><code>button.setOnClickListener(new OnClickListener() {

    @Override
    public void onClick(View v) {
        someEditText.onEditorAction(EditorInfo.IME_ACTION_DONE)
    }
});
</code></pre>

<h2>The drill-down</h2>

<p>I feel this method is better, simpler and more aligned with Android's design pattern.
In the simple example above (and usually in most of the common cases) you'll have an <code>EditText</code> that has/had focus and it also usually was the one to invoke the keyboard in the first place (it is definitely able to invoke it in many common scenarios). In that same way, <strong>it</strong> should be the one to release the keyboard, usually that can be done by an <code>ImeAction</code>. Just see how an <code>EditText</code> with <code>android:imeOptions=""actionDone""</code> behaves, you want to achieve the same behavior by the same means.</p>

<hr>

<p>Check this <a href=""http://stackoverflow.com/a/3449616/2837443"">related answer</a></p>
"
"1109022","25425660","2","<pre><code>public static void hideSoftKeyboard(Activity activity) {
    InputMethodManager inputMethodManager = (InputMethodManager) activity
            .getSystemService(Activity.INPUT_METHOD_SERVICE);
    inputMethodManager.hideSoftInputFromWindow(activity.getCurrentFocus()
            .getWindowToken(), 0);
}
</code></pre>
"
"1109022","26041064","0","<pre><code>private void hideSoftKeyboard() {
    View view = getView();
    if (view != null) {
        InputMethodManager inputMethodManager = (InputMethodManager) getActivity()
                .getSystemService(Activity.INPUT_METHOD_SERVICE);
        inputMethodManager.hideSoftInputFromWindow(view.getWindowToken(), 0);
    }
}
</code></pre>
"
"1109022","26666696","0","<p>Depite all those answers, just to be simple enough, I have written a common method to do this :</p>

<pre><code>/**
 * hide soft keyboard in a activity
 * @param activity
 */
public static void hideKeyboard (Activity activity){
    activity.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);
    if (activity.getCurrentFocus() != null) {
        InputMethodManager inputMethodManager = (InputMethodManager) activity.getSystemService(activity.INPUT_METHOD_SERVICE);
        inputMethodManager.hideSoftInputFromWindow(activity.getCurrentFocus().getWindowToken(), 0);
    }
}
</code></pre>
"
"1397361","1398485","0","<p>If you remove the last line, you'll create new <code>act</code> Activity, but your old instance will still be alive.</p>

<p>Do you need to restart the Activity like when the orientation is changed (i.e. your state is saved and passed to <code>onCreate(Bundle)</code>)?</p>

<p>If you don't, one possible workaround would be to use one extra, dummy Activity, which would be started from the first Activity, and which job is to start new instance of it. Or just delay the call to <code>act.finish()</code>, after the new one is started.</p>

<p>If you need to save most of the state, you are getting in pretty deep waters, because it's non-trivial to pass all the properties of your state, especially without leaking your old Context/Activity, by passing it to the new instance.</p>

<p>Please, specify what are you trying to do.</p>
"
"1397361","3419987","83","<p>actually a cleaner way to do this is like so:</p>

<pre><code>    public void reload() {

    Intent intent = getIntent();
    overridePendingTransition(0, 0);
    intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
    finish();

    overridePendingTransition(0, 0);
    startActivity(intent);
}
</code></pre>
"
"1397361","3974828","262","<p>I did my theme switcher like this:</p>

<pre><code>Intent intent = getIntent();
finish();
startActivity(intent);
</code></pre>

<p>Basically, I'm calling <code>finish()</code> first, and I'm using the exact same intent this activity was started with. That seems to do the trick?</p>

<p>UPDATE: As pointed out by Ralf below, <a href=""http://developer.android.com/reference/android/app/Activity.html#recreate%28%29""><code>Activity.recreate()</code></a> is the way to go in API 11 and beyond. This is preferable if you're in an API11+ environment. You can still check the current version and call the code snippet above if you're in API 10 or below. (Please don't forget to upvote Ralf's answer!)</p>
"
"1397361","6407136","2","<p>Actually the following code is valid for API levels 5 and up, so if your target API is lower than this, you'll end up with something very similar to EboMike's code.</p>

<pre><code>intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
overridePendingTransition(0, 0);
</code></pre>
"
"1397361","9840253","10","<p>Call this method</p>

<pre><code>private void restartFirstActivity()
 {
 Intent i = getApplicationContext().getPackageManager()
 .getLaunchIntentForPackage(getApplicationContext().getPackageName() );

 i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK );
 startActivity(i);
 }
</code></pre>

<p>Thanks,</p>
"
"1397361","11651252","9","<p>Even though this has been answered multiple times.</p>

<p>If restarting an activity from a fragment, I would do it like so:</p>

<pre><code>new Handler().post(new Runnable() {

         @Override
         public void run()
         {
            Intent intent = getActivity().getIntent();
            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_NO_ANIMATION);
            getActivity().overridePendingTransition(0, 0);
            getActivity().finish();

            getActivity().overridePendingTransition(0, 0);
            startActivity(intent);
        }
    });
</code></pre>

<p>So you might be thinking this is a little overkill?
But the <code>Handler</code> posting allows you to call this in a lifecycle method. I've used this in <code>onRestart</code>/<code>onResume</code> methods when checking if the state has changed between the user coming back to the app. (installed something). </p>

<p>Without the <code>Handler</code> if you call it in an odd place it will just kill the activity and not restart it.</p>

<p>Feel free to ask any questions.</p>

<p>Cheers,
Chris</p>
"
"1397361","16467733","46","<p>Just to combine Ralf and Ben's answers (including changes made in comments):</p>

<pre><code>if (Build.VERSION.SDK_INT &gt;= 11) {
    recreate();
} else {
    Intent intent = getIntent();
    intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
    finish();
    overridePendingTransition(0, 0);

    startActivity(intent);
    overridePendingTransition(0, 0);
}
</code></pre>
"
"1397361","16609040","0","<pre><code>public void onRestart() {
    super.onRestart();
    Intent intent=new Intent();
    intent.setClass(act, act.getClass());
    finish();
    act.startActivity(intent);
}
</code></pre>

<p>try to use this ..</p>
"
"1397361","17099094","0","<p>There is one hacky way that should work on any activity, including the main one.</p>

<pre><code>setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_NOSENSOR);
setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_SENSOR);
</code></pre>

<p>When orientation changes, Android generally will recreate your activity (unless you override it). This method is useful for 180 degree rotations, when Android doesn't recreate your activity. </p>
"
"1397361","17625797","8","<p>Well this is not listed but a combo of some that is already posted:</p>

<pre><code>if (Build.VERSION.SDK_INT &gt;= 11) {
    recreate();   
} else {
    Intent intent = getIntent();
    finish();
    startActivity(intent);
}
</code></pre>
"
"1397361","26134056","0","<p>In conjunction with <a href=""http://stackoverflow.com/questions/11495842/how-surfaceholder-callbacks-are-related-to-activity-lifecycle"">strange SurfaceView lifecycle behaviour with the Camera</a>. I have found that recreate() does not behave well with the lifecycle of SurfaceViews. surfaceDestroyed isn't ever called during the recreation cycle. It is called after onResume (strange), at which point my SurfaceView is destroyed.</p>

<p>The original way of recreating an activity works fine.</p>

<pre><code>Intent intent = getIntent();
finish();
startActivity(intent);
</code></pre>

<p>I can't figure out exactly why this is, but it is just an observation that can hopefully guide others in the future because it fixed my problems i was having with SurfaceViews</p>
"
"1556987","1680404","4","<p>This is solution from my point of view:</p>

<pre><code>ok.setOnClickListener(this);
@Override
public void onClick(View view) {
	if(view == ok){
		Intent intent = new Intent(Intent.ACTION_CALL);
		intent.setData(Uri.parse(""tel:"" + num));
		activity.startActivity(intent);

	}
</code></pre>

<p>Of course in Activity (class) definition you have to implement View.OnClickListener .</p>
"
"1556987","2498596","31","<p>This is regarding the question asked by Starter.</p>

<p>The problem with your code is that you are not passing the number properly.</p>

<p>The code should be:</p>

<pre><code>private OnClickListener next = new OnClickListener() {

     public void onClick(View v) {
        EditText num=(EditText)findViewById(R.id.EditText01); 
        String number = ""tel:"" + num.getText().toString().trim();
        Intent callIntent = new Intent(Intent.ACTION_CALL, Uri.parse(number)); 
        startActivity(callIntent);
    }
};
</code></pre>

<p>Do not forget to add the permission in manifest file. </p>

<pre><code>&lt;uses-permission android:name=""android.permission.CALL_PHONE""&gt;&lt;/uses-permission&gt;
</code></pre>

<p>or </p>

<pre><code>&lt;uses-permission android:name=""android.permission.CALL_PRIVILEGED""&gt;&lt;/uses-permission&gt;
</code></pre>

<p>for emergency number in case <code>DIAL</code> is used. </p>
"
"1556987","4147640","3","<p>To return to your <code>Activity</code>, you will need to listen to <code>TelephonyStates</code>. On that <code>listener</code> you can send an <code>Intent</code> to re-open your <code>Activity</code> once the phone is idle.</p>

<p>At least thats how I will do it.</p>
"
"1556987","5273295","74","<p>use a PhoneStateListener to see when the call is ended.  you will most likely need to trigger the listener actions to wait for a the call to start (wait until changed from PHONE_STATE_OFFHOOK to PHONE_STATE_IDLE again) and then write some code to bring your app back up on the IDLE state.  </p>

<p>you may need to run the listener in a service to ensure it stays up and your app is restarted.  some example code:</p>

<pre><code>EndCallListener callListener = new EndCallListener();
TelephonyManager mTM = (TelephonyManager)this.getSystemService(Context.TELEPHONY_SERVICE);
mTM.listen(callListener, PhoneStateListener.LISTEN_CALL_STATE);
</code></pre>

<p>Listener definition:</p>

<pre><code>private class EndCallListener extends PhoneStateListener {
    @Override
    public void onCallStateChanged(int state, String incomingNumber) {
        if(TelephonyManager.CALL_STATE_RINGING == state) {
            Log.i(LOG_TAG, ""RINGING, number: "" + incomingNumber);
        }
        if(TelephonyManager.CALL_STATE_OFFHOOK == state) {
            //wait for phone to go offhook (probably set a boolean flag) so you know your app initiated the call.
            Log.i(LOG_TAG, ""OFFHOOK"");
        }
        if(TelephonyManager.CALL_STATE_IDLE == state) {
            //when this state occurs, and your flag is set, restart your app
            Log.i(LOG_TAG, ""IDLE"");
        }
    }
}
</code></pre>
"
"1556987","6122140","2","<p>Try using:</p>

<pre><code>finish();
</code></pre>

<p>at the end of activity. It will redirect you to your previous activity.</p>
"
"1556987","6144657","18","<p>We had the same problem and managed to solve it by using a <code>PhoneStateListener</code> to identify when the call ends, but additionally we had to <code>finish()</code> the original activity before starting it again with <code>startActivity</code>, otherwise the call log would be in front of it. </p>

<p>There's an example code demonstrating how it works <a href=""http://umamao.com/questions/Como-fazer-uma-app-de-Android-chamar-o-discador-e-faz%C3%AA-lo-retornar-%C3%A0-app-ap%C3%B3s-o-t%C3%A9rmino-da-chamada"">here</a>.</p>
"
"1556987","6266976","5","<p>If you are going to use a listener you will need to add this permission to the manifest as well.</p>

<pre><code>&lt;uses-permission android:name=""android.permission.READ_PHONE_STATE"" /&gt;
</code></pre>
"
"1556987","8008265","10","<p>I found the EndCallListener the most functional example, to get the behaviour described (finish(), call, restart)  I added a few  SharedPreferences so the Listener had a reference to manage this behaviour. </p>

<p>My OnClick, initialise and EndCallListener only respond to calls from app.  Other calls ignored.</p>

<pre><code>import android.content.Intent;
import android.content.SharedPreferences;
import android.preference.PreferenceManager;
import android.telephony.PhoneStateListener;
import android.telephony.TelephonyManager;
import android.util.Log;

public class EndCallListener extends PhoneStateListener {

private String TAG =""EndCallListener"";
private int     LAUNCHED = -1;

SharedPreferences prefs = PreferenceManager
                            .getDefaultSharedPreferences(
                                myActivity.mApp.getBaseContext());

SharedPreferences.Editor _ed = prefs.edit();

@Override
    public void onCallStateChanged(int state, String incomingNumber) {
    String _prefKey = myActivity.mApp                          
                      .getResources().getString(R.string.last_phone_call_state_key),
    _bPartyNumber = myActivity.mApp                           
                      .getResources().getString(R.string.last_phone_call_bparty_key);

    int mLastCallState = prefs.getInt(_prefKey, LAUNCHED);

    //Save current call sate for next call
    _ed.putInt(_prefKey,state);
    _ed.commit();

        if(TelephonyManager.CALL_STATE_RINGING == state) {
            Log.i(TAG, "" &gt;&gt; RINGING, number: "" + incomingNumber);
        }
        if(TelephonyManager.CALL_STATE_IDLE == state &amp;&amp; mLastCallState != LAUNCHED ) {
            //when this state occurs, and your flag is set, restart your app

            if (incomingNumber.equals(_bPartyNumber) == true) {
                //Call relates to last app initiated call
            Intent  _startMyActivity =  
               myActivity.mApp                               
               .getPackageManager()                                  
               .getLaunchIntentForPackage(
                 myActivity.mApp.getResources()
                 .getString(R.string.figjam_package_path));

_startMyActivity.setAction(                                     
        myActivity.mApp.getResources()
        .getString(R.string.main_show_phone_call_list));

                myActivity.mApp
                        .startActivity(_startMyActivity);
                Log.i(TAG, ""IDLE &gt;&gt; Starting MyActivity with intent"");
            }
            else
                Log.i(TAG, ""IDLE after calling ""+incomingNumber);

        }

    }
}
</code></pre>

<p>add these to strings.xml</p>

<pre><code>&lt;string name=""main_show_phone_call_list""&gt;android.intent.action.SHOW_PHONE_CALL_LIST&lt;/string&gt;
&lt;string name=""last_phone_call_state_key""&gt;activityLpcsKey&lt;/string&gt;
&lt;string name=""last_phone_call_bparty_key""&gt;activityLpbpKey&lt;/string&gt;
</code></pre>

<p>and something like this in your Manifest if you need to return to the look and feel before the call</p>

<pre><code>  &lt;activity android:label=""@string/app_name"" android:name=""com.myPackage.myActivity"" 
      android:windowSoftInputMode=""stateHidden""
        android:configChanges=""keyboardHidden"" &gt;
        &lt;intent-filter&gt;
            &lt;action android:name=""android.intent.action.MAIN"" /&gt;
            &lt;action android:name=""android.intent.action.SHOW_PHONE_CALL_LIST"" /&gt;
            &lt;category android:name=""android.intent.category.LAUNCHER"" /&gt;
        &lt;/intent-filter&gt;
  &lt;/activity&gt;
</code></pre>

<p>and put these in your 'myActivity'</p>

<pre><code>public static Activity mApp=null; //Before onCreate()
  ...
onCreate( ... ) {
  ...
if (mApp == null) mApp = this; //Links your resources to other classes
  ...
    //Test if we've been called to show phone call list
    Intent _outcome = getIntent();
    String _phoneCallAction = mApp.getResources().getString(R.string.main_show_phone_call_list);
    String _reqAction = _outcome.getAction();//Can be null when no intent involved

         //Decide if we return to the Phone Call List view
         if (_reqAction != null &amp;&amp;_reqAction.equals(_phoneCallAction) == true) {
                         //DO something to return to look and feel
         }

  ...
        myListView.setOnItemClickListener(new OnItemClickListener() { //Act on item when selected
             @Override
             public void onItemClick(AdapterView&lt;?&gt; a, View v, int position, long id) {

                 myListView.moveToPosition(position);
                 String _bPartyNumber = ""tel:""+myListView.getString(myListView.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER)); 

                 //Provide an initial state for the listener to access.
                 initialiseCallStatePreferences(_bPartyNumber);

                 //Setup the listener so we can restart myActivity
                    EndCallListener _callListener = new EndCallListener();
                    TelephonyManager _TM = (TelephonyManager)mApp.getSystemService(Context.TELEPHONY_SERVICE);

                    _TM.listen(_callListener, PhoneStateListener.LISTEN_CALL_STATE);

                         Intent _makeCall = new Intent(Intent.ACTION_CALL, Uri.parse(_bPartyNumber));

                 _makeCall.setComponent(new ComponentName(""com.android.phone"",""com.android.phone.OutgoingCallBroadcaster""));
                    startActivity(_makeCall);                           
                finish();
              //Wait for call to enter the IDLE state and then we will be recalled by _callListener
              }
        });


}//end of onCreate()
</code></pre>

<p>use this to initilaise the behaviour for your onClick in myActivity e.g. after onCreate()</p>

<pre><code>private void initialiseCallStatePreferences(String _BParty) {
    final int LAUNCHED = -1;
    SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(
                                mApp.getBaseContext());
    SharedPreferences.Editor _ed = prefs.edit();

    String _prefKey = mApp.getString(R.string.last_phone_call_state_key),
           _bPartyKey = mApp.getString(R.string.last_phone_call_bparty_key);

    //Save default call state before next call
        _ed.putInt(_prefKey,LAUNCHED);
        _ed.putString(_bPartyKey,_BParty);
        _ed.commit();

}
</code></pre>

<p>You should find that clicking your list of phone numbers finishes your activty, makes the call to the number and returns to your activty when the call ends.  </p>

<p>Making a call from outside your app while it's still around won't restart your activty (unless it's the same as the last BParty number called).</p>

<p>:)</p>
"
"1556987","11246907","3","<p>Inside PhoneStateListener after seeing the call is finished better use:</p>

<pre><code>Intent intent = new Intent(CallDispatcherActivity.this, CallDispatcherActivity.class);
intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
startActivity(intent);
</code></pre>

<p>Where CallDispatcherActivity is the activity where the user has launched a call (to a taxi service dispatcher, in my case). This just removes Android telephony app from the top, the user gets back instead of ugly code I saw here.</p>
"
"1556987","12995235","2","<p>When <code>PhoneStateListener</code> is used, one need to make sure <code>PHONE_STATE_IDLE</code> following a <code>PHONE_STATE_OFFHOOK</code> is used to trigger the action to be done after the call. If the trigger happens upon seeing <code>PHONE_STATE_IDLE</code>, you will end up doing it before the call. Because you will see the state change <code>PHONE_STATE_IDLE -&gt; PHONE_STATE_OFFHOOK -&gt; PHONE_STATE_IDLE.</code></p>
"
"1556987","12995363","1","<p>@Dmitri Novikov, <code>FLAG_ACTIVITY_CLEAR_TOP</code> clears any active instance on top of the new one. So, it may end the old instance before it completes the process.</p>
"
"1556987","13118894","2","<p>Add this is your xml: <code>android:autoLink=""phone""</code></p>
"
"1556987","16166677","2","<p>// in setonclicklistener put this code:</p>

<pre><code>EditText et_number=(EditText)findViewById(R.id.id_of_edittext); 
String my_number = et_number.getText().toString().trim();
Intent callIntent = new Intent(Intent.ACTION_CALL, Uri.parse(my_number)); 
startActivity(callIntent);
</code></pre>

<p>// give permission for call in manifest:</p>

<pre><code>&lt;uses-permission android:name=""android.permission.CALL_PHONE""&gt;&lt;/uses-permission&gt;
</code></pre>
"
"1556987","22037675","2","<pre><code>  Intent callIntent = new Intent(Intent.ACTION_CALL);  
  callIntent.setData(Uri.parse(""tel:""+number));  
   startActivity(callIntent);   

 **Add permission :**

 &lt;uses-permission android:name=""android.permission.CALL_PHONE"" /&gt;          
</code></pre>
"
"1556987","24473783","0","<p>When starting your call, it looks fine.</p>

<p>There is a difference between android 11+ and down in bringing your app to the front though.</p>

<p>Android 10 or less you need to start a new intent, android 11+ you simply use <code>BringTaskToFront</code></p>

<p>In the call state IDLE:</p>

<pre><code>if (Build.VERSION.SDK_INT &gt;= 11) {
    ActivityManager am = (ActivityManager) activity.getSystemService(Activity.ACTIVITY_SERVICE);
    am.moveTaskToFront(MyActivity.MyActivityTaskId, ActivityManager.MOVE_TASK_WITH_HOME);
} else {
    Intent intent = new Intent(activity, MyActivity.class);
    activity.startActivity(intent);
}
</code></pre>

<p>I set the <code>MyActivity.MyActivityTaskId</code> when making the call on my activity like so, it this doesnt work, set this variable on the parent activity page of the page you want to get back to.</p>

<pre><code>MyActivity.MyActivityTaskId = this.getTaskId();
</code></pre>

<p><code>MyActivityTaskId</code> is a static variable on my activity class</p>

<pre><code>public static int MyActivityTaskId = 0;
</code></pre>

<p>I hope this will work for you. I use the above code a bit differently, I open my app as soon as the call is answered sothat the user can see the details of the caller.</p>

<p>I have set some stuff in the <code>AndroidManifest.xml</code> as well:</p>

<pre><code>/*Dont really know if this makes a difference*/
&lt;activity android:name=""MyActivity"" android:taskAffinity="""" android:launchMode=""singleTask"" /&gt;
</code></pre>

<p>and permissions:</p>

<pre><code>&lt;uses-permission android:name=""android.permission.GET_TASKS"" /&gt;
&lt;uses-permission android:name=""android.permission.REORDER_TASKS"" /&gt;
</code></pre>

<p>Please ask questions if or when you get stuck.</p>
"
"1560788","1561056","34","<p>Take a look at the ConnectivityManager class. You can use this class to get information on the active connections on a host. <a href=""http://developer.android.com/reference/android/net/ConnectivityManager.html"">http://developer.android.com/reference/android/net/ConnectivityManager.html</a></p>

<p>EDIT: You can use     </p>

<pre><code>Context.getSystemService(Context.CONNECTIVITY_SERVICE)
    .getNetworkInfo(ConnectivityManager.TYPE_MOBILE) 
</code></pre>

<p>or</p>

<pre><code>Context.getSystemService(Context.CONNECTIVITY_SERVICE)
    .getNetworkInfo(ConnectivityManager.TYPE_WIFI) 
</code></pre>

<p>and parse the DetailedState enum of the returned NetworkInfo object</p>

<p>EDIT EDIT: To find out whether you can access a host, you can use </p>

<pre><code>Context.getSystemService(Context.CONNECTIVITY_SERVICE)
    .requestRouteToHost(TYPE_WIFI, int hostAddress)
</code></pre>

<p>Obviously, I'm using Context.getSystemService(Context.CONNECTIVITY_SERVICE) as a proxy to say</p>

<pre><code>ConnectivityManager cm = Context.getSystemService(Context.CONNECTIVITY_SERVICE);
cm.yourMethodCallHere();
</code></pre>
"
"1560788","1561241","3","<p>Im using this code instead of the InetAddress :</p>

<pre><code>	try {

		URL url	= new URL(""http://""+params[0]);

    	HttpURLConnection urlc = (HttpURLConnection) url.openConnection();
    	urlc.setRequestProperty(""User-Agent"", ""Android Application:""+Z.APP_VERSION);
    	urlc.setRequestProperty(""Connection"", ""close"");
    	urlc.setConnectTimeout(1000 * 30); // mTimeout is in seconds
		urlc.connect();
    	if (urlc.getResponseCode() == 200) {
            Main.Log(""getResponseCode == 200"");
    		return new Boolean(true);
    	}
	} catch (MalformedURLException e1) {
		// TODO Auto-generated catch block
		e1.printStackTrace();
    } catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
</code></pre>
"
"1560788","2001824","246","<p>No need to be complex. The simplest and framework manner is to use <code>ACCESS_NETWORK_STATE</code> permission and just make a connected method</p>

<pre><code>public boolean isOnline() {
    ConnectivityManager cm =
        (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);

    return cm.getActiveNetworkInfo() != null &amp;&amp; 
       cm.getActiveNetworkInfo().isConnectedOrConnecting();
}
</code></pre>

<p>You can also use <code>requestRouteToHost</code> if you have a particualr host and connection type (wifi/mobile) in mind.</p>

<p>You will also need:</p>

<pre><code>&lt;uses-permission android:name=""android.permission.ACCESS_NETWORK_STATE"" /&gt;
</code></pre>

<p>in your android manifest.</p>
"
"1560788","3802783","57","<p>To get <code>getActiveNetworkInfo()</code> to work you need to add the following to the manifest.</p>

<pre><code>&lt;uses-permission android:name=""android.permission.ACCESS_NETWORK_STATE"" /&gt;
</code></pre>
"
"1560788","4009133","624","<p>@Eddie.  Just a minor edit to <a href=""http://stackoverflow.com/a/2001824/194894"">your solution</a> - if the device is in airplane mode (or presumably in other situations where there's no available network), <code>cm.getActiveNetworkInfo()</code> will be <code>null</code>, so you need to add a <code>null</code> check.</p>

<p>Modified solution below:</p>

<pre><code>public boolean isOnline() {
    ConnectivityManager cm =
        (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
    NetworkInfo netInfo = cm.getActiveNetworkInfo();
    return netInfo != null &amp;&amp; netInfo.isConnectedOrConnecting();
}
</code></pre>

<p>Also add the following permission to the <code>AndroidManifest.xml</code>:</p>

<pre><code>&lt;uses-permission android:name=""android.permission.ACCESS_NETWORK_STATE"" /&gt;
</code></pre>

<p>One other small point, if you absolutely need a network connection at the given point in time, then it might be better to use <code>netInfo.isConnected()</code> rather than <code>netInfo.isConnectedOrConnecting</code>.  I guess this is up to the indivudal use-case however.</p>
"
"1560788","4656606","20","<p>Found at and modified (!) from this <a href=""http://blogingtutorials.blogspot.com/2011/01/check-internet-connection-in-android.html"">link</a> :</p>

<p>In your manifest file add at least:</p>

<pre><code>&lt;uses-permission android:name=""android.permission.ACCESS_NETWORK_STATE"" /&gt;
</code></pre>

<p>You probably already have the INTERNET permission if you are accessing it. Then a boolean function that allows to test for connectivity is:</p>

<pre><code>private boolean checkInternetConnection() {
    ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
    // test for connection
    if (cm.getActiveNetworkInfo() != null
            &amp;&amp; cm.getActiveNetworkInfo().isAvailable()
            &amp;&amp; cm.getActiveNetworkInfo().isConnected()) {
        return true;
    } else {
        Log.v(TAG, ""Internet Connection Not Present"");
        return false;
    }
}
</code></pre>
"
"1560788","5803489","26","<p>check this code... it worked for me :)</p>

<pre><code>public static void isNetworkAvailable(final Handler handler, final int timeout) {
    // ask fo message '0' (not connected) or '1' (connected) on 'handler'
    // the answer must be send before before within the 'timeout' (in milliseconds)

    new Thread() {
        private boolean responded = false;   
        @Override
        public void run() { 
            // set 'responded' to TRUE if is able to connect with google mobile (responds fast) 
            new Thread() {      
                @Override
                public void run() {
                    HttpGet requestForTest = new HttpGet(""http://m.google.com"");
                    try {
                        new DefaultHttpClient().execute(requestForTest); // can last...
                        responded = true;
                    } 
                    catch (Exception e) {
                    }
                } 
            }.start();

            try {
                int waited = 0;
                while(!responded &amp;&amp; (waited &lt; timeout)) {
                    sleep(100);
                    if(!responded ) { 
                        waited += 100;
                    }
                }
            } 
            catch(InterruptedException e) {} // do nothing 
            finally { 
                if (!responded) { handler.sendEmptyMessage(0); } 
                else { handler.sendEmptyMessage(1); }
            }
        }
    }.start();
}
</code></pre>

<p>Then, I define the handler:</p>

<pre><code>Handler h = new Handler() {
    @Override
    public void handleMessage(Message msg) {

        if (msg.what != 1) { // code if not connected

        } else { // code if connected

        }   
    }
};
</code></pre>

<p>...and launch the test:</p>

<pre><code>isNetworkAvailable(h,2000); // get the answser within 2000 ms
</code></pre>
"
"1560788","8191568","0","<pre><code>public boolean isOnline() {
    boolean var = false;
    ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
    if ( cm.getActiveNetworkInfo() != null ) {
        var = true;
    }
    return var;
} 
</code></pre>

<p>I have done it this way.
A little bit shorter and more readable I guess.</p>

<p>Cheers!</p>

<p>Saiyan</p>
"
"1560788","9256972","3","<p>You can iterate over all network connections and chek whether there is at least one available connection:</p>

<pre><code>public boolean isConnected() {
    boolean connected = false;

    ConnectivityManager cm = 
        (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);

    if (cm != null) {
        NetworkInfo[] netInfo = cm.getAllNetworkInfo();

        for (NetworkInfo ni : netInfo) {
            if ((ni.getTypeName().equalsIgnoreCase(""WIFI"")
                    || ni.getTypeName().equalsIgnoreCase(""MOBILE""))
                    &amp;&amp; ni.isConnected() &amp;&amp; ni.isAvailable()) {
                connected = true;
            }

        }
    }

    return connected;
}
</code></pre>
"
"1560788","11546687","1","<p>It is not complex to check Android network / internet connectivity status. The below <code>DetectConnection</code> class will help you to check this status:</p>

<pre><code>import android.content.Context;
import android.net.ConnectivityManager;

public class DetectConnection {
    public static boolean checkInternetConnection(Context context) {
        ConnectivityManager con_manager = (ConnectivityManager) context
                                .getSystemService(Context.CONNECTIVITY_SERVICE);

        if (con_manager.getActiveNetworkInfo() != null
            &amp;&amp; con_manager.getActiveNetworkInfo().isAvailable()
            &amp;&amp; con_manager.getActiveNetworkInfo().isConnected()) {
                return true;
        } else {
            return false;
        }
    }
}
</code></pre>

<p>For more details visit 
<a href=""http://javasrilankansupport.blogspot.com/2012/07/how-to-check-android-network-internet.html"" rel=""nofollow"">How to Check Android Network / Internet Connectivity Status</a></p>
"
"1560788","11561895","6","<p>I made this code, it is the simplest and it is just a boolean.
by asking <code>if(isOnline()){</code></p>

<p>You get if there is a connection and if it can connect to a page the status code <code>200</code> (stable connection).    </p>

<p>Make sure to add the correct <code>INTERNET</code> and <code>ACCESS_NETWORK_STATE</code> permissions.</p>

<pre><code>public boolean isOnline() {
    ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
    NetworkInfo netInfo = cm.getActiveNetworkInfo();
    if (netInfo != null &amp;&amp; netInfo.isConnected()) {
        try {
            URL url = new URL(""http://www.google.com"");
            HttpURLConnection urlc = (HttpURLConnection) url.openConnection();
            urlc.setConnectTimeout(3000);
            urlc.connect();
            if (urlc.getResponseCode() == 200) {
                return new Boolean(true);
            }
        } catch (MalformedURLException e1) {
            // TODO Auto-generated catch block
            e1.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
    return false;
}
</code></pre>
"
"1560788","11642475","3","<p>It's works for me. Try it out.</p>

<pre><code>public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);
    try {
        URL url = new URL(""http://stackoverflow.com/posts/11642475/edit"" );
        //URL url = new URL(""http://www.nofoundwebsite.com/"" );
        executeReq(url);
        Toast.makeText(getApplicationContext(), ""Webpage is available!"", Toast.LENGTH_SHORT).show();
    }
    catch(Exception e) {
        Toast.makeText(getApplicationContext(), ""oops! webpage is not available!"", Toast.LENGTH_SHORT).show();
    }
}

private void executeReq(URL urlObject) throws IOException
{
    HttpURLConnection conn = null;
    conn = (HttpURLConnection) urlObject.openConnection();
    conn.setReadTimeout(30000);//milliseconds
    conn.setConnectTimeout(3500);//milliseconds
    conn.setRequestMethod(""GET"");
    conn.setDoInput(true);

    // Start connect
    conn.connect();
    InputStream response =conn.getInputStream();
    Log.d(""Response:"", response.toString());
}}
</code></pre>
"
"1560788","12490784","4","<p>Of everything I have seen so far shortest and cleanest way should be:</p>

<pre><code>public final static boolean isConnected( Context context )
{   
   final ConnectivityManager connectivityManager = 
         (ConnectivityManager) context.getSystemService( Context.CONNECTIVITY_SERVICE );  
   final NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();    
   return networkInfo != null &amp;&amp; networkInfo.isConnected();
}
</code></pre>

<p>PS: This does not ping any host, it just checks the connectionstatus, so if your router has no internet connection and your device is connected to it this method would return <strong>true</strong> although you have no internet.<br />
For an actual test I would recommend execuding a HttpHead request <em>(e.g. to www.google.com)</em> and check the status, if its <strong>200 OK</strong> everything is fine and your device has an internet connection.</p>
"
"1560788","13550792","0","<p>For me it was not a good practice to check the connection state in the Activity class, because </p>

<pre><code>ConnectivityManager cm =
    (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
</code></pre>

<p>should be called there, or you need to push down your Activity instance (context) to the connection handler class to able to check the connection state there
When no available connection (wifi, network) I catch the <strong>UnknownHostException</strong> exception:</p>

<pre><code>JSONObject jObj = null;
Boolean responded = false;
HttpGet requestForTest = new HttpGet(""http://myserver.com"");
try {
    new DefaultHttpClient().execute(requestForTest);
    responded = true;
} catch (UnknownHostException e) {
    jObj = new JSONObject();
    try {
        jObj.put(""answer_code"", 1);
        jObj.put(""answer_text"", ""No available connection"");
    } catch (Exception e1) {}
    return jObj;
} catch (IOException e) {
    e.printStackTrace();
}
</code></pre>

<p>In this way I can handle this case along with the other cases in the same class (my server always response back with a json string)</p>
"
"1560788","14546768","0","<p>Best approach:</p>

<pre><code>public static boolean isOnline() {
    try {
    InetAddress.getByName(""google.com"").isReachable(3);

    return true;
    } catch (UnknownHostException e){
    return false;
    } catch (IOException e){
    return false;
    }
    }
</code></pre>
"
"1560788","17040627","2","<p>Following is the code from my <code>Utils</code> class:</p>

<pre><code>public static boolean isNetworkAvailable(Context context) {
        ConnectivityManager connectivityManager 
              = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo activeNetworkInfo = connectivityManager.getActiveNetworkInfo();
        return activeNetworkInfo != null &amp;&amp; activeNetworkInfo.isConnected();
}
</code></pre>
"
"1560788","17092484","3","<p>One important use case on mobile devices to it ensure an actual connection exists. This is a common problem when a mobile user enters a Wifi network with a ""Captive Portal"", in which they need to sign in. I use this blocking function in the background to ensure a connection exists.</p>

<pre><code>/*
 * Not Thread safe. Blocking thread. Returns true if it
 * can connect to URL, false and exception is logged.
 */
public boolean checkConnectionHttps(String url){
    boolean responded = false;
    HttpGet requestTest = new HttpGet(url);
    HttpParams params = new BasicHttpParams();
    HttpConnectionParams.setConnectionTimeout(params, 3000);
    HttpConnectionParams.setSoTimeout(params, 5000);
    DefaultHttpClient client = new DefaultHttpClient(params);
    try {
        client.execute(requestTest);
        responded = true;
    } catch (ClientProtocolException e) {
        Log.w(MainActivity.TAG,""Unable to connect to "" + url + "" "" + e.toString());
    } catch (IOException e) {
        Log.w(MainActivity.TAG,""Unable to connect to "" + url + "" "" + e.toString());
        e.printStackTrace();
    }
    return responded;
}
</code></pre>
"
"1560788","17583324","0","<p>Here is the method I use:</p>

<pre><code>public static boolean isNetworkAvailable(Context context) 
{
    return ((ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE)).getActiveNetworkInfo() != null;
}
</code></pre>

<p>Here is how to use the method:</p>

<pre><code>if (isNetworkAvailable(context))
{
    // code here
}
else
{
    // code
}
</code></pre>

<p>Regards,</p>
"
"1560788","19156687","0","<pre><code>public static boolean isNetworkAvailable(Context ctx) {
ConnectivityManager connMgr = (ConnectivityManager)ctx.getSystemService(Context.CONNECTIVITY_SERVICE);
if(connMgr.getNetworkInfo(ConnectivityManager.TYPE_WIFI).isConnected() ||
    connMgr.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).isConnected()){
        return true;
}

return false;
 } 
</code></pre>

<p>user this </p>
"
"1560788","19570488","1","<pre><code>public class Network {

Context context;

public Network(Context context){
    this.context = context;
}

public boolean isOnline() {
    ConnectivityManager cm =
            (ConnectivityManager)context.getSystemService(Context.CONNECTIVITY_SERVICE);

    NetworkInfo activeNetwork = cm.getActiveNetworkInfo();
    return activeNetwork != null &amp;&amp;
                          activeNetwork.isConnectedOrConnecting();
}

}
</code></pre>
"
"1560788","20943594","0","<p>The Answers above are quite good, but they are all in Java, and almost all of them check for a connectivity. In my case I needed to have connectivity with a specific type of connection and I am developing on MonoForAndroid. Moreover, I do not pass a reference to my activities Context in the Hardware layer, I use the Application Context. So here is my solution, in case somebody comes here with similar requirements. I have not done full testing though, will update the answer once I am done with my testing</p>

<pre><code>using Android.App;
using Android.Content;
using Android.Net;

namespace Leopard.Mobile.Hal.Android
{
    public class AndroidNetworkHelper
    {
        public static AndroidNetworkStatus GetWifiConnectivityStatus()
        {
            return GetConnectivityStatus(ConnectivityType.Wifi);
        }

        public static AndroidNetworkStatus GetMobileConnectivityStatus()
        {
            return GetConnectivityStatus(ConnectivityType.Mobile);
        }

        #region Implementation

        private static AndroidNetworkStatus GetConnectivityStatus(ConnectivityType connectivityType)
        {
            var connectivityManager = (ConnectivityManager)Application.Context.GetSystemService(Context.ConnectivityService);
            var wifiNetworkInfo = connectivityManager.GetNetworkInfo(connectivityType);
            var result = GetNetworkStatus(wifiNetworkInfo);
            return result;
        }

        private static AndroidNetworkStatus GetNetworkStatus(NetworkInfo wifiNetworkInfo)
        {
            var result = AndroidNetworkStatus.Unknown;
            if (wifiNetworkInfo != null)
            {
                if (wifiNetworkInfo.IsAvailable &amp;&amp; wifiNetworkInfo.IsConnected)
                {
                    result = AndroidNetworkStatus.Connected;
                }
                else
                {
                    result = AndroidNetworkStatus.Disconnected;
                }
            }
            return result;
        } 

        #endregion
    }

    public enum AndroidNetworkStatus
    {
        Connected,
        Disconnected,
        Unknown
    }
</code></pre>
"
"1560788","21471645","-1","<p>The other answers that use ConnectivityManager are wrong because having a network connection doesn't mean you have internet access. For example, you might be at a coffee shop with a WiFi captive portal. To actually check yor internet you have to try to connect to an actual server. Normally when you'd want to this you have a specific server in mind that you want to connect to, so go ahead and check if you can connect to that server. Here's a simple method for checking connectivity to a server.</p>

<pre><code>private boolean isOnTheInternet() {
    try {
        URLConnection urlConnection = new URL(""http://yourserver"").openConnection();
        urlConnection.setConnectTimeout(400);
        urlConnection.connect();
        return true;
    } catch (Exception e) {
        return false;
    }
}
</code></pre>

<p>The reason for setting the ConnectTimeout is that otherwise it defaults to the TCP timeout which can be many seconds long. </p>

<p>Note also that Android won't let you run this on your main thread. </p>
"
"1560788","22203871","0","<pre><code>public boolean bIsNetworkAvailable()
{
    String sMethodName = ""public boolean bIsNetworkAvailable()""
    bool bResult = false;   
    try{
        ConnectivityManager ConnectivityManager = null;
        ConnectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);

        NetworkInfo NetworkInfo = null;
        NetworkInfo = connectivityManager.getActiveNetworkInfo();

        bResult = activeNetworkInfo != null &amp;&amp; activeNetworkInfo.isConnected();

    } catch(Exception ex)
    {
        //Common.Exception(_sClassName, sMethodName, ex); //This method is one you should have that displays exceptions in your log
    }
    return bResult; 
}
</code></pre>
"
"1560788","22256082","2","<p>It does works for me:</p>

<p>To verify network availability:</p>

<pre><code>private Boolean isNetworkAvailable() {
ConnectivityManager connectivityManager 
      = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
NetworkInfo activeNetworkInfo = connectivityManager.getActiveNetworkInfo();
return activeNetworkInfo != null &amp;&amp; activeNetworkInfo.isConnectedOrConnecting();}
</code></pre>

<p>To verify internet access:</p>

<pre><code>public Boolean isOnline() {
    try {
        Process p1 = java.lang.Runtime.getRuntime().exec(""ping -c 1 www.google.com"");
        int returnVal = p1.waitFor();
        boolean reachable = (returnVal==0);
        return reachable;
    } catch (Exception e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    return false;
}
</code></pre>
"
"1560788","24489017","0","<p>Its so great to have more then one way to code.
Here is my example.</p>

<pre><code>ConnectivityManager icheck = getSystemService(Context.CONNECTIVITY_SERVICE);

TextView tv = findViewById(R.id.textView1);

boolean wifi = icheck.getActiveNetworkInfo() != null;
        if(wifi) {
        tv.setText(""Internet is on."");  
        } else {
             tv.setText(""Internet is off."");    
        }
</code></pre>

<p>Good luck.</p>
"
"1560788","25664759","0","<p>Just create the following class which checks for an internet connection:</p>

<pre><code>public class ConnectionStatus {

    private Context _context;

    public ConnectionStatus(Context context) {
        this._context = context;
    }

    public boolean isConnectionAvailable() {
        ConnectivityManager connectivity = (ConnectivityManager) _context
                .getSystemService(Context.CONNECTIVITY_SERVICE);
        if (connectivity != null) {
            NetworkInfo[] info = connectivity.getAllNetworkInfo();
            if (info != null)
                for (int i = 0; i &lt; info.length; i++)
                    if (info[i].getState() == NetworkInfo.State.CONNECTED) {
                        return true;
                    }
        }
        return false;
    }
}
</code></pre>

<p>This class simply contains a method which returns the boolean value of the connection status. Therefore in simple terms, if the method finds a valid connection to the Internet, the return value is <code>true</code>, otherwise <code>false</code> if no valid connection is found.</p>

<p>The following method in the MainActivity then calls the result from the method previously described, and prompts the user to act accordingly:</p>

<pre><code>public void addListenerOnWifiButton() {
        Button btnWifi = (Button)findViewById(R.id.btnWifi);

        iia = new ConnectionStatus(getApplicationContext());

        isConnected = iia.isConnectionAvailable();
        if (!isConnected) {
            btnWifi.setOnClickListener(new View.OnClickListener() {

                @Override
                public void onClick(View v) {
                    startActivity(new Intent(Settings.ACTION_WIFI_SETTINGS));
                    Toast.makeText(getBaseContext(), ""Please connect to a hotspot"",
                            Toast.LENGTH_SHORT).show();
                }
            });
        }
        else {
            btnWifi.setVisibility(4);
            warning.setText(""This app may use your mobile data to update events and get their details."");
        }
    }
</code></pre>

<p>In the above code, if the result is false, (therefore there is no internet connection, the user is taken to the Android wi-fi panel, where he is prompted to connect to a wi-fi hotspot.</p>
"
"1667278","1667436","6","<p>For a servlet or a JSP page you can get querystring key/value pairs by using request.getParameter(""paramname"")</p>

<pre><code>String name = request.getParameter(""name"");
</code></pre>

<p>There are other ways of doing it but that's the way I do it in all the servlets and jsp pages that I create.</p>
"
"1667278","1667585","-3","<p>You say ""Java"" but ""not Java EE"". Do you mean you are using JSP and/or servlets but not a full Java EE stack? If that's the case, then you should still have request.getParameter() available to you.</p>

<p>If you mean you are writing Java but you are not writing JSPs nor servlets, or that you're just using Java as your reference point but you're on some other platform that doesn't have built-in parameter parsing ... Wow, that just sounds like an unlikely question, but if so, the principle would be:</p>

<pre><code>xparm=0
word=""""
loop
  get next char
  if no char
    exit loop
  if char=='='
    param_name[xparm]=word
    word=""""
  else if char=='&amp;'
    param_value[xparm]=word
    word=""""
    xparm=xparm+1
  else if char=='%'
    read next two chars
    word=word+interpret the chars as hex digits to make a byte
  else
    word=word+char
</code></pre>

<p>(I could write Java code but that would be pointless, because if you have Java available, you can just use request.getParameters.)</p>
"
"1667278","1667790","3","<p>Parsing the query string is a bit more complicated than it seems, depending on how forgiving you want to be.</p>

<p>First, the query string is ascii bytes.  You read in these bytes one at a time and convert them to characters.  If the character is ? or &amp; then it signals the start of a parameter name.  If the character is = then it signals the start of a paramter value.  If the character is % then it signals the start of an encoded byte.  Here is where it gets tricky.</p>

<p>When you read in a % char you have to read the next two bytes and interpret them as hex digits.  That means the next two bytes will be 0-9, a-f or A-F.  Glue these two hex digits together to get your byte value.  But remember, <strong>bytes are not characters</strong>.  You have to know what encoding was used to encode the characters.  The character é does not encode the same in UTF-8 as it does in ISO-8859-1.  In general it's impossible to know what encoding was used for a given character set.  I always use UTF-8 because my web site is configured to always serve everything using UTF-8 but in practice you can't be certain.  Some user-agents will tell you the character encoding in the request; you can try to read that if you have a full HTTP request.  If you just have a url in isolation, good luck.</p>

<p>Anyway, assuming you are using UTF-8 or some other multi-byte character encoding, now that you've decoded one encoded byte you have to set it aside until you capture the next byte.  You need all the encoded bytes that are together because you can't url-decode properly one byte at a time.  Set aside all the bytes that are together then decode them all at once to reconstruct your character.</p>

<p>Plus it gets more fun if you want to be lenient and account for user-agents that mangle urls.  For example, some webmail clients double-encode things.  Or double up the ?&amp;= chars (for example:  <code>http://yoursite.com/blah??p1==v1&amp;&amp;p2==v2</code>).  If you want to try to gracefully deal with this, you will need to add more logic to your parser.</p>
"
"1667278","1668563","0","<p>I don't think there is one in JRE. You can find similar functions in other packages like Apache HttpClient. If you don't use any other packages, you just have to write your own. It's not that hard. Here is what I use,</p>

<pre><code>public class QueryString {

 private Map&lt;String, List&lt;String&gt;&gt; parameters;

 public QueryString(String qs) {
  parameters = new TreeMap&lt;String, List&lt;String&gt;&gt;();

  // Parse query string
     String pairs[] = qs.split(""&amp;"");
     for (String pair : pairs) {
            String name;
            String value;
            int pos = pair.indexOf('=');
            // for ""n="", the value is """", for ""n"", the value is null
         if (pos == -1) {
          name = pair;
          value = null;
         } else {
       try {
        name = URLDecoder.decode(pair.substring(0, pos), ""UTF-8"");
              value = URLDecoder.decode(pair.substring(pos+1, pair.length()), ""UTF-8"");            
       } catch (UnsupportedEncodingException e) {
        // Not really possible, throw unchecked
           throw new IllegalStateException(""No UTF-8"");
       }
         }
         List&lt;String&gt; list = parameters.get(name);
         if (list == null) {
          list = new ArrayList&lt;String&gt;();
          parameters.put(name, list);
         }
         list.add(value);
     }
 }

 public String getParameter(String name) {        
  List&lt;String&gt; values = parameters.get(name);
  if (values == null)
   return null;

  if (values.size() == 0)
   return """";

  return values.get(0);
 }

 public String[] getParameterValues(String name) {        
  List&lt;String&gt; values = parameters.get(name);
  if (values == null)
   return null;

  return (String[])values.toArray(new String[values.size()]);
 }

 public Enumeration&lt;String&gt; getParameterNames() {  
  return Collections.enumeration(parameters.keySet()); 
 }

 public Map&lt;String, String[]&gt; getParameterMap() {
  Map&lt;String, String[]&gt; map = new TreeMap&lt;String, String[]&gt;();
  for (Map.Entry&lt;String, List&lt;String&gt;&gt; entry : parameters.entrySet()) {
   List&lt;String&gt; list = entry.getValue();
   String[] values;
   if (list == null)
    values = null;
   else
    values = (String[]) list.toArray(new String[list.size()]);
   map.put(entry.getKey(), values);
  }
  return map;
 } 
}
</code></pre>
"
"1667278","2355736","0","<p>Based on the answer from BalusC, i wrote some example-Java-Code:</p>

<pre><code>    if (queryString != null)
    {
        final String[] arrParameters = queryString.split(""&amp;"");
        for (final String tempParameterString : arrParameters)
        {
            final String[] arrTempParameter = tempParameterString.split(""="");
            if (arrTempParameter.length &gt;= 2)
            {
                final String parameterKey = arrTempParameter[0];
                final String parameterValue = arrTempParameter[1];
                //do something with the parameters
            }
        }
    }
</code></pre>
"
"1667278","2969715","18","<p>Here is <a href=""http://stackoverflow.com/questions/1667278/parsing-query-strings-in-java/1667624#1667624"">BalusC's answer</a>, but it compiles and returns results:</p>

<pre><code>public static Map&lt;String, List&lt;String&gt;&gt; getUrlParameters(String url)
        throws UnsupportedEncodingException {
    Map&lt;String, List&lt;String&gt;&gt; params = new HashMap&lt;String, List&lt;String&gt;&gt;();
    String[] urlParts = url.split(""\\?"");
    if (urlParts.length &gt; 1) {
        String query = urlParts[1];
        for (String param : query.split(""&amp;"")) {
            String pair[] = param.split(""="");
            String key = URLDecoder.decode(pair[0], ""UTF-8"");
            String value = """";
            if (pair.length &gt; 1) {
                value = URLDecoder.decode(pair[1], ""UTF-8"");
            }
            List&lt;String&gt; values = params.get(key);
            if (values == null) {
                values = new ArrayList&lt;String&gt;();
                params.put(key, values);
            }
            values.add(value);
        }
    }
    return params;
}
</code></pre>
"
"1667278","4342549","101","<p>On Android:</p>

<pre><code>Uri uri=Uri.parse(url_string);
uri.getQueryParameter(""para1"");
</code></pre>
"
"1667278","5093734","0","<pre><code>public static Map &lt;String, String&gt; parseQueryString (final URL url)
        throws UnsupportedEncodingException
{
    final Map &lt;String, String&gt; qps = new TreeMap &lt;String, String&gt; ();
    final StringTokenizer pairs = new StringTokenizer (url.getQuery (), ""&amp;"");
    while (pairs.hasMoreTokens ())
    {
        final String pair = pairs.nextToken ();
        final StringTokenizer parts = new StringTokenizer (pair, ""="");
        final String name = URLDecoder.decode (parts.nextToken (), ""ISO-8859-1"");
        final String value = URLDecoder.decode (parts.nextToken (), ""ISO-8859-1"");
        qps.put (name, value);
    }
    return qps;
}
</code></pre>
"
"1667278","5355866","16","<p>If you have jetty (server or client) libs on your classpath you can use the jetty util classes (see <a href=""http://download.eclipse.org/jetty/stable-7/apidocs/org/eclipse/jetty/util/package-summary.html"">javadoc</a>), e.g.:</p>

<pre><code>import org.eclipse.jetty.util.*;
URL url = new URL(""www.example.com/index.php?foo=bar&amp;bla=blub"");
MultiMap&lt;String&gt; params = new MultiMap&lt;String&gt;();
UrlEncoded.decodeTo(url.getQuery(), params, ""UTF-8"");

assert params.getString(""foo"").equals(""bar"");
assert params.getString(""bla"").equals(""blub"");
</code></pre>
"
"1667278","6504381","4","<p>Just for reference, this is what I've ended up with (based on URLEncodedUtils, and returning a Map).</p>

<p>Features:</p>

<ul>
<li>it accepts the query string part of the url (you can use <code>request.getQueryString()</code>)</li>
<li>an empty query string will produce an empty <code>Map</code></li>
<li>a parameter without a value (?test) will be mapped to an empty <code>List&lt;String&gt;</code></li>
</ul>

<p>Code:</p>

<pre><code>public static Map&lt;String, List&lt;String&gt;&gt; getParameterMapOfLists(String queryString) {
    Map&lt;String, List&lt;String&gt;&gt; mapOfLists = new HashMap&lt;String, List&lt;String&gt;&gt;();
    if (queryString == null || queryString.length() == 0) {
        return mapOfLists;
    }
    List&lt;NameValuePair&gt; list = URLEncodedUtils.parse(URI.create(""http://localhost/?"" + queryString), ""UTF-8"");
    for (NameValuePair pair : list) {
        List&lt;String&gt; values = mapOfLists.get(pair.getName());
        if (values == null) {
            values = new ArrayList&lt;String&gt;();
            mapOfLists.put(pair.getName(), values);
        }
        if (pair.getValue() != null) {
            values.add(pair.getValue());
        }
    }

    return mapOfLists;
}
</code></pre>

<p>A compatibility helper (values are stored in a String array just as in <a href=""http://download.oracle.com/javaee/1.3/api/javax/servlet/ServletRequest.html#getParameterMap%28%29"" rel=""nofollow"">ServletRequest.getParameterMap()</a>):</p>

<pre><code>public static Map&lt;String, String[]&gt; getParameterMap(String queryString) {
    Map&lt;String, List&lt;String&gt;&gt; mapOfLists = getParameterMapOfLists(queryString);

    Map&lt;String, String[]&gt; mapOfArrays = new HashMap&lt;String, String[]&gt;();
    for (String key : mapOfLists.keySet()) {
        mapOfArrays.put(key, mapOfLists.get(key).toArray(new String[] {}));
    }

    return mapOfArrays;
}
</code></pre>
"
"1667278","9249147","2","<p>This works for me..
I'm not sure why every one was after a Map, List>
All I needed was a simple name value Map.</p>

<p>To keep things simple I used the build in URI.getQuery(); </p>

<pre><code>public static Map&lt;String, String&gt; getUrlParameters(URI uri)
    throws UnsupportedEncodingException {
    Map&lt;String, String&gt; params = new HashMap&lt;String, String&gt;();
    for (String param : uri.getQuery().split(""&amp;"")) {
        String pair[] = param.split(""="");
        String key = URLDecoder.decode(pair[0], ""UTF-8"");
        String value = """";
        if (pair.length &gt; 1) {
            value = URLDecoder.decode(pair[1], ""UTF-8"");
        }
        params.put(new String(key), new String(value));
    }
    return params;
}
</code></pre>
"
"1667278","9773975","1","<p>Guava's Multimap is better suited for this. Here is a short clean version:</p>

<pre><code>Multimap&lt;String, String&gt; getUrlParameters(String url) {
        try {
            Multimap&lt;String, String&gt; ret = ArrayListMultimap.create();
            for (NameValuePair param : URLEncodedUtils.parse(new URI(url), ""UTF-8"")) {
                ret.put(param.getName(), param.getValue());
            }
            return ret;
        } catch (URISyntaxException e) {
            throw new RuntimeException(e);
        }
    }
</code></pre>
"
"1667278","13615838","3","<p>On Android, I tried using @diyism answer but I encountered the space character issue raised by @rpetrich, for example:
I fill out a form where <code>username = ""us+us""</code> and <code>password = ""pw pw""</code> causing a URL string to look like:</p>

<pre><code>http://somewhere?username=us%2Bus&amp;password=pw+pw
</code></pre>

<p>However, @diyism code returns <code>""us+us""</code> and <code>""pw+pw""</code>, i.e. it doesn't detect the space character. If the URL was rewritten with <code>%20</code> the space character gets identified:</p>

<pre><code>http://somewhere?username=us%2Bus&amp;password=pw%20pw
</code></pre>

<p>This leads to the following fix:</p>

<pre><code>Uri uri = Uri.parse(url_string.replace(""+"", ""%20""));
uri.getQueryParameter(""para1"");
</code></pre>
"
"1667278","16651918","0","<p>using Guava:</p>

<pre><code>Multimap&lt;String,String&gt; parseQueryString(String queryString, String encoding) {
    LinkedListMultimap&lt;String, String&gt; result = LinkedListMultimap.create();

    for(String entry : Splitter.on(""&amp;"").omitEmptyStrings().split(queryString)) {
        String pair [] = entry.split(""="", 2);
        try {
            result.put(URLDecoder.decode(pair[0], encoding), pair.length == 2 ? URLDecoder.decode(pair[1], encoding) : null);
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(e);
        }
    }

    return result;
}
</code></pre>
"
"1667278","17546198","6","<p>If you're using Spring 3.1 or greater (yikes, was hoping that support went back further), you can use the <code>UriComponents</code> and <code>UriComponentsBuilder</code>:</p>

<pre><code>UriComponents components = UriComponentsBuilder.fromUri(uri).build();
List&lt;String&gt; myParam = components.getQueryParams().get(""myParam"");
</code></pre>

<p><code>components.getQueryParams()</code> returns a <code>MultiValueMap&lt;String, String&gt;</code></p>

<p><a href=""http://static.springsource.org/spring/docs/3.1.x/javadoc-api/org/springframework/web/util/UriComponentsBuilder.html"">Here's some more documentation</a>.</p>
"
"1724937","1724951","12","<p><code>view</code> is the list item, so you can do</p>

<pre><code>String s =(String) ((TextView) view.findViewById(R.id.myNr)).getText();
</code></pre>
"
"1724937","1727553","1","<p>If you're looking for the TextView at the position of the item the person long-pressed, you can get it out using something like this:</p>

<pre><code>String s = ((TextView) view.getItemAtPosition(info.position)).getText();
</code></pre>
"
"1724937","1731056","0","<p>thanks for your help but I am afraid it still doesnt work. 
if i add the line you suggested, it underlines ""getItemAtPosition"" and says: 
--The method getItemAtPosition(int) is undefined for the type View--</p>

<p>He suggests to cast the view to a AdapterView, so it looks the following:</p>

<pre><code>String s = ((TextView) ((AdapterView&lt;ListAdapter&gt;) view).getItemAtPosition(info.position)).getText();
</code></pre>

<p>When i run this and make a long click on the item, i recieve an ""ClassCastException""</p>
"
"1724937","1738061","5","<p>Hey Guys I found another way to set an ItemLongClickListener. Therefore i also found a way to get the Text i am displaying. </p>

<pre><code>ListView lv = getListView();
lv.setOnItemLongClickListener(new OnItemLongClickListener(){
@Override
public boolean onItemLongClick(AdapterView&lt;?&gt; arg0, View arg1,int row, long arg3) {
   String[] tmp = (String[]) arg0.getItemAtPosition(row);
   //tmp[0] ist the Text of the first TextView displayed by the  clicked ListItem 
   return true;
   }});
</code></pre>
"
"1724937","5814687","0","<p>In this method you will get the item related to your list item.</p>

<pre><code>@Override
public boolean onContextItemSelected(MenuItem aItem) {
  AdapterContextMenuInfo menuInfo = (AdapterContextMenuInfo) aItem.getMenuInfo();
  Object entity =  (Object) todoList.getAdapter().getItem(menuInfo.position);
  switch (aItem.getItemId()) {}
}
</code></pre>
"
"1724937","7429366","8","<p>just take reference of of the text view if you extending a <strong>BaseAdapter</strong> like</p>

<pre><code>Listener = new OnItemClickListener() {
    @Override
    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position,
            long id) {

TextView tx =(TextView)view.findViewById(R.id.text);
            String s = tx.getText().toString();
            Log.d(TAG, ""string : ""+s);
</code></pre>
"
"1724937","9377808","0","<pre><code>list.setOnItemClickListener(new OnItemClickListener() {

        @Override
        public void onItemClick(AdapterView&lt;?&gt; parent, View view,int position, long id) {
            String title = (String) ((TextView)view.findViewById(R.id.title)).getText();
                String  artist=(String)((TextView)view.findViewById(R.id.artist)).getText();

                     //System.out.println(s);
                        Toast.makeText(CustomizedListView.this,""Title = ""+title+""\n""+""Artist = ""+artist, Toast.LENGTH_SHORT).show();                            

        }
    });     
</code></pre>
"
"1724937","9932034","3","<p>I found none of the above solutions to work. As an <em>alternative</em> you can:</p>

<pre><code>getListView().setOnItemLongClickListener(new OnItemLongClickListener() 
{

   public boolean onItemLongClick(AdapterView&lt;?&gt; arg0, View v,int position, long id) 
   {

    Cursor c = (Cursor) arg0.getItemAtPosition(position);
    String tableValue = c.getString(1);

        return true;
   }
});
</code></pre>
"
"1724937","11466822","0","<p>I had an ArrayList of ArrayLists as my data source for the CustomAdapter, so I use </p>

<pre><code>menu.setHeaderTitle(Messages.get(info.position).getUserName());
</code></pre>
"
"1724937","12022627","0","<p>using <code>HashMap</code></p>

<pre><code>getListView().setOnItemClickListener(new AdapterView.OnItemClickListener() {
        public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {
            HashMap m = (HashMap) getListView().getItemAtPosition(position);
            System.out.println(""itemClick: position = "" + position + "", id = "" + id + "" o = "" + m.get(""YOUR_KEY""));
        }
    });
</code></pre>
"
"1724937","12173692","2","<p>The best solution I found was :</p>

<pre><code>@Override  
        public void onCreateContextMenu(ContextMenu menu, View view,ContextMenuInfo menuInfo) {  
        super.onCreateContextMenu(menu, view, menuInfo);  
        AdapterView.AdapterContextMenuInfo info =     (AdapterView.AdapterContextMenuInfo)menuInfo;

        ViewGroup vg = (ViewGroup) view;
        View children = vg.getChildAt(info.position);
        TextView child = (TextView) children.findViewById(R.id.text1);

        String s= child.getText().toString();
            menu.setHeaderTitle(s);  
            menu.add(0, view.getId(), 0, ""Serve"");  
            menu.add(0, view.getId(), 0, ""View"");  

        }  
</code></pre>
"
"1851633","1851833","71","<pre><code>Button myButton = new Button(this);
myButton.setText(""Push Me"");

LinearLayout ll = (LinearLayout)findViewById(R.id.buttonlayout);
LayoutParams lp = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
ll.addView(myButton, lp);
</code></pre>

<p>Have a look to <a href=""http://developer.android.com/resources/samples/ApiDemos/src/com/example/android/apis/view/ScrollView2.html"">this</a> example</p>
"
"1851633","6741505","6","<p>Try this:</p>

<pre><code>LinearLayout ll = (LinearLayout)findViewById(R.id.layout);

Button btn = new Button(this);
btn.setText(""Manual Add"");
btn.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT));
</code></pre>
"
"1851633","7380922","3","<p>Actually I add to the xml layout file anything that could be used! Then from the source code of the specific Activity I get the object by its id and I ""play"" with the visibility method.</p>

<p>Here is an example:</p>

<p><code>((Spinner)findViewById(R.id.email_spinner)).setVisibility(View.GONE);</code></p>
"
"1851633","8134635","5","<p>Try this code</p>

<pre><code> Button btn=new Button(this);
btn.setId(btn);
btn.setBackgroundResource(R.drawable.image);
btn.setMinimumHeight(150);
btn.setMinimumWidth(150);
Relativelayout.addView(btn); 
</code></pre>
"
"1851633","12298472","31","<p>try this:</p>

<pre><code>for (int i = 1; i &lt;= 20; i++) {
    LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(
            LinearLayout.LayoutParams.MATCH_PARENT,
            LinearLayout.LayoutParams.WRAP_CONTENT);
    Button btn = new Button(this);
    btn.setId(i);
    final int id_ = btn.getId();
    btn.setText(""button "" + id_);
    btn.setBackgroundColor(Color.rgb(70, 80, 90));
    linear.addView(btn, params);
    btn1 = ((Button) findViewById(id_));
    btn1.setOnClickListener(new View.OnClickListener() {
        public void onClick(View view) {
            Toast.makeText(view.getContext(),
                    ""Button clicked index = "" + id_, Toast.LENGTH_SHORT)
                    .show();
        }
    });
}
</code></pre>
"
"1851633","13423467","3","<p>I've used this (or very similar) code to add several TextViews to a LinearLayout:</p>

<pre><code>// Quick &amp; dirty pre-made list of text labels...
String names[] = {""alpha"", ""beta"", ""gamma"", ""delta"", ""epsilon""};
int namesLength = 5;

// Create a LayoutParams...
LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(
    LinearLayout.LayoutParams.WRAP_CONTENT, 
    LinearLayout.LayoutParams.FILL_PARENT);

// Get existing UI containers...
LinearLayout nameButtons = (LinearLayout) view.findViewById(R.id.name_buttons);
TextView label = (TextView) view.findViewById(R.id.master_label);

TextView tv;

for (int i = 0; i &lt; namesLength; i++) {
    // Grab the name for this ""button""
    final String name = names[i];

    tv = new TextView(context);
    tv.setText(name);

    // TextViews CAN have OnClickListeners
    tv.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            label.setText(""Clicked button for "" + name); 
        }
    });

    nameButtons.addView(tv, params);
}
</code></pre>

<p>The main difference between this and dicklaw795's code is it doesn't set() and re-get() the ID for each TextView--I found it unnecessary, although I may need it to later identify each button in a common handler routine (e.g. one called by onClick() for each TextView).</p>
"
"1851633","16564096","2","<p>Try following code.</p>

<pre><code>LinearLayout layout = (LinearLayout) findViewById(R.id.llayout); 
layout.setOrientation(LinearLayout.VERTICAL);

Button btn = new Button(this);
btn.setText(""Button1"");

layout.add(btn);

btn = new Button(this);
btn.setText(Button2);
layout.add(btn);
</code></pre>

<p>like this you add Buttons as per your requirements.</p>
"
"1851633","16832209","1","<p>try this  </p>

<pre><code>private void createLayoutDynamically(int n) {

    for (int i = 0; i &lt; n; i++) {
        Button myButton = new Button(this);
        myButton.setText(""Button :""+i);
        myButton.setId(i);
        final int id_ = myButton.getId();

        LinearLayout layout = (LinearLayout) findViewById(R.id.myDynamicLayout);
        layout.addView(myButton);

        myButton.setOnClickListener(new View.OnClickListener() {
            public void onClick(View view) {
                Toast.makeText(DynamicLayout.this,
                        ""Button clicked index = "" + id_, Toast.LENGTH_SHORT)
                        .show();
            }
        });
    }
</code></pre>
"
"1851633","18868596","3","<p>Try this code. It will work fine..</p>

<pre><code>public class DynamicViewsActivity extends Activity {

Button button;
@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    //setContentView(R.layout.activity_dynamic_views);
    ScrollView scrl=new ScrollView(this);
    final LinearLayout ll=new LinearLayout(this);
    ll.setOrientation(LinearLayout.HORIZONTAL);
    LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(
            LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);
    layoutParams.setMargins(100, 500, 100, 200);
    scrl.addView(ll);
    Button add_btn=new Button(this);
    add_btn.setText(""Click Here"");

    ll.addView(add_btn, layoutParams);


    final Context context = this;

    add_btn.setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View v) {
            // TODO Auto-generated method stub

            Intent intent = new Intent(context, App2Activity.class);
            startActivity(intent);
        }
    });
    this.setContentView(scrl);
}
}
</code></pre>
"
"1851633","19787728","3","<pre><code>  for (int k = 1; k &lt; 100; k++) {
        TableRow row = new TableRow(this);

        innerloop:
       for (int  l = 1; l &lt;4; l++) {
              btn = new Button(this);
              TableRow.LayoutParams tr= new TableRow.LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.WRAP_CONTENT);
              layout.setWeightSum(12.0f);
              tr.weight=0;
                btn.setLayoutParams(tr); 
              btn.setTextColor(a);
              btn.setHeight(150);

              btn.setWidth(150);
              btn.setId(idb);
              btn.setText(""Button "" + idb);
            row.addView(btn);
              }
   }
</code></pre>
"
"1851633","23266451","0","<pre><code>Button myButton = new Button(this);
myButton.setId(123);
myButton.setText(""Push Me"");


LinearLayout ll = (LinearLayout)findViewById(R.id.buttonlayout);
LayoutParams lp = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
ll.addView(myButton, lp);
 myButton.setOnClickListener(new View.OnClickListener() {
            public void onClick(View view) {
                Toast.makeText(DynamicLayout.this,
                        ""Button clicked index = "" + id_, Toast.LENGTH_SHORT)
                        .show();
            }
        });
</code></pre>
"
"1851633","24759755","0","<p>If you want to add dynamically buttons try this:</p>

<pre><code>public class MainActivity extends Activity {
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main2);
    for (int i = 1; i &lt;= 5; i++) {
        LinearLayout layout = (LinearLayout) findViewById(R.id.myLinearLayout);
        layout.setOrientation(LinearLayout.VERTICAL);
        Button btn = new Button(this);
        btn.setText(""    "");
        layout.addView(btn);
    }

}
</code></pre>
"
"1851633","25971064","0","<pre><code>public void add_btn() {

    lin_btn.setWeightSum(3f);
    for (int j = 0; j &lt; 3; j++) {
        LinearLayout.LayoutParams params1 = new LinearLayout.LayoutParams(
                LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
        params1.setMargins(10, 0, 0, 10);
        params1.weight = 1.0f;

        LinearLayout ll;
        ll = new LinearLayout(this);
        ll.setGravity(Gravity.CENTER_VERTICAL);
        ll.setOrientation(LinearLayout.HORIZONTAL);
        ll.setLayoutParams(params1);

        final Button btn;
        btn = new Button(DynamicActivity.this);

        btn.setText(""A""+(j+1));
        btn.setTextSize(15);
        btn.setId(j);
        btn.setPadding(10, 8, 10, 10);

        ll.addView(btn);

        lin_btn.addView(ll);


        btn.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {

                if(v.getId()==0)
                {
                    txt_text.setText(""Hii"");
                }else if(v.getId()==1)
                {
                    txt_text.setText(""hello"");
                }else if(v.getId()==2)
                {
                    txt_text.setText(""how r u"");
                }



            }
        });
    }

}
</code></pre>
"
"2091465","2091482","225","<p>The easiest way to do this would be to pass the session id to the signout activity in the intent you're using to start the activity:</p>

<pre><code>Intent intent = new Intent(getBaseContext(), SignoutActivity.class);
intent.putExtra(""EXTRA_SESSION_ID"", sessionId);
startActivity(intent)
</code></pre>

<p>The <a href=""http://developer.android.com/guide/topics/intents/intents-filters.html"">docs</a> for Intents has more information (look at the section titled ""Extras"").</p>
"
"2091465","2091756","12","<p>Try to do the following:</p>

<p>Create simple ""helper"" class(factory for your Intents), like this:</p>

<pre><code>import android.content.Intent;
public class IntentManager {
public static final Intent createYourSpecialIntent(Intent src) {
  return new Intent(""YourSpecialIntent"").addCategory(""YourSpecialCategory"").putExtras(src);
}
}
</code></pre>

<p>This will be the factory for all your Intents. Everytime you need a new Intent, create static factory method in IntentManager. To create new Intent you should just say like that:</p>

<pre><code>IntentHelper.createYourSpecialIntent(getIntent());
</code></pre>

<p>in your activity. when when you want to ""save"" some data in ""session"" just use following:</p>

<pre><code>IntentHelper.createYourSpecialIntent(getIntent()).putExtra(""YOUR_FIELD_NAME"",fieldValueToSave);
</code></pre>

<p>and send this Intent. In target Activity your field will be available as:</p>

<pre><code>getIntent().getStringExtra(""YOUR_FIELD_NAME"");
</code></pre>

<p>So now we can use Intent like same old session(like in servlets or jsp.).
Hope this helps.</p>
"
"2091465","7325248","574","<p>In your current Activity, create a new Intent:</p>

<pre><code>Intent i = new Intent(getApplicationContext(), NewActivity.class);
i.putExtra(""new_variable_name"",""value"");
startActivity(i);
</code></pre>

<p>Then in the new Activity, retrieve those values:</p>

<pre><code>Bundle extras = getIntent().getExtras();
if (extras != null) {
    String value = extras.getString(""new_variable_name"");
}
</code></pre>

<p>Use this technique to pass variables from one Activity to the other.</p>
"
"2091465","12137344","4","<p>The most convenient way to pass data between activities is by passing intents. In the first activity from where you want to send data, you shoukd add code,</p>

<pre><code>String str = ""My Data""; //Data you want to send
Intent intent = new Intent(FirstActivity.this, SecondActivity.class);
intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);         
intent.putExtra(""name"",str); //here you will add the data into intent to pass bw activites
v.getContext().startActivity(intent);
</code></pre>

<p>you should also import</p>

<pre><code>import android.content.Intent;
</code></pre>

<p>Then in the next Acitvity(SecondActivity), you dhould get retrieve the data from intent using the following code,</p>

<pre><code>String name = this.getIntent().getStringExtra(""name"");
</code></pre>
"
"2091465","13078360","6","<p>Another way is to use a public static field in which you store data, i.e.:</p>

<pre><code>public class MyActivity extends Activity {

  public static String SharedString;
  public static SomeObject SharedObject;

//...
</code></pre>
"
"2091465","13100481","1","<p>The passing of data between activities is mainly by means of an intent object.</p>

<p>First you have to attach the data to the intent object with the use of the <code>Bundle</code> class. Then call the activity using either <code>startActivity()</code> or <code>startActivityForResult()</code> methods.</p>

<p>You can find more information about it, with an example from <a href=""http://codeglympse.blogspot.in/2012/10/passing-data-to-activity.html"" rel=""nofollow"">this blogpost</a>.</p>
"
"2091465","15088375","0","<p>I recently released <a href=""http://vapor-api.com"" rel=""nofollow"">Vapor API</a>, a jQuery flavored Android framework that makes all sorts of tasks like this simpler. As mentioned, <code>SharedPreferences</code> is one way you could do this.</p>

<p><a href=""http://vapor-api.com/core/sharedpreferences"" rel=""nofollow""><code>VaporSharedPreferences</code></a> is implemented as Singleton so that is one option, and in Vapor API it has a heavily overloaded <code>.put(...)</code> method so you don't have to explicitly worry about the datatype you are committing - providing it is supported. It is also fluent, so you can chain calls:</p>

<pre><code>$.prefs(...).put(""val1"", 123).put(""val2"", ""Hello World!"").put(""something"", 3.34);
</code></pre>

<p>It also optionally autosaves changes, and unifies the reading and writing process under-the-hood so you don't need to explicitly retrieve an Editor like you do in standard Android.</p>

<p>Alternatively you could use an <code>Intent</code>. In Vapor API you can also use the chainable overloaded <code>.put(...)</code> method on a <a href=""http://vapor-api.com/core/intent"" rel=""nofollow""><code>VaporIntent</code></a>:</p>

<pre><code>$.Intent().put(""data"", ""myData"").put(""more"", 568)...
</code></pre>

<p>And pass it as an extra, as mentioned in the other answers. You can retrieve extras from your <code>Activity</code>, and furthermore if you are using <a href=""http://vapor-api.com/core/activity"" rel=""nofollow""><code>VaporActivity</code></a> this is done for you automatically so you can use:</p>

<pre><code>this.extras()
</code></pre>

<p>To retrieve them at the other end in the <code>Activity</code> you switch to.</p>

<p>Hope that is of interest to some :)</p>
"
"2091465","16733899","19","<p>You just have to send extras while calling your intent</p>

<p>like this:</p>

<pre><code>Intent intent = new Intent(getApplicationContext(), SecondActivity.class);
intent.putExtra(""Variable Name"",""Value you want to pass"");
startActivity(intent);
</code></pre>

<p>Now on the OnCreate method of your SecondActivity you can fetch the extras like this</p>

<p><strong><em>If the value you sent was in ""long""</em></strong></p>

<pre><code>long value = getIntent().getLongExtra(""Variable Name which you sent as an extra"", defaultValue(you can give it anything));
</code></pre>

<p><strong><em>If the value you sent was a ""String""</em></strong></p>

<pre><code>String value = getIntent().getStringExtra(""Variable Name which you sent as an extra"");
</code></pre>

<p><strong><em>If the value you sent was a ""Boolean""</em></strong></p>

<pre><code>Boolean value = getIntent().getBooleanExtra(""Variable Name which you sent as an extra"",defaultValue);
</code></pre>
"
"2091465","17379703","0","<p>Good way to share data between Activities is to make class with <strong>static fields and methods</strong>.
In my exaple I want to share ArrayLists between activities.</p>

<pre><code>public class Values {
private static Map&lt;String, ArrayList&lt;String&gt;&gt; xValues;

public static init(){
    if(xValues == null)
        xValues = new HashMap&lt;String, ArrayList&lt;String&gt;&gt;();
}

public static ArrayList&lt;String&gt; getStringList(String key){
    return xValues.get(key);
}

public static void putStringList(ArrayList&lt;String&gt; value, String key){
    xValues.put(key, value);
}
</code></pre>

<p>}</p>

<p>And then in Main class you only once initialize. Then you simply use in other classes its static methods:</p>

<p><strong>In main</strong> 
(do not create any Object, because You will use static methods and fields):</p>

<pre><code>Values.init();
</code></pre>

<p><strong>In any activity or even any class to put new ArrayList</strong> </p>

<pre><code>ArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;();
list.add(""Text"");
Values.putStringList(list, ""mylist"");
</code></pre>

<p><strong>In any activity or even any class to get</strong></p>

<pre><code>for(String s:Values.getStringList(""mylist""))
Log.d(""My list"",s);
</code></pre>

<p>Will result with Log entry: My list: Text.</p>

<p>Conclusion: Good way is to use Java possibilities: static method and fields can be accessed within all our activities in package.</p>
"
"2091465","19982438","0","<p>i use static fields in a class, and get,set them:</p>

<p>like:</p>

<pre><code>public class Info 
{
    public static int ID      = 0;
    public static String NAME = ""TEST"";
}
</code></pre>

<p>for get value use this in a Activity :</p>

<pre><code>Info.ID
Info.NAME
</code></pre>

<p>for set value :</p>

<pre><code>Info.ID = 5;
Info.NAME = ""USER!"";
</code></pre>
"
"2091465","20473548","0","<p>Consider using singleton to hold your session info accessible to all the Activities.
This approach has several advantages compared to extras and static variables:</p>

<p>1) Allow you to extend Info class, adding new user info settings You need. You could make new class inheriting it or just edit Info class without need to change extras handling in all the places.
2) Easy usage, no need to get extras in every activity.</p>

<pre><code>public class Info {

private static Info instance;
private int id;
private String name;

//private constructor is to disallow instances creation outside create() or getInstance() methods
private Info() {

}

//method You use to get the same info from any Activity
//returns existing Info instance,  or null if not created yet
public static Info getInstance() {
   return instance;
}

//creates new Info instance or returns existing one if exists
public static synchronized Info create(int id, String name) {

   if (null == instance) {
     instance = new Info();
     instance.id = id;
     instance.name = name;
   }

   return instance;

}


}
</code></pre>
"
"2091465","20584974","0","<p>Charlie Collins gave me a perfect answer using Application class, I was not aware of we could subclass it that easily. Here is simplified example using a custom application class.</p>

<p><strong>AndroidManifest.xml</strong><br/>
Give android:name attribute to use own application class.</p>

<pre><code>...
&lt;application android:name=""MyApplication""
    android:allowBackup=""true""
    android:icon=""@drawable/ic_launcher""
    android:label=""@string/app_name""
    android:theme=""@style/AppTheme"" &gt;
....
</code></pre>

<p><strong>MyApplication.java</strong><br/>
Use this as a global reference holder, it works fine within a same process.</p>

<pre><code>public class MyApplication extends Application {
    private MainActivity mainActivity;

    @Override
    public void onCreate() {
        super.onCreate();
    }

    public void setMainActivity(MainActivity activity) { this.mainActivity=activity; }
    public MainActivity getMainActivity() { return mainActivity; }
}
</code></pre>

<p><strong>MainActivity.java</strong><br/>
Set global ""singleton"" reference to application instance.</p>

<pre><code>public class MainActivity extends Activity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        ((MyApplication)getApplication()).setMainActivity(this);
    }
    ...

}
</code></pre>

<p><strong>MyPreferences.java</strong><br/>
Simple example where I use main activity from another activity instance.</p>

<pre><code>public class MyPreferences extends PreferenceActivity 
            implements SharedPreferences.OnSharedPreferenceChangeListener {
    @SuppressWarnings(""deprecation"")
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        addPreferencesFromResource(R.xml.preferences);
        PreferenceManager.getDefaultSharedPreferences(this)
            .registerOnSharedPreferenceChangeListener(this);
    }

    @Override
    public void onSharedPreferenceChanged(SharedPreferences prefs, String key) {
        if (!key.equals(""autostart"")) {
            ((MyApplication)getApplication()).getMainActivity().refreshUI();
        }
    }

}
</code></pre>
"
"2091465","21602897","12","<p>Source class : </p>

<pre><code>    Intent myIntent = new Intent(this, NewActivity.class); 
    myIntent.putExtra(""firstName"", ""Your First Name Here"");
    myIntent.putExtra(""lastName"", ""Your Last Name Here"");
    startActivity(myIntent)
</code></pre>

<p>Destination Class (NewActivity class) :</p>

<pre><code>protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.view);    

    Intent intent = getIntent();

    String fName = intent.getStringExtra(""firstName"");
    String lName = intent.getStringExtra(""lastName"");

  }
</code></pre>
"
"2091465","24285468","2","<pre><code>Intent intent = new Intent(YourCurrentActivity.this, YourActivityName.class);
intent.putExtra(""NAme"",""John"");
intent.putExtra(""Id"",1);
startActivity(intent);
</code></pre>

<p>You can Retrive in another activity Two ways..</p>

<pre><code>int id=getIntent.getIntExtra(""id"",/*defaltvalue*/ 2);
</code></pre>

<p>Second Way is</p>

<pre><code>Intent i=getIntent();
String name=i.getStringExtra(""name"");
</code></pre>
"
"2091465","25822755","0","<pre><code>/*if you are from transferring datas from one class that doesno't extends activity class then you need to do some thing like that*/ 

public class abc{
    Context context;   
   public abc(Context context)
   {
     this.context = context;
    }   

   public void something()
   {

    context.startactivity(new Intent(context,anyone.class).putextra(""key"", value));

   }  




} 
</code></pre>
"
"2091465","26484522","1","<p>You can use SharedPreferences....</p>

<p><strong>1) Logging</strong> time store session id in sharedpreferences</p>

<pre><code>SharedPreferences preferences = getSharedPreferences(""session"",getApplicationContext().MODE_PRIVATE);
Editor editor = preferences.edit();
editor.putString(""sessionId"", sessionId);
editor.commit();
</code></pre>

<p><strong>2) Signout</strong> time fetch session id in sharedpreferences</p>

<pre><code>SharedPreferences preferences=getSharedPreferences(""session"", getApplicationContext().MODE_PRIVATE);
String sessionId=preferences.getString(""sessionId"",null);
</code></pre>

<p>If have not required session id  then removed sharedpreferences</p>

<pre><code>SharedPreferences settings = context.getSharedPreferences(""session"", Context.MODE_PRIVATE);
settings.edit().clear().commit();
</code></pre>

<p>that is very use full because one time you save value then retrive any where of acitivity</p>
"
"2130932","2131051","300","<p>If you create a <a href=""http://developer.android.com/reference/java/io/File.html"">File</a> object that wraps the top-level directory you can call it's <a href=""http://developer.android.com/reference/java/io/File.html#mkdirs%28%29"">mkdirs()</a> method to build all the needed directories. Something like:</p>

<pre><code>// create a File object for the parent directory
File wallpaperDirectory = new File(""/sdcard/Wallpaper/"");
// have the object build the directory structure, if needed.
wallpaperDirectory.mkdirs();
// create a File object for the output file
File outputFile = new File(wallpaperDirectory, filename);
// now attach the OutputStream to the file object, instead of a String representation
FileOutputStream fos = new FileOutputStream(outputFile);
</code></pre>

<p><strong>Note:</strong> It might be wise to use <a href=""http://developer.android.com/reference/android/os/Environment.html#getExternalStorageDirectory%28%29"">Environment.getExternalStorageDirectory()</a> for getting the ""SD Card"" directory as this might change if a phone comes along which has something other than an SD Card (such as built-in flash, a'la the iPhone). Either way you should keep in mind that you need to check to make sure it's actually there as the SD Card may be removed.</p>

<p><strong>UPDATE:</strong> Since API Level 4 (1.6) you'll also have to request the permission. Something like this (in the manifest) should work:</p>

<pre><code>&lt;uses-permission android:name=""android.permission.WRITE_EXTERNAL_STORAGE"" /&gt;
</code></pre>
"
"2130932","4435708","50","<p>Had the same problem and just want to add that AndroidManifest.xml also needs this permission:</p>

<pre><code>&lt;uses-permission android:name=""android.permission.WRITE_EXTERNAL_STORAGE"" /&gt;
</code></pre>
"
"2130932","5156626","8","<p>With API 8 and greater, the location of the SD card has changed. @fiXedd's answer is good, but for safer code, you should use <code>Environment.getExternalStorageState()</code> to check if the media is available. Then you can use <code>getExternalFilesDir()</code> to navigate to the directory you want (assuming you're using API 8 or greater).</p>

<p>You can read more in the <a href=""http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"">SDK documentation</a>.</p>
"
"2130932","7439425","24","<p>Here is what works for me.</p>

<pre><code> uses-permission android:name=""android.permission.WRITE_EXTERNAL_STORAGE"" 
</code></pre>

<p>in your manifest and the code below</p>

<pre><code>public static boolean createDirIfNotExists(String path) {
    boolean ret = true;

    File file = new File(Environment.getExternalStorageDirectory(), path);
    if (!file.exists()) {
        if (!file.mkdirs()) {
            Log.e(""TravellerLog :: "", ""Problem creating Image folder"");
            ret = false;
        }
    }
    return ret;
}
</code></pre>
"
"2130932","9331303","2","<p>I was facing the same problem, unable to create directory on Galaxy S but was able to create it successfully on Nexus and Samsung Droid. How I fixed it was by adding following line of code:</p>

<pre><code>File dir = new File(Environment.getExternalStorageDirectory().getPath()+""/""+getPackageName()+""/"");
dir.mkdirs();
</code></pre>
"
"2130932","9497252","5","<p>Make sure external storage is present: 
<a href=""http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"">http://developer.android.com/guide/topics/data/data-storage.html#filesExternal</a></p>

<pre><code>private boolean isExternalStoragePresent() {

        boolean mExternalStorageAvailable = false;
        boolean mExternalStorageWriteable = false;
        String state = Environment.getExternalStorageState();

        if (Environment.MEDIA_MOUNTED.equals(state)) {
            // We can read and write the media
            mExternalStorageAvailable = mExternalStorageWriteable = true;
        } else if (Environment.MEDIA_MOUNTED_READ_ONLY.equals(state)) {
            // We can only read the media
            mExternalStorageAvailable = true;
            mExternalStorageWriteable = false;
        } else {
            // Something else is wrong. It may be one of many other states, but
            // all we need
            // to know is we can neither read nor write
            mExternalStorageAvailable = mExternalStorageWriteable = false;
        }
        if (!((mExternalStorageAvailable) &amp;&amp; (mExternalStorageWriteable))) {
            Toast.makeText(context, ""SD card not present"", Toast.LENGTH_LONG)
                    .show();

        }
        return (mExternalStorageAvailable) &amp;&amp; (mExternalStorageWriteable);
    }
</code></pre>
"
"2130932","9990400","9","<p>Actually I used part of @fiXedd asnwer and it worked for me:</p>

<pre><code>  //Create Folder
  File folder = new File(Environment.getExternalStorageDirectory().toString()+""/Aqeel/Images"");
  folder.mkdirs();

  //Save the path as a string value
  String extStorageDirectory = folder.toString();

  //Create New file and name it Image2.PNG
  File file = new File(extStorageDirectory, ""Image2.PNG"");
</code></pre>

<p>Make sure that you are using mkdirs() not mkdir() to create the complete path</p>
"
"2130932","11195107","2","<p>Don't forget to make sure that you have no special characters in your file/folder names. Happened to me with "":"" when I was setting folder names using variable(s)</p>

<p>not allowed characters in file/folder names</p>

<blockquote>
  <p>"" *   /   :   &lt;   >   ?   \   |</p>
</blockquote>

<p>U may find this code helpful in such a case.</p>

<p>The below code removes all "":"" and replaces them with ""-""</p>

<pre><code>//actualFileName = ""qwerty:asdfg:zxcvb"" say...

    String[] tempFileNames;
    String tempFileName ="""";
    String delimiter = "":"";
    tempFileNames = actualFileName.split(delimiter);
    tempFileName = tempFileNames[0];
    for (int j = 1; j &lt; tempFileNames.length; j++){
        tempFileName = tempFileName+"" - ""+tempFileNames[j];
    }
    File file = new File(Environment.getExternalStorageDirectory(), ""/MyApp/""+ tempFileName+ ""/"");
    if (!file.exists()) {
        if (!file.mkdirs()) {
        Log.e(""TravellerLog :: "", ""Problem creating Image folder"");
        }
    }
</code></pre>
"
"2130932","18424875","-1","<p>You can use /sdcard/ instead of Environment.getExternalStorageDirectory()</p>

<pre><code>private static String DB_PATH = ""/sdcard/Android/data/com.myawesomeapp.app/"";

File dbdir = new File(DB_PATH);
dbdir.mkdirs();
</code></pre>
"
"2130932","24118609","0","<pre><code>File sdcard = Environment.getExternalStorageDirectory();
File f=new File(sdcard+""/dor"");
f.mkdir();
</code></pre>

<p>this will create a folder named dor in your sdcard.
then to fetch file for eg- filename.json which is manually inserted in <em>dor</em> folder. Like:</p>

<pre><code> File file1 = new File(sdcard,""/dor/fitness.json"");
 .......
 .....
</code></pre>
"
"2130932","25304225","0","<pre><code>     //Create File object for Parent Directory
File wallpaperDir = new File(Environment.getExternalStorageDirectory().getAbsoluteFile() +File.separator + ""wallpaper"");
if (!wallpaperDir.exists()) {
wallpaperDir.mkdir();
}


File out = new File(wallpaperDir, wallpaperfile);
FileOutputStream outputStream = new FileOutputStream(out);
</code></pre>
"
"2130932","26608179","0","<p>Just completing the Vijay's post...</p>

<hr>

<p><strong>Manifest</strong></p>

<pre><code>uses-permission android:name=""android.permission.WRITE_EXTERNAL_STORAGE""
</code></pre>

<hr>

<p><strong>Function</strong></p>

<pre><code>public static boolean createDirIfNotExists(String path) {
    boolean ret = true;

    File file = new File(Environment.getExternalStorageDirectory(), path);
    if (!file.exists()) {
        if (!file.mkdirs()) {
            Log.e(""TravellerLog :: "", ""Problem creating Image folder"");
            ret = false;
        }
    }
    return ret;
}
</code></pre>

<hr>

<p><strong>Usage</strong></p>

<pre><code>createDirIfNotExists(""mydir/""); //Create a directory sdcard/mydir
createDirIfNotExists(""mydir/myfile"") //Create a directory and a file in sdcard/mydir/myfile.txt
</code></pre>

<p><strong>You could check for errors</strong></p>

<pre><code>if(createDirIfNotExists(""mydir/"")){
     //Directory Created Success
}
else{
    //Error
}
</code></pre>
"
"2139134","2139291","50","<p>You'll need to serialize your object into some kind of string representation. One possible string representation is JSON, and one of the easiest ways to serialize to/from JSON in android, if you ask me, is through <a href=""http://code.google.com/p/google-gson/"">Google GSON</a>.</p>

<p>In that case you juse put the string return value from <code>(new Gson()).toJson(myObject);</code> and retrieve the string value and use <code>fromJson</code> to turn it back into your object.</p>

<p>If your object isn't very complex, however, it might not be worth the overhead, and you could consider passing the separate values of the object instead.</p>
"
"2139134","2141166","320","<p>If you're just passing objects around then <a href=""http://developer.android.com/reference/android/os/Parcelable.html"">Parcelable</a> was designed for this. It requires a little more effort to use than using Java's native serialization, but it's way faster (and I mean way, <strong><em>WAY</em></strong> faster).</p>

<p>From the docs, a simple example for how to implement is:</p>

<pre><code>// simple class that just has one member property as an example
public class MyParcelable implements Parcelable {
    private int mData;

    /* everything below here is for implementing Parcelable */

    // 99.9% of the time you can just ignore this
    public int describeContents() {
        return 0;
    }

    // write your object's data to the passed-in Parcel
    public void writeToParcel(Parcel out, int flags) {
        out.writeInt(mData);
    }

    // this is used to regenerate your object. All Parcelables must have a CREATOR that implements these two methods
    public static final Parcelable.Creator&lt;MyParcelable&gt; CREATOR = new Parcelable.Creator&lt;MyParcelable&gt;() {
        public MyParcelable createFromParcel(Parcel in) {
            return new MyParcelable(in);
        }

        public MyParcelable[] newArray(int size) {
            return new MyParcelable[size];
        }
    };

    // example constructor that takes a Parcel and gives you an object populated with it's values
    private MyParcelable(Parcel in) {
        mData = in.readInt();
    }
}
</code></pre>

<p>Observe that in the case you have more than one field to retrieve from a given Parcel, you must do this in the same order you put them in (that is, in a FIFO approach).</p>

<p>Once you have your objects implement <code>Parcelable</code> it's just a matter of putting them into your <a href=""http://developer.android.com/reference/android/content/Intent.html"">Intents</a> with <a href=""http://developer.android.com/reference/android/content/Intent.html#putExtra%28java.lang.String,%20android.os.Parcelable%29"">putExtra()</a>:</p>

<pre><code>Intent i = new Intent();
i.putExtra(""name_of_extra"", myParcelableObject);
</code></pre>

<p>Then you can pull them back out with <a href=""http://developer.android.com/reference/android/content/Intent.html#getParcelableExtra%28java.lang.String%29"">getParcelableExtra()</a>:</p>

<pre><code>Intent i = getIntent();
MyParcelable myParcelableObject = (MyParcelable) i.getParcelableExtra(""name_of_extra"");
</code></pre>

<p>If your Object Class implements Parcelable and Serializable then make sure you do cast to one of the following:</p>

<pre><code>i.putExtra((Parcelable) myParcelableObject);
i.putExtra((Serializable) myParcelableObject);
</code></pre>
"
"2139134","2236529","1","<p>the most easiest solution i found is..
to create a class with static data members with getters setters.</p>

<p>set from one activity and get from another activity that object.</p>

<p>activity A</p>

<pre><code>mytestclass.staticfunctionSet("""","""",""""..etc.);
</code></pre>

<p>activity b</p>

<pre><code>mytestclass obj= mytestclass.staticfunctionGet();
</code></pre>
"
"2150078","2151269","1","<p>The InputMethodManager has information about the soft keyboard.  You get it from an activity via:</p>

<pre><code>((InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE))
</code></pre>

<p>You might play around with that to see what it can tell you.  You can use it to show or hide the soft input...</p>
"
"2160619","2161172","-3","<p>There are a few attributes you should check: android:lines, android:minLines, android:maxLines. To display a maximum of 4 lines and ellipsize it, you just need android:maxLines and android:ellipsize:</p>

<pre><code>&lt;TextView
    android:layout_width=""fill_parent""
    android:layout_height=""wrap_content""
    android:maxLines=""4""
    android:ellipsize=""marquee""
    android:text=""Hai!""
    /&gt;
</code></pre>
"
"2169649","2169663","8","<p>Assuming you have an <em>image</em> folder in your SD card directory for images only.</p>

<pre><code>Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
// tells your intent to get the contents
// opens the URI for your image directory on your sdcard
intent.setType(""file:///sdcard/image/*""); 
startActivityForResult(intent, 1);
</code></pre>

<p>Then you can decide with what you would like to do with the content back in your activity. </p>

<p>This was an example to retrieve the path name for the image, test this with your code just to make sure you can handle the results coming back. You can change the code as needed to better fit your needs.</p>

<pre><code>protected final void onActivityResult(final int requestCode, final int
                     resultCode, final Intent i) {
    super.onActivityResult(requestCode, resultCode, i);

  // this matches the request code in the above call
  if (requestCode == 1) {
      Uri _uri = i.getData();

    // this will be null if no image was selected...
    if (_uri != null) {
      // now we get the path to the image file
     cursor = getContentResolver().query(_uri, null,
                                      null, null, null);
     cursor.moveToFirst();
     String imageFilePath = cursor.getString(0);
     cursor.close();
     }
   }
</code></pre>

<p>My advice is to try to get retrieving images working correctly, I think the problem is the content of accessing the images on the sdcard. Take a look at <a href=""http://mihaifonoage.blogspot.com/2009/09/displaying-images-from-sd-card-in.html""><strong>Displaying images on sd card</strong></a>. </p>

<p>If you can get that up and running, probably by the example supplying a correct provider, you should be able to figure out a work-around for your code.</p>

<p>Keep me updated by updating this question with your progress. Good luck</p>
"
"2201917","2201999","779","<p>Try this:</p>

<pre><code>Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(""http://www.google.com""));
startActivity(browserIntent);
</code></pre>

<p>That works fine for me.</p>

<p>As for the missing ""http://"" I'd just do something like this:</p>

<pre><code>if (!url.startsWith(""http://"") &amp;&amp; !url.startsWith(""https://""))
   url = ""http://"" + url;
</code></pre>

<p>I would also probably pre-populate your EditText that the user is typing a URL in with ""http://"".</p>
"
"2217753","2218080","0","<p>Take a look at <a href=""http://developer.android.com/resources/samples/ApiDemos/src/com/example/android/apis/view/List14.html"" rel=""nofollow"">List14 example</a>. In <code>getView()</code> you can call <code>convertView.setBackgroundDrawable()</code> for each entry. You could have a class member counter to decide which background to call it with to get alternating backgrounds, for example.</p>
"
"2271131","2271305","105","<p>Okay, not that hard as there are several methods to do this. I assume you want to put the current date &amp; time into a <code>TextView</code>.</p>

<pre><code>String currentDateTimeString = DateFormat.getDateTimeInstance().format(new Date());

// textView is the TextView view that should display it
textView.setText(currentDateTimeString);
</code></pre>

<p>There is more to read in the documentation that can easily be found <a href=""http://developer.android.com/reference/java/text/DateFormat.html#getDateTimeInstance%28%29"">here</a>
. There you'll find more information on how to change the format used for conversion.</p>
"
"2271131","2271609","20","<p>The obvious choices for displaying the time are the <a href=""http://developer.android.com/intl/fr/reference/android/widget/AnalogClock.html""><code>AnalogClock</code> View</a> and the <a href=""http://developer.android.com/intl/fr/reference/android/widget/DigitalClock.html""><code>DigitalClock</code> View</a>.</p>

<p>For example, the following layout:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;LinearLayout
    xmlns:android=""http://schemas.android.com/apk/res/android""
    android:layout_width=""fill_parent""
    android:layout_height=""fill_parent"" 
    android:orientation=""vertical""&gt;

    &lt;AnalogClock
        android:layout_width=""fill_parent"" 
        android:layout_height=""wrap_content""/&gt;

    &lt;DigitalClock 
        android:layout_width=""fill_parent"" 
        android:layout_height=""wrap_content"" 
        android:gravity=""center"" 
        android:textSize=""20sp""/&gt;
&lt;/LinearLayout&gt;
</code></pre>

<p>Looks like this:</p>

<p><img src=""http://content.screencast.com/users/davweb/folders/Snagit/media/5d8976bd-4833-4a3f-a3a5-74cbed922891/02.16.2010-09.09.17.png"" alt=""screenshot""></p>
"
"2317428","2318356","233","<p>Here is an example code.
Put this into your activity class:</p>

<pre><code>  /* put this into your activity class */
  private SensorManager mSensorManager;
  private float mAccel; // acceleration apart from gravity
  private float mAccelCurrent; // current acceleration including gravity
  private float mAccelLast; // last acceleration including gravity

  private final SensorEventListener mSensorListener = new SensorEventListener() {

    public void onSensorChanged(SensorEvent se) {
      float x = se.values[0];
      float y = se.values[1];
      float z = se.values[2];
      mAccelLast = mAccelCurrent;
      mAccelCurrent = (float) Math.sqrt((double) (x*x + y*y + z*z));
      float delta = mAccelCurrent - mAccelLast;
      mAccel = mAccel * 0.9f + delta; // perform low-cut filter
    }

    public void onAccuracyChanged(Sensor sensor, int accuracy) {
    }
  };

  @Override
  protected void onResume() {
    super.onResume();
    mSensorManager.registerListener(mSensorListener, mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER), SensorManager.SENSOR_DELAY_NORMAL);
  }

  @Override
  protected void onPause() {
    mSensorManager.unregisterListener(mSensorListener);
    super.onPause();
  }
</code></pre>

<p>And add this to your onCreate method:</p>

<pre><code>    /* do this in onCreate */
    mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
    mSensorManager.registerListener(mSensorListener, mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER), SensorManager.SENSOR_DELAY_NORMAL);
    mAccel = 0.00f;
    mAccelCurrent = SensorManager.GRAVITY_EARTH;
    mAccelLast = SensorManager.GRAVITY_EARTH;
</code></pre>

<p>You can then ask ""mAccel"" wherever you want in your application for the current acceleration, independent from the axis and cleaned from static acceleration such as gravity.
It will be approx. 0 if there is no movement, and, lets say >2 if the device is shaked.</p>

<p>Based on the comments - to test this:</p>

<pre><code>if (mAccel &gt; 12) {
    Toast toast = Toast.makeText(getApplicationContext(), ""Device has shaken."", Toast.LENGTH_LONG);
    toast.show();
}
</code></pre>

<p>Notes:</p>

<p>The accelometer should be deactivated <em>onPause</em> and activated <em>onResume</em> to save resources (CPU, Battery).
The code assumes we are on planet Earth ;-) and initializes the acceleration to earth gravity. Otherwise you would get a strong ""shake"" when the application starts and ""hits"" the ground from free-fall. However, the code gets used to the gravitation due to the low-cut filter and would work also on other planets or in free space, once it is initialized.
(you never know how long your application will be in use...;-)</p>
"
"2322234","2322243","13","<pre><code>String deviceId = Settings.System.getString(getContentResolver(),
                                Settings.System.ANDROID_ID);
</code></pre>

<p>Although, it is not guaranteed that the Android ID will be an unique identifier.</p>
"
"2322234","2322494","80","<pre><code>TelephonyManager tManager = (TelephonyManager)myActivity.getSystemService(Context.TELEPHONY_SERVICE);
String uid = tManager.getDeviceId();
</code></pre>

<p>getSystemService is a method from the Activity class.  getDeviceID() will return the MDN or MEID of the device depending on which radio the phone uses (GSM or CDMA).  </p>

<p>Each device MUST return a unique value here (assuming it's a phone).  This should work for any Android device with a sim slot or CDMA radio.  You're on your own with that Android powered microwave ;-)</p>
"
"2403632","2403977","5","<p>Take a look at <a href=""http://groups.google.com/group/android-developers/browse_frm/thread/17210d784766602d/d430c900a9c4019c?"" rel=""nofollow"">this</a> discussion which handles manually hiding and showing the IME. However, my feeling is that if a focused <code>EditText</code> is not bringing the IME up it is because you are calling <code>AlertDialog.show()</code> in your <code>OnCreate()</code> or some other method which is evoked before the screen is actually presented. Moving it to <code>OnPostResume()</code> should fix it in that case I believe.</p>
"
"2403632","2418314","169","<p>You can create a focus listener on the <code>EditText</code> on the <code>AlertDialog</code>, then get the <code>AlertDialog</code>'s <code>Window</code>. From there you can make the soft keyboard show by calling <code>setSoftInputMode</code>.</p>

<pre><code>final AlertDialog dialog = ...;

editText.setOnFocusChangeListener(new View.OnFocusChangeListener() {
    @Override
    public void onFocusChange(View v, boolean hasFocus) {
        if (hasFocus) {
            dialog.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);
        }
    }
});
</code></pre>
"
"2459916","2464130","7","<p>You should extend <code>ImageView</code> and draw your own rounded rectangle. </p>

<p>If you want a frame around the image you could also superimpose the rounded frame on top of the image view in the layout.</p>

<p>[edit]Superimpose the frame on to op the original image, by using a <code>FrameLayout</code> for example. The first element of the <code>FrameLayout</code> will be the image you want to diplay rounded. Then add another <code>ImageView</code> with the frame. The second <code>ImageView</code> will be displayed on top of the original <code>ImageView</code> and thus Android will draw it's contents above the orignal <code>ImageView</code>.</p>
"
"2471935","2472175","123","<p>You'll have to download the image firstly </p>

<pre><code>public static Bitmap loadBitmap(String url) {
    Bitmap bitmap = null;
    InputStream in = null;
    BufferedOutputStream out = null;

    try {
        in = new BufferedInputStream(new URL(url).openStream(), IO_BUFFER_SIZE);

        final ByteArrayOutputStream dataStream = new ByteArrayOutputStream();
        out = new BufferedOutputStream(dataStream, IO_BUFFER_SIZE);
        copy(in, out);
        out.flush();

        final byte[] data = dataStream.toByteArray();
        BitmapFactory.Options options = new BitmapFactory.Options();
        //options.inSampleSize = 1;

        bitmap = BitmapFactory.decodeByteArray(data, 0, data.length,options);
    } catch (IOException e) {
        Log.e(TAG, ""Could not load Bitmap from: "" + url);
    } finally {
        closeStream(in);
        closeStream(out);
    }

    return bitmap;
}
</code></pre>

<p>Then use the Imageview.setImageBitmap to set  bitmap into the ImageView</p>
"
"2591036","2591311","641","<p>Do this in your <code>onCreate()</code> method.</p>

<pre><code>    //Remove title bar
    this.requestWindowFeature(Window.FEATURE_NO_TITLE);

    //Remove notification bar
    this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

   //set content view AFTER ABOVE sequence (to avoid crash)
    this.setContentView(R.layout.your_layout_name_here); 
</code></pre>

<p><code>this</code> refers to the <code>Activity</code>.</p>
"
"2591036","2627952","243","<p>I now did the following. </p>

<p>I declared a style inheriting everything from my general style and then disabling the titleBar.</p>

<pre><code>&lt;style name=""generalnotitle"" parent=""general""&gt;
    &lt;item name=""android:windowNoTitle""&gt;true&lt;/item&gt;
&lt;/style&gt;
</code></pre>

<p>Now I can set this style to every Activity in which I want to hide the title bar overwriting the application wide style and inheriting all the other style informations, therefor no duplication in the style code.</p>
"
"2169649","2636538","216","<p>This is a complete solution. I've just updated this example code with the information provided in the answer below by @mad. Also check the solution below from @Khobaib explaining how to deal with picasa images.</p>

<h1>Single Picture Selection</h1>

<p>With support for images from file explorers thanks to user mad.</p>

<pre><code>public class BrowsePictureActivity extends Activity {

    // this is the action code we use in our intent, 
    // this way we know we're looking at the response from our own action
    private static final int SELECT_PICTURE = 1;

    private String selectedImagePath;

    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        ((Button) findViewById(R.id.Button01))
                .setOnClickListener(new OnClickListener() {

                    public void onClick(View arg0) {

                        // in onCreate or any event where your want the user to
                        // select a file
                        Intent intent = new Intent();
                        intent.setType(""image/*"");
                        intent.setAction(Intent.ACTION_GET_CONTENT);
                        startActivityForResult(Intent.createChooser(intent,
                                ""Select Picture""), SELECT_PICTURE);
                    }
                });
    }

    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (resultCode == RESULT_OK) {
            if (requestCode == SELECT_PICTURE) {
                Uri selectedImageUri = data.getData();
                selectedImagePath = getPath(selectedImageUri);
            }
        }
    }

    /**
     * helper to retrieve the path of an image URI
     */
    public String getPath(Uri uri) {
            // just some safety built in 
            if( uri == null ) {
                // TODO perform some logging or show user feedback
                return null;
            }
            // try to retrieve the image from the media store first
            // this will only work for images selected from gallery
            String[] projection = { MediaStore.Images.Media.DATA };
            Cursor cursor = managedQuery(uri, projection, null, null, null);
            if( cursor != null ){
                int column_index = cursor
                .getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
                cursor.moveToFirst();
                return cursor.getString(column_index);
            }
            // this is our fallback here
            return uri.getPath();
    }

}
</code></pre>

<h1>Selecting Multiple Pictures</h1>

<p>Since someone requested that information in a comment and it's better to have information gathered.</p>

<p>Set an extra parameter <code>EXTRA_ALLOW_MULTIPLE</code> on the intent:</p>

<pre><code>intent.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true);
</code></pre>

<p>And in the Result handling check for that parameter:</p>

<pre><code>if (Intent.ACTION_SEND_MULTIPLE.equals(action))
        &amp;&amp; Intent.hasExtra(Intent.EXTRA_STREAM)) {
    // retrieve a collection of selected images
    ArrayList&lt;Parcelable&gt; list = intent.getParcelableArrayListExtra(Intent.EXTRA_STREAM);
    // iterate over these images
    for (Parcelable parcel : list) {
       Uri uri = (Uri) parcel;
       // handle the images one by one here
   }
} 
</code></pre>

<p>Note that this is only supported by API level 18+.</p>
"
"2644134","2644187","59","<p>In your code add this line</p>

<pre><code>requestWindowFeature(Window.FEATURE_NO_TITLE);  
</code></pre>

<p>Or in XML use a theme</p>

<pre><code>android:theme=""@android:style/Theme.NoTitleBar""
</code></pre>

<p>XML would be a better implementation as with the code version the title bar gets created and then removed which is a waste of resource</p>

<blockquote>
  <p>Ok good try but it is not working. I
  get:
  android.view.WindowManager$BadTokenException:
  Unable to add window -- token null is
  not for an application if I want to
  shwo the dialog.</p>
</blockquote>

<p>Change the alert dialog type to system dialog ( e.g., TYPE_SYSTEM_OVERLAY ) and see if this resolves your issue</p>
"
"2644134","2644266","44","<p>You need to use an <code>AlertDialog</code>. There's a good explanation on the Android Developer's site about <a href=""http://developer.android.com/guide/topics/ui/dialogs.html#CustomDialog"">custom dialogs</a>.</p>

<p>In very short summary, you do this with code like copied below from the official website. That takes a custom layot file, inflates it, gives it some basic text and icon, then creates it. You'd show it then with <code>alertDialog.show()</code>.</p>

<pre><code>AlertDialog.Builder builder;
AlertDialog alertDialog;

Context mContext = getApplicationContext();
LayoutInflater inflater = (LayoutInflater)
        mContext.getSystemService(LAYOUT_INFLATER_SERVICE);
View layout = inflater.inflate(R.layout.custom_dialog,
        (ViewGroup) findViewById(R.id.layout_root));

TextView text = (TextView) layout.findViewById(R.id.text);
text.setText(""Hello, this is a custom dialog!"");
ImageView image = (ImageView) layout.findViewById(R.id.image);
image.setImageResource(R.drawable.android);

builder = new AlertDialog.Builder(mContext);
builder.setView(layout);
alertDialog = builder.create();
</code></pre>

<hr>

<p>Edit in response to shown code:</p>

<p>I assume that TextView with the id <code>nr</code> is in the View you are inflating with <code>View view = inflater....</code>. If so, then you need to change just one bit: instead of <code>dialog.findView...</code> make it <code>view.findView...</code>. Then once you've done that, remember to use dialog.show(), or even builder.show() without bothering to do builder.create().</p>
"
"2695746","2696617","129","<p>Following is the code to get the list of activities/applications installed on Android :</p>

<pre><code>final Intent mainIntent = new Intent(Intent.ACTION_MAIN, null);
mainIntent.addCategory(Intent.CATEGORY_LAUNCHER);
final List pkgAppsList = context.getPackageManager().queryIntentActivities( mainIntent, 0);</code></pre>

<p>You will get all the necessary data in the ResolveInfo to start a application. You can check ResolveInfo javadoc <a href=""http://developer.android.com/reference/android/content/pm/ResolveInfo.html"">here</a>.</p>

<p>HTH !</p>
"
"2736389","2736612","251","<p>One option could be letting your custom class implement <code>Serializable</code> interface and then you can pass object instances in intent extra using <code>putExtra(Serializable..)</code> variant of the <code>Intent#putExtra()</code> method.</p>

<p>PSEUDO code:  </p>

<pre><code>//to pass :
   intent.putExtra(""MyClass"", obj);  

// to retrieve object in second Activity
getIntent().getSerializableExtra(""MyClass"");
</code></pre>
"
"2736389","2736843","26","<p>You could also write the object's data into temporary Strings and ints, and pass them to the activity. Of course that way, you get the data transported, but not the object itself. But if you just want to display them, and not use the object in another method or something like that, it should be enough. I did it the same way to just display data from one object in another activity.</p>

<pre><code>String fName_temp   = yourObject.getFname();
String lName_temp   = yourObject.getLname();
String age_temp     = yourObject.getAge();
String address_temp = yourObject.getAddress();

Intent i = new Intent(this, ToClass.class);
    i.putExtra(""fname"", fName_temp);
    i.putExtra(""lname"", lName_temp);
    i.putExtra(""age"", age_temp);
    i.putExtra(""address"", address_temp);
startActivity(i);   
</code></pre>

<p>You could also pass them in directly instead of the temp ivars, but this way it's clearer, in my opinion. Additionally, you can set the temp ivars to null so that they get cleaned by the GarbageCollector sooner.</p>

<p>good luck!</p>

<p>On a side note: override toString() instead of writing your own print method.</p>

<p><strong>edit:</strong></p>

<p>As mentioned in the comments below, this is how you get your data back in other activity:</p>

<pre><code>String fName = getIntent().getExtras().getInt(""fname"");
</code></pre>
"
"2780102","2780475","97","<p>Firstly, the concept of ""application"" in Android is slightly an extended one.</p>

<p>An application - technically a process - can have multiple activities, services, content providers and/or broadcast listeners. If at least one of them is running, the application is up and running (the process).</p>

<p>So, what you have to identify is how do you want to ""start the application"".</p>

<p>Ok... here's what you can try out:</p>

<ol>
<li>Create an intent with <code>action=MAIN</code> and <code>category=LAUNCHER</code></li>
<li>Get the <code>PackageManager</code> from the current context using <code>context.getPackageManager</code></li>
<li><code>packageManager.queryIntentActivity(&amp;lt;intent&amp;gt;, 0)</code> where intent has <code>category=LAUNCHER</code>, <code>action=MAIN</code> or <code>packageManager.resolveActivity(&amp;lt;intent&amp;gt;, 0)</code> to get the first activity with main/launcher</li>
<li>Get the<code>ActivityInfo</code> you're interested in</li>
<li>From the <code>ActivityInfo</code>, get the <code>packageName</code> and <code>name</code></li>
<li>Finally, create another intent with with <code>category=LAUNCHER</code>, <code>action=MAIN</code>, <code>componentName = new ComponentName(packageName, name)</code> and <code>setFlags(Intent.FLAG_ACTIVITY_NEW_TASK)</code></li>
<li>Finally, <code>context.startActivity(newIntent)</code></li>
</ol>
"
"2795833","2799001","299","<p>The current configuration, as used to determine which resources to retrieve etc, as available from the Resources' Configuration object as:</p>

<pre><code>getResources().getConfiguration().orientation
</code></pre>

<p><a href=""http://developer.android.com/reference/android/content/res/Configuration.html#orientation"">http://developer.android.com/reference/android/content/res/Configuration.html#orientation</a></p>
"
"3035692","3035869","417","<p>This piece of code helps.</p>

<pre><code>Bitmap icon = BitmapFactory.decodeResource(context.getResources(),
                                           R.drawable.icon_resource);
</code></pre>

<p><strong>Edit:</strong> Here a version where the image gets downloaded.</p>

<pre><code>String name = c.getString(str_url);
URL url_value = new URL(name);
ImageView profile = (ImageView)v.findViewById(R.id.vdo_icon);
if (profile != null) {
    Bitmap mIcon1 =
        BitmapFactory.decodeStream(url_value.openConnection().getInputStream());
    profile.setImageBitmap(mIcon1);
}
</code></pre>
"
"3035692","3036187","139","<p>This converts a BitmapDrawable to a Bitmap.</p>

<pre><code>Drawable d = ImagesArrayList.get(0);  
Bitmap bitmap = ((BitmapDrawable)d).getBitmap();
</code></pre>
"
"2644134","3053781","33","<p>use like this</p>

<pre><code>Dialog dialog = new Dialog(this);
dialog.requestWindowFeature(Window.FEATURE_NO_TITLE); 
</code></pre>

<p>this will remove any title bar from dialog window.</p>

<p>thanks,
-alok</p>
"
"2139134","3108968","3","<p>The simplest would be to just use the following where the item is a string:</p>

<pre><code>intent.putextra(""selected_item"",item)
</code></pre>

<p>For receiving:</p>

<pre><code>String name = data.getStringExtra(""selected_item"");
</code></pre>
"
"3145089","3145142","5","<p>You could always just use <a href=""http://developer.android.com/reference/android/location/LocationManager.html#getLastKnownLocation%28java.lang.String%29"">LocationManager.getLastKnownLocation()</a> but like it says it could be out of date.</p>

<p>And a simple way to get a general location could be registering for the network (usually pretty fast).</p>

<pre><code>LocationManager locationManager = (LocationManager) this.getSystemService(Context.LOCATION_SERVICE);
locationManager.requestLocationUpdates(
     LocationManager.NETWORK_PROVIDER, 1000, 1000, this);
</code></pre>

<p>and then doing</p>

<pre><code>locationManager.removeUpdates(this);
</code></pre>

<p>in the onLocationChanged() method of the listener.</p>
"
"3145089","3145655","596","<p>Here's what I do:</p>

<ol>
<li>First of all I check what providers are enabled. Some may be disabled on the device, some may be disabled in application manifest.</li>
<li>If any provider is available I start location listeners and timeout timer. It's 20 seconds in my example, may not be enough for GPS so you can enlarge it.</li>
<li>If I get update from location listener I use the provided value. I stop listeners and timer.</li>
<li>If I don't get any updates and timer elapses I have to use last known values.</li>
<li>I grab last known values from available providers and choose the most recent of them.</li>
</ol>

<p>Here's how I use my class:</p>

<pre><code>LocationResult locationResult = new LocationResult(){
    @Override
    public void gotLocation(Location location){
        //Got the location!
    }
};
MyLocation myLocation = new MyLocation();
myLocation.getLocation(this, locationResult);
</code></pre>

<p>And here's MyLocation class:</p>

<pre><code>import java.util.Timer;
import java.util.TimerTask;
import android.content.Context;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;

public class MyLocation {
    Timer timer1;
    LocationManager lm;
    LocationResult locationResult;
    boolean gps_enabled=false;
    boolean network_enabled=false;

    public boolean getLocation(Context context, LocationResult result)
    {
        //I use LocationResult callback class to pass location value from MyLocation to user code.
        locationResult=result;
        if(lm==null)
            lm = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);

        //exceptions will be thrown if provider is not permitted.
        try{gps_enabled=lm.isProviderEnabled(LocationManager.GPS_PROVIDER);}catch(Exception ex){}
        try{network_enabled=lm.isProviderEnabled(LocationManager.NETWORK_PROVIDER);}catch(Exception ex){}

        //don't start listeners if no provider is enabled
        if(!gps_enabled &amp;&amp; !network_enabled)
            return false;

        if(gps_enabled)
            lm.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, locationListenerGps);
        if(network_enabled)
            lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, locationListenerNetwork);
        timer1=new Timer();
        timer1.schedule(new GetLastLocation(), 20000);
        return true;
    }

    LocationListener locationListenerGps = new LocationListener() {
        public void onLocationChanged(Location location) {
            timer1.cancel();
            locationResult.gotLocation(location);
            lm.removeUpdates(this);
            lm.removeUpdates(locationListenerNetwork);
        }
        public void onProviderDisabled(String provider) {}
        public void onProviderEnabled(String provider) {}
        public void onStatusChanged(String provider, int status, Bundle extras) {}
    };

    LocationListener locationListenerNetwork = new LocationListener() {
        public void onLocationChanged(Location location) {
            timer1.cancel();
            locationResult.gotLocation(location);
            lm.removeUpdates(this);
            lm.removeUpdates(locationListenerGps);
        }
        public void onProviderDisabled(String provider) {}
        public void onProviderEnabled(String provider) {}
        public void onStatusChanged(String provider, int status, Bundle extras) {}
    };

    class GetLastLocation extends TimerTask {
        @Override
        public void run() {
             lm.removeUpdates(locationListenerGps);
             lm.removeUpdates(locationListenerNetwork);

             Location net_loc=null, gps_loc=null;
             if(gps_enabled)
                 gps_loc=lm.getLastKnownLocation(LocationManager.GPS_PROVIDER);
             if(network_enabled)
                 net_loc=lm.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);

             //if there are both values use the latest one
             if(gps_loc!=null &amp;&amp; net_loc!=null){
                 if(gps_loc.getTime()&gt;net_loc.getTime())
                     locationResult.gotLocation(gps_loc);
                 else
                     locationResult.gotLocation(net_loc);
                 return;
             }

             if(gps_loc!=null){
                 locationResult.gotLocation(gps_loc);
                 return;
             }
             if(net_loc!=null){
                 locationResult.gotLocation(net_loc);
                 return;
             }
             locationResult.gotLocation(null);
        }
    }

    public static abstract class LocationResult{
        public abstract void gotLocation(Location location);
    }
}
</code></pre>

<p>Somebody may also want to modify my logic. For example if you get update from Network provider don't stop listeners but continue waiting. GPS gives more accurate data so it's worth waiting for it. If timer elapses and you've got update from Network but not from GPS then you can use value provided from Network.</p>

<p>One more approach is to use LocationClient <a href=""http://developer.android.com/training/location/retrieve-current.html"">http://developer.android.com/training/location/retrieve-current.html</a>. But it requires Google Play Services apk to be installed on user device.</p>
"
"3166501","3166551","5","<p>This should work.</p>

<pre><code>DisplayMetrics dm = new DisplayMetrics();
getWindowManager().getDefaultDisplay().getMetrics(dm);
int width = dm.widthPixels; //320
int height = dm.heightPixels; //480
</code></pre>
"
"3166501","3166582","249","<p>You can get info on the display from the <a href=""http://developer.android.com/reference/android/util/DisplayMetrics.html"">DisplayMetrics</a> struct:</p>

<pre><code>DisplayMetrics metrics = getResources().getDisplayMetrics();
</code></pre>

<p>Though Android doesn't use a direct pixel mapping, it uses a handful of quantized Density Independent Pixel values then scales to the actual screen size. So the <code>metrics.densityDpi</code> property will be one of the <code>DENSITY_???</code> constants (120, 160, 213, 240, 320, 480 or 640 dpi).</p>

<p>If you need the <em>actual</em> lcd pixel density (perhaps for an OpenGL app) you can get it from the <code>metrics.xdpi</code> and <code>metrics.ydpi</code> properties for horizontal and vertical density respectively.</p>

<p>If you are targeting API Levels earlier than 4. The <code>metrics.density</code> property is a floating point scaling factor from the reference density (160dpi). The same value now provided by <code>metrics.densityDpi</code> can be calculated</p>

<pre><code>int densityDpi = (int)(metrics.density * 160f);
</code></pre>
"
"3166501","3166584","32","<p>To get dpi:</p>

<pre><code>DisplayMetrics dm = new DisplayMetrics();
getWindowManager().getDefaultDisplay().getMetrics(dm);

// will either be DENSITY_LOW, DENSITY_MEDIUM or DENSITY_HIGH
int dpiClassification = dm.densityDpi;

// these will return the actual dpi horizontally and vertically
float xDpi = dm.xdpi;
float yDpi = dm.ydpi;
</code></pre>
"
"3226495","3226743","174","<p>Android's design does not favor exiting an application by choice, but rather manages it by the OS. You can bring up the Home application by its corresponding Intent:</p>

<pre><code>Intent intent = new Intent(Intent.ACTION_MAIN);
intent.addCategory(Intent.CATEGORY_HOME);
intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
startActivity(intent);
</code></pre>
"
"3226495","3227153","9","<p>If you want to end an activity you can simply call <code>finish()</code>.
It is however bad practice to have an exit button on the screen.</p>
"
"2459916","3292810","308","<p>This is pretty late in response, but for anyone else that is looking for this, you can do the following code to manually round the corners of your images.</p>

<p><a href=""http://www.ruibm.com/?p=184"">http://www.ruibm.com/?p=184</a></p>

<p>This isn't my code, but I've used it and it's works wonderfully. I used it as a helper within an ImageHelper class and extended it just a bit to pass in the amount of feathering I need for a given image.</p>

<p>Final code looks like this:</p>

<pre><code>package com.company.app.utils;

import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.PorterDuffXfermode;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.Bitmap.Config;
import android.graphics.PorterDuff.Mode;

public class ImageHelper {
    public static Bitmap getRoundedCornerBitmap(Bitmap bitmap, int pixels) {
        Bitmap output = Bitmap.createBitmap(bitmap.getWidth(), bitmap
                .getHeight(), Config.ARGB_8888);
        Canvas canvas = new Canvas(output);

        final int color = 0xff424242;
        final Paint paint = new Paint();
        final Rect rect = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());
        final RectF rectF = new RectF(rect);
        final float roundPx = pixels;

        paint.setAntiAlias(true);
        canvas.drawARGB(0, 0, 0, 0);
        paint.setColor(color);
        canvas.drawRoundRect(rectF, roundPx, roundPx, paint);

        paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));
        canvas.drawBitmap(bitmap, rect, rect, paint);

        return output;
    }
}
</code></pre>

<p>Hope this helps someone!</p>
"
"2271131","3298318","35","<pre><code>public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);

    setContentView(R.layout.main);
    Thread myThread = null;

    Runnable runnable = new CountDownRunner();
    myThread= new Thread(runnable);   
    myThread.start();

}

public void doWork() {
    runOnUiThread(new Runnable() {
        public void run() {
            try{
                TextView txtCurrentTime= (TextView)findViewById(R.id.lbltime);
                    Date dt = new Date();
                    int hours = dt.getHours();
                    int minutes = dt.getMinutes();
                    int seconds = dt.getSeconds();
                    String curTime = hours + "":"" + minutes + "":"" + seconds;
                    txtCurrentTime.setText(curTime);
            }catch (Exception e) {}
        }
    });
}


class CountDownRunner implements Runnable{
    // @Override
    public void run() {
            while(!Thread.currentThread().isInterrupted()){
                try {
                doWork();
                    Thread.sleep(1000);
                } catch (InterruptedException e) {
                        Thread.currentThread().interrupt();
                }catch(Exception e){
                }
            }
    }
}
</code></pre>
"
"3331527","3331673","92","<p><strong>No.</strong>  I'd love for someone to correct me, but I accepted the load/resize approach you tried as a compromise.</p>

<p>Here are the steps for anyone browsing:</p>

<ol>
<li>Calculate the maximum possible <code>inSampleSize</code> that still yields an image larger than your target.</li>
<li>Load the image using <code>BitmapFactory.decodeFile(file, options)</code>, passing inSampleSize as an option.</li>
<li>Resize to the desired dimensions using <code>Bitmap.createScaledBitmap()</code>.</li>
</ol>
"
"3331527","3334865","5","<p>When i have large bitmaps and i want to decode them resized i use the following</p>

<pre><code>BitmapFactory.Options options = new BitmapFactory.Options();
InputStream is = null;
is = new FileInputStream(path_to_file);
BitmapFactory.decodeStream(is,null,options);
is.close();
is = new FileInputStream(path_to_file);
// here w and h are the desired width and height
options.inSampleSize = Math.max(options.outWidth/w, options.outHeight/h);
// bitmap is the resized bitmap
Bitmap bitmap = BitmapFactory.decodeStream(is,null,options);
</code></pre>
"
"3349121","3349461","1","<p>If you subclass InputFilter you can create your own InputFilter that would filter out any non-alpha-numeric characters.  </p>

<p>The InputFilter Interface has one method, <code>filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend)</code>, and it provides you with all the information you need to know about which characters were entered into the EditText it is assigned to.</p>

<p>Once you have created your own InputFilter, you can assign it to the EditText by calling setFilters(...).</p>

<p><a href=""http://developer.android.com/reference/android/text/InputFilter.html#filter(java.lang.CharSequence"" rel=""nofollow"">http://developer.android.com/reference/android/text/InputFilter.html#filter(java.lang.CharSequence</a>, int, int, android.text.Spanned, int, int)</p>
"
"2617266","3378422","20","<p>I've written a class that extends TextView and does this. It just uses measureText as you suggest. Basically it has a maximum text size and minimum text size (which can be changed) and it just runs through the sizes between them in decrements of 1 until it finds the biggest one that will fit. Not particularly elegant, but I don't know of any other way.</p>

<p>Here is the code:</p>

<pre><code>import android.content.Context;
import android.graphics.Paint;
import android.util.AttributeSet;
import android.widget.TextView;

public class FontFitTextView extends TextView {

    public FontFitTextView(Context context) {
        super(context);
        initialise();
    }

    public FontFitTextView(Context context, AttributeSet attrs) {
        super(context, attrs);
        initialise();
    }

    private void initialise() {
        testPaint = new Paint();
        testPaint.set(this.getPaint());
        //max size defaults to the intially specified text size unless it is too small
        maxTextSize = this.getTextSize();
        if (maxTextSize &lt; 11) {
            maxTextSize = 20;
        }
        minTextSize = 10;
    }

    /* Re size the font so the specified text fits in the text box
     * assuming the text box is the specified width.
     */
    private void refitText(String text, int textWidth) { 
        if (textWidth &gt; 0) {
            int availableWidth = textWidth - this.getPaddingLeft() - this.getPaddingRight();
            float trySize = maxTextSize;

            testPaint.setTextSize(trySize);
            while ((trySize &gt; minTextSize) &amp;&amp; (testPaint.measureText(text) &gt; availableWidth)) {
                trySize -= 1;
                if (trySize &lt;= minTextSize) {
                    trySize = minTextSize;
                    break;
                }
                testPaint.setTextSize(trySize);
            }

            this.setTextSize(trySize);
        }
    }

    @Override
    protected void onTextChanged(final CharSequence text, final int start, final int before, final int after) {
        refitText(text.toString(), this.getWidth());
    }

    @Override
    protected void onSizeChanged (int w, int h, int oldw, int oldh) {
        if (w != oldw) {
            refitText(this.getText().toString(), w);
        }
    }

    //Getters and Setters
    public float getMinTextSize() {
        return minTextSize;
    }

    public void setMinTextSize(int minTextSize) {
        this.minTextSize = minTextSize;
    }

    public float getMaxTextSize() {
        return maxTextSize;
    }

    public void setMaxTextSize(int minTextSize) {
        this.maxTextSize = minTextSize;
    }

    //Attributes
    private Paint testPaint;
    private float minTextSize;
    private float maxTextSize;

}
</code></pre>
"
"2644134","3394281","35","<p>you can remove title by</p>

<pre><code>dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
</code></pre>

<p>where dialog is name of my dialog .</p>
"
"2644134","3407871","467","<p>FEATURE_NO_TITLE works when creating a dialog from scratch, as in:</p>

<pre><code>Dialog dialog = new Dialog(context);
dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
</code></pre>

<p>But it doesn't work when creating an AlertDialog (or using the Builder), because it already disables the title and use a custom one internally.</p>

<p>I have looked at the SDK sources, and I think that it can't be worked around. So to remove the top spacing, the only solution is to create a custom dialog from scratch IMO, by using the Dialog class directly.</p>

<p>Also, one can do that with a style, eg in styles.xml:</p>

<pre><code>&lt;style name=""FullHeightDialog"" parent=""android:style/Theme.Dialog""&gt;
   &lt;item name=""android:windowNoTitle""&gt;true&lt;/item&gt;
&lt;/style&gt;
</code></pre>

<p>And then:</p>

<pre><code>Dialog dialog = new Dialog(context, R.style.FullHeightDialog);
</code></pre>
"
"3495890","3495908","151","<p>Here's my solution.  I'm fairly new to the Android platform, and I'm sure this is a bit hackish, especially in the part about calling .measure directly, and setting the LayoutParams .height property directly, but it works.</p>

<p>All you have to do is call Utility.setListViewHeightBasedOnChildren(yourListView) and it will be resized to exactly accommodate the height of its items.</p>

<pre><code>    public class Utility {
        public static void setListViewHeightBasedOnChildren(ListView listView) {
              ListAdapter listAdapter = listView.getAdapter();
            if (listAdapter == null) {
            // pre-condition
                  return;
            }

            int totalHeight = listView.getPaddingTop() + listView.getPaddingBottom();
            for (int i = 0; i &lt; listAdapter.getCount(); i++) {
                 View listItem = listAdapter.getView(i, null, listView);
                 if (listItem instanceof ViewGroup) {
                    listItem.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));
                 }
                 listItem.measure(0, 0);
                 totalHeight += listItem.getMeasuredHeight();
            }

            ViewGroup.LayoutParams params = listView.getLayoutParams();
            params.height = totalHeight + (listView.getDividerHeight() * (listAdapter.getCount() - 1));
                      listView.setLayoutParams(params);
        }
     }
</code></pre>
"
"3611457","3611554","6","<p>I found the answer. To do this, in an Activity you can call <code>setRequestedOrientation(int)</code> with one of the values specified here: <a href=""http://developer.android.com/reference/android/R.attr.html#screenOrientation"">http://developer.android.com/reference/android/R.attr.html#screenOrientation</a></p>

<p>Before I kicked off my thread I called <code>setRequestedOrientation(OFF)</code> (OFF = nosensor) and when the thread was done I called <code>setRequestedOrientation(ON)</code> (ON = sensor). Works like a charm.</p>
"
"3611457","3614089","75","<p>As explained by Chris in his <a href=""http://stackoverflow.com/questions/3611457/android-temporarily-disable-orientation-changes-in-an-activity/3611554#3611554"">self-answer</a>, calling</p>

<pre><code>setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_NOSENSOR);
</code></pre>

<p>and then</p>

<pre><code>setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_SENSOR);
</code></pre>

<p>really works like charm... on real devices !</p>

<p>Don't think that it's broken when testing on the emulator, the ctrl+F11 shortcut ALWAYS change the screen orientation, without emulating sensors moves.</p>

<p>EDIT: this was not the best possible answer. As explained in the comments, there are issues with this method. <a href=""http://stackoverflow.com/questions/3821423/background-task-progress-dialog-orientation-change-is-there-any-100-working/3821998#3821998"">The real answer is here</a>.</p>
"
"3624280","3624311","79","<p>To <strong>edit</strong> data from sharedpreference</p>

<pre><code> SharedPreferences.Editor editor = getPreferences(MODE_PRIVATE).edit();
 editor.putString(""text"", mSaved.getText().toString());
 editor.putInt(""selection-start"", mSaved.getSelectionStart());
 editor.putInt(""selection-end"", mSaved.getSelectionEnd());
 editor.apply();
</code></pre>

<p>To <strong>retrieve</strong> data from shared preference</p>

<pre><code>SharedPreferences prefs = getPreferences(MODE_PRIVATE); 
String restoredText = prefs.getString(""text"", null);
if (restoredText != null) 
{
  //mSaved.setText(restoredText, TextView.BufferType.EDITABLE);
  int selectionStart = prefs.getInt(""selection-start"", -1);
  int selectionEnd = prefs.getInt(""selection-end"", -1);
  /*if (selectionStart != -1 &amp;&amp; selectionEnd != -1)
  {
     mSaved.setSelection(selectionStart, selectionEnd);
  }*/
}
</code></pre>

<p>Edit-</p>

<p>I took this snippet from API Demo sample. It had an Edit Text box there... In this context it is not required.I am commenting the same</p>
"
"3624280","3624358","329","<p>To obtain shared preferences, use the following method
In your activity:</p>

<pre><code>SharedPreferences prefs = this.getSharedPreferences(
      ""com.example.app"", Context.MODE_PRIVATE);
</code></pre>

<p>To read preferences:</p>

<pre><code>String dateTimeKey = ""com.example.app.datetime"";

// use a default value using new Date()
long l = prefs.getLong(dateTimeKey, new Date().getTime()); 
</code></pre>

<p>To edit and save preferences</p>

<pre><code>Date dt = getSomeDate();
prefs.edit().putLong(dateTimeKey, dt.getTime()).apply();
</code></pre>

<p>The android sdk's sample directory contains an example of retrieving and storing shared preferences. Its located in the:</p>

<pre><code>&lt;android-sdk-home&gt;/samples/android-&lt;platformversion&gt;/ApiDemos directory
</code></pre>
"
"3331527","3647046","12","<p>Why not use the API?</p>

<pre><code>int h = 48; // height in pixels
int w = 48; // width in pixels    
Bitmap scaled = Bitmap.createScaledBitmap(largeBitmap, h, w, true);
</code></pre>
"
"2780102","3725602","79","<pre><code>    Intent intent = new Intent(""android.intent.action.MAIN"");
    intent.setComponent(ComponentName.unflattenFromString(""com.google.android.maps.mytracks/com.google.android.apps.mytracks.MyTracks""));
    intent.addCategory(""android.intent.category.LAUNCHER"");
    startActivity(intent);
</code></pre>

<p><strong>EDIT :</strong> </p>

<p>as suggested in comments, add one line before <code>startActivity(intent);</code></p>

<pre><code>intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
</code></pre>
"
"2591036","3752646","327","<p>You can modify your <code>AndroidManifest.xml</code>:</p>

<pre><code>&lt;activity android:name="".MainActivity""
          android:label=""@string/app_name""
          android:theme=""@android:style/Theme.Black.NoTitleBar.Fullscreen""&gt;
</code></pre>

<p>You can use this for each activity in your project.</p>
"
"2217753","3910673","28","<p>Romainguy has the correct answer, but it was a bit unclear to me so I'll explain exactly what needs to be done.  </p>

<p>You have to create a different state drawable for each color you want to use. </p>

<p>For example: <code>list_selector_read.xml</code> and <code>list_selector_unread.xml</code>. </p>

<p>All you need to do is set everything to transparent except the <code>android:state_window_focused=""false""</code> item.  </p>

<p>Then when you are drawing your list you call                <code>setBackgroundResource(R.drawable.list_selector_unread/read)</code> for each row.  </p>

<p>You don't set a listSelector on the ListView at all. That will maintain the default selector for your particular flavor of Android.</p>
"
"3916330","3916700","38","<p>You have to calculate the scale that you need to use manually, rather than setting to 30.</p>

<pre><code>private int getScale(){
    Display display = ((WindowManager) getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay(); 
    int width = display.getWidth(); 
    Double val = new Double(width)/new Double(PIC_WIDTH);
    val = val * 100d;
    return val.intValue();
}
</code></pre>

<p>Then use</p>

<pre><code>WebView web = new WebView(this);
web.setPadding(0, 0, 0, 0);
web.setInitialScale(getScale());
</code></pre>
"
"2217753","3929656","14","<p>Ok, I got it to work like this:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;selector xmlns:android=""http://schemas.android.com/apk/res/android""&gt;
    &lt;item android:state_pressed=""false"" android:drawable=""@color/BackgroundColor"" /&gt;
    &lt;item android:drawable=""@color/transparent"" /&gt;
&lt;/selector&gt;
</code></pre>

<p>YMMV!</p>
"
"3996938","3997654","0","<p>Isn't there a rather fundamental difference between <code>'selected'</code> and <code>'checked'</code>?</p>

<p>Suspect you want to <code>setItemChecked()</code> from an <code>OnItemSelectedListener</code>...</p>
"
"3996938","3998642","5","<p>I remember having an issue with this myself a while back. <a href=""http://stackoverflow.com/questions/3464636/returning-values-from-multiple-selection-listview/3473645"">Here</a> is my previous question, which isn't directly related to your issue, but contains some code that may help. What you might want to try is using <code>checkedPositions.valueAt(int index)</code> rather than <code>checkedPositions.get(int index)</code>. I think that may be what you're actually looking for.</p>
"
"3996938","4014580","4","<p>I still do not know why, but in my scenario, getCheckedItemPositions() returns false values for all items. I cannot see a way to use the methods on the ListView to get the boolean values out. The SparseBooleanArray object seems to have no real-world data in it. I suspect this may be because of some quirk of my implementation, perhaps that I've subclassed ArrayAdapter. It's frustrating, issues like this are a real time-drain.</p>

<p>Anyway, the solution I have used is to to attach a handler to each Checkbox individually as ListView rows are created. So from ListView.getView() I call this method:</p>

<pre><code>private void addClickHandlerToCheckBox(CheckBox checkbox)
{
    checkbox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
    public void onCheckedChanged(CompoundButton arg0, boolean arg1) {
        CheckBox checkbox = (CheckBox)arg0; 
        boolean isChecked = checkbox.isChecked();
        // Store the boolean value somewhere durable
    }
      }
);
</code></pre>
"
"2217753","4027964","6","<pre><code>mAgendaListView.setOnItemClickListener(new OnItemClickListener() {
public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {
//view.setBackgroundColor(Color.RED);

for(int i=0; i&lt;parent.getChildCount(); i++)
{
     if(i == position)
     {
               parent.getChildAt(i).setBackgroundColor(Color.BLUE);
     }
     else
     {
               parent.getChildAt(i).setBackgroundColor(Color.BLACK);
     }

 }
</code></pre>
"
"3647993","4105966","90","<p>So, as an example...</p>

<p>First you need to create an ExifInterface:</p>

<pre><code>ExifInterface exif = new ExifInterface(filename);
</code></pre>

<p>You can then grab the orientation of the image:</p>

<pre><code>orientation = exif.getAttributeInt(ExifInterface.TAG_ORIENTATION, 1);
</code></pre>

<p>Here's what the orientation values mean:
<a href=""http://sylvana.net/jpegcrop/exif_orientation.html"">http://sylvana.net/jpegcrop/exif_orientation.html</a></p>

<p>So, the most important values are 3, 6 and 8.
If the orientation is 6, for example, you can rotate the image like this:</p>

<pre><code>Matrix matrix = new Matrix();
matrix.postRotate(90);
rotatedBitmap = Bitmap.createBitmap(sourceBitmap, 0, 0, sourceBitmap.getWidth(), sourceBitmap.getHeight(), matrix, true);
</code></pre>

<p>That's just a quick example, though. I'm sure there are other ways of performing the actual rotation. But you will find those on StackOverflow as well.</p>
"
"3611457","4110994","22","<p>None of the other answers did the trick perfectly for me, but here's what I found that does.</p>

<p>Lock orientation to current...</p>

<pre><code>if(getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT) {
    setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
} else setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
</code></pre>

<p>When changing orientation should be allowed again, set back to default...</p>

<pre><code>setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED);
</code></pre>
"
"4165414","4165536","9","<p>Use <a href=""http://developer.android.com/reference/android/view/View.OnFocusChangeListener.html"">OnFocusChangeListener</a>.</p>

<p>For example:</p>

<pre><code>editText.setOnFocusChangeListener(new View.OnFocusChangeListener() {
    @Override
    public void onFocusChange(View v, boolean hasFocus) {
        if (!hasFocus) {
            hideKeyboard();
        }
    }
});
</code></pre>

<p><strong>Update</strong>: you also may override <code>onTouchEvent()</code> in your activity and check coordinates of the touch. If coordinates are outside of EditText, then hide the keyboard.</p>
"
"4165414","4165892","0","<p>Other idea is to override <code>onInterceptTouchEvent</code> method on the root view for your Activity. </p>

<p>The touch event goes from the front most view on the screen (where the touch event occurred) down the stack of views calling the <code>onTouch</code> method until any of the views return true, indicating that the touch event was consumed. As many of the view consumes the touch event by default (that is the case of <code>EditText</code> or <code>TextView</code>, for instance), the event does not get to the Activity's root View <code>onTouch</code> method.</p>

<p>But, before do this traversal, the touch event travels another path, going from the root view down the view tree until it gets to the front most view. This traversal is done by calling <code>onInterceptTouchEvent</code>. If the method returns true, it intercepts the event... nahhh, but that is a little bit trick, I don't think you want to do that nor to know the details. What you need to know is that you can override this method on the root view for your Activity, and put there the code to hide the keyboard when necessary.</p>
"
"4165414","4168116","15","<p>Well I manage to somewhat solve the problem, I overrode the dispatchTouchEvent on my activity, there I am using the following to hide the keyboard.</p>

<pre><code> /**
 * Called to process touch screen events. 
 */
@Override
public boolean dispatchTouchEvent(MotionEvent ev) {

    switch (ev.getAction()){
        case MotionEvent.ACTION_DOWN:
            touchDownTime = SystemClock.elapsedRealtime();
            break;

        case MotionEvent.ACTION_UP:
            //to avoid drag events
            if (SystemClock.elapsedRealtime() - touchDownTime &lt;= 150){  

                EditText[] textFields = this.getFields();
                if(textFields != null &amp;&amp; textFields.length &gt; 0){

                    boolean clickIsOutsideEditTexts = true;

                    for(EditText field : textFields){
                        if(isPointInsideView(ev.getRawX(), ev.getRawY(), field)){
                            clickIsOutsideEditTexts = false;
                            break;
                        }
                    }

                    if(clickIsOutsideEditTexts){
                        this.hideSoftKeyboard();
                    }               
                } else {
                    this.hideSoftKeyboard();
                }
            }
            break;
    }

    return super.dispatchTouchEvent(ev);
}
</code></pre>

<hr>

<p><strong>EDIT:</strong> The getFields() method is just a method that returns an array with the textfields in the view. To avoid creating this array on every touch, I created an static array called sFields, which is returned at the getFields() method. This array is initialized on the onStart() methods such as:</p>

<p><code>sFields = new EditText[] {mUserField, mPasswordField};</code></p>

<hr>

<p>It is not perfect, The drag event time is only based on heuristics so sometimes it doesnt hide when performing long clics, and I also finished by creating a method to get all the editTexts per view; else the keyboard would hide and show when clicking other EditText.</p>

<p>Still, cleaner and shorter solutions are welcome</p>
"
"3145089","4211547","4","<p>Actualy we can use the two providers both. And they just share a public listener:</p>

<pre><code>locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 10 * 1000, (float) 10.0, listener);
locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 90 * 1000, (float) 10.0, listener);
</code></pre>

<p>This is necessary because the OnLocationChanged() method always need to be called in time.</p>
"
"3916330","4241146","2","<pre><code>int PIC_WIDTH= webView.getRight()-webView.getLeft();
</code></pre>
"
"3145089","4341313","2","<p>To get and show the user's current location, you could also use <code>MyLocationOverlay</code>. Suppose you have a <code>mapView</code> field in your activity. All you would need to do to show the user location is the following:</p>

<pre><code>myLocationOverlay = new MyLocationOverlay(this, mapView);
myLocationOverlay.enableMyLocation();
mapView.getOverlays().add(myLocationOverlay);
</code></pre>

<p>This gets the current location from either the GPS or the network. If both fail, <code>enableMyLocation()</code> will return <code>false</code>.</p>

<p>As for the locations of things around the area, an <code>ItemizedOverlay</code> should do the trick.</p>

<p>I hope I haven't misunderstood your question. Good luck.</p>
"
"2471935","4358853","20","<p>You could also use this LoadingImageView view to load an image from a url:</p>

<p><a href=""http://blog.blundell-apps.com/imageview-with-loading-spinner/"">http://blog.blundell-apps.com/imageview-with-loading-spinner/</a></p>

<p>Once you have added the class file from that link you can instantiate a url image view:</p>

<p>in xml:</p>

<pre><code>&lt;com.blundell.tut.LoaderImageView
  android:id=""@+id/loaderImageView""
  android:layout_width=""wrap_content""
  android:layout_height=""wrap_content""
  image=""http://developer.android.com/images/dialog_buttons.png""
 /&gt;
</code></pre>

<p>In code:</p>

<pre><code>final LoaderImageView image = new LoaderImageView(this, ""http://developer.android.com/images/dialog_buttons.png"");
</code></pre>

<p>And update it using:</p>

<pre><code>image.setImageDrawable(""http://java.sogeti.nl/JavaBlog/wp-content/uploads/2009/04/android_icon_256.png"");
</code></pre>
"
"3349121","4401227","75","<p>found this on another forum.  works like a champ.</p>

<pre><code>InputFilter filter = new InputFilter() { 
        public CharSequence filter(CharSequence source, int start, int end, 
Spanned dest, int dstart, int dend) { 
                for (int i = start; i &lt; end; i++) { 
                        if (!Character.isLetterOrDigit(source.charAt(i))) { 
                                return """"; 
                        } 
                } 
                return null; 
        } 
}; 

edit.setFilters(new InputFilter[]{filter}); 
</code></pre>
"
"2617266","4412586","3","<p>Works with modification</p>

<p>You need to set the text view size like this because otherwise setTextSize assumes the value is in SP units:</p>

<pre><code>setTextSize(TypedValue.COMPLEX_UNIT_PX, trySize);
</code></pre>

<p>And you needed to explicitly add this code.</p>

<pre><code>@Override
protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
{
    super.onMeasure(widthMeasureSpec, heightMeasureSpec);
    int parentWidth = MeasureSpec.getSize(widthMeasureSpec);
    int parentHeight = MeasureSpec.getSize(heightMeasureSpec);
    refitText(this.getText().toString(), parentWidth);
}
</code></pre>
"
"2459916","4463262","5","<p><strong>The following creates a rounded rectangle layout object that draws a rounded rectangle around any child objects that are placed in it.  It also demonstrates how to create views and layouts programmatically without using the layout xml files.</strong></p>

<pre><code>package android.example;

import android.app.Activity;
import android.graphics.Color;
import android.os.Bundle;
import android.util.DisplayMetrics;
import android.util.TypedValue;
import android.view.ViewGroup.LayoutParams;
import android.widget.LinearLayout;
import android.widget.TextView;

public class MessageScreen extends Activity {
 /** Called when the activity is first created. */
 @Override
 public void onCreate(Bundle savedInstanceState) {
  super.onCreate(savedInstanceState);
  int mainBackgroundColor = Color.parseColor(""#2E8B57"");
  int labelTextColor = Color.parseColor(""#FF4500"");
  int messageBackgroundColor = Color.parseColor(""#3300FF"");
  int messageTextColor = Color.parseColor(""#FFFF00"");

  DisplayMetrics metrics = new DisplayMetrics();
  getWindowManager().getDefaultDisplay().getMetrics(metrics);
  float density = metrics.density;
  int minMarginSize = Math.round(density * 8);
  int paddingSize = minMarginSize * 2;
  int maxMarginSize = minMarginSize * 4;

  TextView label = new TextView(this);
  /*
   * The LayoutParams are instructions to the Layout that will contain the
   * View for laying out the View, so you need to use the LayoutParams of
   * the Layout that will contain the View.
   */
  LinearLayout.LayoutParams labelLayoutParams = new LinearLayout.LayoutParams(
    LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
  label.setLayoutParams(labelLayoutParams);
  label.setTextSize(TypedValue.COMPLEX_UNIT_SP, 18);
  label.setPadding(paddingSize, paddingSize, paddingSize, paddingSize);
  label.setText(R.string.title);
  label.setTextColor(labelTextColor);

  TextView message = new TextView(this);
  RoundedRectangle.LayoutParams messageLayoutParams = new RoundedRectangle.LayoutParams(
 LayoutParams.FILL_PARENT, LayoutParams.WRAP_CONTENT);
  /*
   * This is one of the calls must made to force a ViewGroup to call its
   * draw method instead of just calling the draw method of its children.
   * This tells the RoundedRectangle to put some extra space around the
   * View.
   */
  messageLayoutParams.setMargins(minMarginSize, paddingSize,
    minMarginSize, maxMarginSize);
  message.setLayoutParams(messageLayoutParams);
  message.setTextSize(TypedValue.COMPLEX_UNIT_SP, paddingSize);
  message.setText(R.string.message);
  message.setTextColor(messageTextColor);
  message.setBackgroundColor(messageBackgroundColor);

  RoundedRectangle messageContainer = new RoundedRectangle(this);
  LinearLayout.LayoutParams messageContainerLayoutParams = new LinearLayout.LayoutParams(
    LayoutParams.FILL_PARENT, LayoutParams.WRAP_CONTENT);
  messageContainerLayoutParams.setMargins(paddingSize, 0, paddingSize, 0);
  messageContainer.setLayoutParams(messageContainerLayoutParams);
  messageContainer.setOrientation(LinearLayout.VERTICAL);
  /*
   * This is one of the calls must made to force a ViewGroup to call its
   * draw method instead of just calling the draw method of its children.
   * This tells the RoundedRectangle to color the the exta space that was
   * put around the View as well as the View. This is exterior color of
   * the RoundedRectangle.
   */
  messageContainer.setBackgroundColor(mainBackgroundColor);
  /*
   * This is one of the calls must made to force a ViewGroup to call its
   * draw method instead of just calling the draw method of its children.
   * This is the interior color of the RoundedRectangle. It must be
   * different than the exterior color of the RoundedRectangle or the
   * RoundedRectangle will not call its draw method.
   */
  messageContainer.setInteriorColor(messageBackgroundColor);
  // Add the message to the RoundedRectangle.
  messageContainer.addView(message);

  //
  LinearLayout main = new LinearLayout(this);
  LinearLayout.LayoutParams mainLayoutParams = new LinearLayout.LayoutParams(
    LayoutParams.FILL_PARENT, LayoutParams.WRAP_CONTENT);
  main.setLayoutParams(mainLayoutParams);
  main.setOrientation(LinearLayout.VERTICAL);
  main.setBackgroundColor(mainBackgroundColor);
  main.addView(label);
  main.addView(messageContainer);

  setContentView(main);
 }
}
</code></pre>

<p><strong>The class for RoundedRectangle layout object is as defined here:</strong></p>

<pre><code>/**
 *  A LinearLayout that draws a rounded rectangle around the child View that was added to it.
 */
package android.example;

import android.app.Activity;
import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Rect;
import android.graphics.RectF;
import android.util.AttributeSet;
import android.util.DisplayMetrics;
import android.widget.LinearLayout;

/**
 * A LinearLayout that has rounded corners instead of square corners.
 * 
 * @author Danny Remington
 * 
 * @see LinearLayout
 * 
 */
public class RoundedRectangle extends LinearLayout {
 private int mInteriorColor;

 public RoundedRectangle(Context p_context) {
  super(p_context);
 }

 public RoundedRectangle(Context p_context, AttributeSet attributeSet) {
  super(p_context, attributeSet);
 }

 // Listener for the onDraw event that occurs when the Layout is drawn.
 protected void onDraw(Canvas canvas) {
  Rect rect = new Rect(0, 0, getWidth(), getHeight());
  RectF rectF = new RectF(rect);
  DisplayMetrics metrics = new DisplayMetrics();
  Activity activity = (Activity) getContext();
  activity.getWindowManager().getDefaultDisplay().getMetrics(metrics);
  float density = metrics.density;
  int arcSize = Math.round(density * 10);

  Paint paint = new Paint();
  paint.setColor(mInteriorColor);

  canvas.drawRoundRect(rectF, arcSize, arcSize, paint);
 }

 /**
  * Set the background color to use inside the RoundedRectangle.
  * 
  * @param Primitive int - The color inside the rounded rectangle.
  */
 public void setInteriorColor(int interiorColor) {
  mInteriorColor = interiorColor;
 }

 /**
  * Get the background color used inside the RoundedRectangle.
  * 
  * @return Primitive int - The color inside the rounded rectangle.
  */
 public int getInteriorColor() {
  return mInteriorColor;
 }

}
</code></pre>
"
"3647993","4464674","-2","<p>I solved the problem with the following workaround. Note that I am also scaling the image, which was necessary to avoid OutOfMemoryExceptions.</p>

<p>Beware that this solution will not work properly with portrait images or opside-down images (thank you Timmmm for noting). Timmmm's solution above might be the better choice if that is required and it looks more elegant, too: <a href=""http://stackoverflow.com/a/8914291/449918"">http://stackoverflow.com/a/8914291/449918</a></p>

<pre><code>File path = // ... location of your bitmap file
int w = 512; int h = 384; // size that does not lead to OutOfMemoryException on Nexus One
Bitmap b = BitmapFactory.decodeFile(path);


// Hack to determine whether the image is rotated
boolean rotated = b.getWidth() &gt; b.getHeight();

Bitmap resultBmp = null;

// If not rotated, just scale it
if (!rotated) {
    resultBmp = Bitmap.createScaledBitmap(b, w, h, true);
    b.recycle();
    b = null;

// If rotated, scale it by switching width and height and then rotated it
} else {
    Bitmap scaledBmp = Bitmap.createScaledBitmap(b, h, w, true);
    b.recycle();
    b = null;

    Matrix mat = new Matrix();
    mat.postRotate(90);
    resultBmp = Bitmap.createBitmap(scaledBmp, 0, 0, h, w, mat, true);

    // Release image resources
    scaledBmp.recycle();
    scaledBmp = null;
}

// resultBmp now contains the scaled and rotated image
</code></pre>

<p>Cheers</p>
"
"2169649","4470069","109","<p>Here is an update to the fine code that hcpl posted. but this works with OI file manager, astro file manager AND the media gallery too (tested). so i guess it will work with every file manager (are there many others than those mentioned?). did some corrections to the code he wrote.   </p>

<pre><code>public class BrowsePicture extends Activity {

    //YOU CAN EDIT THIS TO WHATEVER YOU WANT
    private static final int SELECT_PICTURE = 1;

    private String selectedImagePath;
    //ADDED
    private String filemanagerstring;

    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        ((Button) findViewById(R.id.Button01))
        .setOnClickListener(new OnClickListener() {

            public void onClick(View arg0) {

                // in onCreate or any event where your want the user to
                // select a file
                Intent intent = new Intent();
                intent.setType(""image/*"");
                intent.setAction(Intent.ACTION_GET_CONTENT);
                startActivityForResult(Intent.createChooser(intent,
                        ""Select Picture""), SELECT_PICTURE);
            }
        });
    }

    //UPDATED
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (resultCode == RESULT_OK) {
            if (requestCode == SELECT_PICTURE) {
                Uri selectedImageUri = data.getData();

                //OI FILE Manager
                filemanagerstring = selectedImageUri.getPath();

                //MEDIA GALLERY
                selectedImagePath = getPath(selectedImageUri);

                //DEBUG PURPOSE - you can delete this if you want
                if(selectedImagePath!=null)
                    System.out.println(selectedImagePath);
                else System.out.println(""selectedImagePath is null"");
                if(filemanagerstring!=null)
                    System.out.println(filemanagerstring);
                else System.out.println(""filemanagerstring is null"");

                //NOW WE HAVE OUR WANTED STRING
                if(selectedImagePath!=null)
                    System.out.println(""selectedImagePath is the right one for you!"");
                else
                    System.out.println(""filemanagerstring is the right one for you!"");
            }
        }
    }

    //UPDATED!
    public String getPath(Uri uri) {
        String[] projection = { MediaStore.Images.Media.DATA };
        Cursor cursor = managedQuery(uri, projection, null, null, null);
        if(cursor!=null)
        {
            //HERE YOU WILL GET A NULLPOINTER IF CURSOR IS NULL
            //THIS CAN BE, IF YOU USED OI FILE MANAGER FOR PICKING THE MEDIA
            int column_index = cursor
            .getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
            cursor.moveToFirst();
            return cursor.getString(column_index);
        }
        else return null;
    }
</code></pre>
"
"4617898","4618079","2","<p>Use an <code>android.widget.Button</code>, and set its <code>background</code> property to an <code>android.graphics.drawable.StateListDrawable</code>. This can all be done in XML, or programmatically. See the <a href=""http://developer.android.com/resources/tutorials/views/hello-formstuff.html#CustomButton"" rel=""nofollow"">Custom Button section of the Form Stuff tutorial</a>. </p>
"
"4617898","4618081","5","<p>Use an <code>ImageButton</code> instead of an <code>ImageView</code>. The ""clickable effect"" comes from the background; <code>ImageView</code> has a transparent background by default.</p>
"
"4617898","4618185","20","<p>You can design different images for clicked/not clicked states and set them in the onTouchListener as follows</p>

<pre><code>final ImageView v = (ImageView) findViewById(R.id.button0);
        v.setOnTouchListener(new OnTouchListener() {
            @Override
            public boolean onTouch(View arg0, MotionEvent arg1) {
                switch (arg1.getAction()) {
                case MotionEvent.ACTION_DOWN: {
                    v.setImageBitmap(res.getDrawable(R.drawable.img_down));
                    break;
                }
                case MotionEvent.ACTION_CANCEL:{
                    v.setImageBitmap(res.getDrawable(R.drawable.img_up));
                    break;
                }
                }
                return true;
            }
        });
</code></pre>

<p>The better choice is that you define a selector as follows</p>

<pre><code>&lt;selector xmlns:android=""http://schemas.android.com/apk/res/android""&gt;
    &lt;item android:state_selected=""true""   
        android:drawable=""@drawable/img_down"" /&gt;
    &lt;item android:state_selected=""false""   
        android:drawable=""@drawable/img_up"" /&gt;
&lt;/selector&gt;
</code></pre>

<p>and select the image in the event:</p>

<pre><code>v.setOnTouchListener(new OnTouchListener() {
            @Override
            public boolean onTouch(View arg0, MotionEvent arg1) {
                v.setSelected(arg1.getAction()==MotionEvent.ACTION_DOWN);
                return true;
            }
        });
</code></pre>
"
"2695746","4646448","14","<p>To filter on sytem based apps :</p>

<pre><code>private boolean isSystemPackage(ResolveInfo ri) {
    return (ri.activityInfo.applicationInfo.flags &amp; ApplicationInfo.FLAG_SYSTEM) != 0;
}
</code></pre>
"
"3349121","4705367","7","<p>In addition to the accepted answer, it is also possible to use e.g.: <code>android:inputType=""textCapCharacters""</code> as an attribute of <code>&lt;EditText&gt;</code> in order to only accept upper case characters (and numbers).</p>
"
"2150078","4737265","321","<p><strong>NEW ANSWER</strong> <em>added Jan 25th 2012</em></p>

<p>Since writing the below answer, someone clued me in to the existence of <a href=""http://developer.android.com/reference/android/view/ViewTreeObserver.html"">ViewTreeObserver</a> and friends, APIs which have been lurking in the SDK since version 1.</p>

<p>Rather than requiring a custom Layout type, a much simpler solution is to give your activity's root view a known ID, say '@+id/activityRoot', hook a GlobalLayoutListener into the ViewTreeObserver, and from there calculate the size diff between your activity's view root and the window size:</p>

<pre><code>final View activityRootView = findViewById(R.id.activityRoot);
activityRootView.getViewTreeObserver().addOnGlobalLayoutListener(new OnGlobalLayoutListener() {
    @Override
    public void onGlobalLayout() {
        int heightDiff = activityRootView.getRootView().getHeight() - activityRootView.getHeight();
        if (heightDiff &gt; 100) { // if more than 100 pixels, its probably a keyboard...
            ... do something here
        }
     }
});
</code></pre>

<p>Easy!</p>

<p><strong>ORIGINAL ANSWER</strong></p>

<p>Yes it's possible, but it's far harder than it ought to be.</p>

<p>If I need to care about when the keyboard appears and disappears (which is quite often) then what I do is customize my top-level layout class into one which overrides <code>onMeasure()</code>. The basic logic is that if the layout finds itself filling significantly less than the total area of the window, then a soft keyboard is probably showing. </p>

<pre><code>import android.app.Activity;
import android.content.Context;
import android.graphics.Rect;
import android.util.AttributeSet;
import android.widget.LinearLayout;

/*
 * LinearLayoutThatDetectsSoftKeyboard - a variant of LinearLayout that can detect when 
 * the soft keyboard is shown and hidden (something Android can't tell you, weirdly). 
 */

public class LinearLayoutThatDetectsSoftKeyboard extends LinearLayout {

    public LinearLayoutThatDetectsSoftKeyboard(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    public interface Listener {
        public void onSoftKeyboardShown(boolean isShowing);
    }
    private Listener listener;
    public void setListener(Listener listener) {
        this.listener = listener;
    }

    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        int height = MeasureSpec.getSize(heightMeasureSpec);
        Activity activity = (Activity)getContext();
        Rect rect = new Rect();
        activity.getWindow().getDecorView().getWindowVisibleDisplayFrame(rect);
        int statusBarHeight = rect.top;
        int screenHeight = activity.getWindowManager().getDefaultDisplay().getHeight();
        int diff = (screenHeight - statusBarHeight) - height;
        if (listener != null) {
            listener.onSoftKeyboardShown(diff&gt;128); // assume all soft keyboards are at least 128 pixels high
        }
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);       
    }

    }
</code></pre>

<p>Then in your Activity class...</p>

<pre><code>public class MyActivity extends Activity implements LinearLayoutThatDetectsSoftKeyboard.Listener {

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        ...
        LinearLayoutThatDetectsSoftKeyboard mainLayout = (LinearLayoutThatDetectsSoftKeyboard)findViewById(R.id.main);
        mainLayout.setListener(this);
        ...
    }


    @Override
    public void onSoftKeyboardShown(boolean isShowing) {
        // do whatever you need to do here
    }

    ...
}
</code></pre>
"
"2322234","4743605","26","<pre><code>String serial = null; 

try {
    Class&lt;?&gt; c = Class.forName(""android.os.SystemProperties"");
    Method get = c.getMethod(""get"", String.class);
    serial = (String) get.invoke(c, ""ro.serialno"");
} catch (Exception ignored) {
}
</code></pre>

<p>This code returns device serial number using a hidden Android API.</p>
"
"2169649","4812512","10","<p>basis with the above code, I reflected the code like below, may be it's more suitable:</p>

<pre><code>public String getPath(Uri uri) {
    String selectedImagePath;
    //1:MEDIA GALLERY --- query from MediaStore.Images.Media.DATA
    String[] projection = { MediaStore.Images.Media.DATA };
    Cursor cursor = managedQuery(uri, projection, null, null, null);
    if(cursor != null){
        int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
        cursor.moveToFirst();
        selectedImagePath = cursor.getString(column_index);
    }else{
        selectedImagePath = null;
    }

    if(selectedImagePath == null){
        //2:OI FILE Manager --- call method: uri.getPath()
        selectedImagePath = uri.getPath();
    }
    return selectedImagePath;
}
</code></pre>
"
"4617898","4839077","0","<p>you could try with <code>android:background=""@android:drawable/list_selector_background""</code>
to get the same effect as the ""Add alarm"" in the default ""Alarm Clock"" (now Desk Clock)</p>
"
"4894885","4894936","30","<p>I would get the file name as a String, split it into an array with ""."" as the delimiter, and then get the last index of the array, which would be the file extension. For example:</p>

<pre><code>public class main {
    public static void main(String[] args) {
        String filename = ""image.jpg"";
        String filenameArray[] = filename.split(""\\."");
        String extension = filenameArray[filenameArray.length-1];
        System.out.println(extension);
    }
}
</code></pre>

<p>Which outputs:</p>

<pre><code>jpg
</code></pre>
"
"4894885","4894991","1","<p>Haven't had a chance to run this (so might not work 100%) but it should be what you're looking for:</p>

<pre><code>File files[] = Environment.getExternalStorageDirectory().listFiles();   
for (File f : files)
 {
  String fullPath = f.getAbsolutePath();
  int dot = fullPath.lastIndexOf(""."");
  String ext = fullPath.substring(dot + 1);
  if(ext.equals(""txt""))
  {
    //do something with f here
  } 
 }  
</code></pre>
"
"2695746","4910874","5","<p>@Jas:
I don't have that code anymore, but I've found something close. I've made this to search for ""components"" of my application, they are just activities with a given category. </p>

<pre><code>private List&lt;String&gt; getInstalledComponentList() {
    Intent componentSearchIntent = new Intent();
    componentSearchIntent.addCategory(Constants.COMPONENTS_INTENT_CATEGORY);
    componentSearchIntent.setAction(Constants.COMPONENTS_INTENT_ACTION_DEFAULT);
    List&lt;ResolveInfo&gt; ril = getPackageManager().queryIntentActivities(componentSearchIntent, PackageManager.MATCH_DEFAULT_ONLY);
    List&lt;String&gt; componentList = new ArrayList&lt;String&gt;();
    Log.d(LOG_TAG, ""Search for installed components found "" + ril.size() + "" matches."");
    for (ResolveInfo ri : ril) {
        if (ri.activityInfo != null) {
            componentList.add(ri.activityInfo.packageName);// + ri.activityInfo.name);
            Log.d(LOG_TAG, ""Found installed: "" + componentList.get(componentList.size()-1));
        }
    }
    return componentList;
}
</code></pre>

<p>I've commented the part where it gets the activity name, but it's pretty straightforward.</p>
"
"3996938","4915908","0","<p>I found this thread by having the same problem but I think I have come up with a workaround that worked for me for unkown reasons. Whenever I tried getting a value I got nothing but if I loop through the list setting all to false it started working just like intended.</p>

<p>This was actually a feature I had implemented where the user could either ""Select All"" or ""Unselect All"". I run this method in my onCreate.</p>

<pre><code>private void selectNone() {
    ListView lv = getListView();
    for (int i = 0; i &lt; lv.getCount(); i++) {
        lv.setItemChecked(i, false);
    }
}
</code></pre>

<p>Now all my values are correct. For getting the values, in my case, just Strings.</p>

<pre><code>private void importSelected() {     
    ListView lv = getListView();
    SparseBooleanArray selectedItems = lv.getCheckedItemPositions();

    for (int i = 0; i &lt; selectedItems.size(); i++) {
        if (selectedItems.get(i)) {
            String item =  lv.getAdapter().getItem(selectedItems.keyAt(i)).toString();
        }
    }

    selectNone(); //Reset
}
</code></pre>

<p>I hope this helps someone.</p>
"
"4946295","4950968","13","<p>Ok, I just found a VERY ugly solution :</p>

<pre><code>public static Animation expand(final View v, Runnable onEnd) {
    try {
        Method m = v.getClass().getDeclaredMethod(""onMeasure"", int.class, int.class);
        m.setAccessible(true);
        m.invoke(
            v,
            MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED),
            MeasureSpec.makeMeasureSpec(((View)v.getParent()).getMeasuredHeight(), MeasureSpec.AT_MOST)
        );
    } catch (Exception e){
        Log.e(""test"", """", e);
    }
    final int initialHeight = v.getMeasuredHeight();
    Log.d(""test"", ""initialHeight=""+initialHeight);

    v.getLayoutParams().height = 0;
    v.setVisibility(View.VISIBLE);
    Animation a = new Animation()
    {
        @Override
        protected void applyTransformation(float interpolatedTime, Transformation t) {
            final int newHeight = (int)(initialHeight * interpolatedTime);
            v.getLayoutParams().height = newHeight;
            v.requestLayout();
        }

        @Override
        public boolean willChangeBounds() {
            return true;
        }
    };
    a.setDuration(5000);
    v.startAnimation(a);
    return a;
}
</code></pre>

<p>Feel free to propose a better solution !</p>
"
"2617266","5006518","3","<p>Slight modification to onMeasure:</p>

<pre><code>@Override
protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
{
    super.onMeasure(widthMeasureSpec, heightMeasureSpec);
    int parentWidth = MeasureSpec.getSize(widthMeasureSpec);
    int parentHeight = MeasureSpec.getSize(heightMeasureSpec);
    refitText(this.getText().toString(), parentWidth);
    this.setMeasuredDimension(parentWidth, parentHeight);
}
</code></pre>

<p>And binary search on refitText:</p>

<pre><code>private void refitText(String text, int textWidth) 
{ 
    if (textWidth &gt; 0) 
    {
        int availableWidth = textWidth - this.getPaddingLeft() - this.getPaddingRight();         
        int trySize = (int)maxTextSize;
        int increment = ~( trySize - (int)minTextSize ) / 2;

        testPaint.setTextSize(trySize);
        while ((trySize &gt; minTextSize) &amp;&amp; (testPaint.measureText(text) &gt; availableWidth)) 
        {
            trySize += increment;
            increment = ( increment == 0 ) ? -1 : ~increment / 2;
            if (trySize &lt;= minTextSize) 
            {
                trySize = (int)minTextSize;
                break;
            }
            testPaint.setTextSize(trySize);
        }

        this.setTextSize( TypedValue.COMPLEX_UNIT_PX, trySize);
    }
}
</code></pre>
"
"2973270","5028569","0","<p>I don't know if it changes the whole app, but I have managed to change some components that couldn't otherwise be changed by doing this:</p>

<pre><code>Typeface tf = Typeface.createFromAsset(getAssets(), ""fonts/Lucida Sans Unicode.ttf"");
Typeface.class.getField(""DEFAULT"").setAccessible(true);
Typeface.class.getField(""DEFAULT_BOLD"").setAccessible(true);
Typeface.class.getField(""DEFAULT"").set(null, tf);
Typeface.class.getField(""DEFAULT_BOLD"").set(null, tf);
</code></pre>
"
"5033012","5033573","1","<p>You can use the <code>android.text.StaticLayout</code> class for this. That's what <code>TextView</code> uses internally.</p>
"
"2795833","5072754","16","<p>Here is code snippet demo how to get screen orientation was recommend by <a href=""http://stackoverflow.com/users/236398/hackbod"">hackbod</a> and <a href=""http://stackoverflow.com/users/155137/martijn-courteaux"">Martijn</a>:</p>

<p>❶ Trigger when change Orientation:</p>

<pre><code>@Override
public void onConfigurationChanged(Configuration newConfig) {
    super.onConfigurationChanged(newConfig);
        int nCurrentOrientation = _getScreenOrientation();
    _doSomeThingWhenChangeOrientation(nCurrentOrientation);
}
</code></pre>

<p>❷ Get current orientation as <a href=""http://stackoverflow.com/users/155137/martijn-courteaux"">hackbod</a> recommend:</p>

<pre><code>private int _getScreenOrientation(){    
    return getResources().getConfiguration().orientation;
}
</code></pre>

<p>❸There are alternative solution for get current screen orientation ❷ follow <a href=""http://stackoverflow.com/users/155137/martijn-courteaux"">Martijn</a> solution:</p>

<pre><code>private int _getScreenOrientation(){
        Display display = ((WindowManager) getSystemService(WINDOW_SERVICE)).getDefaultDisplay();
        return display.getOrientation();
}
</code></pre>

<p>★<strong>Note</strong>: 
I was try both implement ❷ &amp; ❸, but on RealDevice (NexusOne SDK 2.3) Orientation it returns the wrong orientation.</p>

<p>★So i <strong>recommend to used solution</strong> ❷ to get Screen orientation which have more advantage: clearly, simple and work like a charm. </p>

<p>★Check carefully return of orientation to ensure correct as our expected (May be have limited depend on physical devices specification)</p>

<p>Hope it help,</p>
"
"2695746","5097838","168","<p>Here's a cleaner way using the packageManager</p>

<pre><code>final PackageManager pm = getPackageManager();
//get a list of installed apps.
List&lt;ApplicationInfo&gt; packages = pm.getInstalledApplications(PackageManager.GET_META_DATA);

for (ApplicationInfo packageInfo : packages) {
    Log.d(TAG, ""Installed package :"" + packageInfo.packageName);
    Log.d(TAG, ""Source dir : "" + packageInfo.sourceDir);
    Log.d(TAG, ""Launch Activity :"" + pm.getLaunchIntentForPackage(packageInfo.packageName)); 
}
// the getLaunchIntentForPackage returns an intent that you can use with startActivity() 
</code></pre>

<p>More info here <a href=""http://qtcstation.com/2011/02/how-to-launch-another-app-from-your-app/"">http://qtcstation.com/2011/02/how-to-launch-another-app-from-your-app/</a></p>
"
"5105354","5106399","155","<p>To force the soft keyboard to appear, you can use</p>

<pre><code>EditText yourEditText= (EditText) findViewById(R.id.yourEditText);
InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
imm.showSoftInput(yourEditText, InputMethodManager.SHOW_IMPLICIT);
</code></pre>

<p>And for removing the focus on <code>EditText</code>, saddly you need to have a dummy <code>View</code> to grab focus.</p>

<p>I hope this helps</p>

<hr>

<p>To close it you can use</p>

<pre><code>InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
imm.hideSoftInputFromWindow(yourEditText.getWindowToken(), 0);
</code></pre>
"
"2317428","5117254","104","<p>Here is my code for shake gesture detection:</p>

<pre><code>import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;


/**
 * Listener that detects shake gesture.
 */
public class ShakeEventListener implements SensorEventListener {


  /** Minimum movement force to consider. */
  private static final int MIN_FORCE = 10;

  /**
   * Minimum times in a shake gesture that the direction of movement needs to
   * change.
   */
  private static final int MIN_DIRECTION_CHANGE = 3;

  /** Maximum pause between movements. */
  private static final int MAX_PAUSE_BETHWEEN_DIRECTION_CHANGE = 200;

  /** Maximum allowed time for shake gesture. */
  private static final int MAX_TOTAL_DURATION_OF_SHAKE = 400;

  /** Time when the gesture started. */
  private long mFirstDirectionChangeTime = 0;

  /** Time when the last movement started. */
  private long mLastDirectionChangeTime;

  /** How many movements are considered so far. */
  private int mDirectionChangeCount = 0;

  /** The last x position. */
  private float lastX = 0;

  /** The last y position. */
  private float lastY = 0;

  /** The last z position. */
  private float lastZ = 0;

  /** OnShakeListener that is called when shake is detected. */
  private OnShakeListener mShakeListener;

  /**
   * Interface for shake gesture.
   */
  public interface OnShakeListener {

    /**
     * Called when shake gesture is detected.
     */
    void onShake();
  }

  public void setOnShakeListener(OnShakeListener listener) {
    mShakeListener = listener;
  }

  @Override
  public void onSensorChanged(SensorEvent se) {
    // get sensor data
    float x = se.values[SensorManager.DATA_X];
    float y = se.values[SensorManager.DATA_Y];
    float z = se.values[SensorManager.DATA_Z];

    // calculate movement
    float totalMovement = Math.abs(x + y + z - lastX - lastY - lastZ);

    if (totalMovement &gt; MIN_FORCE) {

      // get time
      long now = System.currentTimeMillis();

      // store first movement time
      if (mFirstDirectionChangeTime == 0) {
        mFirstDirectionChangeTime = now;
        mLastDirectionChangeTime = now;
      }

      // check if the last movement was not long ago
      long lastChangeWasAgo = now - mLastDirectionChangeTime;
      if (lastChangeWasAgo &lt; MAX_PAUSE_BETHWEEN_DIRECTION_CHANGE) {

        // store movement data
        mLastDirectionChangeTime = now;
        mDirectionChangeCount++;

        // store last sensor data 
        lastX = x;
        lastY = y;
        lastZ = z;

        // check how many movements are so far
        if (mDirectionChangeCount &gt;= MIN_DIRECTION_CHANGE) {

          // check total duration
          long totalDuration = now - mFirstDirectionChangeTime;
          if (totalDuration &lt; MAX_TOTAL_DURATION_OF_SHAKE) {
            mShakeListener.onShake();
            resetShakeParameters();
          }
        }

      } else {
        resetShakeParameters();
      }
    }
  }

  /**
   * Resets the shake parameters to their default values.
   */
  private void resetShakeParameters() {
    mFirstDirectionChangeTime = 0;
    mDirectionChangeCount = 0;
    mLastDirectionChangeTime = 0;
    lastX = 0;
    lastY = 0;
    lastZ = 0;
  }

  @Override
  public void onAccuracyChanged(Sensor sensor, int accuracy) {
  }

}
</code></pre>

<p>Add this in your activity:</p>

<pre><code>  private SensorManager mSensorManager;

  private ShakeEventListener mSensorListener;
</code></pre>

<p>...</p>

<p>in onCreate() add:</p>

<pre><code>    mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
    mSensorListener = new ShakeEventListener();   

    mSensorListener.setOnShakeListener(new ShakeEventListener.OnShakeListener() {

      public void onShake() {
        Toast.makeText(KPBActivityImpl.this, ""Shake!"", Toast.LENGTH_SHORT).show();
      }
    });
</code></pre>

<p>and:</p>

<pre><code>@Override
  protected void onResume() {
    super.onResume();
    mSensorManager.registerListener(mSensorListener,
        mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER),
        SensorManager.SENSOR_DELAY_UI);
  }

  @Override
  protected void onPause() {
    mSensorManager.unregisterListener(mSensorListener);
    super.onPause();
  }
</code></pre>
"
"4946295","5122460","104","<p>I was trying to do what I believe was a very similar animation and found an elegant solution. This code assumes that you are always going from 0->h or h->0 (h being the maximum height). The three constructor parameters are view = the view to be animated (in my case, a webview), targetHeight = the maximum height of the view, and down = a boolean which specifies the direction (true = expanding, false = collapsing).</p>

<pre><code>public class DropDownAnim extends Animation {
    private final int targetHeight;
    private final View view;
    private final boolean down;

    public DropDownAnim(View view, int targetHeight, boolean down) {
        this.view = view;
        this.targetHeight = targetHeight;
        this.down = down;
    }

    @Override
    protected void applyTransformation(float interpolatedTime, Transformation t) {
        int newHeight;
        if (down) {
            newHeight = (int) (targetHeight * interpolatedTime);
        } else {
            newHeight = (int) (targetHeight * (1 - interpolatedTime));
        }
        view.getLayoutParams().height = newHeight;
        view.requestLayout();
    }

    @Override
    public void initialize(int width, int height, int parentWidth,
            int parentHeight) {
        super.initialize(width, height, parentWidth, parentHeight);
    }

    @Override
    public boolean willChangeBounds() {
        return true;
    }
}
</code></pre>
"
"2973270","5185587","85","<p>Yes It is possible.</p>

<p>You have to create a custom view which extends text view.</p>

<p>In <code>attrs.xml</code> in <code>values</code> folder:</p>

<pre><code>&lt;resources&gt;
    &lt;declare-styleable name=""MyTextView""&gt;
        &lt;attr name=""first_name"" format=""string""/&gt;
        &lt;attr name=""last_name"" format=""string""/&gt;
        &lt;attr name=""ttf_name"" format=""string""/&gt;
    &lt;/declare-styleable&gt;
&lt;/resources&gt;
</code></pre>

<p>In <code>main.xml</code>:</p>

<pre><code>&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
     xmlns:lht=""http://schemas.android.com/apk/res/com.lht""
    android:orientation=""vertical""
    android:layout_width=""fill_parent""
    android:layout_height=""fill_parent""
    &gt;
    &lt;TextView  android:layout_width=""fill_parent"" 
        android:layout_height=""wrap_content""
        android:text=""Hello""/&gt;
    &lt;com.lht.ui.MyTextView  
        android:id=""@+id/MyTextView""
        android:layout_width=""fill_parent"" 
        android:layout_height=""wrap_content""
        android:text=""Hello friends""
        lht:ttf_name=""ITCBLKAD.TTF""
        /&gt;   
&lt;/LinearLayout&gt;
</code></pre>

<p>In <code>MyTextView.java</code>:</p>

<pre class=""lang-java prettyprint-override""><code>package com.lht.ui;

import android.content.Context;
import android.graphics.Typeface;
import android.util.AttributeSet;
import android.util.Log;
import android.widget.TextView;

public class MyTextView extends TextView {

    Context context;
    String ttfName;

    String TAG = getClass().getName();

    public MyTextView(Context context, AttributeSet attrs) {
        super(context, attrs);
        this.context = context;

        for (int i = 0; i &lt; attrs.getAttributeCount(); i++) {
            Log.i(TAG, attrs.getAttributeName(i));
            /*
             * Read value of custom attributes
             */

            this.ttfName = attrs.getAttributeValue(
                    ""http://schemas.android.com/apk/res/com.lht"", ""ttf_name"");
            Log.i(TAG, ""firstText "" + firstText);
            // Log.i(TAG, ""lastText ""+ lastText);

            init();
        }

    }

    private void init() {
        Typeface font = Typeface.createFromAsset(context.getAssets(), ttfName);
        setTypeface(font);
    }

    @Override
    public void setTypeface(Typeface tf) {

        // TODO Auto-generated method stub
        super.setTypeface(tf);
    }

}
</code></pre>
"
"2459916","5188171","5","<p>Props to George Walters II above, I just took his answer and extended it a bit to support rounding individual corners differently.  This could be optimized a bit further (some of the target rects overlap), but not a whole lot.</p>

<p>I know this thread is a bit old, but its one of the top results for queries on Google for how to round corners of ImageViews on Android.</p>

<pre><code>/**
 * Use this method to scale a bitmap and give it specific rounded corners.
 * @param context Context object used to ascertain display density.
 * @param bitmap The original bitmap that will be scaled and have rounded corners applied to it.
 * @param upperLeft Corner radius for upper left.
 * @param upperRight Corner radius for upper right.
 * @param lowerRight Corner radius for lower right.
 * @param lowerLeft Corner radius for lower left.
 * @param endWidth Width to which to scale original bitmap.
 * @param endHeight Height to which to scale original bitmap.
 * @return Scaled bitmap with rounded corners.
 */
public static Bitmap getRoundedCornerBitmap(Context context, Bitmap bitmap, float upperLeft,
        float upperRight, float lowerRight, float lowerLeft, int endWidth,
        int endHeight) {
    float densityMultiplier = context.getResources().getDisplayMetrics().density;

    // scale incoming bitmap to appropriate px size given arguments and display dpi
    bitmap = Bitmap.createScaledBitmap(bitmap, 
            Math.round(endWidth * densityMultiplier),
            Math.round(endHeight * densityMultiplier), true);

    // create empty bitmap for drawing
    Bitmap output = Bitmap.createBitmap(
            Math.round(endWidth * densityMultiplier),
            Math.round(endHeight * densityMultiplier), Config.ARGB_8888);

    // get canvas for empty bitmap
    Canvas canvas = new Canvas(output);
    int width = canvas.getWidth();
    int height = canvas.getHeight();

    // scale the rounded corners appropriately given dpi
    upperLeft *= densityMultiplier;
    upperRight *= densityMultiplier;
    lowerRight *= densityMultiplier;
    lowerLeft *= densityMultiplier;

    Paint paint = new Paint();
    paint.setAntiAlias(true);
    paint.setColor(Color.WHITE);

    // fill the canvas with transparency
    canvas.drawARGB(0, 0, 0, 0);

    // draw the rounded corners around the image rect. clockwise, starting in upper left.
    canvas.drawCircle(upperLeft, upperLeft, upperLeft, paint);
    canvas.drawCircle(width - upperRight, upperRight, upperRight, paint);
    canvas.drawCircle(width - lowerRight, height - lowerRight, lowerRight, paint);
    canvas.drawCircle(lowerLeft, height - lowerLeft, lowerLeft, paint);

    // fill in all the gaps between circles. clockwise, starting at top.
    RectF rectT = new RectF(upperLeft, 0, width - upperRight, height / 2);
    RectF rectR = new RectF(width / 2, upperRight, width, height - lowerRight);
    RectF rectB = new RectF(lowerLeft, height / 2, width - lowerRight, height);
    RectF rectL = new RectF(0, upperLeft, width / 2, height - lowerLeft);

    canvas.drawRect(rectT, paint);
    canvas.drawRect(rectR, paint);
    canvas.drawRect(rectB, paint);
    canvas.drawRect(rectL, paint);

    // set up the rect for the image
    Rect imageRect = new Rect(0, 0, width, height);

    // set up paint object such that it only paints on Color.WHITE
    paint.setXfermode(new AvoidXfermode(Color.WHITE, 255, AvoidXfermode.Mode.TARGET));

    // draw resized bitmap onto imageRect in canvas, using paint as configured above
    canvas.drawBitmap(bitmap, imageRect, imageRect, paint);

    return output;
}
</code></pre>
"
"2459916","5252726","24","<p>I found that both methods were very helpful in coming up with a working solution. Here is my composite version, that is pixel independent and allows you to have some square corners with the rest of the corners having the same radius (which is the usual use case). 
With thanks to both of the solutions above:</p>

<pre><code>public static Bitmap getRoundedCornerBitmap(Context context, Bitmap input, int pixels , int w , int h , boolean squareTL, boolean squareTR, boolean squareBL, boolean squareBR  ) {

    Bitmap output = Bitmap.createBitmap(w, h, Config.ARGB_8888);
    Canvas canvas = new Canvas(output);
    final float densityMultiplier = context.getResources().getDisplayMetrics().density;

    final int color = 0xff424242;
    final Paint paint = new Paint();
    final Rect rect = new Rect(0, 0, w, h);
    final RectF rectF = new RectF(rect);

    //make sure that our rounded corner is scaled appropriately
    final float roundPx = pixels*densityMultiplier;

    paint.setAntiAlias(true);
    canvas.drawARGB(0, 0, 0, 0);
    paint.setColor(color);
    canvas.drawRoundRect(rectF, roundPx, roundPx, paint);


    //draw rectangles over the corners we want to be square
    if (squareTL ){
        canvas.drawRect(0, 0, w/2, h/2, paint);
    }
    if (squareTR ){
        canvas.drawRect(w/2, 0, w, h/2, paint);
    }
    if (squareBL ){
        canvas.drawRect(0, h/2, w/2, h, paint);
    }
    if (squareBR ){
        canvas.drawRect(w/2, h/2, w, h, paint);
    }

    paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC_IN));
    canvas.drawBitmap(input, 0,0, paint);

    return output;
}
</code></pre>

<p>Also, I overrode ImageView to put this in so I could define it in xml.
You may want to add in some of the logic that the super call makes here, but I've commented it as it's not helpful in my case.</p>

<pre><code>    @Override
protected void onDraw(Canvas canvas) {
    //super.onDraw(canvas);
        Drawable drawable = getDrawable();

        Bitmap b =  ((BitmapDrawable)drawable).getBitmap() ;
        Bitmap bitmap = b.copy(Bitmap.Config.ARGB_8888, true);

        int w = getWidth(), h = getHeight();


        Bitmap roundBitmap =  CropImageView.getRoundedCornerBitmap( getContext(), bitmap,10 , w, h , true, false,true, false);
        canvas.drawBitmap(roundBitmap, 0,0 , null);
}
</code></pre>

<p>Hope this helps!</p>
"
"2317428","5260285","2","<p>Here is another code for this:</p>

<pre><code>import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import android.content.Context;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Handler;

   public class AccelerometerListener implements SensorEventListener {

        private SensorManager sensorManager;
        private List&lt;Sensor&gt; sensors;
        private Sensor sensor;
        private long lastUpdate = -1;
        private long currentTime = -1;
        private Main parent;
        private Timer timer;
        private int shakes;
        private static final Handler mHandler = new Handler();

        private float last_x, last_y, last_z;
        private float current_x, current_y, current_z, currenForce;
        private static final int FORCE_THRESHOLD = 500;
        private final int DATA_X = SensorManager.DATA_X;
        private final int DATA_Y = SensorManager.DATA_Y;
        private final int DATA_Z = SensorManager.DATA_Z;

        public AccelerometerListener(Main parent) {
            SensorManager sensorService = (SensorManager) parent
                    .getSystemService(Context.SENSOR_SERVICE);

            this.sensorManager = sensorService;
            if (sensorService == null)
                return;

            this.sensors = sensorManager.getSensorList(Sensor.TYPE_ACCELEROMETER);
            if (sensors.size() &gt; 0) {
                sensor = sensors.get(0);
            }

            this.parent = parent;
        }

        public void start() {
            if (sensor == null)
                return;

            sensorManager.registerListener(this, sensor,
                    SensorManager.SENSOR_DELAY_GAME);
        }

        public void stop() {
            if (sensorManager == null)
                return;

            sensorManager.unregisterListener(this);
        }

        public void onAccuracyChanged(Sensor s, int valu) {

        }

        public void onSensorChanged(SensorEvent event) {

            if (event.sensor.getType() != Sensor.TYPE_ACCELEROMETER)
                return;

            currentTime = System.currentTimeMillis();

            if ((currentTime - lastUpdate) &gt; 50) {
                long diffTime = (currentTime - lastUpdate);
                lastUpdate = currentTime;

                current_x = event.values[DATA_X];
                current_y = event.values[DATA_Y];
                current_z = event.values[DATA_Z];

                currenForce = Math.abs(current_x + current_y + current_z - last_x
                        - last_y - last_z)
                        / diffTime * 10000;

                if (currenForce &gt; FORCE_THRESHOLD) {
                    shakeDetected();
                }
                last_x = current_x;
                last_y = current_y;
                last_z = current_z;

            }
        }

        private void shakeDetected() {
            shakes++;

            if (shakes == 1) {
                if (timer != null) {
                    timer.cancel();
                }

                timer = new Timer();
                timer.schedule(new TimerTask() {

                    @Override
                    public void run() {
                        if (shakes &gt; 3) {
                            mHandler.post(new Runnable() {

                                public void run() {
                                    // shake
                                }
                            });
                        }

                        shakes = 0;
                    }
                }, 500);
            }
        }
    }
</code></pre>
"
"5033012","5280436","6","<p>I hope this helps you</p>

<pre><code>import android.content.Context;
import android.graphics.Rect;
import android.text.TextPaint;
import android.util.AttributeSet;
import android.widget.TextView;

/* Based on 
 * from http://stackoverflow.com/questions/2617266/how-to-adjust-text-font-size-to-fit-textview
 */
public class FontFitTextView extends TextView {

private static float MAX_TEXT_SIZE = 20;

public FontFitTextView(Context context) {
    this(context, null);
}

public FontFitTextView(Context context, AttributeSet attrs) {
    super(context, attrs);

    float size = this.getTextSize();
    if (size &gt; MAX_TEXT_SIZE)
        setTextSize(MAX_TEXT_SIZE);
}

private void refitText(String text, int textWidth) {
    if (textWidth &gt; 0) {
        float availableWidth = textWidth - this.getPaddingLeft()
                - this.getPaddingRight();

        TextPaint tp = getPaint();
        Rect rect = new Rect();
        tp.getTextBounds(text, 0, text.length(), rect);
        float size = rect.width();

        if (size &gt; availableWidth)
            setTextScaleX(availableWidth / size);
    }
}

@Override
protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
    super.onMeasure(widthMeasureSpec, heightMeasureSpec);
    int parentWidth = MeasureSpec.getSize(widthMeasureSpec);
    int parentHeight = MeasureSpec.getSize(heightMeasureSpec);
    refitText(this.getText().toString(), parentWidth);
    this.setMeasuredDimension(parentWidth, parentHeight);
}

@Override
protected void onTextChanged(final CharSequence text, final int start,
        final int before, final int after) {
    refitText(text.toString(), this.getWidth());
}

@Override
protected void onSizeChanged(int w, int h, int oldw, int oldh) {
    if (w != oldw) {
        refitText(this.getText().toString(), w);
    }
}
}
</code></pre>

<p>NOTE: I use MAX_TEXT_SIZE in case of text size is bigger than 20 because I don't want to allow big fonts applies to my View, if this is not your case, you can just simply remove it.</p>
"
"5033012","5293261","5","<p>I wrote a blog post about this.</p>

<p>I created a component called <code>ResizableButton</code> based on Kirill Grouchnikov's <a href=""http://www.pushing-pixels.org/2010/12/16/meet-the-green-goblin-part-4.html"">blog post</a> about custom components used in the new android market app. I placed the src code <a href=""http://android-argentina.blogspot.com/2011/01/resizablebutton.html"">here</a>.</p>

<p>On the other hand, <a href=""http://twitter.com/mosabua"">mosabua</a> read my post and told me he was going to open source his implementation which was faster than mine. I hope he release it soon enough :)</p>
"
"3166501","5323437","108","<pre><code>DisplayMetrics metrics = new DisplayMetrics();
getWindowManager().getDefaultDisplay().getMetrics(metrics);
switch(metrics.densityDpi){
     case DisplayMetrics.DENSITY_LOW:
                break;
     case DisplayMetrics.DENSITY_MEDIUM:
                 break;
     case DisplayMetrics.DENSITY_HIGH:
                 break;
}
</code></pre>

<p>This will work in API lavel 4 or higher.</p>
"
"2201917","5327690","24","<p>In 2.3, I had better luck with</p>

<pre><code>final Intent intent = new Intent(Intent.ACTION_VIEW).setData(Uri.parse(url));
activity.startActivity(intent);
</code></pre>

<p>The difference being the use of <code>Intent.ACTION_VIEW</code> rather than the String <code>""android.intent.action.VIEW""</code></p>
"
"5357455","5357531","4","<p>Try using <a href=""http://developer.android.com/reference/java/text/NumberFormat.html#getCurrencyInstance%28%29"" rel=""nofollow"">NumberFormat.getCurrencyInstance()</a> to format your string before you put it into a TextView.</p>

<p>Something like:</p>

<pre><code>NumberFormat currency = NumberFormat.getCurrencyInstance();
myTextView.setText(currency.format(dollars));
</code></pre>

<p><strong>Edit</strong> - There is no inputType for currency that I could find in the docs. I imagine this is because there are some currencies that don't follow the same rule for decimal places, such as the Japanese Yen.</p>

<p>As LeffelMania mentioned, you can correct user input by using the above code with a <code>TextWatcher</code> that is set on your <code>EditText</code>.</p>
"
"5357455","5368816","15","<p>This implementation of <code>InputFilter</code> solves the problem.</p>

<pre><code>import android.text.SpannableStringBuilder;
import android.text.Spanned;
import android.text.method.DigitsKeyListener;

public class MoneyValueFilter extends DigitsKeyListener {
    public MoneyValueFilter() {
        super(false, true);
    }

    private int digits = 2;

    public void setDigits(int d) {
        digits = d;
    }

    @Override
    public CharSequence filter(CharSequence source, int start, int end,
            Spanned dest, int dstart, int dend) {
        CharSequence out = super.filter(source, start, end, dest, dstart, dend);

        // if changed, replace the source
        if (out != null) {
            source = out;
            start = 0;
            end = out.length();
        }

        int len = end - start;

        // if deleting, source is empty
        // and deleting can't break anything
        if (len == 0) {
            return source;
        }

        int dlen = dest.length();

        // Find the position of the decimal .
        for (int i = 0; i &lt; dstart; i++) {
            if (dest.charAt(i) == '.') {
                // being here means, that a number has
                // been inserted after the dot
                // check if the amount of digits is right
                return (dlen-(i+1) + len &gt; digits) ? 
                    """" :
                    new SpannableStringBuilder(source, start, end);
            }
        }

        for (int i = start; i &lt; end; ++i) {
            if (source.charAt(i) == '.') {
                // being here means, dot has been inserted
                // check if the amount of digits is right
                if ((dlen-dend) + (end-(i + 1)) &gt; digits)
                    return """";
                else
                    break;  // return new SpannableStringBuilder(source, start, end);
            }
        }

        // if the dot is after the inserted part,
        // nothing can break
        return new SpannableStringBuilder(source, start, end);
    }
}
</code></pre>
"
"2471935","5389653","7","<pre><code>public class LoadWebImg extends Activity {

String image_URL=
 ""http://java.sogeti.nl/JavaBlog/wp-content/uploads/2009/04/android_icon_256.png"";

   /** Called when the activity is first created. */
   @Override
   public void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       setContentView(R.layout.main);

       ImageView bmImage = (ImageView)findViewById(R.id.image);
    BitmapFactory.Options bmOptions;
    bmOptions = new BitmapFactory.Options();
    bmOptions.inSampleSize = 1;
    Bitmap bm = LoadImage(image_URL, bmOptions);
    bmImage.setImageBitmap(bm);
   }

   private Bitmap LoadImage(String URL, BitmapFactory.Options options)
   {       
    Bitmap bitmap = null;
    InputStream in = null;       
       try {
           in = OpenHttpConnection(URL);
           bitmap = BitmapFactory.decodeStream(in, null, options);
           in.close();
       } catch (IOException e1) {
       }
       return bitmap;               
   }

private InputStream OpenHttpConnection(String strURL) throws IOException{
 InputStream inputStream = null;
 URL url = new URL(strURL);
 URLConnection conn = url.openConnection();

 try{
  HttpURLConnection httpConn = (HttpURLConnection)conn;
  httpConn.setRequestMethod(""GET"");
  httpConn.connect();

  if (httpConn.getResponseCode() == HttpURLConnection.HTTP_OK) {
   inputStream = httpConn.getInputStream();
  }
 }
 catch (Exception ex)
 {
 }
 return inputStream;
}
}
</code></pre>
"
"2139134","5451251","8","<p>You can use android BUNDLE to do this.</p>

<p>Create a Bundle from your class like:</p>

<pre><code>public Bundle toBundle() {
    Bundle b = new Bundle();
    b.putString(""SomeKey"", ""SomeValue"");

    return b;
}
</code></pre>

<p>Then pass this bundle with INTENT.
Now you can recreate your class object by passing bundle like</p>

<pre><code>public CustomClass(Context _context, Bundle b) {
    context = _context;
    classMember = b.getString(""SomeKey"");
}
</code></pre>

<p>Declare this in your Custom class and use.</p>
"
"5495225","5495249","1","<p>Try it in XML...</p>

<pre><code>&lt;TextView  
android:layout_width=""fill_parent"" 
android:layout_height=""wrap_content""
android:autoText=""false""
/&gt;
</code></pre>
"
"2160619","5504572","12","<p>Try this, it works for me, I have 4 lines and it adds the ""..."" to the end of the last/fourth line.  Its the same as morale's answer but i have singeLine=""false"" in there.</p>

<pre><code>&lt;TextView 
android:layout_width=""fill_parent"" 
android:layout_height=""wrap_content"" 
android:maxLines=""4"" 
android:ellipsize=""marquee"" 
android:singleLine=""false"" 
android:text=""Hi make this a very long string that wraps at least 4 lines, seriously make it really really long so it gets cut off at the fourth line not joke.  Just do it!"" /&gt;
</code></pre>
"
"3611457","5512065","7","<p>Thanks all.  I modified Pilot_51's solution, to make sure I restored to the previous state.  I also threw in a change to support non-landscape and non-portrait screens (but haven't tested it on such a screen).</p>

<pre><code>prevOrientation = getRequestedOrientation();
if(getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {
    setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
} else if(getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT) {
    setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
} else {
    setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_NOSENSOR);
}
</code></pre>

<p>Then to restore it</p>

<pre><code>setRequestedOrientation(prevOrientation);
</code></pre>
"
"5033012","5535672","579","<p>As a mobile developer, I was sad to find nothing native that supports auto resizing. My searches did not turn up anything that worked for me and in the end, I spent the better half of my weekend and created my own auto resize text view. I will post the code here and hopefully it will be useful for someone else. </p>

<p>This class uses a static layout with the text paint of the original text view to measure the height. From there, I step down by 2 font pixels and remeasure until I have a size that fits. At the end, if the text still does not fit, I append an ellipsis. I had requirements to animate the text and reuse views and this seems to work well on the devices I have and seems to run fast enough for me. </p>

<pre><code>/**
 *               DO WHAT YOU WANT TO PUBLIC LICENSE
 *                    Version 2, December 2004
 * 
 * Copyright (C) 2004 Sam Hocevar &lt;sam@hocevar.net&gt;
 * 
 * Everyone is permitted to copy and distribute verbatim or modified
 * copies of this license document, and changing it is allowed as long
 * as the name is changed.
 * 
 *            DO WHAT YOU WANT TO PUBLIC LICENSE
 *   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
 * 
 *  0. You just DO WHAT YOU WANT TO.
 */

import android.content.Context;
import android.text.Layout.Alignment;
import android.text.StaticLayout;
import android.text.TextPaint;
import android.util.AttributeSet;
import android.util.TypedValue;
import android.widget.TextView;

/**
 * Text view that auto adjusts text size to fit within the view.
 * If the text size equals the minimum text size and still does not
 * fit, append with an ellipsis.
 * 
 * @author Chase Colburn
 * @since Apr 4, 2011
 */
public class AutoResizeTextView extends TextView {

    // Minimum text size for this text view
    public static final float MIN_TEXT_SIZE = 20;

    // Interface for resize notifications
    public interface OnTextResizeListener {
        public void onTextResize(TextView textView, float oldSize, float newSize);
    }

    // Our ellipse string
    private static final String mEllipsis = ""..."";

    // Registered resize listener
    private OnTextResizeListener mTextResizeListener;

    // Flag for text and/or size changes to force a resize
    private boolean mNeedsResize = false;

    // Text size that is set from code. This acts as a starting point for resizing
    private float mTextSize;

    // Temporary upper bounds on the starting text size
    private float mMaxTextSize = 0;

    // Lower bounds for text size
    private float mMinTextSize = MIN_TEXT_SIZE;

    // Text view line spacing multiplier
    private float mSpacingMult = 1.0f;

    // Text view additional line spacing
    private float mSpacingAdd = 0.0f;

    // Add ellipsis to text that overflows at the smallest text size
    private boolean mAddEllipsis = true;

    // Default constructor override
    public AutoResizeTextView(Context context) {
        this(context, null);
    }

    // Default constructor when inflating from XML file
    public AutoResizeTextView(Context context, AttributeSet attrs) {
        this(context, attrs, 0);
    }

    // Default constructor override
    public AutoResizeTextView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        mTextSize = getTextSize();
    }

    /**
     * When text changes, set the force resize flag to true and reset the text size.
     */
    @Override
    protected void onTextChanged(final CharSequence text, final int start, final int before, final int after) {
        mNeedsResize = true;
        // Since this view may be reused, it is good to reset the text size
        resetTextSize();
    }

    /**
     * If the text view size changed, set the force resize flag to true
     */
    @Override
    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        if (w != oldw || h != oldh) {
            mNeedsResize = true;
        }
    }

    /**
     * Register listener to receive resize notifications
     * @param listener
     */
    public void setOnResizeListener(OnTextResizeListener listener) {
        mTextResizeListener = listener;
    }

    /**
     * Override the set text size to update our internal reference values
     */
    @Override
    public void setTextSize(float size) {
        super.setTextSize(size);
        mTextSize = getTextSize();
    }

    /**
     * Override the set text size to update our internal reference values
     */
    @Override
    public void setTextSize(int unit, float size) {
        super.setTextSize(unit, size);
        mTextSize = getTextSize();
    }

    /**
     * Override the set line spacing to update our internal reference values
     */
    @Override
    public void setLineSpacing(float add, float mult) {
        super.setLineSpacing(add, mult);
        mSpacingMult = mult;
        mSpacingAdd = add;
    }

    /**
     * Set the upper text size limit and invalidate the view
     * @param maxTextSize
     */
    public void setMaxTextSize(float maxTextSize) {
        mMaxTextSize = maxTextSize;
        requestLayout();
        invalidate();
    }

    /**
     * Return upper text size limit
     * @return
     */
    public float getMaxTextSize() {
        return mMaxTextSize;
    }

    /**
     * Set the lower text size limit and invalidate the view
     * @param minTextSize
     */
    public void setMinTextSize(float minTextSize) {
        mMinTextSize = minTextSize;
        requestLayout();
        invalidate();
    }

    /**
     * Return lower text size limit
     * @return
     */
    public float getMinTextSize() {
        return mMinTextSize;
    }

    /**
     * Set flag to add ellipsis to text that overflows at the smallest text size
     * @param addEllipsis
     */
    public void setAddEllipsis(boolean addEllipsis) {
        mAddEllipsis = addEllipsis;
    }

    /**
     * Return flag to add ellipsis to text that overflows at the smallest text size
     * @return
     */
    public boolean getAddEllipsis() {
        return mAddEllipsis;
    }

    /**
     * Reset the text to the original size
     */
    public void resetTextSize() {
        if (mTextSize &gt; 0) {
            super.setTextSize(TypedValue.COMPLEX_UNIT_PX, mTextSize);
            mMaxTextSize = mTextSize;
        }
    }

    /**
     * Resize text after measuring
     */
    @Override
    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
        if (changed || mNeedsResize) {
            int widthLimit = (right - left) - getCompoundPaddingLeft() - getCompoundPaddingRight();
            int heightLimit = (bottom - top) - getCompoundPaddingBottom() - getCompoundPaddingTop();
            resizeText(widthLimit, heightLimit);
        }
        super.onLayout(changed, left, top, right, bottom);
    }

    /**
     * Resize the text size with default width and height
     */
    public void resizeText() {

        int heightLimit = getHeight() - getPaddingBottom() - getPaddingTop();
        int widthLimit = getWidth() - getPaddingLeft() - getPaddingRight();
        resizeText(widthLimit, heightLimit);
    }

    /**
     * Resize the text size with specified width and height
     * @param width
     * @param height
     */
    public void resizeText(int width, int height) {
        CharSequence text = getText();
        // Do not resize if the view does not have dimensions or there is no text
        if (text == null || text.length() == 0 || height &lt;= 0 || width &lt;= 0 || mTextSize == 0) {
            return;
        }

        // Get the text view's paint object
        TextPaint textPaint = getPaint();

        // Store the current text size
        float oldTextSize = textPaint.getTextSize();
        // If there is a max text size set, use the lesser of that and the default text size
        float targetTextSize = mMaxTextSize &gt; 0 ? Math.min(mTextSize, mMaxTextSize) : mTextSize;

        // Get the required text height
        int textHeight = getTextHeight(text, textPaint, width, targetTextSize);

        // Until we either fit within our text view or we had reached our min text size, incrementally try smaller sizes
        while (textHeight &gt; height &amp;&amp; targetTextSize &gt; mMinTextSize) {
            targetTextSize = Math.max(targetTextSize - 2, mMinTextSize);
            textHeight = getTextHeight(text, textPaint, width, targetTextSize);
        }

        // If we had reached our minimum text size and still don't fit, append an ellipsis
        if (mAddEllipsis &amp;&amp; targetTextSize == mMinTextSize &amp;&amp; textHeight &gt; height) {
            // Draw using a static layout
            // modified: use a copy of TextPaint for measuring
            TextPaint paint = new TextPaint(textPaint);
            // Draw using a static layout
            StaticLayout layout = new StaticLayout(text, paint, width, Alignment.ALIGN_NORMAL, mSpacingMult, mSpacingAdd, false);
            // Check that we have a least one line of rendered text
            if (layout.getLineCount() &gt; 0) {
                // Since the line at the specific vertical position would be cut off,
                // we must trim up to the previous line
                int lastLine = layout.getLineForVertical(height) - 1;
                // If the text would not even fit on a single line, clear it
                if (lastLine &lt; 0) {
                    setText("""");
                }
                // Otherwise, trim to the previous line and add an ellipsis
                else {
                    int start = layout.getLineStart(lastLine);
                    int end = layout.getLineEnd(lastLine);
                    float lineWidth = layout.getLineWidth(lastLine);
                    float ellipseWidth = textPaint.measureText(mEllipsis);

                    // Trim characters off until we have enough room to draw the ellipsis
                    while (width &lt; lineWidth + ellipseWidth) {
                        lineWidth = textPaint.measureText(text.subSequence(start, --end + 1).toString());
                    }
                    setText(text.subSequence(0, end) + mEllipsis);
                }
            }
        }

        // Some devices try to auto adjust line spacing, so force default line spacing
        // and invalidate the layout as a side effect
        setTextSize(TypedValue.COMPLEX_UNIT_PX, targetTextSize);
        setLineSpacing(mSpacingAdd, mSpacingMult);

        // Notify the listener if registered
        if (mTextResizeListener != null) {
            mTextResizeListener.onTextResize(this, oldTextSize, targetTextSize);
        }

        // Reset force resize flag
        mNeedsResize = false;
    }

    // Set the text size of the text paint object and use a static layout to render text off screen before measuring
    private int getTextHeight(CharSequence source, TextPaint paint, int width, float textSize) {
        // modified: make a copy of the original TextPaint object for measuring
        // (apparently the object gets modified while measuring, see also the
        // docs for TextView.getPaint() (which states to access it read-only)
        TextPaint paintCopy = new TextPaint(paint);
        // Update the text paint object
        paintCopy.setTextSize(textSize);
        // Measure using a static layout
        StaticLayout layout = new StaticLayout(source, paintCopy, width, Alignment.ALIGN_NORMAL, mSpacingMult, mSpacingAdd, true);
        return layout.getHeight();
    }

}
</code></pre>

<p><strong>Warning.</strong> There is an important fixed bug affecting Android 3.1 - 4.04 causing all AutoResizingTextView widgets not to work. Please read: <a href=""http://stackoverflow.com/a/21851157/2075875"">http://stackoverflow.com/a/21851157/2075875</a></p>
"
"5495225","5546070","6","<p>To answer my own question in case someone had the same problem:</p>

<p>One characteristics of AutoCompleteTextView is that if you change its text programmatically, it will drop down the selection list if the following two conditions are met: 1. It has focus; 2. The list is longer than 30-something items. </p>

<p>This behavior is actually, IMHO, a design flaw. When the program sets text to an AutoCompleteTextView, it would mean that the text is already correct, there is no point to popup the filtered list for user to further choose from. </p>

<pre><code>actv.setText(""Tim Hortons""); 
actv.setSelection(0, actv.getText().length()); 
actv.requestFocus(); 
actv.dismissDropDown();    // doesn't help 
</code></pre>

<p>In the above code, requestFocus() forces the ACTV to get the focus, and this causes the drop-down to pop up. I tried not to reqeuest focus, instead, I called clearFocus() after setting text. But the behavior is very .... unnatural. dissmissDropdown() doesn't help because .... I don't know, it just doesn't help. So, after much strugle, I came up with this work-around:</p>

<ol>
<li>When initializing the widget, I remembered the adapter in a class field.</li>
<li><p>Change the above code to:</p>

<pre><code>mAdapter = (ArrayAdapter&lt;String&gt;)actv.getAdapter(); // mAdapter is a class field        
actv.setText(""Tim Hortons""); 
actv.setSelection(0, actv.getText().length()); 
actv.setAdapter((ArrayAdapter&lt;String&gt;)null); // turn off the adapter
actv.requestFocus();
Handler handler = new Handler() {
public void handleMessage(Message msg) {
    ((AutoCompleteTextView)msg.obj).setAdapter(mAdapter);
    };
Message msg = mHandler.obtainMessage();
msg.obj = actv;
handler.sendMessageDelayed(msg, 200);   // turn it back on after 200ms
</code></pre></li>
</ol>

<p>Here the trick is set the ACTV's adapter to null. Because there is no adapter, of course the system will not pop up the drop-down. But the message will reset the adapter back to the ACTV after the programmed delay of 200ms, and the ACTV will work normally as usual.</p>

<p>This works for me!</p>
"
"2322234","5550969","11","<p>There is <a href=""http://android-developers.blogspot.com/2011/03/identifying-app-installations.html"">an excellent post on the Android Developer's Blog discussing this</a>.</p>

<p>It recommends against using <code>TelephonyManager.getDeviceId()</code> as it doesn't work on Android devices which aren't phones such as tablets, it requires the <code>READ_PHONE_STATE</code> permission and it doesn't work reliably on all phones.</p>

<p>Instead you could use one of the following:</p>

<ul>
<li>Mac Address</li>
<li>Serial Number</li>
<li>ANDROID_ID</li>
</ul>

<p>The post discusses the pros and cons of each and it's worth reading so you can work out which would be the best for your use.</p>
"
"3996938","5564665","2","<p>None of the above solutions have worked for me, instead I get every child (a checkedTextView) from the ListView and see if it is checked or not:</p>

<pre><code>            ListView myListView = myViewActivity.getListView();
        ArrayList&lt;String&gt; selectedChildren2 = new ArrayList&lt;String&gt;();

        for(int i = 0;i&lt;myListView.getChildCount();i++)
        {
            CheckedTextView c = (CheckedTextView) myListView.getChildAt(i);
            if(c.isChecked())
            {
                String child = c.getText().toString();
                selectedChildren.add(child);
                }
        }
</code></pre>
"
"2322234","5626213","57","<p>As Dave Webb mentions, the <a href=""http://android-developers.blogspot.com/2011/03/identifying-app-installations.html"">Android Developer Blog has an article</a> that covers this.</p>

<p>I spoke with someone at Google to get some additional clarification on a few items.  Here's what I discovered that's NOT mentioned in the aforementioned blog post:</p>

<ul>
<li>ANDROID_ID is the preferred solution.  ANDROID_ID is perfectly reliable on versions of Android &lt;=2.1 or >=2.3.  Only 2.2 has the problems mentioned in the post.</li>
<li>Several devices by several manufacturers are affected by the ANDROID_ID bug in 2.2.</li>
<li>As far as I've been able to determine, all affected devices have <a href=""http://code.google.com/p/android/issues/detail?id=10603"">the same ANDROID_ID</a>, which is <a href=""http://www.google.com/search?sourceid=chrome&amp;ie=UTF-8&amp;q=9774d56d682e549c"">9774d56d682e549c</a>.  Which is also the same device id reported by the emulator, btw.</li>
<li>Google believes that OEMs have patched the issue for many or most of their devices, but I was able to verify that as of the beginning of April 2011, at least, it's still quite easy to find devices that have the broken ANDROID_ID.</li>
</ul>

<p>Based on Google's recommendations, I implemented a class that will generate a unique UUID for each device, using ANDROID_ID as the seed where appropriate, falling back on TelephonyManager.getDeviceId() as necessary, and if that fails, resorting to a randomly generated unique UUID that is persisted across app restarts (but not app re-installations).</p>

<pre><code>import android.content.Context;
import android.content.SharedPreferences;
import android.provider.Settings.Secure;
import android.telephony.TelephonyManager;

import java.io.UnsupportedEncodingException;
import java.util.UUID;

public class DeviceUuidFactory {

    protected static final String PREFS_FILE = ""device_id.xml"";
    protected static final String PREFS_DEVICE_ID = ""device_id"";
    protected static volatile UUID uuid;

    public DeviceUuidFactory(Context context) {
        if (uuid == null) {
            synchronized (DeviceUuidFactory.class) {
                if (uuid == null) {
                    final SharedPreferences prefs = context
                            .getSharedPreferences(PREFS_FILE, 0);
                    final String id = prefs.getString(PREFS_DEVICE_ID, null);
                    if (id != null) {
                        // Use the ids previously computed and stored in the
                        // prefs file
                        uuid = UUID.fromString(id);
                    } else {
                        final String androidId = Secure.getString(
                            context.getContentResolver(), Secure.ANDROID_ID);
                        // Use the Android ID unless it's broken, in which case
                        // fallback on deviceId,
                        // unless it's not available, then fallback on a random
                        // number which we store to a prefs file
                        try {
                            if (!""9774d56d682e549c"".equals(androidId)) {
                                uuid = UUID.nameUUIDFromBytes(androidId
                                        .getBytes(""utf8""));
                            } else {
                                final String deviceId = ((TelephonyManager) 
                                        context.getSystemService(
                                            Context.TELEPHONY_SERVICE)
                                            .getDeviceId();
                                uuid = deviceId != null ? UUID
                                        .nameUUIDFromBytes(deviceId
                                                .getBytes(""utf8"")) : UUID
                                        .randomUUID();
                            }
                        } catch (UnsupportedEncodingException e) {
                            throw new RuntimeException(e);
                        }
                        // Write the value out to the prefs file
                        prefs.edit()
                                .putString(PREFS_DEVICE_ID, uuid.toString())
                                .commit();
                    }
                }
            }
        }
    }

    /**
     * Returns a unique UUID for the current android device. As with all UUIDs,
     * this unique ID is ""very highly likely"" to be unique across all Android
     * devices. Much more so than ANDROID_ID is.
     * 
     * The UUID is generated by using ANDROID_ID as the base key if appropriate,
     * falling back on TelephonyManager.getDeviceID() if ANDROID_ID is known to
     * be incorrect, and finally falling back on a random UUID that's persisted
     * to SharedPreferences if getDeviceID() does not return a usable value.
     * 
     * In some rare circumstances, this ID may change. In particular, if the
     * device is factory reset a new device ID may be generated. In addition, if
     * a user upgrades their phone from certain buggy implementations of Android
     * 2.2 to a newer, non-buggy version of Android, the device ID may change.
     * Or, if a user uninstalls your app on a device that has neither a proper
     * Android ID nor a Device ID, this ID may change on reinstallation.
     * 
     * Note that if the code falls back on using TelephonyManager.getDeviceId(),
     * the resulting ID will NOT change after a factory reset. Something to be
     * aware of.
     * 
     * Works around a bug in Android 2.2 for many devices when using ANDROID_ID
     * directly.
     * 
     * @see http://code.google.com/p/android/issues/detail?id=10603
     * 
     * @return a UUID that may be used to uniquely identify your device for most
     *         purposes.
     */
    public UUID getDeviceUuid() {
        return uuid;
    }
}
</code></pre>
"
"5694933","5695129","73","<blockquote>
  <p><code>Environment.getExternalStorageState()</code> returns path to internal SD mount point like ""/mnt/sdcard""</p>
</blockquote>

<p>No, <code>Environment.getExternalStorageDirectory()</code> refers to whatever the device manufacturer considered to be ""external storage"". On some devices, this is removable media, like an SD card. On some devices, this is a portion of on-device flash. Here, ""external storage"" means ""the stuff accessible via USB Mass Storage mode when mounted on a host machine"", at least for Android 1.x and 2.x.</p>

<blockquote>
  <p>But the question is about external SD. How to get a path like ""/mnt/sdcard/external_sd"" (it may differ from device to device)?</p>
</blockquote>

<p>Android has no concept of ""external SD"", aside from external storage, as described above.</p>

<p>If a device manufacturer has elected to have external storage be on-board flash and also has an SD card, you will need to contact that manufacturer to determine whether or not you can use the SD card (not guaranteed) and what the rules are for using it, such as what path to use for it.</p>

<hr>

<p><strong>UPDATE</strong></p>

<p>Two recent things of note:</p>

<p>First, on Android 4.4+, you do not have write access to removable media (e.g., ""external SD""), except for any locations on that media that might be returned by <code>getExternalFilesDirs()</code> and <code>getExternalCacheDirs()</code>. See <a href=""http://www.doubleencore.com/2014/03/android-external-storage/"">Dave Smith's excellent analysis</a> of this, particularly if you want the low-level details.</p>

<p>Second, lest anyone quibble on whether or not removable media access is otherwise part of the Android SDK, here is <a href=""https://groups.google.com/d/msg/android-platform/14VUiIgwUjY/2rZvrNV64QsJ"">Dianne Hackborn's assessment</a>:</p>

<blockquote>
  <p>...keep in mind: until Android 4.4, the official Android platform has not supported SD cards at <em>all</em> except for two special cases: the old school storage layout where external storage is an SD card (which is still supported by the platform today), and a small feature added to Android 3.0 where it would scan additional SD cards and add them to the media provider and give apps read-only access to their files (which is also still supported in the platform today).</p>
  
  <p>Android 4.4 is the first release of the platform that has actually allowed applications to use SD cards for storage.  Any access to them prior to that was through private, unsupported APIs.  We now have a quite rich API in the platform that allows applications to make use of SD cards in a supported way, in better ways than they have been able to before: they can make free use of their app-specific storage area without requiring any permissions in the app, and can access any other files on the SD card as long as they go through the file picker, again without needing any special permissions.</p>
</blockquote>
"
"5763304","5763334","0","<p>As you can see in the <a href=""http://developer.android.com/reference/android/view/View.html#setVisibility%28int%29"" rel=""nofollow"">documentation</a>, you cannot set the visibility to false. In your case you should probably use:</p>

<pre><code>scrollview.setVisibility(Visibility.GONE);
</code></pre>
"
"5763304","5763335","0","<p>Does this help?</p>

<pre><code>((ScrollView)findViewById(R.id.QuranGalleryScrollView)).setOnTouchListener(null);
</code></pre>
"
"5763304","5763338","-2","<p>on button click listener just do </p>

<pre><code>ScrollView sView = (ScrollView)findViewById(R.id.ScrollView01);

sView.setVerticalScrollBarEnabled(false);
sView.setHorizontalScrollBarEnabled(false);
</code></pre>

<p>so that scroll bar is not enabled on button click</p>
"
"5763304","5763815","65","<p>Several points to begin with:</p>

<ol>
<li>You cannot disable the scrolling of a ScrollView. You would need to extend to ScrollView and override the <code>onTouchEvent</code> method to return <code>false</code> when some condition is matched.</li>
<li>The Gallery component scrolls horizontally regardless of whether it is in a ScrollView or not - a ScrollView provides only vertical scrolling (you need a HorizontalScrollView for horizontal scrolling)</li>
<li>You seem to say you have a problem with the image stretching itself -- this has nothing to do with the ScrollView, you can change how an ImageView scales with the <code>android:scaleType</code> property (XML) or the <code>setScaleType</code> method - for instance <code>ScaleType.CENTER</code> will not stretch your image and will center it at it's original size </li>
</ol>

<p>You could modify <code>ScrollView</code> as follows to disable scrolling</p>

<pre><code>class LockableScrollView extends ScrollView {

    ...

    // true if we can scroll (not locked)
    // false if we cannot scroll (locked)
    private boolean mScrollable = true;

    public void setScrollingEnabled(boolean enabled) {
        mScrollable = enabled;
    }

    public boolean isScrollable() {
        return mScrollable;
    }

    @Override
    public boolean onTouchEvent(MotionEvent ev) {
        switch (ev.getAction()) {
            case MotionEvent.ACTION_DOWN:
                // if we can scroll pass the event to the superclass
                if (mScrollable) return super.onTouchEvent(ev);
                // only continue to handle the touch event if scrolling enabled
                return mScrollable; // mScrollable is always false at this point
            default:
                return super.onTouchEvent(ev);
        }
    }

    @Override
    public boolean onInterceptTouchEvent(MotionEvent ev) {
        // Don't do anything with intercepted touch events if 
        // we are not scrollable
        if (!mScrollable) return false;
        else return super.onInterceptTouchEvent(ev);
    }

}
</code></pre>

<p>You would then use </p>

<pre><code>&lt;com.mypackagename.LockableScrollView 
    android:id=""@+id/QuranGalleryScrollView"" 
    android:layout_height=""fill_parent"" 
    android:layout_width=""fill_parent""&gt;

    &lt;Gallery android:id=""@+id/Gallery"" 
        android:layout_width=""fill_parent"" 
        android:layout_height=""fill_parent""
        android:scrollbars=""horizontal""&gt;
    &lt;/Gallery&gt;

&lt;/com.mypackagename.LockableScrollView&gt;
</code></pre>

<p>in your XML file (just changed the <code>ScrollView</code> to your special <code>LockableScrollView</code>).</p>

<p>Then call</p>

<pre><code>((LockableScrollView)findViewById(R.id.QuranGalleryScrollView)).setIsScrollable(false);
</code></pre>

<p>to disable scrolling of the view.</p>

<p>I think that you have more than just the issue of disabling scrolling though to achieve your desired result (the gallery will remain scrollable with the above code for instance) - I'd recommend doing some more research on each of the three components (Gallery, ScrollView, ImageView) to see what properties each one has and how it behaves.</p>
"
"5832368","5832391","9","<p>there is no difference. You should define what you think is the difference, and check for that. Is a galaxy tab a phone? or a tablet? and why?</p>

<p>You should define what specific features you are looking for, and code for that.</p>

<p>It seems you are looking for 'tilt'. I think this is the same as the accelerometer (is that a word?). You can just check if the device supports it, using:</p>

<pre><code>public class Accel extends Activity implements SensorListener {
...
  SensorManager sensorMgr = (SensorManager) getSystemService(SENSOR_SERVICE);
  boolean accelSupported = sensorMgr.registerListener(this,
        SENSOR_ACCELEROMETER,
        SENSOR_DELAY_UI);
...
}
</code></pre>

<p>(from <a href=""http://stuffthathappens.com/blog/2009/03/15/android-accelerometer/"">http://stuffthathappens.com/blog/2009/03/15/android-accelerometer/</a> . i have not tested it)</p>
"
"5832368","5832816","-1","<p>I think this is the easiest way to be honest. This will check the screen size that's being used:</p>

<pre><code>Display display = getWindowManager().getDefaultDisplay(); 
int width = display.getWidth();
int height = display.getHeight();
</code></pre>

<p>Best of luck!</p>
"
"2471935","5847091","7","<p>I have recently found a thread <a href=""http://stackoverflow.com/questions/541966/android-how-do-i-do-a-lazy-load-of-images-in-listview"">here</a>, as I have to do a similar thing for a listview with images, but the principle is simple, as you can read in the first sample class shown there (by jleedev).
You get the Input stream of the image (from web)</p>

<pre><code>private InputStream fetch(String urlString) throws MalformedURLException, IOException {
    DefaultHttpClient httpClient = new DefaultHttpClient();
    HttpGet request = new HttpGet(urlString);
    HttpResponse response = httpClient.execute(request);
    return response.getEntity().getContent();
}
</code></pre>

<p>Then you store the image as Drawable and you can pass it to the ImageView (via setImageDrawable). Again from the upper code snippet take a look at the entire thread. </p>

<pre><code>InputStream is = fetch(urlString);
Drawable drawable = Drawable.createFromStream(is, ""src"");
</code></pre>
"
"5495225","5896791","3","<p>You can also enable/disable the drop-down like so:</p>

<pre><code>// disable
actv.setDropDownHeight(0);
// enable
actv.setDropDownHeight(LayoutParams.WRAP_CONTENT);
</code></pre>
"
"4617898","5943460","3","<p>For defining the selector drawable choice</p>

<pre><code>&lt;selector xmlns:android=""http://schemas.android.com/apk/res/android""&gt;
    &lt;item android:state_selected=""true""   
        android:drawable=""@drawable/img_down"" /&gt;
    &lt;item android:state_selected=""false""   
        android:drawable=""@drawable/img_up"" /&gt;
&lt;/selector&gt;
</code></pre>

<p>I have to use android:state_pressed instead of android:state_selected</p>

<pre><code>&lt;selector xmlns:android=""http://schemas.android.com/apk/res/android""&gt;
    &lt;item android:state_pressed =""true""   
        android:drawable=""@drawable/img_down"" /&gt;
    &lt;item android:state_pressed =""false""   
        android:drawable=""@drawable/img_up"" /&gt;
&lt;/selector&gt;
</code></pre>
"
"6070805","6070857","19","<p>I would subclass the widget and override the key event handling in order to block the <code>Enter</code> key:</p>

<pre><code>class MyTextView extends EditText
{
    ...
    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event)
    {
        if (keyCode==KeyEvent.KEYCODE_ENTER) 
        {
            // Just ignore the [Enter] key
            return true;
        }
        // Handle all other keys in the default way
        return super.onKeyDown(keyCode, event);
    }
}
</code></pre>
"
"6070805","6070877","4","<p>try this</p>

<pre><code>  @Override
        public boolean onKeyDown(int keyCode, KeyEvent event) {
            if (keyCode == KeyEvent.KEYCODE_ENTER)
            {
                //Nothing
                return true;
            }
            return super.onKeyDown(keyCode, event);
        }
</code></pre>
"
"4894885","6095846","1","<p>You could also do something like the below and use endswith.</p>

<pre><code>public void walkdir(File dir) {
    String txtPattern = "".txt"";
    String jpgPattern = "".jpg"";
    String mp3Pattern = "".mp3"";

    File listFile[] = dir.listFiles();

    if (listFile != null) {
        for (int i = 0; i &lt; listFile.length; i++) {

            if (listFile[i].isDirectory()) {
                walkdir(listFile[i]);
            } else {
              if (listFile[i].getName().endsWith(txtPattern)){
                                  //put in txt folder
                              }else if (listFile[i].getName().endsWith(jpgPattern)){
                                  // put in jpg folder
                              }else if (istFile[i].getName().endsWith(mp3Pattern)) {
                                  // put in  mp3 folder
              }
            }
        }
    }

}
</code></pre>

<p>Sorry, haven't checked the work but it should do it for you.</p>
"
"6176391","6177270","5","<p>I had the same problem. There's one trick that I'm using to deal with this problem:</p>

<pre><code>public void onClick(View v) {
    button.requestFocusFromTouch(); //prevents from loosing focus and scrolling view down
    ....
}
</code></pre>
"
"6200533","6200598","47","<p>You have two options:</p>

<p>Option 1 (only works for bold, italic and underline):</p>

<pre><code>String s = ""&lt;b&gt;Bolded text&lt;/b&gt;, &lt;i&gt;italic text&lt;/i&gt;, even &lt;u&gt;underlined&lt;/u&gt;!""
TextView tv = (TextView)findViewById(R.id.THE_TEXTVIEW_ID);
tv.setText(Html.fromHtml(s));
</code></pre>

<p>Option 2:</p>

<p>Use a <a href=""http://developer.android.com/reference/android/text/Spannable.html"">Spannable</a>; it is more complicated, but you can dynamically modify the text attributes (not only bold/italic, also colors).</p>
"
"6200533","6200606","3","<p>It would be </p>

<pre><code>yourTextView.setTypeface(null,Typeface.DEFAULT_BOLD);
</code></pre>

<p>and italic should be able to be with replacing Typeface.DEFAULT_BOLD with Typeface.DEFAULT_ITALC.</p>

<p>Let me know how it works.</p>
"
"6200533","6200618","4","<p>Use <code>textView.setTypeface(Typeface tf, int style);</code> to set style property of the <a href=""http://developer.android.com/reference/android/widget/TextView.html"" rel=""nofollow""><code>TextView</code></a>. See the <a href=""http://developer.android.com/reference/android/widget/TextView.html#setTypeface%28android.graphics.Typeface%29"" rel=""nofollow"">developer documentation</a> for more info.</p>
"
"6200533","6200621","111","<p>Try this to set textview style to bold and italic</p>

<pre><code>textView.setTypeface(textView.getTypeface(), Typeface.BOLD);
textView.setTypeface(textView.getTypeface(), Typeface.ITALIC);
textView.setTypeface(textView.getTypeface(), Typeface.BOLD_ITALIC);
</code></pre>
"
"6200533","6200631","5","<p>try this to set your TextView  style by java code</p>

<pre><code>txt1.setTypeface(null,Typeface.BOLD_ITALIC);
</code></pre>
"
"6200533","6200841","479","<pre><code>textView.setTypeface(null, Typeface.BOLD_ITALIC);
textView.setTypeface(null, Typeface.BOLD);
textView.setTypeface(null, Typeface.ITALIC);
textView.setTypeface(null, Typeface.NORMAL);
</code></pre>

<p>Use what you want.</p>
"
"6200533","6201555","8","<pre><code>TextView text = (TextView)findViewById(R.id.THE_TEXTVIEW_ID);
</code></pre>

<p>now set the textview properties..</p>

<pre><code>text.setTypeface(null, Typeface.BOLD);  //-- for only bold the text
text.setTypeface(null, Typeface.BOLD_ITALIC);  //-- for  bold &amp; italic the text
text.setTypeface(null, Typeface.ITALIC);  // -- for  italic the text
</code></pre>
"
"2795833","6236110","107","<p>If you use getResources().getConfiguration().orientation on some devices you will get it wrong. We used that approach initially in <a href=""http://apphance.com"">http://apphance.com</a>. Thanks to remote logging of Apphance we could see it on different devices and we saw that fragmentation plays its role here. 
I saw weird cases: for example alternating portrait and square(?!) on HTC Desire HD:</p>

<pre><code>CONDITION[17:37:10.345] screen: rotation: 270 orientation: square
CONDITION[17:37:12.774] screen: rotation: 0 orientation: portrait
CONDITION[17:37:15.898] screen: rotation: 90
CONDITION[17:37:21.451] screen: rotation: 0
CONDITION[17:38:42.120] screen: rotation: 270 orientation: square
</code></pre>

<p>or not changing orientation at all:</p>

<pre><code>CONDITION[11:34:41.134] screen: rotation: 0
CONDITION[11:35:04.533] screen: rotation: 90
CONDITION[11:35:06.312] screen: rotation: 0
CONDITION[11:35:07.938] screen: rotation: 90
CONDITION[11:35:09.336] screen: rotation: 0
</code></pre>

<p>On the other hand, width() and height() is always correct (it is used by window manager, so it should better be). I'd say the best idea is to do the width/height checking ALWAYS. If you think about a moment, this is exactly what you want - to know if width is smaller than height (portrait), the opposite (landscape) or if they are the same (square).</p>

<p>Then it comes down to this simple code:</p>



<pre class=""lang-java prettyprint-override""><code>public int getScreenOrientation()
{
    Display getOrient = getWindowManager().getDefaultDisplay();
    int orientation = Configuration.ORIENTATION_UNDEFINED;
    if(getOrient.getWidth()==getOrient.getHeight()){
        orientation = Configuration.ORIENTATION_SQUARE;
    } else{ 
        if(getOrient.getWidth() &lt; getOrient.getHeight()){
            orientation = Configuration.ORIENTATION_PORTRAIT;
        }else { 
             orientation = Configuration.ORIENTATION_LANDSCAPE;
        }
    }
    return orientation;
}
</code></pre>
"
"5357455","6264829","25","<p>Simpler solution without using regex:</p>

<pre><code>import android.text.InputFilter;
import android.text.Spanned;

/**
 * Input filter that limits the number of decimal digits that are allowed to be
 * entered.
 */
public class DecimalDigitsInputFilter implements InputFilter {

  private final int decimalDigits;

  /**
   * Constructor.
   * 
   * @param decimalDigits maximum decimal digits
   */
  public DecimalDigitsInputFilter(int decimalDigits) {
    this.decimalDigits = decimalDigits;
  }

  @Override
  public CharSequence filter(CharSequence source,
      int start,
      int end,
      Spanned dest,
      int dstart,
      int dend) {


    int dotPos = -1;
    int len = dest.length();
    for (int i = 0; i &lt; len; i++) {
      char c = dest.charAt(i);
      if (c == '.' || c == ',') {
        dotPos = i;
        break;
      }
    }
    if (dotPos &gt;= 0) {

      // protects against many dots
      if (source.equals(""."") || source.equals("",""))
      {
          return """";
      }
      // if the text is entered before the dot
      if (dend &lt;= dotPos) {
        return null;
      }
      if (len - dotPos &gt; decimalDigits) {
        return """";
      }
    }

    return null;
  }

}
</code></pre>

<p>To use: </p>

<pre><code>editText.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(2)});
</code></pre>
"
"2271131","6278184","15","<p>My own working solution:</p>

<pre><code>Calendar c = Calendar.getInstance();

String sDate = c.get(Calendar.YEAR) + ""-"" 
+ c.get(Calendar.MONTH)
+ ""-"" + c.get(Calendar.DAY_OF_MONTH) 
+ "" at "" + c.get(Calendar.HOUR_OF_DAY) 
+ "":"" + c.get(Calendar.MINUTE);
</code></pre>

<p>Hope this helps!</p>
"
"6290531","6290587","109","<p>I did something like this once;</p>

<pre><code>EditText usernameEditText = (EditText) findViewById(R.id.editUsername);
sUsername = usernameEditText.getText().toString();
if (sUsername.matches("""")) {
    Toast.makeText(this, ""You did not enter a username"", Toast.LENGTH_SHORT).show();
    return;
}
</code></pre>
"
"6290531","6290637","21","<p>try this : </p>

<pre><code>EditText txtUserName = (EditText) findViewById(R.id.txtUsername);
String strUserName = usernameEditText.getText().toString();
if (strUserName.trim().equals("""")) {
    Toast.makeText(this, ""plz enter your name "", Toast.LENGTH_SHORT).show();
    return;
}
</code></pre>

<p>or use the <a href=""http://developer.android.com/reference/android/text/TextUtils.html"">TextUtils</a> class like this : </p>

<pre><code>if(TextUtils.isEmpty(strUserName) {
    Toast.makeText(this, ""plz enter your name "", Toast.LENGTH_SHORT).show();
    return;
}
</code></pre>
"
"6290531","6290970","63","<pre><code>private boolean isEmpty(EditText etText) {
    if (etText.getText().toString().trim().length() &gt; 0) {
        return false;
    } else {
        return true;
    }
}
</code></pre>

<p><strong>OR As Per <a href=""http://stackoverflow.com/users/181714/audrius"">audrius</a></strong> </p>

<pre><code>  private boolean isEmpty(EditText etText) {
        return etText.getText().toString().trim().length() == 0;
    }
</code></pre>

<p>If function return <strong><code>false</code></strong> means edittext is <code>not empty</code> and return <strong><code>true</code></strong> means edittext is <code>empty</code>... </p>
"
"4605527","6327095","345","<pre><code>/// Converts 14 dip into its equivalent px

Resources r = getResources();
float px = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 14, r.getDisplayMetrics());
</code></pre>
"
"6330260","6330356","0","<p>If you log in the user in <code>screen 1</code> and from there you go to the other screens, use </p>

<pre><code>Intent intent = new Intent(this, Screen1.class);
intent.addFlags(FLAG_ACTIVITY_CLEAR_TOP);
startActivity(intent);
</code></pre>
"
"6330260","6330376","2","<p>If you are using <code>startActivityForResult()</code> in your previous activities, just override <code>OnActivityResult()</code> and call the <code>finish();</code> method inside it in all activities.. This will do the job...</p>
"
"6330260","6330456","123","<p>Use: </p>

<pre><code>Intent intent = new Intent(getApplicationContext(), Home.class);
intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
startActivity(intent);
</code></pre>

<p>This will clear all the activities on top of home. </p>

<p>Assuming you are finishing the login screen when the user logs in and home is created and afterwards all the screens from 1 to 5 on top of that one. The code i posted will return you to home screen finishing all the other activites. You can add an extra in the intent and read that in the home screen activity and finish it also (maybe launch login screen again from there or something).</p>

<p>I am not sure but you can also try going to login with this flag. I don't know how the activities will be ordered in that case. So don't know if it will clear the ones below the screen you are on including the one you are currently on but its definitely the way to go.</p>

<p>Hope this helps. </p>
"
"6343166","6343299","906","<p>This exception is thrown when an application attempts to perform a networking operation on its main thread. Run your code in <a href=""http://developer.android.com/reference/android/os/AsyncTask.html""><code>AsyncTask</code></a>:</p>

<pre><code>class RetrieveFeedTask extends AsyncTask&lt;String, Void, RSSFeed&gt; {

    private Exception exception;

    protected RSSFeed doInBackground(String... urls) {
        try {
            URL url= new URL(urls[0]);
            SAXParserFactory factory =SAXParserFactory.newInstance();
            SAXParser parser=factory.newSAXParser();
            XMLReader xmlreader=parser.getXMLReader();
            RssHandler theRSSHandler=new RssHandler();
            xmlreader.setContentHandler(theRSSHandler);
            InputSource is=new InputSource(url.openStream());
            xmlreader.parse(is);
            return theRSSHandler.getFeed();
        } catch (Exception e) {
            this.exception = e;
            return null;
        }
    }

    protected void onPostExecute(RSSFeed feed) {
        // TODO: check this.exception 
        // TODO: do something with the feed
    }
}
</code></pre>

<p>How to execute the task:</p>

<pre><code>new RetrieveFeedTask().execute(urlToRssFeed);
</code></pre>

<p>Don't forget to add this to <code>AndroidManifest.xml</code> file:</p>

<pre><code>&lt;uses-permission android:name=""android.permission.INTERNET""/&gt;
</code></pre>
"
"3145089","6387209","24","<p>After searching for best implementation how to get best precise user location I managed to combine all the best methods and come up with following class:</p>

<pre><code>/**
 * Retrieve accurate location from GPS or network services. 
 * 
 *
 * Class usage example:
 * 
 * public void onCreate(Bundle savedInstanceState) {
 *      ...
 *      my_location = new MyLocation();
 *      my_location.init(main.this, locationResult);
 * }
 * 
 * 
 * public LocationResult locationResult = new LocationResult(){
 *      @Override
 *      public void gotLocation(final Location location){
 *          // do something
 *          location.getLongitude();
 *          location.getLatitude();
 *      }
 *  };
 */
class MyLocation{

    /**
     * If GPS is enabled. 
     * Use minimal connected satellites count.
     */
    private static final int min_gps_sat_count = 5;

    /**
     * Iteration step time.
     */
    private static final int iteration_timeout_step = 500;

    LocationResult locationResult;
    private Location bestLocation = null;
    private Handler handler = new Handler();
    private LocationManager myLocationManager; 
    public Context context;

    private boolean gps_enabled = false;

    private int counts    = 0;
    private int sat_count = 0;

    private Runnable showTime = new Runnable() {

         public void run() {
            boolean stop = false;
            counts++;
            System.println(""counts="" + counts);

            //if timeout (1 min) exceeded, stop tying
            if(counts &gt; 120){
                stop = true;
            }

            //update last best location
            bestLocation = getLocation(context);

            //if location is not ready or don`t exists, try again
            if(bestLocation == null &amp;&amp; gps_enabled){
                System.println(""BestLocation not ready, continue to wait"");
                handler.postDelayed(this, iteration_timeout_step);
            }else{
                //if best location is known, calculate if we need to continue to look for better location
                //if gps is enabled and min satellites count has not been connected or min check count is smaller then 4 (2 sec)  
                if(stop == false &amp;&amp; !needToStop()){
                    System.println(""Connected "" + sat_count + "" sattelites. continue waiting.."");
                    handler.postDelayed(this, iteration_timeout_step);
                }else{
                    System.println(""#########################################"");
                    System.println(""BestLocation finded return result to main. sat_count="" + sat_count);
                    System.println(""#########################################"");

                    // removing all updates and listeners
                    myLocationManager.removeUpdates(gpsLocationListener);
                    myLocationManager.removeUpdates(networkLocationListener);    
                    myLocationManager.removeGpsStatusListener(gpsStatusListener);
                    sat_count = 0;

                    // send best location to locationResult
                    locationResult.gotLocation(bestLocation);
                }
            }
         }
    };

    /**
     * Determine if continue to try to find best location
     */
    private Boolean needToStop(){

        if(!gps_enabled){
                          return true;
                     }
          else if(counts &lt;= 4){
                return false;
            }
            if(sat_count &lt; min_gps_sat_count){
                //if 20-25 sec and 3 satellites found then stop
                if(counts &gt;= 40 &amp;&amp; sat_count &gt;= 3){
                    return true;
                }
                return false;
            }
        }
        return true;
    }

    /**
     * Best location abstract result class
     */
    public static abstract class LocationResult{
         public abstract void gotLocation(Location location);
     }

    /**
     * Initialize starting values and starting best location listeners
     * 
     * @param Context ctx
     * @param LocationResult result
     */
    public void init(Context ctx, LocationResult result){
        context = ctx;
        locationResult = result;

        myLocationManager = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);

        gps_enabled = (Boolean) myLocationManager.isProviderEnabled(LocationManager.GPS_PROVIDER);

        bestLocation = null;
        counts = 0;

        // turning on location updates
        myLocationManager.requestLocationUpdates(""network"", 0, 0, networkLocationListener);
        myLocationManager.requestLocationUpdates(""gps"", 0, 0, gpsLocationListener);
        myLocationManager.addGpsStatusListener(gpsStatusListener);

        // starting best location finder loop
        handler.postDelayed(showTime, iteration_timeout_step);
    }

    /**
     * GpsStatus listener. OnChainged counts connected satellites count.
     */
    public final GpsStatus.Listener gpsStatusListener = new GpsStatus.Listener() {
        public void onGpsStatusChanged(int event) {

             if(event == GpsStatus.GPS_EVENT_SATELLITE_STATUS){
                try {
                    // Check number of satellites in list to determine fix state
                     GpsStatus status = myLocationManager.getGpsStatus(null);
                     Iterable&lt;GpsSatellite&gt;satellites = status.getSatellites();

                     sat_count = 0;

                     Iterator&lt;GpsSatellite&gt;satI = satellites.iterator();
                     while(satI.hasNext()) {
                         GpsSatellite satellite = satI.next();
                         System.println(""Satellite: snr="" + satellite.getSnr() + "", elevation="" + satellite.getElevation());                         
                         sat_count++;
                     }
                } catch (Exception e) {
                    e.printStackTrace();
                    sat_count = min_gps_sat_count + 1;
                }

                 System.println(""#### sat_count = "" + sat_count);
             }
         }
    };

    /**
     * Gps location listener.
     */
    public final LocationListener gpsLocationListener = new LocationListener(){
        @Override
         public void onLocationChanged(Location location){

        }
         public void onProviderDisabled(String provider){}
         public void onProviderEnabled(String provider){}
         public void onStatusChanged(String provider, int status, Bundle extras){}
    }; 

    /**
     * Network location listener.
     */
    public final LocationListener networkLocationListener = new LocationListener(){
        @Override
         public void onLocationChanged(Location location){

        }
         public void onProviderDisabled(String provider){}
         public void onProviderEnabled(String provider){}
         public void onStatusChanged(String provider, int status, Bundle extras){}
    }; 


    /**
     * Returns best location using LocationManager.getBestProvider()
     * 
     * @param context
     * @return Location|null
     */
    public static Location getLocation(Context context){
        System.println(""getLocation()"");

        // fetch last known location and update it
        try {
            LocationManager lm = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);

            Criteria criteria = new Criteria();
            criteria.setAccuracy(Criteria.ACCURACY_FINE);
             criteria.setAltitudeRequired(false);
             criteria.setBearingRequired(false);
             criteria.setCostAllowed(true);
             String strLocationProvider = lm.getBestProvider(criteria, true);

             System.println(""strLocationProvider="" + strLocationProvider);
             Location location = lm.getLastKnownLocation(strLocationProvider);
             if(location != null){
                return location;
             }
             return null;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }
}
</code></pre>

<p>This class tries to connect to <code>min_gps_sat_count</code> satellites if GPS is enabled. Else returns <code>LocationManager.getBestProvider()</code> location. Check the code!</p>
"
"6176391","6486348","19","<p>After struggling with that problem for quite some time, I've found a solution that seems to work without being too ugly. First, make sure that whatever ViewGroup (directly) contains your EditText has DescendantFocusability set to ""Before Descendants,"" Focusable set to ""true"" and FocusableInTouchMode set to ""true."" This will not be the ScrollView itself, but the layout inside where you have your various views. Next add an onTouchListener to your ScrollView that removes focus from the EditText whenever it is touched, like so:</p>

<pre><code>ScrollView scroll = (ScrollView)findViewById(R.id.scrollView1);
scroll.setOnTouchListener(new OnTouchListener() {

    @Override
    public boolean onTouch(View v, MotionEvent event) {
        if (myEditText.hasFocus()) {
            myEditText.clearFocus();
        }
        return false;
    }
});
</code></pre>

<p>Tell me if that doesn't fix it. What should happen is that the Layout gets focus instead of the EditText, so no scrolling should happen.</p>
"
"6495898","6496000","402","<p>Use <a href=""http://developer.android.com/reference/android/app/Fragment.html#getView%28%29"">getView()</a>. This will return the root view for the fragment, with this you can call <code>findViewById()</code>.</p>

<pre><code>ImageView imageView = (ImageView) getView().findViewById(R.id.foo);
</code></pre>
"
"6495898","6496013","216","<p>You need to inflate the Fragment's view and call <code>findViewById()</code> on the <code>View</code> it returns.</p>

<pre><code>public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

             View V = inflater.inflate(R.layout.testclassfragment, container, false);
             ImageView imageView = (ImageView)V.findViewById(R.id.my_image);

             return V;
    }
</code></pre>
"
"6495898","6496018","20","<p>Get first the fragment view and then get from this view your ImageView.</p>

<pre><code>public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
    View view = inflater.inflate(R.layout.testclassfragment, container, false);
    ImageView imageView = (ImageView) view.findViewById(R.id.my_image);
    return view;
}
</code></pre>
"
"6520718","6520733","6","<p>Try via <code>context.getResources().getDisplayMetrics()</code> if you have a context available.</p>
"
"6520718","6520756","3","<p>Try with the following code to get width and height of screen</p>

<pre><code>int widthOfscreen =0;
int heightOfScreen = 0;
DisplayMetrics dm = new DisplayMetrics();
        try {
            ((Activity) context).getWindowManager().getDefaultDisplay()
                    .getMetrics(dm);
        } catch (Exception ex) {
        }
         widthOfscreen  = dm.widthPixels;
heightOfScreen  = dm.heightPixels;
</code></pre>
"
"6520718","6520778","13","<p>From service:</p>

<pre><code>Display  display= ((WindowManager) getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
int width = display.getWidth(); 
int height = display.getHeight(); 
</code></pre>
"
"6520718","6521076","56","<p>If you're calling this outside of an Activity, you'll need to pass the context in (or get it through some other call).  Then use that to get your display metrics:</p>

<pre><code>DisplayMetrics metrics = context.getResources().getDisplayMetrics();
int width = metrics.widthPixels;
int height = metrics.heightPixels;
</code></pre>
"
"6520718","6526952","3","<pre><code>WindowManager w = getWindowManager();
Display d = w.getDefaultDisplay();
DisplayMetrics metrics = new DisplayMetrics();
d.getMetrics(metrics);

Log.d(""WIDTH: "", String.valueOf(d.getWidth()));
Log.d(""HEIGHT: "", String.valueOf(d.getHeight()));
</code></pre>
"
"2169649","6543674","2","<pre><code>package com.ImageConvertingDemo;

import java.io.BufferedInputStream;
import java.io.FileInputStream;

import android.app.Activity;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.util.Log;
import android.widget.EditText;
import android.widget.ImageView;

public class MyActivity extends Activity {
    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        EditText tv = (EditText)findViewById(R.id.EditText01);
        ImageView iv = (ImageView)findViewById(R.id.ImageView01);
        FileInputStream in;
        BufferedInputStream buf;
            try 
            {
                in = new FileInputStream(""/sdcard/smooth.png"");
                buf = new BufferedInputStream(in,1070);
                System.out.println(""1..................""+buf);
                byte[] bMapArray= new byte[buf.available()];
                tv.setText(bMapArray.toString());
                buf.read(bMapArray);
                Bitmap bMap = BitmapFactory.decodeByteArray(bMapArray, 0, bMapArray.length);

                /*for (int i = 0; i &lt; bMapArray.length; i++) 
                {
                System.out.print(""bytearray""+bMapArray[i]);
                }*/
                iv.setImageBitmap(bMap);
                //tv.setText(bMapArray.toString());
                //tv.setText(buf.toString());
                if (in != null) 
                {
                    in.close();
                }
                if (buf != null) 
                {
                    buf.close();
                }

            } 
            catch (Exception e) 
            {
                Log.e(""Error reading file"", e.toString());
            }
    }
}
</code></pre>
"
"2150078","6633445","4","<p>I used a little time to figure this out... I ran it some CastExceptions, but figured out that you can replace you LinearLayout in the layout.xml with the name of the class.</p>

<p>Like this:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;LinearLayout android:layout_width=""fill_parent"" android:layout_height=""fill_parent""
    xmlns:android=""http://schemas.android.com/apk/res/android"" android:id=""@+id/llMaster""&gt;

&lt;com.ourshoppingnote.RelativeLayoutThatDetectsSoftKeyboard android:background=""@drawable/metal_background""
    android:layout_width=""fill_parent"" android:layout_height=""fill_parent""
    android:id=""@+id/rlMaster"" &gt;
    &lt;LinearLayout android:layout_width=""fill_parent""
        android:layout_height=""1dip"" android:background=""@drawable/line""&gt;&lt;/LinearLayout&gt;

          ....

&lt;/com.ourshoppingnote.RelativeLayoutThatDetectsSoftKeyboard&gt;    


&lt;/LinearLayout&gt;
</code></pre>

<p>That way you do not run into any cast issues.</p>

<p>... and if you don't want to do this on every page, I recommend that you use ""MasterPage in Android"". See the link here:
<a href=""http://jnastase.alner.net/archive/2011/01/08/ldquomaster-pagesrdquo-in-android.aspx"" rel=""nofollow"">http://jnastase.alner.net/archive/2011/01/08/ldquomaster-pagesrdquo-in-android.aspx</a></p>
"
"5763304","6686169","1","<pre><code>@Override  
public boolean onInterceptTouchEvent(MotionEvent ev) {
    switch (ev.getAction()) {     
    case MotionEvent.ACTION_DOWN:         
        // if we can scroll pass the event to the superclass      
        if (mScrollable) return super.onInterceptTouchEvent(ev);      
        // only continue to handle the touch event if scrolling enabled    
        return mScrollable; // mScrollable is always false at this point     
        default:          
            return super.onInterceptTouchEvent(ev);      
            }
    }
</code></pre>
"
"2160619","6763689","107","<p>Here is a solution to the problem.  It is a subclass of TextView that actually works for ellipsizing.  The android-textview-multiline-ellipse code listed in an earlier answer I have found to be buggy in certain circumstances, as well as being under GPL, which doesn't really work for most of us.  Feel free to use this code freely and without attribution, or under the Apache license if you would prefer.  Note that there is a listener to notify you when the text becomes ellipsized, which I found quite useful myself.</p>

<pre><code>import java.util.ArrayList;
import java.util.List;

import android.content.Context;
import android.graphics.Canvas;
import android.text.Layout;
import android.text.Layout.Alignment;
import android.text.StaticLayout;
import android.text.TextUtils.TruncateAt;
import android.util.AttributeSet;
import android.widget.TextView;

public class EllipsizingTextView extends TextView {
    private static final String ELLIPSIS = ""..."";

    public interface EllipsizeListener {
        void ellipsizeStateChanged(boolean ellipsized);
    }

    private final List&lt;EllipsizeListener&gt; ellipsizeListeners = new ArrayList&lt;EllipsizeListener&gt;();
    private boolean isEllipsized;
    private boolean isStale;
    private boolean programmaticChange;
    private String fullText;
    private int maxLines = -1;
    private float lineSpacingMultiplier = 1.0f;
    private float lineAdditionalVerticalPadding = 0.0f;

    public EllipsizingTextView(Context context) {
        super(context);
    }

    public EllipsizingTextView(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    public EllipsizingTextView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
    }

    public void addEllipsizeListener(EllipsizeListener listener) {
        if (listener == null) {
            throw new NullPointerException();
        }
        ellipsizeListeners.add(listener);
    }

    public void removeEllipsizeListener(EllipsizeListener listener) {
        ellipsizeListeners.remove(listener);
    }

    public boolean isEllipsized() {
        return isEllipsized;
    }

    @Override
    public void setMaxLines(int maxLines) {
        super.setMaxLines(maxLines);
        this.maxLines = maxLines;
        isStale = true;
    }

    public int getMaxLines() {
        return maxLines;
    }

    @Override
    public void setLineSpacing(float add, float mult) {
        this.lineAdditionalVerticalPadding = add;
        this.lineSpacingMultiplier = mult;
        super.setLineSpacing(add, mult);
    }

    @Override
    protected void onTextChanged(CharSequence text, int start, int before, int after) {
        super.onTextChanged(text, start, before, after);
        if (!programmaticChange) {
            fullText = text.toString();
            isStale = true;
        }
    }

    @Override
    protected void onDraw(Canvas canvas) {
        if (isStale) {
            super.setEllipsize(null);
            resetText();
        }
        super.onDraw(canvas);
    }

    private void resetText() {
        int maxLines = getMaxLines();
        String workingText = fullText;
        boolean ellipsized = false;
        if (maxLines != -1) {
            Layout layout = createWorkingLayout(workingText);
            if (layout.getLineCount() &gt; maxLines) {
                workingText = fullText.substring(0, layout.getLineEnd(maxLines - 1)).trim();
                while (createWorkingLayout(workingText + ELLIPSIS).getLineCount() &gt; maxLines) {
                    int lastSpace = workingText.lastIndexOf(' ');
                    if (lastSpace == -1) {
                        break;
                    }
                    workingText = workingText.substring(0, lastSpace);
                }
                workingText = workingText + ELLIPSIS;
                ellipsized = true;
            }
        }
        if (!workingText.equals(getText())) {
            programmaticChange = true;
            try {
                setText(workingText);
            } finally {
                programmaticChange = false;
            }
        }
        isStale = false;
        if (ellipsized != isEllipsized) {
            isEllipsized = ellipsized;
            for (EllipsizeListener listener : ellipsizeListeners) {
                listener.ellipsizeStateChanged(ellipsized);
            }
        }
    }

    private Layout createWorkingLayout(String workingText) {
        return new StaticLayout(workingText, getPaint(), getWidth() - getPaddingLeft() - getPaddingRight(),
                Alignment.ALIGN_NORMAL, lineSpacingMultiplier, lineAdditionalVerticalPadding, false);
    }

    @Override
    public void setEllipsize(TruncateAt where) {
        // Ellipsize settings are not respected
    }
}
</code></pre>
"
"2795833","6786814","11","<pre><code>int ot = getResources().getConfiguration().orientation;
switch(ot)
        {

        case  Configuration.ORIENTATION_LANDSCAPE:

            Log.d(""my orient"" ,""ORIENTATION_LANDSCAPE"");
        break;
        case Configuration.ORIENTATION_PORTRAIT:
            Log.d(""my orient"" ,""ORIENTATION_PORTRAIT"");
            break;

        case Configuration.ORIENTATION_SQUARE:
            Log.d(""my orient"" ,""ORIENTATION_SQUARE"");
            break;
        case Configuration.ORIENTATION_UNDEFINED:
            Log.d(""my orient"" ,""ORIENTATION_UNDEFINED"");
            break;
            default:
            Log.d(""my orient"", ""default val"");
            break;
        }
</code></pre>
"
"2271131","6843283","3","<p>This would give the current date and time:</p>

<pre><code>public String getCurrDate()
{
    String dt;
    Date cal = Calendar.getInstance().getTime();
    dt = cal.toLocaleString();
    return dt;
}
</code></pre>
"
"5033012","6897297","2","<p>This solutions works for us:</p>

<pre><code>public class CustomFontButtonTextFit extends CustomFontButton
{
    private final float DECREMENT_FACTOR = .1f;

    public CustomFontButtonTextFit(Context context) {
        super(context);
    }

    public CustomFontButtonTextFit(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    public CustomFontButtonTextFit(Context context, AttributeSet attrs,
            int defStyle) {
        super(context, attrs, defStyle);
    }

    private synchronized void refitText(String text, int textWidth) {
        if (textWidth &gt; 0) 
        {
            float availableWidth = textWidth - this.getPaddingLeft()
                    - this.getPaddingRight();

            TextPaint tp = getPaint();
            Rect rect = new Rect();
            tp.getTextBounds(text, 0, text.length(), rect);
            float size = rect.width();

            while(size &gt; availableWidth)
            {
                setTextSize( getTextSize() - DECREMENT_FACTOR );
                tp = getPaint();

                tp.getTextBounds(text, 0, text.length(), rect);
                size = rect.width();
            }
        }
    }

    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) 
    {
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);

        int parentWidth = MeasureSpec.getSize(widthMeasureSpec);
        int parentHeight = MeasureSpec.getSize(heightMeasureSpec);

        refitText(this.getText().toString(), parentWidth);

        if(parentWidth &lt; getSuggestedMinimumWidth())
            parentWidth = getSuggestedMinimumWidth();

        if(parentHeight &lt; getSuggestedMinimumHeight())
            parentHeight = getSuggestedMinimumHeight();

        this.setMeasuredDimension(parentWidth, parentHeight);
    }

    @Override
    protected void onTextChanged(final CharSequence text, final int start,
            final int before, final int after) 
    {
        super.onTextChanged(text, start, before, after);

        refitText(text.toString(), this.getWidth());
    }

    @Override
    protected void onSizeChanged(int w, int h, int oldw, int oldh)
    {
        super.onSizeChanged(w, h, oldw, oldh);

        if (w != oldw) 
            refitText(this.getText().toString(), w);
    }
}
</code></pre>
"
"2736389","6923794","30","<p>While calling an activity </p>

<pre><code>Intent intent = new Intent(fromClass.this,toClass.class).putExtra(""myCustomerObj"",customerObj);
</code></pre>

<p>In toClass.java receive the activity by </p>

<pre><code>Customer customerObjInToClass = getIntent().getExtras().getParcelable(""myCustomerObj"");
</code></pre>

<p>make sure that customer class implements parcelable</p>

<pre><code>public class Customer implements Parcelable {

    private String firstName, lastName, Address;
    int Age;

    /* all your getter and setter methods */

    public Customer(Parcel in ) {
        readFromParcel( in );
    }

    public static final Parcelable.Creator CREATOR = new Parcelable.Creator() {
        public LeadData createFromParcel(Parcel in ) {
            return new Customer( in );
        }

        public Customer[] newArray(int size) {
            return new Customer[size];
        }
    };


    @Override
    public void writeToParcel(Parcel dest, int flags) {

        dest.writeString(firstName);
        dest.writeString(lastName);
        dest.writeString(Address);
        dest.writeInt(Age);
    }

    private void readFromParcel(Parcel in ) {

        firstName = in .readString();
        lastName = in .readString();
        Address = in .readString();
        Age = in .readInt();
    }
</code></pre>
"
"3996938","6931618","30","<p>kcoppock is right, you need to use valueAt(), the working code should be</p>

<pre><code>SparseBooleanArray checkedItems = categorySelector.getCheckedItemPositions();
if (checkedItems != null) {
    for (int i=0; i&lt;checkedItems.size(); i++) {
        if (checkedItems.valueAt(i)) {
            String item = categorySelector.getAdapter().getItem(
                                  checkedItems.keyAt(i)).toString();
            Log.i(TAG,item + "" was selected"");
        }
    }
}
</code></pre>
"
"5495225","6946936","8","<p>You can try these steps:</p>

<ol>
<li><p>When setting the text, also set the Threshold value to a large value so that the dropdown doesnot come.</p>

<pre><code> actv.setThreshold(1000);
</code></pre></li>
<li><p>Then override the OnTouch to set the threshold back to 1.</p>

<pre><code>   actv.setOnTouchListener(new OnTouchListener() {
                @Override
    public boolean onTouch(View v, MotionEvent event) {
        actv.setThreshold(1);
        return false;
    }
});
</code></pre></li>
</ol>
"
"2644134","6959917","3","<p>Set the title to empty string using builder.</p>

<pre><code>    Builder builder = new AlertDialog.Builder(context);
    builder.setTitle("""");
...
    builder.show();
</code></pre>
"
"2139134","6973877","17","<p>if your object class implements <strong><code>Serializable</code></strong>, you don't need to do anything else, you can pass a serializable object. <br> that's what i use.</p>
"
"2644134","6987605","7","<p>In your Custom_Dialog.java class add <code>requestWindowFeature(Window.FEATURE_NO_TITLE);
</code></p>

<pre><code>public class Custom_Dialog extends Dialog {

protected Custom_Dialog(Context context, int theme) {
    super(context, theme);
    // TODO Auto-generated constructor stub
    requestWindowFeature(Window.FEATURE_NO_TITLE); //This line 
}
</code></pre>

<p>}</p>
"
"2644134","7004151","27","<p>In your code if you use <code>requestWindowFeature(Window.FEATURE_NO_TITLE);</code>  be sure that it goes before <code>dialog.setContentView();</code> otherwise it causes the application to crash.</p>
"
"2217753","7037885","1","<p><strong>Following way very slowly in the running</strong></p>

<pre><code>mAgendaListView.setOnItemClickListener(new OnItemClickListener() {
public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {
//view.setBackgroundColor(Color.RED);

for(int i=0; i&lt;parent.getChildCount(); i++)
{
     if(i == position)
     {
               parent.getChildAt(i).setBackgroundColor(Color.BLUE);
     }
     else
     {
               parent.getChildAt(i).setBackgroundColor(Color.BLACK);
     }

 }
</code></pre>

<p><strong>Replaced by the following</strong></p>

<pre><code>int pos = 0;
int save = -1;
    @Override
    public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position,
            long id) {
            //Always set the item clicked blue background
            view.setBackgroundColor(Color.BLUE);

            if (pos == 0) {
                if (save != -1) {
                    parent.getChildAt(save).setBackgroundColor(Color.BLACK);
                }
                save = position;
                pos++;
                Log.d(""Pos = 0"", ""Running"");

            } else {
                parent.getChildAt(save).setBackgroundColor(Color.BLACK);
                save = position;
                pos = 0;
                Log.d(""Pos # 0"", ""Running"");
            }
</code></pre>
"
"2736389","7103200","2","<p>@alistair Yeah, I think I actually agree with you. Making those objects <strong><code>static</code></strong> is the better workaround if it's simply impractical to keep invoking <code>putExtra()</code> for every property you'd like to pass on. For example, right now, I want to pass an <code>ArrayList</code> that contains objects. I might as well make my ArrayList <strong><code>static</code></strong> instead.</p>
"
"4894885","7151600","9","<p>or you could just do</p>

<pre><code>MimeTypeMap.getFileExtensionFromUrl(myfile.toURL().toString() );
</code></pre>

<p>Note: this method is not very reliable though..</p>
"
"5033012","7288362","3","<p>I found the following to work nicely for me.  It doesn't loop and accounts for both height and width.  Note that it is important to specify the PX unit when calling setTextSize on the view.  </p>

<pre><code>Paint paint = adjustTextSize(getPaint(), numChars, maxWidth, maxHeight);
setTextSize(TypedValue.COMPLEX_UNIT_PX,paint.getTextSize());
</code></pre>

<p>Here is the routine I use, passing in the getPaint() from the view.  A 10 character string with a 'wide' character is used to estimate the width independent from the actual string.</p>

<pre><code>private static final String text10=""OOOOOOOOOO"";
public static Paint adjustTextSize(Paint paint, int numCharacters, int widthPixels, int heightPixels) {
    float width = paint.measureText(text10)*numCharacters/text10.length();
    float newSize = (int)((widthPixels/width)*paint.getTextSize());
    paint.setTextSize(newSize);

    // remeasure with font size near our desired result
    width = paint.measureText(text10)*numCharacters/text10.length();
    newSize = (int)((widthPixels/width)*paint.getTextSize());
    paint.setTextSize(newSize);

    // Check height constraints
    FontMetricsInt metrics = paint.getFontMetricsInt();
    float textHeight = metrics.descent-metrics.ascent;
    if (textHeight &gt; heightPixels) {
        newSize = (int)(newSize * (heightPixels/textHeight));
        paint.setTextSize(newSize);
    }

    return paint;
}
</code></pre>
"
"2617266","7288402","3","<p>I found the following to work nicely for me.  It doesn't loop and accounts for both height and width.  Note that it is important to specify the PX unit when calling setTextSize on the view.   Thanks to the tip in a previous post for this! </p>

<pre><code>Paint paint = adjustTextSize(getPaint(), numChars, maxWidth, maxHeight);
setTextSize(TypedValue.COMPLEX_UNIT_PX,paint.getTextSize());
</code></pre>

<p>Here is the routine I use, passing in the getPaint() from the view.  A 10 character string with a 'wide' character is used to estimate the width independent from the actual string.</p>

<pre><code>private static final String text10=""OOOOOOOOOO"";
public static Paint adjustTextSize(Paint paint, int numCharacters, int widthPixels, int heightPixels) {
    float width = paint.measureText(text10)*numCharacters/text10.length();
    float newSize = (int)((widthPixels/width)*paint.getTextSize());
    paint.setTextSize(newSize);

    // remeasure with font size near our desired result
    width = paint.measureText(text10)*numCharacters/text10.length();
    newSize = (int)((widthPixels/width)*paint.getTextSize());
    paint.setTextSize(newSize);

    // Check height constraints
    FontMetricsInt metrics = paint.getFontMetricsInt();
    float textHeight = metrics.descent-metrics.ascent;
    if (textHeight &gt; heightPixels) {
        newSize = (int)(newSize * (heightPixels/textHeight));
        paint.setTextSize(newSize);
    }

    return paint;
}
</code></pre>
"
"5495225","7320542","12","<p>Another solution is to clear the focus before setting the text:</p>

<pre><code>mContactTxt.setFocusable(false);
mContactTxt.setFocusableInTouchMode(false);
mContactTxt.setText("""");            
mContactTxt.setFocusable(true);
mContactTxt.setFocusableInTouchMode(true);
</code></pre>
"
"2169649","7353722","3","<p>To display images and videos try this:</p>

<pre><code>    Intent intent = new Intent();
    intent = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
    startActivityForResult(intent, 1);
    startActivityForResult(Intent.createChooser(intent,""Wybierz plik""), SELECT_FILE);
</code></pre>
"
"6176391","7376538","3","<p>Here is what I did</p>

<pre><code> &lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    android:layout_width=""fill_parent"" style=""@style/measurementTableRowStyle""
    android:focusable=""true"" android:layout_height=""fill_parent""&gt;
    &lt;requestFocus&gt;&lt;/requestFocus&gt;
    &lt;LinearLayout android:id=""@+id/linearLayout1""
        android:orientation=""horizontal"" android:layout_width=""fill_parent""
        android:layout_height=""wrap_content""&gt;
        &lt;TextView android:id=""@+id/desc_text"" android:text=""Value : ""
            style=""@style/attributeNameTextStyle"" android:layout_width=""wrap_content""
            android:focusable=""true"" android:layout_height=""wrap_content""&gt;
            &lt;requestFocus&gt;&lt;/requestFocus&gt;
        &lt;/TextView&gt;

        &lt;TextView style=""@style/attributeValueStyle"" android:id=""@+id/value_text""
            android:text=""TextView"" android:layout_width=""wrap_content""
            android:layout_height=""wrap_content""&gt;&lt;/TextView&gt;
    &lt;/LinearLayout&gt;
</code></pre>

<p>The reason is in such cases you have to make all other views focus-able inside the scrollview by an explicit <code>android:focusable=""true""</code> and then <code>&lt;requestFocus&gt;&lt;/requestFocus&gt;</code>  . This should work everytime IMO</p>
"
"4946295","7410863","2","<p>Yes, I agreed with the above comments. And indeed, it does seem like the right (or at least the easiest?) thing to do is to specify (in XML) an initial layout height of ""0px"" -- and then you can  pass in another argument for ""toHeight"" (i.e. the ""final height"") to the constructor of your custom Animation sub-class, e.g. in the example above, it would look something like so:</p>

<pre><code>    public DropDownAnim( View v, int toHeight ) { ... }
</code></pre>

<p>Anyways, hope that helps! :) </p>
"
"2736389","7454611","14","<p>Use a class with static fields:</p>

<pre><code>public class Globals {
    public static Customer customer = new Customer();
}
</code></pre>

<p>Inside the activities you can use:</p>

<p>Activity From:</p>

<pre><code>Globals.customer = myCustomerFromActivity;
</code></pre>

<p>Activity Target:</p>

<pre><code>myCustomerTo = Globals.customer;
</code></pre>

<p>Its a easy way to pass information for activities.</p>
"
"3916330","7480473","115","<p>You can use this</p>

<pre><code>    WebView browser = (WebView) findViewById(R.id.webview);
    browser.getSettings().setLoadWithOverviewMode(true);
    browser.getSettings().setUseWideViewPort(true);
</code></pre>

<p>this fixes size based on screen size.</p>
"
"2973270","7497949","5","<p>Hey i also need 2 different fonts in my app for different widgeds!
I use this way:</p>

<p>In my Application class i create an static method:</p>

<pre><code>public static Typeface getTypeface(Context context, String typeface) {
    if (mFont == null) {
        mFont = Typeface.createFromAsset(context.getAssets(), typeface);
    }
    return mFont;
}
</code></pre>

<p>The String typeface represents the xyz.ttf in the asset folder. (i created an Constants Class)
Now you can use this everywhere in your app:</p>

<pre><code>mTextView = (TextView) findViewById(R.id.text_view);
mTextView.setTypeface(MyApplication.getTypeface(this, Constants.TYPEFACE_XY));
</code></pre>

<p>The only problem is, you need this for every widget where you want to use the Font!
But i think this is the best way.</p>
"
"6330260","7524977","7","<p>A solution I implemented for this (I think I found it on Stack&nbsp;Overflow somewhere, but I don't remember, so thanks to whoever did that in the first place):</p>

<p>From any of your activities do this:</p>

<pre><code>// Clear your session, remove preferences, etc.
Intent intent  = new Intent(getBaseContext(), LoginActivity.class);
intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
startActivity(intent);
</code></pre>

<p>Then in your LoginActivity, overwrite onKeyDown:</p>

<pre><code>public boolean onKeyDown(int keyCode, KeyEvent event) {
    if (keyCode == KeyEvent.KEYCODE_BACK) {
        moveTaskToBack(true);
        return true;
    }
    return super.onKeyDown(keyCode, event);
}
</code></pre>
"
"2973270","7580370","29","<p>Although I am upvoting Manish's answer as the fastest and most targeted method, I have also seen naive solutions which just recursively iterate through a view hierarchy and update all elements' typefaces in turn. Something like this:</p>

<pre><code>public static void applyFonts(final View v, Typeface fontToSet)
{
    try {
        if (v instanceof ViewGroup) {
            ViewGroup vg = (ViewGroup) v;
            for (int i = 0; i &lt; vg.getChildCount(); i++) {
                View child = vg.getChildAt(i);
                applyFonts(child, fontToSet);
            }
        } else if (v instanceof TextView) {
            ((TextView)v).setTypeface(fontToSet);
        }
    } catch (Exception e) {
        e.printStackTrace();
        // ignore
    }
}
</code></pre>

<p>You would need to call this function on your views both after inflating layout and in your Activity's <code>onContentChanged()</code> methods.</p>
"
"2780102","7596063","101","<p>I have work it like this,</p>

<pre><code>Intent i;
PackageManager manager = getPackageManager();
try {
    i = manager.getLaunchIntentForPackage(""app package name"");
    if (i == null)
        throw new PackageManager.NameNotFoundException();
    i.addCategory(Intent.CATEGORY_LAUNCHER);
    startActivity(i);
} catch (PackageManager.NameNotFoundException e) {

}
</code></pre>

<p>Hope it helps someone.</p>
"
"3166501","7627154","33","<p>Try this:</p>

<pre><code>DisplayMetrics dm = context.getResources().getDisplayMetrics();
int densityDpi = dm.densityDpi;
</code></pre>
"
"2217753","7649880","16","<p>This is a modification based on the above code, a simplest code:</p>

<pre><code>private static int save = -1;

public void onListItemClick(ListView parent, View v, int position, long id) { 

    parent.getChildAt(position).setBackgroundColor(Color.BLUE);

    if (save != -1 &amp;&amp; save != position){
        parent.getChildAt(save).setBackgroundColor(Color.BLACK);
    }

    save = position;                

}
</code></pre>

<p>I hope you find it useful</p>

<p>greetings!</p>
"
"2736389","7683528","6","<p>You can try to use that class.
Limitation is to do not use outside of one process.</p>

<p>One activity:</p>

<pre><code> final Object obj1 = new Object();
 final Intent in = new Intent();
 in.putExtra(EXTRA_TEST, new Sharable(obj1));
</code></pre>

<p>Other activity: </p>

<pre><code>final Sharable s = in.getExtras().getParcelable(EXTRA_TEST);
final Object obj2 = s.obj();

public final class Sharable implements Parcelable {

    private Object mObject;

    public static final Parcelable.Creator &lt; Sharable &gt; CREATOR = new Parcelable.Creator &lt; Sharable &gt; () {
        public Sharable createFromParcel(Parcel in ) {
            return new Sharable( in );
        }


        @Override
        public Sharable[] newArray(int size) {
            return new Sharable[size];
        }
    };

    public Sharable(final Object obj) {
        mObject = obj;
    }

    public Sharable(Parcel in ) {
        readFromParcel( in );
    }

    Object obj() {
        return mObject;
    }


    @Override
    public int describeContents() {
        return 0;
    }


    @Override
    public void writeToParcel(final Parcel out, int flags) {
        final long val = SystemClock.elapsedRealtime();
        out.writeLong(val);
        put(val, mObject);
    }

    private void readFromParcel(final Parcel in ) {
        final long val = in .readLong();
        mObject = get(val);
    }

    /////

    private static final HashMap &lt; Long, Object &gt; sSharableMap = new HashMap &lt; Long, Object &gt; (3);

    synchronized private static void put(long key, final Object obj) {
        sSharableMap.put(key, obj);
    }

    synchronized private static Object get(long key) {
        return sSharableMap.remove(key);
    }
}
</code></pre>
"
"5105354","7699556","9","<p>I have had some recent luck in some simple cases with the code
below.  I haven't finished all testing but....</p>

<pre><code>EditText input = (EditText) findViewById(R.id.Input);
input.requestFocus();    
input.dispatchTouchEvent(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN , 0, 0, 0));
input.dispatchTouchEvent(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_UP , 0, 0, 0));
</code></pre>

<p>And presto the keyboard shows up.</p>
"
"2403632","7724185","17","<p>I had the same problem and solved it with the following code. I'm not sure how it will behave on a phone with hardware keyboard.</p>

<pre><code>// TextEdit
final EditText textEdit = new EditText(this);

// Builder
AlertDialog.Builder alert = new AlertDialog.Builder(this);
alert.setTitle(""Enter text"");
alert.setView(textEdit);

alert.setPositiveButton(""Ok"", new DialogInterface.OnClickListener() {
    @Override
    public void onClick(DialogInterface dialog, int which) {
        String text = textEdit.getText().toString();
        finish();
    }
});

alert.setNegativeButton(""Cancel"", new DialogInterface.OnClickListener() {
    @Override
    public void onClick(DialogInterface dialog, int which) {
        finish();
    }
});

// Dialog
AlertDialog dialog = alert.create();
dialog.setOnShowListener(new OnShowListener() {

    @Override
    public void onShow(DialogInterface dialog) {
        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.showSoftInput(textEdit, InputMethodManager.SHOW_IMPLICIT);
    }
});

dialog.show();
</code></pre>
"
"4617898","7754032","35","<p>It's possible to do with <strong>just one image file</strong> using the ColorFilter method. However, ColorFilter expects to work with ImageViews and not Buttons, so you have to transform your buttons into ImageViews. This isn't a problem if you're using images as your buttons anyway, but it's more annoying if you had text... Anyway, assuming you find a way around the problem with text, here's the code to use:</p>

<pre><code>ImageView button = (ImageView) findViewById(R.id.button);
button.setColorFilter(0xFFFF0000, PorterDuff.Mode.MULTIPLY);
</code></pre>

<p>That applies a red overlay to the button (the color code is the hex code for fully opaque red - first two digits are transparency, then it's RR GG BB.).</p>
"
"2459916","7779151","12","<p>My implementation of ImageView with rounded corners widget, that (down||up)sizes image to required dimensions. It utilizes code form CaspNZ.</p>

<pre><code>public class ImageViewRounded extends ImageView {

    public ImageViewRounded(Context context) {
        super(context);
    }

    public ImageViewRounded(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    public ImageViewRounded(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
    }

    @Override
    protected void onDraw(Canvas canvas) {
        BitmapDrawable drawable = (BitmapDrawable) getDrawable();

        if (drawable == null) {
            return;
        }

        if (getWidth() == 0 || getHeight() == 0) {
            return; 
        }

        Bitmap fullSizeBitmap = drawable.getBitmap();

        int scaledWidth = getMeasuredWidth();
        int scaledHeight = getMeasuredHeight();

        Bitmap mScaledBitmap;
        if (scaledWidth == fullSizeBitmap.getWidth() &amp;&amp; scaledHeight == fullSizeBitmap.getHeight()) {
            mScaledBitmap = fullSizeBitmap;
        } else {
            mScaledBitmap = Bitmap.createScaledBitmap(fullSizeBitmap, scaledWidth, scaledHeight, true /* filter */);
        }

        Bitmap roundBitmap = ImageUtilities.getRoundedCornerBitmap(getContext(), mScaledBitmap, 5, scaledWidth, scaledHeight,
                false, false, false, false);
        canvas.drawBitmap(roundBitmap, 0, 0, null);

    }

}
</code></pre>
"
"5105354","7784904","86","<p>I had the same problem. Immediately after editText VISABILITY change from GONE to VISIBLE, I had to set the focus and display the soft keyboard. I achieved this using the following code:</p>

<pre><code>        (new Handler()).postDelayed(new Runnable() {

            public void run() {
//              ((EditText) findViewById(R.id.et_find)).requestFocus();
//              
                EditText yourEditText= (EditText) findViewById(R.id.et_find);
//              InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
//              imm.showSoftInput(yourEditText, InputMethodManager.SHOW_IMPLICIT);

                yourEditText.dispatchTouchEvent(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN , 0, 0, 0));
                yourEditText.dispatchTouchEvent(MotionEvent.obtain(SystemClock.uptimeMillis(), SystemClock.uptimeMillis(), MotionEvent.ACTION_UP , 0, 0, 0));                       

            }
        }, 200);
</code></pre>

<p>It works for me with 100ms delay, but failed without any delay or with only a delay of 1ms. </p>

<p>Commented part of code shows another approach, which works only on some devices. I tested on OS versions 2.2 (emulator), 2.2.1 (real device) and 1.6 (emulator).</p>

<p>This approach saved me a lot of pain.</p>
"
"2591036","7790386","33","<p>If you use <code>this.requestWindowFeature(Window.FEATURE_NO_TITLE)</code> user will still be able to see the title bar just for a moment during launch animation when activity starts through <code>onCreate</code>. If you use <code>@android:style/Theme.Black.NoTitleBar</code> as shown below then title bar won't be shown during launch animation.</p>

<pre><code>&lt;activity 
    android:name="".MainActivity"" 
    android:label=""My App""
    android:theme=""@android:style/Theme.Black.NoTitleBar""
    android:screenOrientation=""portrait""&gt;
</code></pre>

<p>above example will obviously override your existing application theme, if you have existing theme then add <code>&lt;item name=""android:windowNoTitle""&gt;true&lt;/item&gt;</code> to it. </p>
"
"2736389","7827593","100","<p>implement your class with Serializable. Let's suppose that this is your entity class:</p>

<pre><code>import java.io.Serializable;

@SuppressWarnings(""serial"") //with this annotation we are going to hide compiler warning
public class Deneme implements Serializable {

public Deneme(double id, String name){
    this.id = id;
    this.name = name;
}

public double getId() {
    return id;
}
public void setId(double id) {
    this.id = id;
}
public String getName() {
    return this.name;
}
public void setName(String name) {
    this.name = name;
}

private double id;
private String name;

}
</code></pre>

<p>we are sending the object called dene from X activity to Y activity. Somewhere in X activity; </p>

<pre><code>Deneme dene = new Deneme(4,""Mustafa"");
Intent i = new Intent(this, Y.class);
i.putExtra(""sampleObject"", dene);
startActivity(i);
</code></pre>

<p>In Y activity we are getting the object.</p>

<pre><code>Intent i = getIntent();
Deneme dene = (Deneme)i.getSerializableExtra(""sampleObject"");
</code></pre>

<p>that's it. </p>
"
"2617266","7875656","70","<p>The solution below incorporates all of the suggestions here. It starts with what was originally posted by Dunni. It uses a binary search like gjpc's, but it is a bit more readable. It also include's gregm's bug fixes and a bug-fix of my own.</p>

<pre><code>import android.content.Context;
import android.graphics.Paint;
import android.util.AttributeSet;
import android.util.TypedValue;
import android.widget.TextView;

public class FontFitTextView extends TextView {

    public FontFitTextView(Context context) {
        super(context);
        initialise();
    }

    public FontFitTextView(Context context, AttributeSet attrs) {
        super(context, attrs);
        initialise();
    }

    private void initialise() {
        mTestPaint = new Paint();
        mTestPaint.set(this.getPaint());
        //max size defaults to the initially specified text size unless it is too small
    }

    /* Re size the font so the specified text fits in the text box
     * assuming the text box is the specified width.
     */
    private void refitText(String text, int textWidth) 
    { 
        if (textWidth &lt;= 0)
            return;
        int targetWidth = textWidth - this.getPaddingLeft() - this.getPaddingRight();
        float hi = 100;
        float lo = 2;
        final float threshold = 0.5f; // How close we have to be

        mTestPaint.set(this.getPaint());

        while((hi - lo) &gt; threshold) {
            float size = (hi+lo)/2;
            mTestPaint.setTextSize(size);
            if(mTestPaint.measureText(text) &gt;= targetWidth) 
                hi = size; // too big
            else
                lo = size; // too small
        }
        // Use lo so that we undershoot rather than overshoot
        this.setTextSize(TypedValue.COMPLEX_UNIT_PX, lo);
    }

    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
    {
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
        int parentWidth = MeasureSpec.getSize(widthMeasureSpec);
        int height = getMeasuredHeight();
        refitText(this.getText().toString(), parentWidth);
        this.setMeasuredDimension(parentWidth, height);
    }

    @Override
    protected void onTextChanged(final CharSequence text, final int start, final int before, final int after) {
        refitText(text.toString(), this.getWidth());
    }

    @Override
    protected void onSizeChanged (int w, int h, int oldw, int oldh) {
        if (w != oldw) {
            refitText(this.getText().toString(), w);
        }
    }

    //Attributes
    private Paint mTestPaint;
}
</code></pre>
"
"2780102","7887139","10","<p>This is the code of my solution base on MasterGaurav solution:</p>

<pre><code>private void  launchComponent(String packageName, String name){
    Intent launch_intent = new Intent(""android.intent.action.MAIN"");
    launch_intent.addCategory(""android.intent.category.LAUNCHER"");
    launch_intent.setComponent(new ComponentName(packageName, name));
    launch_intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);

    activity.startActivity(launch_intent);
}

public void startApplication(String application_name){
    try{
        Intent intent = new Intent(""android.intent.action.MAIN"");
        intent.addCategory(""android.intent.category.LAUNCHER"");

        intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
        List&lt;ResolveInfo&gt; resolveinfo_list = activity.getPackageManager().queryIntentActivities(intent, 0);

        for(ResolveInfo info:resolveinfo_list){
            if(info.activityInfo.packageName.equalsIgnoreCase(application_name)){
                launchComponent(info.activityInfo.packageName, info.activityInfo.name);
                break;
            }
        }
    }
    catch (ActivityNotFoundException e) {
        Toast.makeText(activity.getApplicationContext(), ""There was a problem loading the application: ""+application_name,Toast.LENGTH_SHORT).show();
    }
}
</code></pre>
"
"2403632","7894007","1","<p>The original question concerns Dialogs and my EditText is on a regular view. Anyhow, I suspect this should work for most of you too. So here's what works for me (the above suggested highest rated method did nothing for me). Here's a custom EditView that does this (subclassing is not necessary, but I found it convenient for my purposes as I wanted to also grab the focus when the view becomes visible).</p>

<p>This is actually largely the same as the tidbecks answer. I actually didn't notice his answer at all as it had zero up votes. Then I was about to just comment his post, but it would have been too long, so I ended doing this post anyways. tidbeck points out that he's unsure how it works with devices having keyboards. I can confirm that the behaviour seems to be exactly the same in either case. That being such that on portrait mode the software keyboard gets popped up and on landscape it doesn't. Having the physical keyboard slid out or not makes no difference on my phone.</p>

<p>Because, I personally found the behaviour a bit awkward I opted for using: <code>InputMethodManager.SHOW_FORCED</code>. This works as I wanted it to work. The keyboard becomes visible regardless of the orientation, however, at least on my device it doesn't pop up if the hardware keyboard has been slid out.</p>

<pre><code>import android.app.Service;
import android.content.Context;
import android.util.AttributeSet;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.EditText;

public class BringOutTheSoftInputOnFocusEditTextView extends EditText {

    protected InputMethodManager inputMethodManager;

    public BringOutTheSoftInputOnFocusEditTextView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        init();
    }

    public BringOutTheSoftInputOnFocusEditTextView(Context context, AttributeSet attrs) {
        super(context, attrs);
        init();
    }

    public BringOutTheSoftInputOnFocusEditTextView(Context context) {
        super(context);
        init();
    }

    private void init() {
        this.inputMethodManager = (InputMethodManager)getContext().getSystemService(Service.INPUT_METHOD_SERVICE);
        this.setOnFocusChangeListener(new View.OnFocusChangeListener() {
            @Override
            public void onFocusChange(View v, boolean hasFocus) {
                if (hasFocus) {
                    BringOutTheSoftInputOnFocusEditTextView.this.inputMethodManager.showSoftInput(BringOutTheSoftInputOnFocusEditTextView.this, InputMethodManager.SHOW_FORCED);
                }
            }
        });
    }

    @Override
    protected void onVisibilityChanged(View changedView, int visibility) {
        super.onVisibilityChanged(changedView, visibility);
        if (visibility == View.VISIBLE) {
            BringOutTheSoftInputOnFocusEditTextView.this.requestFocus();
        }
    }

}
</code></pre>
"
"2271131","7922414","8","<p>From <a href=""http://stackoverflow.com/questions/7054945/how-to-get-full-date-with-correct-format"">How to get full date with correct format?</a>:</p>

<p>Please, use</p>

<pre><code>android.text.format.DateFormat.getDateFormat(Context context)
android.text.format.DateFormat.getTimeFormat(Context context)
</code></pre>

<p>to get valid time and date formats in sense of current user settings (12/24 time format, for example).</p>

<pre><code>import android.text.format.DateFormat;

private void some() {
    final Calendar t = Calendar.getInstance();
    textView.setText(DateFormat.getTimeFormat(this/*Context*/).format(t.getTime()));
}
</code></pre>
"
"2795833","7937919","4","<p>There is one more way of doing it:</p>

<pre><code>public int getOrientation()
{
    if(getResources().getDisplayMetrics().widthPixels&gt;getResources().getDisplayMetrics().heightPixels)
    { 
        Toast t = Toast.makeText(this,""LANDSCAPE"",Toast.LENGTH_SHORT);
        t.show();
        return 1;
    }
    else
    {
        Toast t = Toast.makeText(this,""PORTRAIT"",Toast.LENGTH_SHORT);
        t.show();
        return 2;
    }       
}
</code></pre>
"
"5033012","7943310","23","<p>I started with Chase's AutoResizeTextView class, and made a minor change so it would fit both vertically and horizontally.</p>

<p>I also discovered a bug which causes a Null Pointer Exception in the Layout Editor (in Eclipse) under some rather obscure conditions.</p>

<p><strong>Change 1:  Fit the text both vertically and horizontally</strong></p>

<p>Chase's original version reduces the text size until it fits vertically, but allows the text to be wider than the target.  In my case, I needed the text to fit a specified width.</p>

<p>This change makes it resize until the text fits both vertically and horizontally.</p>

<p>In <code>resizeText(</code><em>int</em><code>,</code><em>int</em><code>)</code> change from:</p>

<pre><code>// Get the required text height
int textHeight = getTextHeight(text, textPaint, width, targetTextSize);

// Until we either fit within our text view or we had reached our min text size, incrementally try smaller sizes
while(textHeight &gt; height &amp;&amp; targetTextSize &gt; mMinTextSize) {
    targetTextSize = Math.max(targetTextSize - 2, mMinTextSize);
    textHeight = getTextHeight(text, textPaint, width, targetTextSize);
    }
</code></pre>

<p>to:</p>

<pre><code>// Get the required text height
int textHeight = getTextHeight(text, textPaint, width, targetTextSize);
int textWidth  = getTextWidth(text, textPaint, width, targetTextSize);

// Until we either fit within our text view or we had reached our min text size, incrementally try smaller sizes
while(((textHeight &gt;= height) || (textWidth &gt;= width) ) &amp;&amp; targetTextSize &gt; mMinTextSize) {
    targetTextSize = Math.max(targetTextSize - 2, mMinTextSize);
    textHeight = getTextHeight(text, textPaint, width, targetTextSize);
    textWidth  = getTextWidth(text, textPaint, width, targetTextSize);
    }
</code></pre>

<p>Then, at the end of the file, append the <code>getTextWidth()</code> routine; it's just a slightly modified <code>getTextHeight()</code>.  It probably would be more efficient to combine them to one routine which returns both height and width.</p>

<pre><code>// Set the text size of the text paint object and use a static layout to render text off screen before measuring
private int getTextWidth(CharSequence source, TextPaint paint, int width, float textSize) {
    // Update the text paint object
    paint.setTextSize(textSize);
    // Draw using a static layout
    StaticLayout layout = new StaticLayout(source, paint, width, Alignment.ALIGN_NORMAL, mSpacingMult, mSpacingAdd, true);
    layout.draw(sTextResizeCanvas);
    return layout.getWidth();
}  
</code></pre>

<p><br>
<br>
<br>
<strong>Change 2:  Fix a EmptyStackException in the Eclipse Android Layout Editor</strong></p>

<p>Under rather obscure and very precise conditions, the Layout Editor will fail to display the graphical display of the layout; it will throw an ""EmptyStackException: null"" exception in com.android.ide.eclipse.adt.</p>

<p>The conditions required are:<br>
- create an AutoResizeTextView widget<br>
- create a style for that widget<br>
- specify the text item in the style; not in the widget definition  </p>

<p>as in:</p>

<p><em><strong>res/layout/main.xml:</em></strong></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    android:layout_width=""fill_parent""
    android:layout_height=""fill_parent""
    android:orientation=""vertical"" &gt;

    &lt;com.ajw.DemoCrashInADT.AutoResizeTextView
        android:id=""@+id/resizingText""
        style=""@style/myTextStyle"" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p><em><strong>res/values/myStyles.xml:</em></strong></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;resources&gt;

    &lt;style name=""myTextStyle"" parent=""@android:style/Widget.TextView""&gt;
        &lt;item name=""android:layout_height""&gt;wrap_content&lt;/item&gt;
        &lt;item name=""android:layout_width""&gt;fill_parent&lt;/item&gt;
        &lt;item name=""android:text""&gt;some message&lt;/item&gt;
    &lt;/style&gt;

&lt;/resources&gt;
</code></pre>

<p>With these files, selecting the <em>Graphical Layout</em> tab when editing <code>main.xml</code> will display:  </p>

<blockquote>
  <blockquote>
    <p>error!<br>
    EmptyStackException: null<br>
    Exception details are logged in Window > Show View > Error Log  </p>
  </blockquote>
</blockquote>

<p>instead of the graphical view of the layout.</p>

<p>To keep an already too-long story shorter, I tracked this down to the following lines (again in <code>resizeText</code>):</p>

<pre><code>// If there is a max text size set, use the lesser of that and the default text size
float targetTextSize = mMaxTextSize &gt; 0 ? Math.min(mTextSize, mMaxTextSize) : mTextSize;
</code></pre>

<p>The problem is that under the specific conditions, mTextSize is never initialized; it has the value 0.</p>

<p>With the above, <code>targetTextSize</code> is set to zero (as a result of Math.min).</p>

<p>That zero is passed to <code>getTextHeight()</code> (and <code>getTextWidth()</code>) as the <code>textSize</code> argument.  When it gets to<br>
<code>layout.draw(sTextResizeCanvas);</code><br>
we get the exception.</p>

<p>It's more efficient to test if <code>(mTextSize == 0)</code> at the beginning of <code>resizeText()</code> rather than testing in <code>getTextHeight()</code> and <code>getTextWidth()</code>; testing earlier saves all the intervening work.</p>

<p>With these updates, the file (as in my crash-demo test app) is now:</p>

<pre><code>//
// from:  http://stackoverflow.com/questions/5033012/auto-scale-textview-text-to-fit-within-bounds
//
//

package com.ajw.DemoCrashInADT;

import android.content.Context;
import android.graphics.Canvas;
import android.text.Layout.Alignment;
import android.text.StaticLayout;
import android.text.TextPaint;
import android.util.AttributeSet;
import android.util.TypedValue;
import android.widget.TextView;

/**
 * Text view that auto adjusts text size to fit within the view. If the text
 * size equals the minimum text size and still does not fit, append with an
 * ellipsis.
 *
 * 2011-10-29 changes by Alan Jay Weiner
 *              * change to fit both vertically and horizontally  
 *              * test mTextSize for 0 in resizeText() to fix exception in Layout Editor
 *
 * @author Chase Colburn
 * @since Apr 4, 2011
 */
public class AutoResizeTextView extends TextView {

    // Minimum text size for this text view
    public static final float MIN_TEXT_SIZE = 20;

    // Interface for resize notifications
    public interface OnTextResizeListener {
        public void onTextResize(TextView textView, float oldSize, float newSize);
    }

    // Off screen canvas for text size rendering
    private static final Canvas sTextResizeCanvas = new Canvas();

    // Our ellipse string
    private static final String mEllipsis = ""..."";

    // Registered resize listener
    private OnTextResizeListener mTextResizeListener;

    // Flag for text and/or size changes to force a resize
    private boolean mNeedsResize = false;

    // Text size that is set from code. This acts as a starting point for
    // resizing
    private float mTextSize;

    // Temporary upper bounds on the starting text size
    private float mMaxTextSize = 0;

    // Lower bounds for text size
    private float mMinTextSize = MIN_TEXT_SIZE;

    // Text view line spacing multiplier
    private float mSpacingMult = 1.0f;

    // Text view additional line spacing
    private float mSpacingAdd = 0.0f;

    // Add ellipsis to text that overflows at the smallest text size
    private boolean mAddEllipsis = true;


    // Default constructor override
    public AutoResizeTextView(Context context) {
        this(context, null);
    }


    // Default constructor when inflating from XML file
    public AutoResizeTextView(Context context, AttributeSet attrs) {
        this(context, attrs, 0);
    }


    // Default constructor override
    public AutoResizeTextView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        mTextSize = getTextSize();
    }


    /**
     * When text changes, set the force resize flag to true and reset the text
     * size.
     */
    @Override
    protected void onTextChanged(final CharSequence text, final int start,
            final int before, final int after) {
        mNeedsResize = true;
        // Since this view may be reused, it is good to reset the text size
        resetTextSize();
    }


    /**
     * If the text view size changed, set the force resize flag to true
     */
    @Override
    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        if (w != oldw || h != oldh) {
            mNeedsResize = true;
        }
    }


    /**
     * Register listener to receive resize notifications
     *
     * @param listener
     */
    public void setOnResizeListener(OnTextResizeListener listener) {
        mTextResizeListener = listener;
    }


    /**
     * Override the set text size to update our internal reference values
     */
    @Override
    public void setTextSize(float size) {
        super.setTextSize(size);
        mTextSize = getTextSize();
    }


    /**
     * Override the set text size to update our internal reference values
     */
    @Override
    public void setTextSize(int unit, float size) {
        super.setTextSize(unit, size);
        mTextSize = getTextSize();
    }


    /**
     * Override the set line spacing to update our internal reference values
     */
    @Override
    public void setLineSpacing(float add, float mult) {
        super.setLineSpacing(add, mult);
        mSpacingMult = mult;
        mSpacingAdd = add;
    }


    /**
     * Set the upper text size limit and invalidate the view
     *
     * @param maxTextSize
     */
    public void setMaxTextSize(float maxTextSize) {
        mMaxTextSize = maxTextSize;
        requestLayout();
        invalidate();
    }


    /**
     * Return upper text size limit
     *
     * @return
     */
    public float getMaxTextSize() {
        return mMaxTextSize;
    }


    /**
     * Set the lower text size limit and invalidate the view
     *
     * @param minTextSize
     */
    public void setMinTextSize(float minTextSize) {
        mMinTextSize = minTextSize;
        requestLayout();
        invalidate();
    }


    /**
     * Return lower text size limit
     *
     * @return
     */
    public float getMinTextSize() {
        return mMinTextSize;
    }


    /**
     * Set flag to add ellipsis to text that overflows at the smallest text size
     *
     * @param addEllipsis
     */
    public void setAddEllipsis(boolean addEllipsis) {
        mAddEllipsis = addEllipsis;
    }


    /**
     * Return flag to add ellipsis to text that overflows at the smallest text
     * size
     *
     * @return
     */
    public boolean getAddEllipsis() {
        return mAddEllipsis;
    }


    /**
     * Reset the text to the original size
     */
    public void resetTextSize() {
        super.setTextSize(TypedValue.COMPLEX_UNIT_PX, mTextSize);
        mMaxTextSize = mTextSize;
    }


    /**
     * Resize text after measuring
     */
    @Override
    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
        if (changed || mNeedsResize) {
            int widthLimit = (right - left) - getCompoundPaddingLeft()
                    - getCompoundPaddingRight();
            int heightLimit = (bottom - top) - getCompoundPaddingBottom()
                    - getCompoundPaddingTop();
            resizeText(widthLimit, heightLimit);
        }
        super.onLayout(changed, left, top, right, bottom);
    }


    /**
     * Resize the text size with default width and height
     */
    public void resizeText() {
        int heightLimit = getHeight() - getPaddingBottom() - getPaddingTop();
        int widthLimit = getWidth() - getPaddingLeft() - getPaddingRight();
        resizeText(widthLimit, heightLimit);
    }


    /**
     * Resize the text size with specified width and height
     *
     * @param width
     * @param height
     */
    public void resizeText(int width, int height) {
        CharSequence text = getText();
        // Do not resize if the view does not have dimensions or there is no
        // text
        // or if mTextSize has not been initialized
        if (text == null || text.length() == 0 || height &lt;= 0 || width &lt;= 0
                || mTextSize == 0) {
            return;
        }

        // Get the text view's paint object
        TextPaint textPaint = getPaint();

        // Store the current text size
        float oldTextSize = textPaint.getTextSize();

        // If there is a max text size set, use the lesser of that and the
        // default text size
        float targetTextSize = mMaxTextSize &gt; 0 ? Math.min(mTextSize, mMaxTextSize)
                : mTextSize;

        // Get the required text height
        int textHeight = getTextHeight(text, textPaint, width, targetTextSize);
        int textWidth = getTextWidth(text, textPaint, width, targetTextSize);

        // Until we either fit within our text view or we had reached our min
        // text size, incrementally try smaller sizes
        while (((textHeight &gt; height) || (textWidth &gt; width))
                &amp;&amp; targetTextSize &gt; mMinTextSize) {
            targetTextSize = Math.max(targetTextSize - 2, mMinTextSize);
            textHeight = getTextHeight(text, textPaint, width, targetTextSize);
            textWidth = getTextWidth(text, textPaint, width, targetTextSize);
        }

        // If we had reached our minimum text size and still don't fit, append
        // an ellipsis
        if (mAddEllipsis &amp;&amp; targetTextSize == mMinTextSize &amp;&amp; textHeight &gt; height) {
            // Draw using a static layout
            StaticLayout layout = new StaticLayout(text, textPaint, width,
                    Alignment.ALIGN_NORMAL, mSpacingMult, mSpacingAdd, false);
            layout.draw(sTextResizeCanvas);
            int lastLine = layout.getLineForVertical(height) - 1;
            int start = layout.getLineStart(lastLine);
            int end = layout.getLineEnd(lastLine);
            float lineWidth = layout.getLineWidth(lastLine);
            float ellipseWidth = textPaint.measureText(mEllipsis);

            // Trim characters off until we have enough room to draw the
            // ellipsis
            while (width &lt; lineWidth + ellipseWidth) {
                lineWidth = textPaint.measureText(text.subSequence(start, --end + 1)
                        .toString());
            }
            setText(text.subSequence(0, end) + mEllipsis);

        }

        // Some devices try to auto adjust line spacing, so force default line
        // spacing
        // and invalidate the layout as a side effect
        textPaint.setTextSize(targetTextSize);
        setLineSpacing(mSpacingAdd, mSpacingMult);

        // Notify the listener if registered
        if (mTextResizeListener != null) {
            mTextResizeListener.onTextResize(this, oldTextSize, targetTextSize);
        }

        // Reset force resize flag
        mNeedsResize = false;
    }


    // Set the text size of the text paint object and use a static layout to
    // render text off screen before measuring
    private int getTextHeight(CharSequence source, TextPaint paint, int width,
            float textSize) {
        // Update the text paint object
        paint.setTextSize(textSize);
        // Draw using a static layout
        StaticLayout layout = new StaticLayout(source, paint, width,
                Alignment.ALIGN_NORMAL, mSpacingMult, mSpacingAdd, true);
        layout.draw(sTextResizeCanvas);
        return layout.getHeight();
    }


    // Set the text size of the text paint object and use a static layout to
    // render text off screen before measuring
    private int getTextWidth(CharSequence source, TextPaint paint, int width,
            float textSize) {
        // Update the text paint object
        paint.setTextSize(textSize);
        // Draw using a static layout
        StaticLayout layout = new StaticLayout(source, paint, width,
                Alignment.ALIGN_NORMAL, mSpacingMult, mSpacingAdd, true);
        layout.draw(sTextResizeCanvas);
        return layout.getWidth();
    }

}
</code></pre>

<p><br>
<br>
A big thank you to Chase for posting the initial code.  I enjoyed reading through it to see how it worked, and I'm pleased to be able to add to it.</p>
"
"2139134","7984845","27","<p>For situations where you know you will be passing data within an application, use ""globals"" (like static Classes)</p>

<p><a href=""http://groups.google.com/group/android-developers/browse_thread/thread/235b3063a1656cf2/19afa9c47cc5bbd8"">Here</a> is what <a href=""https://plus.google.com/105051985738280261832/about"">Dianne Hackborn</a> (hackbod - a Google Android Software Engineer) had to say on the matter:</p>

<blockquote>
  <p>For situations where you know the activities are running in the same
  process, you can just share data through globals.  For example, you
  could have a global <code>HashMap&lt;String, WeakReference&lt;MyInterpreterState&gt;&gt;</code>
  and when you make a new MyInterpreterState come up with a unique name
  for it and put it in the hash map; to send that state to another
  activity, simply put the unique name into the hash map and when the
  second activity is started it can retrieve the MyInterpreterState from
  the hash map with the name it receives.</p>
</blockquote>
"
"2271131","8008216","44","<pre><code>public class XYZ extends Activity {

    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        //setContentView(R.layout.main);

        Calendar c = Calendar.getInstance();
        System.out.println(""Current time =&gt; ""+c.getTime());

        SimpleDateFormat df = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"");
        String formattedDate = df.format(c.getTime());
        // formattedDate have current date/time
        Toast.makeText(this, formattedDate, Toast.LENGTH_SHORT).show();


      // Now we display formattedDate value in TextView
        TextView txtView = new TextView(this);
        txtView.setText(""Current Date and Time : ""+formattedDate);
        txtView.setGravity(Gravity.CENTER);
        txtView.setTextSize(20);
        setContentView(txtView);
    }

}
</code></pre>

<p><img src=""http://i.stack.imgur.com/vuNVA.png"" alt=""enter image description here""></p>
"
"2403632","8018630","39","<p>You can request a soft keyboard right after creating the dialog (test onlatest SDK - r20)</p>

<pre><code>// create dialog
final AlertDialog dialog = ...; 

// request keyboard   
dialog.getWindow().setSoftInputMode (WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);
</code></pre>
"
"2695746","8052835","22","<p>Link: <a href=""http://www.androidsnippets.com/get-installed-applications-with-name-package-name-version-and-icon"" rel=""nofollow"">http://www.androidsnippets.com/get-installed-applications-with-name-package-name-version-and-icon</a></p>

<p>Here a good example:</p>

<pre><code>class PInfo {
    private String appname = """";
    private String pname = """";
    private String versionName = """";
    private int versionCode = 0;
    private Drawable icon;
    private void prettyPrint() {
        Log.v(appname + ""\t"" + pname + ""\t"" + versionName + ""\t"" + versionCode);
    }
}

private ArrayList&lt;PInfo&gt; getPackages() {
    ArrayList&lt;PInfo&gt; apps = getInstalledApps(false); /* false = no system packages */
    final int max = apps.size();
    for (int i=0; i&lt;max; i++) {
        apps.get(i).prettyPrint();
    }
    return apps;
}

private ArrayList&lt;PInfo&gt; getInstalledApps(boolean getSysPackages) {
    ArrayList&lt;PInfo&gt; res = new ArrayList&lt;PInfo&gt;();        
    List&lt;PackageInfo&gt; packs = getPackageManager().getInstalledPackages(0);
    for(int i=0;i&lt;packs.size();i++) {
        PackageInfo p = packs.get(i);
        if ((!getSysPackages) &amp;&amp; (p.versionName == null)) {
            continue ;
        }
        PInfo newInfo = new PInfo();
        newInfo.appname = p.applicationInfo.loadLabel(getPackageManager()).toString();
        newInfo.pname = p.packageName;
        newInfo.versionName = p.versionName;
        newInfo.versionCode = p.versionCode;
        newInfo.icon = p.applicationInfo.loadIcon(getPackageManager());
        res.add(newInfo);
    }
    return res; 
}
</code></pre>
"
"2217753","8106165","9","<p>No one seemed to provide any examples of doing this solely using an adapter, so I thought I would post my code snippet for displaying ListViews where the ""curSelected"" item has a different background:</p>

<pre><code>final ListView lv = (ListView)findViewById(R.id.lv);
lv.setAdapter(new BaseAdapter()
{
    public View getView(int position, View convertView, ViewGroup parent)
    {
        if (convertView == null)
        {
            convertView = new TextView(ListHighlightTestActivity.this);
            convertView.setPadding(10, 10, 10, 10);
            ((TextView)convertView).setTextColor(Color.WHITE);
        }

        convertView.setBackgroundColor((position == curSelected) ? 
            Color.argb(0x80, 0x20, 0xa0, 0x40) : Color.argb(0, 0, 0, 0));
        ((TextView)convertView).setText((String)getItem(position));

        return convertView;
    }

    public long getItemId(int position)
    {
        return position;
    }

    public Object getItem(int position)
    {
        return ""item "" + position;
    }

    public int getCount()
    {
        return 20;
    }
});
</code></pre>

<p>This has always been a helpful approach for me for when appearance of list items needs to change dynamically.</p>
"
"7723964","8149503","6","<p>To replace a fragment inside a ViewPager you can move source codes of ViewPager, PagerAdapter and FragmentStatePagerAdapter classes into your project and add following code.</p>

<p>into ViewPager:</p>

<pre><code>public void notifyItemChanged(Object oldItem, Object newItem) {
    if (mItems != null) {
            for (ItemInfo itemInfo : mItems) {
                        if (itemInfo.object.equals(oldItem)) {
                                itemInfo.object = newItem;
                        }
                    }
       }
       invalidate();
    }
</code></pre>

<p>into FragmentStatePagerAdapter:</p>

<pre><code>public void replaceFragmetns(ViewPager container, Fragment oldFragment, Fragment newFragment) {
       startUpdate(container);

       // remove old fragment

       if (mCurTransaction == null) {
            mCurTransaction = mFragmentManager.beginTransaction();
        }
       int position = getFragmentPosition(oldFragment);
        while (mSavedState.size() &lt;= position) {
            mSavedState.add(null);
        }
        mSavedState.set(position, null);
        mFragments.set(position, null);

        mCurTransaction.remove(oldFragment);

        // add new fragment

        while (mFragments.size() &lt;= position) {
            mFragments.add(null);
        }
        mFragments.set(position, newFragment);
        mCurTransaction.add(container.getId(), newFragment);

       finishUpdate(container);

       // ensure getItem returns newFragemtn after calling handleGetItemInbalidated()
       handleGetItemInbalidated(container, oldFragment, newFragment);

       container.notifyItemChanged(oldFragment, newFragment);
    }

protected abstract void handleGetItemInbalidated(View container, Fragment oldFragment, Fragment newFragment);
protected abstract int  getFragmentPosition(Fragment fragment);
</code></pre>

<p>handleGetItemInbalidated() ensures that after next call of getItem() it return newFragment
getFragmentPosition() returns position of the fragment in your adapter.</p>

<p>Now, to replace fragments call </p>

<pre><code>mAdapter.replaceFragmetns(mViewPager, oldFragment, newFragment);
</code></pre>

<p>If you interested in an example project ask me for the sources.</p>
"
"5694933","8152386","10","<p>It is possible to find where any additional SD cards are mounted by reading <code>/proc/mounts</code> (standard Linux file) and cross-checking against <a href=""http://vold.sourceforge.net/"">vold</a> data (<code>/system/etc/vold.conf</code>). And note, that the location returned by <code>Environment.getExternalStorageDirectory()</code> may not appear in vold configuration (in some devices it's internal storage that cannot be unmounted), but still has to be included in the list. However we didn't find a good way to <a href=""http://stackoverflow.com/questions/8151779/find-sd-card-volume-label-on-android"">describe them to the user</a>.</p>
"
"8181828","8181970","1","<p>Try taking a look at <a href=""http://stackoverflow.com/questions/3948934/synchronise-scrollview-scroll-positions-android"">this question</a> here on StackOverflow - it's not exactly the same as your question, but it gives an idea on how you can manage the scroll event of a <code>ScrollView</code>.</p>

<p>Basicly you need to create your own <code>CustomScrollView</code> by extending <code>ScrollView</code> and override <code>onScrollChanged(int x, int y, int oldx, int oldy)</code>. Then you need to reference this in your layout file instead of the standard <code>ScrollView</code> like <code>com.mypackage.CustomScrollView</code>.</p>
"
"8181828","8181995","5","<p>I think this has come up in the past. AFAIK, you can't <em>easily</em> detect that. My suggestion is that you take a look at <a href=""http://codesearch.google.com/codesearch#uX1GffpyOZk/core/java/android/widget/ScrollView.java""><code>ScrollView.java</code></a> (that's how we do things in Android land <kbd>:)</kbd>) and figure out how you can extend the class to provide the functionality you are looking for. This is what I would try first:</p>

<pre><code> @Override
 protected void onScrollChanged(int l, int t, int oldl, int oldt) {
     if (mScroller.isFinished()) {
         // do something, for example call a listener
     }
 }
</code></pre>
"
"8181828","8182003","0","<pre><code>        this.getListView().setOnScrollListener(new OnScrollListener(){
        @Override
        public void onScrollStateChanged(AbsListView view, int scrollState) {}

        @Override
        public void onScroll(AbsListView view, int firstVisibleItem,
            int visibleItemCount, int totalItemCount) {
                     if( firstVisibleItem + visibleItemCount &gt;= totalItemCount ) 
                              // Last item is shown...

            }
</code></pre>

<p>Hope the snippet help :)</p>
"
"5832368","8222549","1","<p>Please check out below code.</p>

<pre><code>private boolean isTabletDevice() {
  if (android.os.Build.VERSION.SDK_INT &gt;= 11) { // honeycomb
    // test screen size, use reflection because isLayoutSizeAtLeast is
    // only available since 11
    Configuration con = getResources().getConfiguration();
    try {
      Method mIsLayoutSizeAtLeast = con.getClass().getMethod(
      ""isLayoutSizeAtLeast"", int.class);
      boolean r = (Boolean) mIsLayoutSizeAtLeast.invoke(con,
      0x00000004); // Configuration.SCREENLAYOUT_SIZE_XLARGE
      return r;
    } catch (Exception x) {
      x.printStackTrace();
      return false;
    }
  }
  return false;
}
</code></pre>
"
"5357455","8272212","34","<p>More elegant way would be using a regular expression ( regex ) as follows:</p>

<pre><code>public class DecimalDigitsInputFilter implements InputFilter {

Pattern mPattern;

public DecimalDigitsInputFilter(int digitsBeforeZero,int digitsAfterZero) {
    mPattern=Pattern.compile(""[0-9]{0,"" + (digitsBeforeZero-1) + ""}+((\\.[0-9]{0,"" + (digitsAfterZero-1) + ""})?)||(\\.)?"");
}

@Override
public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {

        Matcher matcher=mPattern.matcher(dest);       
        if(!matcher.matches())
            return """";
        return null;
    }

}
</code></pre>

<p>To use it do: </p>

<pre><code>editText.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(5,2)});
</code></pre>
"
"2795833","8280391","-1","<p>I think this code may work after orientation change has take effect</p>

<pre><code>Display getOrient = getWindowManager().getDefaultDisplay();

int orientation = getOrient.getOrientation();
</code></pre>

<p>override Activity.onConfigurationChanged(Configuration newConfig) function and use newConfig,orientation if you want to get notified about the new orientation before calling setContentView.</p>
"
"5763304","8291144","17","<p>Adding to Joseph Earl response above, I also had to override the <code>onInterceptTouchEvent()</code> method.</p>

<pre><code>@Override
public boolean onInterceptTouchEvent(MotionEvent ev) {
    if (!mScrollable) return false;
    else return super.onInterceptTouchEvent(ev);
}
</code></pre>
"
"3996938","8308471","0","<p>I too used the solution gyller suggests that involves ""initiating"" the listview</p>

<p><code>ListView lv = getListView();
 for (int i = 0; i &lt; lv.getCount(); i++) {
     lv.setItemChecked(i, false);
 }</code></p>

<p>before calling getCheckItemPositions(), and it stopped producing erroneous results!</p>
"
"3331527","8331092","1","<p>I used code like this:</p>

<pre><code>  String filePath=Environment.getExternalStorageDirectory()+""/test_image.jpg"";
  BitmapFactory.Options options=new BitmapFactory.Options();
  InputStream is=new FileInputStream(filePath);
  BitmapFactory.decodeStream(is, null, options);
  is.close();
  is=new FileInputStream(filePath);
  // here w and h are the desired width and height
  options.inSampleSize=Math.max(options.outWidth/460, options.outHeight/288); //Max 460 x 288 is my desired...
  // bmp is the resized bitmap
  Bitmap bmp=BitmapFactory.decodeStream(is, null, options);
  is.close();
  Log.d(Constants.TAG, ""Scaled bitmap bytes, ""+bmp.getRowBytes()+"", width:""+bmp.getWidth()+"", height:""+bmp.getHeight());
</code></pre>

<p>I tried original image is 1230 x 1230, and got bitmap says is 330 x 330.<br>
And if tried 2590 x 3849, I'll got OutOfMemoryError.</p>

<p>I traced it, it still throw OutOfMemoryError on line ""BitmapFactory.decodeStream(is, null, options);"", if original bitmap too large...</p>
"
"7723964","8337574","4","<p>Works Great with AndroidTeam's solution, however I found that I needed the ability to go back much like <code>FrgmentTransaction.addToBackStack(null)</code>  But merely adding this will only cause the Fragment to be replaced  without notifying the ViewPager. Combining the provided solution with this minor enhancement will allow you to return to the previous state by merely overriding the activity's <code>onBackPressed()</code> method. The biggest drawback is that it will only go back one at a time which may result in multiple back clicks</p>

<pre><code>private ArrayList&lt;Fragment&gt; bFragments = new ArrayList&lt;Fragment&gt;();
private ArrayList&lt;Integer&gt; bPosition = new ArrayList&lt;Integer&gt;();

public void replaceFragmentsWithBackOut(ViewPager container, Fragment oldFragment, Fragment newFragment) {
    startUpdate(container);

    // remove old fragment

    if (mCurTransaction == null) {
         mCurTransaction = mFragmentManager.beginTransaction();
     }
    int position = getFragmentPosition(oldFragment);
     while (mSavedState.size() &lt;= position) {
         mSavedState.add(null);
     }

     //Add Fragment to Back List
     bFragments.add(oldFragment);

     //Add Pager Position to Back List
     bPosition.add(position);

     mSavedState.set(position, null);
     mFragments.set(position, null);

     mCurTransaction.remove(oldFragment);

     // add new fragment

     while (mFragments.size() &lt;= position) {
         mFragments.add(null);
     }
     mFragments.set(position, newFragment);
     mCurTransaction.add(container.getId(), newFragment);

    finishUpdate(container);

    // ensure getItem returns newFragemtn after calling handleGetItemInbalidated()
    handleGetItemInvalidated(container, oldFragment, newFragment);

    container.notifyItemChanged(oldFragment, newFragment);
 }


public boolean popBackImmediate(ViewPager container){
    int bFragSize = bFragments.size();
    int bPosSize = bPosition.size();

    if(bFragSize&gt;0 &amp;&amp; bPosSize&gt;0){
        if(bFragSize==bPosSize){
            int last = bFragSize-1;
            int position = bPosition.get(last);

            //Returns Fragment Currently at this position
            Fragment replacedFragment = mFragments.get(position);               
            Fragment originalFragment = bFragments.get(last);

            this.replaceFragments(container, replacedFragment, originalFragment);

            bPosition.remove(last);
            bFragments.remove(last);

            return true;
        }
    }

    return false;       
}
</code></pre>

<p>Hope this helps someone.</p>

<p>Also as far as <code>getFragmentPosition()</code> goes it's pretty much <code>getItem()</code> in reverse. You know which fragments go where, just make sure you return the correct position it will be in. Here's an example:</p>

<pre><code>    @Override
    protected int getFragmentPosition(Fragment fragment) {
            if(fragment.equals(originalFragment1)){
                return 0;
            }
            if(fragment.equals(replacementFragment1)){
                return 0;
            }
            if(fragment.equals(Fragment2)){
                return 1;
            }
        return -1;
    }
</code></pre>
"
"2471935","8353790","6","<p>Hi I have the most easiest code try this </p>

<pre><code>    public class ImageFromUrlExample extends Activity {
    @Override
    public void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            setContentView(R.layout.main);  
            ImageView imgView =(ImageView)findViewById(R.id.ImageView01);
            Drawable drawable = LoadImageFromWebOperations(""http://www.androidpeople.com/wp-content/uploads/2010/03/android.png"");
            imgView.setImageDrawable(drawable);

    }

    private Drawable LoadImageFromWebOperations(String url)
    {
          try{
        InputStream is = (InputStream) new URL(url).getContent();
        Drawable d = Drawable.createFromStream(is, ""src name"");
        return d;
      }catch (Exception e) {
        System.out.println(""Exc=""+e);
        return null;
      }
    }
   }
</code></pre>

<p>main.xml</p>

<pre><code>  &lt;LinearLayout 
    android:id=""@+id/LinearLayout01""
    android:layout_width=""fill_parent""
    android:layout_height=""fill_parent""
    xmlns:android=""http://schemas.android.com/apk/res/android""&gt;
   &lt;ImageView 
       android:id=""@+id/ImageView01""
       android:layout_height=""wrap_content"" 
       android:layout_width=""wrap_content""/&gt;
</code></pre>

<p></p>

<p>try this</p>
"
"4605527","8390420","55","<p>According to the Android Development Guide:</p>

<pre><code>px = dp * (dpi / 160)
</code></pre>

<p>But often you'll want do perform this the other way around when you receive a design that's stated in pixels. So:</p>

<pre><code>dp = px / (dpi / 160)
</code></pre>

<p>If you're on a 240dpi device this ratio is 1.5 (like stated before), so this means that a 60px icon equals 40dp in the application.</p>
"
"3916330","8413543","0","<p>This will help in adjusting the emulator according to the webpage:</p>

<pre><code>WebView wb;
//CALL THIS METHOD
wb.setInitialScale(50);
</code></pre>

<p>You can set the intial scale in percentage as shown above.</p>
"
"3349121","8478654","0","<p>It is possible to use <code>setOnKeyListener</code>. In this method, we can customize the input <code>edittext</code> !</p>
"
"2695746","8483920","32","<p>Another way to filter on system apps (works with the example above):</p>

<pre><code>/**
 * Return whether the given PackgeInfo represents a system package or not.
 * User-installed packages (Market or otherwise) should not be denoted as
 * system packages.
 * 
 * @param pkgInfo
 * @return
 */
private boolean isSystemPackage(PackageInfo pkgInfo) {
    return ((pkgInfo.applicationInfo.flags &amp; ApplicationInfo.FLAG_SYSTEM) != 0) ? true
            : false;
}
</code></pre>
"
"3331527","8497703","52","<p>Justin answer translated to code (works perfect for me):</p>

<pre><code>private Bitmap getBitmap(String path) {

Uri uri = getImageUri(path);
InputStream in = null;
try {
    final int IMAGE_MAX_SIZE = 1200000; // 1.2MP
    in = mContentResolver.openInputStream(uri);

    // Decode image size
    BitmapFactory.Options o = new BitmapFactory.Options();
    o.inJustDecodeBounds = true;
    BitmapFactory.decodeStream(in, null, o);
    in.close();



    int scale = 1;
    while ((o.outWidth * o.outHeight) * (1 / Math.pow(scale, 2)) &gt; 
          IMAGE_MAX_SIZE) {
       scale++;
    }
    Log.d(TAG, ""scale = "" + scale + "", orig-width: "" + o.outWidth + "", 
       orig-height: "" + o.outHeight);

    Bitmap b = null;
    in = mContentResolver.openInputStream(uri);
    if (scale &gt; 1) {
        scale--;
        // scale to max possible inSampleSize that still yields an image
        // larger than target
        o = new BitmapFactory.Options();
        o.inSampleSize = scale;
        b = BitmapFactory.decodeStream(in, null, o);

        // resize to desired dimensions
        int height = b.getHeight();
        int width = b.getWidth();
        Log.d(TAG, ""1th scale operation dimenions - width: "" + width + "",
           height: "" + height);

        double y = Math.sqrt(IMAGE_MAX_SIZE
                / (((double) width) / height));
        double x = (y / height) * width;

        Bitmap scaledBitmap = Bitmap.createScaledBitmap(b, (int) x, 
           (int) y, true);
        b.recycle();
        b = scaledBitmap;

        System.gc();
    } else {
        b = BitmapFactory.decodeStream(in);
    }
    in.close();

    Log.d(TAG, ""bitmap size - width: "" +b.getWidth() + "", height: "" + 
       b.getHeight());
    return b;
} catch (IOException e) {
    Log.e(TAG, e.getMessage(),e);
    return null;
}
</code></pre>
"
"8500283","8500327","4","<p>For <code>Splashscreen</code> you should use this line in <code>manifest</code> and don't use <code>getActionBar()</code></p>

<pre><code>&lt;item name=""android:windowActionBar""&gt;false&lt;/item&gt;
</code></pre>

<p>and once when Splash <code>Activity</code> is finished in the main <code>Activity</code> use below or nothing</p>

<pre><code>&lt;item name=""android:windowActionBar""&gt;true&lt;/item&gt;
</code></pre>
"
"8500283","8500332","0","<p>Put your splash screen in a separate activity and use <a href=""http://developer.android.com/reference/android/app/Activity.html#startActivityForResult%28android.content.Intent,%20int%29"" rel=""nofollow""><code>startActivityForResult</code></a> from your main activity's <code>onCreate</code> method to display it. This works because, according to the docs:</p>

<blockquote>
  <p>As a special case, if you call startActivityForResult() with a requestCode >= 0 during the initial onCreate(Bundle savedInstanceState)/onResume() of your activity, then your window will not be displayed until a result is returned back from the started activity. This is to avoid visible flickering when redirecting to another activity.</p>
</blockquote>

<p>You should probably do this only if the argument to <code>onCreate</code> is <code>null</code> (indicating a fresh launch of your activity, as opposed to a restart due to a configuration change).</p>
"
"8181828","8654048","1","<p>For a simple case like you described, you can probably get away with overriding fling method in your custom scroll view. Fling method gets called to perform ""deceleration"" every time user raises his finger from the screen. </p>

<p>So what you should do is something like this:</p>

<ol>
<li><p>Subclass ScrollView.  </p>

<pre><code>public class MyScrollView extends ScrollView { 

    private Scroller scroller;  
    private Runnable scrollerTask; 

    //...

    public MyScrollView(Context context, AttributeSet attrs) {
        super(context, attrs);

        scroller = new Scroller(getContext()); //or OverScroller for 3.0+
        scrollerTask = new Runnable() {
            @Override
            public void run() {
                scroller.computeScrollOffset();
                scrollTo(0, scroller.getCurrY());

                if (!scroller.isFinished()) {
                    MyScrollView.this.post(this);
                } else {
                    //deceleration ends here, do your code
                }
            }
        };
        //...
    }
}
</code></pre></li>
<li><p>Subclass fling method and DO NOT call superclass implementation.</p>

<pre><code>@Override  
public void fling(int velocityY) {  
    scroller.fling(getScrollX(), getScrollY(), 0, velocityY, 0, 0, 0, container.getHeight());
    post(scrollerTask);  

    //add any extra functions you need from android source code:
    //show scroll bars
    //change focus
    //etc.
}
</code></pre></li>
<li><p>Fling will not trigger if the user stops scrolling before raising up his finger (velocityY == 0). In case you want to intercept this sort of events aswell, override onTouchEvent.</p>

<pre><code>@Override
public boolean onTouchEvent(MotionEvent ev) {
    boolean eventConsumed = super.onTouchEvent(ev);
    if (eventConsumed &amp;&amp; ev.getAction() == MotionEvent.ACTION_UP) {
        if (scroller.isFinished()) {
            //do your code
        }
    }
    return eventConsumed;
}
</code></pre></li>
</ol>

<p><em>NOTE</em> Although this works, overriding fling method might be a bad idea. It is public, but its barely designed for subclassing. Right now it does 3 things - it initiates fling for private mScroller, handles possible focus changes and shows scroll bars. This might change in future android release. For instance, private mScroller instance changed its class from Scroller to OvershootScroller between 2.3 and 3.0. You have to keep in mind all this small differences. In any case, be ready for unforeseen consequences in the future.</p>
"
"6176391","8685193","1","<p>We can write a custom ScrollView and override the <em>onScrollChanged</em> method and clear the focus from the focused view and optionally hide the keyboard.</p>

<pre><code>@Override
protected void onScrollChanged(int l, int t, int oldl, int oldt) {
    View v = getFocusedChild();
    if (v != null) {
        InputMethodManager imm = (InputMethodManager) getContext()
                .getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(v.getWindowToken(), 0);
        v.clearFocus();
    }
    super.onScrollChanged(l, t, oldl, oldt);
}
</code></pre>
"
"3996938","8693524","2","<p>It happens if you do not choose the correct resource for showing your different items. It works fine if you choose the built-in resource android.R.layout.simple_list_item_multiple_choice. The method <code>getCheckedItemPositions</code> is coupled in some way to the built-in resource.</p>
"
"2471935","8697618","3","<pre><code>imageView.setImageBitmap(BitmapFactory.decodeStream(imageUrl.openStream()));//try/catch IOException and MalformedURLException outside
</code></pre>
"
"4165414","8708490","14","<p>Hi i got one more solution to hide keyboard by :</p>

<pre><code>InputMethodManager imm = (InputMethodManager) getSystemService(Activity.INPUT_METHOD_SERVICE);
    imm.toggleSoftInput(InputMethodManager.HIDE_IMPLICIT_ONLY, 0);
</code></pre>

<p>Here pass HIDE_IMPLICIT_ONLY at the position of showFlag and 0 at the position of hiddenFlag.
It will forcefully close soft Keyboard.</p>
"
"2169649","8729626","5","<p>There are two useful tutorials about image picker with downloadable source code here: </p>

<p><a href=""http://www.londatiga.net/it/how-to-create-android-image-picker/"">How to Create Android Image Picker </a></p>

<p><a href=""http://www.londatiga.net/featured-articles/how-to-select-and-crop-image-on-android/"">How to Select and Crop Image on Android </a></p>

<p>However, the app will be forced to close sometime, you can fix it by adding android:configChanges attribute into main activity in Manifest file like as: </p>

<pre><code>&lt;activity android:name="".MainActivity""
                  android:label=""@string/app_name"" android:configChanges=""keyboardHidden|orientation"" &gt;
</code></pre>

<p>It seems that the camera API lost control with orientation so this will help it. :)</p>
"
"3624280","8848837","9","<p>Easiest way:</p>

<p>To save:</p>

<pre><code>getPreferences(MODE_PRIVATE).edit().putString(""Name of variable"",value).commit();
</code></pre>

<p>To retrieve:</p>

<pre><code>""your_variable"" = getPreferences(MODE_PRIVATE).getString(""Name of variable"",default value);
</code></pre>
"
"6176391","8855244","0","<p>I often has this problem when my apps handle orientation change.</p>

<p>In that case I use the following kind of code:</p>

<pre><code>@Override
protected void onCreate(Bundle savedInstanceState) {
    ...
    // to avoid the scrollview to scroll to this element automatically
    mEditTextSearch.setFocusable(false);
    // Get the saved scroll position
    final int scrolly = savedInstanceState.getInt(""scrolly"");
    mScrollView.post(new Runnable() {
        @Override
        public void run() {
            mScrollView.scrollTo(0, scrolly);
            // Restore the initial state of the EditText
            mEditTextSearch.setFocusable(true);
            mEditTextSearch.setFocusableInTouchMode(true);
            mEditTextSearch.setClickable(true);
        }
    });
    ...
}
</code></pre>
"
"3647993","8914291","29","<p>This is a full solution (found in the Hackbook example from the Facebook SDK). It has the advantage of not needing access to the file itself. This is extremely useful if you are loading an image from the content resolver thingy (e.g. if your app is responding to a share-photo intent).</p>

<pre><code>public static int getOrientation(Context context, Uri photoUri) {
    /* it's on the external media. */
    Cursor cursor = context.getContentResolver().query(photoUri,
            new String[] { MediaStore.Images.ImageColumns.ORIENTATION }, null, null, null);

    if (cursor.getCount() != 1) {
        return -1;
    }

    cursor.moveToFirst();
    return cursor.getInt(0);
}
</code></pre>

<p>And then you can get a rotated Bitmap as follows. This code also scales down the image (badly unfortunately) to MAX_IMAGE_DIMENSION. Otherwise you may run out of memory.</p>

<pre><code>public static Bitmap getCorrectlyOrientedImage(Context context, Uri photoUri) throws IOException {
    InputStream is = context.getContentResolver().openInputStream(photoUri);
    BitmapFactory.Options dbo = new BitmapFactory.Options();
    dbo.inJustDecodeBounds = true;
    BitmapFactory.decodeStream(is, null, dbo);
    is.close();

    int rotatedWidth, rotatedHeight;
    int orientation = getOrientation(context, photoUri);

    if (orientation == 90 || orientation == 270) {
        rotatedWidth = dbo.outHeight;
        rotatedHeight = dbo.outWidth;
    } else {
        rotatedWidth = dbo.outWidth;
        rotatedHeight = dbo.outHeight;
    }

    Bitmap srcBitmap;
    is = context.getContentResolver().openInputStream(photoUri);
    if (rotatedWidth &gt; MAX_IMAGE_DIMENSION || rotatedHeight &gt; MAX_IMAGE_DIMENSION) {
        float widthRatio = ((float) rotatedWidth) / ((float) MAX_IMAGE_DIMENSION);
        float heightRatio = ((float) rotatedHeight) / ((float) MAX_IMAGE_DIMENSION);
        float maxRatio = Math.max(widthRatio, heightRatio);

        // Create the bitmap from file
        BitmapFactory.Options options = new BitmapFactory.Options();
        options.inSampleSize = (int) maxRatio;
        srcBitmap = BitmapFactory.decodeStream(is, null, options);
    } else {
        srcBitmap = BitmapFactory.decodeStream(is);
    }
    is.close();

    /*
     * if the orientation is not 0 (or -1, which means we don't know), we
     * have to do a rotation.
     */
    if (orientation &gt; 0) {
        Matrix matrix = new Matrix();
        matrix.postRotate(orientation);

        srcBitmap = Bitmap.createBitmap(srcBitmap, 0, 0, srcBitmap.getWidth(),
                srcBitmap.getHeight(), matrix, true);
    }

    return srcBitmap;
}
</code></pre>
"
"4946295","8943002","5","<p>I would like to add something to the very helpful <a href=""http://stackoverflow.com/a/5122460/426213"">answer above</a>. If you don't know the height you'll end up with since your views .getHeight() returns 0 you can do the following to get the height:</p>

<pre><code>contentView.measure(DUMMY_HIGH_DIMENSION, DUMMY_HIGH_DIMENSION);
int finalHeight = view.getMeasuredHeight();
</code></pre>

<p>Where DUMMY_HIGH_DIMENSIONS is the width/height (in pixels) your view is constrained to ... having this a huge number is reasonable when the view is encapsulated with a ScrollView.</p>
"
"2780102","8944286","26","<p>If you already have the package name you wish to activate, you can use the following code which is a bit more generic:</p>

<pre><code>PackageManager pm = context.getPackageManager();
Intent appStartIntent = pm.getLaunchIntentForPackage(appPackageName);
if (null != appStartIntent)
{
    context.startActivity(appStartIntent);
}
</code></pre>

<p>I found that it works better for cases where the main activity was not found by the regular method of start the MAIN activity.</p>
"
"4894885","8955087","4","<pre><code>public static String getFileExt(String FileName)
{       
     return FileName.substring((FileName.lastIndexOf(""."") + 1), FileName.length());
}
</code></pre>
"
"6330260","8987735","1","<p>Simply, when you go from the login screen, not when finishing the login screen.</p>

<p>And then in all forward activities, use this for logout:</p>

<pre><code>final Intent intent = new Intent(getBaseContext(), LoginScreen.class);
intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
context.startActivity(intent);
</code></pre>

<p>It works perfectly.</p>
"
"5105354","8992365","3","<p>Believe or not my problem with Soft Keyboard was resolved when I discovered that the Activities animations can disable the Soft Keyboard. When you call the intent with the </p>

<pre><code>i.setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
</code></pre>

<p>and </p>

<pre><code>overridePendingTransition(0, 0);
</code></pre>

<p>It can hide the Soft Keyboard and there isn't a way to show it.</p>
"
"2736389","9009808","4","<pre><code>public class MyClass implements Serializable{
 here your instance variable
}

Now You want to pass Object of this class in startActivity then simple use this
Bundle b = new Bundle();
b.putSerializable(""name"",myClassObject);
intent.putExtras(b);
</code></pre>

<p>This is Work here because MyClass is Implements Serializable</p>
"
"2780102","9010685","2","<p>Since applications aren't allowed to change many of the phone settings, you can open a settings activity just like another application.</p>

<p>Look at you LogCat output after you actually modified the setting manually:</p>

<pre><code>INFO/ActivityManager(1306): Starting activity: Intent { act=android.intent.action.MAIN cmp=com.android.settings/.DevelopmentSettings } from pid 1924
</code></pre>

<p>Then use this to display the settings page from your app:</p>

<pre><code>String SettingsPage = ""com.android.settings/.DevelopmentSettings"";

try
{
Intent intent = new Intent(Intent.ACTION_MAIN);             
intent.setComponent(ComponentName.unflattenFromString(SettingsPage));             
intent.addCategory(Intent.CATEGORY_LAUNCHER );             
startActivity(intent); 
}
catch (ActivityNotFoundException e)
{
 log it
}
</code></pre>
"
"2160619","9017248","1","<p>Code worked very well! You can overload onSizeChanged method, if not only Text has to be Changed.</p>

<pre><code>@Override
protected void onSizeChanged (int w, int h, int oldw, int oldh) {
    isStale = true;
    super.onSizeChanged(w, h, oldw, oldh);
}
</code></pre>
"
"2973270","9018189","1","<p>Setting a custom font to a regular ProgressDialog/AlertDialog:</p>

<pre><code>font=Typeface.createFromAsset(getAssets(),""DroidSans.ttf"");

ProgressDialog dialog = ProgressDialog.show(this, ""titleText"", ""messageText"", true);
((TextView)dialog.findViewById(Resources.getSystem().getIdentifier(""message"", ""id"", ""android""))).setTypeface(font);
((TextView)dialog.findViewById(Resources.getSystem().getIdentifier(""alertTitle"", ""id"", ""android""))).setTypeface(font);
</code></pre>
"
"2322234","9045507","-1","<p>I found the example class posted by @emmby above to be a great starting point.  But it has a couple of flaws, as mentioned by other posters. The major one is that it persists the UUID to an XML file unnecessarily and thereafter always retrieves it from this file.  This lays the class open to an easy hack:  anyone with a rooted phone can edit the XML file to give themselves a new UUID.</p>

<p>I've updated the code so that it only persists to XML if absolutely necessary (i.e. when using a randomly generated UUID) and re-factored the logic as per @Brill Pappin's answer:</p>

<pre><code>import android.content.Context;
import android.content.SharedPreferences;
import android.provider.Settings.Secure;
import android.telephony.TelephonyManager;

import java.io.UnsupportedEncodingException;
import java.util.UUID;

public class DeviceUuidFactory {
    protected static final String PREFS_FILE = ""device_id.xml"";
    protected static final String PREFS_DEVICE_ID = ""device_id"";

    protected static UUID uuid;

    public DeviceUuidFactory(Context context) {

        if( uuid ==null ) {
            synchronized (DeviceUuidFactory.class) {
                if( uuid == null) {
                    final SharedPreferences prefs = context.getSharedPreferences( PREFS_FILE, 0);
                    final String id = prefs.getString(PREFS_DEVICE_ID, null );

                    if (id != null) {
                        // Use the ids previously computed and stored in the prefs file
                        uuid = UUID.fromString(id);

                    } else {

                        final String androidId = Secure.getString(context.getContentResolver(), Secure.ANDROID_ID);

                        // Use the Android ID unless it's broken, in which case fallback on deviceId,
                        // unless it's not available, then fallback on a random number which we store
                        // to a prefs file
                        try {
                             if ( ""9774d56d682e549c"".equals(androidId) || (androidId == null) ) {
                                final String deviceId = ((TelephonyManager) context.getSystemService( Context.TELEPHONY_SERVICE )).getDeviceId();

                                if (deviceId != null)
                                {
                                    uuid = UUID.nameUUIDFromBytes(deviceId.getBytes(""utf8""));
                                }
                                else
                                {
                                    uuid = UUID.randomUUID();

                                    // Write the value out to the prefs file so it persists
                                    prefs.edit().putString(PREFS_DEVICE_ID, uuid.toString() ).commit();
                                }
                            }
                            else
                            {
                                uuid = UUID.nameUUIDFromBytes(androidId.getBytes(""utf8""));
                            } 
                        } catch (UnsupportedEncodingException e) {
                            throw new RuntimeException(e);
                        }



                    }

                }
            }
        }

    }


    /**
     * Returns a unique UUID for the current android device.  As with all UUIDs, this unique ID is ""very highly likely""
     * to be unique across all Android devices.  Much more so than ANDROID_ID is.
     *
     * The UUID is generated by using ANDROID_ID as the base key if appropriate, falling back on
     * TelephonyManager.getDeviceID() if ANDROID_ID is known to be incorrect, and finally falling back
     * on a random UUID that's persisted to SharedPreferences if getDeviceID() does not return a
     * usable value.
     *
     * In some rare circumstances, this ID may change.  In particular, if the device is factory reset a new device ID
     * may be generated.  In addition, if a user upgrades their phone from certain buggy implementations of Android 2.2
     * to a newer, non-buggy version of Android, the device ID may change.  Or, if a user uninstalls your app on
     * a device that has neither a proper Android ID nor a Device ID, this ID may change on reinstallation.
     *
     * Note that if the code falls back on using TelephonyManager.getDeviceId(), the resulting ID will NOT
     * change after a factory reset.  Something to be aware of.
     *
     * Works around a bug in Android 2.2 for many devices when using ANDROID_ID directly.
     *
     * @see http://code.google.com/p/android/issues/detail?id=10603
     *
     * @return a UUID that may be used to uniquely identify your device for most purposes.
     */
    public UUID getDeviceUuid() {
        return uuid;
    }
</code></pre>
"
"2271131","9051337","12","<p>If you want to get the date and time in a specific pattern you can use</p>

<pre><code>Date d = new Date();
CharSequence s = DateFormat.format(""yyyy-MM-dd hh:mm:ss"", d.getTime());
</code></pre>
"
"4946295","9061458","22","<p>An alternative is to use a scale animation with the following scaling factors for expanding:</p>

<pre><code>ScaleAnimation anim = new ScaleAnimation(1, 1, 0, 1);
</code></pre>

<p>and for collapsing:</p>

<pre><code>ScaleAnimation anim = new ScaleAnimation(1, 1, 1, 0);
</code></pre>
"
"2150078","9087392","4","<p>I found that a combination of @Reuben_Scratton's method along with @Yogesh's method seems to work best. Combining their methods would yield something like this:</p>

<pre><code>final View activityRootView = findViewById(R.id.activityRoot);
activityRootView.getViewTreeObserver().addOnGlobalLayoutListener(new OnGlobalLayoutListener() {
  @Override
  public void onGlobalLayout() {
    if (getResources().getConfiguration().keyboardHidden == Configuration.KEYBOARDHIDDEN_NO) { // Check if keyboard is not hidden
       // ... do something here
    }
  }
});
</code></pre>
"
"2150078","9108219","151","<p>So hopefully this helps someone out.</p>

<p>The new answer that Reuben Scratton gave is great and really efficient, but it really only works if you set your windowSoftInputMode to adjustResize. If you set it to adjustPan, it's still not possible to detect whether or not the keyboard is visible using his code snippet. To work around this, I made this tiny modification to the code above.</p>

<pre><code>final View activityRootView = findViewById(R.id.activityRoot);
activityRootView.getViewTreeObserver().addOnGlobalLayoutListener(new OnGlobalLayoutListener() {
@Override
public void onGlobalLayout() {
    Rect r = new Rect();
    //r will be populated with the coordinates of your view that area still visible.
    activityRootView.getWindowVisibleDisplayFrame(r);

    int heightDiff = activityRootView.getRootView().getHeight() - (r.bottom - r.top);
    if (heightDiff &gt; 100) { // if more than 100 pixels, its probably a keyboard...
        ... do something here
    }
 }
}); 
</code></pre>
"
"7723964","9127423","76","<p>There is another solution that does not need modifying the source code of <code>ViewPager</code> and <code>FragmentStatePagerAdapter</code>, and it works with the <code>FragmentPagerAdapter</code> base class that was used by the author.</p>

<p>I'd like to start by answering the author's question about which ID he should use; it is the ID of the container, i.e. the ID of the view pager itself. However, as you probably noticed yourself, using that ID in your code causes nothing to happen. I will explain why:</p>

<p>First of all, to make <code>ViewPager</code> repopulate the pages, you need to call <code>notifyDataSetChanged()</code> that resides in the base class of your adapter.</p>

<p>Second, <code>ViewPager</code> uses the <code>getItemPosition()</code> abstract method to check which pages should be destroyed and which should be kept. The default implementation of this function always returns <code>POSITION_UNCHANGED</code>, which causes <code>ViewPager</code> to keep all current pages, and consequently not attaching your new page. Thus, to make fragment replacement work, <code>getItemPosition()</code> needs to be overridden in your adapter and must return <code>POSITION_NONE</code> when called with an old, to be hidden, fragment as argument.</p>

<p>This also means that your adapter always needs to be aware of which fragment that should be displayed in position 0, <code>FirstPageFragment</code> or <code>NextFragment</code>. One way of doing this is supplying a listener when creating <code>FirstPageFragment</code>, which will be called when it is time to switch fragments. I think this is a good thing though, to let your fragment adapter handle all fragment switches and calls to <code>ViewPager</code> and <code>FragmentManager</code>.</p>

<p>Third, <code>FragmentPagerAdapter</code> caches the used fragments by a name which is derived from the position, so if there was a fragment at position 0, it will not be replaced even though the class is new. There are two solutions, but the simplest is to use the <code>remove()</code> function of <code>FragmentTransaction</code>, which will remove its tag as well.</p>

<p>That was a lot of text, here is code that should work in your case:</p>

<pre><code>public class MyAdapter extends FragmentPagerAdapter
{
    static final int NUM_ITEMS = 2;
    private final FragmentManager mFragmentManager;
    private Fragment mFragmentAtPos0;

    public MyAdapter(FragmentManager fm)
    {
        super(fm);
        mFragmentManager = fm;
    }

    @Override
    public Fragment getItem(int position)
    {
        if (position == 0)
        {
            if (mFragmentAtPos0 == null)
            {
                mFragmentAtPos0 = FirstPageFragment.newInstance(new FirstPageFragmentListener()
                {
                    public void onSwitchToNextFragment()
                    {
                        mFragmentManager.beginTransaction().remove(mFragmentAtPos0).commit();
                        mFragmentAtPos0 = NextFragment.newInstance();
                        notifyDataSetChanged();
                    }
                });
            }
            return mFragmentAtPos0;
        }
        else
            return SecondPageFragment.newInstance();
    }

    @Override
    public int getCount()
    {
        return NUM_ITEMS;
    }

    @Override
    public int getItemPosition(Object object)
    {
        if (object instanceof FirstPageFragment &amp;&amp; mFragmentAtPos0 instanceof NextFragment)
            return POSITION_NONE;
        return POSITION_UNCHANGED;
    }
}

public interface FirstPageFragmentListener
{
    void onSwitchToNextFragment();
}
</code></pre>

<p>Hope this helps anyone!</p>
"
"2471935","9159861","2","<pre><code>    private Bitmap getImageBitmap(String url) {
        Bitmap bm = null;
        try {
            URL aURL = new URL(url);
            URLConnection conn = aURL.openConnection();
            conn.connect();
            InputStream is = conn.getInputStream();
            BufferedInputStream bis = new BufferedInputStream(is);
            bm = BitmapFactory.decodeStream(bis);
            bis.close();
            is.close();
       } catch (IOException e) {
           Log.e(TAG, ""Error getting bitmap"", e);
       }
       return bm;
    } 
</code></pre>
"
"3035692","9199811","5","<p>Maybe this will help someone...</p>

<p>From PictureDrawable to Bitmap, use: </p>

<pre><code>private Bitmap pictureDrawableToBitmap(PictureDrawable pictureDrawable){ 
    Bitmap bmp = Bitmap.createBitmap(pictureDrawable.getIntrinsicWidth(), pictureDrawable.getIntrinsicHeight(), Config.ARGB_8888); 
    Canvas canvas = new Canvas(bmp); 
    canvas.drawPicture(pictureDrawable.getPicture()); 
    return bmp; 
}
</code></pre>

<p>... implemented as such: </p>

<pre><code>Bitmap bmp = pictureDrawableToBitmap((PictureDrawable) drawable);
</code></pre>
"
"3331527","9234895","18","<p>This is 'Mojo Risin's and 'Ofir's solutions ""combined"". This will give you a proportionally resized image with the boundaries of max width and max height.</p>

<ol>
<li>It only reads meta data to get the original size (options.inJustDecodeBounds)</li>
<li>It uses a rought resize to save memory (itmap.createScaledBitmap)</li>
<li>It uses a precisely resized image based on the rough Bitamp created earlier.</li>
</ol>

<p>For me it has been performing fine on 5 MegaPixel images an below.</p>

<pre><code>try
{
    int inWidth = 0;
    int inHeight = 0;

    InputStream in = new FileInputStream(pathOfInputImage);

    // decode image size (decode metadata only, not the whole image)
    BitmapFactory.Options options = new BitmapFactory.Options();
    options.inJustDecodeBounds = true;
    BitmapFactory.decodeStream(in, null, options);
    in.close();
    in = null;

    // save width and height
    inWidth = options.outWidth;
    inHeight = options.outHeight;

    // decode full image pre-resized
    in = new FileInputStream(pathOfInputImage);
    options = new BitmapFactory.Options();
    // calc rought re-size (this is no exact resize)
    options.inSampleSize = Math.max(inWidth/dstWidth, inHeight/dstHeight);
    // decode full image
    Bitmap roughBitmap = BitmapFactory.decodeStream(in, null, options);

    // calc exact destination size
    Matrix m = new Matrix();
    RectF inRect = new RectF(0, 0, roughBitmap.getWidth(), roughBitmap.getHeight());
    RectF outRect = new RectF(0, 0, dstWidth, dstHeight);
    m.setRectToRect(inRect, outRect, Matrix.ScaleToFit.CENTER);
    float[] values = new float[9];
    m.getValues(values);

    // resize bitmap
    Bitmap resizedBitmap = Bitmap.createScaledBitmap(roughBitmap, (int) (roughBitmap.getWidth() * values[0]), (int) (roughBitmap.getHeight() * values[4]), true);

    // save image
    try
    {
        FileOutputStream out = new FileOutputStream(pathOfOutputImage);
        resizedBitmap.compress(Bitmap.CompressFormat.JPEG, 80, out);
    }
    catch (Exception e)
    {
        Log.e(""Image"", e.getMessage(), e);
    }
}
catch (IOException e)
{
    Log.e(""Image"", e.getMessage(), e);
}
</code></pre>
"
"2217753","9257737","1","<p>the easiest way is this. Inside your ListArrayAdapter just do this</p>

<pre><code>if(your condition here) rowView.setBackgroundColor(Color.parseColor(""#20FFFFFF""));
</code></pre>

<p>don't over complicate yourselves...</p>
"
"4605527","9274868","35","<pre><code>float density = context.getResources().getDisplayMetrics().density;
float px = someDpValue * density;
float dp = somePxValue / density;
</code></pre>

<p><code>density</code> equals</p>

<ul>
<li><code>.75</code> on <code>ldpi</code> (<code>120</code> dpi) </li>
<li><code>1.0</code> on <code>mdpi</code> (<code>160</code> dpi; baseline)</li>
<li><code>1.5</code> on <code>hdpi</code> (<code>240</code> dpi)</li>
<li><code>2.0</code> on <code>xhdpi</code> (<code>320</code> dpi) </li>
<li><code>3.0</code> on <code>xxhdpi</code> (<code>480</code> dpi) </li>
<li><code>4.0</code> on <code>xxxhdpi</code> (<code>640</code> dpi) </li>
</ul>
"
"3916330","9286271","16","<p>Try with this HTML5 tips</p>

<p><a href=""http://www.html5rocks.com/en/mobile/mobifying.html"">http://www.html5rocks.com/en/mobile/mobifying.html</a></p>

<p>And with this  if your Android Version is 2.1 or greater</p>

<pre><code>  WebView.getSettings().setLayoutAlgorithm(LayoutAlgorithm.SINGLE_COLUMN);
</code></pre>
"
"2471935","9288544","261","<p>From <a href=""http://developer.aiwgame.com/imageview-show-image-from-url-on-android-4-0.html"">Android developer</a>:</p>

<pre><code>// show The Image
new DownloadImageTask((ImageView) findViewById(R.id.imageView1))
            .execute(""http://java.sogeti.nl/JavaBlog/wp-content/uploads/2009/04/android_icon_256.png"");
}

public void onClick(View v) {
    startActivity(new Intent(this, IndexActivity.class));
    finish();

}

private class DownloadImageTask extends AsyncTask&lt;String, Void, Bitmap&gt; {
    ImageView bmImage;

    public DownloadImageTask(ImageView bmImage) {
        this.bmImage = bmImage;
    }

    protected Bitmap doInBackground(String... urls) {
        String urldisplay = urls[0];
        Bitmap mIcon11 = null;
        try {
            InputStream in = new java.net.URL(urldisplay).openStream();
            mIcon11 = BitmapFactory.decodeStream(in);
        } catch (Exception e) {
            Log.e(""Error"", e.getMessage());
            e.printStackTrace();
        }
        return mIcon11;
    }

    protected void onPostExecute(Bitmap result) {
        bmImage.setImageBitmap(result);
    }
}
</code></pre>

<p>Make sure you have the following permissions set in your <code>AndroidManifest.xml</code> to access the internet.</p>

<pre><code>&lt;uses-permission android:name=""android.permission.INTERNET"" /&gt;
</code></pre>
"
"6343166","9289190","176","<p>I think <code>android.os.NetworkOnMainThreadException</code>
Workaround is....</p>

<p>Add:</p>

<pre><code>StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();

StrictMode.setThreadPolicy(policy); 
</code></pre>

<p>In your class,</p>

<p>and</p>

<p>ADD this permission in android manifest.xml file:    </p>

<pre><code>&lt;uses-permission android:name=""android.permission.INTERNET""/&gt;
</code></pre>
"
"2644134","9293379","2","<pre><code>dialog=new Dialog(YourActivity.this, 1);  // to make dialog box full screen with out title.
dialog.setContentView(layoutReference);
dialog.setContentView(R.layout.layoutexample);
</code></pre>
"
"5694933","9315813","30","<p>I had an application which used a <code>ListPreference</code> where the user was required to select the location of where they wanted to save something. In that app, I scanned /proc/mounts and /system/etc/vold.fstab for sdcard mount points. I stored the mount points from each file into two separate <code>ArrayList</code>s.</p>

<p>Then, I compared one list with the other and discarded items that were not in both lists. That gave me a list of root paths to each sdcard.</p>

<p>From there, I tested the paths with <code>File.exists()</code>, <code>File.isDirectory()</code>, and <code>File.canWrite()</code>. If any of those tests were false, I discarded that path from the list.</p>

<p>Whatever was left in the list, I converted to a <code>String[]</code> array so it could be used by the <code>ListPreference</code> values attribute.</p>

<p>You can view the code here: <a href=""http://sapienmobile.com/?p=204"" rel=""nofollow"">http://sapienmobile.com/?p=204</a></p>
"
"5832368","9326071","10","<p>Why not calculate the size of the screen diagonal and use that to make the decision whether the device is a phone or tablet?</p>

<pre><code>private boolean isTablet()
{
    Display display = getWindowManager().getDefaultDisplay();
    DisplayMetrics displayMetrics = new DisplayMetrics();
    display.getMetrics(displayMetrics);

    int width = displayMetrics.widthPixels / displayMetrics.densityDpi;
    int height = displayMetrics.heightPixels / displayMetrics.densityDpi;

    double screenDiagonal = Math.sqrt( width * width + height * height );
    return (screenDiagonal &gt;= 9.0 );
}
</code></pre>

<p>Of course one can argue whether the threshold should be 9 inches or less.</p>
"
"2695746","9359389","9","<p>You can Find the List of installed apps in Android Device by using below code, ""packageInfo"" Contains Installed Application Information
in Device. we can retrive Intent for the application installed from
the packageinfo object and by using startactivity(intent), can start
application. it is up to you how you organize the UI either Listview
or Gridview. so on click event based on position, you can retrive intent
object and start activity intent.</p>

<pre><code>final PackageManager pm = getPackageManager();

List&lt;ApplicationInfo&gt; packages = pm.getInstalledApplications(PackageManager.GET_META_DATA);


for (ApplicationInfo packageInfo : packages) 

{
 if(pm.getLaunchIntentForPackage(packageInfo.packageName)!= null &amp;&amp;   

                   !pm.getLaunchIntentForPackage(packageInfo.packageName).equals(""""))


{

    System.out.println(""Package Name :"" + packageInfo.packageName);

    System.out.println(""Launch Intent For Package :""   +  
                  pm.getLaunchIntentForPackage(packageInfo.packageName));

    System.out.println(""Application Label :""   + pm.getApplicationLabel(packageInfo));

    System.out.println(""Application Label :""   + 
                           pm.getApplicationIcon(packageInfo.packageName).toString());

    System.out.println(""i : ""+i);

    /*if(i==2)

    {
         startActivity(pm.getLaunchIntentForPackage(packageInfo.packageName));

     break;

    }*/

    i++;

}
}
</code></pre>
"
"4946295","9385340","3","<p>This is a snippet that I used to resize the width of a view (LinearLayout) with animation. </p>

<p>The code is supposed to do expand or shrink according the target size. If you want a fill_parent width, you will have to pass the parent .getMeasuredWidth as target width while setting the flag to true.</p>

<p>Hope it helps some of you.</p>

<pre><code>public class WidthResizeAnimation extends Animation {
int targetWidth;
int originaltWidth;
View view;
boolean expand;
int newWidth = 0;
boolean fillParent;

public WidthResizeAnimation(View view, int targetWidth, boolean fillParent) {
    this.view = view;
    this.originaltWidth = this.view.getMeasuredWidth();
    this.targetWidth = targetWidth;
    newWidth = originaltWidth;
    if (originaltWidth &gt; targetWidth) {
        expand = false;
    } else {
        expand = true;
    }
    this.fillParent = fillParent;
}

@Override
protected void applyTransformation(float interpolatedTime, Transformation t) {
    if (expand &amp;&amp; newWidth &lt; targetWidth) {
        newWidth = (int) (newWidth + (targetWidth - newWidth) * interpolatedTime);
    }

    if (!expand &amp;&amp; newWidth &gt; targetWidth) {
        newWidth = (int) (newWidth - (newWidth - targetWidth) * interpolatedTime);
    }
    if (fillParent &amp;&amp; interpolatedTime == 1.0) {
        view.getLayoutParams().width = -1;

    } else {
        view.getLayoutParams().width = newWidth;
    }
    view.requestLayout();
}

@Override
public void initialize(int width, int height, int parentWidth, int parentHeight) {
    super.initialize(width, height, parentWidth, parentHeight);
}

@Override
public boolean willChangeBounds() {
    return true;
}
</code></pre>

<p>}</p>
"
"5832368","9386800","1","<p>E.g. have one important difference (at least for my program) between the phone and tablet. It is the default orientation of the device. Phone has a portrait orientation, the tablet - landscape. And respectively method to determine the device:</p>

<pre><code>private static boolean isLandscapeDefault(Display display) {
    Log.d(TAG, ""isTablet()"");
    final int width = display.getWidth();
    final int height = display.getHeight();

    switch (display.getOrientation()) {
    case 0: case 2:
        if(width &gt; height) return true;
        break;
    case 1: case 3:
        if(width &lt; height) return true;
        break;
    }
    return false;
}
</code></pre>

<p>EDITED:
Following the discussions with Dan Hulme changed the name of the method.</p>
"
"3035692","9390776","55","<p>A <code>Drawable</code> can be drawn onto a <code>Canvas</code>, and a <code>Canvas</code> can be backed by a <code>Bitmap</code>:</p>

<p><em>(Updated to handle a quick conversion for <code>BitmapDrawable</code>s and to ensure that the <code>Bitmap</code> created has a valid size)</em></p>

<pre><code>public static Bitmap drawableToBitmap (Drawable drawable) {
    if (drawable instanceof BitmapDrawable) {
        return ((BitmapDrawable)drawable).getBitmap();
    }

    int width = drawable.getIntrinsicWidth();
    width = width &gt; 0 ? width : 1;
    int height = drawable.getIntrinsicHeight();
    height = height &gt; 0 ? height : 1;

    Bitmap bitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);
    Canvas canvas = new Canvas(bitmap); 
    drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
    drawable.draw(canvas);

    return bitmap;
}
</code></pre>
"
"5694933","9406276","3","<p>Here is the way I use to find the external card. Use mount cmd return then parse the vfat part.</p>

<pre><code>String s = """";
try {
Process process = new ProcessBuilder().command(""mount"")
        .redirectErrorStream(true).start();

process.waitFor();

InputStream is = process.getInputStream();
byte[] buffer = new byte[1024];
while (is.read(buffer) != -1) {
    s = s + new String(buffer);
}
is.close();
} catch (Exception e) {
e.printStackTrace();
}

//用行分隔mount列表
String[] lines = s.split(""\n"");
for(int i=0; i&lt;lines.length; i++) {
//如果行内有挂载路径且为vfat类型，说明可能是内置或者外置sd的挂载点
if(-1 != lines[i].indexOf(path[0]) &amp;&amp; -1 != lines[i].indexOf(""vfat"")) {
    //再用空格分隔
    String[] blocks = lines[i].split(""\\s"");
    for(int j=0; j&lt;blocks.length; j++) {
        //判断是否是挂载为vfat类型
        if(-1 != blocks[j].indexOf(path[0])) {
            //Test if it is the external sd card.
        }
    }
}
}
</code></pre>
"
"2403632","9477192","14","<p>I found this example <a href=""http://android-codes-examples.blogspot.com/2011/11/show-or-hide-soft-keyboard-on-opening.html"">http://android-codes-examples.blogspot.com/2011/11/show-or-hide-soft-keyboard-on-opening.html</a>. Add the following code just before <code>alert.show()</code>.</p>

<pre><code>InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
imm.toggleSoftInput(InputMethodManager.SHOW_FORCED,0);
</code></pre>
"
"3166501","9491984","10","<pre><code>public static String getDensity(Context context) {
    String r;
    DisplayMetrics metrics = new DisplayMetrics();

    if (!(context instanceof Activity)) {
        r = ""hdpi"";
    } else {
        Activity activity = (Activity) context;
        activity.getWindowManager().getDefaultDisplay().getMetrics(metrics);

        if (metrics.densityDpi &lt;= DisplayMetrics.DENSITY_LOW) {
            r = ""ldpi"";
        } else if (metrics.densityDpi &lt;= DisplayMetrics.DENSITY_MEDIUM) {
            r = ""mdpi"";
        } else {
            r = ""hdpi"";
        }
    }

    return r;
}
</code></pre>
"
"2644134","9495417","2","<p>in XML use a theme</p>

<pre><code>android:theme=""@android:style/Theme.NoTitleBar""
</code></pre>
"
"3916330","9499811","14","<p>Friends, </p>

<p>I found a lot of import and great informations from you. But, the only way works for me was this way:</p>

<pre><code>webView = (WebView) findViewById(R.id.noticiasWebView);
webView.setInitialScale(1);
webView.getSettings().setJavaScriptEnabled(true);
webView.getSettings().setLoadWithOverviewMode(true);
webView.getSettings().setUseWideViewPort(true);
webView.setScrollBarStyle(WebView.SCROLLBARS_OUTSIDE_OVERLAY);
webView.setScrollbarFadingEnabled(false);
webView.loadUrl(""http://www.resource.com.br/"");
</code></pre>

<p>I am working on Android 2.1 because of the kind of devices from the company. But I fixed my problem using the part of informations from each one.</p>

<p>Thanks you!</p>
"
"4605527","9563438","253","<pre><code>/**
 * This method converts dp unit to equivalent pixels, depending on device density. 
 * 
 * @param dp A value in dp (density independent pixels) unit. Which we need to convert into pixels
 * @param context Context to get resources and device specific display metrics
 * @return A float value to represent px equivalent to dp depending on device density
 */
public static float convertDpToPixel(float dp, Context context){
    Resources resources = context.getResources();
    DisplayMetrics metrics = resources.getDisplayMetrics();
    float px = dp * (metrics.densityDpi / 160f);
    return px;
}

/**
 * This method converts device specific pixels to density independent pixels.
 * 
 * @param px A value in px (pixels) unit. Which we need to convert into db
 * @param context Context to get resources and device specific display metrics
 * @return A float value to represent dp equivalent to px value
 */
public static float convertPixelsToDp(float px, Context context){
    Resources resources = context.getResources();
    DisplayMetrics metrics = resources.getDisplayMetrics();
    float dp = px / (metrics.densityDpi / 160f);
    return dp;
}
</code></pre>
"
"5832368","9590506","47","<p>To detect whether or not the device is a tablet use the following code:</p>

<pre><code>public boolean isTablet(Context context) {
    boolean xlarge = ((context.getResources().getConfiguration().screenLayout &amp; Configuration.SCREENLAYOUT_SIZE_MASK) == 4);
    boolean large = ((context.getResources().getConfiguration().screenLayout &amp; Configuration.SCREENLAYOUT_SIZE_MASK) == Configuration.SCREENLAYOUT_SIZE_LARGE);
    return (xlarge || large);
}
</code></pre>

<p>LARGE and XLARGE Screen Sizes are determined by the manufacturer based on the distance from the eye they are to be used at (thus the idea of a tablet).  </p>

<p>More info : <a href=""http://groups.google.com/group/android-developers/browse_thread/thread/d6323d81f226f93f"">http://groups.google.com/group/android-developers/browse_thread/thread/d6323d81f226f93f</a></p>
"
"5832368","9624844","26","<p>This post helped me a lot,</p>

<p>Unfortunately I don't have the reputation necessary to evaluate all the answers that helped me.</p>

<p>I needed to identify if my device was a tablet or a phone, with that I would be able to implement the logic of the screen. And in my analysis the tablet must be more than 7 inches (Xlarge) starting at MDPI.</p>

<p>Here's the code below, which was created based on this post.</p>

<pre><code>/**
 * Checks if the device is a tablet or a phone
 * 
 * @param activityContext
 *            The Activity Context.
 * @return Returns true if the device is a Tablet
 */
public static boolean isTabletDevice(Context activityContext) {
    // Verifies if the Generalized Size of the device is XLARGE to be
    // considered a Tablet
    boolean xlarge = ((activityContext.getResources().getConfiguration().screenLayout &amp; 
                        Configuration.SCREENLAYOUT_SIZE_MASK) == 
                        Configuration.SCREENLAYOUT_SIZE_XLARGE);

    // If XLarge, checks if the Generalized Density is at least MDPI
    // (160dpi)
    if (xlarge) {
        DisplayMetrics metrics = new DisplayMetrics();
        Activity activity = (Activity) activityContext;
        activity.getWindowManager().getDefaultDisplay().getMetrics(metrics);

        // MDPI=160, DEFAULT=160, DENSITY_HIGH=240, DENSITY_MEDIUM=160,
        // DENSITY_TV=213, DENSITY_XHIGH=320
        if (metrics.densityDpi == DisplayMetrics.DENSITY_DEFAULT
                || metrics.densityDpi == DisplayMetrics.DENSITY_HIGH
                || metrics.densityDpi == DisplayMetrics.DENSITY_MEDIUM
                || metrics.densityDpi == DisplayMetrics.DENSITY_TV
                || metrics.densityDpi == DisplayMetrics.DENSITY_XHIGH) {

            // Yes, this is a tablet!
            return true;
        }
    }

    // No, this is not a tablet!
    return false;
}
</code></pre>
"
"2271131","9696178","3","<pre><code>Calendar c = Calendar.getInstance();
int month=c.get(Calendar.MONTH)+1;
String sDate = c.get(Calendar.YEAR) + ""-"" + month+ ""-"" + c.get(Calendar.DAY_OF_MONTH) +
""T"" + c.get(Calendar.HOUR_OF_DAY)+"":""+c.get(Calendar.MINUTE)+"":""+c.get(Calendar.SECOND);
</code></pre>

<p>This will give date time format like
2010-05-24T18:13:00</p>
"
"2695746","9732509","7","<p>To get al installed apps you can use Package Manager..</p>

<pre><code>    List&lt;PackageInfo&gt; apps = getPackageManager().getInstalledPackages(0);
</code></pre>

<p>To run you can use package name</p>

<pre><code>Intent LaunchApp = getPackageManager().getLaunchIntentForPackage(“package name”)
startActivity( LaunchApp );
</code></pre>

<p>For more detail you can read this blog <a href=""http://codebucket.co.in/android-get-list-of-all-installed-apps/"" rel=""nofollow"">http://codebucket.co.in/android-get-list-of-all-installed-apps/</a></p>
"
"3226495","9735524","54","<p>May be you can try something like this</p>

<p>Suppose in our application, we have a number of activities(say ten) and we need to exit directly from this activity. What we can do is, create an intent and go to the root activity and set flag in the intent as</p>

<pre><code>intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
</code></pre>

<p>also, add some extra like boolean to the intent</p>

<pre><code>intent.putExtra(""EXIT"", true);
</code></pre>

<p>Then in root activity, check the value of the <code>boolean</code> and according to that call finish(), in the <code>onCreate()</code> of the root activity</p>

<pre><code>if (getIntent().getBooleanExtra(""EXIT"", false)) {
 finish();
}
</code></pre>
"
"2591036","9786169","77","<p>The title bar can be removed in two ways as mentioned on the developer Android page:</p>

<p>In the <code>manifest.xml</code> file:</p>

<ol>
<li><p>Add the following in <code>application</code> if you want to remove it for all the activities in an app:</p>

<pre><code>&lt;application android:theme=""@android:style/Theme.Black.NoTitleBar""&gt;
</code></pre></li>
<li><p>Or for a particular activity:</p>

<pre><code>&lt;activity android:theme=""@android:style/Theme.Black.NoTitleBar""&gt;
</code></pre></li>
</ol>
"
"3145089","9811633","18","<p>With Fedor's solution I've experienced multiple execution of the callback <code>gotLocation</code>.
It seems to be due to a <strong>race condition</strong> in the overridden <code>LocationListener.onLocationChanged</code> method, when gotLocation method is <em>'long enough'</em>. I'm not sure, but I guess <code>removeUpdates</code> prevents the enqueueing of new messages in the Looper queue, but it doesn't remove those already enqueued but not yet consumed. Hence the race condition.</p>

<p>To reduce the probability of this wrong behavior it's possible to call removeUpdates before firing the onLocationChanged event, but still we have the race condition.</p>

<p>The best solution I found is to replace <code>requestLocationUpdates</code> with <code>requestSingleUpdate</code>.</p>

<p>This is my version, based on Fedor's solution, using an Handler to send a message to the looper thread:</p>

<pre><code>public class LocationResolver {
    private Timer timer;
    private LocationManager locationManager;
    private LocationResult locationResult;
    private boolean gpsEnabled = false;
    private boolean networkEnabled = false;
    private Handler locationTimeoutHandler;

    private final Callback locationTimeoutCallback = new Callback() {
        public boolean handleMessage(Message msg) {
            locationTimeoutFunc();
            return true;
        }

        private void locationTimeoutFunc() {   
            locationManager.removeUpdates(locationListenerGps);
            locationManager.removeUpdates(locationListenerNetwork);

            Location networkLocation = null, gpsLocation = null;
            if (gpsEnabled)
                gpsLocation = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);
            if (networkEnabled)
                networkLocation = locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);

            // if there are both values use the latest one
            if (gpsLocation != null &amp;&amp; networkLocation != null) {
                if (gpsLocation.getTime() &gt; networkLocation.getTime())
                    locationResult.gotLocation(gpsLocation);
                else
                    locationResult.gotLocation(networkLocation);
                return;
            }

            if (gpsLocation != null) {
                locationResult.gotLocation(gpsLocation);
                return;
            }
            if (networkLocation != null) {
                locationResult.gotLocation(networkLocation);
                return;
            }
            locationResult.gotLocation(null);           
        }
    };
    private final LocationListener locationListenerGps = new LocationListener() {
        public void onLocationChanged(Location location) {              
            timer.cancel();
            locationResult.gotLocation(location);
            locationManager.removeUpdates(this);
            locationManager.removeUpdates(locationListenerNetwork);
        }

        public void onProviderDisabled(String provider) {
        }

        public void onProviderEnabled(String provider) {
        }

        public void onStatusChanged(String provider, int status, Bundle extras) {
        }
    };
    private final LocationListener locationListenerNetwork = new LocationListener() {
        public void onLocationChanged(Location location) {    
            timer.cancel(); 
            locationResult.gotLocation(location);
            locationManager.removeUpdates(this);
            locationManager.removeUpdates(locationListenerGps);
        }

        public void onProviderDisabled(String provider) {
        }

        public void onProviderEnabled(String provider) {
        }

        public void onStatusChanged(String provider, int status, Bundle extras) {
        }
    };

    public void prepare() {
        locationTimeoutHandler = new Handler(locationTimeoutCallback);
    }

    public synchronized boolean getLocation(Context context, LocationResult result, int maxMillisToWait) {
        locationResult = result;
        if (locationManager == null)
            locationManager = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);

        // exceptions will be thrown if provider is not permitted.
        try {
            gpsEnabled = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER);
        } catch (Exception ex) {
        }
        try {
            networkEnabled = locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER);
        } catch (Exception ex) {
        }

        // don't start listeners if no provider is enabled
        if (!gpsEnabled &amp;&amp; !networkEnabled)
            return false;

        if (gpsEnabled)
            locationManager.requestSingleUpdate(LocationManager.GPS_PROVIDER, locationListenerGps, Looper.myLooper());
            //locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, locationListenerGps);
        if (networkEnabled)
            locationManager.requestSingleUpdate(LocationManager.NETWORK_PROVIDER, locationListenerNetwork, Looper.myLooper());
            //locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, locationListenerNetwork);

        timer = new Timer();
        timer.schedule(new GetLastLocationTask(), maxMillisToWait);
        return true;
    }

    private class GetLastLocationTask extends TimerTask {
        @Override
        public void run() { 
            locationTimeoutHandler.sendEmptyMessage(0);
        }
    }

    public static abstract class LocationResult {
        public abstract void gotLocation(Location location);
    }
}
</code></pre>

<p>I use this class from a customized looper thread, like the following one:</p>

<pre><code>public class LocationGetter {
    private final Context context;
    private Location location = null;
    private final Object gotLocationLock = new Object();
    private final LocationResult locationResult = new LocationResult() {            
        @Override
        public void gotLocation(Location location) {
            synchronized (gotLocationLock) {
                LocationGetter.this.location = location;
                gotLocationLock.notifyAll();
                Looper.myLooper().quit();
            }
        }
    };

    public LocationGetter(Context context) {
        if (context == null)
            throw new IllegalArgumentException(""context == null"");

        this.context = context;
    }

    public synchronized Coordinates getLocation(int maxWaitingTime, int updateTimeout) {
        try {
            final int updateTimeoutPar = updateTimeout;
            synchronized (gotLocationLock) {            
                new Thread() {
                    public void run() {
                        Looper.prepare();
                        LocationResolver locationResolver = new LocationResolver();
                        locationResolver.prepare();
                        locationResolver.getLocation(context, locationResult, updateTimeoutPar);
                        Looper.loop();
                    }
                }.start();

                gotLocationLock.wait(maxWaitingTime);
            }
        } catch (InterruptedException e1) {
            e1.printStackTrace();
        }

        if (location != null)
            coordinates = new Coordinates(location.getLatitude(), location.getLongitude());
        else
            coordinates = Coordinates.UNDEFINED;
        return coordinates; 
    }
}
</code></pre>

<p>where Coordinates is a simple class with two properties: latitude and longitude.</p>
"
"8181828","9876702","7","<p>I subclassed (Horizontal)ScrollView and did something like this:</p>

<pre><code>@Override
protected void onScrollChanged(int x, int y, int oldX, int oldY) {
    if (Math.abs(x - oldX) &gt; SlowDownThreshold) {  
        currentlyScrolling = true;
    } else {
        currentlyScrolling = false;
        if (!currentlyTouching) {
            //scrolling stopped...handle here
        }
    }
    super.onScrollChanged(x, y, oldX, oldY);
}
</code></pre>

<p>I used a value of 1 for the SlowDownThreshold since it always seems to be the difference of the last onScrollChanged event.</p>

<p>In order to make this behave correctly when dragging slowly, I had to do this:</p>

<pre><code>@Override
public boolean onInterceptTouchEvent(MotionEvent event) {
    switch (event.getAction()) {
        case MotionEvent.ACTION_DOWN:
            currentlyTouching = true;
    }
    return super.onInterceptTouchEvent(event);
}

@Override
public boolean onTouch(View view, MotionEvent event) {
    switch (event.getAction()) {
        case MotionEvent.ACTION_UP:
        case MotionEvent.ACTION_CANCEL:
            currentlyTouching = false;
            if (!currentlyScrolling) {
                //I handle the release from a drag here
                return true;
            }
    }
    return false;
}
</code></pre>
"
"4605527","9904844","13","<p>You can therefore use the following formulator to calculate the right amount of pixels from a dimension specified in dp</p>

<pre><code>public int convertToPx(int dp) {
    // Get the screen's density scale
    final float scale = getResources().getDisplayMetrics().density;
    // Convert the dps to pixels, based on density scale
    return (int) (dp * scale + 0.5f);
}
</code></pre>
"
"6330260","9906871","3","<p>When user click on the logout button then write the following code:</p>

<pre class=""lang-java prettyprint-override""><code>Intent intent = new Intent(this, LoginActivity.class);
intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
startActivity(intent);
</code></pre>

<p>And also when after login if you call new activity do not use finish();</p>
"
"6495898","9911364","10","<p>You can override onViewCreated() which is called right after all views had been inflated. It's the right place to fill in your Fragment's member <code>View</code> variables. Here's an example:</p>

<pre><code>class GalleryFragment extends Fragment {
    private Gallery gallery;

    (...)

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        view.findViewById(R.id.gallery);
        gallery.setAdapter(adapter);
        super.onViewCreated(view, savedInstanceState);
    }
}
</code></pre>
"
"2644134","9959762","5","<p><a href=""http://stackoverflow.com/a/3407871/445348"">olivierg's answer</a> worked for me and is the best solution if creating a custom Dialog class is the route you want to go.  However, it bothered me that I couldn't use the AlertDialog class. I wanted to be able to use the default system AlertDialog style. Creating a custom dialog class would not have this style.</p>

<p>So I found a solution (hack) that will work without having to create a custom class, you can use the existing builders.</p>

<p>The AlertDialog puts a View above your content view as a placeholder for the title. If you find the view and set the height to 0, the space goes away.</p>

<p>I have tested this on 2.3 and 3.0 so far, it is possible it doesn't work on every version yet.</p>

<p>Here are two helper methods for doing it:</p>

<pre><code>/**
 * Show a Dialog with the extra title/top padding collapsed.
 * 
 * @param customView The custom view that you added to the dialog
 * @param dialog The dialog to display without top spacing
     * @param show Whether or not to call dialog.show() at the end.
 */
public static void showDialogWithNoTopSpace(final View customView, final Dialog dialog, boolean show) {
    // Now we setup a listener to detect as soon as the dialog has shown.
    customView.getViewTreeObserver().addOnGlobalLayoutListener(new OnGlobalLayoutListener() {

        @Override
        public void onGlobalLayout() {
            // Check if your view has been laid out yet
            if (customView.getHeight() &gt; 0) {
                // If it has been, we will search the view hierarchy for the view that is responsible for the extra space. 
                LinearLayout dialogLayout = findDialogLinearLayout(customView);
                if (dialogLayout == null) {
                    // Could find it. Unexpected.

                } else {
                    // Found it, now remove the height of the title area
                    View child = dialogLayout.getChildAt(0);
                    if (child != customView) {
                        // remove height
                        LinearLayout.LayoutParams lp = (LinearLayout.LayoutParams) child.getLayoutParams();
                        lp.height = 0;
                        child.setLayoutParams(lp);

                    } else {
                        // Could find it. Unexpected.
                    }
                }

                // Done with the listener
                customView.getViewTreeObserver().removeGlobalOnLayoutListener(this);
            }
         }

    });

    // Show the dialog
    if (show)
             dialog.show();
}

/**
 * Searches parents for a LinearLayout
 * 
 * @param view to search the search from
 * @return the first parent view that is a LinearLayout or null if none was found
 */
public static LinearLayout findDialogLinearLayout(View view) {
    ViewParent parent = (ViewParent) view.getParent();
    if (parent != null) {
        if (parent instanceof LinearLayout) {
            // Found it
            return (LinearLayout) parent;

        } else if (parent instanceof View) {
            // Keep looking
            return findDialogLinearLayout((View) parent);

        }
    }

    // Couldn't find it
    return null;
}
</code></pre>

<p>Here is an example of how it is used:</p>

<pre><code>    Dialog dialog = new AlertDialog.Builder(this)
        .setView(yourCustomView)
        .create();

    showDialogWithNoTopSpace(yourCustomView, dialog, true);
</code></pre>

<p>If you are using this with a DialogFragment, override the DialogFragment's <code>onCreateDialog</code> method. Then create and return your dialog like the first example above. The only change is that you should pass false as the 3rd parameter (show) so that it doesn't call show() on the dialog.  The DialogFragment will handle that later.</p>

<p>Example:</p>

<pre><code>@Override
public Dialog onCreateDialog(Bundle savedInstanceState) {
    Dialog dialog = new AlertDialog.Builder(getContext())
        .setView(yourCustomView)
        .create();

    showDialogWithNoTopSpace(yourCustomView, dialog, false);
    return dialog;
}
</code></pre>

<p>As I test this further I'll be sure to update with any additional tweaks needed.</p>
"
"2139134","10024875","7","<p>thnks...for parcelable help
bt i found one more optional solution </p>

<pre><code> public class getsetclass implements Serializable {
        private int dt = 10;
    //pass any object, drwabale 
        public int getDt() {
            return dt;
        }

        public void setDt(int dt) {
            this.dt = dt;
        }
    }
</code></pre>

<p>In Activity One</p>

<pre><code>getsetclass d = new getsetclass ();
                d.setDt(50);
                LinkedHashMap&lt;String, Object&gt; obj = new LinkedHashMap&lt;String, Object&gt;();
                obj.put(""hashmapkey"", d);
            Intent inew = new Intent(SgParceLableSampelActivity.this,
                    ActivityNext.class);
            Bundle b = new Bundle();
            b.putSerializable(""bundleobj"", obj);
            inew.putExtras(b);
            startActivity(inew);
</code></pre>

<p>Get Data In Activity 2</p>

<pre><code> try {  setContentView(R.layout.main);
            Bundle bn = new Bundle();
            bn = getIntent().getExtras();
            HashMap&lt;String, Object&gt; getobj = new HashMap&lt;String, Object&gt;();
            getobj = (HashMap&lt;String, Object&gt;) bn.getSerializable(""bundleobj"");
            getsetclass  d = (getsetclass) getobj.get(""hashmapkey"");
        } catch (Exception e) {
            Log.e(""Err"", e.getMessage());
        }
</code></pre>
"
"3035692","10044003","-4","<pre><code>/**
 * This method returns a bitmap related to resource id. It is ready to use method, you can 
 * use it by simply copying in your project.
 * 
 * @param context Context of calling activity
 * @param drawableId Resource ID of bitmap drawable
 * @return Bitmap whose resource id was passed to method.
 */
public static Bitmap getBitmapFromDrawableId(Context context,int drawableId){
    Bitmap bitmap = null;
    try {
        BitmapDrawable drawable = (BitmapDrawable)context.getResources().getDrawable(drawableId);
        bitmap = drawable.getBitmap();

    } catch (Exception e) {
        e.printStackTrace();
    }
    return bitmap;
}
/**
 * This method returns a bitmap related to drawable. It is ready to use method, you can 
 * use it by simply copying in your project.
 * 
 * @param drawable Drawable resource of image 
 * @return Bitmap whose resource id was passed to method.
 */
public static Bitmap getBitmapFromDrawable(Drawable drawable){
    Bitmap bitmap = null;
    try {
        BitmapDrawable bitmapDrawable = (BitmapDrawable)drawable;
        bitmap = bitmapDrawable.getBitmap();

    } catch (Exception e) {
        e.printStackTrace();
    }
    return bitmap;
}
</code></pre>
"
"2217753","10112497","0","<p>If the <code>setBackgroundColor</code> is added for onItemClick event, it will not work unless you can put it after the click event.</p>

<p>Try to add debug code in the adapter's <code>getView</code> method, you will find that getView will be called again whenever you click on the screen.  So, after you set the background color, the system will redraw the screen with original setting.  Don't know why it waste resource to rebuild the screen whenever it's being click, there already have other way that we can notify the system to redraw the screen when needed.</p>

<p>Maybe you can add some control flag to determine the background color for individual row, then modify the getView method to set the color according to this control flag.  So, the background color will be changed when it redraw the screen.</p>

<p>I'm also looking for an official solution on it.</p>
"
"3331527","10114854","0","<p>Above code made a little cleaner. InputStreams have finally close wrapping to ensure they get closed as well:</p>

<p>*Note
<br>Input: InputStream is, int w, int h 
<br>
Output: Bitmap</p>

<pre><code>    try
    {

        final int inWidth;
        final int inHeight;

        final File tempFile = new File(temp, System.currentTimeMillis() + is.toString() + "".temp"");

        {

            final FileOutputStream tempOut = new FileOutputStream(tempFile);

            StreamUtil.copyTo(is, tempOut);

            tempOut.close();

        }



        {

            final InputStream in = new FileInputStream(tempFile);
            final BitmapFactory.Options options = new BitmapFactory.Options();

            try {

                // decode image size (decode metadata only, not the whole image)
                options.inJustDecodeBounds = true;
                BitmapFactory.decodeStream(in, null, options);

            }
            finally {
                in.close();
            }

            // save width and height
            inWidth = options.outWidth;
            inHeight = options.outHeight;

        }

        final Bitmap roughBitmap;

        {

            // decode full image pre-resized
            final InputStream in = new FileInputStream(tempFile);

            try {

                final BitmapFactory.Options options = new BitmapFactory.Options();
                // calc rought re-size (this is no exact resize)
                options.inSampleSize = Math.max(inWidth/w, inHeight/h);
                // decode full image
                roughBitmap = BitmapFactory.decodeStream(in, null, options);

            }
            finally {
                in.close();
            }

            tempFile.delete();

        }

        float[] values = new float[9];

        {

            // calc exact destination size
            Matrix m = new Matrix();
            RectF inRect = new RectF(0, 0, roughBitmap.getWidth(), roughBitmap.getHeight());
            RectF outRect = new RectF(0, 0, w, h);
            m.setRectToRect(inRect, outRect, Matrix.ScaleToFit.CENTER);
            m.getValues(values);

        }

        // resize bitmap
        final Bitmap resizedBitmap = Bitmap.createScaledBitmap(roughBitmap, (int) (roughBitmap.getWidth() * values[0]), (int) (roughBitmap.getHeight() * values[4]), true);

        return resizedBitmap;

    }
    catch (IOException e) {

        logger.error(""Error:"" , e);
        throw new ResourceException(""could not create bitmap"");

    }
</code></pre>
"
"8181828","10198865","48","<p>I recently had to implement the function you described. What i did was to have a Runnable checking out if the ScrollView had stopped scrolling by comparing the value returned by getScrollY() when the onTouchEvent is first triggered with the value returned after a time defined by the variable <strong>newCheck</strong>. </p>

<p>See code below (working solution):</p>

<pre><code>public class MyScrollView extends ScrollView{

private Runnable scrollerTask;
private int initialPosition;

private int newCheck = 100;
private static final String TAG = ""MyScrollView"";

public interface OnScrollStoppedListener{
    void onScrollStopped();
}

private OnScrollStoppedListener onScrollStoppedListener;

public MyScrollView(Context context, AttributeSet attrs) {
    super(context, attrs);

    scrollerTask = new Runnable() {

        public void run() {

            int newPosition = getScrollY();
            if(initialPosition - newPosition == 0){//has stopped

                if(onScrollStoppedListener!=null){

                    onScrollStoppedListener.onScrollStopped();
                }
            }else{
                initialPosition = getScrollY();
                MyScrollView.this.postDelayed(scrollerTask, newCheck);
            }
        }
    };
}

public void setOnScrollStoppedListener(MyScrollView.OnScrollStoppedListener listener){
    onScrollStoppedListener = listener;
}

public void startScrollerTask(){

    initialPosition = getScrollY();
    MyScrollView.this.postDelayed(scrollerTask, newCheck);
}

}
</code></pre>

<p>Then i have:</p>

<pre><code>scroll.setOnTouchListener(new OnTouchListener() {

        public boolean onTouch(View v, MotionEvent event) {

            if (event.getAction() == MotionEvent.ACTION_UP) {

                scroll.startScrollerTask();
            }

            return false;
        }
});
scroll.setOnScrollStoppedListener(new OnScrollStoppedListener() {

        public void onScrollStopped() {

            Log.i(TAG, ""stopped"");

        }
});
</code></pre>

<p>BTW i used i few ideas from other replies to do this in my app.
Hope this helps. Any questions feel free to ask. 
Cheers.</p>
"
"3166501","10277570","7","<p>If you want to retrieve the density from a Service it works like this:</p>

<pre><code>WindowManager wm = (WindowManager) this.getSystemService(Context.WINDOW_SERVICE);
DisplayMetrics metrics = new DisplayMetrics();
wm.getDefaultDisplay().getMetrics(metrics);
</code></pre>
"
"5832368","10292598","2","<p>Use this method which returns <strong>true</strong> when the device is a tablet</p>

<pre><code>public boolean isTablet(Context context) {  
        return (context.getResources().getConfiguration().screenLayout   
                &amp; Configuration.SCREENLAYOUT_SIZE_MASK)    
                &gt;= Configuration.SCREENLAYOUT_SIZE_LARGE; 
    }
</code></pre>
"
"5033012","10362790","2","<p>I just created the following method (based on the ideas of Chase) which might help you if you want to draw text to any canvas:</p>

<pre><code>private static void drawText(Canvas canvas, int xStart, int yStart,
        int xWidth, int yHeigth, String textToDisplay,
        TextPaint paintToUse, float startTextSizeInPixels,
        float stepSizeForTextSizeSteps) {

    // Text view line spacing multiplier
    float mSpacingMult = 1.0f;
    // Text view additional line spacing
    float mSpacingAdd = 0.0f;
    StaticLayout l = null;
    do {
        paintToUse.setTextSize(startTextSizeInPixels);
        startTextSizeInPixels -= stepSizeForTextSizeSteps;
        l = new StaticLayout(textToDisplay, paintToUse, xWidth,
                Alignment.ALIGN_NORMAL, mSpacingMult, mSpacingAdd, true);
    } while (l.getHeight() &gt; yHeigth);

    int textCenterX = xStart + (xWidth / 2);
    int textCenterY = (yHeigth - l.getHeight()) / 2;

    canvas.save();
    canvas.translate(textCenterX, textCenterY);
    l.draw(canvas);
    canvas.restore();
}
</code></pre>

<p>This could be used e.g. in any onDraw() method of any custom view.</p>
"
"6330260","10407660","19","<p><strong>When the user wishes to exit all open activities</strong>, they should press a button which loads the first Activity that runs when your application starts, clear all the other activities, then have the last remaining activity finish. Have the following code run when the user presses the exit button. In my case, <code>LoginActivity</code> is the first activity in my program to run.</p>

<pre><code>Intent intent = new Intent(getApplicationContext(), LoginActivity.class);
intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
intent.putExtra(""EXIT"", true);
startActivity(intent);
</code></pre>

<p>The above code clears all the activities except for <code>LoginActivity</code>. Then put the following code inside the <code>LoginActivity</code>'s <code>onCreate(...)</code>, to listen for when <code>LoginActivity</code> is recreated and the 'EXIT' signal was passed:</p>

<pre><code>if (getIntent().getBooleanExtra(""EXIT"", false)) {
    finish();  
}
</code></pre>

<p><strong>Why is making an exit button in Android so hard?</strong></p>

<p>Android tries hard to discourage you from having an ""exit"" button in your application, because they want the user to never care about whether or not the programs they use are running in the background or not. </p>

<p>The Android OS developers want your program to be able to survive an unexpected shutdown and power off of the phone, and when the user restarts the program, they pick up right where they left off. So the user can receive a phone call while they use your application, and open maps which requires your application to be freed for more resources. </p>

<p>When the user resumes your application, they pick up right where they left off with no interruption. This exit button is usurping power from the activity manager, potentially causing problems with the automatically managed android program life cycle.</p>
"
"5105354","10420979","57","<p>To cause the keyboard to appear, use</p>

<pre><code>getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE);
</code></pre>

<p>This method is more reliable than invoking the InputMethodManager directly.</p>

<p>To close it, use</p>

<pre><code>getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);
</code></pre>
"
"2795833","10453034","24","<p>A fully way to specify the current orientation of the phone:</p>

<pre><code>    public String getRotation(Context context){
    final int rotation = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay().getOrientation();
           switch (rotation) {
            case Surface.ROTATION_0:
                return ""portrait"";
            case Surface.ROTATION_90:
                return ""landscape"";
            case Surface.ROTATION_180:
                return ""reverse portrait"";
            default:
                return ""reverse landscape"";
            }
        }
</code></pre>

<p>Chear
Binh Nguyen</p>
"
"6520718","10477206","6","<pre><code>DisplayMetrics metrics = new DisplayMetrics();
getWindowManager().getDefaultDisplay().getMetrics(metrics);

int height = metrics.heightPixels;
int width = metrics.widthPixels;
</code></pre>

<p>i guess the code which you wrote is deprecated.</p>
"
"3495890","10554824","2","<p>hey I had a similar issue. I wanted to display a list view that didn't scroll and I found that manipulating the parameters worked but was inefficient and would behave differently on different devices.. as a result, this is a piece of my schedule code which actually does this very efficiently.</p>

<pre><code>db = new dbhelper(this);

 cursor = db.dbCursor();
int count = cursor.getCount();
if (count &gt; 0)
{    
LinearLayout linearLayout = (LinearLayout) findViewById(R.id.layoutId);
startManagingCursor(YOUR_CURSOR);

YOUR_ADAPTER(**or SimpleCursorAdapter **) adapter = new YOUR_ADAPTER(this,
    R.layout.itemLayout, cursor, arrayOrWhatever, R.id.textViewId,
    this.getApplication());

int i;
for (i = 0; i &lt; count; i++){
  View listItem = adapter.getView(i,null,null);
  linearLayout.addView(listItem);
   }
}
</code></pre>

<p>Note: if you use this, <code>notifyDataSetChanged();</code> will not work as intended as the views will not be redrawn.
Do this if you need a work around</p>

<pre><code>adapter.registerDataSetObserver(new DataSetObserver() {

            @Override
            public void onChanged() {
                super.onChanged();
                removeAndRedrawViews();

            }

        });
</code></pre>
"
"3226495","10583664","12","<pre><code>System.exit(0);
</code></pre>

<p>Is probably what you are looking for. It will close the entire application and take you to the home Screen.</p>
"
"3035692","10600736","244","<pre><code>public static Bitmap drawableToBitmap (Drawable drawable) {
    if (drawable instanceof BitmapDrawable) {
        return ((BitmapDrawable)drawable).getBitmap();
    }

    Bitmap bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), Config.ARGB_8888);
    Canvas canvas = new Canvas(bitmap); 
    drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
    drawable.draw(canvas);

    return bitmap;
}
</code></pre>
"
"2317428","10732990","3","<p>I have written a small example for detecting vertical and horizontal shakes and showing a <code>Toast</code>.</p>

<pre><code>public class Accelerometerka2Activity extends Activity implements SensorEventListener { 
    private float mLastX, mLastY, mLastZ;
    private boolean mInitialized;
    private SensorManager mSensorManager;
    private Sensor mAccelerometer;
    private final float NOISE = (float) 8.0;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        mInitialized = false;
        mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
        mAccelerometer = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
        mSensorManager.registerListener(this, mAccelerometer , SensorManager.SENSOR_DELAY_NORMAL);
    }

    protected void onResume() {
        super.onResume();
        mSensorManager.registerListener(this, mAccelerometer, SensorManager.SENSOR_DELAY_NORMAL);
    }

    protected void onPause() {
        super.onPause();
        mSensorManager.unregisterListener(this);
    }


    public void onAccuracyChanged(Sensor sensor, int accuracy) {
        // can be safely ignored for this demo
    }


    public void onSensorChanged(SensorEvent event) {
        float x = event.values[0];
        float y = event.values[1];
        float z = event.values[2];
        if (!mInitialized) {
            mLastX = x;
            mLastY = y;
            mLastZ = z;
            mInitialized = true;
        } else {
            float deltaX = Math.abs(mLastX - x);
            float deltaY = Math.abs(mLastY - y);
            float deltaZ = Math.abs(mLastZ - z);
            if (deltaX &lt; NOISE) deltaX = (float)0.0;
            if (deltaY &lt; NOISE) deltaY = (float)0.0;
            if (deltaZ &lt; NOISE) deltaZ = (float)0.0;
            mLastX = x;
            mLastY = y;
            mLastZ = z;
            if (deltaX &gt; deltaY) {
                Toast.makeText(getBaseContext(), ""Horizental"", Toast.LENGTH_SHORT).show();
            } else if (deltaY &gt; deltaX) {
                Toast.makeText(getBaseContext(), ""Vertical"", Toast.LENGTH_SHORT).show();
            }
        }
    }
}
</code></pre>
"
"6070805","10751989","16","<p>This is a method, where you don't have to override the EditText class. You just catch and replace the newlines with empty strings.</p>

<pre><code>myEditTextObject.addTextChangedListener(new TextWatcher() {


        public void onTextChanged(CharSequence s, int start, int before, int count) {

        }

        public void beforeTextChanged(CharSequence s, int start, int count,
                int after) {

        }

        public void afterTextChanged(Editable s) {
            for(int i = s.length(); i &gt;= 0; i--){

                if(s.subSequence(i-1, i).toString().equals(""\n""))
                     s.replace(i-1, i, """");

            }


        }
    });
</code></pre>

<p>This solution was created in collaboration with Mobile Identity: <a href=""http://www.mobile-identity.com/"" rel=""nofollow"">http://www.mobile-identity.com/</a></p>
"
"3916330","10815600","3","<p>These settings worked for me:</p>

<blockquote>
<pre><code>    wv.setInitialScale(1);
    wv.getSettings().setLoadWithOverviewMode(true);
    wv.getSettings().setUseWideViewPort(true);
    wv.getSettings().setJavaScriptEnabled(true);
</code></pre>
</blockquote>

<p><em>setInitialScale(1)</em> was missing in my attempts.</p>

<p>Although documentation says that <em>0</em> will zoom all the way out if <em>setUseWideViewPort</em> is set to <em>true</em> but <em>0</em> did not work for me and I had to set <em>1</em>.</p>
"
"2160619","10833835","2","<p>Based on the solutions by Micah Hainline and alebs comment, I came of with the following approach that works with Spanned texts, so that e.g. <code>myTextView.setText(Html.fromHtml(""&lt;b&gt;Testheader&lt;/b&gt; - Testcontent""));</code> works!
Note that this only works with <code>Spanned</code> right now. It could maybe be modified to work with <code>String</code> and <code>Spanned</code> either way.</p>

<pre><code>public class EllipsizingTextView extends TextView {
    private static final Spanned ELLIPSIS = new SpannedString(""…"");

      public interface EllipsizeListener {
        void ellipsizeStateChanged(boolean ellipsized);
      }

      private final List&lt;EllipsizeListener&gt; ellipsizeListeners = new ArrayList&lt;EllipsizeListener&gt;();
      private boolean isEllipsized;
      private boolean isStale;
      private boolean programmaticChange;
      private Spanned fullText;
      private int maxLines;
      private float lineSpacingMultiplier = 1.0f;
      private float lineAdditionalVerticalPadding = 0.0f;

      public EllipsizingTextView(Context context) {
        this(context, null);
      }

      public EllipsizingTextView(Context context, AttributeSet attrs) {
        this(context, attrs, 0);
      }

      public EllipsizingTextView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        super.setEllipsize(null);
        TypedArray a = context.obtainStyledAttributes(attrs, new int[] { android.R.attr.maxLines });
        setMaxLines(a.getInt(0, Integer.MAX_VALUE));
      }

      public void addEllipsizeListener(EllipsizeListener listener) {
        if (listener == null) {
          throw new NullPointerException();
        }
        ellipsizeListeners.add(listener);
      }

      public void removeEllipsizeListener(EllipsizeListener listener) {
        ellipsizeListeners.remove(listener);
      }

      public boolean isEllipsized() {
        return isEllipsized;
      }

      @Override
      public void setMaxLines(int maxLines) {
        super.setMaxLines(maxLines);
        this.maxLines = maxLines;
        isStale = true;
      }

      public int getMaxLines() {
        return maxLines;
      }

      public boolean ellipsizingLastFullyVisibleLine() {
        return maxLines == Integer.MAX_VALUE;
      }

      @Override
      public void setLineSpacing(float add, float mult) {
        this.lineAdditionalVerticalPadding = add;
        this.lineSpacingMultiplier = mult;
        super.setLineSpacing(add, mult);
      }

      @Override
    public void setText(CharSequence text, BufferType type) {
          if (!programmaticChange &amp;&amp; text instanceof Spanned) {
              fullText = (Spanned) text;
              isStale = true;
            }
        super.setText(text, type);
    }

      @Override
      protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        super.onSizeChanged(w, h, oldw, oldh);
        if (ellipsizingLastFullyVisibleLine()) {
          isStale = true;
        }
      }

      public void setPadding(int left, int top, int right, int bottom) {
        super.setPadding(left, top, right, bottom);
        if (ellipsizingLastFullyVisibleLine()) {
          isStale = true;
        }
      }

      @Override
      protected void onDraw(Canvas canvas) {
        if (isStale) {
          resetText();
        }
        super.onDraw(canvas);
      }

      private void resetText() {
        Spanned workingText = fullText;
        boolean ellipsized = false;
        Layout layout = createWorkingLayout(workingText);
        int linesCount = getLinesCount();
        if (layout.getLineCount() &gt; linesCount) {
          // We have more lines of text than we are allowed to display.
          workingText = (Spanned) fullText.subSequence(0, layout.getLineEnd(linesCount - 1));
          while (createWorkingLayout((Spanned) TextUtils.concat(workingText, ELLIPSIS)).getLineCount() &gt; linesCount) {
            int lastSpace = workingText.toString().lastIndexOf(' ');
            if (lastSpace == -1) {
              break;
            }
            workingText = (Spanned) workingText.subSequence(0, lastSpace);
          }
          workingText = (Spanned) TextUtils.concat(workingText, ELLIPSIS);
          ellipsized = true;
        }
        if (!workingText.equals(getText())) {
          programmaticChange = true;
          try {
            setText(workingText);
          } finally {
            programmaticChange = false;
          }
        }
        isStale = false;
        if (ellipsized != isEllipsized) {
          isEllipsized = ellipsized;
          for (EllipsizeListener listener : ellipsizeListeners) {
            listener.ellipsizeStateChanged(ellipsized);
          }
        }
      }

      /**
       * Get how many lines of text we are allowed to display.
       */
      private int getLinesCount() {
        if (ellipsizingLastFullyVisibleLine()) {
          int fullyVisibleLinesCount = getFullyVisibleLinesCount();
          if (fullyVisibleLinesCount == -1) {
            return 1;
          } else {
            return fullyVisibleLinesCount;
          }
        } else {
          return maxLines;
        }
      }

      /**
       * Get how many lines of text we can display so their full height is visible.
       */
      private int getFullyVisibleLinesCount() {
        Layout layout = createWorkingLayout(new SpannedString(""""));
        int height = getHeight() - getPaddingTop() - getPaddingBottom();
        int lineHeight = layout.getLineBottom(0);
        return height / lineHeight;
      }

      private Layout createWorkingLayout(Spanned workingText) {
        return new StaticLayout(workingText, getPaint(),
            getWidth() - getPaddingLeft() - getPaddingRight(),
            Alignment.ALIGN_NORMAL, lineSpacingMultiplier,
            lineAdditionalVerticalPadding, false /* includepad */);
      }

      @Override
      public void setEllipsize(TruncateAt where) {
        // Ellipsize settings are not respected
      }
}
</code></pre>
"
"2795833","10837288","3","<p>The Android SDK can tell you this just fine:</p>

<pre><code>getResources().getConfiguration().orientation
</code></pre>
"
"2471935","10868129","15","<p>The accepted answer above is great if you are loading the image based on a button click, however if you are doing it in a new activity it freezes up the UI for a second or two. Looking around I found that a simple asynctask eliminated this problem. </p>

<p>To use an asynctask add this class at the end of your activity:</p>

<pre><code>private class DownloadImageTask extends AsyncTask&lt;String, Void, Bitmap&gt; {
ImageView bmImage;

public DownloadImageTask(ImageView bmImage) {
    this.bmImage = bmImage;
}

protected Bitmap doInBackground(String... urls) {
    String urldisplay = urls[0];
    Bitmap mIcon11 = null;
    try {
        InputStream in = new java.net.URL(urldisplay).openStream();
        mIcon11 = BitmapFactory.decodeStream(in);
    } catch (Exception e) {
        Log.e(""Error"", e.getMessage());
        e.printStackTrace();
    }
    return mIcon11;
}

protected void onPostExecute(Bitmap result) {
 }   bmImage.setImageBitmap(result);
}
</code></pre>

<p>And call from your onCreate() method using:</p>

<pre><code>new DownloadImageTask((ImageView) findViewById(R.id.imageView1))
        .execute(MY_URL_STRING);
</code></pre>

<p>The result is a quickly loaded activity and an imageview that shows up a split second later depending on the user's network speed.</p>
"
"2644134","10926688","3","<p>If we simply use the dialog without the <code>setTitle()</code>,then is that gonna work in removing the space of the title ?</p>

<pre><code>mUSSDDialog = new AlertDialog.Builder(context).setView(dialogView)
.setPositiveButton(R.string.send_button,DialogListener)
.setNegativeButton(R.string.cancel,DialogListener)
.setCancelable(false).create();
</code></pre>
"
"3166501","10948031","170","<p>This also works:</p>

<pre><code> getResources().getDisplayMetrics().density;
</code></pre>

<p>This will give you:</p>

<p>0.75 - ldpi</p>

<p>1.0 - mdpi</p>

<p>1.5 - hdpi</p>

<p>2.0 - xhdpi</p>

<p>3.0 - xxhdpi</p>

<p>4.0 - xxxhdpi</p>

<p><img src=""http://i.stack.imgur.com/O6Lm1.png"" alt=""enter image description here""></p>

<p><a href=""http://developer.android.com/reference/android/util/DisplayMetrics.html#density"">ref: density</a></p>
"
"6520718","10957849","13","<p>This is what finally worked for me:</p>

<pre><code>DisplayMetrics metrics = this.getResources().getDisplayMetrics();
int width = metrics.widthPixels;
int height = metrics.heightPixels;
</code></pre>
"
"2403632","10964161","3","<p>If anyone is getting:</p>

<blockquote>
  <blockquote>
    <p>Cannot make a static reference to the non-static method getSystemService(String) from the type Activity</p>
  </blockquote>
</blockquote>

<p>Try adding <strong>context</strong> to getSystemService call.</p>

<p>So</p>

<pre><code>InputMethodManager imm = 
(InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);
imm.toggleSoftInput(InputMethodManager.SHOW_FORCED,0);
</code></pre>
"
"2780102","10996562","-2","<pre><code>Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.setComponent(new ComponentName(""package_name"",""package_name.class_name""));
        intent.putExtra(""grace"", ""Hi"");
        startActivity(intent);
</code></pre>
"
"3624280","11027631","68","<p>To store values in shared preferences:</p>

<pre><code>  SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);
  SharedPreferences.Editor editor = preferences.edit();
  editor.putString(""Name"",""Harneet"");
  editor.apply();
</code></pre>

<p>To retrieve values from shared preferences:</p>

<pre><code>  SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);
  String name = preferences.getString(""Name"","""");
  if(!name.equalsIgnoreCase(""""))
  {
    name = name+""  Sethi"";  /* Edit the value here*/
  }
</code></pre>
"
"5832368","11041530","5","<p>My assumption is that when you define 'Mobile/Phone' you wish to know whether you can make a phone call on the device which cannot be done on something that would be defined as a 'Tablet'. The way to verify this is below. If you wish to know something based on sensors, screen size, etc then this is really a different question. </p>

<p>Also, while using screen resolution, or the resource managements large vs xlarge, may have been a valid approach in the past new 'Mobile' devices are now coming with such large screens and high resolutions that they are blurring this line while if you really wish to know phone call vs no phone call capability the below is 'best'.</p>

<pre><code>TelephonyManager manager = (TelephonyManager)context.getSystemService(Context.TELEPHONY_SERVICE);
        if(manager.getPhoneType() == TelephonyManager.PHONE_TYPE_NONE){
            return ""Tablet"";
        }else{
            return ""Mobile"";
        }
</code></pre>
"
"3145089","11049861","3","<p>Use the below code, it will give the best provider available:</p>

<pre><code>    String locCtx = Context.LOCATION_SERVICE; 

    LocationManager locationMgr = (LocationManager) ctx.getSystemService(locCtx);

    Criteria criteria  = new Criteria();
    criteria.setAccuracy(Criteria.ACCURACY_FINE);
    criteria.setAltitudeRequired(false);
    criteria.setBearingRequired(false);
    criteria.setCostAllowed(true);
    criteria.setPowerRequirement(Criteria.POWER_LOW);

    String provider = locationMgr.getBestProvider(criteria, true);

    System.out.println(""Best Available provider::::""+provider);
</code></pre>
"
"2736389","11120538","12","<p>I made a singleton helper class that holds temporary objects.</p>

<pre><code>public class IntentHelper {

    private static IntentHelper _instance;
    private Hashtable&lt;String, Object&gt; _hash;

    private IntentHelper() {
        _hash = new Hashtable&lt;String, Object&gt;();
    }

    private static IntentHelper getInstance() {
        if(_instance==null) {
            _instance = new IntentHelper();
        }
        return _instance;
    }

    public static void addObjectForKey(Object object, String key) {
        getInstance()._hash.put(key, object);
    }

    public static Object getObjectForKey(String key) {
        IntentHelper helper = getInstance();
        Object data = helper._hash.get(key);
        helper._hash.remove(key);
        helper = null;
        return data;
    }
}
</code></pre>

<p>Instead of putting your objects within Intent, use IntentHelper:</p>

<pre><code>IntentHelper.addObjectForKey(obj, ""key"");
</code></pre>

<p>Inside your new Activity, you can get the object:</p>

<pre><code>Object obj = (Object) IntentHelper.getObjectForKey(""key"");
</code></pre>

<p>Bear in mind that once loaded, the object is removed to avoid unnecessary references. </p>
"
"2973270","11126637","0","<p>I like pospi's suggestion. Why not go all-out any use the 'tag' property of a view (which you can specify in XML - 'android:tag') to specify any additional styling that you can't do in XML. I like JSON so I'd use a JSON string to specify a key/value set. This class does the work - just call <code>Style.setContentView(this, [resource id])</code> in your activity.</p>

<pre><code>public class Style {

  /**
   * Style a single view.
   */
  public static void apply(View v) {
    if (v.getTag() != null) {
      try {
        JSONObject json = new JSONObject((String)v.getTag());
        if (json.has(""typeface"") &amp;&amp; v instanceof TextView) {
          ((TextView)v).setTypeface(Typeface.createFromAsset(v.getContext().getAssets(),
                                                             json.getString(""typeface"")));
        }
      }
      catch (JSONException e) {
        // Some views have a tag without it being explicitly set!
      }
    }
  }

  /**
   * Style the passed view hierarchy.
   */
  public static View applyTree(View v) {
    apply(v);
    if (v instanceof ViewGroup) {
      ViewGroup g = (ViewGroup)v;
      for (int i = 0; i &lt; g.getChildCount(); i++) {
        applyTree(g.getChildAt(i));
      }
    }
    return v;
  }

  /**
   * Inflate, style, and set the content view for the passed activity.
   */
  public static void setContentView(Activity activity, int resource) {
    activity.setContentView(applyTree(activity.getLayoutInflater().inflate(resource, null)));
  }
}
</code></pre>

<p>Obviously you'd want to handle more than just the typeface to make using JSON worthwhile. </p>

<p>A benefit of the 'tag' property is that you can set it on a base style which you use as a theme and thus have it apply to all of your views automatically. <strong>EDIT:</strong> Doing this results in a crash during inflation on Android 4.0.3. You can still use a style and apply it to text views individually.</p>

<p>One thing you'll see in the code - some views have a tag without one being explicitly set - bizarrely it's the string 'Αποκοπή' - which is 'cut' in greek, according to google translate! What the hell...?</p>
"
"2403632","11134609","5","<p>Yes you can do with <code>setOnFocusChangeListener</code> it  will help you.</p>

<pre><code>editText.setOnFocusChangeListener(new View.OnFocusChangeListener() {
    @Override
    public void onFocusChange(View v, boolean hasFocus) {
        if (hasFocus) {
            dialog.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);
        }
    }
});
</code></pre>
"
"2403632","11155404","85","<p>For showing keyboard use:</p>

<pre><code>InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
imm.toggleSoftInput(InputMethodManager.SHOW_FORCED,0);
</code></pre>

<p>For hiding keyboard use:</p>

<pre><code>InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
imm.hideSoftInputFromWindow(view.getWindowToken(),0); 
</code></pre>
"
"3495890","11157717","0","<p>thanks to <a href=""http://stackoverflow.com/a/4636284/579646"">Vinay's code</a> here is my code for when you can't have a listview inside a scrollview yet you need something like that</p>

<pre><code>LayoutInflater li = LayoutInflater.from(this);

                RelativeLayout parent = (RelativeLayout) this.findViewById(R.id.relativeLayoutCliente);

                int recent = 0;

                for(Contatto contatto : contatti)
                {
                    View inflated_layout = li.inflate(R.layout.header_listview_contatti, layout, false);


                    inflated_layout.setId(contatto.getId());
                    ((TextView)inflated_layout.findViewById(R.id.textViewDescrizione)).setText(contatto.getDescrizione());
                    ((TextView)inflated_layout.findViewById(R.id.textViewIndirizzo)).setText(contatto.getIndirizzo());
                    ((TextView)inflated_layout.findViewById(R.id.textViewTelefono)).setText(contatto.getTelefono());
                    ((TextView)inflated_layout.findViewById(R.id.textViewMobile)).setText(contatto.getMobile());
                    ((TextView)inflated_layout.findViewById(R.id.textViewFax)).setText(contatto.getFax());
                    ((TextView)inflated_layout.findViewById(R.id.textViewEmail)).setText(contatto.getEmail());



                    RelativeLayout.LayoutParams relativeParams = new RelativeLayout.LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.WRAP_CONTENT);

                    if (recent == 0)
                    {
                        relativeParams.addRule(RelativeLayout.BELOW, R.id.headerListViewContatti);
                    }
                    else
                    {
                        relativeParams.addRule(RelativeLayout.BELOW, recent);
                    }
                    recent = inflated_layout.getId();

                    inflated_layout.setLayoutParams(relativeParams);
                    //inflated_layout.setLayoutParams( new RelativeLayout.LayoutParams(source));

                    parent.addView(inflated_layout);
                }
</code></pre>

<p>the relativeLayout stays inside a ScrollView so it all becomes scrollable :)</p>
"
"2201917","11185487","7","<p><strong>other option In Load Url in Same Application using Webview</strong></p>

<pre><code>webView = (WebView) findViewById(R.id.webView1);
        webView.getSettings().setJavaScriptEnabled(true);
        webView.loadUrl(""http://www.google.com"");
</code></pre>
"
"5763304","11211029","1","<p>Here is a simpler solution. Override the <code>onTouch()</code> for the <code>ScrollView</code> <code>OnTouchListener</code> and return false if you want to bypass the scroll by touch. The programmatic scrolling still works and no need to extend the <code>ScrollView</code> class.</p>

<pre><code>mScroller.setOnTouchListener(new OnTouchListener() {
@Override
public boolean onTouch(View v, MotionEvent event) {
  return isScrollable;
}
});
</code></pre>
"
"2780102","11229482","7","<p>Using the solution from inversus, I expanded the snippet with a function, that will be called when the desired application is not installed at the moment. So it works like: <em>Run application by package name. If not found, open Android market - Google play for this package</em>.</p>

<pre><code>public void startApplication(String packageName)
{
    try
    {
        Intent intent = new Intent(""android.intent.action.MAIN"");
        intent.addCategory(""android.intent.category.LAUNCHER"");

        intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
        List&lt;ResolveInfo&gt; resolveInfoList = getPackageManager().queryIntentActivities(intent, 0);

        for(ResolveInfo info : resolveInfoList)
            if(info.activityInfo.packageName.equalsIgnoreCase(packageName))
            {
                launchComponent(info.activityInfo.packageName, info.activityInfo.name);
                return;
            }

        // No match, so application is not installed
        showInMarket(packageName);
    }
    catch (Exception e) 
    {
        showInMarket(packageName);
    }
}

private void launchComponent(String packageName, String name)
{
    Intent intent = new Intent(""android.intent.action.MAIN"");
    intent.addCategory(""android.intent.category.LAUNCHER"");
    intent.setComponent(new ComponentName(packageName, name));
    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);

    startActivity(intent);
}

private void showInMarket(String packageName)
{
    Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(""market://details?id="" + packageName));
    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    startActivity(intent);
}
</code></pre>

<p>And it is used like this:</p>

<pre><code>startApplication(""org.teepee.bazant"");
</code></pre>
"
"2160619","11247803","9","<p>Got this problem to, and finaly, I build myself a short solution. 
You just have to ellipsize manually the line you want, your maxLine attribute will cut your text.</p>

<p>This example cut your text for 3 lines max</p>

<pre><code>        final TextView title = (TextView)findViewById(R.id.text);
        title.setText(""A really long text"");
        ViewTreeObserver vto = title.getViewTreeObserver();
        vto.addOnGlobalLayoutListener(new OnGlobalLayoutListener() {

            @Override
            public void onGlobalLayout() {
                ViewTreeObserver obs = title.getViewTreeObserver();
                obs.removeGlobalOnLayoutListener(this);
                if(title.getLineCount() &gt; 3){
                    Log.d("""",""Line[""+title.getLineCount()+""]""+title.getText());
                    int lineEndIndex = title.getLayout().getLineEnd(2);
                    String text = title.getText().subSequence(0, lineEndIndex-3)+""..."";
                    title.setText(text);
                    Log.d("""",""NewText:""+text);
                }

            }
        });
</code></pre>
"
"5832368","11378193","0","<p>I think a tablet has a min and max 600 px width and height,<br>
so need to know the screen density and the height/width in dp,<br>
to retrieve the value : <br></p>

<pre><code>DisplayMetrics metrics = new DisplayMetrics();
activity.getWindowManager().getDefaultDisplay().getMetrics(metrics);
Display display = ((WindowManager)getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
int width = display.getWidth(); 
int height = display.getHeight(); 
float density = metrics.density;  
if((width/density&gt;=600 &amp;&amp; height/density&gt;=600))
 isTablette = true;
else
 isTablette = false;
</code></pre>

<p></p>
"
"4165414","11448223","1","<p>There is a simpler approach, based on iPhone same issue. Simply override the background's layout on touch event, where the edit text is contained. Just use this code in the activity's OnCreate (login_fondo is the root layout):</p>

<pre><code>    final LinearLayout llLogin = (LinearLayout)findViewById(R.id.login_fondo);
    llLogin.setOnTouchListener(
            new OnTouchListener()
            {
                @Override
                public boolean onTouch(View view, MotionEvent ev) {
                    InputMethodManager imm = (InputMethodManager) mActivity.getSystemService(
                            android.content.Context.INPUT_METHOD_SERVICE);
                    imm.hideSoftInputFromWindow(mActivity.getCurrentFocus().getWindowToken(), 0);
                    return false;
                }
            });
</code></pre>
"
"6200533","11465007","5","<pre><code>TextView text = (TextView)findViewById(R.layout.textName);
text.setTypeface(null,Typeface.BOLD);
</code></pre>
"
"3145089","11472772","11","<p>I have created small application with step by step description to gets current locations GPS co-ordinates.</p>

<p><img src=""http://i.stack.imgur.com/m4DNb.jpg"" alt=""enter image description here""></p>

<p><em><strong>Complete example source code in below URL:</em></strong></p>

<hr>

<blockquote>
  <p><a href=""http://www.rdcworld-android.blogspot.in/2012/01/get-current-location-coordinates-city.html"" rel=""nofollow""><strong>Get Current Location coordinates , City name - in Android</strong></a></p>
</blockquote>

<hr>

<p><strong>See How it works :</strong></p>

<ul>
<li><p>All we need to do is add this permission in manifest file</p>

<pre><code>&lt;uses-permission android:name=""android.permission.ACCESS_FINE_LOCATION""&gt;  
&lt;/uses-permission&gt;
</code></pre></li>
<li><p>and create LocationManager instance like this</p>

<pre><code>LocationManager locationManager = (LocationManager) 
                                  getSystemService(Context.LOCATION_SERVICE);
</code></pre></li>
<li><p>Check GPS is enabled or not</p></li>
<li><p>then implement LocationListener and Get Coordinates</p>

<pre><code>LocationListener locationListener = new MyLocationListener();  
locationManager.requestLocationUpdates(  
LocationManager.GPS_PROVIDER, 5000, 10, locationListener);
</code></pre></li>
<li><p>here is the sample code to do</p></li>
</ul>

<hr>

<pre><code>/*----------Listener class to get coordinates ------------- */
private class MyLocationListener implements LocationListener {

    @Override
    public void onLocationChanged(Location loc) {
        editLocation.setText("""");
        pb.setVisibility(View.INVISIBLE);
        Toast.makeText(
            getBaseContext(),
            ""Location changed: Lat: "" + loc.getLatitude() + "" Lng: ""
                + loc.getLongitude(), Toast.LENGTH_SHORT).show();
        String longitude = ""Longitude: "" + loc.getLongitude();
        Log.v(TAG, longitude);
        String latitude = ""Latitude: "" + loc.getLatitude();
        Log.v(TAG, latitude);
        /*-------to get City-Name from coordinates -------- */
        String cityName = null;
        Geocoder gcd = new Geocoder(getBaseContext(), Locale.getDefault());
        List&lt;Address&gt; addresses;
        try {
            addresses = gcd.getFromLocation(loc.getLatitude(),
                loc.getLongitude(), 1);
            if (addresses.size() &gt; 0)
                System.out.println(addresses.get(0).getLocality());
            cityName = addresses.get(0).getLocality();
        } catch (IOException e) {
            e.printStackTrace();
        }
        String s = longitude + ""\n"" + latitude + ""\n\nMy Current City is: ""
            + cityName;
        editLocation.setText(s);
    }

    @Override
    public void onProviderDisabled(String provider) {}

    @Override
    public void onProviderEnabled(String provider) {}

    @Override
    public void onStatusChanged(String provider, int status, Bundle extras) {}
}
</code></pre>
"
"2217753","11648614","5","<p>From the source code of android's 2.2 Email App</p>

<pre><code>&lt;selector xmlns:android=""http://schemas.android.com/apk/res/android""&gt;
    &lt;item android:state_window_focused=""false"" android:state_selected=""true""
        android:drawable=""@android:color/transparent"" /&gt;
    &lt;item android:state_selected=""true""
        android:drawable=""@android:color/transparent"" /&gt;
    &lt;item android:state_pressed=""true"" android:state_selected=""false""
        android:drawable=""@android:color/transparent"" /&gt;
    &lt;item android:state_selected=""false""
        android:drawable=""@color/message_item_read"" /&gt;
&lt;/selector&gt;
</code></pre>

<p>Nothing more to say...</p>
"
"4165414","11656129","169","<p>Here is what I did for my application and it works like, wait for it, perfect!</p>

<p>First here is the code that simply hides the keyboard:</p>

<pre><code>public static void hideSoftKeyboard(Activity activity) {
    InputMethodManager inputMethodManager = (InputMethodManager)  activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
    inputMethodManager.hideSoftInputFromWindow(activity.getCurrentFocus().getWindowToken(), 0);
}
</code></pre>

<p>You can put this up in a utility class, or if you are defining it within an activity, avoid the activity parameter, or call <code>hideSoftKeyboard(this)</code>.</p>

<p>The trickiest part is when to call it. You can write a method that iterates through every <code>View</code> in your activity, and check if it is an <code>instanceof EditText</code> if it is not register a <code>setOnTouchListener</code> to that component and everything will fall in place. In case you are wondering how to do that, it is in fact quite simple. Here is what you do, you write a recursive method like the following, in fact you can use this to do anything, like setup custom typefaces etc... Here is the method</p>

<pre><code>public void setupUI(View view) {

    //Set up touch listener for non-text box views to hide keyboard.
    if(!(view instanceof EditText)) {

        view.setOnTouchListener(new OnTouchListener() {

            public boolean onTouch(View v, MotionEvent event) {
                hideSoftKeyboard(MyActivity.this);
                return false;
            }

        });
    }

    //If a layout container, iterate over children and seed recursion.
    if (view instanceof ViewGroup) {

        for (int i = 0; i &lt; ((ViewGroup) view).getChildCount(); i++) {

            View innerView = ((ViewGroup) view).getChildAt(i);

            setupUI(innerView);
        }
    }
}
</code></pre>

<p>That is all, just call this method after you <code>setContentView</code> in your activity. In case you are wondering what parameter you would pass, it is the <code>id</code> of the parent container. Assign an <code>id</code> to your parent container like</p>

<p><code>&lt;RelativeLayoutPanel android:id=""@+id/parent""&gt; ... &lt;/RelativeLayout&gt;</code></p>

<p>and call <code>setupUI(findViewById(R.id.parent))</code>, that is all.</p>

<p>If you want to use this effectively, you may create an extended <code>Activity</code> and put this method in, and make all other activities in your application extend this activity and call its <code>setupUI()</code> in the <code>onCreate()</code> method.</p>

<p>Hope it helps.</p>

<p>If you use more than 1 activity define common id to parent layout like 
<code>&lt;RelativeLayout android:id=""@+id/main_parent""&gt; ... &lt;/RelativeLayout&gt;</code></p>

<p>Then extend a class from <code>Activity</code> and define <code>setupUI(findViewById(R.id.main_parent))</code> Within its <code>OnResume()</code> and extend this class instead of ``Activity<code>in your program</code></p>
"
"2459916","11789561","4","<p>Thanks a lot to first answer. Here is modified version to convert a rectangular image into a square one (and rounded) and fill color is being passed as parameter.</p>

<pre><code>public static Bitmap getRoundedBitmap(Bitmap bitmap, int pixels, int color) {

    Bitmap inpBitmap = bitmap;
    int width = 0;
    int height = 0;
    width = inpBitmap.getWidth();
    height = inpBitmap.getHeight();

    if (width &lt;= height) {
        height = width;
    } else {
        width = height;
    }

    Bitmap output = Bitmap.createBitmap(width, height, Config.ARGB_8888);
    Canvas canvas = new Canvas(output);

    final Paint paint = new Paint();
    final Rect rect = new Rect(0, 0, width, height);
    final RectF rectF = new RectF(rect);
    final float roundPx = pixels;

    paint.setAntiAlias(true);
    canvas.drawARGB(0, 0, 0, 0);
    paint.setColor(color);
    canvas.drawRoundRect(rectF, roundPx, roundPx, paint);

    paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));
    canvas.drawBitmap(inpBitmap, rect, rect, paint);

    return output;
}
</code></pre>
"
"2317428","11867718","1","<p><strong>Shaker.java</strong>        </p>

<pre><code>    import java.util.ArrayList;
    import android.content.Context;
    import android.hardware.Sensor;
    import android.hardware.SensorEvent;
    import android.hardware.SensorEventListener;
    import android.hardware.SensorManager;

    public class Shaker implements SensorEventListener{

        private static final String SENSOR_SERVICE = Context.SENSOR_SERVICE;
        private SensorManager sensorMgr;
        private Sensor mAccelerometer;
        private boolean accelSupported;
        private long timeInMillis;
        private long threshold;
        private OnShakerTreshold listener;
        ArrayList&lt;Float&gt; valueStack;

        public Shaker(Context context, OnShakerTreshold listener, long timeInMillis, long threshold) {
            try {
                this.timeInMillis = timeInMillis;
                this.threshold = threshold;
                this.listener = listener;
                if (timeInMillis&lt;100){
                    throw new Exception(""timeInMillis &lt; 100ms"");
                }
                valueStack = new ArrayList&lt;Float&gt;((int)(timeInMillis/100));
                sensorMgr = (SensorManager) context.getSystemService(SENSOR_SERVICE);
                mAccelerometer = sensorMgr.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);

            } catch (Exception e){
                e.printStackTrace();
            }
        }

        public void start() {
            try {
                accelSupported = sensorMgr.registerListener(this, mAccelerometer, SensorManager.SENSOR_DELAY_GAME); 
                if (!accelSupported) {
                    stop();
                    throw new Exception(""Sensor is not supported"");
                }
            } catch (Exception e){
                e.printStackTrace();
            }
        }

        public void stop(){
            try {
                sensorMgr.unregisterListener(this, mAccelerometer);
            } catch (Exception e){
                e.printStackTrace();
            }
        }

        @Override
        protected void finalize() throws Throwable {
            try {
                stop();
            } catch (Exception e){
                e.printStackTrace();
            }
            super.finalize();
        }

        long lastUpdate = 0;
        private float last_x;
        private float last_y;
        private float last_z;

public void onSensorChanged(SensorEvent event) {
    try {
        if (event.sensor == mAccelerometer) {
            long curTime = System.currentTimeMillis();
            if ((curTime-lastUpdate)&gt;getNumberOfMeasures()){

                lastUpdate = System.currentTimeMillis();
                float[] values = event.values;
                if (valueStack.size()&gt;(int)getNumberOfMeasures())
                    valueStack.remove(0);
                float x = (int)(values[SensorManager.DATA_X]);
                float y = (int)(values[SensorManager.DATA_Y]);
                float z = (int)(values[SensorManager.DATA_Z]);
                float speed = Math.abs((x+y+z) - (last_x + last_y + last_z));

                valueStack.add(speed);

                String posText = String.format(""X:%4.0f Y:%4.0f Z:%4.0f"", (x-last_x), (y-last_y), (z-last_z));

                last_x = (x);
                last_y = (y);
                last_z = (z);

                float sumOfValues = 0;
                float avgOfValues = 0;

                for (float f : valueStack){
                        sumOfValues = (sumOfValues+f);
                }
                avgOfValues = sumOfValues/(int)getNumberOfMeasures();

                if (avgOfValues&gt;=threshold){
                    listener.onTreshold();
                    valueStack.clear();
                }

                System.out.println(String.format(""M: %+4d A: %5.0f V: %4.0f %s"", valueStack.size(),avgOfValues,speed,posText));

            }
        }
    } catch (Exception e){
        e.printStackTrace();
    }
}


        private long getNumberOfMeasures() {
            return timeInMillis/100;
        }

        public void onAccuracyChanged(Sensor sensor, int accuracy) {}

        public interface OnShakerTreshold {
            public void onTreshold();
        }
    }
</code></pre>

<p><strong>MainActivity.java</strong></p>

<pre><code>public class MainActivity extends Activity implements OnShakerTreshold{


    private Shaker s;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        s = new Shaker(getApplicationContext(), this, 5000, 20);
        // 5000 = 5 second of shaking
        // 20 = minimal threshold (very angry shaking :D)
        // beware screen rotation reset counter
    }

    @Override
    protected void onResume() {
        s.start();
        super.onResume();
    }

    @Override
    protected void onPause() {
        s.stop();
        super.onPause();
    }

    public void onTreshold() {
        System.out.println(""FIRE LISTENER"");
        RingtoneManager.getRingtone(getApplicationContext(), RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION)).play();
    }


}
</code></pre>

<p>Have fun.</p>
"
"5033012","11902987","25","<p>Actually a solution is in Google's <a href=""http://androidxref.com/4.1.1/xref/frameworks/base/core/java/com/android/internal/widget/DialogTitle.java"">DialogTitle</a> class... though it's not as effective as the accepted one, it's a lot simpler and is easy to adapt.</p>

<pre><code>public class SingleLineTextView extends TextView {

  public SingleLineTextView(Context context, AttributeSet attrs, int defStyle) {
    super(context, attrs, defStyle);
    setSingleLine();
    setEllipsize(TruncateAt.END);
  }

  public SingleLineTextView(Context context, AttributeSet attrs) {
    super(context, attrs);
    setSingleLine();
    setEllipsize(TruncateAt.END);
  }

  public SingleLineTextView(Context context) {
    super(context);
    setSingleLine();
    setEllipsize(TruncateAt.END);
  }

  @Override
  protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
    super.onMeasure(widthMeasureSpec, heightMeasureSpec);

    final Layout layout = getLayout();
    if (layout != null) {
      final int lineCount = layout.getLineCount();
      if (lineCount &gt; 0) {
        final int ellipsisCount = layout.getEllipsisCount(lineCount - 1);
        if (ellipsisCount &gt; 0) {

          final float textSize = getTextSize();

          // textSize is already expressed in pixels
          setTextSize(TypedValue.COMPLEX_UNIT_PX, (textSize - 1));

          super.onMeasure(widthMeasureSpec, heightMeasureSpec);
        }
      }
    }
  }

}
</code></pre>
"
"4165414","11907465","1","<p>Method for show / hide soft keyboard</p>

<pre><code>InputMethodManager inputMethodManager = (InputMethodManager) currentActivity.getSystemService(Context.INPUT_METHOD_SERVICE);
    if (isShow) {
        if (currentActivity.getCurrentFocus() == null) {
            inputMethodManager.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);
        } else {
            inputMethodManager.showSoftInput(currentActivity.getCurrentFocus(), InputMethodManager.SHOW_FORCED);    
        }

    } else {
        if (currentActivity.getCurrentFocus() == null) {
            inputMethodManager.toggleSoftInput(InputMethodManager.HIDE_NOT_ALWAYS, 0);
        } else {
            inputMethodManager.hideSoftInputFromInputMethod(currentActivity.getCurrentFocus().getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);    
        }

    }
</code></pre>

<p>I hope they have been useful</p>
"
"6176391","11947349","2","<p>thomas88wp answer, <a href=""http://stackoverflow.com/a/6486348/528746"">http://stackoverflow.com/a/6486348/528746</a> worked for me.
But I had two problems:
1. When scrolling, I wanted to hide the keyboard<br/>
2. I had lots of EditText views and didn't want to write it for each one of them<br/>
(I do getActivity() since I'm writing this inside a Fragment and not an activity)</p>

<pre><code>    ScrollView scroll = (ScrollView)view.findViewById(R.id.layout_scroll);
    scroll.setOnTouchListener(new OnTouchListener() {

        @Override
        public boolean onTouch(View v, MotionEvent event) {
            // Check if the view with focus is EditText
            if (getActivity().getCurrentFocus() instanceof EditText)
            {
                EditText ed = (EditText)getActivity().getCurrentFocus();
                if (ed.hasFocus()) {

                    // Hide the keyboard
                    InputMethodManager inputManager = (InputMethodManager)
                            getActivity().getSystemService(Context.INPUT_METHOD_SERVICE); 
                    inputManager.hideSoftInputFromWindow(getActivity().getCurrentFocus().getWindowToken(),
                            InputMethodManager.HIDE_NOT_ALWAYS);
                    // Clear the focus
                    ed.clearFocus();
                }
            }
            return false;
        }

    });
</code></pre>
"
"2317428","11972661","17","<p>Here's yet another implementation that builds on some of the tips in here as well as the code from the Android developer site.</p>

<p><strong>MainActivity.java</strong></p>

<pre><code>public class MainActivity extends Activity {

    private ShakeDetector mShakeDetector;
    private SensorManager mSensorManager;
    private Sensor mAccelerometer;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // ShakeDetector initialization
        mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
        mAccelerometer = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
        mShakeDetector = new ShakeDetector(new OnShakeListener() {
            @Override
            public void onShake() {
                // Do stuff!
            }
        });
    }

    @Override
    protected void onResume() {
        super.onResume();
        mSensorManager.registerListener(mShakeDetector, mAccelerometer, SensorManager.SENSOR_DELAY_UI);
    }

    @Override
    protected void onPause() {
        mSensorManager.unregisterListener(mShakeDetector);
        super.onPause();
    }   
}
</code></pre>

<p><strong>ShakeDetector.java</strong></p>

<pre><code>package com.example.test;

import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;

public class ShakeDetector implements SensorEventListener {

    // Minimum acceleration needed to count as a shake movement
    private static final int MIN_SHAKE_ACCELERATION = 5;

    // Minimum number of movements to register a shake
    private static final int MIN_MOVEMENTS = 2;

    // Maximum time (in milliseconds) for the whole shake to occur
    private static final int MAX_SHAKE_DURATION = 500;

    // Arrays to store gravity and linear acceleration values
    private float[] mGravity = { 0.0f, 0.0f, 0.0f };
    private float[] mLinearAcceleration = { 0.0f, 0.0f, 0.0f };

    // Indexes for x, y, and z values
    private static final int X = 0;
    private static final int Y = 1;
    private static final int Z = 2;

    // OnShakeListener that will be notified when the shake is detected
    private OnShakeListener mShakeListener;

    // Start time for the shake detection
    long startTime = 0;

    // Counter for shake movements
    int moveCount = 0;

    // Constructor that sets the shake listener
    public ShakeDetector(OnShakeListener shakeListener) {
        mShakeListener = shakeListener;
    }

    @Override
    public void onSensorChanged(SensorEvent event) {
        // This method will be called when the accelerometer detects a change.

        // Call a helper method that wraps code from the Android developer site
        setCurrentAcceleration(event);

        // Get the max linear acceleration in any direction
        float maxLinearAcceleration = getMaxCurrentLinearAcceleration();

        // Check if the acceleration is greater than our minimum threshold
        if (maxLinearAcceleration &gt; MIN_SHAKE_ACCELERATION) {
            long now = System.currentTimeMillis();

            // Set the startTime if it was reset to zero
            if (startTime == 0) {
                startTime = now;
            }

            long elapsedTime = now - startTime;

            // Check if we're still in the shake window we defined
            if (elapsedTime &gt; MAX_SHAKE_DURATION) {
                // Too much time has passed. Start over!
                resetShakeDetection();
            }
            else {
                // Keep track of all the movements
                moveCount++;

                // Check if enough movements have been made to qualify as a shake
                if (moveCount &gt; MIN_MOVEMENTS) {
                    // It's a shake! Notify the listener.
                    mShakeListener.onShake();

                    // Reset for the next one!
                    resetShakeDetection();
                }
            }
        }
    }

    @Override
    public void onAccuracyChanged(Sensor sensor, int accuracy) {
        // Intentionally blank
    }

    private void setCurrentAcceleration(SensorEvent event) {
        /*
         *  BEGIN SECTION from Android developer site. This code accounts for 
         *  gravity using a high-pass filter
         */

        // alpha is calculated as t / (t + dT)
        // with t, the low-pass filter's time-constant
        // and dT, the event delivery rate

        final float alpha = 0.8f;

        // Gravity components of x, y, and z acceleration
        mGravity[X] = alpha * mGravity[X] + (1 - alpha) * event.values[X];
        mGravity[Y] = alpha * mGravity[Y] + (1 - alpha) * event.values[Y];
        mGravity[Z] = alpha * mGravity[Z] + (1 - alpha) * event.values[Z];

        // Linear acceleration along the x, y, and z axes (gravity effects removed)
        mLinearAcceleration[X] = event.values[X] - mGravity[X];
        mLinearAcceleration[Y] = event.values[Y] - mGravity[Y];
        mLinearAcceleration[Z] = event.values[Z] - mGravity[Z];

        /*
         *  END SECTION from Android developer site
         */
    }

    private float getMaxCurrentLinearAcceleration() {
        // Start by setting the value to the x value
        float maxLinearAcceleration = mLinearAcceleration[X];

        // Check if the y value is greater
        if (mLinearAcceleration[Y] &gt; maxLinearAcceleration) {
            maxLinearAcceleration = mLinearAcceleration[Y];
        }

        // Check if the z value is greater
        if (mLinearAcceleration[Z] &gt; maxLinearAcceleration) {
            maxLinearAcceleration = mLinearAcceleration[Z];
        }

        // Return the greatest value
        return maxLinearAcceleration;
    }

    private void resetShakeDetection() {
        startTime = 0;
        moveCount = 0;
    }

    // (I'd normally put this definition in it's own .java file)
    public interface OnShakeListener {
        public void onShake();
    }
}
</code></pre>
"
"7723964","11974777","3","<p>Some of the presented solutions helped me a lot to partially solve the problem but there is still one important thing missing in the solutions which has produced unexpected exceptions and black page content instead of fragment content in some cases.</p>

<p>The thing is that <em>FragmentPagerAdapter</em> class is using item ID to store cached fragments to <em>FragmentManager</em>. For this reason, you need to override also the <em>getItemId(int position)</em> method so that it returns e. g. <em>position</em> for top-level pages and <em>100 + position</em> for details pages. Otherwise the previously created top-level fragment would be returned from the cache instead of detail-level fragment.</p>

<p>Furthermore, I'm sharing here a complete example how to implement tabs-like activity with <em>Fragment</em> pages using <em>ViewPager</em> and tab buttons using <em>RadioGroup</em> that allows replacement of top-level pages with detailed pages and also supports back button. This implementation supports only one level of back stacking (item list - item details) but multi-level back stacking implementation is straightforward. This example works pretty well in normal cases except of it is throwing a <em>NullPointerException</em> in case when you switch to e. g. second page, change the fragment of the first page (while not visible) and return back to the first page. I'll post a solution to this issue once I'll figure it out:</p>

<pre><code>public class TabsActivity extends FragmentActivity {

  public static final int PAGE_COUNT = 3;
  public static final int FIRST_PAGE = 0;
  public static final int SECOND_PAGE = 1;
  public static final int THIRD_PAGE = 2;

  /**
   * Opens a new inferior page at specified tab position and adds the current page into back
   * stack.
   */
  public void startPage(int position, Fragment content) {
    // Replace page adapter fragment at position.
    mPagerAdapter.start(position, content);
  }

  @Override
  public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);

    // Initialize basic layout.
    this.setContentView(R.layout.tabs_activity);

    // Add tab fragments to view pager.
    {
      // Create fragments adapter.
      mPagerAdapter = new PagerAdapter(pager);
      ViewPager pager = (ViewPager) super.findViewById(R.id.tabs_view_pager);
      pager.setAdapter(mPagerAdapter);

      // Update active tab in tab bar when page changes.
      pager.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {
        @Override
        public void onPageScrolled(int index, float value, int nextIndex) {
          // Not used.
        }

        @Override
        public void onPageSelected(int index) {
          RadioGroup tabs_radio_group = (RadioGroup) TabsActivity.this.findViewById(
            R.id.tabs_radio_group);
          switch (index) {
            case 0: {
              tabs_radio_group.check(R.id.first_radio_button);
            }
            break;
            case 1: {
              tabs_radio_group.check(R.id.second_radio_button);
            }
            break;
            case 2: {
              tabs_radio_group.check(R.id.third_radio_button);
            }
            break;
          }
        }

        @Override
        public void onPageScrollStateChanged(int index) {
          // Not used.
        }
      });
    }

    // Set ""tabs"" radio group on checked change listener that changes the displayed page.
    RadioGroup radio_group = (RadioGroup) this.findViewById(R.id.tabs_radio_group);
    radio_group.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
      @Override
      public void onCheckedChanged(RadioGroup radioGroup, int id) {
        // Get view pager representing tabs.
        ViewPager view_pager = (ViewPager) TabsActivity.this.findViewById(R.id.tabs_view_pager);
        if (view_pager == null) {
          return;
        }

        // Change the active page.
        switch (id) {
          case R.id.first_radio_button: {
            view_pager.setCurrentItem(FIRST_PAGE);
          }
          break;
          case R.id.second_radio_button: {
            view_pager.setCurrentItem(SECOND_PAGE);
          }
          break;
          case R.id.third_radio_button: {
            view_pager.setCurrentItem(THIRD_PAGE);
          }
          break;
        }
      });
    }
  }

  @Override
  public void onBackPressed() {
    if (!mPagerAdapter.back()) {
      super.onBackPressed();
    }
  }

  /**
   * Serves the fragments when paging.
   */
  private class PagerAdapter extends FragmentPagerAdapter {

    public PagerAdapter(ViewPager container) {
      super(TabsActivity.this.getSupportFragmentManager());

      mContainer = container;
      mFragmentManager = TabsActivity.this.getSupportFragmentManager();

      // Prepare ""empty"" list of fragments.
      mFragments = new ArrayList&lt;Fragment&gt;(){};
      mBackFragments = new ArrayList&lt;Fragment&gt;(){};
      for (int i = 0; i &lt; PAGE_COUNT; i++) {
        mFragments.add(null);
        mBackFragments.add(null);
      }
    }

    /**
     * Replaces the view pager fragment at specified position.
     */
    public void replace(int position, Fragment fragment) {
      // Get currently active fragment.
      Fragment old_fragment = mFragments.get(position);
      if (old_fragment == null) {
        return;
      }

      // Replace the fragment using transaction and in underlaying array list.
      // NOTE .addToBackStack(null) doesn't work
      this.startUpdate(mContainer);
      mFragmentManager.beginTransaction().setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN)
        .remove(old_fragment).add(mContainer.getId(), fragment)
        .commit();
      mFragments.set(position, fragment);
      this.notifyDataSetChanged();
      this.finishUpdate(mContainer);
    }

    /**
     * Replaces the fragment at specified position and stores the current fragment to back stack
     * so it can be restored by #back().
     */
    public void start(int position, Fragment fragment) {
      // Remember current fragment.
      mBackFragments.set(position, mFragments.get(position));

      // Replace the displayed fragment.
      this.replace(position, fragment);
    }

    /**
     * Replaces the current fragment by fragment stored in back stack. Does nothing and returns
     * false if no fragment is back-stacked.
     */
    public boolean back() {
      int position = mContainer.getCurrentItem();
      Fragment fragment = mBackFragments.get(position);
      if (fragment == null) {
        // Nothing to go back.
        return false;
      }

      // Restore the remembered fragment and remove it from back fragments.
      this.replace(position, fragment);
      mBackFragments.set(position, null);
      return true;
    }

    /**
     * Returns fragment of a page at specified position.
     */
    @Override
    public Fragment getItem(int position) {
      // If fragment not yet initialized, create its instance.
      if (mFragments.get(position) == null) {
        switch (position) {
          case FIRST_PAGE: {
            mFragments.set(FIRST_PAGE, new DefaultFirstFragment());
          }
          break;
          case SECOND_PAGE: {
            mFragments.set(SECOND_PAGE, new DefaultSecondFragment());
          }
          break;
          case THIRD_PAGE: {
            mFragments.set(THIRD_PAGE, new DefaultThirdFragment());
          }
          break;
        }
      }

      // Return fragment instance at requested position.
      return mFragments.get(position);
    }

    /**
     * Custom item ID resolution. Needed for proper page fragment caching.
     * @see FragmentPagerAdapter#getItemId(int).
     */
    @Override
    public long getItemId(int position) {
      // Fragments from second level page hierarchy have their ID raised above 100. This is
      // important to FragmentPagerAdapter because it is caching fragments to FragmentManager with
      // this item ID key.
      Fragment item = mFragments.get(position);
      if (item != null) {
        if ((item instanceof NewFirstFragment) || (item instanceof NewSecondFragment) ||
          (item instanceof NewThirdFragment)) {
          return 100 + position;
        }
      }

      return position;
    }

    /**
     * Returns number of pages.
     */
    @Override
    public int getCount() {
      return mFragments.size();
    }

    @Override
    public int getItemPosition(Object object)
    {
      int position = POSITION_UNCHANGED;
      if ((object instanceof DefaultFirstFragment) || (object instanceof NewFirstFragment)) {
        if (object.getClass() != mFragments.get(FIRST_PAGE).getClass()) {
          position = POSITION_NONE;
        }
      }
      if ((object instanceof DefaultSecondragment) || (object instanceof NewSecondFragment)) {
        if (object.getClass() != mFragments.get(SECOND_PAGE).getClass()) {
          position = POSITION_NONE;
        }
      }
      if ((object instanceof DefaultThirdFragment) || (object instanceof NewThirdFragment)) {
        if (object.getClass() != mFragments.get(THIRD_PAGE).getClass()) {
          position = POSITION_NONE;
        }
      }
      return position;
    }

    private ViewPager mContainer;
    private FragmentManager mFragmentManager;

    /**
     * List of page fragments.
     */
    private List&lt;Fragment&gt; mFragments;

    /**
     * List of page fragments to return to in onBack();
     */
    private List&lt;Fragment&gt; mBackFragments;
  }

  /**
   * Tab fragments adapter.
   */
  private PagerAdapter mPagerAdapter;
}
</code></pre>
"
"5357455","12130851","2","<pre><code>DecimalFormat form = new DecimalFormat(""#.##"", new DecimalFormatSymbols(Locale.US));
    EditText et; 
    et.setOnEditorActionListener(new TextView.OnEditorActionListener() {
        @Override
        public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {

        if (actionId == EditorInfo.IME_ACTION_DONE) {
            double a = Double.parseDouble(et.getText().toString());
            et.setText(form.format(a));
        }
        return false;
    }
});
</code></pre>

<p>What this does is when you exit editing phase it formats the field to the right format. At them moment it has only 2 decimal charachters. I think this is pretty easy way to do this.</p>
"
"2617266","12140880","0","<p>Inspired by the previous posters I wanted to share my solution. It works with a scale factor which is applied to the previous font size to make it fit the available space. In addition to prevent unexpected behaviour of TextViews onDraw method, it simply draws the text on its own.</p>

<pre><code>public class FontFitTextView extends TextView {

    // How much of the available space should be used in percent.
    private static final float MARGINHEIGHT = 0.8f;
    private static final float MARGINWIDTH = 0.8f;

    private Paint paint;
    private int viewWidth;
    private int viewHeight;
    private float textHeight;
    private float textWidth;

    public FontFitTextView(Context c) {
        this(c, null);
    }

    public FontFitTextView(Context c, AttributeSet attrs) {
        super(c, attrs);
        initComponent();
    }

    // Default constructor override
    public FontFitTextView(Context c, AttributeSet attrs, int defStyle) {
        super(c, attrs, defStyle);
        initComponent();
    }

    private void initComponent() {
        paint = new Paint();
        paint.setTextSize(30);
        paint.setTextAlign(Align.CENTER);
        paint.setAntiAlias(true);
    }

    public void setFontColor(int c) {
        paint.setColor(c);
    }

    private void calcTextSize(String s, Canvas c) {

        float availableHeight = viewHeight;
        float availableWidth = viewWidth;

        // This value scales the old font up or down to match the available
        // space.
        float scale = 1.0f;

        // Rectangle for measuring the text dimensions
        Rect rect = new Rect();
        float oldFontSize = paint.getTextSize();

        // Calculate the space used with old font size
        paint.getTextBounds(s, 0, s.length(), rect);
        textWidth = rect.width();
        textHeight = rect.height();

        // find scale-value to fit the text horizontally
        float scaleWidth = 1f;
        if (textWidth &gt; 0.0f) {
            scaleWidth = (availableWidth) / textWidth * MARGINWIDTH;
        }

        // find scale-value to fit the text vertically
        float scaleHeight = 1f;
        if (textHeight &gt; 0.0f) {
            scaleHeight = (availableHeight) / textHeight * MARGINHEIGHT;
        }

        // We are always limited by the smaller one
        if (scaleWidth &lt; scaleHeight) {
            scale = scaleWidth;
        } else {
            scale = scaleHeight;
        }

        // We apply the scale to the old font size to make it bigger or smaller
        float newFontSize = (oldFontSize * scale);
        paint.setTextSize(newFontSize);
    }

    /**
     * Calculates the origin on the Y-Axis (width) for the text in this view.
     * 
     * @return
     */
    private float calcStartDrawingPosX() {
        float left = getMeasuredWidth();
        float centerY = left - (viewWidth / 2);
        return centerY;
    }

    /**
     * Calculates the origin on the Y-Axis (height) for the text in this view.
     * 
     * @return
     */
    private float calcStartDrawingPosY() {
        float bottom = getMeasuredHeight();
        // The paint only centers horizontally, origin on the Y-Axis stays at
        // the bottom, thus we have to lift the origin additionally by the
        // height of the font.
        float centerX = bottom - (viewHeight / 2) + (textHeight / 2);
        return centerX;
    }

    @Override
    protected void onDraw(Canvas canvas) {
        String text = getText().toString();
        if (text.length() &gt; 0) {
            calcTextSize(text, canvas);
            canvas.drawText(text, calcStartDrawingPosX(),
                    calcStartDrawingPosY(), paint);
        }
    };

    @Override
    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        viewWidth = w;
        viewHeight = h;
        super.onSizeChanged(w, h, oldw, oldh);
    }
}
</code></pre>
"
"4605527","12147550","63","<pre><code>private float dpFromPx(float px)
{
    return px / this.getContext().getResources().getDisplayMetrics().density;
}

private float pxFromDp(float dp)
{
    return dp * this.getContext().getResources().getDisplayMetrics().density;
}
</code></pre>
"
"7723964","12155594","18","<p>Based on @wize 's answer, which I found helpful and elegant, I could achieve what I wanted partially, cause I wanted the cability to go back to the first Fragment once replaced. I achieved it bit modifying a bit his code.</p>

<p>This would be the FragmentPagerAdapter:</p>

<pre><code>public static class MyAdapter extends FragmentPagerAdapter {
    private final class CalendarPageListener implements
            CalendarPageFragmentListener {
        public void onSwitchToNextFragment() {
            mFragmentManager.beginTransaction().remove(mFragmentAtPos0)
                    .commit();
            if (mFragmentAtPos0 instanceof FirstFragment){
                mFragmentAtPos0 = NextFragment.newInstance(listener);
            }else{ // Instance of NextFragment
                mFragmentAtPos0 = FirstFragment.newInstance(listener);
            }
            notifyDataSetChanged();
        }
    }

    CalendarPageListener listener = new CalendarPageListener();;
    private Fragment mFragmentAtPos0;
    private FragmentManager mFragmentManager;

    public MyAdapter(FragmentManager fm) {
        super(fm);
        mFragmentManager = fm;
    }

    @Override
    public int getCount() {
        return NUM_ITEMS;
    }

    @Override
    public int getItemPosition(Object object) {
        if (object instanceof FirstFragment &amp;&amp; mFragmentAtPos0 instanceof NextFragment)
            return POSITION_NONE;
        if (object instanceof NextFragment &amp;&amp; mFragmentAtPos0 instanceof FirstFragment)
            return POSITION_NONE;
        return POSITION_UNCHANGED;
    }

    @Override
    public Fragment getItem(int position) {
        if (position == 0)
            return Portada.newInstance();
        if (position == 1) { // Position where you want to replace fragments
            if (mFragmentAtPos0 == null) {
                mFragmentAtPos0 = FirstFragment.newInstance(listener);
            }
            return mFragmentAtPos0;
        }
        if (position == 2)
            return Clasificacion.newInstance();
        if (position == 3)
            return Informacion.newInstance();

        return null;
    }
}

public interface CalendarPageFragmentListener {
    void onSwitchToNextFragment();
}
</code></pre>

<p>To perfom the replacement, simply define a static field, of the type <code>CalendarPageFragmentListener</code> and initialized through the <code>newInstance</code> methods of the corresponding fragments and call <code>FirstFragment.pageListener.onSwitchToNextFragment()</code> or <code>NextFragment.pageListener.onSwitchToNextFragment()</code> respictevely.</p>

<p>Hope it is clear and helpful.<br>
Best Regards.</p>
"
"2201917","12213252","11","<p>Try this:</p>

<pre><code>Uri uri = Uri.parse(""https://www.google.com"");
                startActivity(new Intent(Intent.ACTION_VIEW, uri));
</code></pre>

<p>or if you want then web browser open in your activity then do like this:</p>

<pre><code>WebView webView = (WebView) findViewById(R.id.webView1);
WebSettings settings = webview.getSettings();
settings.setJavaScriptEnabled(true);
webView.loadUrl(URL);
</code></pre>

<p>and if you want to use zoom control in your browser then you can use:</p>

<pre><code>settings.setSupportZoom(true);
settings.setBuiltInZoomControls(true);
</code></pre>
"
"2139134","12401570","46","<p>You can send serializable object through intent</p>

<pre><code>// send where details is object
ClassName details = new ClassName();
Intent i = new Intent(context, EditActivity.class);
i.putExtra(""Editing"", details);
startActivity(i);


//receive
ClassName model = (ClassName) getIntent().getSerializableExtra(""Editing"");

And 

Class ClassName implements Serializable {
} 
</code></pre>
"
"5832368","12417361","6","<p>Based on Robert Dale Johnson III and Helton Isac I came up with this code Hope this is useful </p>

<pre><code>public static boolean isTablet(Context context) {
    TelephonyManager manager = 
        (TelephonyManager)context.getSystemService(Context.TELEPHONY_SERVICE);
    if (manager.getPhoneType() == TelephonyManager.PHONE_TYPE_NONE) {
        //Tablet
        return true;
    } else {
        //Mobile
        return false; 
    }
}

public static boolean isTabletDevice(Context activityContext) {
    // Verifies if the Generalized Size of the device is XLARGE to be
    // considered a Tablet
    boolean xlarge = 
         ((activityContext.getResources().getConfiguration().screenLayout &amp; 
           Configuration.SCREENLAYOUT_SIZE_MASK) == Configuration.SCREENLAYOUT_SIZE_XLARGE);

    // If XLarge, checks if the Generalized Density is at least MDPI (160dpi)
    if (xlarge) {
        DisplayMetrics metrics = new DisplayMetrics();
        Activity activity = (Activity) activityContext;
        activity.getWindowManager().getDefaultDisplay().getMetrics(metrics);

        // MDPI=160, DEFAULT=160, DENSITY_HIGH=240, DENSITY_MEDIUM=160,
        // DENSITY_TV=213, DENSITY_XHIGH=320
        if (metrics.densityDpi == DisplayMetrics.DENSITY_DEFAULT
                  || metrics.densityDpi == DisplayMetrics.DENSITY_HIGH
                  || metrics.densityDpi == DisplayMetrics.DENSITY_MEDIUM   
                  || metrics.densityDpi == DisplayMetrics.DENSITY_XHIGH) {

             // Yes, this is a tablet!
             return true;
        }
    }

    // No, this is not a tablet!
    return false;
}
</code></pre>

<p>So in your code make a filter like</p>

<pre><code>if(isTabletDevice(Utilities.this) &amp;&amp; isTablet(Utilities.this)){
    //Tablet
} else {
    //Phone
}
</code></pre>
"
"6290531","12420055","0","<pre><code>EditText edt=(EditText)findViewById(R.id.Edt);

String data=edt.getText().toString();

if(data=="""" || data==null){

 Log.e(""edit text is null?"",""yes"");

}

else {

 Log.e(""edit text is null?"",""no"");

}
</code></pre>

<p>do like this for all five edit text</p>
"
"8500283","12425801","2","<p>If you use one <code>Activity</code> included a splash screen, then you can do this if you use <code>SherlockActionBar</code></p>

<pre><code>getSupportActionBar().hide();
</code></pre>

<p>After the splash screen you can show it again with ...</p>

<pre><code>getSupportActionBar().show();
</code></pre>

<p>It should be the same with native <code>ActionBar</code> of Android.</p>
"
"2471935","12437754","1","<pre><code>    String img_url= //url of the image
    URL url=new URL(img_url);
    Bitmap bmp; 
    bmp=BitmapFactory.decodeStream(url.openConnection().getInputStream());
    ImageView iv=(ImageView)findviewById(R.id.imageview);
    iv.setImageBitmap(bmp);
</code></pre>
"
"5033012","12441592","36","<p>I started with Chase's solution, but had to adapt two things before it was working as expected on my device (Galaxy Nexus, Android 4.1):</p>

<ol>
<li><p>using a copy of TextPaint for measuring layout
The documentation for <a href=""http://developer.android.com/reference/android/widget/TextView.html#getPaint%28%29"">TextView.getPaint()</a> states that it should be used read-only, so I made a copy in both places where we use the paint object for measuring:</p>

<pre><code>// 1. in resizeText()
if (mAddEllipsis &amp;&amp; targetTextSize == mMinTextSize &amp;&amp; textHeight &gt; height) {
  // Draw using a static layout
  // modified: use a copy of TextPaint for measuring
  TextPaint paint = new TextPaint(textPaint);

// 2. in getTextHeight()
private int getTextHeight(CharSequence source, TextPaint originalPaint, int width, float textSize) {
  // modified: make a copy of the original TextPaint object for measuring
  // (apparently the object gets modified while measuring, see also the
  // docs for TextView.getPaint() (which states to access it read-only)
  TextPaint paint = new TextPaint(originalPaint);
  // Update the text paint object
  paint.setTextSize(textSize);
  ...
</code></pre></li>
<li><p>adding a unit to setting the text size</p>

<pre><code>// modified: setting text size via this.setTextSize (instead of textPaint.setTextSize(targetTextSize))
setTextSize(TypedValue.COMPLEX_UNIT_PX, targetTextSize);
setLineSpacing(mSpacingAdd, mSpacingMult);
</code></pre></li>
</ol>

<p>With these two modifications the solution is working perfectly for me, thanks Chase! I don't know whether it is due to Android 4.x that the original solution was not working. In case you want to see it in action or test whether it really works on your device, you can have a look at my flashcard app <a href=""http://www.flashcardstogo.info/"">Flashcards ToGo</a> where I use this solution to scale the text of a flashcard. The text can have arbitrary length, and the flashcards are displayed in different activities, sometimes smaller sometimes bigger, plus in landscape + portrait mode, and I haven't found any corner case where the solution would not work properly...</p>
"
"5357455","12480136","2","<p>Slightly improved @Pinhassi solution.</p>

<p>Works very well. It validates concatenated strings.</p>

<pre><code>public class DecimalDigitsInputFilter implements InputFilter {

Pattern mPattern;

public DecimalDigitsInputFilter() {
    mPattern = Pattern.compile(""([1-9]{1}[0-9]{0,2}([0-9]{3})*(\\.[0-9]{0,2})?|[1-9]{1}[0-9]{0,}(\\.[0-9]{0,2})?|0(\\.[0-9]{0,2})?|(\\.[0-9]{1,2})?)"");

}

@Override
public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {

    String formatedSource = source.subSequence(start, end).toString();

    String destPrefix = dest.subSequence(0, dstart).toString();

    String destSuffix = dest.subSequence(dend, dest.length()).toString();

    String result = destPrefix + formatedSource + destSuffix;

    result = result.replace("","", ""."");

    Matcher matcher = mPattern.matcher(result);

    if (matcher.matches()) {
        return null;
    }

    return """";
}

 }
</code></pre>
"
"3996938","12484767","0","<p>while I do not believe I have tried every variation described here, here is the one that has worked for me :)</p>

<pre><code>        @Override
        public View getView(final int position, View convertView, ViewGroup parent) 
        {

            CheckedTextView retView = (CheckedTextView) convertView;
...
            retView.setOnClickListener(new View.OnClickListener() 
            {
                public void onClick(View v)
                {
                    CheckedTextView chkVw = (CheckedTextView) v; 
//                  chkVw.toggle();
//                  chkVw.setChecked(!chkVw.isChecked());
                    mLstVwWordingSets.setItemChecked(position + 1, !chkVw.isChecked());
                }
            });
...
       }
</code></pre>

<p>And later</p>

<pre><code>        SparseBooleanArray checkedItemsArray = mLstVwWordingSets.getCheckedItemPositions();
        for (int i = 1; i &lt;  mLstVwWordingSets.getCount(); i++)         //skip the header view
        {
            if (checkedItemsArray.get(i, false))
                Log.d(_TAG, ""checked item: "" + i);
        }
</code></pre>

<p>I am accessing position + 1 due to a header view that my list has in place. </p>

<p>HTH</p>
"
"5763304","12531381","0","<p>I don't have enough points to comment on an answer, but I wanted to say that mikec's answer worked for me except that I had to change it to return !isScrollable like so:</p>

<pre><code>mScroller.setOnTouchListener(new OnTouchListener() {
    @Override
    public boolean onTouch(View v, MotionEvent event) {
      return !isScrollable;
    }
});
</code></pre>
"
"2471935","12553902","2","<p>This code is tested, it is completely working.</p>

<pre><code>URL req = new URL(
""http://java.sogeti.nl/JavaBlog/wp-content/uploads/2009/04/android_icon_256.png""
);
Bitmap mIcon_val = BitmapFactory.decodeStream(req.openConnection()
                  .getInputStream());
</code></pre>
"
"2591036","12579068","3","<p>I found two reasons why this error might occur.</p>

<p><strong>One.</strong> The Window flags are set already set inside <code>super.onCreate(savedInstanceState);</code> in which case you may want to use the following order of commands:</p>

<pre><code>this.requestWindowFeature(Window.FEATURE_NO_TITLE);
this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);      

super.onCreate(savedInstanceState);
</code></pre>

<p><strong>Two.</strong> You have the Back/Up button inside the TitleBar, meaning that the current activity is a hierarchical child of another activity, in which case you might want to comment out or remove this line of code from inside the <code>onCreate</code> method.</p>

<pre><code>getActionBar().setDisplayHomeAsUpEnabled(true);
</code></pre>
"
"2150078","12651574","2","<p>Instead of assuming the difference coding I did something like this, as I dint had menu options in my application.</p>

<pre><code>       final View root= findViewById(R.id.myrootview);  
       root.getViewTreeObserver().addOnGlobalLayoutListener(new OnGlobalLayoutListener() {
        @Override
        public void onGlobalLayout() {
            int heightDiff = root.getRootView().getHeight() - root.getHeight();

            Rect rectgle= new Rect();
            Window window= getWindow();
            window.getDecorView().getWindowVisibleDisplayFrame(rectgle);
            int contentViewTop= 
                window.findViewById(Window.ID_ANDROID_CONTENT).getTop();

            if(heightDiff &lt;= contentViewTop){
                //Soft KeyBoard Hidden
            }else{
                //Soft KeyBoard Shown
            }


         }
    });
</code></pre>
"
"3349121","12656159","64","<p>InputFilters are a little complicated in Android versions that display dictionary suggestions. You sometimes get a SpannableStringBuilder, sometimes a plain String in the <code>source</code> parameter.</p>

<p>The following InputFilter should work. Feel free to improve this code!</p>

<pre><code>new InputFilter() {
    @Override
    public CharSequence filter(CharSequence source, int start, int end,
            Spanned dest, int dstart, int dend) {

        if (source instanceof SpannableStringBuilder) {
            SpannableStringBuilder sourceAsSpannableBuilder = (SpannableStringBuilder)source;
            for (int i = end - 1; i &gt;= start; i--) { 
                char currentChar = source.charAt(i);
                 if (!Character.isLetterOrDigit(currentChar) &amp;&amp; !Character.isSpaceChar(currentChar)) {    
                     sourceAsSpannableBuilder.delete(i, i+1);
                 }     
            }
            return source;
        } else {
            StringBuilder filteredStringBuilder = new StringBuilder();
            for (int i = start; i &lt; end; i++) { 
                char currentChar = source.charAt(i);
                if (Character.isLetterOrDigit(currentChar) || Character.isSpaceChar(currentChar)) {    
                    filteredStringBuilder.append(currentChar);
                }     
            }
            return filteredStringBuilder.toString();
        }
    }
}
</code></pre>
"
"8500283","12724687","3","<p>@Clerics solution works. But this appears to also be an issue with some of googles native apps: googles, play store, talk. Also other big apps like skype.</p>

<p><strong>EDIT</strong>: Bellow solution have given me problem for actionbarsherlock on api &lt; 4.0, the reason being setTheme doesn't work pre ice cream sandwich</p>

<p>Add following in your manifest within you application or activity tags:</p>

<pre><code>android:theme=""@style/Theme.NoActionBar""
</code></pre>

<p>And then in your main activity:</p>

<pre><code>    // Set theme
    setTheme(R.style.YOUR_THEME);
    getSupportActionBar().setTitle(R.string.title);

    // Start regular onCreate()
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
</code></pre>
"
"7723964","12848371","0","<p>Here's my relatively simple solution to this problem.  The keys to this solution are to use <code>FragmentStatePagerAdapter</code> instead of <code>FragmentPagerAdapter</code> as the former will remove unused fragments for you while the later still retains their instances.  The second is the use of <code>POSITION_NONE</code> in getItem().  I've used a simple List to keep track of my fragments.  My requirement was to replace the entire list of fragments at once with a new list, but the below could be easily modified to replace individual fragments:</p>

<pre><code>public class MyFragmentAdapter extends FragmentStatePagerAdapter {
    private List&lt;Fragment&gt; fragmentList = new ArrayList&lt;Fragment&gt;();
    private List&lt;String&gt; tabTitleList = new ArrayList&lt;String&gt;();

    public MyFragmentAdapter(FragmentManager fm) {
        super(fm);
    }

    public void addFragments(List&lt;Fragment&gt; fragments, List&lt;String&gt; titles) {
        fragmentList.clear();
        tabTitleList.clear();
        fragmentList.addAll(fragments);
        tabTitleList.addAll(titles);
        notifyDataSetChanged();
    }

    @Override
    public int getItemPosition(Object object) {
        if (fragmentList.contains(object)) {
            return POSITION_UNCHANGED;
        }
        return POSITION_NONE;
    }

    @Override
    public Fragment getItem(int item) {
        if (item &gt;= fragmentList.size()) {
            return null;
        }
        return fragmentList.get(item);
    }

    @Override
    public int getCount() {
        return fragmentList.size();
    }

    @Override
    public CharSequence getPageTitle(int position) {
        return tabTitleList.get(position);
    }
}
</code></pre>
"
"4165414","12866267","4","<p>I modified the solution of Andre Luis IM I achieved this one:</p>

<p>I created a utility method to hide the soft keyboard the same way Andre Luiz IM did:</p>

<pre><code>public static void hideSoftKeyboard(Activity activity) {
    InputMethodManager inputMethodManager = (InputMethodManager)  activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
    inputMethodManager.hideSoftInputFromWindow(activity.getCurrentFocus().getWindowToken(), 0);
}
</code></pre>

<p>But instead of register an OnTouchListener for every view, that give a poor performance, I registered the OnTouchListener for just the root view. Since the event bubbles until it's consumed (EditText is one of the views that consumes it by default), if it arrives to the root view, it's because it wasn't consumed, so I close the soft keyboard.</p>

<pre><code>findViewById(android.R.id.content).setOnTouchListener(new OnTouchListener() {
    @Override
    public boolean onTouch(View v, MotionEvent event) {
        Utils.hideSoftKeyboard(activity);
        return false;
    }
});
</code></pre>
"
"7723964","12883024","2","<p>I also made a solution, which is working with <strong>Stacks</strong>. It's a more <strong>modular</strong> approach so u don't have to specify each Fragment and Detail Fragment in your <code>FragmentPagerAdapter</code>. It's build on top of the Example from ActionbarSherlock which derives if I'm right from the Google Demo App.</p>

<pre><code>/**
 * This is a helper class that implements the management of tabs and all
 * details of connecting a ViewPager with associated TabHost.  It relies on a
 * trick.  Normally a tab host has a simple API for supplying a View or
 * Intent that each tab will show.  This is not sufficient for switching
 * between pages.  So instead we make the content part of the tab host
 * 0dp high (it is not shown) and the TabsAdapter supplies its own dummy
 * view to show as the tab content.  It listens to changes in tabs, and takes
 * care of switch to the correct paged in the ViewPager whenever the selected
 * tab changes.
 * 
 * Changed to support more Layers of fragments on each Tab.
 * by sebnapi (2012)
 * 
 */
public class TabsAdapter extends FragmentPagerAdapter
        implements TabHost.OnTabChangeListener, ViewPager.OnPageChangeListener {
    private final Context mContext;
    private final TabHost mTabHost;
    private final ViewPager mViewPager;

    private ArrayList&lt;String&gt; mTabTags = new ArrayList&lt;String&gt;();
    private HashMap&lt;String, Stack&lt;TabInfo&gt;&gt; mTabStackMap = new HashMap&lt;String, Stack&lt;TabInfo&gt;&gt;();

    static final class TabInfo {
        public final String tag;
        public final Class&lt;?&gt; clss;
        public Bundle args;

        TabInfo(String _tag, Class&lt;?&gt; _class, Bundle _args) {
            tag = _tag;
            clss = _class;
            args = _args;
        }
    }

    static class DummyTabFactory implements TabHost.TabContentFactory {
        private final Context mContext;

        public DummyTabFactory(Context context) {
            mContext = context;
        }

        @Override
        public View createTabContent(String tag) {
            View v = new View(mContext);
            v.setMinimumWidth(0);
            v.setMinimumHeight(0);
            return v;
        }
    }

    public interface SaveStateBundle{
        public Bundle onRemoveFragment(Bundle outState);
    }

    public TabsAdapter(FragmentActivity activity, TabHost tabHost, ViewPager pager) {
        super(activity.getSupportFragmentManager());
        mContext = activity;
        mTabHost = tabHost;
        mViewPager = pager;
        mTabHost.setOnTabChangedListener(this);
        mViewPager.setAdapter(this);
        mViewPager.setOnPageChangeListener(this);
    }

    /**
     * Add a Tab which will have Fragment Stack. Add Fragments on this Stack by using
     * addFragment(FragmentManager fm, String _tag, Class&lt;?&gt; _class, Bundle _args)
     * The Stack will hold always the default Fragment u add here.
     * 
     * DON'T ADD Tabs with same tag, it's not beeing checked and results in unexpected
     * beahvior.
     * 
     * @param tabSpec
     * @param clss
     * @param args
     */
    public void addTab(TabHost.TabSpec tabSpec, Class&lt;?&gt; clss, Bundle args){
        Stack&lt;TabInfo&gt; tabStack = new Stack&lt;TabInfo&gt;();

        tabSpec.setContent(new DummyTabFactory(mContext));
        mTabHost.addTab(tabSpec);
        String tag = tabSpec.getTag();
        TabInfo info = new TabInfo(tag, clss, args);

        mTabTags.add(tag);                  // to know the position of the tab tag 
        tabStack.add(info);
        mTabStackMap.put(tag, tabStack);
        notifyDataSetChanged();
    }

    /**
     * Will add the Fragment to Tab with the Tag _tag. Provide the Class of the Fragment
     * it will be instantiated by this object. Proivde _args for your Fragment.
     * 
     * @param fm
     * @param _tag
     * @param _class
     * @param _args
     */
    public void addFragment(FragmentManager fm, String _tag, Class&lt;?&gt; _class, Bundle _args){
        TabInfo info = new TabInfo(_tag, _class, _args);
        Stack&lt;TabInfo&gt; tabStack = mTabStackMap.get(_tag);   
        Fragment frag = fm.findFragmentByTag(""android:switcher:"" + mViewPager.getId() + "":"" + mTabTags.indexOf(_tag));
        if(frag instanceof SaveStateBundle){
            Bundle b = new Bundle();
            ((SaveStateBundle) frag).onRemoveFragment(b);
            tabStack.peek().args = b;
        }
        tabStack.add(info);
        FragmentTransaction ft = fm.beginTransaction();
        ft.remove(frag).commit();
        notifyDataSetChanged();
    }

    /**
     * Will pop the Fragment added to the Tab with the Tag _tag
     * 
     * @param fm
     * @param _tag
     * @return
     */
    public boolean popFragment(FragmentManager fm, String _tag){
        Stack&lt;TabInfo&gt; tabStack = mTabStackMap.get(_tag);   
        if(tabStack.size()&gt;1){
            tabStack.pop();
            Fragment frag = fm.findFragmentByTag(""android:switcher:"" + mViewPager.getId() + "":"" + mTabTags.indexOf(_tag));
            FragmentTransaction ft = fm.beginTransaction();
            ft.remove(frag).commit();
            notifyDataSetChanged();
            return true;
        }
        return false;
    }

    public boolean back(FragmentManager fm) {
        int position = mViewPager.getCurrentItem();
        return popFragment(fm, mTabTags.get(position));
    }

    @Override
    public int getCount() {
        return mTabStackMap.size();
    }

    @Override
    public int getItemPosition(Object object) {
        ArrayList&lt;Class&lt;?&gt;&gt; positionNoneHack = new ArrayList&lt;Class&lt;?&gt;&gt;();
        for(Stack&lt;TabInfo&gt; tabStack: mTabStackMap.values()){
            positionNoneHack.add(tabStack.peek().clss);
        }   // if the object class lies on top of our stacks, we return default
        if(positionNoneHack.contains(object.getClass())){
            return POSITION_UNCHANGED;
        }
        return POSITION_NONE;
    }

    @Override
    public Fragment getItem(int position) {
        Stack&lt;TabInfo&gt; tabStack = mTabStackMap.get(mTabTags.get(position));
        TabInfo info = tabStack.peek();
        return Fragment.instantiate(mContext, info.clss.getName(), info.args);
    }

    @Override
    public void onTabChanged(String tabId) {
        int position = mTabHost.getCurrentTab();
        mViewPager.setCurrentItem(position);
    }

    @Override
    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
    }

    @Override
    public void onPageSelected(int position) {
        // Unfortunately when TabHost changes the current tab, it kindly
        // also takes care of putting focus on it when not in touch mode.
        // The jerk.
        // This hack tries to prevent this from pulling focus out of our
        // ViewPager.
        TabWidget widget = mTabHost.getTabWidget();
        int oldFocusability = widget.getDescendantFocusability();
        widget.setDescendantFocusability(ViewGroup.FOCUS_BLOCK_DESCENDANTS);
        mTabHost.setCurrentTab(position);
        widget.setDescendantFocusability(oldFocusability);
    }

    @Override
    public void onPageScrollStateChanged(int state) {
    }

}
</code></pre>

<p>Add this for <strong>back button</strong> functionality in your MainActivity:</p>

<pre><code>@Override
public void onBackPressed() {
  if (!mTabsAdapter.back(getSupportFragmentManager())) {
    super.onBackPressed();
  }
}
</code></pre>

<p>If u like to <strong>save the Fragment State</strong> when it get's removed. Let your Fragment implement the interface <code>SaveStateBundle</code> return in the function a bundle with your save state. Get the bundle after instantiation by <code>this.getArguments()</code>.</p>

<p>You can <strong>instantiate</strong> a tab like this:</p>

<pre><code>mTabsAdapter.addTab(mTabHost.newTabSpec(""firstTabTag"").setIndicator(""First Tab Title""),
                FirstFragmentActivity.FirstFragmentFragment.class, null);
</code></pre>

<p>works similiar if u want to add a Fragment on top of a Tab Stack. 
<strong>Important</strong>: I think, it won't work if u want to have 2 instances of same class on top of two Tabs.
I did this solution quick together, so I can only share it without providing any experience with it.</p>
"
"5033012","12934636","0","<p>Here is my formulation.</p>

<pre><code>    public class AutoFitTextView extends TextView {
    public static final String TAG = ""AutoFitTextView"";

    private float mDesiredTextSize;



    public AutoFitTextView(Context context) {
        super(context);

        init();
    }

    public AutoFitTextView(Context context, AttributeSet attrs) {
        super(context, attrs);

        init();
    }

    public AutoFitTextView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);

        init();
    }



    private void init() {
        this.mDesiredTextSize = getTextSize();

        setSingleLine();
        setEllipsize(TruncateAt.END);
    }



    @Override
    protected void onTextChanged(CharSequence text, int start, int lengthBefore, int lengthAfter) {
        super.onTextChanged(text, start, lengthBefore, lengthAfter);

        if (mDesiredTextSize &gt; 0 &amp;&amp; text != null &amp;&amp; text.length() &gt; 0) {
            setTextSize(TypedValue.COMPLEX_UNIT_PX, mDesiredTextSize);
            final Layout layout = getLayout();
            if (layout != null) {
                final int lineCount = layout.getLineCount();
                if (lineCount &gt; 0) {
                    final int ellipsisCount = layout.getEllipsisCount(lineCount - 1);
                    if (ellipsisCount &gt; 0) {
                        boolean resize = true;
                        while (resize) {
                            float textWidth = getPaint().measureText(getText().toString()); 
                            int viewWidth = getWidth();
                            if (textWidth &lt;= viewWidth) {
                                resize = false;
                            } else {
                                final float textSize = getTextSize();
                                setTextSize(TypedValue.COMPLEX_UNIT_PX, (textSize - 1));
                            }
                        }
                    }
                }
            }
        }
    }
}
</code></pre>
"
"6343166","13044412","12","<p>You disable the strict mode using following code:</p>

<pre><code>if (android.os.Build.VERSION.SDK_INT &gt; 9) {
StrictMode.ThreadPolicy policy = 
        new StrictMode.ThreadPolicy.Builder().permitAll().build();
StrictMode.setThreadPolicy(policy);
}
</code></pre>

<p>Again that is not recommended. Use AsyncTask interface.</p>

<p>Full code for both the methods:
<a href=""http://www.javaexperience.com/android-create-non-blocking-user-interface/"" rel=""nofollow"">http://www.javaexperience.com/android-create-non-blocking-user-interface/</a></p>
"
"2617266","13046700","4","<p>This is <a href=""http://stackoverflow.com/a/7875656/1208581"">speedplane's <code>FontFitTextView</code></a>, but it only <em>decreases</em> font size if needed to make the text fit, and keeps its font size otherwise. It does not increase the font size to fit height.</p>

<pre><code>public class FontFitTextView extends TextView {

    // Attributes
    private Paint mTestPaint;
    private float defaultTextSize;

    public FontFitTextView(Context context) {
        super(context);
        initialize();
    }

    public FontFitTextView(Context context, AttributeSet attrs) {
        super(context, attrs);
        initialize();
    }

    private void initialize() {
        mTestPaint = new Paint();
        mTestPaint.set(this.getPaint());
        defaultTextSize = getTextSize();
    }

    /* Re size the font so the specified text fits in the text box
     * assuming the text box is the specified width.
     */
    private void refitText(String text, int textWidth) {

        if (textWidth &lt;= 0 || text.isEmpty())
            return;

        int targetWidth = textWidth - this.getPaddingLeft() - this.getPaddingRight();

        // this is most likely a non-relevant call
        if( targetWidth&lt;=2 )
            return;

        // text already fits with the xml-defined font size?
        mTestPaint.set(this.getPaint());
        mTestPaint.setTextSize(defaultTextSize);
        if(mTestPaint.measureText(text) &lt;= targetWidth) {
            this.setTextSize(TypedValue.COMPLEX_UNIT_PX, defaultTextSize);
            return;
        }

        // adjust text size using binary search for efficiency
        float hi = defaultTextSize;
        float lo = 2;
        final float threshold = 0.5f; // How close we have to be
        while (hi - lo &gt; threshold) {
            float size = (hi + lo) / 2;
            mTestPaint.setTextSize(size);
            if(mTestPaint.measureText(text) &gt;= targetWidth ) 
                hi = size; // too big
            else 
                lo = size; // too small

        }

        // Use lo so that we undershoot rather than overshoot
        this.setTextSize(TypedValue.COMPLEX_UNIT_PX, lo);
    }

    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
        int parentWidth = MeasureSpec.getSize(widthMeasureSpec);
        int height = getMeasuredHeight();
        refitText(this.getText().toString(), parentWidth);
        this.setMeasuredDimension(parentWidth, height);
    }

    @Override
    protected void onTextChanged(final CharSequence text, final int start,
            final int before, final int after) {
        refitText(text.toString(), this.getWidth());
    }

    @Override
    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        if (w != oldw || h != oldh) {
            refitText(this.getText().toString(), w);
        }
    }

}
</code></pre>

<p>Here is an example how it could be used in xml:</p>

<pre><code>&lt;com.your.package.activity.widget.FontFitTextView
    android:id=""@+id/my_id""
    android:layout_width=""match_parent""
    android:layout_height=""wrap_content""
    android:gravity=""center""
    android:text=""My Text""
    android:textSize=""60sp"" /&gt;
</code></pre>

<p>This would keep the font size to 60sp as long as the text fits in width. If the text is longer, it will decrease font size. In this case, the <code>TextView</code>s height will also change because of <code>height=wrap_content</code>.</p>

<p>If you find any bugs, feel free to edit.</p>
"
"5763304","13105409","1","<p>You can extend the gallery and use some flag to disable scrolling when you want:</p>

<pre><code>public class MyGallery extends Gallery {

public boolean canScroll;

public MyGallery(Context context, AttributeSet attrs) {
    canScroll = true;
    super(context, attrs);
}

public void setCanScroll(boolean flag)
{
    canScroll = flag;
}

@Override
public boolean onScroll(android.view.MotionEvent e1, android.view.MotionEvent e2, float distanceX, float distanceY) {
    if (canScroll)
        return super.onScroll(e1,e2,distancex,distancey);
    else
        return false;
}

@Override
public boolean onSingleTapUp(MotionEvent e)
{
    if (canScroll)
        return super.onSingleTapUp(ey);
    else
        return false;
}

@Override
public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY)
{
    if (canScroll)
        return super.onFling(e1,e2,velocityX,velocityY);
    else
        return false;
}
}
</code></pre>
"
"5495225","13122204","0","<p>I too faced a scenario and I resolved in this way.</p>

<ol>
<li>Store the values that you want to show, in a static way (Ex.POJO).</li>
<li>Check whether the stored static variable is not null and not empty.</li>
<li>if, its not empty / not null / its length greater than 0, set <code>dismissDropDown()</code> for that autocompleteTextView.</li>
</ol>

<p>Please find the below snippet </p>

<pre><code>if(null != testText &amp;&amp; testText.length() != 0) {
    mAutoCompleteSearch.setText(incomingActivity.toString());
    mAutoCompleteSearch.dismissDropDown(); //Dismiss the drop down
    } else {
    mAutoCompleteSearchDocketActivity.setText("""");
            // Here it(drop down) will be shown automatically
    }
</code></pre>

<p>Hope, this would help for someone, Cheers !</p>
"
"3916330","13173458","11","<p>These work for me and fit the WebView to screen width:</p>

<pre><code>// get from xml, with all size set ""fill_parent""  
webView = (WebView) findViewById(R.id.webview_in_layout);  
// fit the width of screen
webView.getSettings().setLayoutAlgorithm(LayoutAlgorithm.SINGLE_COLUMN); 
// remove a weird white line on the right size
webView.setScrollBarStyle(WebView.SCROLLBARS_OUTSIDE_OVERLAY);  
</code></pre>

<p>Thanks above advises and <a href=""http://stackoverflow.com/questions/9564023/white-line-in-eclipse-web-view"">White line in eclipse Web view</a></p>
"
"2617266","13219789","9","<p>Here is my solution which works on emulator and phones but not very well on Eclipse layout editor. It's inspired from kilaka's code but the size of the text is not obtained from the Paint but from measuring the TextView itself calling <code>measure(0, 0)</code>.</p>

<p>The Java class :</p>

<pre><code>public class FontFitTextView extends TextView
{
    private static final float THRESHOLD = 0.5f;

    private enum Mode { Width, Height, Both, None }

    private int minTextSize = 1;
    private int maxTextSize = 1000;

    private Mode mode = Mode.None;
    private boolean inComputation;
    private int widthMeasureSpec;
    private int heightMeasureSpec;

    public FontFitTextView(Context context) {
            super(context);
    }

    public FontFitTextView(Context context, AttributeSet attrs) {
            this(context, attrs, 0);
    }

    public FontFitTextView(Context context, AttributeSet attrs, int defStyle) {
            super(context, attrs, defStyle);

            TypedArray tAttrs = context.obtainStyledAttributes(attrs, R.styleable.FontFitTextView, defStyle, 0);
            maxTextSize = tAttrs.getDimensionPixelSize(R.styleable.FontFitTextView_maxTextSize, maxTextSize);
            minTextSize = tAttrs.getDimensionPixelSize(R.styleable.FontFitTextView_minTextSize, minTextSize);
            tAttrs.recycle();
    }

    private void resizeText() {
            if (getWidth() &lt;= 0 || getHeight() &lt;= 0)
                    return;
            if(mode == Mode.None)
                    return;

            final int targetWidth = getWidth();
            final int targetHeight = getHeight();

            inComputation = true;
            float higherSize = maxTextSize;
            float lowerSize = minTextSize;
            float textSize = getTextSize();
            while(higherSize - lowerSize &gt; THRESHOLD) {
                    textSize = (higherSize + lowerSize) / 2;
                    if (isTooBig(textSize, targetWidth, targetHeight)) {
                            higherSize = textSize; 
                    } else {
                            lowerSize = textSize;
                    }
            }
            setTextSize(TypedValue.COMPLEX_UNIT_PX, lowerSize);
            measure(widthMeasureSpec, heightMeasureSpec);
            inComputation = false;
    }

    private boolean isTooBig(float textSize, int targetWidth, int targetHeight) {
            setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize);
            measure(0, 0);
            if(mode == Mode.Both)
                    return getMeasuredWidth() &gt;= targetWidth || getMeasuredHeight() &gt;= targetHeight;
            if(mode == Mode.Width)
                    return getMeasuredWidth() &gt;= targetWidth;
            else
                    return getMeasuredHeight() &gt;= targetHeight;
    }

    private Mode getMode(int widthMeasureSpec, int heightMeasureSpec) {
            int widthMode = MeasureSpec.getMode(widthMeasureSpec);
            int heightMode = MeasureSpec.getMode(heightMeasureSpec);
            if(widthMode == MeasureSpec.EXACTLY &amp;&amp; heightMode == MeasureSpec.EXACTLY)
                    return Mode.Both;
            if(widthMode == MeasureSpec.EXACTLY)
                    return Mode.Width;
            if(heightMode == MeasureSpec.EXACTLY)
                    return Mode.Height;
            return Mode.None;
    }

    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
            super.onMeasure(widthMeasureSpec, heightMeasureSpec);
            if(!inComputation) {
                    this.widthMeasureSpec = widthMeasureSpec;
                    this.heightMeasureSpec = heightMeasureSpec;
                    mode = getMode(widthMeasureSpec, heightMeasureSpec);
                    resizeText();
            }
    }

    protected void onTextChanged(final CharSequence text, final int start, final int before, final int after) {
            resizeText();
    }

    @Override
    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
            if (w != oldw || h != oldh)
                    resizeText();
    }

    public int getMinTextSize() {
            return minTextSize;
    }

    public void setMinTextSize(int minTextSize) {
            this.minTextSize = minTextSize;
            resizeText();
    }

    public int getMaxTextSize() {
            return maxTextSize;
    }

    public void setMaxTextSize(int maxTextSize) {
            this.maxTextSize = maxTextSize;
            resizeText();
    }
}
</code></pre>

<p>The XML attribute file :</p>

<pre><code>&lt;resources&gt;
    &lt;declare-styleable name=""FontFitTextView""&gt;
        &lt;attr name=""minTextSize"" format=""dimension"" /&gt;
        &lt;attr name=""maxTextSize"" format=""dimension"" /&gt;
    &lt;/declare-styleable&gt;
&lt;/resources&gt;
</code></pre>

<p>Check <a href=""https://github.com/yDelouis/AutoFitTextView"" rel=""nofollow"">my github</a> for the latest version of this class.
I hope it can be useful for someone.
If a bug is found or if the code needs explaination, feel free to open an issue on Github.</p>
"
"2317428","13232541","2","<pre><code>// Need to implement SensorListener
public class ShakeActivity extends Activity implements SensorListener {
// For shake motion detection.
private SensorManager sensorMgr;
private long lastUpdate = -1;
private float x, y, z;
private float last_x, last_y, last_z;
private static final int SHAKE_THRESHOLD = 800;

protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
// start motion detection
sensorMgr = (SensorManager) getSystemService(SENSOR_SERVICE);
boolean accelSupported = sensorMgr.registerListener(this,
    SensorManager.SENSOR_ACCELEROMETER,
    SensorManager.SENSOR_DELAY_GAME);

if (!accelSupported) {
    // on accelerometer on this device
    sensorMgr.unregisterListener(this,
            SensorManager.SENSOR_ACCELEROMETER);
}
}

protected void onPause() {
if (sensorMgr != null) {
    sensorMgr.unregisterListener(this,
            SensorManager.SENSOR_ACCELEROMETER);
    sensorMgr = null;
    }
super.onPause();
}

public void onAccuracyChanged(int arg0, int arg1) {
// TODO Auto-generated method stub
}

public void onSensorChanged(int sensor, float[] values) {
if (sensor == SensorManager.SENSOR_ACCELEROMETER) {
    long curTime = System.currentTimeMillis();
    // only allow one update every 100ms.
    if ((curTime - lastUpdate)&gt; 100) {
    long diffTime = (curTime - lastUpdate);
    lastUpdate = curTime;

    x = values[SensorManager.DATA_X];
    y = values[SensorManager.DATA_Y];
    z = values[SensorManager.DATA_Z];

    float speed = Math.abs(x+y+z - last_x - last_y - last_z)
                          / diffTime * 10000;
    if (speed &gt; SHAKE_THRESHOLD) {
        // yes, this is a shake action! Do something about it!
    }
    last_x = x;
    last_y = y;
    last_z = z;
    }
}
}
}
</code></pre>
"
"3226495","13233771","17","<p>first finish your application using method <code>finish();</code></p>

<p>and then add below lines in onDestroy for Removing Force close</p>

<pre><code>android.os.Process.killProcess(android.os.Process.myPid());
super.onDestroy();
</code></pre>
"
"2322234","13234372","1","<p>As @haserman says:</p>

<pre><code>TelephonyManager tManager = (TelephonyManager)myActivity.getSystemService(Context.TELEPHONY_SERVICE);
String uid = tManager.getDeviceId();
</code></pre>

<p>But it's necessary including the permission in the manifest file:</p>

<pre><code>&lt;uses-permission android:name=""android.permission.READ_PHONE_STATE""/&gt;
</code></pre>
"
"2695746","13244470","7","<p>If there are multiple launchers in a one package above code has a problem. Eg: on LG Optimus Facebook for LG, MySpace for LG, Twitter for LG contains in a one package name SNS and if you use above SNS will repeat. After hours of research I came with below code. Seems to work well.</p>

<pre><code>private List&lt;String&gt; getInstalledComponentList()
            throws NameNotFoundException {
        final Intent mainIntent = new Intent(Intent.ACTION_MAIN, null);
        mainIntent.addCategory(Intent.CATEGORY_LAUNCHER);
        List&lt;ResolveInfo&gt; ril = getPackageManager().queryIntentActivities(mainIntent, 0);
        List&lt;String&gt; componentList = new ArrayList&lt;String&gt;();
        String name = null;

        for (ResolveInfo ri : ril) {
            if (ri.activityInfo != null) {
                Resources res = getPackageManager().getResourcesForApplication(ri.activityInfo.applicationInfo);
                if (ri.activityInfo.labelRes != 0) {
                    name = res.getString(ri.activityInfo.labelRes);
                } else {
                    name = ri.activityInfo.applicationInfo.loadLabel(
                            getPackageManager()).toString();
                }
                componentList.add(name);
            }
        }
        return componentList;
    }
</code></pre>
"
"5832368","13250584","1","<p>Thinking on the ""new"" acepted directories (values-sw600dp for example) i created this method based on the screen' width DP:</p>

<pre><code> public static final int TABLET_MIN_DP_WEIGHT = 450;
 protected static boolean isSmartphoneOrTablet(Activity act){
    DisplayMetrics metrics = new DisplayMetrics();
    act.getWindowManager().getDefaultDisplay().getMetrics(metrics);

    int dpi = 0;
    if (metrics.widthPixels &lt; metrics.heightPixels){
        dpi = (int) (metrics.widthPixels / metrics.density);
    }
    else{
        dpi = (int) (metrics.heightPixels / metrics.density);
    }

    if (dpi &lt; TABLET_MIN_DP_WEIGHT)         return true;
    else                                    return false;
}
</code></pre>

<p>And on this list you can find some of the DP of popular devices and tablet sizes:</p>

<p>Wdp / Hdp</p>

<p>GALAXY Nexus: 360 / 567<br>
XOOM: 1280 / 752<br>
GALAXY NOTE: 400 / 615<br>
NEXUS 7: 961 / 528<br>
GALAXY TAB (>7 &amp;&amp; &lt;10): 1280 / 752<br>
GALAXY S3: 360 / 615  </p>

<p>Wdp = Width dp<br>
Hdp = Height dp</p>
"
"5763304","13278191","1","<p>@JosephEarl +1 He has a great solution here that worked perfectly for me with some minor modifications for doing it programmatically.</p>

<hr>

<p>Here are the minor changes I made:</p>

<p><strong>LockableScrollView Class:</strong></p>

<pre><code>public boolean setScrollingEnabled(boolean enabled) {
    mScrollable = enabled;
    return mScrollable;
}
</code></pre>

<p><strong>MainActivity:</strong></p>

<pre><code>LockableScrollView sv;

@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    sv = new LockableScrollView(this);
    sv.setScrollingEnabled(false);
}
</code></pre>
"
"6070805","13278915","2","<p>I'm testing this and it seems to work:</p>

<pre><code>EditText editText = new EditText(context);
editText.setSingleLine(false);
editText.setInputType(android.text.InputType.TYPE_CLASS_TEXT | android.text.InputType.TYPE_TEXT_VARIATION_EMAIL_SUBJECT);
</code></pre>
"
"8181828","13305015","2","<p>My approach for this question is to use a timer to check for the following 2 ""events"". </p>

<p>1) onScrollChanged() stopped being called</p>

<p>2) User's finger is lift from the scrollview</p>

<pre><code>public class CustomScrollView extends HorizontalScrollView {

public CustomScrollView(Context context, AttributeSet attrs) {
    super(context, attrs);
}

Timer ntimer = new Timer();
MotionEvent event;

@Override
protected void onScrollChanged(int l, int t, int oldl, int oldt) 
{
    checkAgain();
    super.onScrollChanged(l, t, oldl, oldt);
}

public void checkAgain(){
    try{
        ntimer.cancel();
        ntimer.purge();
    }
    catch(Exception e){}
    ntimer = new Timer();
    ntimer.schedule(new TimerTask() {

        @Override
        public void run() {

            if(event.getAction() == MotionEvent.ACTION_UP){
                // ScrollView Stopped Scrolling and Finger is not on the ScrollView
            }
            else{
                // ScrollView Stopped Scrolling But Finger is still on the ScrollView
                checkAgain();
            }
        }
    },100);

}

@Override
public boolean onTouchEvent(MotionEvent event) {
    this.event = event; 
    return super.onTouchEvent(event);
    }
}
</code></pre>
"
"5105354","13306632","25","<p>The following code is pillaged from the Google's 4.1 source code for SearchView. Seems to work, fine on lesser versions of Android as well.</p>

<pre><code>    private Runnable mShowImeRunnable = new Runnable() {
    public void run() {
        InputMethodManager imm = (InputMethodManager) getContext()
                .getSystemService(Context.INPUT_METHOD_SERVICE);

        if (imm != null) {
            imm.showSoftInput(editText,0);
        }
    }
};

private void setImeVisibility(final boolean visible) {
    if (visible) {
        post(mShowImeRunnable);
    } else {
        removeCallbacks(mShowImeRunnable);
        InputMethodManager imm = (InputMethodManager) getContext()
                .getSystemService(Context.INPUT_METHOD_SERVICE);

        if (imm != null) {
            imm.hideSoftInputFromWindow(getWindowToken(), 0);
        }
    }
}
</code></pre>

<p>Then in addition, the following code needs to be added as the Control/Activity is created. (In my case it's a composite control, rather than an activity).</p>

<pre><code>        this.editText
            .setOnFocusChangeListener(new View.OnFocusChangeListener() {
                public void onFocusChange(View v, boolean hasFocus) {
                    if (hasFocus) {
                        setImeVisibility(true);
                    } else {
                        setImeVisibility(false);
                    }
                }
            });
</code></pre>
"
"4617898","13313786","0","<p>This worked for me:</p>

<pre><code>img.setOnTouchListener(new OnTouchListener(){

            @Override
            public boolean onTouch(View v, MotionEvent event) {
                switch (event.getAction())
                {
                    case MotionEvent.ACTION_DOWN:
                    {
                        ((ImageView)v).setImageAlpha(200);
                        break;
                    }
                    case MotionEvent.ACTION_MOVE:
                    {
                        // if inside bounds
                        if(event.getX() &gt; 0 &amp;&amp; event.getX() &lt; v.getWidth() &amp;&amp; event.getY() &gt; 0 &amp;&amp; event.getY() &lt; v.getHeight())
                        {
                            ((ImageView)v).setImageAlpha(200);
                        }
                        else
                        {
                            ((ImageView)v).setImageAlpha(255);
                        }

                        break;
                    }
                    case MotionEvent.ACTION_UP:
                    {
                        ((ImageView)v).setImageAlpha(255);
                    }
                }
                return true;
            }

        });
</code></pre>

<p>@Edit: As Gunhan said there will be backward compatibility problem with setImageAlpha method. 
I used this method:</p>

<pre><code>public static void setImageAlpha(ImageView img, int alpha)
    {
        if(Build.VERSION.SDK_INT &gt; 15)
        {
            img.setImageAlpha(alpha);
        }
        else
        {
            img.setAlpha(alpha);
        }
    }
</code></pre>
"
"5033012","13377239","6","<p>My implementation is a bit more complex, but comes with the following goodies:</p>

<ul>
<li>takes the available width and available height into account</li>
<li>works with single line and multiline labels</li>
<li>uses ellipsis in case the minimum font size is hit</li>
<li>since the internal text representation is changed, remembers the originally set text in a separate variable</li>
<li>ensures that the canvas is always only as big as it needs to be, while it uses all the available height of the parent</li>
</ul>

<pre class=""lang-java prettyprint-override""><code>/**
 * Text view that auto adjusts text size to fit within the view. If the text
 * size equals the minimum text size and still does not fit, append with an
 * ellipsis.
 * 
 * Based on the original work from Chase Colburn
 * &amp;lt;http://stackoverflow.com/a/5535672/305532&gt;
 *
 * @author Thomas Keller &amp;lt;me@thomaskeller.biz&gt;
 */
public class AutoResizeTextView extends TextView {

    // in dip
    private static final int MIN_TEXT_SIZE = 20;

    private static final boolean SHRINK_TEXT_SIZE = true;

    private static final char ELLIPSIS = '\u2026';

    private static final float LINE_SPACING_MULTIPLIER_MULTILINE = 0.8f;

    private static final float LINE_SPACING_MULTIPLIER_SINGLELINE = 1f;

    private static final float LINE_SPACING_EXTRA = 0.0f;

    private CharSequence mOriginalText;

    // temporary upper bounds on the starting text size
    private float mMaxTextSize;

    // lower bounds for text size
    private float mMinTextSize;

    // determines whether we're currently in the process of measuring ourselves,
    // so we do not enter onMeasure recursively
    private boolean mInMeasure = false;

    // if the text size should be shrinked or if the text size should be kept
    // constant and only characters should be removed to hit the boundaries
    private boolean mShrinkTextSize;

    public AutoResizeTextView(Context context) {
        this(context, null);
        init(context, null);
    }

    public AutoResizeTextView(Context context, AttributeSet attrs) {
        this(context, attrs, 0);
        init(context, attrs);
    }

    public AutoResizeTextView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        init(context, attrs);
    }

    private void init(Context context, AttributeSet attrs) {
        // the current text size is used as maximum text size we can apply to
        // our widget
        mMaxTextSize = getTextSize();
        if (attrs != null) {
            TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.AutoResizeTextView);
            mMinTextSize = a.getFloat(R.styleable.AutoResizeTextView_minFontSize, MIN_TEXT_SIZE);
            mShrinkTextSize = a.getBoolean(R.styleable.AutoResizeTextView_shrinkTextSize, SHRINK_TEXT_SIZE);
            a.recycle();
        }
    }

    @Override
    public void setTextSize(float size) {
        mMaxTextSize = size;
        super.setTextSize(size);
    }

    /**
     * Returns the original, unmodified text of this widget
     * 
     * @return
     */
    public CharSequence getOriginalText() {
        // text has not been resized yet
        if (mOriginalText == null) {
            return getText();
        }
        return mOriginalText;
    }

    @Override
    public void setText(CharSequence text, BufferType type) {
        if (!mInMeasure) {
            mOriginalText = text.toString();
        }
        super.setText(text, type);
    }

    @SuppressLint(""DrawAllocation"")
    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        mInMeasure = true;
        try {
            int availableWidth = MeasureSpec.getSize(widthMeasureSpec) - getCompoundPaddingLeft()
                    - getCompoundPaddingRight();
            int availableHeight = MeasureSpec.getSize(heightMeasureSpec) - getCompoundPaddingTop()
                    - getCompoundPaddingBottom();

            // Do not resize if the view does not have dimensions or there is no
            // text
            if (mOriginalText == null || mOriginalText.length() == 0 || availableWidth &lt;= 0) {
                return;
            }

            TextPaint textPaint = getPaint();

            // start with the recorded max text size
            float targetTextSize = mMaxTextSize;
            String originalText = mOriginalText.toString();
            String finalText = originalText;

            Rect textSize = getTextSize(originalText, textPaint, targetTextSize);
            boolean textExceedsBounds = textSize.height() &gt; availableHeight || textSize.width() &gt; availableWidth;
            if (mShrinkTextSize &amp;&amp; textExceedsBounds) {
                // check whether all lines can be rendered in the available
                // width / height without violating the bounds of the parent and
                // without using a text size that is smaller than the minimum
                // text size
                float heightMultiplier = availableHeight / (float) textSize.height();
                float widthMultiplier = availableWidth / (float) textSize.width();
                float multiplier = Math.min(heightMultiplier, widthMultiplier);
                targetTextSize = Math.max(targetTextSize * multiplier, mMinTextSize);

                // measure again
                textSize = getTextSize(finalText, textPaint, targetTextSize);
            }

            // we cannot shrink the height further when we hit the available
            // height, but we can shrink the width by applying an ellipsis on
            // each line
            if (textSize.width() &gt; availableWidth) {
                StringBuilder modifiedText = new StringBuilder();
                String lines[] = originalText.split(System.getProperty(""line.separator""));
                for (int i = 0; i &lt; lines.length; i++) {
                    modifiedText.append(resizeLine(textPaint, lines[i], availableWidth));
                    // add the separator back to all but the last processed line
                    if (i != lines.length - 1) {
                        modifiedText.append(System.getProperty(""line.separator""));
                    }
                }
                finalText = modifiedText.toString();

                // measure again
                textSize = getTextSize(finalText, textPaint, targetTextSize);
            }

            textPaint.setTextSize(targetTextSize);
            boolean isMultiline = finalText.indexOf('\n') &gt; -1;
            // do not include extra font padding (for accents, ...) for
            // multiline texts, this will prevent proper placement with
            // Gravity.CENTER_VERTICAL
            if (isMultiline) {
                setLineSpacing(LINE_SPACING_EXTRA, LINE_SPACING_MULTIPLIER_MULTILINE);
                setIncludeFontPadding(false);
            } else {
                setLineSpacing(LINE_SPACING_EXTRA, LINE_SPACING_MULTIPLIER_SINGLELINE);
                setIncludeFontPadding(true);
            }

            // according to
            // &lt;http://code.google.com/p/android/issues/detail?id=22493&gt;
            // we have to add a unicode character to trigger the text centering
            // in ICS. this particular character is known as ""zero-width"" and
            // does no harm.
            setText(finalText + ""\u200B"");

            int measuredWidth = textSize.width() + getCompoundPaddingLeft() + getCompoundPaddingRight();
            int measuredHeight = textSize.height() + getCompoundPaddingTop() + getCompoundPaddingBottom();

            // expand the view to the parent's height in case it is smaller or
            // to the minimum height that has been set
            // FIXME: honor the vertical measure mode (EXACTLY vs AT_MOST) here
            // somehow
            measuredHeight = Math.max(measuredHeight, MeasureSpec.getSize(heightMeasureSpec));
            setMeasuredDimension(measuredWidth, measuredHeight);
        } finally {
            mInMeasure = false;
        }
    }

    private Rect getTextSize(String text, TextPaint textPaint, float textSize) {
        textPaint.setTextSize(textSize);
        // StaticLayout depends on a given width in which it should lay out the
        // text (and optionally also split into separate lines).
        // Therefor we calculate the current text width manually and start with
        // a fake (read: maxmimum) width for the height calculation.
        // We do _not_ use layout.getLineWidth() here since this returns
        // slightly smaller numbers and therefor would lead to exceeded text box
        // drawing.
        StaticLayout layout = new StaticLayout(text, textPaint, Integer.MAX_VALUE, Alignment.ALIGN_NORMAL, 1f, 0f, true);
        int textWidth = 0;
        String lines[] = text.split(System.getProperty(""line.separator""));
        for (int i = 0; i &lt; lines.length; ++i) {
            textWidth = Math.max(textWidth, measureTextWidth(textPaint, lines[i]));
        }
        return new Rect(0, 0, textWidth, layout.getHeight());
    }

    private String resizeLine(TextPaint textPaint, String line, int availableWidth) {
        checkArgument(line != null &amp;&amp; line.length() &gt; 0, ""expected non-empty string"");
        int textWidth = measureTextWidth(textPaint, line);
        int lastDeletePos = -1;
        StringBuilder builder = new StringBuilder(line);
        while (textWidth &gt; availableWidth &amp;&amp; builder.length() &gt; 0) {
            lastDeletePos = builder.length() / 2;
            builder.deleteCharAt(builder.length() / 2);
            // don't forget to measure the ellipsis character as well; it
            // doesn't matter where it is located in the line, it just has to be
            // there, since there are no (known) ligatures that use this glyph
            String textToMeasure = builder.toString() + ELLIPSIS;
            textWidth = measureTextWidth(textPaint, textToMeasure);
        }
        if (lastDeletePos &gt; -1) {
            builder.insert(lastDeletePos, ELLIPSIS);
        }
        return builder.toString();
    }

    // there are several methods in Android to determine the text width, namely
    // getBounds() and measureText().
    // The latter works for us the best as it gives us the best / nearest
    // results without that our text canvas needs to wrap its text later on
    // again.
    private int measureTextWidth(TextPaint textPaint, String line) {
        return Math.round(textPaint.measureText(line));
    }
}
</code></pre>

<p><strong>[revised on 2012-11-21]</strong></p>

<ul>
<li>fixed the placement of the ellipsis (off-by-one error)</li>
<li>reworked text size calculation; now always the full text including line breaks is measured, to fix problems when the addition of the height of two single measured lines just didn't lead to the same result as the measurement of the height of the text as a whole</li>
<li>instead of looping to find the smallest available text size, just calculate it after the first measurement </li>
</ul>
"
"4946295","13381228","178","<p>I see that this question became popular so I post my actual solution. The main advantage is that you don't have to know the expanded height to apply the animation and once the view is expanded, it adapts height if content changes. It works great for me.</p>

<pre><code>public static void expand(final View v) {
    v.measure(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
    final int targetHeight = v.getMeasuredHeight();

    v.getLayoutParams().height = 0;
    v.setVisibility(View.VISIBLE);
    Animation a = new Animation()
    {
        @Override
        protected void applyTransformation(float interpolatedTime, Transformation t) {
            v.getLayoutParams().height = interpolatedTime == 1
                    ? LayoutParams.WRAP_CONTENT
                    : (int)(targetHeight * interpolatedTime);
            v.requestLayout();
        }

        @Override
        public boolean willChangeBounds() {
            return true;
        }
    };

    // 1dp/ms
    a.setDuration((int)(targetHeight / v.getContext().getResources().getDisplayMetrics().density));
    v.startAnimation(a);
}

public static void collapse(final View v) {
    final int initialHeight = v.getMeasuredHeight();

    Animation a = new Animation()
    {
        @Override
        protected void applyTransformation(float interpolatedTime, Transformation t) {
            if(interpolatedTime == 1){
                v.setVisibility(View.GONE);
            }else{
                v.getLayoutParams().height = initialHeight - (int)(initialHeight * interpolatedTime);
                v.requestLayout();
            }
        }

        @Override
        public boolean willChangeBounds() {
            return true;
        }
    };

    // 1dp/ms
    a.setDuration((int)(initialHeight / v.getContext().getResources().getDisplayMetrics().density));
    v.startAnimation(a);
}
</code></pre>
"
"2317428","13387833","3","<p>I have tried several implementations, but would like to share my own.
It uses <code>G-force</code> as unit for the threshold calculation. It makes it a bit easier to understand what is going on, and also with setting a good threshold.</p>

<p>It simply registers a increase in G force and triggers the listener if it exceeds the threshold. It doesn't use any direction thresholds, cause you don't really need that if you just want to register a good shake.</p>

<p>Of-course you need the standard registering and UN-registering of this listener in the <code>Activity</code>. </p>

<p>Also, to check what threshold you need, I recommend the <a href=""https://play.google.com/store/apps/details?id=com.example.gForce"" rel=""nofollow"">following app</a> (I am not in any way connected to that app)</p>

<pre><code>    public class UmitoShakeEventListener implements SensorEventListener {

    /**
     * The gforce that is necessary to register as shake. (Must include 1G
     * gravity)
     */
    private final float shakeThresholdInGForce = 2.25F;

    private final float gravityEarth = SensorManager.GRAVITY_EARTH;

    private OnShakeListener listener;

    public void setOnShakeListener(OnShakeListener listener) {
        this.listener = listener;
    }

    public interface OnShakeListener {
        public void onShake();
    }

    @Override
    public void onAccuracyChanged(Sensor sensor, int accuracy) {
        // ignore

    }

    @Override
    public void onSensorChanged(SensorEvent event) {

        if (listener != null) {
            float x = event.values[0];
            float y = event.values[1];
            float z = event.values[2];

            float gX = x / gravityEarth;
            float gY = y / gravityEarth;
            float gZ = z / gravityEarth;

            //G-Force will be 1 when there is no movement. (gravity)
            float gForce = FloatMath.sqrt(gX * gX + gY * gY + gZ * gZ); 



            if (gForce &gt; shakeThresholdInGForce) {
                listener.onShake();

            }
        }

    }

}
</code></pre>
"
"6330260","13468685","33","<p>You may try <code>Intent.FLAG_ACTIVITY_CLEAR_TASK|Intent.FLAG_ACTIVITY_NEW_TASK</code>. It will totally clears all previous activity(s) and start new activity. </p>
"
"2591036","13480048","7","<p>In your <code>onCreate</code> method, use the following snippet:</p>

<pre><code>this.requestWindowFeature(Window.FEATURE_NO_TITLE);
</code></pre>
"
"3035692","13480188","45","<p>Use this code:</p>

<pre><code>Bitmap bitmap= BitmapFactory.decodeResource(context.getResources(), 
    R.drawable.icon_name);
</code></pre>
"
"2617266","13522436","2","<p>I've been working on improving the excellent solution from speedplane, and came up with this. It manages the height, including setting the margin such that the text should be centered correctly vertically.</p>

<p>This uses the same function to get the width, as it seems to work the best, but it uses a different function to get the height, as the height isn't provided anywhere. There are some corrections that need to be made, but I figured out a way to do that, while looking pleasing to the eye. </p>

<pre><code>import android.content.Context;
import android.graphics.Paint;
import android.graphics.Rect;
import android.util.AttributeSet;
import android.util.TypedValue;
import android.widget.TextView;

public class FontFitTextView extends TextView {

    public FontFitTextView(Context context) {
        super(context);
        initialize();
    }

    public FontFitTextView(Context context, AttributeSet attrs) {
        super(context, attrs);
        initialize();
    }

    private void initialize() {
        mTestPaint = new Paint();
        mTestPaint.set(this.getPaint());

        //max size defaults to the initially specified text size unless it is too small
    }

    /* Re size the font so the specified text fits in the text box
     * assuming the text box is the specified width.
     */
    private void refitText(String text, int textWidth,int textHeight) 
    { 
        if (textWidth &lt;= 0)
            return;
        int targetWidth = textWidth - this.getPaddingLeft() - this.getPaddingRight();
        int targetHeight = textHeight - this.getPaddingTop() - this.getPaddingBottom();
        float hi = Math.min(targetHeight,100);
        float lo = 2;
        final float threshold = 0.5f; // How close we have to be

        Rect bounds = new Rect();

        mTestPaint.set(this.getPaint());

        while((hi - lo) &gt; threshold) {
            float size = (hi+lo)/2;
            mTestPaint.setTextSize(size);
            mTestPaint.getTextBounds(text, 0, text.length(), bounds);
            if((mTestPaint.measureText(text)) &gt;= targetWidth || (1+(2*(size+(float)bounds.top)-bounds.bottom)) &gt;=targetHeight) 
                hi = size; // too big
            else
                lo = size; // too small
        }
        // Use lo so that we undershoot rather than overshoot
        this.setTextSize(TypedValue.COMPLEX_UNIT_PX,(float) lo);

    }

    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
    {
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
        int parentWidth = MeasureSpec.getSize(widthMeasureSpec);
        int parentHeight = MeasureSpec.getSize(heightMeasureSpec);
        int height = getMeasuredHeight();
        refitText(this.getText().toString(), parentWidth,height);
        this.setMeasuredDimension(parentWidth, height);
    }

    @Override
    protected void onTextChanged(final CharSequence text, final int start, final int before, final int after) {
        refitText(text.toString(), this.getWidth(),this.getHeight());
    }

    @Override
    protected void onSizeChanged (int w, int h, int oldw, int oldh) {

        if (w != oldw) {
            refitText(this.getText().toString(), w,h);
        }
    }

    //Attributes
    private Paint mTestPaint;
}
</code></pre>
"
"2644134","13578537","8","<p>I found Three Way to do this ></p>

<p>1) Using requestWindowFeature</p>

<pre><code>Dialog dialog = new Dialog(this);
dialog.requestWindowFeature(dialog.getWindow().FEATURE_NO_TITLE); 
</code></pre>

<p>2) Using style (style.xml)</p>

<pre><code>&lt;style name=""FullHeightDialog"" parent=""android:style/Theme.Dialog""&gt;
   &lt;item name=""android:windowNoTitle""&gt;true&lt;/item&gt;
&lt;/style&gt;

Dialog dialog = new Dialog(context, R.style.FullHeightDialog);
</code></pre>

<p>3) Using XML theme in AndroidManifest.xml</p>

<pre><code> android:theme=""@android:style/Theme.NoTitleBar""
</code></pre>
"
"6290531","13582036","12","<p>Way late to the party here, but I just have to add Android's own <a href=""http://developer.android.com/reference/android/text/TextUtils.html#isEmpty%28java.lang.CharSequence%29"" rel=""nofollow"">TextUtils.isEmpty(CharSequence str)</a> </p>

<blockquote>
  <p>Returns true if the string is null or 0-length</p>
</blockquote>

<p>So if you put your five EditTexts in a list, the full code would be:</p>

<pre><code>for(EditText edit : editTextList){
    if(TextUtils.isEmpty(edit.getText()){
        // EditText was empty
        // Do something fancy
    }
}
</code></pre>
"
"5105354","13583534","14","<p><code>android:windowSoftInputMode=""stateAlwaysVisible""</code> -> in manifest File.  </p>

<p><code>edittext.requestFocus();</code>  -> in code.</p>

<p>This will open soft keyboard on which edit-text has request focus as activity appears. </p>
"
"6330260","13604666","5","<p>From <a href=""http://developer.android.com/reference/android/app/Activity.html#finishAffinity%28%29"" rel=""nofollow"">developer.android.com</a>:</p>

<blockquote>
<pre><code>public void finishAffinity ()
</code></pre>
  
  <p>Added in API level 16</p>
</blockquote>

<p>Finish this activity as well as all activities immediately below it in the current task that have the same affinity. This is typically used when an application can be launched on to another task (such as from an ACTION_VIEW of a content type it understands) and the user has used the up navigation to switch out of the current task and in to its own task. In this case, if the user has navigated down into any other activities of the second application, all of those should be removed from the original task as part of the task switch.</p>

<p>Note that this finish does not allow you to deliver results to the previous activity, and an exception will be thrown if you are trying to do so.</p>
"
"2644134","13772131","1","<p>After a bunch of hacking, I got this to work:</p>

<pre><code>            Window window = dialog.getWindow();
            View view = window.getDecorView();
            final int topPanelId = getResources().getIdentifier( ""topPanel"", ""id"", ""android"" );
            LinearLayout topPanel = (LinearLayout) view.findViewById(topPanelId);
            topPanel.setVisibility(View.GONE);
</code></pre>
"
"3495890","13796159","34","<p><strong>This will definitely work............</strong><br>
You have to just replace your <code>&lt;ScrollView &gt;&lt;/ScrollView&gt;</code> in layout XML file with this <code>Custom ScrollView</code> like     <code>&lt;com.tmd.utils.VerticalScrollview &gt; &lt;/com.tmd.utils.VerticalScrollview &gt;</code> </p>

<pre><code>package com.tmd.utils;

import android.content.Context;
import android.util.AttributeSet;
import android.util.Log;
import android.view.MotionEvent;
import android.widget.ScrollView;

public class VerticalScrollview extends ScrollView{

    public VerticalScrollview(Context context) {
        super(context);
    }

     public VerticalScrollview(Context context, AttributeSet attrs) {
            super(context, attrs);
        }

        public VerticalScrollview(Context context, AttributeSet attrs, int defStyle) {
            super(context, attrs, defStyle);
        }

    @Override
    public boolean onInterceptTouchEvent(MotionEvent ev) {
        final int action = ev.getAction();
        switch (action)
        {
            case MotionEvent.ACTION_DOWN:
                    Log.i(""VerticalScrollview"", ""onInterceptTouchEvent: DOWN super false"" );
                    super.onTouchEvent(ev);
                    break;

            case MotionEvent.ACTION_MOVE:
                    return false; // redirect MotionEvents to ourself

            case MotionEvent.ACTION_CANCEL:
                    Log.i(""VerticalScrollview"", ""onInterceptTouchEvent: CANCEL super false"" );
                    super.onTouchEvent(ev);
                    break;

            case MotionEvent.ACTION_UP:
                    Log.i(""VerticalScrollview"", ""onInterceptTouchEvent: UP super false"" );
                    return false;

            default: Log.i(""VerticalScrollview"", ""onInterceptTouchEvent: "" + action ); break;
        }

        return false;
    }

    @Override
    public boolean onTouchEvent(MotionEvent ev) {
        super.onTouchEvent(ev);
        Log.i(""VerticalScrollview"", ""onTouchEvent. action: "" + ev.getAction() );
         return true;
    }
}
</code></pre>
"
"3166501","13802113","12","<p>This should help on your activity ...</p>

<pre><code>void printSecreenInfo(){

    Display display = getWindowManager().getDefaultDisplay();
    DisplayMetrics metrics = new DisplayMetrics();
    display.getMetrics(metrics);

    Log.i(TAG, ""density :"" +  metrics.density);

    // density interms of dpi
    Log.i(TAG, ""D density :"" +  metrics.densityDpi);

    // horizontal pixel resolution
    Log.i(TAG, ""width pix :"" +  metrics.widthPixels);

     // actual horizontal dpi
    Log.i(TAG, ""xdpi :"" +  metrics.xdpi);

    // actual vertical dpi
    Log.i(TAG, ""ydpi :"" +  metrics.ydpi);

}
</code></pre>

<p>OUTPUT : </p>

<pre><code>I/test( 1044): density :1.0

I/test( 1044): D density :160

I/test( 1044): width pix :800

I/test( 1044): xdpi :160.0

I/test( 1044): ydpi :160.42105
</code></pre>
"
"6070805","13819353","1","<p>Adding this property to the <code>EditText</code> XML works for me:</p>

<pre><code>android:lines=""1""
</code></pre>

<p>It lets the users input newline characters but the <code>EditText</code> itself does not increase in height.</p>
"
"2317428","13830239","6","<p>I really liked Peterdk's answer.  I took it upon myself to make a coulpe of tweaks to his code .</p>

<p><em>file: ShakeDetector.java</em></p>

<pre><code>import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.util.FloatMath;

public class ShakeDetector implements SensorEventListener {

    // The gForce that is necessary to register as shake. Must be greater than 1G (one earth gravity unit)
    private static final float SHAKE_THRESHOLD_GRAVITY = 2.7F;
    private static final int SHAKE_SLOP_TIME_MS = 500;
    private static final int SHAKE_COUNT_RESET_TIME_MS = 3000;

    private OnShakeListener mListener;
    private long mShakeTimestamp;
    private int mShakeCount;

    public void setOnShakeListener(OnShakeListener listener) {
        this.mListener = listener;
    }

    public interface OnShakeListener {
        public void onShake(int count);
    }

    @Override
    public void onAccuracyChanged(Sensor sensor, int accuracy) {
        // ignore
    }

    @Override
    public void onSensorChanged(SensorEvent event) {

        if (mListener != null) {
            float x = event.values[0];
            float y = event.values[1];
            float z = event.values[2];

            float gX = x / SensorManager.GRAVITY_EARTH;
            float gY = y / SensorManager.GRAVITY_EARTH;
            float gZ = z / SensorManager.GRAVITY_EARTH;

            // gForce will be close to 1 when there is no movement.
            float gForce = FloatMath.sqrt(gX * gX + gY * gY + gZ * gZ);

            if (gForce &gt; SHAKE_THRESHOLD_GRAVITY) {
                final long now = System.currentTimeMillis();
                // ignore shake events too close to each other (500ms)
                if (mShakeTimestamp + SHAKE_SLOP_TIME_MS &gt; now ) {
                    return;
                }

                // reset the shake count after 3 seconds of no shakes
                if (mShakeTimestamp + SHAKE_COUNT_RESET_TIME_MS &lt; now ) {
                    mShakeCount = 0;
                }

                mShakeTimestamp = now;
                mShakeCount++;

                mListener.onShake(mShakeCount);
            }
        }
    }
}
</code></pre>

<p>Also, don't forget that you need to register an instance of the ShakeDetector with the SensorManager.</p>

<pre><code>// ShakeDetector initialization
mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
mAccelerometer = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
mShakeDetector = new ShakeDetector();
mShakeDetector.setOnShakeListener(new OnShakeListener() {

    @Override
    public void onShake(int count) {
            handleShakeEvent(count); 
        }
    });

mSensorManager.registerListener(mShakeDetector, mAccelerometer, SensorManager.SENSOR_DELAY_UI);
</code></pre>
"
"3647993","13844748","0","<p>Improving on the solution above by Timmmm to add some extra scaling at the end to ensure that the image fits within the bounds:</p>

<pre><code>public static Bitmap loadBitmap(String path, int orientation, final int targetWidth, final int targetHeight) {
    Bitmap bitmap = null;
    try {
        // First decode with inJustDecodeBounds=true to check dimensions
        final BitmapFactory.Options options = new BitmapFactory.Options();
        options.inJustDecodeBounds = true;
        BitmapFactory.decodeFile(path, options);

        // Adjust extents
        int sourceWidth, sourceHeight;
        if (orientation == 90 || orientation == 270) {
            sourceWidth = options.outHeight;
            sourceHeight = options.outWidth;
        } else {
            sourceWidth = options.outWidth;
            sourceHeight = options.outHeight;
        }

        // Calculate the maximum required scaling ratio if required and load the bitmap
        if (sourceWidth &gt; targetWidth || sourceHeight &gt; targetHeight) {
            float widthRatio = (float)sourceWidth / (float)targetWidth;
            float heightRatio = (float)sourceHeight / (float)targetHeight;
            float maxRatio = Math.max(widthRatio, heightRatio);
            options.inJustDecodeBounds = false;
            options.inSampleSize = (int)maxRatio;
            bitmap = BitmapFactory.decodeFile(path, options);
        } else {
            bitmap = BitmapFactory.decodeFile(path);
        }

        // Rotate the bitmap if required
        if (orientation &gt; 0) {
            Matrix matrix = new Matrix();
            matrix.postRotate(orientation);
            bitmap = Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);
        }

        // Re-scale the bitmap if necessary
        sourceWidth = bitmap.getWidth();
        sourceHeight = bitmap.getHeight();
        if (sourceWidth != targetWidth || sourceHeight != targetHeight) {
            float widthRatio = (float)sourceWidth / (float)targetWidth;
            float heightRatio = (float)sourceHeight / (float)targetHeight;
            float maxRatio = Math.max(widthRatio, heightRatio);
            sourceWidth = (int)((float)sourceWidth / maxRatio);
            sourceHeight = (int)((float)sourceHeight / maxRatio);
            bitmap = Bitmap.createScaledBitmap(bitmap, sourceWidth, sourceHeight, true);
        }
    } catch (Exception e) {
    }
    return bitmap;
}
</code></pre>
"
"3349121","13874265","44","<p>much easier:</p>

<pre><code>&lt;EditText
    android:inputType=""text""
    android:digits=""0,1,2,3,4,5,6,7,8,9,*,qwertzuiopasdfghjklyxcvbnm"" /&gt;
</code></pre>
"
"7723964","13925130","28","<p>As of November 13th 2012, repacing fragments in a ViewPager seems to have become a lot easier. Google released Android 4.2 with support for nested fragments, and it's also supported in the new <a href=""http://developer.android.com/tools/extras/support-library.html"">Android Support Library v11</a> so this will work all the way back to 1.6</p>

<p>It's very similiar to the normal way of replacing a fragment except you use getChildFragmentManager. It seems to work except the <a href=""http://stackoverflow.com/questions/13706228/nested-fragments-and-the-back-stack"">nested fragment backstack isn't popped</a> when the user clicks the back button. As per the solution in that linked question, you need to manually call the popBackStackImmediate() on the child manager of the fragment. So you need to override onBackPressed() of the ViewPager activity where you'll get the current fragment of the ViewPager and call getChildFragmentManager().popBackStackImmediate() on it.</p>

<p>Getting the Fragment currently being displayed is a bit hacky as well, I used this <a href=""http://stackoverflow.com/a/7393477/467509"">dirty ""android:switcher:VIEWPAGER_ID:INDEX"" solution</a> but you can also keep track of all fragments of the ViewPager yourself as explained in the second solution <a href=""http://tamsler.blogspot.nl/2011/11/android-viewpager-and-fragments-part-ii.html"">on this page</a>.</p>

<p>So here's my code for a ViewPager with 4 ListViews with a detail view shown in the ViewPager when the user clicks a row, and with the back button working. I tried to include just the relevant code for the sake of brevity so leave a comment if you want the full app uploaded to GitHub.</p>

<p>HomeActivity.java</p>

<pre><code> public class HomeActivity extends SherlockFragmentActivity {
FragmentAdapter mAdapter;
ViewPager mPager;
TabPageIndicator mIndicator;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);
    mAdapter = new FragmentAdapter(getSupportFragmentManager());
    mPager = (ViewPager)findViewById(R.id.pager);
    mPager.setAdapter(mAdapter);
    mIndicator = (TabPageIndicator)findViewById(R.id.indicator);
    mIndicator.setViewPager(mPager);
}

// This the important bit to make sure the back button works when you're nesting fragments. Very hacky, all it takes is some Google engineer to change that ViewPager view tag to break this in a future Android update.
@Override
public void onBackPressed() {
    Fragment fragment = (Fragment) getSupportFragmentManager().findFragmentByTag(""android:switcher:"" + R.id.pager + "":""+mPager.getCurrentItem());
    if (fragment != null) // could be null if not instantiated yet
    {
        if (fragment.getView() != null) {
            // Pop the backstack on the ChildManager if there is any. If not, close this activity as normal.
            if (!fragment.getChildFragmentManager().popBackStackImmediate()) {
                finish();
            }
        }
    }
}

class FragmentAdapter extends FragmentPagerAdapter {        
    public FragmentAdapter(FragmentManager fm) {
        super(fm);
    }

    @Override
    public Fragment getItem(int position) {
        switch (position) {
        case 0:
            return ListProductsFragment.newInstance();
        case 1:
            return ListActiveSubstancesFragment.newInstance();
        case 2:
            return ListProductFunctionsFragment.newInstance();
        case 3:
            return ListCropsFragment.newInstance();
        default:
            return null;
        }
    }

    @Override
    public int getCount() {
        return 4;
    }

 }
}
</code></pre>

<p>ListProductsFragment.java</p>

<pre><code>public class ListProductsFragment extends SherlockFragment {
private ListView list;

public static ListProductsFragment newInstance() {
    ListProductsFragment f = new ListProductsFragment();
    return f;
}

@Override
public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
    View V = inflater.inflate(R.layout.list, container, false);
    list = (ListView)V.findViewById(android.R.id.list);
    list.setOnItemClickListener(new OnItemClickListener() {
        public void onItemClick(AdapterView&lt;?&gt; parent, View view,
            int position, long id) {
          // This is important bit
          Fragment productDetailFragment = FragmentProductDetail.newInstance();
          FragmentTransaction transaction = getChildFragmentManager().beginTransaction();
          transaction.addToBackStack(null);
          transaction.replace(R.id.products_list_linear, productDetailFragment).commit();
        }
      });       
    return V;
}
}
</code></pre>
"
"2139134","13943051","2","<p>Another way to do this is to use the <code>Application</code> object (android.app.Application). You define this in you <code>AndroidManifest.xml</code> file as:</p>

<pre><code>&lt;application
    android:name="".MyApplication""
    ...
</code></pre>

<p>You can then call this from any activity and save the object to the <code>Application</code> class.</p>

<p>In the FirstActivity:</p>

<pre><code>MyObject myObject = new MyObject();
MyApplication app = (MyApplication) getApplication();
app.setMyObject(myObject);
</code></pre>

<p>In the SecondActivity, do :</p>

<pre><code>MyApplication app = (MyApplication) getApplication();
MyObject retrievedObject = app.getMyObject(myObject);
</code></pre>

<p>This is handy if you have objects that have application level scope i.e. they have to be used throughout the application. The <code>Parcelable</code> method is still better if you want explicit control over the object scope or if the scope is limited.</p>

<p>This avoid the use of <code>Intents</code> altogether, though. I don't know if they suits you. Another way I used this is to have <code>int</code> identifiers of objects send through intents and retrieve objects that I have in Maps in the <code>Application</code> object.</p>
"
"2403632","13974993","5","<p>Let me point some additional info to the solution of yuku, because I found it hard to get this working! How do I get the AlertDialog object from my AlertDialog.Builder? well, it's the result of my alert.show() execution:</p>

<pre><code>    final AlertDialog.Builder alert = new AlertDialog.Builder(getActivity());

    final EditText input = new EditText(getActivity());

    alert.setView(input);

    // do what you need, like setting positive and negative buttons...

    final AlertDialog dialog = alert.show();

    input.setOnFocusChangeListener( new OnFocusChangeListener() {

       @Override
       public void onFocusChange(View v, boolean hasFocus) {
          if(hasFocus) {
             dialog.getWindow().setSoftInputMode(     WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);
  }
</code></pre>

<p>}
});</p>
"
"3035692","13984237","-1","<pre><code> // get image path from gallery

    protected void onActivityResult(int requestCode, int resultcode, Intent intent)
   {
  super.onActivityResult(requestCode, resultcode, intent);

  if (requestCode == 1)
  {
      if (intent != null &amp;&amp; resultcode == RESULT_OK)
      {             

            Uri selectedImage = intent.getData();

            String[] filePathColumn = {MediaStore.Images.Media.DATA};
            Cursor cursor = getContentResolver().query(selectedImage, filePathColumn, null, null, null);
            cursor.moveToFirst();
            int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
            filePath = cursor.getString(columnIndex);

            //display image using BitmapFactory

            cursor.close(); bmp = BitmapFactory.decodeFile(filepath); 
            iv.setBackgroundResource(0);
            iv.setImageBitmap(bmp);
    }
}
</code></pre>
"
"2591036","13988865","17","<p>Create a theme as below.</p>

<pre><code> &lt;!-- Variation on the Light theme that turns off the title --&gt;
&lt;style name=""MyTheme"" parent=""android:style/Theme.Black""&gt;
    &lt;item name=""android:windowNoTitle""&gt;true&lt;/item&gt;
&lt;/style&gt;
</code></pre>
"
"2322234","14001241","4","<p>There are problems with all the above approaches.  At Google i/o Reto Meier released a robust answer to how to approach this which should meet most developers needs to track users across installations.  </p>

<p>This approach will give you an anonymous, secure user ID which will be persistent for the user across different devices (including tablets, based on primary Google account) and across installs on the same device.  The basic approach is to generate a random user ID and to store this in the apps shared preferences.  You then use Google's backup agent to store the shared preferences linked to the Google account in the cloud.</p>

<p>Lets go through the full approach.  First we need to create a backup for our SharedPreferences using the Android Backup Service.  Start by registering your app via this link: <a href=""http://developer.android.com/google/backup/signup.html"" rel=""nofollow"">http://developer.android.com/google/backup/signup.html</a></p>

<p>Google will give you a backup service key which you need to add to the manifest.  You also need to tell the application to use the BackupAgent as follows:</p>

<pre><code>&lt;application android:label=""MyApplication""
         android:backupAgent=""MyBackupAgent""&gt;
    ...
    &lt;meta-data android:name=""com.google.android.backup.api_key""
        android:value=""your_backup_service_key"" /&gt;
&lt;/application&gt;
</code></pre>

<p>Then you need to create the backup agent and tell it to use the helper agent for sharedpreferences:</p>

<pre><code>public class MyBackupAgent extends BackupAgentHelper {
    // The name of the SharedPreferences file
    static final String PREFS = ""user_preferences"";

    // A key to uniquely identify the set of backup data
    static final String PREFS_BACKUP_KEY = ""prefs"";

    // Allocate a helper and add it to the backup agent
    @Override
    public void onCreate() {
        SharedPreferencesBackupHelper helper = new SharedPreferencesBackupHelper(this,          PREFS);
        addHelper(PREFS_BACKUP_KEY, helper);
    }
}
</code></pre>

<p>To complete the backup you need to create an instance of BackupManager in your main Activity:</p>

<pre><code>BackupManager backupManager = new BackupManager(context);
</code></pre>

<p>Finally create a user ID, if it doesn't already exist, and store it in the SharedPreferences:</p>

<pre><code>  public static String getUserID(Context context) {
            private static String uniqueID = null;
        private static final String PREF_UNIQUE_ID = ""PREF_UNIQUE_ID"";
    if (uniqueID == null) {
        SharedPreferences sharedPrefs = context.getSharedPreferences(
                MyBackupAgent.PREFS, Context.MODE_PRIVATE);
        uniqueID = sharedPrefs.getString(PREF_UNIQUE_ID, null);
        if (uniqueID == null) {
            uniqueID = UUID.randomUUID().toString();
            Editor editor = sharedPrefs.edit();
            editor.putString(PREF_UNIQUE_ID, uniqueID);
            editor.commit();

            //backup the changes
            BackupManager mBackupManager = new BackupManager(context);
            mBackupManager.dataChanged();
        }
    }

    return uniqueID;
}
</code></pre>

<p>This User_ID will now be persistent across installations, even if the user switches devices.</p>

<p>For more information on this approach see Reto's talk here <a href=""http://www.google.com/events/io/2011/sessions/android-protips-advanced-topics-for-expert-android-app-developers.html"" rel=""nofollow"">http://www.google.com/events/io/2011/sessions/android-protips-advanced-topics-for-expert-android-app-developers.html</a></p>

<p>And for full details of how to implement the backup agent see the developer site here: <a href=""http://developer.android.com/guide/topics/data/backup.html"" rel=""nofollow"">http://developer.android.com/guide/topics/data/backup.html</a> 
I particularly recommend the section at the bottom on testing as the backup does not happen instantaneously and so to test you have to force the backup. </p>
"
"2695746","14027682","2","<pre><code>private static boolean isThisASystemPackage(Context context, PackageInfo  packageInfo ) {
        try {
            PackageInfo sys = context.getPackageManager().getPackageInfo(""android"", PackageManager.GET_SIGNATURES);
            return (packageInfo != null &amp;&amp; packageInfo.signatures != null &amp;&amp;
                    sys.signatures[0].equals(packageInfo.signatures[0]));
        } catch (NameNotFoundException e) {
            return false;
        }
    }
</code></pre>
"
"2591036","14055176","10","<p>Just use <code>getActionBar().hide();</code> in your main activity <code>onCreate()</code> method.</p>
"
"3226495","14104548","0","<p>Add following lines after <code>finish();</code> in <code>onDestroy()</code>:</p>

<pre><code>android.os.Process.killProcess(android.os.Process.myPid());
super.onDestroy();
</code></pre>
"
"2591036","14115809","127","<p>I don't like the <code>this.requestWindowFeature(Window.FEATURE_NO_TITLE);</code> because the title bar appears briefly, then disappears. </p>

<p>I also don't like the <code>android:theme=""@android:style/Theme.NoTitleBar""</code> because I lost all of the 3.0+ Holo changes that the users of the new devices have gotten used to.  So I came across this solution.</p>

<p>In your <strong>res/values</strong> folder make a file called <strong>styles.xml</strong> (If it doesn't already exist).  In that file place the following code:</p>

<pre><code>&lt;resources xmlns:android=""http://schemas.android.com/apk/res/android""&gt;
    &lt;style name=""Theme.Default"" parent=""@android:style/Theme""&gt;&lt;/style&gt;
    &lt;style name=""Theme.NoTitle"" parent=""@android:style/Theme.NoTitleBar""&gt;&lt;/style&gt;
    &lt;style name=""Theme.FullScreen"" parent=""@android:style/Theme.NoTitleBar.Fullscreen""&gt;&lt;/style&gt;
&lt;/resources&gt;
</code></pre>

<p>Next create a <strong>res/values-v11</strong> with another <strong>styles.xml</strong> file (Once again this may already exist). In that file place the following code:</p>

<pre><code>&lt;resources xmlns:android=""http://schemas.android.com/apk/res/android""&gt;
    &lt;style name=""Theme.Default"" parent=""@android:style/Theme.Holo""&gt;&lt;/style&gt;
    &lt;style name=""Theme.NoTitle"" parent=""@android:style/Theme.Holo.NoActionBar""&gt;&lt;/style&gt;
    &lt;style name=""Theme.FullScreen"" parent=""@android:style/Theme.Holo.NoActionBar.Fullscreen""&gt;&lt;/style&gt;
&lt;/resources&gt;
</code></pre>

<p>And if you are targeting 4.0+, create a <strong>res/values-v14</strong> folder with yet another <strong>styles.xml</strong> file (Yes it may already be there).  In that file place the following code:</p>

<pre><code>&lt;resources xmlns:android=""http://schemas.android.com/apk/res/android""&gt;
    &lt;style name=""Theme.Default"" parent=""@android:style/Theme.Holo.Light""&gt;&lt;/style&gt;
    &lt;style name=""Theme.NoTitle"" parent=""@android:style/Theme.Holo.Light.NoActionBar""&gt;&lt;/style&gt;
    &lt;style name=""Theme.FullScreen"" parent=""@android:style/Theme.Holo.Light.NoActionBar.Fullscreen""&gt;&lt;/style&gt;
&lt;/resources&gt;
</code></pre>

<p>Finally, with all of these files created, open your <strong>AndroidManifiest.xml</strong> file you can add the code:</p>

<pre><code>android:theme=""@style/Theme.NoTitle""
</code></pre>

<p>to the activity tag of the activity you want no title for or the application tag if you want it to apply to the entire application.</p>

<p>Now your users will get the themes associated with their device version with the screen layout you desire.</p>

<p>P.S.  Changing the value to <code>android:theme=""@style/Theme.FullScreen""</code> will have the same effect, but also remove Notification bar.</p>
"
"8500283","14167949","180","<p>Setting <code>android:windowActionBar=""false""</code> truly disables the ActionBar but then, as you say, <code>getActionBar();</code> returns null.
This is solved by:</p>

<pre><code>public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    getWindow().requestFeature(Window.FEATURE_ACTION_BAR);
    getActionBar().hide();

    setContentView(R.layout.splash); // be sure you call this AFTER requestFeature
</code></pre>

<p>This creates the ActionBar and immediately hides it before it had the chance to be displayed.</p>

<p>But now there is another problem. After putting <code>windowActionBar=""false""</code> in the theme, the Activity draws its normal Window Title instead of an ActionBar.<br>
If we try to avoid this by using some of the <code>*.NoTitleBar</code> stock themes or we try to put <code>&lt;item name=""android:windowNoTitle""&gt;true&lt;/item&gt;</code> in our own theme, it won't work.<br>
The reason is that the ActionBar <em>depends</em> on the Window Title to display itself - that is the ActionBar is a transformed Window Title.<br>
So the trick which can help us out is to add one more thing to our Activity theme xml:</p>

<pre><code>&lt;item name=""android:windowActionBar""&gt;false&lt;/item&gt;
&lt;item name=""android:windowTitleSize""&gt;0dp&lt;/item&gt;
</code></pre>

<p>This will make the Window Title with zero height, thus practically invisible .</p>

<p>In your case, after you are done with displaying the splash screen you can simply call </p>

<pre><code>setContentView(R.layout.main);
getActionBar().show();
</code></pre>

<p>and you are done. The Activity will start with no ActionBar flickering, nor Window Title showing.</p>

<p><strong>ADDON:</strong>
If you show and hide the ActionBar multiple times maybe you have noticed that the <em>first</em> showing is <em>not</em> animated. From then on showing and hiding are animated. If you want to have animation on the first showing too you can use this:</p>

<pre><code>protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    requestWindowFeature(Window.FEATURE_ACTION_BAR);

    // delaying the hiding of the ActionBar
    Handler h = new Handler();
    h.post(new Runnable() {     
        @Override
        public void run() {
            getActionBar().hide();
        }
    });
</code></pre>

<p>The same thing can be achieved with:</p>

<pre><code>protected void onPostResume() {
    super.onPostResume();
    getActionBar().hide();
</code></pre>

<p>but it may need some extra logic to check if this is the first showing of the Activity.</p>

<p>The idea is to delay a little the hiding of the ActionBar. In a way we let the ActionBar be shown, but then hide it immediately. Thus we go beyond the first non-animated showing and next showing will be considered second, thus it will be animated.</p>

<p>As you may have guessed there is a chance that the ActionBar <em>could</em> be seen before it has been hidden by the delayed operation. This is actually the case. Most of the time nothing is seen but yet, once in a while, you can see the ActionBar flicker for a split second.</p>

<p>In any case this is not a pretty solution, so I welcome any suggestions.</p>

<p><strong>Addition</strong> for v7 support actionbar user, the code will be:</p>

<pre><code>getWindow().requestFeature(Window.FEATURE_ACTION_BAR);
getSupportActionBar().hide();
</code></pre>
"
"4894885","14183719","0","<p>If you want to get all of the files that have specific extensions in a certain directory:</p>

<pre><code>File[] files = (new File(""/sdcard/yourDirectory/"").listFiles(new CustomFilter());

....


class CustomFilter implements FileFilter
    {
//Add the file extensions you want to look for here:
        private String[]    extension   =
                                        { ""text"", ""jpg"", ""jpeg"", ""mpeg"" };

        @Override
        public boolean accept(File pathname)
        {
            String name = pathname.getName().toLowerCase();

            for (String anExt : extension)
            {

                if (name.endsWith(anExt))
                {
// A file has been detected with that extension
                    return true;

                }
            }
            return false;
        }

    }
</code></pre>
"
"6290531","14203640","3","<p>You can use length() from EditText.</p>

<pre><code>public boolean isEditTextEmpty(EditText mInput){
   if(mInput.length() == 0)
      return true;
   else
      return false;
}
</code></pre>
"
"2201917","14231438","8","<p>If you want to show user a dialoge with all browser list, so he can choose preferred, here is sample code: </p>

<pre><code>private static final String HTTPS = ""https://"";
private static final String HTTP = ""http://"";

public static void openBrowser(final Context context, String url) {

     if (!url.startsWith(HTTP) &amp;&amp; !url.startsWith(HTTPS)) {
            url = HTTP + url;
     }

     Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
     context.startActivity(Intent.createChooser(intent, ""Chose browser""));

}
</code></pre>
"
"3916330","14234266","0","<p>You have to use HTML in your webView in this case. I solved this using following code</p>

<pre><code>webView.loadDataWithBaseURL(null,
                ""&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body style = \""text-align:center\""&gt;&lt;img src= ""
                        + \""http://www.koenvangorp.be/photos/2005_09_16-moon_2000.jpg\""
                        + "" alt=\""pageNo\"" width=\""100%\""&gt;&lt;/body&gt;&lt;/html&gt;"",
                ""text/html"", ""UTF-8"", null);
</code></pre>
"
"5832368","14284583","2","<p>For those who want to refer to Google's code of deciding which devices will use a Tablet UI can refer to below:</p>

<pre><code>  // SystemUI (status bar) layout policy
        int shortSizeDp = shortSize
                * DisplayMetrics.DENSITY_DEFAULT
                / DisplayMetrics.DENSITY_DEVICE;

        if (shortSizeDp &lt; 600) {
            // 0-599dp: ""phone"" UI with a separate status &amp; navigation bar
            mHasSystemNavBar = false;
            mNavigationBarCanMove = true;
        } else if (shortSizeDp &lt; 720) {
            // 600-719dp: ""phone"" UI with modifications for larger screens
            mHasSystemNavBar = false;
            mNavigationBarCanMove = false;
        } else {
            // 720dp: ""tablet"" UI with a single combined status &amp; navigation bar
            mHasSystemNavBar = true;
            mNavigationBarCanMove = false;
        }
        }
</code></pre>
"
"3495890","14307398","0","<p>This whole problem would just go away if LinearLayout had a setAdapter method, because then when you told someone to use it instead the alternative would be trivial.</p>

<p>If you actually want a scrolling ListView inside another scrolling view this won't help, but otherwise this will at least give you an idea. </p>

<p>You need to create a custom adapter to combine all the content you want to scroll over and set the ListView's adapter to that.</p>

<p>I don't have sample code handy, but if you want something like.</p>

<pre><code>&lt;ListView/&gt;

(other content)

&lt;ListView/&gt;
</code></pre>

<p>Then you need to create an adapter that represents all of that content.  The ListView/Adapters are smart enough to handle different types as well, but you need to write the adapter yourself.</p>

<p>The android UI API just isn't as mature as pretty much everything else out there, so it doesn't have the same niceties as other platforms.  Also, when doing something on android you need to be in an android (unix) mindset where you expect that to do anything you're probably going to have to assemble functionality of smaller parts and write a bunch of your own code to get it to work.</p>
"
"5832368","14370196","62","<p>As it has been mentioned before, you do not want to check whether the device is a tablet or a phone but you want to know about the features of the device,</p>

<p>Most of the time, the difference between a tablet and a phone is the screen size which is why you want to use different layout files. These files are stored in the <code>res/layout-&lt;qualifiers&gt;</code> directories. You can create an XML file in the directoy <code>res/values-&lt;same qualifiers&gt;</code> for each of your layouts and put an int/bool/string resource into it to distinguish between the layouts you use.</p>

<h3>Example:</h3>

<p>File <code>res/values/screen.xml</code> (assuming <code>res/layout/</code> contains your layout files for handsets)</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;resources&gt;
  &lt;string name=""screen_type""&gt;phone&lt;/string&gt;
&lt;/resources&gt;
</code></pre>

<p><br/>
File <code>res/values-sw600dp/screen.xml</code> (assuming <code>res/layout-sw600dp/</code> contains your layout files for small tablets like the Nexus 7) </p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;resources&gt;
  &lt;string name=""screen_type""&gt;7-inch-tablet&lt;/string&gt;
&lt;/resources&gt;
</code></pre>

<p><br/>
File <code>res/values-sw720dp/screen.xml</code> (assuming <code>res/layout-sw720dp/</code> contains your layout files for large tablets like the Nexus 10): </p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;resources&gt;
  &lt;string name=""screen_type""&gt;10-inch-tablet&lt;/string&gt;
&lt;/resources&gt;
</code></pre>

<p><br/></p>

<p>Now the screen type is accessible via the <code>R.string.screen_type</code> constant.</p>
"
"2795833","14376004","0","<p>i think using getRotationv() doesn't help because 
<a href=""http://developer.android.com/reference/android/view/Display.html#getRotation%28%29"" rel=""nofollow"">http://developer.android.com/reference/android/view/Display.html#getRotation%28%29</a>
 getRotation() Returns the rotation of the screen from its ""natural"" orientation.</p>

<p>so unless you know the ""natural"" orientation, rotation is meaningless.</p>

<p>i found an easier way, </p>

<pre><code>  Display display = ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
  Point size = new Point();
  display.getSize(size);
  int width = size.x;
  int height = size.y;
  if(width&gt;height)
    // its landscape
</code></pre>

<p>please tell me if there is a problem with this someone?</p>
"
"8181828","14426803","11","<p>Here is yet another fix to the, IMHO, missing OnEndScroll event bug in the ScrollView.</p>

<p>Its inspired by <a href=""http://stackoverflow.com/users/289641/hambonious"">hambonious</a> answer.
Simply drop this class into your project (change package to match your own) and use the below xml</p>

<pre><code>package com.thecrag.components.ui;

import android.content.Context;
import android.util.AttributeSet;
import android.widget.ScrollView;

public class ResponsiveScrollView extends ScrollView {

    public interface OnEndScrollListener {
        public void onEndScroll();
    }

    private boolean mIsFling;
    private OnEndScrollListener mOnEndScrollListener;

    public ResponsiveScrollView(Context context) {
        this(context, null, 0);
    }

    public ResponsiveScrollView(Context context, AttributeSet attrs) {
        this(context, attrs, 0);
    }

    public ResponsiveScrollView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
    }

    @Override
    public void fling(int velocityY) {
        super.fling(velocityY);
        mIsFling = true;
    }

    @Override
    protected void onScrollChanged(int x, int y, int oldX, int oldY) {
        super.onScrollChanged(x, y, oldX, oldY);
        if (mIsFling) {
            if (Math.abs(y - oldY) &lt; 2 || y &gt;= getMeasuredHeight() || y == 0) {
                if (mOnEndScrollListener != null) {
                    mOnEndScrollListener.onEndScroll();
                }
                mIsFling = false;
            }
        }
    }

    public OnEndScrollListener getOnEndScrollListener() {
        return mOnEndScrollListener;
    }

    public void setOnEndScrollListener(OnEndScrollListener mOnEndScrollListener) {
        this.mOnEndScrollListener = mOnEndScrollListener;
    }

}
</code></pre>

<p>again changing the package name to match your project</p>

<pre><code>&lt;com.thecrag.components.ui.ResponsiveScrollView
        android:id=""@+id/welcome_scroller""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:layout_above=""@+id/welcome_scroll_command_help_container""
        android:layout_alignParentLeft=""true""
        android:layout_alignParentRight=""true""
        android:layout_below=""@+id/welcome_header_text_thecrag""
        android:layout_margin=""6dp""&gt;
    ....
&lt;/com.thecrag.components.ui.ResponsiveScrollView&gt;
</code></pre>
"
"2459916","14436540","4","<p>why not do clipping in draw()?</p>

<p>Here is my solution:</p>

<ul>
<li>extend RelativeLayout with clipping</li>
<li>put ImageView (or other views) into the layout:</li>
</ul>

<p>code:</p>

<pre><code>public class RoundRelativeLayout extends RelativeLayout {

private final float radius;

public RoundRelativeLayout(Context context, AttributeSet attrs) {
    super(context, attrs);

    TypedArray attrArray = context.obtainStyledAttributes(attrs,
            R.styleable.RoundRelativeLayout);
    radius = attrArray.getDimension(
            R.styleable.RoundRelativeLayout_radius, 0);
}

private boolean isPathValid;
private final Path path = new Path();

private Path getRoundRectPath() {
    if (isPathValid) {
        return path;
    }

    path.reset();

    int width = getWidth();
    int height = getHeight();
    RectF bounds = new RectF(0, 0, width, height);

    path.addRoundRect(bounds, radius, radius, Direction.CCW);
    isPathValid = true;
    return path;
}

@Override
protected void dispatchDraw(Canvas canvas) {
    canvas.clipPath(getRoundRectPath());
    super.dispatchDraw(canvas);
}

@Override
public void draw(Canvas canvas) {
    canvas.clipPath(getRoundRectPath());
    super.draw(canvas);
}

@Override
protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {

    int oldWidth = getMeasuredWidth();
    int oldHeight = getMeasuredHeight();
    super.onMeasure(widthMeasureSpec, heightMeasureSpec);

    int newWidth = getMeasuredWidth();
    int newHeight = getMeasuredHeight();
    if (newWidth != oldWidth || newHeight != oldHeight) {
        isPathValid = false;
    }
}
}
</code></pre>
"
"6343166","14443056","102","<p>I solve this problem using a new Thread</p>

<pre><code>Thread thread = new Thread(new Runnable(){
    @Override
    public void run() {
        try {
            //Your code goes here
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
});

thread.start(); 
</code></pre>
"
"2217753","14477694","2","<p>Simple code to change all in layout of item (custom listview extends baseadapter):</p>

<pre><code>lv.setOnItemClickListener(new OnItemClickListener() {

        @Override
        public void onItemClick(AdapterView&lt;?&gt; arg0, View arg1, int arg2,
                long arg3) {

            RelativeLayout layout=(RelativeLayout) arg1.findViewById(R.id.rel_cell_left);
            layout.setBackgroundColor(Color.YELLOW);



        }
    });
</code></pre>
"
"4617898","14483533","19","<p>You can do this with a single image using something like this:</p>

<pre><code>     //get the image view
    ImageView imageView = (ImageView)findViewById(R.id.ImageView);

    //set the ontouch listener
    imageView.setOnTouchListener(new OnTouchListener() {

        @Override
        public boolean onTouch(View v, MotionEvent event) {

            switch (event.getAction()) {
                case MotionEvent.ACTION_DOWN: {
                    ImageView view = (ImageView) v;
                    //overlay is black with transparency of 0x77 (119)
                    view.getDrawable().setColorFilter(0x77000000,PorterDuff.Mode.SRC_ATOP);
                    view.invalidate();
                    break;
                }
                case MotionEvent.ACTION_UP:
                case MotionEvent.ACTION_CANCEL: {
                    ImageView view = (ImageView) v;
                    //clear the overlay
                    view.getDrawable().clearColorFilter();
                    view.invalidate();
                    break;
                }
            }

            return true;
        }
    });
</code></pre>

<p>I will probably be making this into a subclass of ImageView for easier re-usability, but this should allow you to apply a ""selected"" look to an imageview.</p>
"
"4946295","14500711","1","<p>Here is my solution. I think it is simpler. It only expands the view but can easy be extended.</p>

<pre><code>public class WidthExpandAnimation extends Animation
{
    int _targetWidth;
    View _view;

    public WidthExpandAnimation(View view)
    {
        _view = view;
    }

    @Override
    protected void applyTransformation(float interpolatedTime, Transformation t)
    {
        if (interpolatedTime &lt; 1.f)
        {
            int newWidth = (int) (_targetWidth * interpolatedTime);

            _view.layout(_view.getLeft(), _view.getTop(),
                    _view.getLeft() + newWidth, _view.getBottom());
        }
        else
            _view.requestLayout();
    }

    @Override
    public void initialize(int width, int height, int parentWidth, int parentHeight)
    {
        super.initialize(width, height, parentWidth, parentHeight);

        _targetWidth = width;
    }

    @Override
    public boolean willChangeBounds() {
        return true;
    }
}
</code></pre>
"
"2973270","14558090","3","<p>I think there can be a handier way to do it. The following class will set a custom type face for all your the components of your application (with a setting per class).</p>

<pre><code>/**
 * Base Activity of our app hierarchy.
 * @author SNI
 */
public class BaseActivity extends Activity {

    private static final String FONT_LOG_CAT_TAG = ""FONT"";
    private static final boolean ENABLE_FONT_LOGGING = false;

    private Typeface helloTypeface;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        helloTypeface = Typeface.createFromAsset(getAssets(), ""fonts/&lt;your type face in assets/fonts folder&gt;.ttf"");
    }

    @Override
    public View onCreateView(String name, Context context, AttributeSet attrs) {
        View view = super.onCreateView(name, context, attrs);
        return setCustomTypeFaceIfNeeded(name, attrs, view);
    }

    @Override
    public View onCreateView(View parent, String name, Context context, AttributeSet attrs) {
        View view = super.onCreateView(parent, name, context, attrs);
        return setCustomTypeFaceIfNeeded(name, attrs, view);
    }

    protected View setCustomTypeFaceIfNeeded(String name, AttributeSet attrs, View view) {
        View result = null;
        if (""TextView"".equals(name)) {
            result = new TextView(this, attrs);
            ((TextView) result).setTypeface(helloTypeface);
        }

        if (""EditText"".equals(name)) {
            result = new EditText(this, attrs);
            ((EditText) result).setTypeface(helloTypeface);
        }

        if (""Button"".equals(name)) {
            result = new Button(this, attrs);
            ((Button) result).setTypeface(helloTypeface);
        }

        if (result == null) {
            return view;
        } else {
            if (ENABLE_FONT_LOGGING) {
                Log.v(FONT_LOG_CAT_TAG, ""A type face was set on "" + result.getId());
            }
            return result;
        }
    }

}
</code></pre>
"
"2322234","14629300","0","<p>Another way is to use /sys/class/android_usb/android0/iSerial in an App with no permissions whatsoever.</p>

<pre><code>user@creep:~$ adb shell ls -l /sys/class/android_usb/android0/iSerial
-rw-r--r-- root     root         4096 2013-01-10 21:08 iSerial
user@creep:~$ adb shell cat /sys/class/android_usb/android0/iSerial
0A3CXXXXXXXXXX5
</code></pre>

<p>To do this in java one would just use a FileInputStream to open the iSerial file and read out the characters. Just be sure you wrap it in an exception handler because not all devices have this file. </p>

<p>At least the following devices are known to have this file world-readable:</p>

<ul>
<li>Galaxy Nexus</li>
<li>Nexus S</li>
<li>Motorola Xoom 3g</li>
<li>Toshiba AT300</li>
<li>HTC One V</li>
<li>Mini MK802</li>
<li>Samsung Galaxy S II</li>
</ul>

<p>You can also see my blog post here: <a href=""http://insitusec.blogspot.com/2013/01/leaking-android-hardware-serial-number.html"" rel=""nofollow"">http://insitusec.blogspot.com/2013/01/leaking-android-hardware-serial-number.html</a> where I discuss what other files are available for info.</p>
"
"3916330","14638784","2","<p>The getWidth method of the Display object is deprecated. Override onSizeChanged to get the size of the WebView when it becomes available.</p>

<pre><code>WebView webView = new WebView(context) {

    @Override
    protected void onSizeChanged(int w, int h, int ow, int oh) {

        // if width is zero, this method will be called again
        if (w != 0) {

            Double scale = Double.valueOf(w) / Double.valueOf(WEB_PAGE_WIDTH);

            scale *= 100d;

            setInitialScale(scale.intValue());
        }

        super.onSizeChanged(w, h, ow, oh);
    }
};
</code></pre>
"
"2644134","14661176","25","<p>use below code before setcontentview :-</p>

<pre><code>dialog.requestWindowFeature(Window.FEATURE_NO_TITLE); 
dialog.setContentView(R.layout.custom_dialog);
</code></pre>

<h1>Note: you must have the two lines of code, in that order.</h1>

<p><strong>Note</strong> the line requestWindowFeature must be <strong>BEFORE</strong> the setContentView line.</p>
"
"3624280","14679351","5","<p>Simple solution of how to store login value in by <code>SharedPreferences</code>.</p>

<p>You can extend the <code>MainActivity</code> class or other class where you will store the ""value of something you want to keep"". Put this into writer and reader classes:</p>

<pre><code>public static final String GAME_PREFERENCES_LOGIN = ""Login"";
</code></pre>

<p>Here <code>InputClass</code> is input and <code>OutputClass</code> is output class, respectively.</p>

<pre><code>// This is a storage, put this in a class which you can extend or in both classes:
//(input and output)
public static final String GAME_PREFERENCES_LOGIN = ""Login"";

// String from the text input (can be from anywhere)
String login = inputLogin.getText().toString();

// then to add a value in InputCalss ""SAVE"",
SharedPreferences example = getSharedPreferences(GAME_PREFERENCES_LOGIN, 0);
Editor editor = example.edit();
editor.putString(""value"", login);
editor.commit();
</code></pre>

<p>Now you can use it somewhere else, like other class. The following is <code>OutputClass</code>.</p>

<pre><code>SharedPreferences example = getSharedPreferences(GAME_PREFERENCES_LOGIN, 0);
String userString = example.getString(""value"", ""defValue"");

// the following will print it out in console
Logger.getLogger(""Name of a OutputClass"".class.getName()).log(Level.INFO, userString);
</code></pre>
"
"8500283","14739959","31","<p>If you are using ActionBarSherlock, then use Theme.Sherlock.NoActionBar Theme in your Activity </p>

<pre><code>&lt;activity 
    android:name="".SplashScreenActivity""
    android:theme=""@style/Theme.Sherlock.NoActionBar""&gt;
    &lt;intent-filter&gt;
        &lt;action android:name=""android.intent.action.MAIN"" /&gt;
        &lt;category android:name=""android.intent.category.LAUNCHER"" /&gt;
    &lt;/intent-filter&gt;
&lt;/activity&gt;
</code></pre>
"
"6290531","14748540","3","<p>I usually do what <a href=""http://stackoverflow.com/a/6290970/2046119"">SBJ</a> proposes, but the other way around. I simply find it easier to understand my code by checking for positive results instead of double negatives. 
You might be asking for how to check for empty EdiTexts, but what you really want to know is if it has any content and not that it is not empty. </p>

<p>Like so:</p>

<pre><code>private boolean hasContent(EditText et) {
    // Always assume false until proven otherwise
    boolean bHasContent = false; 

    if (et.getText().toString().trim().length() &gt; 0) {
        // Got content
        bHasContent = true;
    }
    return bHasContent;
}
</code></pre>

<p>As <a href=""http://stackoverflow.com/a/6290970/2046119"">SBJ</a> I prefer to return ""has no content"" (or <code>false</code>) as default to avoid exceptions because I borked my content-check. That way you will be absolutely certain that a <code>true</code> has been ""approved"" by your checks.</p>

<p>I also think the <code>if</code> calling it looks a bit cleaner as well:</p>

<pre><code>if (hasContent(myEditText)) {
// Act upon content
} else {
// Got no content!
}
</code></pre>

<p>It is very much dependent on preference, but i find this easier to read. :)</p>
"
"4617898","14810791","0","<p>I have a more beauty solution if you user background images :)</p>

<pre><code>public static void blackButton(View button){
    button.setOnTouchListener(new OnTouchListener() {

        public boolean onTouch(View v, MotionEvent event) {
            switch (event.getAction()) {
                case MotionEvent.ACTION_DOWN: {
                    v.getBackground().setColorFilter(0xf0f47521,PorterDuff.Mode.SRC_ATOP);
                    v.invalidate();
                    break;
                }
                case MotionEvent.ACTION_UP: {
                    v.getBackground().clearColorFilter();
                    v.invalidate();
                    break;
                }
            }
            return false;
        }
    });
}
</code></pre>
"
"2795833","14847639","0","<p>Chech screen orientation in runtime.</p>

<pre><code>@Override
public void onConfigurationChanged(Configuration newConfig) {
    super.onConfigurationChanged(newConfig);

    // Checks the orientation of the screen
    if (newConfig.orientation == Configuration.ORIENTATION_LANDSCAPE) {
        Toast.makeText(this, ""landscape"", Toast.LENGTH_SHORT).show();

    } else if (newConfig.orientation == Configuration.ORIENTATION_PORTRAIT){
        Toast.makeText(this, ""portrait"", Toast.LENGTH_SHORT).show();        
    }
}
</code></pre>
"
"3145089","14893957","3","<p>This is the code that provides user current location</p>

<p><strong>create Maps Activty:</strong></p>

<pre><code>public class Maps extends MapActivity {

    public static final String TAG = ""MapActivity"";
    private MapView mapView;
    private LocationManager locationManager;
    Geocoder geocoder;
    Location location;
    LocationListener locationListener;
    CountDownTimer locationtimer;
    MapController mapController;
    MapOverlay mapOverlay = new MapOverlay();

    @Override
    protected void onCreate(Bundle icicle) {
        super.onCreate(icicle);
        setContentView(R.layout.main);
        initComponents();
        mapView.setBuiltInZoomControls(true);
        mapView.setSatellite(true);
        mapView.setTraffic(true);
        mapView.setStreetView(true);
        mapController = mapView.getController();
        mapController.setZoom(16);
        locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);
        if (locationManager == null) {
            Toast.makeText(Maps.this, ""Location Manager Not Available"",
                Toast.LENGTH_SHORT).show();
            return;
        }
        location = locationManager
                .getLastKnownLocation(LocationManager.GPS_PROVIDER);
        if (location == null)
            location = locationManager
                    .getLastKnownLocation(LocationManager.NETWORK_PROVIDER);
        if (location != null) {
            double lat = location.getLatitude();
            double lng = location.getLongitude();
            Toast.makeText(Maps.this, ""Location Are"" + lat + "":"" + lng,
                Toast.LENGTH_SHORT).show();
            GeoPoint point = new GeoPoint((int) (lat * 1E6), (int) (lng * 1E6));
            mapController.animateTo(point, new Message());
            mapOverlay.setPointToDraw(point);
            List&lt;Overlay&gt; listOfOverlays = mapView.getOverlays();
            listOfOverlays.clear();
            listOfOverlays.add(mapOverlay);
        }
        locationListener = new LocationListener() {

            public void onStatusChanged(String arg0, int arg1, Bundle arg2) {}

            public void onProviderEnabled(String arg0) {}

            public void onProviderDisabled(String arg0) {}

            public void onLocationChanged(Location l) {
                location = l;
                locationManager.removeUpdates(this);
                if (l.getLatitude() == 0 || l.getLongitude() == 0) {
                } else {
                    double lat = l.getLatitude();
                    double lng = l.getLongitude();
                    Toast.makeText(Maps.this, ""Location Are"" + lat + "":"" + lng,
                        Toast.LENGTH_SHORT).show();
                }
            }
        };
        if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER))
            locationManager.requestLocationUpdates(
                LocationManager.GPS_PROVIDER, 1000, 10f, locationListener);
        locationManager.requestLocationUpdates(
            LocationManager.NETWORK_PROVIDER, 1000, 10f, locationListener);
        locationtimer = new CountDownTimer(30000, 5000) {

            @Override
            public void onTick(long millisUntilFinished) {
                if (location != null) locationtimer.cancel();
            }

            @Override
            public void onFinish() {
                if (location == null) {
                }
            }
        };
        locationtimer.start();
    }

    public MapView getMapView() {
        return this.mapView;
    }

    private void initComponents() {
        mapView = (MapView) findViewById(R.id.map_container);
        ImageView ivhome = (ImageView) this.findViewById(R.id.imageView_home);
        ivhome.setOnClickListener(new OnClickListener() {

            public void onClick(View arg0) {
                // TODO Auto-generated method stub
                Intent intent = new Intent(Maps.this, GridViewContainer.class);
                startActivity(intent);
                finish();
            }
        });
    }

    @Override
    protected boolean isRouteDisplayed() {
        return false;
    }

    class MapOverlay extends Overlay {

        private GeoPoint pointToDraw;

        public void setPointToDraw(GeoPoint point) {
            pointToDraw = point;
        }

        public GeoPoint getPointToDraw() {
            return pointToDraw;
        }

        @Override
        public boolean draw(Canvas canvas, MapView mapView, boolean shadow,
                long when) {
            super.draw(canvas, mapView, shadow);
            Point screenPts = new Point();
            mapView.getProjection().toPixels(pointToDraw, screenPts);
            Bitmap bmp = BitmapFactory.decodeResource(getResources(),
                R.drawable.select_map);
            canvas.drawBitmap(bmp, screenPts.x, screenPts.y - 24, null);
            return true;
        }
    }
}
</code></pre>

<p><strong>main.xml:</strong></p>

<pre><code>    &lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
    &lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
        android:layout_width=""match_parent""
        android:layout_height=""match_parent""
        android:background=""@android:color/black""
        android:orientation=""vertical"" &gt;

        &lt;com.google.android.maps.MapView
            android:id=""@+id/map_container""
            android:layout_width=""fill_parent""
            android:layout_height=""fill_parent""
            android:apiKey=""yor api key""
            android:clickable=""true""
            android:focusable=""true"" /&gt;

    &lt;/LinearLayout&gt;
</code></pre>

<p><strong>and define following permission in manifest:</strong></p>

<pre><code>&lt;uses-permission android:name=""android.permission.INTERNET""/&gt;
&lt;uses-permission android:name=""android.permission.ACCESS_COARSE_LOCATION""/&gt;
&lt;uses-permission android:name=""android.permission.ACCESS_FINE_LOCATION""/&gt;
</code></pre>
"
"3647993","14895112","2","<p>You can just read the path from sd card and do the following code...it'll Replace the existing photo after rotating it..</p>

<p>Not: Exif doesnt work on most of the devices, it gives the wrong data so it's good to hard code the rotating before saving to any degree you want to,You just have to change the angle value in postRotate to any you want to.</p>

<pre><code>    String photopath = tempphoto.getPath().toString();
    Bitmap bmp = BitmapFactory.decodeFile(photopath);

    Matrix matrix = new Matrix();
    matrix.postRotate(90);
    bmp = Bitmap.createBitmap(bmp, 0, 0, bmp.getWidth(), bmp.getHeight(), matrix, true);

    FileOutputStream fOut;
    try {
        fOut = new FileOutputStream(tempphoto);
        bmp.compress(Bitmap.CompressFormat.JPEG, 85, fOut);
        fOut.flush();
        fOut.close();

    } catch (FileNotFoundException e1) {
        // TODO Auto-generated catch block
        e1.printStackTrace();
    } catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }

}
</code></pre>
"
"2795833","14929272","9","<p>Another way of solving this problem is by not relying on the correct return value from the display but relying on the Android resources resolving.</p>

<p>Create the file <code>layouts.xml</code> in the folders <code>res/values-land</code> and <code>res/values-port</code> with the following content:</p>

<p><strong>res/values-land/layouts.xml:</strong></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;resources&gt;
    &lt;bool name=""is_landscape""&gt;true&lt;/bool&gt;
&lt;/resources&gt;
</code></pre>

<p><strong>res/values-port/layouts.xml:</strong></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;resources&gt;
    &lt;bool name=""is_landscape""&gt;false&lt;/bool&gt;
&lt;/resources&gt;
</code></pre>

<p>In your source code you can now access the current orientation as follows:</p>

<pre><code>context.getResources().getBoolean(R.bool.is_landscape)
</code></pre>
"
"3331527","14937046","3","<p>This may be useful for someone else looking at this question. I rewrote Justin's code to allow the method to receive the target size object required as well. This works very well when using Canvas. All credit should go to JUSTIN for his great initial code.</p>

<pre><code>    private Bitmap getBitmap(int path, Canvas canvas) {

        Resources resource = null;
        try {
            final int IMAGE_MAX_SIZE = 1200000; // 1.2MP
            resource = getResources();

            // Decode image size
            BitmapFactory.Options options = new BitmapFactory.Options();
            options.inJustDecodeBounds = true;
            BitmapFactory.decodeResource(resource, path, options);

            int scale = 1;
            while ((options.outWidth * options.outHeight) * (1 / Math.pow(scale, 2)) &gt; 
                  IMAGE_MAX_SIZE) {
               scale++;
            }
            Log.d(""TAG"", ""scale = "" + scale + "", orig-width: "" + options.outWidth + "", orig-height: "" + options.outHeight);

            Bitmap pic = null;
            if (scale &gt; 1) {
                scale--;
                // scale to max possible inSampleSize that still yields an image
                // larger than target
                options = new BitmapFactory.Options();
                options.inSampleSize = scale;
                pic = BitmapFactory.decodeResource(resource, path, options);

                // resize to desired dimensions
                int height = canvas.getHeight();
                int width = canvas.getWidth();
                Log.d(""TAG"", ""1th scale operation dimenions - width: "" + width + "", height: "" + height);

                double y = Math.sqrt(IMAGE_MAX_SIZE
                        / (((double) width) / height));
                double x = (y / height) * width;

                Bitmap scaledBitmap = Bitmap.createScaledBitmap(pic, (int) x, (int) y, true);
                pic.recycle();
                pic = scaledBitmap;

                System.gc();
            } else {
                pic = BitmapFactory.decodeResource(resource, path);
            }

            Log.d(""TAG"", ""bitmap size - width: "" +pic.getWidth() + "", height: "" + pic.getHeight());
            return pic;
        } catch (Exception e) {
            Log.e(""TAG"", e.getMessage(),e);
            return null;
        }
    }
</code></pre>

<p>Justin's code is VERY effective at reducing the overhead of working with large Bitmaps. </p>
"
"3624280","14999278","2","<p><code>editor.putString(""text"", mSaved.getText().toString());</code>
Here, <strong>mSaved</strong> can be any textview or edittext from where we can extract a string. you can simply specify a string. . Here text will be the key which hold the value obtained from the mSaved(TextView or Edittext).    </p>

<p><code>SharedPreferences prefs = this.getSharedPreferences(
      ""com.example.app"", Context.MODE_PRIVATE);</code>
Also there is no need to save the preference file using the package name i.e., ""com.example.app"". You can mention your own prefered name.  Hope this helps!!</p>
"
"2459916","15032283","65","<p>While the above answer works, Romain Guy (a core Android developer) shows <a href=""http://www.curious-creature.org/2012/12/11/android-recipe-1-image-with-rounded-corners/"" rel=""nofollow"">a better method</a> in his blog which uses less memory by using a shader not creating a copy of the bitmap. The general gist of the functionality is here:</p>

<pre><code>BitmapShader shader;
shader = new BitmapShader(bitmap, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP);

Paint paint = new Paint();
paint.setAntiAlias(true);
paint.setShader(shader);

RectF rect = new RectF(0.0f, 0.0f, width, height);

// rect contains the bounds of the shape
// radius is the radius in pixels of the rounded corners
// paint contains the shader that will texture the shape
canvas.drawRoundRect(rect, radius, radius, paint);
</code></pre>

<p>The advantages of this over other methods is that it:</p>

<ul>
<li><strong>does not create a separate copy of the bitmap,</strong> which uses a lot of memory with large images [vs most of the other answers here]</li>
<li>supports <strong>antialisasing</strong> [vs clipPath method]</li>
<li>supports <strong>alpha</strong> [vs xfermode+porterduff method]</li>
<li>supports <strong>hardware acceleration</strong> [vs clipPath method]</li>
<li>only <strong>draws once to the canvas</strong> [vs xfermode and clippath methods]</li>
</ul>

<p>I've created a <a href=""https://github.com/makeramen/RoundedImageView"" rel=""nofollow"">RoundedImageView</a> based off this code that wraps this logic into an ImageView and adds proper <code>ScaleType</code> support and an optional rounded border.</p>
"
"2795833","15089100","-1","<p>In case you are attempting to have your app behave differently depending on the orientation check out another question like this related to Android orientation that I answered <a href=""http://stackoverflow.com/questions/9566633/how-to-use-onconfigurationchanged-and-newconfig-orientation-configuration-o/15085272#15085272"">here</a>.</p>

<p>It utilises <a href=""http://vapor-api.com"" rel=""nofollow"">Vapor API</a>, a new jQuery style framework I recently released for Android which is designed to simplify app dev.</p>

<p>In the examples I show how you can listen out for global callbacks related to the orientation of a device, and have your app execute custom code depending on the current orientation of the user's device. For example:</p>

<pre><code>$.hook(""orientationLandscape"").hookIn(
     new $$hookee&lt;Activity&gt;(this){

         @Override
         public void call(String hookName, VaporBundle args){
             // landscape code here
         }

     });

$.hook(""orientationPortrait"").hookIn(
     new $$hookee&lt;Activity&gt;(this){

         @Override
         public void call(String hookName, VaporBundle args){
             // portrait code here
         }

     });
</code></pre>

<p>You can also combine things like hook listeners using <a href=""http://vapor-api.com/core/vaporx"" rel=""nofollow"">VaporX</a> too, which is basically jQuery style selectors for Android dev.</p>

<p>Hope it helps someone!</p>
"
"4617898","15104672","0","<p>Thanks for the help on this thread. However, you missed one thing...you need to handle the ACTION_CANCEL as well. If you don't then you might not properly restore the alpha value of the ImageView in the event that a parent view in the view hierarchy intercepts a touch event (think a ScrollView wrapping you ImageView).</p>

<p>Here is a complete class that is based off the above class but takes care of the ACTION_CANCEL as well. It uses an ImageViewCompat helper class to abstract the differences in the pre-post JellyBean API.</p>

<pre><code>public class ChangeAlphaOnPressedTouchListener implements OnTouchListener {

    private final float pressedAlpha;

    public ChangeAlphaOnPressedTouchListener(float pressedAlpha) {
        this.pressedAlpha = pressedAlpha;
    }

    @Override
    public boolean onTouch(View v, MotionEvent event) {
        ImageView iv = (ImageView) v;
        switch (event.getAction()) {
        case MotionEvent.ACTION_DOWN:
            ImageViewCompat.setAlpha(iv, pressedAlpha);
            break;

        case MotionEvent.ACTION_MOVE:
            if (isInsideViewBounds(v, event)) {
                ImageViewCompat.setAlpha(iv, pressedAlpha);
            } else {
                ImageViewCompat.setAlpha(iv, 1f);
            }
            break;
        case MotionEvent.ACTION_UP:
            ImageViewCompat.setAlpha(iv, 1f);
            break;
        case MotionEvent.ACTION_CANCEL:
            ImageViewCompat.setAlpha(iv, 1f);
        }
        return false;
    }

    private static boolean isInsideViewBounds(View v, MotionEvent event) {
        return event.getX() &gt; 0 &amp;&amp; event.getX() &lt; v.getWidth() &amp;&amp; event.getY() &gt; 0
                &amp;&amp; event.getY() &lt; v.getHeight();
    }
}
</code></pre>
"
"4165414","15206641","0","<p>I got this working with a slight variant on Fernando Camarago's solution.  In my onCreate method I attach a single onTouchListener to the root view but send the view rather than activity as an argument.</p>

<pre><code>        findViewById(android.R.id.content).setOnTouchListener(new OnTouchListener() {           
        public boolean onTouch(View v, MotionEvent event) {
            Utils.hideSoftKeyboard(v);
            return false;
        }
    });
</code></pre>

<p>In a separate Utils class is...</p>

<pre><code>    public static void hideSoftKeyboard(View v) {
    InputMethodManager imm = (InputMethodManager) v.getContext().getSystemService(Context.INPUT_METHOD_SERVICE); 
    imm.hideSoftInputFromWindow(v.getWindowToken(), 0);
}
</code></pre>
"
"2160619","15213567","3","<p>For those who are interested, here's a C# Xamarin.Android port of Micah's lovely solution:</p>

<pre><code>public delegate void EllipsizeEvent(bool ellipsized);

public class EllipsizingTextView : TextView
{
    private const string Ellipsis = ""..."";

    public event EllipsizeEvent EllipsizeStateChanged;

    private bool isEllipsized;
    private bool isStale;
    private bool programmaticChange;
    private string fullText;
    private int maxLines = -1;
    private float lineSpacingMultiplier = 1.0f;
    private float lineAdditionalVerticalPadding;

    public EllipsizingTextView(Context context) : base(context) 
    {
    }

    public EllipsizingTextView(Context context, IAttributeSet attrs) : base(context, attrs) 
    {
    }

    public EllipsizingTextView(Context context, IAttributeSet attrs, int defStyle) : base(context, attrs, defStyle) 
    {
    }

    public EllipsizingTextView(IntPtr javaReference, JniHandleOwnership transfer) : base(javaReference, transfer)
    {
    }

    public bool IsEllipsized 
    {
        get { return isEllipsized; }
    }

    public override void SetMaxLines(int maxLines) {
        base.SetMaxLines(maxLines);
        this.maxLines = maxLines;
        isStale = true;
    }

    public int GetMaxLines() 
    {
        return maxLines;
    }

    public override void SetLineSpacing(float add, float mult) 
    {
        lineAdditionalVerticalPadding = add;
        lineSpacingMultiplier = mult;
        base.SetLineSpacing(add, mult);
    }

    protected override void OnTextChanged(ICharSequence text, int start, int before, int after) 
    {
        base.OnTextChanged(text, start, before, after);
        if (!programmaticChange) 
        {
            fullText = text.ToString();
            isStale = true;
        }
    }

    protected override void OnDraw(Canvas canvas) 
    {
        if (isStale) 
        {
            base.Ellipsize = null;
            ResetText();
        }
        base.OnDraw(canvas);
    }

    private void ResetText() 
    {
        int maxLines = GetMaxLines();
        string workingText = fullText;
        bool ellipsized = false;
        if (maxLines != -1) 
        {
            Layout layout = CreateWorkingLayout(workingText);
            if (layout.LineCount &gt; maxLines) 
            {
                workingText = fullText.Substring(0, layout.GetLineEnd(maxLines - 1)).Trim();
                while (CreateWorkingLayout(workingText + Ellipsis).LineCount &gt; maxLines) 
                {
                    int lastSpace = workingText.LastIndexOf(' ');
                    if (lastSpace == -1) 
                    {
                        break;
                    }
                    workingText = workingText.Substring(0, lastSpace);
                }
                workingText = workingText + Ellipsis;
                ellipsized = true;
            }
        }
        if (workingText != Text) 
        {
            programmaticChange = true;
            try 
            {
                Text = workingText;
            } 
            finally 
            {
                programmaticChange = false;
            }
        }
        isStale = false;
        if (ellipsized != isEllipsized) 
        {
            isEllipsized = ellipsized;
            if (EllipsizeStateChanged != null)
                EllipsizeStateChanged(ellipsized);
        }
    }

    private Layout CreateWorkingLayout(string workingText) 
    {
        return new StaticLayout(workingText, Paint, Width - PaddingLeft - PaddingRight, Layout.Alignment.AlignNormal, lineSpacingMultiplier, lineAdditionalVerticalPadding, false);
    }

    public override TextUtils.TruncateAt Ellipsize
    {
        get 
        { 
            return base.Ellipsize;
        }
        set 
        { 
        }
    }
}
</code></pre>
"
"3996938","15246818","0","<pre><code>ArrayList&lt;Integer&gt; ar_CheckedList = new ArrayList&lt;Integer&gt;();
</code></pre>

<p>for each holer of check box i am using to store it in array</p>

<pre><code>holder.chk_Allow.setOnCheckedChangeListener(new OnCheckedChangeListener() {
                public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                    if(isChecked)
                        ar_CheckedList.add(position);
                }
            });
</code></pre>

<p>on click of button</p>

<pre><code>for (int i = 0; i &lt;  ar_CheckedList.size(); i++)
 {
        HashMap&lt;String, String&gt; temp=(HashMap&lt;String, String&gt;) contactList.get(ar_CheckedList.get(i));
        str_Phone_No=temp.get(TAG_CONTACT_MOBILE);
        send(str_Phone_No);
 }
</code></pre>
"
"2459916","15262656","4","<p>Romain Guy is where it's at.</p>

<p>Minified version as follows.</p>

<pre><code>Bitmap bitmap = ((BitmapDrawable) getResources().getDrawable(R.drawable.image)).getBitmap();

Bitmap bitmapRounded = Bitmap.createBitmap(bitmap.getWidth(), bitmap.getHeight(), bitmap.getConfig());
Canvas canvas = new Canvas(bitmapRounded);
Paint paint = new Paint();
paint.setAntiAlias(true);
paint.setShader(new BitmapShader(bitmap, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP));
canvas.drawRoundRect((new RectF(0.0f, 0.0f, bitmap.getWidth(), bitmap.getHeight())), 10, 10, paint);

imageView.setImageBitmap(bitmapRounded);
</code></pre>
"
"2617266","15323079","4","<p>Tanks a lot to <a href=""http://stackoverflow.com/users/234270/speedplane"">http://stackoverflow.com/users/234270/speedplane</a>. Great answer!</p>

<p>Here is an improved version of his response that also take care of height and comes with a maxFontSize attribute to limit font size (was usefull in my case, so I wanted to share it):</p>

<pre><code>package com.&lt;your_package&gt;;

import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Paint;
import android.graphics.Rect;
import android.util.AttributeSet;
import android.util.TypedValue;
import android.widget.TextView;


public class FontFitTextView extends TextView
{

    private Paint mTestPaint;
    private float maxFontSize;
    private static final float MAX_FONT_SIZE_DEFAULT_VALUE = 20f;

    public FontFitTextView(Context context)
    {
        super(context);
        initialise(context, null);
    }

    public FontFitTextView(Context context, AttributeSet attributeSet)
    {
        super(context, attributeSet);
        initialise(context, attributeSet);
    }

    public FontFitTextView(Context context, AttributeSet attributeSet, int defStyle)
    {
        super(context, attributeSet, defStyle);
        initialise(context, attributeSet);
    }

    private void initialise(Context context, AttributeSet attributeSet)
    {
        if(attributeSet!=null)
        {
            TypedArray styledAttributes = context.obtainStyledAttributes(attributeSet, R.styleable.FontFitTextView);
            maxFontSize = styledAttributes.getDimension(R.styleable.FontFitTextView_maxFontSize, MAX_FONT_SIZE_DEFAULT_VALUE);
            styledAttributes.recycle();
        }
        else
        {
            maxFontSize = MAX_FONT_SIZE_DEFAULT_VALUE;
        }

        mTestPaint = new Paint();
        mTestPaint.set(this.getPaint());
        //max size defaults to the initially specified text size unless it is too small
    }

    /* Re size the font so the specified text fits in the text box
     * assuming the text box is the specified width.
     */
    private void refitText(String text, int textWidth, int textHeight)
    {
        if (textWidth &lt;= 0)
            return;
        int targetWidth = textWidth - this.getPaddingLeft() - this.getPaddingRight();
        int targetHeight = textHeight - this.getPaddingTop() - this.getPaddingBottom();
        float hi = maxFontSize;
        float lo = 2;
//      final float threshold = 0.5f; // How close we have to be
        final float threshold = 1f; // How close we have to be

        mTestPaint.set(this.getPaint());

        Rect bounds = new Rect();

        while ((hi - lo) &gt; threshold)
        {
            float size = (hi + lo) / 2;
            mTestPaint.setTextSize(size);

            mTestPaint.getTextBounds(text, 0, text.length(), bounds);

            if (bounds.width() &gt;= targetWidth || bounds.height() &gt;= targetHeight)
                hi = size; // too big
            else
                lo = size; // too small

//          if (mTestPaint.measureText(text) &gt;= targetWidth)
//              hi = size; // too big
//          else
//              lo = size; // too small
        }
        // Use lo so that we undershoot rather than overshoot
        this.setTextSize(TypedValue.COMPLEX_UNIT_PX, lo);
    }

    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
    {
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
        int parentWidth = MeasureSpec.getSize(widthMeasureSpec);
        int height = getMeasuredHeight();
        refitText(this.getText().toString(), parentWidth, height);
        this.setMeasuredDimension(parentWidth, height);
    }

    @Override
    protected void onTextChanged(final CharSequence text, final int start, final int before, final int after)
    {
        refitText(text.toString(), this.getWidth(), this.getHeight());
    }

    @Override
    protected void onSizeChanged(int w, int h, int oldw, int oldh)
    {
        if (w != oldw)
        {
            refitText(this.getText().toString(), w, h);
        }
    }
}
</code></pre>

<p>Corresponding /res/values/attr.xml file:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;resources&gt;

    &lt;declare-styleable name=""FontFitTextView""&gt;
        &lt;attr name=""maxFontSize"" format=""dimension"" /&gt;
    &lt;/declare-styleable&gt;

&lt;/resources&gt;
</code></pre>

<p>Example:</p>

<pre><code>&lt;RelativeLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    xmlns:res-auto=""http://schemas.android.com/apk/res-auto""
    android:id=""@+id/home_Layout""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""
    android:background=""@drawable/background""
    tools:ignore=""ContentDescription"" &gt;
...

 &lt;com.&lt;your_package&gt;.FontFitTextView
                    android:layout_width=""match_parent""
                    android:layout_height=""wrap_content""
                    android:singleLine=""true""
                    android:text=""Sample Text""
                    android:textSize=""28sp""
                    res-auto:maxFontSize=""35sp""/&gt;

...
&lt;/RelativeLayout&gt;
</code></pre>

<p>Tu use new attribute, don't forget to add <strong>xmlns:res-auto=""http://schemas.android.com/apk/res-auto""</strong> xml attribute as show in the example.</p>
"
"3647993","15341203","17","<p>Solved it in my case with this code using help of this post:</p>

<pre><code>            Bitmap myBitmap = getBitmap(imgFile.getAbsolutePath());

            try {
                ExifInterface exif = new ExifInterface(imgFile.getAbsolutePath());
                int orientation = exif.getAttributeInt(ExifInterface.TAG_ORIENTATION, 1);
                Log.d(""EXIF"", ""Exif: "" + orientation);
                Matrix matrix = new Matrix();
                if (orientation == 6) {
                    matrix.postRotate(90);
                }
                else if (orientation == 3) {
                    matrix.postRotate(180);
                }
                else if (orientation == 8) {
                    matrix.postRotate(270);
                }
                myBitmap = Bitmap.createBitmap(myBitmap, 0, 0, myBitmap.getWidth(), myBitmap.getHeight(), matrix, true); // rotating bitmap
            }
            catch (Exception e) {

            }
            ImageView img = (ImageView) findViewById(R.id.imgTakingPic);
            img.setImageBitmap(myBitmap);
</code></pre>

<p>Hope it saves someone's time!</p>
"
"5495225","15356123","0","<p><strong>dismissDropDown()</strong> works well in an adapter:</p>

<pre><code>        SimpleCursorAdapter autoCompleteAdapter = new SimpleCursorAdapter(this,
                    android.R.layout.select_dialog_item, null,
                    new String[] { ContactsContract.Contacts.DISPLAY_NAME },
                    new int[] { android.R.id.text1 }, 0);
        mSearchView.setAdapter(autoCompleteAdapter); 
        autoCompleteAdapter.setFilterQueryProvider(new FilterQueryProvider() {
            @Override
            public Cursor runQuery(CharSequence constraint) {
               mSearchView.dismissDropDown();
               // return your query code
            }
        });
</code></pre>

<p>Hope it will be helpful. </p>
"
"2644134","15362289","4","<p>I don't know if this question is still actual, but in my case, when I switched from Dialog to DialogFragment,</p>

<pre><code>requestWindowFeature(Window.FEATURE_NO_TITLE);
</code></pre>

<p>was not an option, but I could use</p>

<pre><code>setStyle(STYLE_NO_TITLE, 0);
</code></pre>

<p>instead with the same result.</p>
"
"5763304","15426849","10","<p>I had go this way:</p>

<pre><code>        scrollView.setOnTouchListener(new View.OnTouchListener() {

        @Override
        public boolean onTouch(View v, MotionEvent event) {
            // TODO Auto-generated method stub
            return isBlockedScrollView;
        }
    });
</code></pre>
"
"2617266","15431632","-1","<pre><code>/* get your context */
Context c = getActivity().getApplicationContext();

LinearLayout l = new LinearLayout(c);
l.setOrientation(LinearLayout.VERTICAL);
LayoutParams params = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT, 0);

l.setLayoutParams(params);
l.setBackgroundResource(R.drawable.border);

TextView tv=new TextView(c);
tv.setText("" your text here"");

/* set typeface if needed */
Typeface tf = Typeface.createFromAsset(c.getAssets(),""fonts/VERDANA.TTF"");  
tv.setTypeface(tf);

// LayoutParams lp = new LayoutParams();

tv.setTextColor(Color.parseColor(""#282828""));

tv.setGravity(Gravity.CENTER | Gravity.BOTTOM);
//  tv.setLayoutParams(lp);

tv.setTextSize(20);
l.addView(tv);

return l;
</code></pre>
"
"4605527","15495497","-1","<p>I use that optimized class:</p>

<pre><code>public final class DimensionUtils {

    private static boolean isInitialised = false;
    private static float pixelsPerOneDp;

    private static void initialise(View view) {
        pixelsPerOneDp = view.getResources().getDisplayMetrics().densityDpi / 160f;
        isInitialised = true;
    }

    public static float pxToDp(View view, float px)
    {
        if (!isInitialised) {
            initialise(view);
        }

        return px / pixelsPerOneDp;
    }

    public static float dpToPx(View view, float dp)
    {
        if (!isInitialised) {
            initialise(view);
        }

        return dp * pixelsPerOneDp;
    }
}
</code></pre>
"
"4165414","15512509","2","<p>I liked the approach of calling <code>dispatchTouchEvent</code> made by htafoya, but:</p>

<ul>
<li>I didn't understand the timer part (don't know why measuring the downtime should be necessary?)</li>
<li>I don't like to register/unregister all EditTexts with every view-change (could be quite a lot of viewchanges and edittexts in complex hierarchies)</li>
</ul>

<p>So, I made this somewhat easier solution:</p>

<pre><code>@Override
public boolean dispatchTouchEvent(final MotionEvent ev) {
    // all touch events close the keyboard before they are processed except EditText instances.
    // if focus is an EditText we need to check, if the touchevent was inside the focus editTexts
    final View currentFocus = getCurrentFocus();
    if (!(currentFocus instanceof EditText) || !isTouchInsideView(ev, currentFocus)) {
        ((InputMethodManager) getApplicationContext().getSystemService(Context.INPUT_METHOD_SERVICE))
            .hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);
    }
    return super.dispatchTouchEvent(ev);
}

/**
 * determine if the given motionevent is inside the given view.
 * 
 * @param ev
 *            the given view
 * @param currentFocus
 *            the motion event.
 * @return if the given motionevent is inside the given view
 */
private boolean isTouchInsideView(final MotionEvent ev, final View currentFocus) {
    final int[] loc = new int[2];
    currentFocus.getLocationOnScreen(loc);
    return ev.getRawX() &gt; loc[0] &amp;&amp; ev.getRawY() &gt; loc[1] &amp;&amp; ev.getRawX() &lt; (loc[0] + currentFocus.getWidth())
        &amp;&amp; ev.getRawY() &lt; (loc[1] + currentFocus.getHeight());
}
</code></pre>

<p>There is one disadvantage:</p>

<p>Switching from one <code>EditText</code> to another <code>EditText</code> makes the keyboard hide and reshow - in my case it's desired that way, because it shows that you switched between two input components.</p>
"
"3035692","15555203","26","<p>very simple  </p>

<pre><code>Bitmap tempBMP = BitmapFactory.decodeResource(getResources(),R.drawable.image);
</code></pre>
"
"5694933","15612964","30","<p>I came up with the following solution based on some answers found here.</p>

<p><strong>CODE:</strong></p>

<pre><code>import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

import android.os.Environment;
import android.util.Log;

public class ExternalStorage {

    public static final String SD_CARD = ""sdCard"";
    public static final String EXTERNAL_SD_CARD = ""externalSdCard"";

    /**
     * @return True if the external storage is available. False otherwise.
     */
    public static boolean isAvailable() {
        String state = Environment.getExternalStorageState();
        if (Environment.MEDIA_MOUNTED.equals(state) || Environment.MEDIA_MOUNTED_READ_ONLY.equals(state)) {
            return true;
        }
        return false;
    }

    public static String getSdCardPath() {
        return Environment.getExternalStorageDirectory().getPath() + ""/"";
    }

    /**
     * @return True if the external storage is writable. False otherwise.
     */
    public static boolean isWritable() {
        String state = Environment.getExternalStorageState();
        if (Environment.MEDIA_MOUNTED.equals(state)) {
            return true;
        }
        return false;

    }

    /**
     * @return A map of all storage locations available
     */
    public static Map&lt;String, File&gt; getAllStorageLocations() {
        Map&lt;String, File&gt; map = new HashMap&lt;String, File&gt;(10);

        List&lt;String&gt; mMounts = new ArrayList&lt;String&gt;(10);
        List&lt;String&gt; mVold = new ArrayList&lt;String&gt;(10);
        mMounts.add(""/mnt/sdcard"");
        mVold.add(""/mnt/sdcard"");

        try {
            File mountFile = new File(""/proc/mounts"");
            if(mountFile.exists()){
                Scanner scanner = new Scanner(mountFile);
                while (scanner.hasNext()) {
                    String line = scanner.nextLine();
                    if (line.startsWith(""/dev/block/vold/"")) {
                        String[] lineElements = line.split("" "");
                        String element = lineElements[1];

                        // don't add the default mount path
                        // it's already in the list.
                        if (!element.equals(""/mnt/sdcard""))
                            mMounts.add(element);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            File voldFile = new File(""/system/etc/vold.fstab"");
            if(voldFile.exists()){
                Scanner scanner = new Scanner(voldFile);
                while (scanner.hasNext()) {
                    String line = scanner.nextLine();
                    if (line.startsWith(""dev_mount"")) {
                        String[] lineElements = line.split("" "");
                        String element = lineElements[2];

                        if (element.contains("":""))
                            element = element.substring(0, element.indexOf("":""));
                        if (!element.equals(""/mnt/sdcard""))
                            mVold.add(element);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }


        for (int i = 0; i &lt; mMounts.size(); i++) {
            String mount = mMounts.get(i);
            if (!mVold.contains(mount))
                mMounts.remove(i--);
        }
        mVold.clear();

        List&lt;String&gt; mountHash = new ArrayList&lt;String&gt;(10);

        for(String mount : mMounts){
            File root = new File(mount);
            if (root.exists() &amp;&amp; root.isDirectory() &amp;&amp; root.canWrite()) {
                File[] list = root.listFiles();
                String hash = ""["";
                if(list!=null){
                    for(File f : list){
                        hash += f.getName().hashCode()+"":""+f.length()+"", "";
                    }
                }
                hash += ""]"";
                if(!mountHash.contains(hash)){
                    String key = SD_CARD + ""_"" + map.size();
                    if (map.size() == 0) {
                        key = SD_CARD;
                    } else if (map.size() == 1) {
                        key = EXTERNAL_SD_CARD;
                    }
                    mountHash.add(hash);
                    map.put(key, root);
                }
            }
        }

        mMounts.clear();

        if(map.isEmpty()){
                 map.put(SD_CARD, Environment.getExternalStorageDirectory());
        }
        return map;
    }
}
</code></pre>

<p><strong>USAGE:</strong></p>

<pre><code>Map&lt;String, File&gt; externalLocations = ExternalStorage.getAllStorageLocations();
File sdCard = externalLocations.get(ExternalStorage.SD_CARD);
File externalSdCard = externalLocations.get(ExternalStorage.EXTERNAL_SD_CARD);
</code></pre>
"
"3226495","15643706","0","<p>I tried exiting application using following code snippet, this it worked for me. Hope this helps you. 
i did small demo with 2 activities </p>

<p>first activity</p>

<pre><code>public class MainActivity extends Activity implements OnClickListener{
    private Button secondActivityBtn;
    private SharedPreferences pref;
    private SharedPreferences.Editor editer;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        secondActivityBtn=(Button) findViewById(R.id.SecondActivityBtn);
        secondActivityBtn.setOnClickListener(this);

        pref = this.getSharedPreferences(""MyPrefsFile"", MODE_PRIVATE);
        editer = pref.edit();

        if(pref.getInt(""exitApp"", 0) == 1){
            editer.putInt(""exitApp"", 0);
            editer.commit();
            finish();
        }
    }
    @Override
    public void onClick(View v) {
        switch (v.getId()) {
        case R.id.SecondActivityBtn:
            Intent intent= new Intent(MainActivity.this, YourAnyActivity.class);
            startActivity(intent);
            break;
        default:
            break;
        }
    }
}
</code></pre>

<p>your any other activity</p>

<pre><code>public class YourAnyActivity extends Activity implements OnClickListener {
    private Button exitAppBtn;
    private SharedPreferences pref;
    private SharedPreferences.Editor editer;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_any);

        exitAppBtn = (Button) findViewById(R.id.exitAppBtn);
        exitAppBtn.setOnClickListener(this);

        pref = this.getSharedPreferences(""MyPrefsFile"", MODE_PRIVATE);
        editer = pref.edit();
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
        case R.id.exitAppBtn:
            Intent main_intent = new Intent(YourAnyActivity.this,
                    MainActivity.class);
            main_intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
            startActivity(main_intent);
            editer.putInt(""exitApp"",1);
            editer.commit();
            break;
        default:
            break;
        }
    }
}
</code></pre>
"
"6200533","15676454","30","<h3>Programmatialy:</h3>

<p>You can do programmatically using <code>setTypeface()</code>: </p>

<pre><code>textView.setTypeface(null, Typeface.NORMAL);      // for Normal Text
textView.setTypeface(null, Typeface.BOLD);        // for Bold only
textView.setTypeface(null, Typeface.ITALIC);      // for Italic
textView.setTypeface(null, Typeface.BOLD_ITALIC); // for Bold and Italic
</code></pre>

<h3>XML:</h3>

<p>You can set Directly in XML file in <code>&lt;TextView /&gt;</code> like: </p>

<pre><code>android:textStyle=""normal""
android:textStyle=""normal|bold""
android:textStyle=""normal|italic""
android:textStyle=""bold""
android:textStyle=""bold|italic""
</code></pre>
"
"8500283","15787458","1","<p>The solutions already posted came with the sideffect, that the first .show() call did not animate the ActionBar for me.
I got another nice solution, which fixed that:</p>

<p>Create a transparent drawable - something like that:</p>

<blockquote>
<pre><code>&lt;shape xmlns:android=""http://schemas.android.com/apk/res/android""&gt;
    &lt;solid
       android:color=""#00000000"" /&gt;
&lt;/shape&gt;
</code></pre>
</blockquote>

<p>Set the actual actionbar background to a invisible custom view which you set on the actionbar:</p>

<blockquote>
<pre><code>getSupportActionBar().setCustomView(R.layout.actionbar_custom_layout);
      getSupportActionBar().setDisplayOptions(ActionBar.DISPLAY_SHOW_CUSTOM,
              ActionBar.DISPLAY_SHOW_CUSTOM | ActionBar.DISPLAY_SHOW_HOME | ActionBar.DISPLAY_SHOW_TITLE);
</code></pre>
</blockquote>

<p>Set the transparent background for the actionbar in onCreate:</p>

<pre><code>getSupportActionBar().setBackgroundDrawable(getResources().getDrawable(R.drawable.background_transparent));
</code></pre>

<p>Imortant: Don't hide the actionbar immediately in onCreate, but with a little delay later - e.g. when the layout is finished with creation:</p>

<pre><code>getWindow().getDecorView().getViewTreeObserver().addOnGlobalLayoutListener(new OnGlobalLayoutListener() {
                @Override
                public void onGlobalLayout() {
                    getSupportActionBar().hide();
                }
            });
</code></pre>

<p>Before your first .show() call set the custom view visible:</p>

<blockquote>
<pre><code>_actionbarRoot.setVisibility(View.VISIBLE);
getSupportActionBar().show();
</code></pre>
</blockquote>
"
"6176391","15812376","1","<p>Another version of thomas88wp's code:</p>

<pre><code>ScrollView scroll = (ScrollView)getActivity().findViewById(R.id.scrollView_addNewBill);
    scroll.setOnTouchListener(new OnTouchListener() {
        @Override
        public boolean onTouch(View arg0, MotionEvent arg1) {        
            View focussedView = getCurrentFocus(); 
            if( focussedView != null ) focussedView.clearFocus();
                
            return false;
    }
});
</code></pre>
"
"2973270","15820608","1","<p>The default implementations of LayoutInflater do not support specifying the font typeface from xml. I have however seen it done in xml by providing a custom factory for the LayoutInflater that will parse such attributes from the xml tag.</p>

<p>The basic structure would like this.</p>

<pre><code>public class TypefaceInflaterFactory implements LayoutInflater.Factory {

    @Override
    public View onCreateView(String name, Context context, AttributeSet attrs) {
        // CUSTOM CODE TO CREATE VIEW WITH TYPEFACE HERE
        // RETURNING NULL HERE WILL TELL THE INFLATER TO USE THE
        // DEFAULT MECHANISMS FOR INFLATING THE VIEW FROM THE XML
    }

}

public class BaseActivity extends Activity {

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        LayoutInflater.from(this).setFactory(new TypefaceInflaterFactory());
    }
}
</code></pre>

<p><a href=""http://sergiandreplace.com/blog/2012/11/15/dealing-with-fonts-and-inflaters-in-android/"" rel=""nofollow"">This article</a> provides a more in depth explanation of these mechanisms and how the author attempts to provide xml layout support for typefaces in this way. The code for the author's implementation can be found <a href=""http://kcy.me/ce6b"" rel=""nofollow"">here</a>.</p>
"
"2471935","15894562","0","<p>This is a late reply, as suggested above Async task will will and after googling a bit i found one more way for this problem.</p>

<p><code>my_image_view.setImageDrawable(Drawable.createFromStream((InputStream)new URL(&lt;String_url&gt;).getContent(), ""src""));</code></p>

<p>I tried this myself and i have not face any issue yet.</p>
"
"3226495","15939069","12","<p>This works well for me.<br>
Close all the previous activities as follows:</p>

<pre><code>    Intent intent = new Intent(this, MainActivity.class);
    intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
    intent.putExtra(""Exit me"", true);
    startActivity(intent);
    finish();
</code></pre>

<p>Then in MainActivity onCreate() method add this to finish the MainActivity</p>

<pre><code>    setContentView(R.layout.main_layout);

    if( getIntent().getBooleanExtra(""Exit me"", false)){
        finish();
        return; // add this to prevent from doing unnecessary stuffs
    }
</code></pre>
"
"6495898","15946775","26","<p>I realise this is an old question, but the prevailing answer leaves something to be desired.</p>

<p>The question is not clear what is required of <code>imageView</code> - are we passing it back as the view, or merely saving a reference for later?</p>

<p>Either way, if the <code>ImageView</code> is coming from the inflated layout, the correct way to do this would be:</p>

<pre><code>public class TestClass extends Fragment {
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View v = inflater.inflate(R.layout.testclassfragment, container, false);
        ImageView imageView = (ImageView)v.findViewById(R.id.my_image);
        return v;
    }
}
</code></pre>
"
"2317428","16030295","3","<pre><code> package com.example.shakingapp;

import android.app.Activity;
import android.graphics.Color;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.Toast;


public class MainActivity extends Activity implements SensorEventListener {
  private SensorManager sensorManager;
  private boolean color = false;
  private View view;
  private long lastUpdate;


/** Called when the activity is first created. */

  @Override
  public void onCreate(Bundle savedInstanceState) {
    requestWindowFeature(Window.FEATURE_NO_TITLE);
    getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
        WindowManager.LayoutParams.FLAG_FULLSCREEN);

    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    view = findViewById(R.id.textView);
    view.setBackgroundColor(Color.GREEN);

    sensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
    lastUpdate = System.currentTimeMillis();
  }

  @Override
  public void onSensorChanged(SensorEvent event) {
    if (event.sensor.getType() == Sensor.TYPE_ACCELEROMETER) {
      getAccelerometer(event);
    }

  }

  private void getAccelerometer(SensorEvent event) {
    float[] values = event.values;
    // Movement
    float x = values[0];
    float y = values[1];
    float z = values[2];

    System.out.println(x);
    System.out.println(y);
    System.out.println(z);
    System.out.println(SensorManager.GRAVITY_EARTH );

    float accelationSquareRoot = (x * x + y * y + z * z)
        / (SensorManager.GRAVITY_EARTH * SensorManager.GRAVITY_EARTH);

    long actualTime = System.currentTimeMillis();
    if (accelationSquareRoot &gt;= 2) //
    {
      if (actualTime - lastUpdate &lt; 200) {
        return;
      }
      lastUpdate = actualTime;
      Toast.makeText(this, ""Device was shuffed ""+accelationSquareRoot, Toast.LENGTH_SHORT)
          .show();
      if (color) {
        view.setBackgroundColor(Color.GREEN);

      } else {
        view.setBackgroundColor(Color.RED);
      }
      color = !color;
    }
  }

  @Override
  public void onAccuracyChanged(Sensor sensor, int accuracy) {

  }

  @Override
  protected void onResume() {
    super.onResume();
    // register this class as a listener for the orientation and
    // accelerometer sensors
    sensorManager.registerListener(this,
        sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER),
        SensorManager.SENSOR_DELAY_NORMAL);
  }

  @Override
  protected void onPause() {
    // unregister listener
    super.onPause();
    sensorManager.unregisterListener(this);
  }
} 
</code></pre>
"
"2695746","16129435","6","<p><strong>Getting list of installed non-system apps</strong></p>

<pre><code>public static void InstalledApps()
{
    List&lt;PackageInfo&gt; PackList = getPackageManager().getInstalledPackages(0);
    for (int i=0; i &lt; PackList.size(); i++)
    {
        PackageInfo PackInfo = PackList.get(i);
        if (  (PackInfo.applicationInfo.flags &amp; ApplicationInfo.FLAG_SYSTEM) == 0)
        {
            String AppName = PackInfo.applicationInfo.loadLabel(getPackageManager()).toString();
            Log.e(""App № "" + Integer.toString(i), AppName);
        }
    }
}
</code></pre>
"
"4165414","16176277","3","<p>I'm aware that this thread is quite old, the correct answer seems valid and there are a lot of working solutions out there, but I think the approach stated bellow might have an additional benefit regarding efficiency and elegance.</p>

<p>I need this behavior for all of my activities, so I created a class <em>CustomActivity</em> inheriting from the class <em>Activity</em> and ""hooked"" the <em>dispatchTouchEvent</em> function. There are mainly two conditions to take care of:</p>

<ol>
<li>If focus is unchanged and someone is tapping outside of the current input field, then dismiss the IME</li>
<li>If focus has changed and the next focused element isn't an instance of any kind of an input field, then dismiss the IME</li>
</ol>

<p>This is my result:</p>

<pre><code>@Override
public boolean dispatchTouchEvent(MotionEvent ev) {
    if(ev.getAction() == MotionEvent.ACTION_UP) {
        final View view = getCurrentFocus();

        if(view != null) {
            final boolean consumed = super.dispatchTouchEvent(ev);

            final View viewTmp = getCurrentFocus();
            final View viewNew = viewTmp != null ? viewTmp : view;

            if(viewNew.equals(view)) {
                final Rect rect = new Rect();
                final int[] coordinates = new int[2];

                view.getLocationOnScreen(coordinates);

                rect.set(coordinates[0], coordinates[1], coordinates[0] + view.getWidth(), coordinates[1] + view.getHeight());

                final int x = (int) ev.getX();
                final int y = (int) ev.getY();

                if(rect.contains(x, y)) {
                    return consumed;
                }
            }
            else if(viewNew instanceof EditText || viewNew instanceof CustomEditText) {
                return consumed;
            }

            final InputMethodManager inputMethodManager = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);

            inputMethodManager.hideSoftInputFromWindow(viewNew.getWindowToken(), 0);

            viewNew.clearFocus();

            return consumed;
        }
    }       

    return super.dispatchTouchEvent(ev);
}
</code></pre>

<p>Side note: Additionally I assign these attributes to the root view making it possible to clear focus on every input field and preventing input fields gaining focus on activity startup (making the content view the ""focus catcher""):</p>

<pre><code>@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);

    final View view = findViewById(R.id.content);

    view.setFocusable(true);
    view.setFocusableInTouchMode(true);
}
</code></pre>
"
"2139134","16176816","9","<p>Your class should implements Serializable or Parcelable.</p>

<pre><code>public class MY_CLASS implements Serializable
</code></pre>

<p>Once done you can send an object on putExtra</p>

<pre><code>intent.putExtra(""KEY"", MY_CLASS_instance);

startActivity(intent);
</code></pre>

<p>To get extras you only have to do</p>

<pre><code>Intent intent = getIntent();
MY_CLASS class = (MY_CLASS) intent.getExtras().getSerializable(""KEY"");
</code></pre>

<p>If your class implements Parcelable use next</p>

<pre><code>MY_CLASS class = (MY_CLASS) intent.getExtras().getParcelable(""KEY"");
</code></pre>

<p>I hope it helps :D</p>
"
"2271131","16188355","1","<p>Try below code:-</p>

<pre><code>SimpleDateFormat dateFormat = new SimpleDateFormat(
                ""yyyy/MM/dd HH:mm:ss"");
        Calendar cal = Calendar.getInstance();
        System.out.println(""time =&gt; "" + dateFormat.format(cal.getTime()));

        String time_str = dateFormat.format(cal.getTime());

        String[] s = time_str.split("" "");

        for (int i = 0; i &lt; s.length; i++) {
             System.out.println(""date  =&gt; "" + s[i]);
        }

        int year_sys = Integer.parseInt(s[0].split(""/"")[0]);
        int month_sys = Integer.parseInt(s[0].split(""/"")[1]);
        int day_sys = Integer.parseInt(s[0].split(""/"")[2]);

        int hour_sys = Integer.parseInt(s[1].split("":"")[0]);
        int min_sys = Integer.parseInt(s[1].split("":"")[1]);

        System.out.println(""year_sys  =&gt; "" + year_sys);
        System.out.println(""month_sys  =&gt; "" + month_sys);
        System.out.println(""day_sys  =&gt; "" + day_sys);

        System.out.println(""hour_sys  =&gt; "" + hour_sys);
        System.out.println(""min_sys  =&gt; "" + min_sys);
</code></pre>
"
"2591036","16230541","7","<p>Or if you want to hide/show the title bar at any point:</p>

<pre><code>private void toggleFullscreen(boolean fullscreen)
{
    WindowManager.LayoutParams attrs = getWindow().getAttributes();
    if (fullscreen)
    {
        attrs.flags |= WindowManager.LayoutParams.FLAG_FULLSCREEN;
    }
    else
    {
        attrs.flags &amp;= ~WindowManager.LayoutParams.FLAG_FULLSCREEN;
    }
    getWindow().setAttributes(attrs);
}
</code></pre>
"
"2973270","16275257","25","<p>I did this in a more ""brute force"" way that doesn't require changes to the layout xml or Activities. </p>

<p>Tested on Android version 2.1 through 4.4. </p>

<pre class=""lang-java prettyprint-override""><code>private void setDefaultFont() {

    try {
        final Typeface bold = Typeface.createFromAsset(getAssets(), DEFAULT_BOLD_FONT_FILENAME);
        final Typeface italic = Typeface.createFromAsset(getAssets(), DEFAULT_ITALIC_FONT_FILENAME);
        final Typeface boldItalic = Typeface.createFromAsset(getAssets(), DEFAULT_BOLD_ITALIC_FONT_FILENAME);
        final Typeface regular = Typeface.createFromAsset(getAssets(),DEFAULT_NORMAL_FONT_FILENAME);

        Field DEFAULT = Typeface.class.getDeclaredField(""DEFAULT"");
        DEFAULT.setAccessible(true);
        DEFAULT.set(null, regular);

        Field DEFAULT_BOLD = Typeface.class.getDeclaredField(""DEFAULT_BOLD"");
        DEFAULT_BOLD.setAccessible(true);
        DEFAULT_BOLD.set(null, bold);

        Field sDefaults = Typeface.class.getDeclaredField(""sDefaults"");
        sDefaults.setAccessible(true);
        sDefaults.set(null, new Typeface[]{
                regular, bold, italic, boldItalic
        });

    } catch (NoSuchFieldException e) {
        logFontError(e);
    } catch (IllegalAccessException e) {
        logFontError(e);
    } catch (Throwable e) {
        //cannot crash app if there is a failure with overriding the default font!
        logFontError(e);
    }
}
</code></pre>

<p>For a more complete example, see <a href=""http://github.com/perchrh/FontOverrideExample"" rel=""nofollow"">http://github.com/perchrh/FontOverrideExample</a></p>
"
"2471935","16293557","30","<p>Anyway people ask my comment to post it as answer. i am posting.</p>

<pre><code>URL newurl = new URL(photo_url_str); 
mIcon_val = BitmapFactory.decodeStream(newurl.openConnection() .getInputStream());
profile_photo.setImageBitmap(mIcon_val);
</code></pre>

<p>thanks.</p>
"
"3226495","16332569","0","<p>I did it with observer mode.</p>

<p>Observer interface</p>

<pre><code>public interface Observer {
public void update(Subject subject);
}
</code></pre>

<p>Base Subject</p>

<pre><code>public class Subject {
private List&lt;Observer&gt; observers = new ArrayList&lt;Observer&gt;();

public void attach(Observer observer){
    observers.add(observer);
}

public void detach(Observer observer){
    observers.remove(observer);
}

protected void notifyObservers(){
    for(Observer observer : observers){
        observer.update(this);
    }
}
}
</code></pre>

<p>Child Subject implements the exit method</p>

<pre><code>public class ApplicationSubject extends Subject {
public void exit(){
    notifyObservers();
}
}
</code></pre>

<p>MyApplication which your application should extends it</p>

<pre><code>public class MyApplication extends Application {

private static ApplicationSubject applicationSubject;

public ApplicationSubject getApplicationSubject() {
            if(applicationSubject == null) applicationSubject = new ApplicationSubject();
    return applicationSubject;
}
</code></pre>

<p>}</p>

<p>Base Activity</p>

<pre><code>public abstract class BaseActivity extends Activity implements Observer {

public MyApplication app;

@Override
protected void onCreate(Bundle savedInstanceState) {
    // TODO Auto-generated method stub
    super.onCreate(savedInstanceState);
    app = (MyApplication) this.getApplication();
    app.getApplicationSubject().attach(this);
}

@Override
public void finish() {
    // TODO Auto-generated method stub
            app.getApplicationSubject().detach(this);
    super.finish();
}

/**
 * exit the app
 */
public void close() {
    app.getApplicationSubject().exit();
};

@Override
public void update(Subject subject) {
    // TODO Auto-generated method stub
    this.finish();
}

}
</code></pre>

<p>let's test it</p>

<pre><code>public class ATestActivity extends BaseActivity {
@Override
protected void onCreate(Bundle savedInstanceState) {
    // TODO Auto-generated method stub
    super.onCreate(savedInstanceState);
    close(); //invoke 'close'
}
}
</code></pre>
"
"3145089","16357088","1","<pre><code>public static Location getBestLocation(Context ctxt) {
    Location gpslocation = getLocationByProvider(
        LocationManager.GPS_PROVIDER, ctxt);
    Location networkLocation = getLocationByProvider(
        LocationManager.NETWORK_PROVIDER, ctxt);
    Location fetchedlocation = null;
    // if we have only one location available, the choice is easy
    if (gpslocation != null) {
        Log.i(""New Location Receiver"", ""GPS Location available."");
        fetchedlocation = gpslocation;
    } else {
        Log.i(""New Location Receiver"",
            ""No GPS Location available. Fetching Network location lat=""
                + networkLocation.getLatitude() + "" lon =""
                + networkLocation.getLongitude());
        fetchedlocation = networkLocation;
    }
    return fetchedlocation;
}

/**
 * get the last known location from a specific provider (network/gps)
 */
private static Location getLocationByProvider(String provider, Context ctxt) {
    Location location = null;
    // if (!isProviderSupported(provider)) {
    // return null;
    // }
    LocationManager locationManager = (LocationManager) ctxt
            .getSystemService(Context.LOCATION_SERVICE);
    try {
        if (locationManager.isProviderEnabled(provider)) {
            location = locationManager.getLastKnownLocation(provider);
        }
    } catch (IllegalArgumentException e) {
        Log.i(""New Location Receiver"", ""Cannot access Provider "" + provider);
    }
    return location;
}
</code></pre>
"
"2736389","16365132","0","<p>I know that static is bad but it seems that we're forced to use it here. The problem with parceables/seriazables is that the two activities have duplicate instances of the same object = waste of memory and CPU.</p>

<pre><code>public class IntentMailBox {
    static Queue&lt;Object&gt; content = new LinkedList&lt;Object&gt;();
}
</code></pre>

<hr>

<p>Calling activity</p>

<pre><code>IntentMailBox.content.add(level);
Intent intent = new Intent(LevelsActivity.this, LevelActivity.class);
startActivity(intent);
</code></pre>

<hr>

<p>Called activity (note that <strong>onCreate()</strong> and <strong>onResume()</strong> may be called multiple times when the system destroys and recreates activities)</p>

<pre><code>if (IntentMailBox.content.size()&gt;0)
  level = (Level) IntentMailBox.content.poll();
else
  // here you reload what you have saved in onPause()
</code></pre>

<p>Another way is to declare a static field of the class that you want to pass in that very class. It will serve only for this purpose. Don't forget that it can be null in onCreate because your app package has been unloaded from memory by system and reloaded later.</p>
"
"3647993","16410772","1","<p>This works, but probably not the best way to do it, but it might help someone.</p>

<pre><code>String imagepath = someUri.getAbsolutePath();
imageview = (ImageView)findViewById(R.id.imageview);
imageview.setImageBitmap(setImage(imagepath, 120, 120));    

public Bitmap setImage(String path, final int targetWidth, final int targetHeight) {
    Bitmap bitmap = null;
// Get exif orientation     
    try {
        ExifInterface exif = new ExifInterface(path);
        int orientation = exif.getAttributeInt(ExifInterface.TAG_ORIENTATION, 1);
        if (orientation == 6) {
            orientation_val = 90;
        }
        else if (orientation == 3) {
            orientation_val = 180;
        }
        else if (orientation == 8) {
            orientation_val = 270;
        }
    }
        catch (Exception e) {
        }

        try {
// First decode with inJustDecodeBounds=true to check dimensions
            final BitmapFactory.Options options = new BitmapFactory.Options();
            options.inJustDecodeBounds = true;
            BitmapFactory.decodeFile(path, options);

// Adjust extents
            int sourceWidth, sourceHeight;
            if (orientation_val == 90 || orientation_val == 270) {
                sourceWidth = options.outHeight;
                sourceHeight = options.outWidth;
            } else {
                sourceWidth = options.outWidth;
                sourceHeight = options.outHeight;
            }

// Calculate the maximum required scaling ratio if required and load the bitmap
            if (sourceWidth &gt; targetWidth || sourceHeight &gt; targetHeight) {
                float widthRatio = (float)sourceWidth / (float)targetWidth;
                float heightRatio = (float)sourceHeight / (float)targetHeight;
                float maxRatio = Math.max(widthRatio, heightRatio);
                options.inJustDecodeBounds = false;
                options.inSampleSize = (int)maxRatio;
                bitmap = BitmapFactory.decodeFile(path, options);
            } else {
                bitmap = BitmapFactory.decodeFile(path);
            }

// Rotate the bitmap if required
            if (orientation_val &gt; 0) {
                Matrix matrix = new Matrix();
                matrix.postRotate(orientation_val);
                bitmap = Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);
            }

// Re-scale the bitmap if necessary
            sourceWidth = bitmap.getWidth();
            sourceHeight = bitmap.getHeight();
            if (sourceWidth != targetWidth || sourceHeight != targetHeight) {
                float widthRatio = (float)sourceWidth / (float)targetWidth;
                float heightRatio = (float)sourceHeight / (float)targetHeight;
                float maxRatio = Math.max(widthRatio, heightRatio);
                sourceWidth = (int)((float)sourceWidth / maxRatio);
                sourceHeight = (int)((float)sourceHeight / maxRatio);
                bitmap = Bitmap.createScaledBitmap(bitmap, sourceWidth,     sourceHeight, true);
            }
        } catch (Exception e) {
        }
        return bitmap;
    }
</code></pre>
"
"6290531","16556947","3","<pre><code>private boolean hasContent(EditText et) {
       return (et.getText().toString().trim().length() &gt; 0);
}
</code></pre>
"
"3624280","16566072","13","<p><strong>To Write :</strong></p>

<pre><code>SharedPreferences preferences = getSharedPreferences(""AUTHENTICATION_FILE_NAME"", Context.MODE_WORLD_WRITEABLE);
SharedPreferences.Editor editor = preferences.edit();
editor.putString(""Authentication_Id"",userid.getText().toString());
editor.putString(""Authentication_Password"",password.getText().toString());
editor.putString(""Authentication_Status"",""true"");
editor.apply();
</code></pre>

<p><strong>To Read :</strong></p>

<pre><code>SharedPreferences prfs = getSharedPreferences(""AUTHENTICATION_FILE_NAME"", Context.MODE_PRIVATE);
String Astatus = prfs.getString(""Authentication_Status"", """");
</code></pre>
"
"3611457","16599549","10","<p>Here is a more complete and up to date solution that works for API 8+, works for reverse portrait and landscape, and works on a Galaxy tab where the ""natural"" orientation is landscape (call <code>activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED)</code> to unlock the orientation):</p>

<pre><code>@SuppressWarnings(""deprecation"")
@SuppressLint(""NewApi"")
private void lockOrientation() {
    Display display = activity.getWindowManager().getDefaultDisplay();
    int rotation = display.getRotation();
    int height;
    int width;
    if (Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.HONEYCOMB_MR2) {
        height = display.getHeight();
        width = display.getWidth();
    } else {
        Point size = new Point();
        display.getSize(size);
        height = size.y;
        width = size.x;
    }
    switch (rotation) {
    case Surface.ROTATION_90:
        if (width &gt; height)
            activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
        else
            activity.setRequestedOrientation(9/* reversePortait */);
        break;
    case Surface.ROTATION_180:
        if (height &gt; width)
            activity.setRequestedOrientation(9/* reversePortait */);
        else
            activity.setRequestedOrientation(8/* reverseLandscape */);
        break;          
    case Surface.ROTATION_270:
        if (width &gt; height)
            activity.setRequestedOrientation(8/* reverseLandscape */);
        else
            activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
        break;
    default :
        if (height &gt; width)
            activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
        else
            activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
    }
}
</code></pre>
"
"2736389","16638897","9","<p>There are couple of ways by which you can  access variables or object in other classes or Activity.</p>

<p>A. Database </p>

<p>B. shared preferences.</p>

<p>C. Object serialization.</p>

<p>D. A class which can hold common data can be named as Common Utilities it depends on you.</p>

<p>E. Passing data through Intents and Parcelable Interface.</p>

<p>It depend upon your project needs.</p>

<p>A. <strong>Database</strong></p>

<p>SQLite is an Open Source Database which is embedded into Android. SQLite supports standard relational database features like SQL syntax, transactions and prepared statements. </p>

<p>Tutorials -- <a href=""http://www.vogella.com/articles/AndroidSQLite/article.html"">http://www.vogella.com/articles/AndroidSQLite/article.html</a></p>

<p>B. <strong>Shared Preferences</strong></p>

<p>Suppose you want to store username. So there will be now two thing a <strong>Key</strong> Username, <strong>Value</strong> Value.</p>

<p><strong>How to store</strong></p>

<pre><code> // Create object of SharedPreferences.
 SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(this);
 //now get Editor
 SharedPreferences.Editor editor = sharedPref.edit();
 //put your value
 editor.putString(""userName"", ""stackoverlow"");

 //commits your edits
 editor.commit();
</code></pre>

<p><em>Using putString(),putBoolean(),putInt(),putFloat(),putLong() you can save your desired dtatype.</em></p>

<p><strong>How to fetch</strong></p>

<pre><code>SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(this);
String userName = sharedPref.getString(""userName"", ""Not Available"");
</code></pre>

<p><a href=""http://developer.android.com/reference/android/content/SharedPreferences.html"">http://developer.android.com/reference/android/content/SharedPreferences.html</a></p>

<p>C. <strong>Object Serialization</strong></p>

<p>Object serlization is used if we want to save an object state to send it over network or you can use it for your purpose also.</p>

<p>Use java beans and store in it as one of his fields and use getters and setter for that</p>

<p>JavaBeans are Java classes that have properties. Think of
properties as private instance variables. Since they're private, the only way
they can be accessed from outside of their class is through methods in the class. The
methods that change a property's value are called setter methods, and the methods
that retrieve a property's value are called getter methods. </p>

<pre><code>public class VariableStorage implements Serializable  {

    private String inString ;

    public String getInString() {
        return inString;
    }

    public void setInString(String inString) {
        this.inString = inString;
    }


}
</code></pre>

<p>Set the variable in you mail method by using</p>

<pre><code>VariableStorage variableStorage = new VariableStorage();
variableStorage.setInString(inString);
</code></pre>

<p>Then use object Serialzation to serialize this object and in your other class deserialize this object.</p>

<p>In serialization an object can be represented as a sequence of bytes that includes the object's data as well as information about the object's type and the types of data stored in the object.</p>

<p>After a serialized object has been written into a file, it can be read from the file and deserialized that is, the type information and bytes that represent the object and its data can be used to recreate the object in memory.</p>

<p>If you want tutorial for this refer this link</p>

<p><a href=""http://javawithswaranga.blogspot.in/2011/08/serialization-in-java.html"">http://javawithswaranga.blogspot.in/2011/08/serialization-in-java.html</a></p>

<p><a href=""http://stackoverflow.com/questions/15999934/get-variable-in-other-classes/16000005#16000005"">Get variable in other classes</a></p>

<p>D. <strong>CommonUtilities</strong></p>

<p>You can make a class by your self which can contain common data which you frequently need in your project.</p>

<p><strong>Sample</strong></p>

<pre><code>public class CommonUtilities {

    public static String className = ""CommonUtilities"";

}
</code></pre>

<p>E. <strong>Passing Data through Intents</strong></p>

<p>Please refer this tutorial for this option of passing data.</p>

<p><a href=""http://shri.blog.kraya.co.uk/2010/04/26/android-parcel-data-to-pass-between-activities-using-parcelable-classes/"">http://shri.blog.kraya.co.uk/2010/04/26/android-parcel-data-to-pass-between-activities-using-parcelable-classes/</a></p>
"
"5357455","16672777","1","<p>Here is my solution:</p>

<pre><code>     yourEditText.addTextChangedListener(new TextWatcher() {
        @Override
        public void onTextChanged(CharSequence s, int start, int before, int count) {
            NumberFormat formatter = new DecimalFormat(""#.##"");
            double doubleVal = Double.parseDouble(s.toString());
            yourEditText.setText(formatter.format(doubleVal));
        }

        @Override
        public void beforeTextChanged(CharSequence s, int start, int count,int after) {}

        @Override
        public void afterTextChanged(Editable s) {}
    });
</code></pre>

<p>If the user enters a number with more than two numbers after the decimal point, it will be automatically corrected.</p>

<p>I hope I have helped!</p>
"
"5357455","16684661","7","<p>I achieved this with the help of <code>TextWatcher</code> by the following way</p>

<pre><code>final EditText et = (EditText) findViewById(R.id.EditText1);
et.addTextChangedListener(new TextWatcher() {
    public void onTextChanged(CharSequence arg0, int arg1, int arg2,int arg3) {             

    }
    public void beforeTextChanged(CharSequence arg0, int arg1,int arg2, int arg3) {             

    }

    public void afterTextChanged(Editable arg0) {
        if (arg0.length() &gt; 0) {
            String str = et.getText().toString();
            et.setOnKeyListener(new OnKeyListener() {
                public boolean onKey(View v, int keyCode, KeyEvent event) {
                    if (keyCode == KeyEvent.KEYCODE_DEL) {
                        count--;
                        InputFilter[] fArray = new InputFilter[1];
                        fArray[0] = new InputFilter.LengthFilter(100);
                        et.setFilters(fArray);
                        //change the edittext's maximum length to 100. 
                        //If we didn't change this the edittext's maximum length will
                        //be number of digits we previously entered.
                    }
                    return false;
                }
            });
            char t = str.charAt(arg0.length() - 1);
            if (t == '.') {
                count = 0;
            }
            if (count &gt;= 0) {
                if (count == 2) {                        
                    InputFilter[] fArray = new InputFilter[1];
                    fArray[0] = new InputFilter.LengthFilter(arg0.length());
                    et.setFilters(fArray);
                    //prevent the edittext from accessing digits 
                    //by setting maximum length as total number of digits we typed till now.
                }
                count++;
            }
        }
    }
});
</code></pre>

<p>This solution will not allow the user to enter more than two digit after decimal point. Also you can enter any number of digits before decimal point. See this blog <a href=""http://v4all123.blogspot.com/2013/05/set-limit-for-fraction-in-decimal.html"" rel=""nofollow"">post</a> to set filter for multiple EditText. I hope this will help. Thank you.</p>
"
"3624280","16684961","6","<p>In any application, there are default preferences that can accessed through the PreferenceManager instance and its related method getDefaultSharedPreferences(Context)</p>

<p>With the SharedPreference instance one can retrieve the int value of the any preference with the <strong>getInt(String key, int defVal)</strong>. The preference we are interested in this case is counter</p>

<p>In our case, we can modify the SharedPreference instance in our case using the edit() and use the putInt(String key, int newVal) We increased the count for our application that presist beyond the application and displayed accordingly.</p>

<p>To further demo this, restart and you application again, you will notice that the count will increase each time you restart the application. </p>

<p>PreferencesDemo.java</p>

<p>Code:</p>

<pre><code>package org.example.preferences;
import android.app.Activity;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.widget.TextView;

public class PreferencesDemo extends Activity {
   /** Called when the activity is first created. */
@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);

    // Get the app's shared preferences
    SharedPreferences app_preferences = 
        PreferenceManager.getDefaultSharedPreferences(this);

    // Get the value for the run counter
    int counter = app_preferences.getInt(""counter"", 0);

    // Update the TextView
    TextView text = (TextView) findViewById(R.id.text);
    text.setText(""This app has been started "" + counter + "" times."");

    // Increment the counter
    SharedPreferences.Editor editor = app_preferences.edit();
    editor.putInt(""counter"", ++counter);
    editor.commit(); // Very important
}
}
</code></pre>

<p><strong>main.xml</strong></p>

<p><strong>Code:</strong></p>

<pre><code>   &lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
   &lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
      android:orientation=""vertical""
      android:layout_width=""fill_parent""
      android:layout_height=""fill_parent""
       &gt;
        &lt;TextView
    android:id=""@+id/text""  
    android:layout_width=""fill_parent"" 
    android:layout_height=""wrap_content"" 
    android:text=""@string/hello""
    /&gt;
&lt;/LinearLayout&gt;
</code></pre>
"
"5357455","16761295","2","<p>All answers here are pretty complex I tried to make it much simpler.Look at my code and decide for yourself - </p>

<pre><code>int temp  = 0;
int check = 0;

editText.addTextChangedListener(new TextWatcher() {

    @Override
    public void onTextChanged(CharSequence s, int start, int before, int count) {

        if(editText.getText().toString().length()&lt;temp)
        {
            if(!editText.getText().toString().contains("".""))
                editText.setFilters(new InputFilter[] { new InputFilter.LengthFilter(editText.getText().toString().length()-1) });
            else
                editText.setFilters(new InputFilter[] { new InputFilter.LengthFilter(editText.getText().toString().length()+1) });

        }

        if(!editText.getText().toString().contains("".""))
        {
            editText.setFilters(new InputFilter[] { new InputFilter.LengthFilter(editText.getText().toString().length()+1) });
            check=0;
        }


        else if(check==0)
        {
            check=1;
            editText.setFilters(new InputFilter[] { new InputFilter.LengthFilter(editText.getText().toString().length()+2) });
        }
    }

    @Override
    public void beforeTextChanged(CharSequence s, int start, int count,
            int after) {
        temp = editText.getText().toString().length();


    }

    @Override
    public void afterTextChanged(Editable s) {
        // TODO Auto-generated method stub

    }
});
</code></pre>
"
"6176391","16795598","4","<p>The issue is not on the java code, but on the manifest code.</p>

<p>In your AndroidManifest.xml add an attribute to the Activity:</p>

<pre><code>        &lt;activity android:name="".MyActivity"" android:windowSoftInputMode=""adjustPan""&gt; &lt;/activity&gt;
</code></pre>
"
"4894885","16816387","1","<p>I have found nice example at <a href=""http://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html"" rel=""nofollow"">docs.oracle.com</a> how to get file extension that return file type extension in lower case or null if there isn't file extension:</p>

<pre><code>    /*
     * Get the extension of a file.
     */
    public static String getExtension(File f) {
        String ext = null;
        String s = f.getName();
        int i = s.lastIndexOf('.');

        if (i &gt; 0 &amp;&amp; i &lt; s.length() - 1) {
            ext = s.substring(i + 1).toLowerCase();
        }
        return ext;
    }
</code></pre>
"
"6495898","16819446","6","<p>agreed with calling <code>findViewById()</code> on the View.</p>

<pre><code> public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

         View V = inflater.inflate(R.layout.testclassfragment, container, false);
         ImageView imageView = (ImageView)V.findViewById(R.id.my_image);

         return V;
}
</code></pre>
"
"5033012","16879984","-1","<p>I just borrow some other guys' idea and write some code below that may be helpful.</p>

<pre><code>import android.content.Context;
import android.graphics.Canvas;
import android.text.Layout.Alignment;
import android.text.StaticLayout;
import android.text.TextPaint;
import android.text.TextUtils;
import android.util.AttributeSet;
import android.util.TypedValue;
import android.widget.TextView;

public class AutoResizeTextView extends TextView {
    private static final int MAX_SIZE = 1000;

    private static final int MIN_SIZE = 5;

    private TextPaint mTextPaint;

    private float mSpacingMult = 1.0f;

    private float mSpacingAdd = 0.0f;

    private boolean needAdapt = false;

    private boolean adapting = false;

    public AutoResizeTextView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        init();
    }

    public AutoResizeTextView(Context context, AttributeSet attrs) {
        super(context, attrs);
        init();
    }

    public AutoResizeTextView(Context context) {
        super(context);
        init();
    }

    private void init() {
        mTextPaint = new TextPaint();
    }

    @Override
    protected void onDraw(Canvas canvas) {
        if (adapting) {
            return;
        }
        if (needAdapt) {
            adaptTextSize();
        } else {
            super.onDraw(canvas);
        }
    }

    private void adaptTextSize() {
        CharSequence text = getText();
        int viewWidth = getMeasuredWidth();
        int viewHeight = getMeasuredHeight();

        if (viewWidth==0 || viewHeight==0
                || TextUtils.isEmpty(text)) {
            return;
        }

        adapting = true;
        /* binary search */
        int bottom=MIN_SIZE, top=MAX_SIZE, mid = 0;
        while (bottom &lt;= top) {
            mid = (bottom + top)/2;
            mTextPaint.setTextSize(mid);
            int textWidth = (int) mTextPaint.measureText(text, 0, text.length());
            int textHeight = getTextHeight(text, viewWidth);
            if (textWidth&lt;viewWidth &amp;&amp; textHeight&lt;viewHeight) {
                bottom = mid+1;
            } else {
                top = mid-1;
            }
        }

        int newSize = mid-1;
        setTextSize(TypedValue.COMPLEX_UNIT_PX, newSize);

        adapting=false;
        needAdapt = false;

        invalidate();
    }

    private int getTextHeight(CharSequence text, int targetWidth) {
        StaticLayout layout = new StaticLayout(text, mTextPaint, targetWidth,
                Alignment.ALIGN_NORMAL, mSpacingMult, mSpacingAdd, true);
        return layout.getHeight();
    }

    @Override
    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        super.onSizeChanged(w, h, oldw, oldh);
        needAdapt = true;
    }

    @Override
    protected void onTextChanged(CharSequence text, int start,
            int lengthBefore, int lengthAfter) {
        super.onTextChanged(text, start, lengthBefore, lengthAfter);
        needAdapt = true;
    }

    @Override
    public void setLineSpacing(float add, float mult) {
        super.setLineSpacing(add, mult);
        mSpacingMult = mult;
        mSpacingAdd = add;
    }
}
</code></pre>
"
"8500283","16887770","12","<p>Hi I have a simple solution by using 2 themes</p>

<ol>
<li><p>Splash screen theme (add it to the manifest):  </p>

<p><code>&lt;style name=""SplashTheme"" parent=""@android:style/Theme.Holo.NoActionBar""&gt;
    &lt;item name=""android:windowBackground""&gt;@color/red&lt;/item&gt;
&lt;/style&gt;</code></p></li>
<li><p>normal theme (add it in your activity by setTheme(R.style.Theme)):</p>

<p><code>&lt;style name=""Theme"" parent=""@style/Theme.Holo""&gt; &lt;item name=""android:windowBackground""&gt;@color/blue&lt;/item&gt;
&lt;/style&gt;</code></p></li>
</ol>

<p>To support SDK 10:</p>

<pre><code>@Override    
public void onCreate(Bundle savedInstanceState) {

    setTheme(R.style.Theme);      
    super.onCreate(savedInstanceState);

      ...........
      ...........
}
</code></pre>
"
"5495225","16975053","0","<p>wwyt, I simply reused your trick with removing the Adapter and these are the bare essentials to unfocus/dismiss the dropdown.</p>

<pre><code>AutoCompleteTextView tvSuburbs;
ArrayAdapter&lt;Suburb&gt; a = (ArrayAdapter&lt;Suburb&gt;) tvSuburbs.getAdapter();
tvSuburbs.setAdapter(null); // Remove the adapter so we don't get a dropdown
tvSuburbs.setText(s.name); // when text is set programmatically.
tvSuburbs.setAdapter(a); // Restore adapter
</code></pre>
"
"5033012","17111204","1","<p>Thanks to Chase and onoelle, for the lazy programmers, let me post here a working version of their fantastic merged code, adapted on a Button, instead of a TextView.</p>

<p>Substitute all your Buttons (not ImageButtons) with AutoResizeTextButtons and the same boring problem is fixed for them too.</p>

<p>Here is the code. I just removed the imports.</p>

<pre><code>/**
 *            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
 *                    Version 2, December 2004
 * 
 * Copyright (C) 2004 Sam Hocevar &lt;sam@hocevar.net&gt;
 * 
 * Everyone is permitted to copy and distribute verbatim or modified
 * copies of this license document, and changing it is allowed as long
 * as the name is changed.
 * 
 *            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
 *   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
 * 
 *  0. You just DO WHAT THE FUCK YOU WANT TO.
 *  made better by onoelle
 *  adapted for button by beppi
 */

/**
 * Text Button that auto adjusts text size to fit within the view.
 * If the text size equals the minimum text size and still does not
 * fit, append with an ellipsis.
 * 
 * @author Chase Colburn
 * @since Apr 4, 2011
 */
public class AutoResizeTextButton extends Button {

    // Minimum text size for this text view
    public static final float MIN_TEXT_SIZE = 20;

    // Interface for resize notifications
    public interface OnTextResizeListener {
        public void onTextResize(Button textView, float oldSize, float newSize);
    }

    // Our ellipse string
    private static final String mEllipsis = ""..."";

    // Registered resize listener
    private OnTextResizeListener mTextResizeListener;

    // Flag for text and/or size changes to force a resize
    private boolean mNeedsResize = false;

    // Text size that is set from code. This acts as a starting point for resizing
    private float mTextSize;

    // Temporary upper bounds on the starting text size
    private float mMaxTextSize = 0;

    // Lower bounds for text size
    private float mMinTextSize = MIN_TEXT_SIZE;

    // Text view line spacing multiplier
    private float mSpacingMult = 1.0f;

    // Text view additional line spacing
    private float mSpacingAdd = 0.0f;

    // Add ellipsis to text that overflows at the smallest text size
    private boolean mAddEllipsis = true;

    // Default constructor override
    public AutoResizeTextButton(Context context) {
        this(context, null);
    }

    // Default constructor when inflating from XML file
    public AutoResizeTextButton(Context context, AttributeSet attrs) {
        this(context, attrs, 0);
    }

    // Default constructor override
    public AutoResizeTextButton(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        mTextSize = getTextSize();
    }

    /**
     * When text changes, set the force resize flag to true and reset the text size.
     */
    @Override
    protected void onTextChanged(final CharSequence text, final int start, final int before, final int after) {
        mNeedsResize = true;
        // Since this view may be reused, it is good to reset the text size
        resetTextSize();
    }

    /**
     * If the text view size changed, set the force resize flag to true
     */
    @Override
    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        if (w != oldw || h != oldh) {
            mNeedsResize = true;
        }
    }

    /**
     * Register listener to receive resize notifications
     * @param listener
     */
    public void setOnResizeListener(OnTextResizeListener listener) {
        mTextResizeListener = listener;
    }

    /**
     * Override the set text size to update our internal reference values
     */
    @Override
    public void setTextSize(float size) {
        super.setTextSize(size);
        mTextSize = getTextSize();
    }

    /**
     * Override the set text size to update our internal reference values
     */
    @Override
    public void setTextSize(int unit, float size) {
        super.setTextSize(unit, size);
        mTextSize = getTextSize();
    }

    /**
     * Override the set line spacing to update our internal reference values
     */
    @Override
    public void setLineSpacing(float add, float mult) {
        super.setLineSpacing(add, mult);
        mSpacingMult = mult;
        mSpacingAdd = add;
    }

    /**
     * Set the upper text size limit and invalidate the view
     * @param maxTextSize
     */
    public void setMaxTextSize(float maxTextSize) {
        mMaxTextSize = maxTextSize;
        requestLayout();
        invalidate();
    }

    /**
     * Return upper text size limit
     * @return
     */
    public float getMaxTextSize() {
        return mMaxTextSize;
    }

    /**
     * Set the lower text size limit and invalidate the view
     * @param minTextSize
     */
    public void setMinTextSize(float minTextSize) {
        mMinTextSize = minTextSize;
        requestLayout();
        invalidate();
    }

    /**
     * Return lower text size limit
     * @return
     */
    public float getMinTextSize() {
        return mMinTextSize;
    }

    /**
     * Set flag to add ellipsis to text that overflows at the smallest text size
     * @param addEllipsis
     */
    public void setAddEllipsis(boolean addEllipsis) {
        mAddEllipsis = addEllipsis;
    }

    /**
     * Return flag to add ellipsis to text that overflows at the smallest text size
     * @return
     */
    public boolean getAddEllipsis() {
        return mAddEllipsis;
    }

    /**
     * Reset the text to the original size
     */
    public void resetTextSize() {
        if(mTextSize &gt; 0) {
            super.setTextSize(TypedValue.COMPLEX_UNIT_PX, mTextSize);
            mMaxTextSize = mTextSize;
        }
    }

    /**
     * Resize text after measuring
     */
    @Override
    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
        if(changed || mNeedsResize) {
            int widthLimit = (right - left) - getCompoundPaddingLeft() - getCompoundPaddingRight();
            int heightLimit = (bottom - top) - getCompoundPaddingBottom() - getCompoundPaddingTop();
            resizeText(widthLimit, heightLimit);
        }
        super.onLayout(changed, left, top, right, bottom);
    }


    /**
     * Resize the text size with default width and height
     */
    public void resizeText() {
        int heightLimit = getHeight() - getPaddingBottom() - getPaddingTop();
        int widthLimit = getWidth() - getPaddingLeft() - getPaddingRight();
        resizeText(widthLimit, heightLimit);
    }

    /**
     * Resize the text size with specified width and height
     * @param width
     * @param height
     */
    public void resizeText(int width, int height) {
        CharSequence text = getText();
        // Do not resize if the view does not have dimensions or there is no text
        if(text == null || text.length() == 0 || height &lt;= 0 || width &lt;= 0 || mTextSize == 0) {
            return;
        }

        // Get the text view's paint object
        TextPaint textPaint = getPaint();

        // Store the current text size
        float oldTextSize = textPaint.getTextSize();
        // If there is a max text size set, use the lesser of that and the default text size
        float targetTextSize = mMaxTextSize &gt; 0 ? Math.min(mTextSize, mMaxTextSize) : mTextSize;

        // Get the required text height
        int textHeight = getTextHeight(text, textPaint, width, targetTextSize);

        // Until we either fit within our text view or we had reached our min text size, incrementally try smaller sizes
        while(textHeight &gt; height &amp;&amp; targetTextSize &gt; mMinTextSize) {
            targetTextSize = Math.max(targetTextSize - 2, mMinTextSize);
            textHeight = getTextHeight(text, textPaint, width, targetTextSize);
        }

        // If we had reached our minimum text size and still don't fit, append an ellipsis
        if(mAddEllipsis &amp;&amp; targetTextSize == mMinTextSize &amp;&amp; textHeight &gt; height) {
            // Draw using a static layout
            // modified: use a copy of TextPaint for measuring
            TextPaint paint = new TextPaint(textPaint);
            StaticLayout layout = new StaticLayout(text, paint, width, Alignment.ALIGN_NORMAL, mSpacingMult, mSpacingAdd, false);
            // Check that we have a least one line of rendered text
            if(layout.getLineCount() &gt; 0) {
                // Since the line at the specific vertical position would be cut off,
                // we must trim up to the previous line
                int lastLine = layout.getLineForVertical(height) - 1;
                // If the text would not even fit on a single line, clear it
                if(lastLine &lt; 0) {
                    setText("""");
                }
                // Otherwise, trim to the previous line and add an ellipsis
                else {
                    int start = layout.getLineStart(lastLine);
                    int end = layout.getLineEnd(lastLine);
                    float lineWidth = layout.getLineWidth(lastLine);
                    float ellipseWidth = textPaint.measureText(mEllipsis);

                    // Trim characters off until we have enough room to draw the ellipsis
                    while(width &lt; lineWidth + ellipseWidth) {
                        lineWidth = textPaint.measureText(text.subSequence(start, --end + 1).toString());
                    }
                    setText(text.subSequence(0, end) + mEllipsis);
                }
            }
        }

        // Some devices try to auto adjust line spacing, so force default line spacing
        // and invalidate the layout as a side effect
//      textPaint.setTextSize(targetTextSize);
     // modified: setting text size via this.setTextSize (instead of textPaint.setTextSize(targetTextSize))
        setTextSize(TypedValue.COMPLEX_UNIT_PX, targetTextSize);
        setLineSpacing(mSpacingAdd, mSpacingMult);

        // Notify the listener if registered
        if(mTextResizeListener != null) {
            mTextResizeListener.onTextResize(this, oldTextSize, targetTextSize);
        }

        // Reset force resize flag
        mNeedsResize = false;
    }

    // Set the text size of the text paint object and use a static layout to render text off screen before measuring
    private int getTextHeight(CharSequence source, TextPaint originalPaint, int width, float textSize) {
          // modified: make a copy of the original TextPaint object for measuring
          // (apparently the object gets modified while measuring, see also the
          // docs for TextView.getPaint() (which states to access it read-only)
        // Update the text paint object
          TextPaint paint = new TextPaint(originalPaint);
        paint.setTextSize(textSize);
        // Measure using a static layout
        StaticLayout layout = new StaticLayout(source, paint, width, Alignment.ALIGN_NORMAL, mSpacingMult, mSpacingAdd, true);
        return layout.getHeight();
    }

}
</code></pre>

<p>Usage:</p>

<p>put a AutoResizeTextButton inside your xml in replace of a normal Button, without changing
anything else.
Inside the onCreate() put (for example):</p>

<pre><code>    myButton = (AutoResizeTextButton)getView().findViewById(id.myButton);
    myButton.setMinTextSize(8f);
    myButton.resizeText();
</code></pre>
"
"4894885","17180709","1","<p>This works for me:</p>

<pre><code>public static String getExtension(String fileName) {
    String encoded;
    try { encoded = URLEncoder.encode(fileName, ""UTF-8"").replace(""+"", ""%20""); }
    catch(UnsupportedEncodingException e) { encoded = fileName; }
    return MimeTypeMap.getFileExtensionFromUrl(encoded).toLowerCase();
}
</code></pre>

<p>When the file is <code>/mnt/sdcard/boomerang/2013-06-18_12:08:53.txt</code>, <code>""txt""</code> is returned.</p>

<p>Note the <code>URLEncoder.encode</code> and <code>.repalce</code> calls should fix any reliability issues you might see when <code>MimeTypeMap.getFileExtensionFromUrl</code> is called by itself.  For example, without the encoding and replace calls, file names such as <code>""Test Image!.jpg""</code> return empty strings.  Also make sure the file name is lowercased.  It <code>MimeTypeMap</code> does not seem to have entries for <code>.PNG</code> or <code>.JPG</code>.</p>
"
"6520718","17189717","0","<pre><code>Display display = getActivity().getWindowManager().getDefaultDisplay(); 
int screenWidth = display.getWidth();
int screenHeight = display.getHeight();
Log.d(""Tag"", ""Getting Width &gt;&gt; "" + screenWidth);
Log.d(""Tag"", ""Getting Height &gt;&gt; "" + screenHeight);
</code></pre>

<p>This worked properly in my application</p>
"
"2169649","17285119","5","<p>I went through the solution from @hcpl &amp; @mad. hcpl's solution supports well for local image in the gallery &amp; mad provided a better solution on top of that - it helps to load OI/Astro/Dropbox image as well. But in my app, while working on <strong>picasa library</strong> that's now integrated in Android Gallery, both solution fail.</p>

<p>I searched &amp; analyzed a bit &amp; eventually have come with a better &amp; elegant solution that overcomes this limitation. Thanks to <a href=""http://dimitar.me/how-to-get-picasa-images-using-the-image-picker-on-android-devices-running-any-os-version/""><strong>Dimitar Darazhanski</strong></a> for his blog, that helped me in this case, I modified a bit to make it easier to understand. Here is my solution goes -</p>

<pre><code>public class BrowsePicture extends Activity {

//YOU CAN EDIT THIS TO WHATEVER YOU WANT
private static final int SELECT_PICTURE = 1;

private String selectedImagePath;
//ADDED
private String filemanagerstring;

public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);

    ((Button) findViewById(R.id.Button01))
    .setOnClickListener(new OnClickListener() {

        public void onClick(View arg0) {

            // in onCreate or any event where your want the user to
            // select a file
            Intent intent = new Intent();
            intent.setType(""image/*"");
            intent.setAction(Intent.ACTION_GET_CONTENT);
            startActivityForResult(Intent.createChooser(intent,
                    ""Select Picture""), SELECT_PICTURE);
        }
    });
}

public void onActivityResult(int requestCode, int resultCode, Intent data) {
    if (resultCode == RESULT_OK) {
        if (requestCode == SELECT_PICTURE) {
            Uri selectedImageUri = data.getData();
            Log.d(""URI VAL"", ""selectedImageUri = "" + selectedImageUri.toString());
            selectedImagePath = getPath(selectedImageUri);

            if(selectedImagePath!=null){         
                // IF LOCAL IMAGE, NO MATTER IF ITS DIRECTLY FROM GALLERY (EXCEPT PICASSA ALBUM),
                // OR OI/ASTRO FILE MANAGER. EVEN DROPBOX IS SUPPORTED BY THIS BECAUSE DROPBOX DOWNLOAD THE IMAGE 
                // IN THIS FORM - file:///storage/emulated/0/Android/data/com.dropbox.android/...
                System.out.println(""local image""); 
            }
            else{
                System.out.println(""picasa image!"");
                loadPicasaImageFromGallery(selectedImageUri);
            }
        }
    }
}


// NEW METHOD FOR PICASA IMAGE LOAD
private void loadPicasaImageFromGallery(final Uri uri) {
    String[] projection = {  MediaColumns.DATA, MediaColumns.DISPLAY_NAME };
    Cursor cursor = getContentResolver().query(uri, projection, null, null, null);
    if(cursor != null) {
        cursor.moveToFirst();

        int columnIndex = cursor.getColumnIndex(MediaColumns.DISPLAY_NAME);
        if (columnIndex != -1) {
            new Thread(new Runnable() {
                // NEW THREAD BECAUSE NETWORK REQUEST WILL BE MADE THAT WILL BE A LONG PROCESS &amp; BLOCK UI
                // IF CALLED IN UI THREAD 
                public void run() {
                    try {
                        Bitmap bitmap = android.provider.MediaStore.Images.Media.getBitmap(getContentResolver(), uri);
                        // THIS IS THE BITMAP IMAGE WE ARE LOOKING FOR.
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
            }).start();
        }
    }
    cursor.close();
}


public String getPath(Uri uri) {
    String[] projection = {  MediaColumns.DATA};
    Cursor cursor = getContentResolver().query(uri, projection, null, null, null);
    if(cursor != null) {
        //HERE YOU WILL GET A NULLPOINTER IF CURSOR IS NULL
        //THIS CAN BE, IF YOU USED OI FILE MANAGER FOR PICKING THE MEDIA
        cursor.moveToFirst();
        int columnIndex = cursor.getColumnIndexOrThrow(MediaColumns.DATA);
        String filePath = cursor.getString(columnIndex);
        cursor.close();
        return filePath;
    }
    else 
        return uri.getPath();               // FOR OI/ASTRO/Dropbox etc
}
</code></pre>

<p>Check it &amp; let me know if there's some issue with it. I have tested it &amp; it works well in every case.</p>

<p>Hope this will help everyone.</p>
"
"5033012","17292014","0","<p>Here's yet another solution, just for kicks.  It's probably not very efficient, but it does cope with both height and width of the text, and with marked-up text.</p>

<pre><code>@Override
protected void onMeasure(final int widthMeasureSpec, final int heightMeasureSpec)
{
    if ((MeasureSpec.getMode(widthMeasureSpec) != MeasureSpec.UNSPECIFIED)
            &amp;&amp; (MeasureSpec.getMode(heightMeasureSpec) != MeasureSpec.UNSPECIFIED)) {

        final float desiredWidth = MeasureSpec.getSize(widthMeasureSpec);
        final float desiredHeight = MeasureSpec.getSize(heightMeasureSpec);

        float textSize = getTextSize();
        float lastScale = Float.NEGATIVE_INFINITY;
        while (textSize &gt; MINIMUM_AUTO_TEXT_SIZE_PX) {
            // Measure how big the textview would like to be with the current text size.
            super.onMeasure(MeasureSpec.UNSPECIFIED, MeasureSpec.UNSPECIFIED);

            // Calculate how much we'd need to scale it to fit the desired size, and
            // apply that scaling to the text size as an estimate of what we need.
            final float widthScale = desiredWidth / getMeasuredWidth();
            final float heightScale = desiredHeight / getMeasuredHeight();
            final float scale = Math.min(widthScale, heightScale);

            // If we don't need to shrink the text, or we don't seem to be converging, we're done.
            if ((scale &gt;= 1f) || (scale &lt;= lastScale)) {
                break;
            }

            // Shrink the text size and keep trying.
            textSize = Math.max((float) Math.floor(scale * textSize), MINIMUM_AUTO_TEXT_SIZE_PX);
            setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize);
            lastScale = scale;
        }
    }
    super.onMeasure(widthMeasureSpec, heightMeasureSpec);
}
</code></pre>
"
"2139134","17306595","2","<p>There are couple of ways by which you can  access variables or object in other classes or Activity.</p>

<p>A. Database </p>

<p>B. shared preferences.</p>

<p>C. Object serialization.</p>

<p>D. A class which can hold common data can be named as Common Utilities it depends on you.</p>

<p>E. Passing data through Intents and Parcelable Interface.</p>

<p>It depend upon your project needs.</p>

<p>A. <strong>Database</strong></p>

<p>SQLite is an Open Source Database which is embedded into Android. SQLite supports standard relational database features like SQL syntax, transactions and prepared statements. </p>

<p>Tutorials -- <a href=""http://www.vogella.com/articles/AndroidSQLite/article.html"" rel=""nofollow"">http://www.vogella.com/articles/AndroidSQLite/article.html</a></p>

<p>B. <strong>Shared Preferences</strong></p>

<p>Suppose you want to store username. So there will be now two thing a <strong>Key</strong> Username, <strong>Value</strong> Value.</p>

<p><strong>How to store</strong></p>

<pre><code> // Create object of SharedPreferences.
 SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(this);
 //now get Editor
 SharedPreferences.Editor editor = sharedPref.edit();
 //put your value
 editor.putString(""userName"", ""stackoverlow"");

 //commits your edits
 editor.commit();
</code></pre>

<p><em>Using putString(),putBoolean(),putInt(),putFloat(),putLong() you can save your desired dtatype.</em></p>

<p><strong>How to fetch</strong></p>

<pre><code>SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(this);
String userName = sharedPref.getString(""userName"", ""Not Available"");
</code></pre>

<p><a href=""http://developer.android.com/reference/android/content/SharedPreferences.html"" rel=""nofollow"">http://developer.android.com/reference/android/content/SharedPreferences.html</a></p>

<p>C. <strong>Object Serialization</strong></p>

<p>Object serlization is used if we want to save an object state to send it over network or you can use it for your purpose also.</p>

<p>Use java beans and store in it as one of his fields and use getters and setter for that</p>

<p>JavaBeans are Java classes that have properties. Think of
properties as private instance variables. Since they're private, the only way
they can be accessed from outside of their class is through methods in the class. The
methods that change a property's value are called setter methods, and the methods
that retrieve a property's value are called getter methods. </p>

<pre><code>public class VariableStorage implements Serializable  {

    private String inString ;

    public String getInString() {
        return inString;
    }

    public void setInString(String inString) {
        this.inString = inString;
    }


}
</code></pre>

<p>Set the variable in you mail method by using</p>

<pre><code>VariableStorage variableStorage = new VariableStorage();
variableStorage.setInString(inString);
</code></pre>

<p>Then use object Serialzation to serialize this object and in your other class deserialize this object.</p>

<p>In serialization an object can be represented as a sequence of bytes that includes the object's data as well as information about the object's type and the types of data stored in the object.</p>

<p>After a serialized object has been written into a file, it can be read from the file and deserialized that is, the type information and bytes that represent the object and its data can be used to recreate the object in memory.</p>

<p>If you want tutorial for this refer this link</p>

<p><a href=""http://javawithswaranga.blogspot.in/2011/08/serialization-in-java.html"" rel=""nofollow"">http://javawithswaranga.blogspot.in/2011/08/serialization-in-java.html</a></p>

<p><a href=""http://stackoverflow.com/questions/15999934/get-variable-in-other-classes/16000005#16000005"">Get variable in other classes</a></p>

<p>D. <strong>CommonUtilities</strong></p>

<p>You can make a class by your self which can contain common data which you frequently need in your project.</p>

<p><strong>Sample</strong></p>

<pre><code>public class CommonUtilities {

    public static String className = ""CommonUtilities"";

}
</code></pre>

<p>E. <strong>Passing Data through Intents</strong></p>

<p>Please refer this tutorial for this option of passing data.</p>

<p><a href=""http://shri.blog.kraya.co.uk/2010/04/26/android-parcel-data-to-pass-between-activities-using-parcelable-classes/"" rel=""nofollow"">http://shri.blog.kraya.co.uk/2010/04/26/android-parcel-data-to-pass-between-activities-using-parcelable-classes/</a></p>
"
"2459916","17364726","1","<p>Apply a shape to your <code>imageView</code> as below:</p>

<pre><code>&lt;shape xmlns:android=""http://schemas.android.com/apk/res/android""
    android:shape=""rectangle"" &gt;
    &lt;solid android:color=""#faf5e6"" /&gt;
    &lt;stroke
        android:width=""1dp""
        android:color=""#808080"" /&gt;
    &lt;corners android:radius=""15dp"" /&gt;
    &lt;padding
        android:bottom=""5dp""
        android:left=""5dp""
        android:right=""5dp""
        android:top=""5dp"" /&gt;
&lt;/shape&gt;
</code></pre>

<p>it may be helpful to you friend.</p>
"
"4605527","17428095","0","<p>This is how it works for me:</p>

<pre><code> DisplayMetrics displaymetrics = new DisplayMetrics();
        getWindowManager().getDefaultDisplay().getMetrics(displaymetrics);
       int  h = displaymetrics.heightPixels;
       float  d = displaymetrics.density;
       int heightInPixels=(int) (h/d);
</code></pre>

<p>You can do the same for the width.</p>
"
"6070805","17443087","9","<hr>

<p>Property in XML</p>

<pre><code>android:lines=""5""
android:inputType=""textPersonName""
</code></pre>
"
"5357455","17589748","1","<p>I've also came across this problem. I wanted to be able to reuse the code in many EditTexts. This is my solution:</p>

<p>Usage :</p>

<pre><code>CurrencyFormat watcher = new CurrencyFormat();
priceEditText.addTextChangedListener(watcher);
</code></pre>

<p>Class:</p>

<pre><code>public static class CurrencyFormat implements TextWatcher {

    public void onTextChanged(CharSequence arg0, int start, int arg2,int arg3) {}

    public void beforeTextChanged(CharSequence arg0, int start,int arg2, int arg3) {}

    public void afterTextChanged(Editable arg0) {
        int length = arg0.length();
        if(length&gt;0){
            if(nrOfDecimal(arg0.toString())&gt;2)
                    arg0.delete(length-1, length);
        }

    }


    private int nrOfDecimal(String nr){
        int len = nr.length();
        int pos = len;
        for(int i=0 ; i&lt;len; i++){
            if(nr.charAt(i)=='.'){
                pos=i+1;
                    break;
            }
        }
        return len-pos;
    }
}
</code></pre>
"
"2973270","17615220","2","<p>Using <strong>pospi's</strong> suggestion and working with the 'tag' property like <strong>Richard</strong> did, i created a custom class that loads my custom fonts and applies them to the views according to their tags.</p>

<p>So basicly, instead of setting the TypeFace in the attribute android:fontFamily you are using the android:tag attritube and set it to one of the defined enums.</p>

<pre><code>public class Fonts {
    private AssetManager mngr;

    public Fonts(Context context) {
        mngr = context.getAssets();
    }
    private enum AssetTypefaces {
        RobotoLight,
        RobotoThin,
        RobotoCondensedBold,
        RobotoCondensedLight,
        RobotoCondensedRegular
    }

    private Typeface getTypeface(AssetTypefaces font) {
        Typeface tf = null;
        switch (font) {
            case RobotoLight:
                tf = Typeface.createFromAsset(mngr,""fonts/Roboto-Light.ttf"");
                break;
            case RobotoThin:
                tf = Typeface.createFromAsset(mngr,""fonts/Roboto-Thin.ttf"");
                break;
            case RobotoCondensedBold:
                tf = Typeface.createFromAsset(mngr,""fonts/RobotoCondensed-Bold.ttf"");
                break;
            case RobotoCondensedLight:
                tf = Typeface.createFromAsset(mngr,""fonts/RobotoCondensed-Light.ttf"");
                break;
            case RobotoCondensedRegular:
                tf = Typeface.createFromAsset(mngr,""fonts/RobotoCondensed-Regular.ttf"");
                break;
            default:
                tf = Typeface.DEFAULT;
                break;
        }
        return tf;
    }
    public void setupLayoutTypefaces(View v) {
        try {
            if (v instanceof ViewGroup) {
                ViewGroup vg = (ViewGroup) v;
                for (int i = 0; i &lt; vg.getChildCount(); i++) {
                    View child = vg.getChildAt(i);
                    setupLayoutTypefaces(child);
                }
            } else if (v instanceof TextView) {
                if (v.getTag().toString().equals(AssetTypefaces.RobotoLight.toString())){
                    ((TextView)v).setTypeface(getTypeface(AssetTypefaces.RobotoLight));
                }else if (v.getTag().toString().equals(AssetTypefaces.RobotoCondensedRegular.toString())) {
                    ((TextView)v).setTypeface(getTypeface(AssetTypefaces.RobotoCondensedRegular));
                }else if (v.getTag().toString().equals(AssetTypefaces.RobotoCondensedBold.toString())) {
                    ((TextView)v).setTypeface(getTypeface(AssetTypefaces.RobotoCondensedBold));
                }else if (v.getTag().toString().equals(AssetTypefaces.RobotoCondensedLight.toString())) {
                    ((TextView)v).setTypeface(getTypeface(AssetTypefaces.RobotoCondensedLight));
                }else if (v.getTag().toString().equals(AssetTypefaces.RobotoThin.toString())) {
                    ((TextView)v).setTypeface(getTypeface(AssetTypefaces.RobotoThin));
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            // ignore
        }
    }
}
</code></pre>

<p>In your Activity or Fragment you just call</p>

<pre><code>Fonts fonts = new Fonts(getActivity());
fonts.setupLayoutTypefaces(mainLayout);
</code></pre>
"
"6343166","17731654","6","<p>Top answer of @spektom works perfect. Thanks.</p>

<p>If you are writing the <code>AsyncTask</code> inline and not extending as a Class, and on top of this, if there is a need to get a response out of the <code>AsyncTask</code>, one can use the <code>get()</code> method as below.</p>

<pre><code>RSSFeed feed = new RetreiveFeedTask().execute(urlToRssFeed).get();
</code></pre>

<p>(from his example)</p>
"
"3495890","17765520","9","<p>There are <em>plenty</em> of situations where it makes a lot of sense to have ListView's in a ScrollView.</p>

<p>Here's code based on DougW's suggestion... works in a fragment, takes less memory.</p>

<pre><code>public static void setListViewHeightBasedOnChildren(ListView listView) {
    ListAdapter listAdapter = listView.getAdapter();
    if (listAdapter == null) {
        return;
    }
    int desiredWidth = MeasureSpec.makeMeasureSpec(listView.getWidth(), MeasureSpec.AT_MOST);
    int totalHeight = 0;
    View view = null;
    for (int i = 0; i &lt; listAdapter.getCount(); i++) {
        view = listAdapter.getView(i, view, listView);
        if (i == 0) {
            view.setLayoutParams(new ViewGroup.LayoutParams(desiredWidth, LayoutParams.WRAP_CONTENT));
        }
        view.measure(desiredWidth, MeasureSpec.UNSPECIFIED);
        totalHeight += view.getMeasuredHeight();
    }
    ViewGroup.LayoutParams params = listView.getLayoutParams();
    params.height = totalHeight + (listView.getDividerHeight() * (listAdapter.getCount() - 1));
    listView.setLayoutParams(params);
    listView.requestLayout();
}
</code></pre>

<p>call setListViewHeightBasedOnChildren(listview) on each embedded listview.</p>
"
"5033012","17782522","38","<p><strong>UPDATE:</strong> Following code  also fulfills the requirement of an <strong>ideal</strong>  AutoScaleTextView as described here : <a href=""http://stackoverflow.com/questions/16017165/auto-fit-textview-for-android/"">Auto-fit TextView for Android</a> and is marked as winner.</p>

<p><strong>UPDATE 2:</strong> Support of maxlines added, now works fine before API level 16.</p>

<p><strong>Update 3:</strong> Support for <code>android:drawableLeft</code>, <code>android:drawableRight</code>, <code>android:drawableTop</code> and <code>android:drawableBottom</code> tags added, thanks to MartinH's simple fix <a href=""http://stackoverflow.com/a/19578517/1112882"">here</a>.</p>

<hr>

<p>My requirements were little bit different. I needed an efficient way to adjust size because I was animating an integer from, may be 0 to ~4000 in <code>TextView</code> in 2 seconds and I wanted to adjust the size accordingly. My solution works bit differently. Here is what final result looks like: </p>

<p><img src=""http://i.stack.imgur.com/x9z0I.png"" alt=""enter image description here""></p>

<p>and the code that produced it:</p>

<pre><code>&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    android:layout_width=""wrap_content""
    android:layout_height=""wrap_content""
    android:orientation=""vertical""
    android:padding=""16dp"" &gt;

    &lt;com.vj.widgets.AutoResizeTextView
        android:layout_width=""match_parent""
        android:layout_height=""100dp""
        android:ellipsize=""none""
        android:maxLines=""2""
        android:text=""Auto Resized Text, max 2 lines""
        android:textSize=""100sp"" /&gt; &lt;!-- maximum size --&gt;

    &lt;com.vj.widgets.AutoResizeTextView
        android:layout_width=""match_parent""
        android:layout_height=""100dp""
        android:ellipsize=""none""
        android:gravity=""center""
        android:maxLines=""1""
        android:text=""Auto Resized Text, max 1 line""
        android:textSize=""100sp"" /&gt; &lt;!-- maximum size --&gt;

    &lt;com.vj.widgets.AutoResizeTextView
        android:layout_width=""match_parent""
        android:layout_height=""wrap_content""
        android:text=""Auto Resized Text""
        android:textSize=""500sp"" /&gt; &lt;!-- maximum size --&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>And finally the java code:</p>

<pre><code>import android.annotation.TargetApi;
import android.content.Context;
import android.content.res.Resources;
import android.graphics.RectF;
import android.os.Build;
import android.text.Layout.Alignment;
import android.text.StaticLayout;
import android.text.TextPaint;
import android.util.AttributeSet;
import android.util.SparseIntArray;
import android.util.TypedValue;
import android.widget.TextView;

public class AutoResizeTextView extends TextView {
private interface SizeTester {
    /**
     * 
     * @param suggestedSize
     *            Size of text to be tested
     * @param availableSpace
     *            available space in which text must fit
     * @return an integer &lt; 0 if after applying {@code suggestedSize} to
     *         text, it takes less space than {@code availableSpace}, &gt; 0
     *         otherwise
     */
    public int onTestSize(int suggestedSize, RectF availableSpace);
}

private RectF mTextRect = new RectF();

private RectF mAvailableSpaceRect;

private SparseIntArray mTextCachedSizes;

private TextPaint mPaint;

private float mMaxTextSize;

private float mSpacingMult = 1.0f;

private float mSpacingAdd = 0.0f;

private float mMinTextSize = 20;

private int mWidthLimit;

private static final int NO_LINE_LIMIT = -1;
private int mMaxLines;

private boolean mEnableSizeCache = true;
private boolean mInitiallized;

public AutoResizeTextView(Context context) {
    super(context);
    initialize();
}

public AutoResizeTextView(Context context, AttributeSet attrs) {
    super(context, attrs);
    initialize();
}

public AutoResizeTextView(Context context, AttributeSet attrs, int defStyle) {
    super(context, attrs, defStyle);
    initialize();
}

private void initialize() {
    mPaint = new TextPaint(getPaint());
    mMaxTextSize = getTextSize();
    mAvailableSpaceRect = new RectF();
    mTextCachedSizes = new SparseIntArray();
    if (mMaxLines == 0) {
        // no value was assigned during construction
        mMaxLines = NO_LINE_LIMIT;
    }
    mInitiallized = true;
}

@Override
public void setText(final CharSequence text, BufferType type) {
    super.setText(text, type);
    adjustTextSize(text.toString());
}

@Override
public void setTextSize(float size) {
    mMaxTextSize = size;
    mTextCachedSizes.clear();
    adjustTextSize(getText().toString());
}

@Override
public void setMaxLines(int maxlines) {
    super.setMaxLines(maxlines);
    mMaxLines = maxlines;
    reAdjust();
}

public int getMaxLines() {
    return mMaxLines;
}

@Override
public void setSingleLine() {
    super.setSingleLine();
    mMaxLines = 1;
    reAdjust();
}

@Override
public void setSingleLine(boolean singleLine) {
    super.setSingleLine(singleLine);
    if (singleLine) {
        mMaxLines = 1;
    } else {
        mMaxLines = NO_LINE_LIMIT;
    }
    reAdjust();
}

@Override
public void setLines(int lines) {
    super.setLines(lines);
    mMaxLines = lines;
    reAdjust();
}

@Override
public void setTextSize(int unit, float size) {
    Context c = getContext();
    Resources r;

    if (c == null)
        r = Resources.getSystem();
    else
        r = c.getResources();
    mMaxTextSize = TypedValue.applyDimension(unit, size,
            r.getDisplayMetrics());
    mTextCachedSizes.clear();
    adjustTextSize(getText().toString());
}

@Override
public void setLineSpacing(float add, float mult) {
    super.setLineSpacing(add, mult);
    mSpacingMult = mult;
    mSpacingAdd = add;
}

/**
 * Set the lower text size limit and invalidate the view
 * 
 * @param minTextSize
 */
public void setMinTextSize(float minTextSize) {
    mMinTextSize = minTextSize;
    reAdjust();
}

private void reAdjust() {
    adjustTextSize(getText().toString());
}

private void adjustTextSize(String string) {
    if (!mInitiallized) {
        return;
    }
    int startSize = (int) mMinTextSize;
    int heightLimit = getMeasuredHeight() - getCompoundPaddingBottom()
        - getCompoundPaddingTop();
    mWidthLimit = getMeasuredWidth() - getCompoundPaddingLeft()
        - getCompoundPaddingRight();
    mAvailableSpaceRect.right = mWidthLimit;
    mAvailableSpaceRect.bottom = heightLimit;
    super.setTextSize(
            TypedValue.COMPLEX_UNIT_PX,
            efficientTextSizeSearch(startSize, (int) mMaxTextSize,
                    mSizeTester, mAvailableSpaceRect));
}

private final SizeTester mSizeTester = new SizeTester() {
    @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
    @Override
    public int onTestSize(int suggestedSize, RectF availableSPace) {
        mPaint.setTextSize(suggestedSize);
        String text = getText().toString();
        boolean singleline = getMaxLines() == 1;
        if (singleline) {
            mTextRect.bottom = mPaint.getFontSpacing();
            mTextRect.right = mPaint.measureText(text);
        } else {
            StaticLayout layout = new StaticLayout(text, mPaint,
                    mWidthLimit, Alignment.ALIGN_NORMAL, mSpacingMult,
                    mSpacingAdd, true);
            // return early if we have more lines
            if (getMaxLines() != NO_LINE_LIMIT
                    &amp;&amp; layout.getLineCount() &gt; getMaxLines()) {
                return 1;
            }
            mTextRect.bottom = layout.getHeight();
            int maxWidth = -1;
            for (int i = 0; i &lt; layout.getLineCount(); i++) {
                if (maxWidth &lt; layout.getLineWidth(i)) {
                    maxWidth = (int) layout.getLineWidth(i);
                }
            }
            mTextRect.right = maxWidth;
        }

        mTextRect.offsetTo(0, 0);
        if (availableSPace.contains(mTextRect)) {
            // may be too small, don't worry we will find the best match
            return -1;
        } else {
            // too big
            return 1;
        }
    }
};

/**
 * Enables or disables size caching, enabling it will improve performance
 * where you are animating a value inside TextView. This stores the font
 * size against getText().length() Be careful though while enabling it as 0
 * takes more space than 1 on some fonts and so on.
 * 
 * @param enable
 *            enable font size caching
 */
public void enableSizeCache(boolean enable) {
    mEnableSizeCache = enable;
    mTextCachedSizes.clear();
    adjustTextSize(getText().toString());
}

private int efficientTextSizeSearch(int start, int end,
        SizeTester sizeTester, RectF availableSpace) {
    if (!mEnableSizeCache) {
        return binarySearch(start, end, sizeTester, availableSpace);
    }
    String text = getText().toString();
    int key = text == null ? 0 : text.length();
    int size = mTextCachedSizes.get(key);
    if (size != 0) {
        return size;
    }
    size = binarySearch(start, end, sizeTester, availableSpace);
    mTextCachedSizes.put(key, size);
    return size;
}

private static int binarySearch(int start, int end, SizeTester sizeTester,
        RectF availableSpace) {
    int lastBest = start;
    int lo = start;
    int hi = end - 1;
    int mid = 0;
    while (lo &lt;= hi) {
        mid = (lo + hi) &gt;&gt;&gt; 1;
        int midValCmp = sizeTester.onTestSize(mid, availableSpace);
        if (midValCmp &lt; 0) {
            lastBest = lo;
            lo = mid + 1;
        } else if (midValCmp &gt; 0) {
            hi = mid - 1;
            lastBest = hi;
        } else {
            return mid;
        }
    }
    // make sure to return last best
    // this is what should always be returned
    return lastBest;

}

@Override
protected void onTextChanged(final CharSequence text, final int start,
        final int before, final int after) {
    super.onTextChanged(text, start, before, after);
    reAdjust();
}

@Override
protected void onSizeChanged(int width, int height, int oldwidth,
        int oldheight) {
    mTextCachedSizes.clear();
    super.onSizeChanged(width, height, oldwidth, oldheight);
    if (width != oldwidth || height != oldheight) {
        reAdjust();
    }
}
}
</code></pre>
"
"7723964","17832632","6","<p>I have implemented a solution for:</p>

<ul>
<li>Dynamic fragment replacement inside the tab</li>
<li>Maintenance of the history per tab</li>
<li>Working with orientation changes</li>
</ul>

<p>The tricks to achieve this are the following:</p>

<ul>
<li>Use the notifyDataSetChanged() method to apply the fragment replacement</li>
<li>Use the fragment manager only for back stage and no for fragament replacement</li>
<li>Maintain the history using the memento pattern (stack)</li>
</ul>

<p>The adapter code is the following:</p>

<pre><code>public class TabsAdapter extends FragmentStatePagerAdapter implements ActionBar.TabListener, ViewPager.OnPageChangeListener {

/** The sherlock fragment activity. */
private final SherlockFragmentActivity mActivity;

/** The action bar. */
private final ActionBar mActionBar;

/** The pager. */
private final ViewPager mPager;

/** The tabs. */
private List&lt;TabInfo&gt; mTabs = new LinkedList&lt;TabInfo&gt;();

/** The total number of tabs. */
private int TOTAL_TABS;

private Map&lt;Integer, Stack&lt;TabInfo&gt;&gt; history = new HashMap&lt;Integer, Stack&lt;TabInfo&gt;&gt;();

/**
 * Creates a new instance.
 *
 * @param activity the activity
 * @param pager    the pager
 */
public TabsAdapter(SherlockFragmentActivity activity, ViewPager pager) {
    super(activity.getSupportFragmentManager());
    activity.getSupportFragmentManager();
    this.mActivity = activity;
    this.mActionBar = activity.getSupportActionBar();
    this.mPager = pager;
    mActionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);
}

/**
 * Adds the tab.
 *
 * @param image         the image
 * @param fragmentClass the class
 * @param args          the arguments
 */
public void addTab(final Drawable image, final Class fragmentClass, final Bundle args) {
    final TabInfo tabInfo = new TabInfo(fragmentClass, args);
    final ActionBar.Tab tab = mActionBar.newTab();
    tab.setTabListener(this);
    tab.setTag(tabInfo);
    tab.setIcon(image);

    mTabs.add(tabInfo);
    mActionBar.addTab(tab);

    notifyDataSetChanged();
}

@Override
public Fragment getItem(final int position) {
    final TabInfo tabInfo = mTabs.get(position);
    return Fragment.instantiate(mActivity, tabInfo.fragmentClass.getName(), tabInfo.args);
}

@Override
public int getItemPosition(final Object object) {
    /* Get the current position. */
    int position = mActionBar.getSelectedTab().getPosition();

    /* The default value. */
    int pos = POSITION_NONE;
    if (history.get(position).isEmpty()) {
        return POSITION_NONE;
    }

    /* Checks if the object exists in current history. */
    for (Stack&lt;TabInfo&gt; stack : history.values()) {
        TabInfo c = stack.peek();
        if (c.fragmentClass.getName().equals(object.getClass().getName())) {
            pos = POSITION_UNCHANGED;
            break;
        }
    }
    return pos;
}

@Override
public int getCount() {
    return mTabs.size();
}

@Override
public void onPageScrollStateChanged(int arg0) {
}

@Override
public void onPageScrolled(int arg0, float arg1, int arg2) {
}

@Override
public void onPageSelected(int position) {
    mActionBar.setSelectedNavigationItem(position);
}

@Override
public void onTabSelected(final ActionBar.Tab tab, final FragmentTransaction ft) {
    TabInfo tabInfo = (TabInfo) tab.getTag();
    for (int i = 0; i &lt; mTabs.size(); i++) {
        if (mTabs.get(i).equals(tabInfo)) {
            mPager.setCurrentItem(i);
        }
    }
}

@Override
public void onTabUnselected(ActionBar.Tab tab, FragmentTransaction ft) {
}

@Override
public void onTabReselected(ActionBar.Tab tab, FragmentTransaction ft) {
}

public void replace(final int position, final Class fragmentClass, final Bundle args) {
    /* Save the fragment to the history. */
    mActivity.getSupportFragmentManager().beginTransaction().addToBackStack(null).commit();

    /* Update the tabs. */
    updateTabs(new TabInfo(fragmentClass, args), position);

    /* Updates the history. */
    history.get(position).push(new TabInfo(mTabs.get(position).fragmentClass, mTabs.get(position).args));

    notifyDataSetChanged();
}

/**
 * Updates the tabs.
 *
 * @param tabInfo
 *          the new tab info
 * @param position
 *          the position
 */
private void updateTabs(final TabInfo tabInfo, final int position) {
    mTabs.remove(position);
    mTabs.add(position, tabInfo);
    mActionBar.getTabAt(position).setTag(tabInfo);
}

/**
 * Creates the history using the current state.
 */
public void createHistory() {
    int position = 0;
    TOTAL_TABS = mTabs.size();
    for (TabInfo mTab : mTabs) {
        if (history.get(position) == null) {
            history.put(position, new Stack&lt;TabInfo&gt;());
        }
        history.get(position).push(new TabInfo(mTab.fragmentClass, mTab.args));
        position++;
    }
}

/**
 * Called on back
 */
public void back() {
    int position = mActionBar.getSelectedTab().getPosition();
    if (!historyIsEmpty(position)) {
        /* In case there is not any other item in the history, then finalize the activity. */
        if (isLastItemInHistory(position)) {
            mActivity.finish();
        }
        final TabInfo currentTabInfo = getPrevious(position);
        mTabs.clear();
        for (int i = 0; i &lt; TOTAL_TABS; i++) {
            if (i == position) {
                mTabs.add(new TabInfo(currentTabInfo.fragmentClass, currentTabInfo.args));
            } else {
                TabInfo otherTabInfo = history.get(i).peek();
                mTabs.add(new TabInfo(otherTabInfo.fragmentClass, otherTabInfo.args));
            }
        }
    }
    mActionBar.selectTab(mActionBar.getTabAt(position));
    notifyDataSetChanged();
}

/**
 * Returns if the history is empty.
 *
 * @param position
 *          the position
 * @return  the flag if empty
 */
private boolean historyIsEmpty(final int position) {
    return history == null || history.isEmpty() || history.get(position).isEmpty();
}

private boolean isLastItemInHistory(final int position) {
    return history.get(position).size() == 1;
}

/**
 * Returns the previous state by the position provided.
 *
 * @param position
 *          the position
 * @return  the tab info
 */
private TabInfo getPrevious(final int position) {
    TabInfo currentTabInfo = history.get(position).pop();
    if (!history.get(position).isEmpty()) {
        currentTabInfo = history.get(position).peek();
    }
    return currentTabInfo;
}

/** The tab info class */
private static class TabInfo {

    /** The fragment class. */
    public Class fragmentClass;

    /** The args.*/
    public Bundle args;

    /**
     * Creates a new instance.
     *
     * @param fragmentClass
     *          the fragment class
     * @param args
     *          the args
     */
    public TabInfo(Class fragmentClass, Bundle args) {
        this.fragmentClass = fragmentClass;
        this.args = args;
    }

    @Override
    public boolean equals(final Object o) {
        return this.fragmentClass.getName().equals(o.getClass().getName());
    }

    @Override
    public int hashCode() {
        return fragmentClass.getName() != null ? fragmentClass.getName().hashCode() : 0;
    }

    @Override
    public String toString() {
        return ""TabInfo{"" +
                ""fragmentClass="" + fragmentClass +
                '}';
    }
}
</code></pre>

<p>The very first time you add all tabs, we need to call the method createHistory(), to create the initial history</p>

<pre><code>public void createHistory() {
    int position = 0;
    TOTAL_TABS = mTabs.size();
    for (TabInfo mTab : mTabs) {
        if (history.get(position) == null) {
            history.put(position, new Stack&lt;TabInfo&gt;());
        }
        history.get(position).push(new TabInfo(mTab.fragmentClass, mTab.args));
        position++;
    }
}
</code></pre>

<p>Every time you want to replace a fragment to a specific tab you call:
replace(final int position, final Class fragmentClass, final Bundle args)</p>

<pre><code>/* Save the fragment to the history. */
    mActivity.getSupportFragmentManager().beginTransaction().addToBackStack(null).commit();

    /* Update the tabs. */
    updateTabs(new TabInfo(fragmentClass, args), position);

    /* Updates the history. */
    history.get(position).push(new TabInfo(mTabs.get(position).fragmentClass, mTabs.get(position).args));

    notifyDataSetChanged();
</code></pre>

<p>On back pressed you need to call the back() method:</p>

<pre><code>public void back() {
    int position = mActionBar.getSelectedTab().getPosition();
    if (!historyIsEmpty(position)) {
        /* In case there is not any other item in the history, then finalize the activity. */
        if (isLastItemInHistory(position)) {
            mActivity.finish();
        }
        final TabInfo currentTabInfo = getPrevious(position);
        mTabs.clear();
        for (int i = 0; i &lt; TOTAL_TABS; i++) {
            if (i == position) {
                mTabs.add(new TabInfo(currentTabInfo.fragmentClass, currentTabInfo.args));
            } else {
                TabInfo otherTabInfo = history.get(i).peek();
                mTabs.add(new TabInfo(otherTabInfo.fragmentClass, otherTabInfo.args));
            }
        }
    }
    mActionBar.selectTab(mActionBar.getTabAt(position));
    notifyDataSetChanged();
}
</code></pre>

<p>The solution works with sherlock action bar and with swipe gesture.</p>
"
"5832368","17867711","-1","<p>The smart solution is to create WebView and get User-Agent from him. Then check if he contain ""Mobile"".</p>

<pre><code>public static boolean isTablet(Context context) {
    String user_agent = new WebView(context).getSettings().getUserAgentString();
    boolean mobile = user_agent.contains(""Mobile"");
    return ((context.getResources().getConfiguration().screenLayout
        &amp; Configuration.SCREENLAYOUT_SIZE_MASK)
        &gt;= Configuration.SCREENLAYOUT_SIZE_LARGE)&amp;&amp;(!mobile);
}
</code></pre>
"
"4605527","17880012","29","<p>Without <code>Context</code>, elegant static methods:</p>

<pre><code>public static int dpToPx(int dp)
{
    return (int) (dp * Resources.getSystem().getDisplayMetrics().density);
}

public static int pxToDp(int px)
{
    return (int) (px / Resources.getSystem().getDisplayMetrics().density);
}
</code></pre>
"
"6176391","17882013","2","<p>Just create an empty view at the top of linearlayout</p>

<pre><code>&lt;View android:layout_width=""fill_parent"" android:id=""@+id/focus_view"" android:layout_height=""0dp"" android:focusable=""true"" android:focusableInTouchMode=""true""&gt;&lt;requestFocus/&gt;&lt;/View&gt;
</code></pre>

<p>Single line solves the problem</p>
"
"3331527","17922680","-2","<p>Resize the bitmap using the following code</p>

<pre><code>    public static Bitmap decodeFile(File file, int reqWidth, int reqHeight){

    // First decode with inJustDecodeBounds=true to check dimensions
    final BitmapFactory.Options options = new BitmapFactory.Options();
    options.inJustDecodeBounds = true;        
    BitmapFactory.decodeFile(file.getPath(), options);

    // Calculate inSampleSize
    options.inSampleSize = calculateInSampleSize(options, reqWidth, reqHeight);

    // Decode bitmap with inSampleSize set
    options.inJustDecodeBounds = false;
    return BitmapFactory.decodeFile(file.getPath(), options);
   }

    private static int calculateInSampleSize(
    BitmapFactory.Options options, int reqWidth, int reqHeight) {
    // Raw height and width of image
    final int height = options.outHeight;
    final int width = options.outWidth;
    int inSampleSize = 1;

    if (height &gt; reqHeight || width &gt; reqWidth) {

        // Calculate ratios of height and width to requested height and width
        final int heightRatio = Math.round((float) height / (float) reqHeight);
        final int widthRatio = Math.round((float) width / (float) reqWidth);

        // Choose the smallest ratio as inSampleSize value, this will guarantee
        // a final image with both dimensions larger than or equal to the
        // requested height and width.
        inSampleSize = heightRatio &lt; widthRatio ? heightRatio : widthRatio;
     }

     return inSampleSize;
   }    
</code></pre>

<p>The same is also explained in the following tip/trick</p>

<p><a href=""http://www.codeproject.com/Tips/625810/Android-Image-Operations-Using-BitmapFactory"" rel=""nofollow"">http://www.codeproject.com/Tips/625810/Android-Image-Operations-Using-BitmapFactory</a></p>
"
"5033012","17974541","0","<p>Here is the approach I take. It's very simple. It uses successive approximation to zero in on the fontsize and can generally have it figured out in less than 10 iterations. Just replace ""activityWidth"" with the width of whatever view you are using to display the text in. In my example, it's set as a private field to the screen's width. The inital fontsize of 198 is only set in the event the method generates an exception (which really should never happen):</p>

<pre><code>  private float GetFontSizeForScreenWidth(String text)
  {
    float fontsize = 198;

    try
    {
      Paint paint = new Paint(Paint.ANTI_ALIAS_FLAG);
      paint.setColor(Color.RED);
      Typeface typeface = Typeface.create(""Helvetica"", Typeface.BOLD);
      paint.setTypeface(typeface);
      paint.setTextAlign(Align.CENTER);

      int lowVal = 0;
      int highVal = 2000;
      int currentVal = highVal;

      /*
       * Successively approximate the screen size until it is 
       * within 2 pixels of the maximum screen width. Generally
       * this will get you to the closest font size within about 10
       * iterations.
       */

      do
      {
        paint.setTextSize(currentVal);
        float textWidth = paint.measureText(text);

        float diff = activityWidth - textWidth;

        if ((diff &gt;= 0) &amp;&amp; (diff &lt;= 2))
        {
          fontsize = paint.getTextSize();
          return fontsize;
        }

        if (textWidth &gt; activityWidth)
          highVal = currentVal;
        else if (textWidth &lt; activityWidth)
          lowVal = currentVal;
        else
        {
          fontsize = paint.getTextSize();
          return fontsize;
        }

        currentVal = (highVal - lowVal) / 2 + lowVal;

      } while (true);      
    }
    catch (Exception ex)
    {
      return fontsize;
    }
  }
</code></pre>
"
"3495890","18046750","3","<p>This is a combination of the answers by DougW, Good Guy Greg, and Paul. I found it was all needed when trying to use this with a custom listview adapter and non-standard list items otherwise the listview crashed the application (also crashed with the answer by Nex):</p>

<pre><code>public void setListViewHeightBasedOnChildren(ListView listView) {
        ListAdapter listAdapter = listView.getAdapter();
        if (listAdapter == null) {
            return;
        }

        int totalHeight = listView.getPaddingTop() + listView.getPaddingBottom();
        for (int i = 0; i &lt; listAdapter.getCount(); i++) {
            View listItem = listAdapter.getView(i, null, listView);
            if (listItem instanceof ViewGroup)
                listItem.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));
            listItem.measure(0, 0);
            totalHeight += listItem.getMeasuredHeight();
        }

        ViewGroup.LayoutParams params = listView.getLayoutParams();
        params.height = totalHeight + (listView.getDividerHeight() * (listAdapter.getCount() - 1));
        listView.setLayoutParams(params);
    }
</code></pre>
"
"2471935","18052133","3","<p>This will help you...</p>

<p>Define imageview and load image into it .....</p>

<pre><code>Imageview i = (ImageView) vv.findViewById(R.id.img_country);
i.setImageBitmap(DownloadFullFromUrl(url));
</code></pre>

<p>Then Define this method : </p>

<pre><code>    public Bitmap DownloadFullFromUrl(String imageFullURL) {
    Bitmap bm = null;
    try {
        URL url = new URL(imageFullURL);
        URLConnection ucon = url.openConnection();
        InputStream is = ucon.getInputStream();
        BufferedInputStream bis = new BufferedInputStream(is);
        ByteArrayBuffer baf = new ByteArrayBuffer(50);
        int current = 0;
        while ((current = bis.read()) != -1) {
            baf.append((byte) current);
        }
        bm = BitmapFactory.decodeByteArray(baf.toByteArray(), 0,
                baf.toByteArray().length);
    } catch (IOException e) {
        Log.d(""ImageManager"", ""Error: "" + e);
    }
    return bm;
}
</code></pre>
"
"2217753","18076820","0","<p>The best tutorial on this can be found <a href=""http://www.oneminuteinfo.com/2012/12/android-set-selection-color-in-listview.html"" rel=""nofollow"">here</a>. </p>

<p>Key sections:</p>

<ol>
<li>Surely call <code>view.setSelected(true)</code> in <code>onItemClick</code>, otherwise the you can't see the selected item background</li>
<li>Preserve the order of states in your selector otherwise you'll see unpredictable behavior in background colors (<code>state_selected</code> followed by <code>state_pressed</code>)</li>
</ol>
"
"2736389","18165425","7","<p><em>I am using parcelable to send data from one activity to another acivity. Here is my code thats works fine for in my project.</em></p>

<pre><code>public class Channel implements Serializable, Parcelable {

/**  */
private static final long serialVersionUID = 4861597073026532544L;

private String cid;
private String uniqueID;
private String name;
private String logo;
private String thumb;


/**
 * @return the cid
 */
public String getCid() {
    return cid;
}

/**
 * @param cid
 *            the cid to set
 */
public void setCid(String cid) {
    this.cid = cid;
}

/**
 * @return the uniqueID
 */
public String getUniqueID() {
    return uniqueID;
}

/**
 * @param uniqueID
 *            the uniqueID to set
 */
public void setUniqueID(String uniqueID) {
    this.uniqueID = uniqueID;
}

/**
 * @return the name
 */
public String getName() {
    return name;
}

/**
 * @param name
 *            the name to set
 */
public void setName(String name) {
    this.name = name;
}

/**
 * @return the logo
 */
public String getLogo() {
    return logo;
}

/**
 * @param logo
 *            the logo to set
 */
public void setLogo(String logo) {
    this.logo = logo;
}

/**
 * @return the thumb
 */
public String getThumb() {
    return thumb;
}

/**
 * @param thumb
 *            the thumb to set
 */
public void setThumb(String thumb) {
    this.thumb = thumb;
}


public Channel(Parcel in) {
    super();
    readFromParcel(in);
}

public static final Parcelable.Creator&lt;Channel&gt; CREATOR = new Parcelable.Creator&lt;Channel&gt;() {
    public Channel createFromParcel(Parcel in) {
        return new Channel(in);
    }

    public Channel[] newArray(int size) {

        return new Channel[size];
    }

};

public void readFromParcel(Parcel in) {
    String[] result = new String[5];
    in.readStringArray(result);

    this.cid = result[0];
    this.uniqueID = result[1];
    this.name = result[2];
    this.logo = result[3];
    this.thumb = result[4];


}

public int describeContents() {
    return 0;
}

public void writeToParcel(Parcel dest, int flags) {
    dest.writeStringArray(new String[] { this.cid, this.uniqueID,
            this.name, this.logo, this.thumb});

}}
</code></pre>

<p><em>In activityA use like this.</em></p>

<pre><code>Bundle bundle = new Bundle();
bundle.putParcelableArrayList(""channel"",(ArrayList&lt;Channel&gt;) channels);
Intent intent = new Intent(ActivityA.this,ActivityB.class);
intent.putExtras(bundle);
startActivity(intent);
</code></pre>

<p><em>In ActivityB use like this to get data.</em></p>

<pre><code>Bundle getBundle = this.getIntent().getExtras();
List&lt;Channel&gt; channelsList = getBundle.getParcelableArrayList(""channel"");
</code></pre>
"
"5832368","18245851","0","<p>I know this is not directly an answer to your question, but other answers here give a good idea of how to identify screen size. You wrote in your question that you got problems with the tilting and this just happened to me as well.</p>

<p>If you run the gyroscope (or rotation sensor) on a smartphone the x- and y-axis can be differently defined than on a tablet, according to the default orientation of that device (e.g. Samsung GS2 is default portrait, Samsung GT-7310 is default landscape, new Google Nexus 7 is default portrait, although it is a tablet!).</p>

<p>Now if you want to use Gyroscope you might end up with a working solution for smartphones, but axis-confusion on some tablets or the other way round.</p>

<p>If you use one of the solutions from above to only go for screen-size and then apply</p>

<pre><code>SensorManager.remapCoordinateSystem(inputRotationMatrix, SensorManager.AXIS_X, 
    SensorManager.AXIS_Y, outputRotationMatrix);
</code></pre>

<p>to flip the axis if it has a large or xlarge screen-size this might work in 90% of the cases but for example on the Nexus 7 it will cause troubles (because it has default portrait orientation and a large screen-size).</p>

<p>The simplest way to fix this is provided in the RotationVectorSample that ships with the API demos by setting the sceenOrientation to <code>nosensor</code> in your manifest:</p>

<pre><code>&lt;activity
    ...
    android:screenOrientation=""nosensor""&gt;
...
&lt;/activity&gt;
</code></pre>
"
"5495225","18302284","0","<p>I have solved the same problem with this code:</p>

<pre><code>contacts_search.addTextChangedListener(new TextWatcher() {

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                // TODO Auto-generated method stub
                contacts_search.dismissDropDown();      
            }

            @Override
            public void beforeTextChanged(CharSequence s, int start, int count,
                    int after) {
                // TODO Auto-generated method stub
                contacts_search.dismissDropDown();
            }

            @Override
            public void afterTextChanged(Editable s) {
                // TODO Auto-generated method stub
                contacts_search.dismissDropDown();
            }
        });
</code></pre>

<p>Here, contacts_search is my AutoCompleteTextView</p>
"
"6290531","18328031","1","<pre><code>EditText txtUserID = (EditText) findViewById(R.id.txtUserID);

String UserID = txtUserID.getText().toString();

if (UserID.equals("""")) 

{
    Log.d(""value"",""null"");
}
</code></pre>

<p>You will see the message in LogCat....</p>
"
"6290531","18369196","3","<p>Why not just disable the button if EditText is empty?  IMHO This looks more professional:</p>

<pre><code>        final EditText txtFrecuencia = (EditText) findViewById(R.id.txtFrecuencia);  
        final ToggleButton toggle = (ToggleButton) findViewById(R.id.toggleStartStop);
        txtFrecuencia.addTextChangedListener(new TextWatcher() {
        @Override
        public void afterTextChanged(Editable s) {
            toggle.setEnabled(txtFrecuencia.length() &gt; 0);
        }

        @Override
        public void beforeTextChanged(CharSequence s, int start, int count,
                int after) {
        }

        @Override
        public void onTextChanged(CharSequence s, int start, int before,
                int count) {

        }
       });
</code></pre>
"
"6070805","18391338","0","<p>For a uri you could use</p>

<pre><code>                android:inputType=""textUri""
                android:lines=""1""
                android:maxLength=""128""
</code></pre>

<p>Otherwise android:inputType=""textPersonName"" as mentioned above works for other EditText such user name, etc.</p>
"
"2403632","18647243","6","<pre><code>&lt;activity
    ...
    android:windowSoftInputMode=""stateVisible"" &gt;
&lt;/activity&gt;
</code></pre>

<p>or</p>

<pre><code>getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE);
</code></pre>
"
"5832368","18654524","1","<p>Well, the best solution that worked for me is quite simple:</p>

<pre><code>private boolean isTabletDevice(Resources resources) {   
    int screenLayout = resources.getConfiguration().screenLayout &amp; Configuration.SCREENLAYOUT_SIZE_MASK;
    boolean isScreenLarge = (screenLayout == Configuration.SCREENLAYOUT_SIZE_LARGE);
    boolean isScreenXlarge = (screenLayout == Configuration.SCREENLAYOUT_SIZE_XLARGE);
    return (isScreenLarge || isScreenXlarge);
}
</code></pre>

<p>Used like this:</p>

<pre><code>public void onCreate(Bundle savedInstanceState) {
    [...]
    if (this.isTabletDevice(this.getResources()) == true) {
        [...]
    }
}
</code></pre>

<p>I really don't want to look at the pixels sizes but only rely on the screen size.</p>

<p>Works well as Nexus 7 (LARGE) is detected as a tablet, but not Galaxy S3 (NORMAL).</p>
"
"6520718","18672441","3","<pre><code>if (Build.VERSION.SDK_INT &gt;= 11) {
        Point size = new Point();
        try {
            this.getWindowManager().getDefaultDisplay().getRealSize(size);
            screenWidth = size.x;
            screenHeight = size.y;
        } catch (NoSuchMethodError e) {
             screenHeight = this.getWindowManager().getDefaultDisplay().getHeight();
             screenWidth=this.getWindowManager().getDefaultDisplay().getWidth();
        }

    } else {
        DisplayMetrics metrics = new DisplayMetrics();
        this.getWindowManager().getDefaultDisplay().getMetrics(metrics);
        screenWidth = metrics.widthPixels;
        screenHeight = metrics.heightPixels;
    }
</code></pre>
"
"4165414","18718577","10","<p>I find the accepted answer a bit complicated.</p>

<p>Here's my solution. Add an onTouchListener to your main layout (ie. findViewById(R.id.mainLayout).setOnTouchListener(this)) and put the following code in the onTouch method.</p>

<pre><code>InputMethodManager imm = (InputMethodManager) getSystemService(INPUT_METHOD_SERVICE);
imm.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), 0);
</code></pre>

<p>This way you don't have to iterate over all views.</p>
"
"2160619","18727638","1","<p>Just add code in your activity</p>

<pre><code>Textview.setEllipsize(TextUtils.TruncateAt.END)
</code></pre>

<p>this will add ellipsis at the end of the textview</p>
"
"5763304","18733052","1","<p><strong>Disablend ScrollView</strong> </p>

<pre><code>ScrollView sw = (ScrollView) findViewById(R.id.scrollView1);
sw.setOnTouchListener(new OnTouchListener() {
    @Override
    public boolean onTouch(View v, MotionEvent event) {
        return true;
    }
});
</code></pre>
"
"6343166","18849603","5","<p>For me it was this</p>

<pre><code>&lt;uses-sdk
        android:minSdkVersion=""8""
        android:targetSdkVersion=""10"" /&gt;
</code></pre>

<p>The device I was testing my App on was 4.1.2 which is SDK Version 16!</p>

<p>So I removed <code>android:targetSdkVersion=""10""</code> and it started to work.</p>

<p>Edit: rather than remove it, just make the sure the target version is the same as your Android Target Library. If you are unsure what your target library is, right click your Project > Build Path > Android and it should be the one that is ticked.</p>

<p>Also, as others have mentioned, include the correct permissions to access the internet.
<code>&lt;uses-permission android:name=""android.permission.INTERNET""/&gt;</code> </p>
"
"3145089","18865585","1","<p><strong>Simple and best way for GeoLocation.</strong></p>

<pre><code>LocationManager lm = null;
boolean network_enabled;


if (lm == null)
                lm = (LocationManager) Kikit.this.getSystemService(Context.LOCATION_SERVICE);

            network_enabled = lm.isProviderEnabled(LocationManager.NETWORK_PROVIDER);

            dialog = ProgressDialog.show(Kikit.this, """", ""Fetching location..."", true);


            final Handler handler = new Handler();
            timer = new Timer();
            TimerTask doAsynchronousTask = new TimerTask() {

                @Override
                public void run() {
                    handler.post(new Runnable() {

                        @Override
                        public void run() 
                        {

                            Log.e(""counter value"",""value ""+counter);

                            if(counter&lt;=8)
                            {
                                try 
                                {
                                    counter++;


                                    if (network_enabled) {

                                        lm = (LocationManager) Kikit.this.getSystemService(Context.LOCATION_SERVICE);

                                        Log.e(""in network_enabled.."",""in network_enabled"");

                                        // Define a listener that responds to location updates
                                        LocationListener locationListener = new LocationListener() 
                                        {


                                            public void onLocationChanged(Location location) 
                                            {
                                                if(attempt == false)

                                                {
                                                    attempt = true;
                                                    Log.e(""in location listener.."",""in location listener.."");
                                                    longi = location.getLongitude();
                                                    lati = location.getLatitude();
                                                    Data.longi = """" + longi; 
                                                    Data.lati = """" + lati;


                                                    Log.e(""longitude : "",""""+longi);
                                                    Log.e(""latitude : "",""""+lati);



                                                    if(faceboo_name.equals(""""))
                                                    {
                                                        if(dialog!=null){
                                                        dialog.cancel();}
                                                        timer.cancel();
                                                        timer.purge();
                                                        Data.homepage_resume = true;
                                                        lm = null;
                                                        Intent intent = new Intent();                              
                                                        intent.setClass(Kikit.this,MainActivity.class);

                                                        startActivity(intent);      
                                                        finish();
                                                    }
                                                    else
                                                    {           

                                                        isInternetPresent = cd.isConnectingToInternet();

                                                        if (isInternetPresent) 
                                                        {
                                                            if(dialog!=null)
                                                                dialog.cancel();

                                                            Showdata();
                                                        }
                                                        else
                                                        {
                                                            error_view.setText(Data.internet_error_msg);
                                                            error_view.setVisibility(0);
                                                            error_gone();
                                                        }

                                                    }   
                                                }

                                            }

                                            public void onStatusChanged(String provider, int status,
                                                    Bundle extras) {
                                            }

                                            public void onProviderEnabled(String provider) {
                                                //Toast.makeText(getApplicationContext(), ""Location enabled"", Toast.LENGTH_LONG).show();

                                            }

                                            public void onProviderDisabled(String provider) {


                                            }
                                        };



                                        // Register the listener with the Location Manager to receive
                                        // location updates
                                        lm.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 100000, 10,locationListener);

                                    } else{
                                        //Toast.makeText(getApplicationContext(), ""No Internet Connection."", 2000).show();
                                        buildAlertMessageNoGps();

                                    }



                                } catch (Exception e) {
                                    // TODO
                                    // Auto-generated
                                    // catch
                                    // block
                                }
                            }
                            else
                            {

                                timer.purge();
                                timer.cancel();

                                if(attempt == false)
                                {
                                    attempt = true;

                                    String locationProvider = LocationManager.NETWORK_PROVIDER;
                                    // Or use LocationManager.GPS_PROVIDER

                                    try {
                                        Location lastKnownLocation = lm.getLastKnownLocation(locationProvider);

                                        longi = lastKnownLocation.getLongitude();
                                        lati = lastKnownLocation.getLatitude();
                                        Data.longi = """" + longi; 
                                        Data.lati = """" + lati;
                                    } catch (Exception e) {
                                        // TODO Auto-generated catch block
                                        e.printStackTrace();
                                        Log.i(""exception in loc fetch"", e.toString());
                                    }

                                    Log.e(""longitude of last known location : "",""""+longi);
                                    Log.e(""latitude of last known location : "",""""+lati);

                                    if(Data.fb_access_token == """")
                                    {

                                        if(dialog!=null){
                                            dialog.cancel();}
                                        timer.cancel();
                                        timer.purge();
                                        Data.homepage_resume = true;
                                        Intent intent = new Intent();                              
                                        intent.setClass(Kikit.this,MainActivity.class);

                                        startActivity(intent);  
                                        finish();
                                    }
                                    else
                                    {           

                                        isInternetPresent = cd.isConnectingToInternet();

                                        if (isInternetPresent) 
                                        {
                                            if(dialog!=null){
                                                dialog.cancel();}           
                                            Showdata();
                                        }
                                        else
                                        {
                                            error_view.setText(Data.internet_error_msg);
                                            error_view.setVisibility(0);
                                            error_gone();
                                        }

                                    }   

                                }
                            }
                        }
                    });
                }
            };
            timer.schedule(doAsynchronousTask, 0, 2000);


private void buildAlertMessageNoGps() {
        final AlertDialog.Builder builder = new AlertDialog.Builder(this);

        builder.setMessage(""Your WiFi &amp; mobile network location is disabled , do you want to enable it?"")
        .setCancelable(false)
        .setPositiveButton(""Yes"", new DialogInterface.OnClickListener() {


            public void onClick(@SuppressWarnings(""unused"") final DialogInterface dialog, @SuppressWarnings(""unused"") final int id) 
            {
                startActivity(new Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS));
                setting_page = true;
            }
        })
        .setNegativeButton(""No"", new DialogInterface.OnClickListener() {
            public void onClick(final DialogInterface dialog, @SuppressWarnings(""unused"") final int id) {
                dialog.cancel();
                finish();
            }
        });
        final AlertDialog alert = builder.create();
        alert.show();
    }
</code></pre>
"
"3611457","18892575","0","<p>use <code>ActivityInfo.SCREEN_ORIENTATION_USER</code> if you want to rotate screen only if its enabled on device.</p>
"
"2322234","18924340","2","<p>For a simple number that is unique to the device and constant for its lifetime (barring a factory reset or hacking), use <a href=""http://developer.android.com/reference/android/provider/Settings.Secure.html"" rel=""nofollow"">Settings.Secure.ANDROID_ID</a>.</p>

<pre><code>String id = Secure.getString(getContentResolver(), Secure.ANDROID_ID);
</code></pre>

<p>To use the device serial number (the one shown in ""System Settings / About / Status"") if available and fall back to Android ID:</p>

<pre><code>String serialNumber = Build.SERIAL != Build.UNKNOWN ? Build.SERIAL : Secure.getString(getContentResolver(), Secure.ANDROID_ID);
</code></pre>
"
"2617266","18958550","0","<p>This should be a simple solution:</p>

<pre><code>public void correctWidth(TextView textView, int desiredWidth)
{
    Paint paint = new Paint();
    Rect bounds = new Rect();

    paint.setTypeface(textView.getTypeface());
    float textSize = textView.getTextSize();
    paint.setTextSize(textSize);
    String text = textView.getText().toString();
    paint.getTextBounds(text, 0, text.length(), bounds);

    while (bounds.width() &gt; desiredWidth)
    {
        textSize--;
        paint.setTextSize(textSize);
        paint.getTextBounds(text, 0, text.length(), bounds);
    }

    textView.setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize);
}
</code></pre>
"
"2459916","18961787","0","<p>This isn't exactly the answer, but it's a solution that is similar. It may help people who were in the same boat as I was.</p>

<p>My image, an application logo, had a transparent background, and I was applying an XML gradient as the image background. I added the necessary padding/margins to the imageView in XML, then added this as my background:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
</code></pre>



<p></p>

<pre><code>&lt;item&gt;

    &lt;shape&gt;

        &lt;gradient
            android:type=""linear""
            android:startColor=""@color/app_color_light_background""
            android:endColor=""@color/app_color_disabled""
            android:angle=""90""
        /&gt;

        &lt;!-- Round the top corners. --&gt;
        &lt;corners
            android:topLeftRadius=""@dimen/radius_small""
            android:topRightRadius=""@dimen/radius_small""
        /&gt;

    &lt;/shape&gt;

&lt;/item&gt;
</code></pre>

<p></p>
"
"3495890","18966430","2","<p>Here is small modification on <a href=""http://stackoverflow.com/users/828070/djunod"">@djunod</a>'s <a href=""http://stackoverflow.com/a/17765520/597657"">answer</a> that I need to make it work perfectly:</p>

<pre><code>public static void setListViewHeightBasedOnChildren(ListView listView)
{
    ListAdapter listAdapter = listView.getAdapter();
    if(listAdapter == null) return;
    if(listAdapter.getCount() &lt;= 1) return;

    int desiredWidth = MeasureSpec.makeMeasureSpec(listView.getWidth(), MeasureSpec.AT_MOST);
    int totalHeight = 0;
    View view = null;
    for(int i = 0; i &lt; listAdapter.getCount(); i++)
    {
        view = listAdapter.getView(i, view, listView);
        view.measure(desiredWidth, MeasureSpec.UNSPECIFIED);
        totalHeight += view.getMeasuredHeight();
    }
    ViewGroup.LayoutParams params = listView.getLayoutParams();
    params.height = totalHeight + (listView.getDividerHeight() * (listAdapter.getCount() - 1));
    listView.setLayoutParams(params);
    listView.requestLayout();
}
</code></pre>
"
"5832368","18975531","-1","<p>I'm recommend android library 'caffeine' That's contain get Phone or tablet, and 10inch~!</p>

<p>very easy use. </p>

<p>the library is here. </p>

<p><a href=""https://github.com/ShakeJ/Android-Caffeine-library"" rel=""nofollow"">https://github.com/ShakeJ/Android-Caffeine-library</a></p>

<p>and use </p>

<pre><code>DisplayUtil.isTablet(this);
DisplayUtil.isTenInch(this);
</code></pre>
"
"2271131","18980901","3","<pre><code>String formattedDate = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"").format(Calendar.getInstance().getTime()); 
</code></pre>

<p>Use <code>formattedDate</code> as your <code>String</code> filled with the date.<br>
In my case: <code>mDateButton.setText(formattedDate);</code></p>
"
"2150078","18992807","18","<p>It has been forever in terms of computer but this question is still unbelievably relevant!</p>

<p>So I've taken the above answers and have combined and refined them a bit...</p>

<pre><code>public interface OnKeyboardVisibilityListener {

    void onVisibilityChanged(boolean visible);
}

public final void setKeyboardListener(final OnKeyboardVisibilityListener listener) {
    final View activityRootView = ((ViewGroup) getActivity().findViewById(android.R.id.content)).getChildAt(0);
    activityRootView.getViewTreeObserver().addOnGlobalLayoutListener(new OnGlobalLayoutListener() {

        private boolean wasOpened;

    private final Rect r = new Rect();

        @Override
        public void onGlobalLayout() {
            activityRootView.getWindowVisibleDisplayFrame(r);

            int heightDiff = activityRootView.getRootView().getHeight() - (r.bottom - r.top);
            boolean isOpen = heightDiff &gt; 100;
            if (isOpen == wasOpened) {
                logDebug(""Ignoring global layout change..."");
                return;
            }

            wasOpened = isOpen;
            listener.onVisibilityChanged(isOpen);
        }
    });
}
</code></pre>

<p>Works for me :)</p>
"
"5105354","19004929","0","<p>I had the same problem in various different situations, and the solutions i have found work in some but dont work in others so here is a combine solution that works in most situations i have found:</p>

<pre><code>public static void showVirtualKeyboard(Context context, final View view) {
    if (context != null) {
        final InputMethodManager imm =  (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);
        view.clearFocus();

        if(view.isShown()) {
            imm.showSoftInput(view, 0);
            view.requestFocus();
        } else {
            view.addOnAttachStateChangeListener(new View.OnAttachStateChangeListener() {
                @Override
                public void onViewAttachedToWindow(View v) {
                    view.post(new Runnable() {
                        @Override
                        public void run() {
                            view.requestFocus();
                            imm.showSoftInput(view, 0);
                        }
                    });

                    view.removeOnAttachStateChangeListener(this);
                }

                @Override
                public void onViewDetachedFromWindow(View v) {
                    view.removeOnAttachStateChangeListener(this);
                }
            });
        }
    }
}
</code></pre>
"
"6520718","19081916","1","<pre><code>    int scrWidth  = getWindowManager().getDefaultDisplay().getWidth();
    int scrHeight = getWindowManager().getDefaultDisplay().getHeight();
</code></pre>
"
"3611457","19091392","0","<p>use that line of code </p>

<pre><code>this.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);  
</code></pre>

<p>in ur activity oncreate method</p>
"
"3349121","19128552","2","<p>For some reason the android.text.LoginFilter class's constructor is package-scoped, so you can't directly extend it (even though it would be identical to this code).  But you can extend LoginFilter.UsernameFilterGeneric!  Then you just have this:</p>

<pre><code>class ABCFilter extends LoginFilter.UsernameFilterGeneric {
    public UsernameFilter() {
        super(false); // false prevents not-allowed characters from being appended
    }

    @Override
    public boolean isAllowed(char c) {
        if ('A' &lt;= c &amp;&amp; c &lt;= 'C')
            return true;
        if ('a' &lt;= c &amp;&amp; c &lt;= 'c')
            return true;

        return false;
    }
}
</code></pre>

<p>This isn't really documented, but it's part of the core lib, and the <a href=""http://grepcode.com/file/repository.grepcode.com/java/ext/com.google.android/android/4.3_r2.1/android/text/LoginFilter.java#LoginFilter.UsernameFilterGeneric"" rel=""nofollow"">source is straightforward</a>.  I've been using it for a while now, so far no problems, though I admit I haven't tried doing anything complex involving spannables.</p>
"
"2644134","19145665","1","<p>Think you can just use this now:</p>

<pre><code>AlertDialog dialog = new AlertDialog.Builder(this)
  .setView(view)
  .setTitle("""")
  .create()
</code></pre>
"
"5033012","19243628","2","<p>I needed a specific solution. I have got an edittext and textview in my layout. The textview is fixed height and width. When the user starts to type in the edittext, the text should immediately appear in the textview. The text in the textfield should auto - resize to fit the textview. So I updated Chase's solution to work for me. So when the text changes in the textview, resizing starts. The difference between mine and Chase's soluton: <strong>resizing is done even if the user DELETE some chars</strong>. I hope it can help someone.</p>

<pre><code>public class TextFitTextView extends TextView {

// Minimum text size for this text view
public static final float MIN_TEXT_SIZE = 10;

// Maximum text size for this text view - if it is 0, then the text acts
// like match_parent
public static final float MAX_TEXT_SIZE = 0;

// Our ellipse string
private static final String mEllipsis = ""..."";

// Text size that is set from code. This acts as a starting point for
// resizing
private float mTextSize;

// Lower bounds for text size
private float mMinTextSize = MIN_TEXT_SIZE;

// Max bounds for text size
private float mMaxTextSize = MAX_TEXT_SIZE;

// Text view line spacing multiplier
private float mSpacingMult = 1.0f;

// Text view additional line spacing
private float mSpacingAdd = 0.0f;

// Add ellipsis to text that overflows at the smallest text size
private boolean mAddEllipsis = true;

// Add ellipsis to text that overflows at the smallest text size
private int heightLimit;
private int widthLimit;

// Default constructor override
public TextFitTextView(Context context) {
    this(context, null);
}

// Default constructor when inflating from XML file
public TextFitTextView(Context context, AttributeSet attrs) {
    this(context, attrs, 0);
}

// Default constructor override
public TextFitTextView(Context context, AttributeSet attrs, int defStyle) {
    super(context, attrs, defStyle);
    mTextSize = getTextSize();
}

/**
 * When text changes resize the text size.
 */
@Override
protected void onTextChanged(final CharSequence text, final int start, final int before, final int after) {
    // if we are adding new chars to text
    if (before &lt;= after &amp;&amp; after != 1) {
        resizeText(true);
        // now we are deleting chars
    } else {
        resizeText(false);
    }
}

/**
 * Override the set text size to update our internal reference values
 */
@Override
public void setTextSize(float size) {
    super.setTextSize(size);
    mTextSize = getTextSize();
}

/**
 * Override the set text size to update our internal reference values
 */
@Override
public void setTextSize(int unit, float size) {
    super.setTextSize(unit, size);
    mTextSize = getTextSize();
}

/**
 * Override the set line spacing to update our internal reference values
 */
@Override
public void setLineSpacing(float add, float mult) {
    super.setLineSpacing(add, mult);
    mSpacingMult = mult;
    mSpacingAdd = add;
}

/**
 * Set the lower text size limit and invalidate the view
 * 
 * @param minTextSize
 */
public void setMinTextSize(float minTextSize) {
    mMinTextSize = minTextSize;
    requestLayout();
    invalidate();
}

/**
 * Return lower text size limit
 * 
 * @return
 */
public float getMinTextSize() {
    return mMinTextSize;
}

/**
 * Set flag to add ellipsis to text that overflows at the smallest text size
 * 
 * @param addEllipsis
 */
public void setAddEllipsis(boolean addEllipsis) {
    mAddEllipsis = addEllipsis;
}

/**
 * Return flag to add ellipsis to text that overflows at the smallest text
 * size
 * 
 * @return
 */
public boolean getAddEllipsis() {
    return mAddEllipsis;
}

/**
 * Get width and height limits
 */
@Override
protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
    if (widthLimit == 0 &amp;&amp; heightLimit == 0) {
        widthLimit = (right - left) - getCompoundPaddingLeft() - getCompoundPaddingRight();
        heightLimit = (bottom - top) - getCompoundPaddingBottom() - getCompoundPaddingTop();
    }
    super.onLayout(changed, left, top, right, bottom);
}

/**
 * Resize the text size with specified width and height
 * 
 * @param width
 * @param height
 */
public void resizeText(boolean increase) {
    CharSequence text = getText();
    // Do not resize if the view does not have dimensions or there is no
    // text
    if (text == null || text.length() == 0 || heightLimit &lt;= 0 || widthLimit &lt;= 0 || mTextSize == 0) {
        return;
    }

    // Get the text view's paint object
    TextPaint textPaint = getPaint();

    // Get the required text height
    int textHeight = getTextHeight(text, textPaint, widthLimit, mTextSize);


    // If the text length is increased 
    // Until we either fit within our text view or we had reached our min
    // text size, incrementally try smaller sizes
    if (increase) {
        while (textHeight &gt; heightLimit &amp;&amp; mTextSize &gt; mMinTextSize) {
            mTextSize = Math.max(mTextSize - 2, mMinTextSize);
            textHeight = getTextHeight(text, textPaint, widthLimit, mTextSize);
        }
    } 
//      text length has been decreased
    else {
//          if max test size is set then add it to while condition
        if (mMaxTextSize != 0) {
            while (textHeight &lt; heightLimit &amp;&amp; mTextSize &lt;= mMaxTextSize) {
                mTextSize = mTextSize + 2;
                textHeight = getTextHeight(text, textPaint, widthLimit, mTextSize);
            }
        } else {
            while (textHeight &lt; heightLimit) {
                mTextSize = mTextSize + 2;
                textHeight = getTextHeight(text, textPaint, widthLimit, mTextSize);
            }
        }
        mTextSize = textHeight &gt; heightLimit ? mTextSize - 2 : mTextSize;
    }

    // If we had reached our minimum text size and still don't fit, append
    // an ellipsis
    if (mAddEllipsis &amp;&amp; mTextSize == mMinTextSize &amp;&amp; textHeight &gt; heightLimit) {
        // Draw using a static layout
        TextPaint paint = new TextPaint(textPaint);
        StaticLayout layout = new StaticLayout(text, paint, widthLimit, Alignment.ALIGN_NORMAL, mSpacingMult,
                mSpacingAdd, false);
        // Check that we have a least one line of rendered text
        if (layout.getLineCount() &gt; 0) {
            // Since the line at the specific vertical position would be cut
            // off,
            // we must trim up to the previous line
            int lastLine = layout.getLineForVertical(heightLimit) - 1;
            // If the text would not even fit on a single line, clear it
            if (lastLine &lt; 0) {
                setText("""");
            }
            // Otherwise, trim to the previous line and add an ellipsis
            else {
                int start = layout.getLineStart(lastLine);
                int end = layout.getLineEnd(lastLine);
                float lineWidth = layout.getLineWidth(lastLine);
                float ellipseWidth = paint.measureText(mEllipsis);

                // Trim characters off until we have enough room to draw the
                // ellipsis
                while (widthLimit &lt; lineWidth + ellipseWidth) {
                    lineWidth = paint.measureText(text.subSequence(start, --end + 1).toString());
                }
                setText(text.subSequence(0, end) + mEllipsis);
            }
        }
    }

    // Some devices try to auto adjust line spacing, so force default line
    // spacing
    // and invalidate the layout as a side effect
    setTextSize(TypedValue.COMPLEX_UNIT_PX, mTextSize);
    setLineSpacing(mSpacingAdd, mSpacingMult);

}

// Set the text size of the text paint object and use a static layout to
// render text off screen before measuring
private int getTextHeight(CharSequence source, TextPaint originalPaint, int width, float textSize) {
    // Update the text paint object
    TextPaint paint = new TextPaint(originalPaint);
    paint.setTextSize(textSize);
    // Measure using a static layout
    StaticLayout layout = new StaticLayout(source, paint, width, Alignment.ALIGN_NORMAL, mSpacingMult, mSpacingAdd,
            true);
    return layout.getHeight();
}

}
</code></pre>
"
"3166501","19256186","16","<p><a href=""http://stackoverflow.com/users/413127/blundell"">Blundell's</a> answer as a static helper method:</p>

<pre><code>private static String getDensityName(Context context) {
    float density = context.getResources().getDisplayMetrics().density;
    if (density &gt;= 4.0) {
        return ""xxxhdpi"";
    }
    if (density &gt;= 3.0) {
        return ""xxhdpi"";
    }
    if (density &gt;= 2.0) {
        return ""xhdpi"";
    }
    if (density &gt;= 1.5) {
        return ""hdpi"";
    }
    if (density &gt;= 1.0) {
        return ""mdpi"";
    }
    return ""ldpi"";
}
</code></pre>
"
"6495898","19284490","8","<p>You could also do it in the onActivityCreated Method. </p>

<pre><code>public void onActivityCreated(Bundle savedInstanceState) { 
      super.onActivityCreated(savedInstanceState);
}
</code></pre>

<p>Like they do here: <a href=""http://developer.android.com/reference/android/app/Fragment.html"">http://developer.android.com/reference/android/app/Fragment.html</a></p>

<pre><code>getView().findViewById(R.id.foo);
</code></pre>

<p>and</p>

<pre><code>getActivity().findViewById(R.id.foo);
</code></pre>

<p>are possible.</p>
"
"6343166","19332914","-8","<p>Simple way to resolve the issues is to set after <code>oncreate</code> <code>StrictMode.enableDefaults();</code></p>
"
"2150078","19354201","14","<p>Sorry for the late answer, but I had created a little helper class to handle open/close events with notifying listeners and other useful things, may be someone would find it helpful:</p>

<pre><code>import android.graphics.Rect;
import android.view.View;
import android.view.ViewTreeObserver;

import java.util.LinkedList;
import java.util.List;

public class SoftKeyboardStateHelper implements ViewTreeObserver.OnGlobalLayoutListener {

    public interface SoftKeyboardStateListener {
        void onSoftKeyboardOpened(int keyboardHeightInPx);
        void onSoftKeyboardClosed();
    }

    private final List&lt;SoftKeyboardStateListener&gt; listeners = new LinkedList&lt;SoftKeyboardStateListener&gt;();
    private final View activityRootView;
    private int        lastSoftKeyboardHeightInPx;
    private boolean    isSoftKeyboardOpened;

    public SoftKeyboardStateHelper(View activityRootView) {
        this(activityRootView, false);
    }

    public SoftKeyboardStateHelper(View activityRootView, boolean isSoftKeyboardOpened) {
        this.activityRootView     = activityRootView;
        this.isSoftKeyboardOpened = isSoftKeyboardOpened;
        activityRootView.getViewTreeObserver().addOnGlobalLayoutListener(this);
    }

    @Override
    public void onGlobalLayout() {
        final Rect r = new Rect();
        //r will be populated with the coordinates of your view that area still visible.
        activityRootView.getWindowVisibleDisplayFrame(r);

        final int heightDiff = activityRootView.getRootView().getHeight() - (r.bottom - r.top);
        if (!isSoftKeyboardOpened &amp;&amp; heightDiff &gt; 100) { // if more than 100 pixels, its probably a keyboard...
            isSoftKeyboardOpened = true;
            notifyOnSoftKeyboardOpened(heightDiff);
        } else if (isSoftKeyboardOpened &amp;&amp; heightDiff &lt; 100) {
            isSoftKeyboardOpened = false;
            notifyOnSoftKeyboardClosed();
        }
    }

    public void setIsSoftKeyboardOpened(boolean isSoftKeyboardOpened) {
        this.isSoftKeyboardOpened = isSoftKeyboardOpened;
    }

    public boolean isSoftKeyboardOpened() {
        return isSoftKeyboardOpened;
    }

    /**
     * Default value is zero (0)
     * @return last saved keyboard height in px
     */
    public int getLastSoftKeyboardHeightInPx() {
        return lastSoftKeyboardHeightInPx;
    }

    public void addSoftKeyboardStateListener(SoftKeyboardStateListener listener) {
        listeners.add(listener);
    }

    public void removeSoftKeyboardStateListener(SoftKeyboardStateListener listener) {
        listeners.remove(listener);
    }

    private void notifyOnSoftKeyboardOpened(int keyboardHeightInPx) {
        this.lastSoftKeyboardHeightInPx = keyboardHeightInPx;

        for (SoftKeyboardStateListener listener : listeners) {
            if (listener != null) {
                listener.onSoftKeyboardOpened(keyboardHeightInPx);
            }
        }
    }

    private void notifyOnSoftKeyboardClosed() {
        for (SoftKeyboardStateListener listener : listeners) {
            if (listener != null) {
                listener.onSoftKeyboardClosed();
            }
        }
    }
}
</code></pre>

<p><strong>Usage example:</strong></p>

<pre><code>final SoftKeyboardStateHelper softKeyboardStateHelper = new SoftKeyboardStateHelper(findViewById(R.id.activity_main_layout);
softKeyboardStateHelper.addSoftKeyboardStateListener(...);
// then just handle callbacks
</code></pre>
"
"3331527","19391925","8","<p>Acknowledging the other excellent answer so far, the best code I've seen yet for this is in the documentation for the photo taking tool.</p>

<p>See the section entitled ""Decode a Scaled Image"".</p>

<p><a href=""http://developer.android.com/training/camera/photobasics.html"">http://developer.android.com/training/camera/photobasics.html</a></p>

<p>The solution it proposes is a resize then scale solution like the others here, but it's quite neat.</p>

<p>I've copied the code below as a ready-to-go function for convenience.</p>

<pre><code>private void setPic(String imagePath, ImageView destination) {
    int targetW = destination.getWidth();
    int targetH = destination.getHeight();
    // Get the dimensions of the bitmap
    BitmapFactory.Options bmOptions = new BitmapFactory.Options();
    bmOptions.inJustDecodeBounds = true;
    BitmapFactory.decodeFile(imagePath, bmOptions);
    int photoW = bmOptions.outWidth;
    int photoH = bmOptions.outHeight;

    // Determine how much to scale down the image
    int scaleFactor = Math.min(photoW/targetW, photoH/targetH);

    // Decode the image file into a Bitmap sized to fill the View
    bmOptions.inJustDecodeBounds = false;
    bmOptions.inSampleSize = scaleFactor;
    bmOptions.inPurgeable = true;

    Bitmap bitmap = BitmapFactory.decodeFile(imagePath, bmOptions);
    destination.setImageBitmap(bitmap);
}
</code></pre>
"
"4605527","19393880","10","<p>If you can use the dimensions XML it's very simple!</p>

<p>In your XML:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;resources&gt;
    &lt;dimen name=""thumbnail_height""&gt;120dp&lt;/dimen&gt;
    ...
    ...
&lt;/resources&gt;
</code></pre>

<p>Then in your Java:</p>

<pre><code>getResources().getDimensionPixelSize(R.dimen.thumbnail_height);
</code></pre>
"
"6520718","19416448","10","<p>Within an activity, you can call:</p>

<pre><code>int width = this.getResources().getDisplayMetrics().widthPixels;
int height = this.getResources().getDisplayMetrics().heightPixels;
</code></pre>

<p>When you're in a View, then you need to get the Context first:</p>

<pre><code>int width = getApplicationContext().getResources().getDisplayMetrics().widthPixels;
int height = getApplicationContext().getResources().getDisplayMetrics().heightPixels;
</code></pre>

<p>This will work in all Android version, available since API 1, and never deprecated.</p>
"
"3166501","19426335","9","<p>Actualy if you want to have the <strong>real display dpi</strong> the answer is somewhere in between
if you query for display metrics:</p>

<pre><code>DisplayMetrics dm = new DisplayMetrics();
getWindowManager().getDefaultDisplay().getMetrics(dm);
int dpiClassification = dm.densityDpi;
float xDpi = dm.xdpi;
float yDpi = dm.ydpi;
</code></pre>

<p>densityDpi * 160 will give you the values/suggestion which density you should use</p>

<pre><code>0.75 - ldpi - 120 dpi
1.0 - mdpi - 160 dpi
1.5 - hdpi - 240 dpi
2.0 - xhdpi - 320 dpi
3.0 - xxhdpi - 480 dpi
4.0 - xxxhdpi - 640 dpi
</code></pre>

<p>as specified in previous posts</p>

<p>but <code>dm.xdpi</code> won't give you always the <strong>REAL dpi</strong> of given display:
Example:</p>

<pre><code>Device: Sony ericsson xperia mini pro (SK17i)
Density: 1.0 (e.g. suggests you use 160dpi resources)
xdpi: 193.5238
Real device ppi is arround 193ppi


Device: samsung GT-I8160 (Samsung ace 2)
Density 1.5 (e.g. suggests you use 240dpi resources)
xdpi 160.42105
Real device ppi is arround 246ppi
</code></pre>

<p>so maybe real dpi of the display should be Density*xdpi .. but i'm not sure if this is the correct way to do!</p>
"
"3916330","19446772","1","<pre><code>webview.setInitialScale(1);
webview.getSettings().setLoadWithOverviewMode(true);
webview.getSettings().setUseWideViewPort(true);
webview.getSettings().setJavaScriptEnabled(true);
</code></pre>

<p>will work, but remember to remove something like:</p>

<pre><code>&lt;meta name=""viewport"" content=""user-scalable=no""/&gt;
</code></pre>

<p>if existed in the html file or change user-scalable=yes, otherwise it won't.</p>
"
"3349121","19462514","0","<p>This simple solution worked for me when I needed to prevent the user from entering empty strings into an EditText.  You can of course add more characters:</p>

<pre><code>InputFilter textFilter = new InputFilter() {

@Override

public CharSequence filter(CharSequence c, int arg1, int arg2,

    Spanned arg3, int arg4, int arg5) {

    StringBuilder sbText = new StringBuilder(c);

    String text = sbText.toString();

    if (text.contains("" "")) {    
        return """";   
    }    
    return c;   
    }   
};

private void setTextFilter(EditText editText) {

    editText.setFilters(new InputFilter[]{textFilter});

}
</code></pre>
"
"2139134","19464119","3","<p>In your first Activity:</p>

<pre><code>intent.putExtra(""myTag"", yourObject);
</code></pre>

<p>And in your second one:</p>

<pre><code>myCustomObject myObject = (myCustomObject) getIntent().getSerializableExtra(""myTag"");
</code></pre>

<p>Don't forget to make your custom object Serializable: </p>

<pre><code>public class myCustomObject implements Serializable {
...
}
</code></pre>
"
"2160619","19487453","1","<p>Extend TextView and override these methods:</p>

<pre><code>CharSequence origText = """";
int maxLines = 2;

@Override
public void setText(CharSequence text, BufferType type) {
    super.setText(text, type);
    origText = text;
}

@Override
protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
    super.onMeasure(widthMeasureSpec, heightMeasureSpec);

    CharSequence text = origText;
    onPreDraw();

    while(getLineCount() &gt; maxLines) {
        text = text.subSequence(0, text.length()-1);
        super.setText(text + ""..."");
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
        onPreDraw();
    }

}
</code></pre>
"
"3035692","19517172","4","<p>Here is better resolution</p>

<pre><code>public static Bitmap drawableToBitmap (Drawable drawable) {
    if (drawable instanceof BitmapDrawable) {
        return ((BitmapDrawable)drawable).getBitmap();
    }

    Bitmap bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), Config.ARGB_8888);
    Canvas canvas = new Canvas(bitmap); 
    drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
    drawable.draw(canvas);

    return bitmap;
}

public static InputStream bitmapToInputStream(Bitmap bitmap) {
    int size = bitmap.getHeight() * bitmap.getRowBytes();
    ByteBuffer buffer = ByteBuffer.allocate(size);
    bitmap.copyPixelsToBuffer(buffer);
    return new ByteArrayInputStream(buffer.array());
}
</code></pre>

<p>Code from <a href=""http://stackoverflow.com/questions/6341770/how-to-read-drawable-bits-as-inputstream/6341899#6341899"">How to read drawable bits as InputStream</a></p>
"
"2459916","19540754","9","<p>As all the answers seemed too complicated for me just for round corners I thought and came to another solution which I think is worth to share, just with XML in case you have some space around the image:</p>

<p>Create a bordered shape with transparent content like this:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;shape xmlns:android=""http://schemas.android.com/apk/res/android""
    android:shape=""rectangle""&gt;
    &lt;corners 
        android:radius=""30dp"" /&gt;
    &lt;stroke 
        android:color=""#ffffffff""
        android:width=""10dp"" /&gt;
&lt;/shape&gt; 
</code></pre>

<p>Then in a RelativeLayout you can first place your image and then in the same location above the shape with another ImageView. The cover-shape should be larger in size by the amount of the border width. Be careful to take a larger corner radius as the outer radius is defined but the inner radius is what covers your image. </p>

<p>Hope it helps somebody, too.</p>

<p><strong>Edit</strong> as per CQM request the relative layout example:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;RelativeLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent"" &gt;

    &lt;ImageView
        android:id=""@+id/imageToShow""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:layout_alignBottom=""@+id/imgCorners""
        android:layout_alignLeft=""@+id/imgCorners""
        android:layout_alignRight=""@+id/imgCorners""
        android:layout_alignTop=""@+id/imgCorners""
        android:background=""#ffffff""
        android:contentDescription=""@string/desc""
        android:padding=""5dp""
        android:scaleType=""centerCrop"" /&gt;

    &lt;ImageView
        android:id=""@+id/imgCorners""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:adjustViewBounds=""true""
        android:contentDescription=""@string/desc""
        android:src=""@drawable/corners_white"" /&gt;

&lt;/RelativeLayout&gt;
</code></pre>
"
"4946295","19580153","1","<p>This is really simple with <a href=""http://bit.ly/droidquery"" rel=""nofollow"">droidQuery</a>. For starts, consider this layout:</p>

<pre><code>&lt;LinearLayout
    android:layout_width=""wrap_content""
    android:layout_height=""wrap_content""
    android:orientation=""vertical"" &gt;
    &lt;LinearLayout
        android:id=""@+id/v1""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content"" &gt;
        &lt;TextView
            android:layout_width=""wrap_content""
            android:layout_height=""wrap_content"" 
            android:text=""View 1"" /&gt;
    &lt;/LinearLayout&gt;
    &lt;LinearLayout
        android:id=""@+id/v2""
        android:layout_width=""wrap_content""
        android:layout_height=""0dp"" &gt;
        &lt;TextView
            android:layout_width=""wrap_content""
            android:layout_height=""wrap_content"" 
            android:text=""View 2"" /&gt;
        &lt;TextView
            android:layout_width=""wrap_content""
            android:layout_height=""wrap_content"" 
            android:text=""View 3"" /&gt;
    &lt;/LinearLayout&gt;
&lt;/LinearLayout&gt;
</code></pre>

<p>We can animate the height to the desired value - say <code>100dp</code> - using the following code:</p>

<pre><code>//convert 100dp to pixel value
int height = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 100, getResources().getDisplayMetrics());
</code></pre>

<p>Then use <code>droidQuery</code> to animate. The simplest way is with this:</p>

<pre><code>$.animate(""{ height: "" + height + ""}"", new AnimationOptions());
</code></pre>

<p>To make the animation more appealing, consider adding an easing:</p>

<pre><code>$.animate(""{ height: "" + height + ""}"", new AnimationOptions().easing($.Easing.BOUNCE));
</code></pre>

<p>You can also change the duration on <code>AnimationOptions</code> using the <code>duration()</code> method, or handle what happens when the animation ends. For a complex example, try:</p>

<pre><code>$.animate(""{ height: "" + height + ""}"", new AnimationOptions().easing($.Easing.BOUNCE)
                                                             .duration(1000)
                                                             .complete(new Function() {
                                                                 @Override
                                                                 public void invoke($ d, Object... args) {
                                                                     $.toast(context, ""finished"", Toast.LENGTH_SHORT);
                                                                 }
                                                             }));
</code></pre>
"
"2736389","19700319","4","<p>use <a href=""https://code.google.com/p/google-gson/"" rel=""nofollow"">gson</a> to convert your object to json and pass it through intent , In the new Activity convert the json to object. 
Example :</p>

<pre><code>    Gson gson = new Gson();
    String myJson = gson.toJson(vp);
    intent.putExtra(""myjson"",myjson);
</code></pre>

<p>and from your new activity:</p>

<pre><code>    Gson gson = new Gson();   
    YourObject ob = gson.fromJson(getIntent().getStringExtra(""myjson""),YourObject.class);
</code></pre>
"
"4165414","19828165","8","<p>You can achieve this by doing the following steps:</p>

<ol>
<li><p>Make the parent view(content view of your activity) clickable and focusable by adding the following attributes</p>

<pre><code>    android:clickable=""true"" 
    android:focusableInTouchMode=""true"" 
</code></pre></li>
<li><p>Implement a hideKeyboard() method</p>

<pre><code>    public void hideKeyboard(View view) {
        InputMethodManager inputMethodManager =(InputMethodManager)getSystemService(Activity.INPUT_METHOD_SERVICE);
        inputMethodManager.hideSoftInputFromWindow(view.getWindowToken(), 0);
    }
</code></pre></li>
<li><p>Lastly, set the onFocusChangeListener of your edittext.</p>

<pre><code>    edittext.setOnFocusChangeListener(new View.OnFocusChangeListener() {
        @Override
        public void onFocusChange(View v, boolean hasFocus) {
            if (!hasFocus) {
                hideKeyboard(v);
            }
        }
    });
</code></pre></li>
</ol>

<p>As pointed out in one of the comments below, this might not work if the parent view is a ScrollView. For such case, the clickable and focusableInTouchMode may be added on the view directly under the ScrollView.</p>
"
"5694933","19831753","3","<p>In order to retrieve all the <a href=""http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"" rel=""nofollow"">External Storages</a> (whether they are <strong><em>SD cards</em></strong> or <strong><em>internal non-removable storages</em></strong>), you can use the following code:</p>

<pre><code>final String state = Environment.getExternalStorageState();

if ( Environment.MEDIA_MOUNTED.equals(state) || Environment.MEDIA_MOUNTED_READ_ONLY.equals(state) ) {  // we can read the External Storage...           
    //Retrieve the primary External Storage:
    final File primaryExternalStorage = Environment.getExternalStorageDirectory();

    //Retrieve the External Storages root directory:
    final String externalStorageRootDir;
    if ( (externalStorageRootDir = primaryExternalStorage.getParent()) == null ) {  // no parent...
        Log.d(TAG, ""External Storage: "" + primaryExternalStorage + ""\n"");
    }
    else {
        final File externalStorageRoot = new File( externalStorageRootDir );
        final File[] files = externalStorageRoot.listFiles();

        for ( final File file : files ) {
            if ( file.isDirectory() &amp;&amp; file.canRead() &amp;&amp; (file.listFiles().length &gt; 0) ) {  // it is a real directory (not a USB drive)...
                Log.d(TAG, ""External Storage: "" + file.getAbsolutePath() + ""\n"");
            }
        }
    }
}
</code></pre>

<p>Alternatively, you might use <strong>System.getenv(""EXTERNAL_STORAGE"")</strong> to retrieve the primary External Storage directory (e.g. <em>""/storage/sdcard0""</em>) and <strong>System.getenv(""SECONDARY_STORAGE"")</strong> to retieve the list of all the secondary directories (e.g. <em>""/storage/extSdCard:/storage/UsbDriveA:/storage/UsbDriveB""</em>). Remember that, also in this case, you might want to filter the list of secondary directories in order to exclude the USB drives.</p>

<p>In any case, please note that using hard-coded paths is always a bad approach (expecially when every manufacturer may change it as pleased).</p>
"
"2169649","19854415","0","<p>Additional to previous answers, if you are having problems with getting the right path(like AndroZip) you can use this:</p>

<pre><code>  public String getPath(Uri uri ,ContentResolver contentResolver) {
        String[] projection = {  MediaStore.MediaColumns.DATA};
        Cursor cursor;
        try{
            cursor = contentResolver.query(uri, projection, null, null, null);
        } catch (SecurityException e){
            String path = uri.getPath();
            String result = tryToGetStoragePath(path);
            return  result;
        }
        if(cursor != null) {
            //HERE YOU WILL GET A NULLPOINTER IF CURSOR IS NULL
            //THIS CAN BE, IF YOU USED OI FILE MANAGER FOR PICKING THE MEDIA
            cursor.moveToFirst();
            int columnIndex = cursor.getColumnIndexOrThrow(MediaStore.MediaColumns.DATA);
            String filePath = cursor.getString(columnIndex);
            cursor.close();
            return filePath;
        }
        else
            return uri.getPath();               // FOR OI/ASTRO/Dropbox etc
    }

    private String tryToGetStoragePath(String path) {
        int actualPathStart = path.indexOf(""//storage"");
        String result = path;

        if(actualPathStart!= -1 &amp;&amp; actualPathStart&lt; path.length())
            result = path.substring(actualPathStart+1 , path.length());

        return result;
    }
</code></pre>
"
"6070805","19922892","0","<pre><code>&lt;EditText 
  android:id=""@+id/Msg""
  android:layout_width=""fill_parent""
  android:layout_height=""wrap_content""              
  android:layout_marginTop=""5dip""
  android:lines=""5""
  android:selectAllOnFocus=""true""               
  android:hint=""Skriv meddelande...\n(max 100tkn)""/&gt;


EditText et = (EditText)findViewById(R.id.Msg);
String strTmp = et.getText().toString();
strTmp = strTmp.replaceAll(""\\n"","" "");
</code></pre>
"
"3647993","19924380","1","<p>Use the following code to rotate an image correctly:</p>

<pre><code>private Bitmap rotateImage(Bitmap bitmap, String filePath)
{
    Bitmap resultBitmap = bitmap;

    try
    {
        ExifInterface exifInterface = new ExifInterface(filePath);
        int orientation = exifInterface.getAttributeInt(ExifInterface.TAG_ORIENTATION, 1);

        Matrix matrix = new Matrix();

        if (orientation == ExifInterface.ORIENTATION_ROTATE_90)
        {
            matrix.postRotate(ExifInterface.ORIENTATION_ROTATE_90);
        }
        else if (orientation == ExifInterface.ORIENTATION_ROTATE_180)
        {
            matrix.postRotate(ExifInterface.ORIENTATION_ROTATE_180);
        }
        else if (orientation == ExifInterface.ORIENTATION_ROTATE_270)
        {
            matrix.postRotate(ExifInterface.ORIENTATION_ROTATE_270);
        }

        // Rotate the bitmap
        resultBitmap = Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);
    }
    catch (Exception exception)
    {
        Logger.d(""Could not rotate the image"");
    }
    return resultBitmap;
}
</code></pre>
"
"5694933","19982451","6","<p>Like Richard I also use <strong>/proc/mounts</strong> file to get the list of available storage options</p>

<pre><code>public class StorageUtils {

    private static final String TAG = ""StorageUtils"";

    public static class StorageInfo {

        public final String path;
        public final boolean internal;
        public final boolean readonly;
        public final int display_number;

        StorageInfo(String path, boolean internal, boolean readonly, int display_number) {
            this.path = path;
            this.internal = internal;
            this.readonly = readonly;
            this.display_number = display_number;
        }

        public String getDisplayName() {
            StringBuilder res = new StringBuilder();
            if (internal) {
                res.append(""Internal SD card"");
            } else if (display_number &gt; 1) {
                res.append(""SD card "" + display_number);
            } else {
                res.append(""SD card"");
            }
            if (readonly) {
                res.append("" (Read only)"");
            }
            return res.toString();
        }
    }

    public static List&lt;StorageInfo&gt; getStorageList() {

        List&lt;StorageInfo&gt; list = new ArrayList&lt;StorageInfo&gt;();
        String def_path = Environment.getExternalStorageDirectory().getPath();
        boolean def_path_internal = !Environment.isExternalStorageRemovable();
        String def_path_state = Environment.getExternalStorageState();
        boolean def_path_available = def_path_state.equals(Environment.MEDIA_MOUNTED)
                                    || def_path_state.equals(Environment.MEDIA_MOUNTED_READ_ONLY);
        boolean def_path_readonly = Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED_READ_ONLY);
        BufferedReader buf_reader = null;
        try {
            HashSet&lt;String&gt; paths = new HashSet&lt;String&gt;();
            buf_reader = new BufferedReader(new FileReader(""/proc/mounts""));
            String line;
            int cur_display_number = 1;
            Log.d(TAG, ""/proc/mounts"");
            while ((line = buf_reader.readLine()) != null) {
                Log.d(TAG, line);
                if (line.contains(""vfat"") || line.contains(""/mnt"")) {
                    StringTokenizer tokens = new StringTokenizer(line, "" "");
                    String unused = tokens.nextToken(); //device
                    String mount_point = tokens.nextToken(); //mount point
                    if (paths.contains(mount_point)) {
                        continue;
                    }
                    unused = tokens.nextToken(); //file system
                    List&lt;String&gt; flags = Arrays.asList(tokens.nextToken().split("","")); //flags
                    boolean readonly = flags.contains(""ro"");

                    if (mount_point.equals(def_path)) {
                        paths.add(def_path);
                        list.add(0, new StorageInfo(def_path, def_path_internal, readonly, -1));
                    } else if (line.contains(""/dev/block/vold"")) {
                        if (!line.contains(""/mnt/secure"")
                            &amp;&amp; !line.contains(""/mnt/asec"")
                            &amp;&amp; !line.contains(""/mnt/obb"")
                            &amp;&amp; !line.contains(""/dev/mapper"")
                            &amp;&amp; !line.contains(""tmpfs"")) {
                            paths.add(mount_point);
                            list.add(new StorageInfo(mount_point, false, readonly, cur_display_number++));
                        }
                    }
                }
            }

            if (!paths.contains(def_path) &amp;&amp; def_path_available) {
                list.add(0, new StorageInfo(def_path, def_path_internal, def_path_readonly, -1));
            }

        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            ex.printStackTrace();
        } finally {
            if (buf_reader != null) {
                try {
                    buf_reader.close();
                } catch (IOException ex) {}
            }
        }
        return list;
    }    
}
</code></pre>
"
"3647993","19996541","0","<p>The methods below scales AND rotates the bitmap according to the orientation:</p>

<pre><code>public Bitmap scaleAndRotateImage(String path, int orientation, final int targetWidth, final int targetHeight)
{
    Bitmap bitmap = null;

    try
    {
        // Check the dimensions of the Image
        final BitmapFactory.Options options = new BitmapFactory.Options();
        options.inJustDecodeBounds = true;
        BitmapFactory.decodeFile(path, options);

        // Adjust the Width and Height
        int sourceWidth, sourceHeight;
        if (orientation == 90 || orientation == 270)
        {
            sourceWidth = options.outHeight;
            sourceHeight = options.outWidth;
        }
        else
        {
            sourceWidth = options.outWidth;
            sourceHeight = options.outHeight;
        }

        // Calculate the maximum required scaling ratio if required and load the bitmap
        if (sourceWidth &gt; targetWidth || sourceHeight &gt; targetHeight)
        {
            float widthRatio = (float)sourceWidth / (float)targetWidth;
            float heightRatio = (float)sourceHeight / (float)targetHeight;
            float maxRatio = Math.max(widthRatio, heightRatio);
            options.inJustDecodeBounds = false;
            options.inSampleSize = (int)maxRatio;
            bitmap = BitmapFactory.decodeFile(path, options);
        }
        else
        {
            bitmap = BitmapFactory.decodeFile(path);
        }

        // We need to rotate the bitmap (if required)
        int orientationInDegrees = exifToDegrees(orientation);
        if (orientation &gt; 0)
        {
            Matrix matrix = new Matrix();
            if (orientation != 0f)
            {
                matrix.preRotate(orientationInDegrees);
            };

            bitmap = Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);
        }

        // Re-scale the bitmap if necessary
        sourceWidth = bitmap.getWidth();
        sourceHeight = bitmap.getHeight();

        if (sourceWidth != targetWidth || sourceHeight != targetHeight)
        {
            float widthRatio = (float)sourceWidth / (float)targetWidth;
            float heightRatio = (float)sourceHeight / (float)targetHeight;
            float maxRatio = Math.max(widthRatio, heightRatio);
            sourceWidth = (int)((float)sourceWidth / maxRatio);
            sourceHeight = (int)((float)sourceHeight / maxRatio);
            bitmap = Bitmap.createScaledBitmap(bitmap, sourceWidth, sourceHeight, true);
        }
    }
    catch (Exception e)
    {
        Logger.d(""Could not rotate the image"");
        Logger.d(e.getMessage());
    }
    return bitmap;
}
</code></pre>

<p>Example:</p>

<pre><code>public void getPictureFromDevice(Uri Uri,ImageView imageView)
{
    try
    {
        ExifInterface exifInterface = new ExifInterface(Uri.getPath());
        int orientation = exifInterface.getAttributeInt(ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_NORMAL);

        Bitmap bitmap = scaleAndRotateImage(Uri.getPath(), orientation, imageView.getWidth(), imageView.getHeight());
        imageView.setImageBitmap(bitmap);
    }
    catch (OutOfMemoryError outOfMemoryError)
    {
        Logger.d(outOfMemoryError.getLocalizedMessage());
        Logger.d(""Failed to load image from filePath (out of memory)"");
        Logger.d(Uri.toString());
    }
    catch (Exception e)
    {
        Logger.d(""Failed to load image from filePath"");
        Logger.d(Uri.toString());
    }
}
</code></pre>
"
"3611457","20017878","4","<p>In order to manage also the reverse orientation modes, I have used that code to fix the activity orientation:</p>

<pre><code>int rotation = getWindowManager().getDefaultDisplay().getRotation();

    switch(rotation) {
    case Surface.ROTATION_180:
        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_REVERSE_PORTRAIT);
        break;
    case Surface.ROTATION_270:
        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE);         
        break;
    case  Surface.ROTATION_0:
        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
        break;
    case Surface.ROTATION_90:
        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
        break;
    }
</code></pre>

<p>And to allow again the orientation:</p>

<pre><code>setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED);
</code></pre>
"
"2169649","20021099","2","<p>Just in case it helps; I do this to get the Bitmap:</p>

<pre><code>InputStream is = context.getContentResolver().openInputStream(imageUri);
Bitmap bitmap = BitmapFactory.decodeStream(is);
</code></pre>
"
"5832368","20175708","1","<p>This method is a recommend by Google. I see this code in Google Offical Android App <code>iosched</code></p>

<pre><code>public static boolean isTablet(Context context) {
        return (context.getResources().getConfiguration().screenLayout
                &amp; Configuration.SCREENLAYOUT_SIZE_MASK)
                &gt;= Configuration.SCREENLAYOUT_SIZE_LARGE;
}
</code></pre>
"
"6330260","20214851","2","<p>For logout button on last screen of app, use this code on logout button listener to finish all open previous activities, and your problem is solved.    </p>

<pre><code>{
Intent intent = new Intent(this, loginScreen.class);
ntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
startActivity(intent);
}
</code></pre>
"
"2139134","20234920","1","<p>Create Android Application</p>

<p>File >> New >> Android Application</p>

<p>Enter Project name: android-pass-object-to-activity</p>

<p>Pakcage: com.hmkcode.android</p>

<p>Keep other defualt selections, go Next  till you reach Finish</p>

<p>Before start creating the App we need to create POJO class “Person” which we will use to send object from one activity to another. Notice that the class is implementing Serializable interface.</p>

<p>Person.java</p>

<pre><code>package com.hmkcode.android;
import java.io.Serializable;

public class Person implements Serializable{

    private static final long serialVersionUID = 1L;

    private String name;
    private int age;

        // getters &amp; setters....

    @Override
    public String toString() {
        return ""Person [name="" + name + "", age="" + age + ""]"";
    }   
}
</code></pre>

<p>Two Layouts for Two Activities</p>

<p>activity_main.xml</p>

<pre><code>&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
xmlns:tools=""http://schemas.android.com/tools""
android:layout_width=""match_parent""
android:layout_height=""match_parent""
android:orientation=""vertical""
tools:context="".MainActivity"" &gt;

&lt;LinearLayout
    android:layout_width=""fill_parent""
    android:layout_height=""wrap_content""
    android:orientation=""horizontal""&gt;
    &lt;TextView
        android:id=""@+id/tvName""
        android:layout_width=""100dp""
        android:layout_height=""wrap_content""
        android:layout_gravity=""center""
        android:gravity=""center_horizontal""
        android:text=""Name"" /&gt;

    &lt;EditText
        android:id=""@+id/etName""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""

        android:ems=""10"" &gt;
        &lt;requestFocus /&gt;
    &lt;/EditText&gt;
&lt;/LinearLayout&gt;

&lt;LinearLayout
     android:layout_width=""fill_parent""
    android:layout_height=""wrap_content""
    android:orientation=""horizontal""&gt;
&lt;TextView
    android:id=""@+id/tvAge""
    android:layout_width=""100dp""
    android:layout_height=""wrap_content""
    android:layout_gravity=""center""
    android:gravity=""center_horizontal""
    android:text=""Age"" /&gt;
&lt;EditText
    android:id=""@+id/etAge""
    android:layout_width=""wrap_content""
    android:layout_height=""wrap_content""
    android:ems=""10"" /&gt;
&lt;/LinearLayout&gt;

&lt;Button
    android:id=""@+id/btnPassObject""
    android:layout_width=""wrap_content""
    android:layout_height=""wrap_content""
    android:layout_gravity=""center_horizontal""
    android:text=""Pass Object to Another Activity"" /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>activity_another.xml</p>

<pre><code>&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
xmlns:tools=""http://schemas.android.com/tools""
android:layout_width=""match_parent""
android:layout_height=""match_parent""
android:orientation=""vertical""
 &gt;

&lt;TextView
    android:id=""@+id/tvPerson""
    android:layout_height=""wrap_content""
    android:layout_width=""fill_parent""
    android:layout_gravity=""center""
    android:gravity=""center_horizontal""
 /&gt;

&lt;/LinearLayout&gt;
</code></pre>

<p>Two Activity Classes</p>

<p>1)ActivityMain.java</p>

<pre><code>package com.hmkcode.android;

import android.os.Bundle;
import android.app.Activity;
import android.content.Intent;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;

public class MainActivity extends Activity implements OnClickListener {

Button btnPassObject;
EditText etName, etAge;
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    btnPassObject = (Button) findViewById(R.id.btnPassObject);
    etName = (EditText) findViewById(R.id.etName);
    etAge = (EditText) findViewById(R.id.etAge);

    btnPassObject.setOnClickListener(this);
}

@Override
public void onClick(View view) {

    // 1. create an intent pass class name or intnet action name 
    Intent intent = new Intent(""com.hmkcode.android.ANOTHER_ACTIVITY"");

    // 2. create person object
    Person person = new Person();
    person.setName(etName.getText().toString());
    person.setAge(Integer.parseInt(etAge.getText().toString()));

    // 3. put person in intent data
    intent.putExtra(""person"", person);

    // 4. start the activity
    startActivity(intent);
}

}
</code></pre>

<p>2)AnotherActivity.java</p>

<pre><code>package com.hmkcode.android;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.widget.TextView;

public class AnotherActivity extends Activity {

TextView tvPerson;

@Override
protected void onCreate(Bundle savedInstanceState) {
    // TODO Auto-generated method stub
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_another);

    // 1. get passed intent 
    Intent intent = getIntent();

    // 2. get person object from intent
    Person person = (Person) intent.getSerializableExtra(""person"");

    // 3. get reference to person textView 
    tvPerson = (TextView) findViewById(R.id.tvPerson);

    // 4. display name &amp; age on textView 
    tvPerson.setText(person.toString());

}
}
</code></pre>
"
"2973270","20268027","11","<p>I was able to do this in a centralized way, here is the result:</p>

<p><img src=""http://i.stack.imgur.com/w3kkz.png"" alt=""enter image description here""></p>

<p>I have following <code>Activity</code> and I extend from it if I need custom fonts:</p>

<pre><code>import android.app.Activity;
import android.content.Context;
import android.os.Bundle;
import android.util.AttributeSet;
import android.view.LayoutInflater.Factory;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.TextView;

public class CustomFontActivity extends Activity {
@Override
protected void onCreate(Bundle savedInstanceState) {
    getLayoutInflater().setFactory(new Factory() {

        @Override
        public View onCreateView(String name, Context context,
                AttributeSet attrs) {
            View v = tryInflate(name, context, attrs);
            if (v instanceof TextView) {
                setTypeFace((TextView) v);
            }
            return v;
        }
    });
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
}

private View tryInflate(String name, Context context, AttributeSet attrs) {
    LayoutInflater li = LayoutInflater.from(context);
    View v = null;
    try {
        v = li.createView(name, null, attrs); 
    } catch (Exception e) {
        try {
            v = li.createView(""android.widget."" + name, null, attrs);
        } catch (Exception e1) {
        }
    }
    return v;
}

private void setTypeFace(TextView tv) {
    tv.setTypeface(FontUtils.getFonts(this, ""MTCORSVA.TTF""));
}
}
</code></pre>

<p>But if I am using an activity from support package e.g. <code>FragmentActivity</code> then I use this <code>Activity</code>: </p>

<pre><code>import android.annotation.TargetApi;
import android.content.Context;
import android.os.Build;
import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.TextView;

public class CustomFontFragmentActivity extends FragmentActivity {

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
}

// we can't setLayout Factory as its already set by FragmentActivity so we
// use this approach
@Override
public View onCreateView(String name, Context context, AttributeSet attrs) {
    View v = super.onCreateView(name, context, attrs);
    if (v == null) {
        v = tryInflate(name, context, attrs);
        if (v instanceof TextView) {
            setTypeFace((TextView) v);
        }
    }
    return v;
}

@TargetApi(Build.VERSION_CODES.HONEYCOMB)
@Override
public View onCreateView(View parent, String name, Context context,
        AttributeSet attrs) {
    View v = super.onCreateView(parent, name, context, attrs);
    if (v == null) {
        v = tryInflate(name, context, attrs);
        if (v instanceof TextView) {
            setTypeFace((TextView) v);
        }
    }
    return v;
}

private View tryInflate(String name, Context context, AttributeSet attrs) {
    LayoutInflater li = LayoutInflater.from(context);
    View v = null;
    try {
        v = li.createView(name, null, attrs);
    } catch (Exception e) {
        try {
            v = li.createView(""android.widget."" + name, null, attrs);
        } catch (Exception e1) {
        }
    }
    return v;
}

private void setTypeFace(TextView tv) {
    tv.setTypeface(FontUtils.getFonts(this, ""MTCORSVA.TTF""));
}
}
</code></pre>

<p>I haven't tested this code with <code>Fragment</code>s yet, but hopefully it will work. </p>

<p>My <code>FontUtils</code> is simple which also solves the pre-ICS issue mentioned here <a href=""https://code.google.com/p/android/issues/detail?id=9904"" rel=""nofollow"">https://code.google.com/p/android/issues/detail?id=9904</a>:</p>

<pre><code>import java.util.HashMap;
import java.util.Map;

import android.content.Context;
import android.graphics.Typeface;

public class FontUtils {

private static Map&lt;String, Typeface&gt; TYPEFACE = new HashMap&lt;String, Typeface&gt;();

public static Typeface getFonts(Context context, String name) { 
    Typeface typeface = TYPEFACE.get(name);
    if (typeface == null) {
        typeface = Typeface.createFromAsset(context.getAssets(), ""fonts/""
                + name);
        TYPEFACE.put(name, typeface);
    }
    return typeface;
}
}
</code></pre>
"
"3349121","20325852","10","<p>None of posted answers did not work for me. I came with my own solution:</p>

<pre><code>InputFilter filter = new InputFilter() {
    @Override
    public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
        boolean keepOriginal = true;
        StringBuilder sb = new StringBuilder(end - start);
        for (int i = start; i &lt; end; i++) {
            char c = source.charAt(i);
            if (isCharAllowed(c)) // put your condition here
                sb.append(c);
            else
                keepOriginal = false;
        }
        if (keepOriginal)
            return null;
        else {
            if (source instanceof Spanned) {
                SpannableString sp = new SpannableString(sb);
                TextUtils.copySpansFrom((Spanned) source, start, sb.length(), null, sp, 0);
                return sp;
            } else {
                return sb;
            }           
        }
    }

    private boolean isCharAllowed(char c) {
        return Character.isLetterOrDigit(c) || Character.isSpaceChar(c);
    }
}
editText.setFilters(new InputFilter[] { filter });
</code></pre>
"
"2201917","20356409","2","<p>A short code version...</p>

<pre><code> if (!strUrl.startsWith(""http://"") &amp;&amp; !strUrl.startsWith(""https://"")){
     strUrl= ""http://"" + strUrl;
 }


 startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(strUrl)));
</code></pre>
"
"6176391","20382468","2","<p>My fix to this most horrific bug, (worth noting that this is pre API11 only where they modified the fling method not to be stupid).</p>

<p>The old fling method finds the next focus that it will get to.. which isn't really that helpful. Other versions of this class don't really work as they stop focus working when the user genuinely traverses the form from the keyboard.</p>

<pre><code>public class NonFocusingScrollView extends ScrollView {

    private boolean mBlockRequestFocusOnFling = false;

    public NonFocusingScrollView(Context context) {
        super(context);
    }

    public NonFocusingScrollView(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    public NonFocusingScrollView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
    }

    @Override
    public ArrayList&lt;View&gt; getFocusables(int direction) {
        if(mBlockRequestFocusOnFling)
            return new ArrayList&lt;View&gt;();
        return super.getFocusables(direction);
    }

    @Override
    public void requestChildFocus(View child, View focused) {
        if(!mBlockRequestFocusOnFling)
        super.requestChildFocus(child, focused);
    }


    @Override
    public void fling(int velocityY) {
        mBlockRequestFocusOnFling = true;
        super.fling(velocityY);
        mBlockRequestFocusOnFling = false;
    }
}
</code></pre>
"
"3996938","20387825","0","<p>There is no need to handle the checking/unchecking of items within the ListView. It already does it on its own.</p>

<p>What does not seem documented is that the ListView will only do this if:</p>

<ol>
<li>a <code>ListAdapter</code> is set and </li>
<li>the choice mode is CHOICE_MODE_MULTIPLE and</li>
<li>the ids used by the <code>ListAdapter</code> are <strong>stable</strong>.</li>
</ol>

<p>The third point was what drove me crazy for a while.</p>

<p>I am not sure what 'stable' means (I guess that the ids don't ever change while the list is displayed). 
As far as the ListView is concerned, it means that the method <code>hasStableIds()</code> in <code>ListAdapter</code> returns true.</p>

<p>I created a simple subclass of <code>ArrayAdapter</code> like this:</p>

<pre><code>public class StableArrayAdapter&lt;T&gt; extends ArrayAdapter&lt;T&gt; {

    public StableArrayAdapter(Context context, int textViewResourceId, List&lt;T&gt; objects) {
        super(context, textViewResourceId, objects);
    }

    @Override
    public boolean hasStableIds() {
        return true;
    }
}
</code></pre>

<p>(You already have your subclass, so just add the <code>hasStableIds</code> override)</p>

<p>Of course, one needs to add the constructor that one was using with <code>ArrayAdapter</code>.</p>

<p>Once you use this class as your <code>ListAdapter</code>, <code>getCheckedItemPositions()</code> behaves as expected.</p>

<p>One last note: <code>setChoiceMode</code> must be called AFTER setting the list adapter.</p>
"
"2150078","20424575","1","<p>The idea is, if you need to hide your keyboard and check soft input state at the same time, use the following solution:</p>

<pre><code>public boolean hideSoftInput() {
    InputMethodManager imm = (InputMethodManager) getSystemService(Activity.INPUT_METHOD_SERVICE);
    return imm.hideSoftInputFromWindow(mViewPager.getWindowToken(), 0);
}
</code></pre>

<p>This method returns true if keyboard was shown before hiding.</p>
"
"5033012","20426634","5","<p>My need was to resize text in order to perfectly fit view bounds. Chase's solution only reduces text size, this one enlarges also the text if there is enough space.</p>

<p>To make all <strong>fast &amp; precise</strong> i used a bisection method instead of an iterative while, as you can see in <code>resizeText()</code> method. That's why you have also a <code>MAX_TEXT_SIZE</code> option. I also included onoelle's tips.</p>

<p>Tested on Android 4.4</p>

<pre><code>/**
 *               DO WHAT YOU WANT TO PUBLIC LICENSE
 *                    Version 2, December 2004
 *
 * Copyright (C) 2004 Sam Hocevar &lt;sam@hocevar.net&gt;
 *
 * Everyone is permitted to copy and distribute verbatim or modified
 * copies of this license document, and changing it is allowed as long
 * as the name is changed.
 *
 *            DO WHAT YOU WANT TO PUBLIC LICENSE
 *   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
 *
 *  0. You just DO WHAT YOU WANT TO.
 */

import android.content.Context;
import android.text.Layout.Alignment;
import android.text.StaticLayout;
import android.text.TextPaint;
import android.util.AttributeSet;
import android.util.TypedValue;
import android.widget.TextView;

/**
 * Text view that auto adjusts text size to fit within the view.
 * If the text size equals the minimum text size and still does not
 * fit, append with an ellipsis.
 *
 * @author Chase Colburn
 * @since Apr 4, 2011
 */
public class AutoResizeTextView extends TextView {

    // Minimum text size for this text view
    public static final float MIN_TEXT_SIZE = 26;

    // Maximum text size for this text view
    public static final float MAX_TEXT_SIZE = 128;

    private static final int BISECTION_LOOP_WATCH_DOG = 30;

    // Interface for resize notifications
    public interface OnTextResizeListener {
        public void onTextResize(TextView textView, float oldSize, float newSize);
    }

    // Our ellipse string
    private static final String mEllipsis = ""..."";

    // Registered resize listener
    private OnTextResizeListener mTextResizeListener;

    // Flag for text and/or size changes to force a resize
    private boolean mNeedsResize = false;

    // Text size that is set from code. This acts as a starting point for resizing
    private float mTextSize;

    // Temporary upper bounds on the starting text size
    private float mMaxTextSize = MAX_TEXT_SIZE;

    // Lower bounds for text size
    private float mMinTextSize = MIN_TEXT_SIZE;

    // Text view line spacing multiplier
    private float mSpacingMult = 1.0f;

    // Text view additional line spacing
    private float mSpacingAdd = 0.0f;

    // Add ellipsis to text that overflows at the smallest text size
    private boolean mAddEllipsis = true;

    // Default constructor override
    public AutoResizeTextView(Context context) {
        this(context, null);
    }

    // Default constructor when inflating from XML file
    public AutoResizeTextView(Context context, AttributeSet attrs) {
        this(context, attrs, 0);
    }

    // Default constructor override
    public AutoResizeTextView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        mTextSize = getTextSize();
    }

    /**
     * When text changes, set the force resize flag to true and reset the text size.
     */
    @Override
    protected void onTextChanged(final CharSequence text, final int start, final int before, final int after) {
        mNeedsResize = true;
        // Since this view may be reused, it is good to reset the text size
        resetTextSize();
    }

    /**
     * If the text view size changed, set the force resize flag to true
     */
    @Override
    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        if (w != oldw || h != oldh) {
            mNeedsResize = true;
        }
    }

    /**
     * Register listener to receive resize notifications
     * @param listener
     */
    public void setOnResizeListener(OnTextResizeListener listener) {
        mTextResizeListener = listener;
    }

    /**
     * Override the set text size to update our internal reference values
     */
    @Override
    public void setTextSize(float size) {
        super.setTextSize(size);
        mTextSize = getTextSize();
    }

    /**
     * Override the set text size to update our internal reference values
     */
    @Override
    public void setTextSize(int unit, float size) {
        super.setTextSize(unit, size);
        mTextSize = getTextSize();
    }

    /**
     * Override the set line spacing to update our internal reference values
     */
    @Override
    public void setLineSpacing(float add, float mult) {
        super.setLineSpacing(add, mult);
        mSpacingMult = mult;
        mSpacingAdd = add;
    }

    /**
     * Set the upper text size limit and invalidate the view
     * @param maxTextSize
     */
    public void setMaxTextSize(float maxTextSize) {
        mMaxTextSize = maxTextSize;
        requestLayout();
        invalidate();
    }

    /**
     * Return upper text size limit
     * @return
     */
    public float getMaxTextSize() {
        return mMaxTextSize;
    }

    /**
     * Set the lower text size limit and invalidate the view
     * @param minTextSize
     */
    public void setMinTextSize(float minTextSize) {
        mMinTextSize = minTextSize;
        requestLayout();
        invalidate();
    }

    /**
     * Return lower text size limit
     * @return
     */
    public float getMinTextSize() {
        return mMinTextSize;
    }

    /**
     * Set flag to add ellipsis to text that overflows at the smallest text size
     * @param addEllipsis
     */
    public void setAddEllipsis(boolean addEllipsis) {
        mAddEllipsis = addEllipsis;
    }

    /**
     * Return flag to add ellipsis to text that overflows at the smallest text size
     * @return
     */
    public boolean getAddEllipsis() {
        return mAddEllipsis;
    }

    /**
     * Reset the text to the original size
     */
    public void resetTextSize() {
        if(mTextSize &gt; 0) {
            super.setTextSize(TypedValue.COMPLEX_UNIT_PX, mTextSize);
            //mMaxTextSize = mTextSize;
        }
    }

    /**
     * Resize text after measuring
     */
    @Override
    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
        if(changed || mNeedsResize) {
            int widthLimit = (right - left) - getCompoundPaddingLeft() - getCompoundPaddingRight();
            int heightLimit = (bottom - top) - getCompoundPaddingBottom() - getCompoundPaddingTop();
            resizeText(widthLimit, heightLimit);
        }
        super.onLayout(changed, left, top, right, bottom);
    }


    /**
     * Resize the text size with default width and height
     */
    public void resizeText() {
        int heightLimit = getHeight() - getPaddingBottom() - getPaddingTop();
        int widthLimit = getWidth() - getPaddingLeft() - getPaddingRight();
        resizeText(widthLimit, heightLimit);
    }

    /**
     * Resize the text size with specified width and height
     * @param width
     * @param height
     */
    public void resizeText(int width, int height) {
        CharSequence text = getText();
        // Do not resize if the view does not have dimensions or there is no text
        if(text == null || text.length() == 0 || height &lt;= 0 || width &lt;= 0 || mTextSize == 0) {
            return;
        }

        // Get the text view's paint object
        TextPaint textPaint = getPaint();

        // Store the current text size
        float oldTextSize = textPaint.getTextSize();

        // Bisection method: fast &amp; precise
        float lower = mMinTextSize;
        float upper = mMaxTextSize;
        int loop_counter=1;
        float targetTextSize = (lower+upper)/2;
        int textHeight = getTextHeight(text, textPaint, width, targetTextSize);
        while(loop_counter &lt; BISECTION_LOOP_WATCH_DOG &amp;&amp; upper - lower &gt; 1) {
            targetTextSize = (lower+upper)/2;
            textHeight = getTextHeight(text, textPaint, width, targetTextSize);
            if(textHeight &gt; height)
                upper = targetTextSize;
            else
                lower = targetTextSize;
            loop_counter++;
        }

        targetTextSize = lower;
        textHeight = getTextHeight(text, textPaint, width, targetTextSize);

        // If we had reached our minimum text size and still don't fit, append an ellipsis
        if(mAddEllipsis &amp;&amp; targetTextSize == mMinTextSize &amp;&amp; textHeight &gt; height) {
            // Draw using a static layout
            // modified: use a copy of TextPaint for measuring
            TextPaint paintCopy = new TextPaint(textPaint);
            paintCopy.setTextSize(targetTextSize);
            StaticLayout layout = new StaticLayout(text, paintCopy, width, Alignment.ALIGN_NORMAL, mSpacingMult, mSpacingAdd, false);
            // Check that we have a least one line of rendered text
            if(layout.getLineCount() &gt; 0) {
                // Since the line at the specific vertical position would be cut off,
                // we must trim up to the previous line
                int lastLine = layout.getLineForVertical(height) - 1;
                // If the text would not even fit on a single line, clear it
                if(lastLine &lt; 0) {
                    setText("""");
                }
                // Otherwise, trim to the previous line and add an ellipsis
                else {
                    int start = layout.getLineStart(lastLine);
                    int end = layout.getLineEnd(lastLine);
                    float lineWidth = layout.getLineWidth(lastLine);
                    float ellipseWidth = paintCopy.measureText(mEllipsis);

                    // Trim characters off until we have enough room to draw the ellipsis
                    while(width &lt; lineWidth + ellipseWidth) {
                        lineWidth = paintCopy.measureText(text.subSequence(start, --end + 1).toString());
                    }
                    setText(text.subSequence(0, end) + mEllipsis);
                }
            }
        }

        // Some devices try to auto adjust line spacing, so force default line spacing
        // and invalidate the layout as a side effect
        setTextSize(TypedValue.COMPLEX_UNIT_PX, targetTextSize);
        setLineSpacing(mSpacingAdd, mSpacingMult);

        // Notify the listener if registered
        if(mTextResizeListener != null) {
            mTextResizeListener.onTextResize(this, oldTextSize, targetTextSize);
        }

        // Reset force resize flag
        mNeedsResize = false;
    }

    // Set the text size of the text paint object and use a static layout to render text off screen before measuring
    private int getTextHeight(CharSequence source, TextPaint originalPaint, int width, float textSize) {
        // modified: make a copy of the original TextPaint object for measuring
        // (apparently the object gets modified while measuring, see also the
        // docs for TextView.getPaint() (which states to access it read-only)
        TextPaint paint = new TextPaint(originalPaint);
        // Update the text paint object
        paint.setTextSize(textSize);
        // Measure using a static layout
        StaticLayout layout = new StaticLayout(source, paint, width, Alignment.ALIGN_NORMAL, mSpacingMult, mSpacingAdd, true);
        return layout.getHeight();
    }

}
</code></pre>
"
"4894885","20521274","0","<pre><code>public String getExtension(File file) {
        String fileName = file.getName();
        try {
            if (fileName.contains(""\\."")) {
                String filenameArray[] = fileName.split(""\\."");
                extension = filenameArray[filenameArray.length - 1];
            } else {
                extension = ""dir"";
            }
        } catch (Exception e) {
            extension = ""err"";
        }
        return extension;
    }
</code></pre>
"
"2139134","20607791","2","<pre><code>Intent i = new Intent();
i.putExtra(""name_of_extra"", myParcelableObject);
startACtivity(i);
</code></pre>
"
"2201917","20674499","2","<p>You can also go this way</p>

<p>In xml :</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;WebView  
xmlns:android=""http://schemas.android.com/apk/res/android""
android:id=""@+id/webView1""
android:layout_width=""fill_parent""
android:layout_height=""fill_parent"" /&gt;
</code></pre>

<p>In java code :</p>

<pre><code>public class WebViewActivity extends Activity {

private WebView webView;

public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.webview);

    webView = (WebView) findViewById(R.id.webView1);
    webView.getSettings().setJavaScriptEnabled(true);
    webView.loadUrl(""http://www.google.com"");

 }

}
</code></pre>

<p>In Manifest dont forget to add internet permission...  </p>
"
"6343166","20762621","7","<p>Do network action on others thread</p>

<pre><code>new Thread(new runnable(){
    @Override
    public void run() {
        //do network action in this function
    }
}).start();
</code></pre>

<p>and add this to AndroidManifest.xml    </p>

<pre><code>&lt;uses-permission android:name=""android.permission.INTERNET""/&gt;
</code></pre>
"
"3647993","20886833","0","<p>maybe this will help (rotate 90 degree)(this worked for me)</p>

<pre><code>private Bitmap rotateBitmap(Bitmap image){
        int width=image.getHeight();
        int height=image.getWidth();

        Bitmap srcBitmap=Bitmap.createBitmap(width, height, image.getConfig());

        for (int y=width-1;y&gt;=0;y--)
            for(int x=0;x&lt;height;x++)
                srcBitmap.setPixel(width-y-1, x,image.getPixel(x, y));
        return srcBitmap;

    }
</code></pre>
"
"4946295","20892441","7","<p>I stumbled over the same problem today and I guess the real solution to this question is this </p>

<pre><code>&lt;LinearLayout android:id=""@+id/container""
android:animateLayoutChanges=""true""
...
 /&gt;
</code></pre>

<p>You will have to set this property for all topmost layouts, which are involved in the shift. If you now set the visibility of one layout to GONE, the other will take the space as the disappearing one is releasing it. There will be a default animation which is some kind of ""fading out"", but I think you can change this - but the last one I have not tested, for now.</p>
"
"6343166","20937422","4","<p>You should not do any time-consuming task on the main thread (UI thread), like any network operation, file I/O, or SQLite database operations. So for this kind of operation, you should create a worker thread, but the problem is that you can not directly perform any UI related operation from your worker thread. For that, you have to use <code>Handler</code> and pass the <code>Message</code>. </p>

<p>To simplify all these things, Android provides various ways, like <code>AsyncTask</code>, <code>AsyncTaskLoader</code>, <code>CursorLoader</code> or <code>IntentService</code>. So you can use any of these according to your requirements.</p>
"
"4617898","20940912","9","<p>The problem with using a selector for an ImageView is that you can only set it as the view's background - as long as your image is opaque, you will not see the selector's effect behind it.</p>

<p>The trick is to wrap your ImageView in a FrameLayout with the attribute <a href=""http://developer.android.com/reference/android/widget/FrameLayout.html#attr_android%3aforeground""><code>android:foreground</code></a> which allows us to define an <em>overlay</em> for its content. If we set <a href=""http://developer.android.com/reference/android/widget/FrameLayout.html#attr_android%3aforeground""><code>android:foreground</code></a>to a selector (e.g.<code>?android:attr/selectableItemBackground</code> for API level 11+) and attach the <code>OnClickListener</code> to the FrameLayout instead of the ImageView, the image will be overlaid with our selector's drawable - the click effect we desire!</p>

<p>Behold:</p>

<pre><code>&lt;FrameLayout
    android:id=""@+id/imageButton""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""
    android:foreground=""?android:attr/selectableItemBackground"" &gt;

    &lt;ImageView
        android:layout_width=""match_parent""
        android:layout_height=""match_parent""
        android:src=""@drawable/yourImageFile"" /&gt;

&lt;/FrameLayout&gt;
</code></pre>

<p>(Note this should be placed within your parent layout.)</p>

<pre><code>final View imageButton = findViewById(R.id.imageButton);
imageButton.setOnClickListener(new OnClickListener(){
    @Override
    public void onClick(View view) {
        // do whatever we wish!
    }
});
</code></pre>
"
"4946295","21012461","5","<p>If you don't want to expand or collapse all the way - here is a simple HeightAnimation - </p>

<pre><code>import android.view.View;
import android.view.animation.Animation;
import android.view.animation.Transformation;

public class HeightAnimation extends Animation {
    protected final int originalHeight;
    protected final View view;
    protected float perValue;

    public HeightAnimation(View view, int fromHeight, int toHeight) {
        this.view = view;
        this.originalHeight = fromHeight;
        this.perValue = (toHeight - fromHeight);
    }

    @Override
    protected void applyTransformation(float interpolatedTime, Transformation t) {
        view.getLayoutParams().height = (int) (originalHeight + perValue * interpolatedTime);
        view.requestLayout();
    }

    @Override
    public boolean willChangeBounds() {
        return true;
    }
}
</code></pre>

<p>Usage:</p>

<pre><code>HeightAnimation heightAnim = new HeightAnimation(view, view.getHeight(), viewPager.getHeight() - otherView.getHeight());
heightAnim.setDuration(1000);
view.startAnimation(heightAnim);
</code></pre>
"
"2317428","21076218","1","<pre><code>package anywheresoftware.b4a.student;

import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.util.FloatMath;

public class ShakeEventListener implements SensorEventListener {

    /*
     * The gForce that is necessary to register as shake.
     * Must be greater than 1G (one earth gravity unit).
     * You can install ""G-Force"", by Blake La Pierre
     * from the Google Play Store and run it to see how
     *  many G's it takes to register a shake
     */
    private static final float SHAKE_THRESHOLD_GRAVITY = 2.7F;
    private static int SHAKE_SLOP_TIME_MS = 500;
    private static final int SHAKE_COUNT_RESET_TIME_MS = 1000;

    private OnShakeListener mListener;
    private long mShakeTimestamp;
    private int mShakeCount;

    public void setOnShakeListener(OnShakeListener listener) {
        this.mListener = listener;
    }

    public interface OnShakeListener {
        public void onShake(int count);
    }

    @Override
    public void onAccuracyChanged(Sensor sensor, int accuracy) {
        // ignore
    }

    @Override
    public void onSensorChanged(SensorEvent event) {

        if (mListener != null) {
            float x = event.values[0];
            float y = event.values[1];
            float z = event.values[2];

            float gX = x / SensorManager.GRAVITY_EARTH;
            float gY = y / SensorManager.GRAVITY_EARTH;
            float gZ = z / SensorManager.GRAVITY_EARTH;

            // gForce will be close to 1 when there is no movement.
            float gForce = FloatMath.sqrt(gX * gX + gY * gY + gZ * gZ);

            if (gForce &gt; SHAKE_THRESHOLD_GRAVITY) {
                final long now = System.currentTimeMillis();
                // ignore shake events too close to each other (500ms)
                if (mShakeTimestamp + getSHAKE_SLOP_TIME_MS() &gt; now) {
                    return;
                }

                // reset the shake count after 3 seconds of no shakes
                if (mShakeTimestamp + SHAKE_COUNT_RESET_TIME_MS &lt; now) {
                    mShakeCount = 0;
                }

                mShakeTimestamp = now;
                mShakeCount++;

                mListener.onShake(mShakeCount);
            }
        }
    }

    private long getSHAKE_SLOP_TIME_MS() {
        // TODO Auto-generated method stub
        return SHAKE_SLOP_TIME_MS;
    }

    public void setSHAKE_SLOP_TIME_MS(int sHAKE_SLOP_TIME_MS) {
        SHAKE_SLOP_TIME_MS = sHAKE_SLOP_TIME_MS;
    }   

}
</code></pre>
"
"2322234","21082229","0","<p>Unique device ID of Android OS Device as String.</p>

<pre><code>String deviceId;
    final TelephonyManager mTelephony = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);
        if (mTelephony.getDeviceId() != null){
            deviceId = mTelephony.getDeviceId(); 
         }
        else{
            deviceId = Secure.getString(getApplicationContext().getContentResolver(),   Secure.ANDROID_ID); 
         }
</code></pre>

<p>but I strngly recommend this method suggested by Google::</p>

<p><a href=""http://android-developers.blogspot.mx/2011/03/identifying-app-installations.html"" rel=""nofollow"">Identifying App Installations</a></p>
"
"4894885","21084350","0","<p>The shortest way to find out file extension is using <code>lastIndexOf('.')</code> assuming file name contains extension. Check the following code</p>

<pre><code>String fileName = ""test.jpg"";
int i = fileName.lastIndexOf('.');
String fileExtension = fileName.substring(i+1);
Log.v(""FILE EXTENSION: "",fileExtension);
</code></pre>
"
"6343166","21107128","6","<p>Network based operations cannot be run on Main Thread. You need to run all network based task on a child thread or implement AsyncTask.</p>

<p>This is how you run a ask in child thread : </p>

<pre><code>new Thread(new Runnable(){
    @Override
    public void run() {
        try {
            //Your implementation goes here
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
}).start();
</code></pre>
"
"5105354","21130582","3","<p>Sometimes raukodraug's answer won't work. I've make it in this way with some trials and errors:</p>

<pre><code>public static void showKeyboard(Activity activity) {
    if (activity != null) {
        activity.getWindow()
                .setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);
    }
}

public static void hideKeyboard(Activity activity) {
    if (activity != null) {
        activity.getWindow()
                .setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
    }
}
</code></pre>

<p>And the <strong>EditText</strong> part: </p>

<pre><code>    editText.setOnFocusChangeListener(new View.OnFocusChangeListener() {
        @Override
        public void onFocusChange(View v, boolean hasFocus) {
            if (!hasFocus) {
                hideKeyboard(getActivity());
            } else {
                showKeyboard(getActivity());
            }
        }
    });
</code></pre>
"
"2322234","21142395","3","<p>Since <strong>no answer here mentions a perfect, fail-proof ID that is both PERSISTENT through system updates and exists in ALL devices</strong> (mainly due to the fact that there isn't an individual solution from Google), I decided to post a method that is the next best thing by combining two of the available identifiers, and a check to chose between them at run-time.</p>

<p>Before code, 3 facts:</p>

<ol>
<li><p><code>TelephonyManager.getDeviceId()</code> (a.k.a.IMEI) will not work well or at all for non-GSM, 3G, LTE, etc. devices, but <strong>will always return a unique ID when related hardware is present</strong>, even when no SIM is inserted or even when no SIM slot exists (some OEM's have done this).</p></li>
<li><p>Since Gingerbread (Android 2.3) <code>android.os.Build.SERIAL</code> <strong>must exist on any device that doesn't provide IMEI</strong>, i.e., doesn't have the aforementioned hardware present, as per Android policy.</p></li>
<li><p>Due to fact (2.), <strong>at least one of these two unique identifiers will ALWAYS be present</strong>, and SERIAL <strong>can</strong> be present at the same time that IMEI is.</p></li>
</ol>

<p>Note: Fact (1.) and (2.) are <a href=""http://android-developers.blogspot.pt/2011/03/identifying-app-installations.html"" rel=""nofollow"">based on Google statements</a></p>

<p><strong>SOLUTION</strong></p>

<p>With the facts above, one can always have a unique identifier by checking if there is IMEI-bound hardware, and fall back to SERIAL when it isn't, as one cannot check if the existing SERIAL is valid. The following static class presents 2 methods for checking such presence and using either IMEI or SERIAL:</p>

<pre><code>import java.lang.reflect.Method;

import android.content.Context;
import android.content.pm.PackageManager;
import android.os.Build;
import android.provider.Settings;
import android.telephony.TelephonyManager;
import android.util.Log;

public class IDManagement {

    public static String getCleartextID_SIMCHECK (Context mContext){
        String ret = """";

        TelephonyManager telMgr = (TelephonyManager) mContext.getSystemService(Context.TELEPHONY_SERVICE);

        if(isSIMAvailable(mContext,telMgr)){
            Log.i(""DEVICE UNIQUE IDENTIFIER"",telMgr.getDeviceId());
            return telMgr.getDeviceId();

        }
        else{
            Log.i(""DEVICE UNIQUE IDENTIFIER"", Settings.Secure.ANDROID_ID);

//          return Settings.Secure.ANDROID_ID;
            return android.os.Build.SERIAL;
        }
    }


    public static String getCleartextID_HARDCHECK (Context mContext){
        String ret = """";

        TelephonyManager telMgr = (TelephonyManager) mContext.getSystemService(Context.TELEPHONY_SERVICE);
        if(telMgr != null &amp;&amp; hasTelephony(mContext)){           
            Log.i(""DEVICE UNIQUE IDENTIFIER"",telMgr.getDeviceId() + """");

            return telMgr.getDeviceId();    
        }
        else{
            Log.i(""DEVICE UNIQUE IDENTIFIER"", Settings.Secure.ANDROID_ID);

//          return Settings.Secure.ANDROID_ID;
            return android.os.Build.SERIAL;
        }
    }


    public static boolean isSIMAvailable(Context mContext, 
            TelephonyManager telMgr){

        int simState = telMgr.getSimState();

        switch (simState) {
        case TelephonyManager.SIM_STATE_ABSENT:
            return false;
        case TelephonyManager.SIM_STATE_NETWORK_LOCKED:
            return false;
        case TelephonyManager.SIM_STATE_PIN_REQUIRED:
            return false;
        case TelephonyManager.SIM_STATE_PUK_REQUIRED:
            return false;
        case TelephonyManager.SIM_STATE_READY:
            return true;
        case TelephonyManager.SIM_STATE_UNKNOWN:
            return false;
        default:
            return false;
        }
    }

    static public boolean hasTelephony(Context mContext)
    {
        TelephonyManager tm = (TelephonyManager) mContext.getSystemService(Context.TELEPHONY_SERVICE);
        if (tm == null)
            return false;

        //devices below are phones only
        if (Build.VERSION.SDK_INT &lt; 5)
            return true;

        PackageManager pm = mContext.getPackageManager();

        if (pm == null)
            return false;

        boolean retval = false;
        try
        {
            Class&lt;?&gt; [] parameters = new Class[1];
            parameters[0] = String.class;
            Method method = pm.getClass().getMethod(""hasSystemFeature"", parameters);
            Object [] parm = new Object[1];
            parm[0] = ""android.hardware.telephony"";
            Object retValue = method.invoke(pm, parm);
            if (retValue instanceof Boolean)
                retval = ((Boolean) retValue).booleanValue();
            else
                retval = false;
        }
        catch (Exception e)
        {
            retval = false;
        }

        return retval;
    }


}
</code></pre>

<p>I would advice on using <code>getCleartextID_HARDCHECK</code>. If the reflection doesn't stick in your environment, use the <code>getCleartextID_SIMCHECK</code> method instead, but take in consideration it should be adapted to your specific SIM-presence needs.</p>

<p><strong>P.S.</strong>: Do please note that OEM's have <strong>managed to bug out SERIAL against Google policy</strong> (multiple devices with same SERIAL), and Google as stated there is at least one known case in a big OEM (not disclosed and I don't know which brand it is either, I'm guessing Samsung).</p>

<p><strong>Disclaimer</strong>: This answers the original question of getting a unique device ID, but the OP introduced ambiguity by stating he needs a unique ID for an APP. Even if for such scenarios Android_ID would be better, it WILL NOT WORK after, say, a Titanium Backup of an app through 2 different ROM installs (can even be the same ROM). My solution maintains persistence that is independent of a flash or factory reset, and will only fail when IMEI or SERIAL tampering occurs through hacks/hardware mods.</p>
"
"3226495","21174405","0","<p>(I tried previous answers but they lacks in some points. For example if you don't do a <code>return;</code> after finishing activity, remaining activity code runs. Also you need to edit onCreate with return. If you doesn't run super.onCreate() you will get a runtime error)</p>

<p>Say you have <code>MainActivity</code> and <code>ChildActivity</code>.</p>

<p>Inside ChildActivity add this:</p>

<pre><code>Intent intent = new Intent(ChildActivity.this, MainActivity.class);
intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
intent.putExtra(""EXIT"", true);
startActivity(intent);
return true;
</code></pre>

<p>Inside MainActivity's onCreate add this:</p>

<pre><code>@Override
public void onCreate(Bundle savedInstanceState) {

    mContext = getApplicationContext();

    super.onCreate(savedInstanceState);

    if (getIntent().getBooleanExtra(""EXIT"", false)) {
        finish();
        return;
    }
    // your current codes
    // your current codes
}
</code></pre>
"
"2160619","21196314","5","<p>In my app, I had similar problem: 2 line of string and, eventually, add ""..."" if the string was too long.
I used this code in xml file into textview tag:</p>

<pre><code>android:maxLines=""2""
android:ellipsize=""end""
android:singleLine=""false""
</code></pre>
"
"5763304","21231929","0","<p>Found this simple solution just set </p>

<pre><code>ScrollView.requestDisallowInterceptTouchEvent(true);
</code></pre>
"
"2736389","21255137","6","<p>Create your own class <code>Customer</code> as following:</p>

<pre><code>import import java.io.Serializable;
public class Customer implements Serializable
{
    private String name;
    private String city;

    public Customer()
    {

    }
    public Customer(String name, String city)
    {
        this.name= name;
        this.city=city;
    }
    public String getName() 
    {
        return name;
    }
    public void setName(String name) 
    {
        this.name = name;
    }
    public String getCity() 
    {
        return city;
    }
    public void setCity(String city) 
    {
        this.city= city;
    }

}
</code></pre>

<p>In your <code>onCrate()</code> method</p>

<pre><code>@Override
protected void onCreate(Bundle savedInstanceState) 
{
    super.onCreate(savedInstanceState); 
    setContentView(R.layout.activity_top);

    Customer cust=new Customer();
    cust.setName(""abc"");
    cust.setCity(""xyz"");

    Intent intent=new Intent(abc.this,xyz.class);
    intent.putExtra(""bundle"",cust);
    startActivity(intent); 
}
</code></pre>

<p>In <code>xyz activity</code> class you neet to use following code:</p>

<pre><code>Intent intent=getIntent();
Customer cust=(Customer)intent.getSerializableExtra(""class"");
textViewName.setText(cust.getName());
textViewCity.setText(cust.getCity());
</code></pre>
"
"6343166","21284021","13","<p>There are several alternatives to the accepted answer, each with different trade-offs. Let me start by saying that the accepted answer is good, and I up-voted it, but it isn't the only way and it does have some down-sides:</p>

<ul>
<li>AsyncTask's created as non-static inner classes have an implicit reference to the enclosing Activity object, its context, and the entire View hierarchy created by that activity. This reference prevents the Activity from being garbage collected until the AsyncTask's background work completes. If the user's connection is slow, and/or the download is large, these short-term memory leaks can become a problem - for example if the orientation changes several times (and you don't cancel the executing tasks), or the user navigates away from the Activity.</li>
<li>AsyncTask has different execution characteristics depending on the platform it executes on: prior to API level 4 AsyncTasks execute serially on a single background thread; from API level 4 through API level 10, AsyncTasks execute on a pool of up to 128 threads; from API level 11 onwards AsyncTask executes serially on a single background thread (unless you use the overloaded <code>executeOnExecutor</code> method and supply an alternative executor). Code that works fine when run serially on ICS may break when executed concurrently on Gingerbread, say, if you have inadvertent order-of-execution dependencies.</li>
</ul>

<p>If you want to avoid short-term memory leaks, have well defined execution characteristics across all platforms, and have a base to build really robust network handling, you might want to consider:</p>

<ol>
<li>Using a library that does a nice job of this for you - there's a nice comparison of networking libs in <a href=""http://stackoverflow.com/questions/16902716/comparison-of-android-networking-libraries-okhttp-retrofit-volley"">this question</a>, or</li>
<li>Using a <code>Service</code> or <code>IntentService</code> instead, perhaps with a <code>PendingIntent</code> to return the result via the Activity's <code>onActivityResult</code> method.</li>
</ol>

<h2>IntentService approach</h2>

<p>Down-sides:</p>

<ul>
<li>More code and complexity than <code>AsyncTask</code>, though not as much as you might think</li>
<li>Will queue requests and run them on a <em>single</em> background thread. You can easily control this by replacing <code>IntentService</code> with an equivalent <code>Service</code> implementation, perhaps like <a href=""https://github.com/steveliles/AsyncAndroid/blob/master/AsyncAndroid/src/main/java/com/packt/asyncandroid/chapter6/ConcurrentIntentService.java"">this one</a>.</li>
<li>Um, I can't think of any others right now actually</li>
</ul>

<p>Up-sides:</p>

<ul>
<li>Avoids the short-term memory leak problem</li>
<li>If your activity restarts while network operations are in-flight it can still receive the result of the download via its <code>onActivityResult</code> method</li>
<li>Better platform than AsyncTask to build and re-use robust networking code. Example: if you need to do an important upload, you could do it from <code>AsyncTask</code> in an <code>Activity</code>, but if the user context-switches out of the app to take a phone-call, the system <em>may</em> kill the app before the upload completes. It is <em>less likely</em> to kill an application with an active <code>Service</code>.</li>
<li>If you use your own concurrent version of <code>IntentService</code> (like the one I linked above) you can control the level of concurrency via the <code>Executor</code>.</li>
</ul>

<h2>Implementation summary</h2>

<p>You can implement an <code>IntentService</code> to perform downloads on a single background thread quite easily.</p>

<p>Step 1: Create an <code>IntentService</code> to perform the download. You can tell it what to download via <code>Intent</code> extra's, and pass it a <code>PendingIntent</code> to use to return the result to the <code>Activity</code>:</p>

<pre><code>import android.app.IntentService;
import android.app.PendingIntent;
import android.content.Intent;
import android.util.Log;

import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;

public class DownloadIntentService extends IntentService {

    private static final String TAG = DownloadIntentService.class.getSimpleName();

    public static final String PENDING_RESULT_EXTRA = ""pending_result"";
    public static final String URL_EXTRA = ""url"";
    public static final String RSS_RESULT_EXTRA = ""url"";

    public static final int RESULT_CODE = 0;
    public static final int INVALID_URL_CODE = 1;
    public static final int ERROR_CODE = 2;

    private IllustrativeRSSParser parser;

    public DownloadIntentService() {
        super(TAG);

        // make one and re-use, in the case where more than one intent is queued
        parser = new IllustrativeRSSParser();
    }

    @Override
    protected void onHandleIntent(Intent intent) {
        PendingIntent reply = intent.getParcelableExtra(PENDING_RESULT_EXTRA);
        InputStream in = null;
        try {
            try {
                URL url = new URL(intent.getStringExtra(URL_EXTRA));
                IllustrativeRSS rss = parser.parse(in = url.openStream());

                Intent result = new Intent();
                result.putExtra(RSS_RESULT_EXTRA, rss);

                reply.send(this, RESULT_CODE, result);
            } catch (MalformedURLException exc) {
                reply.send(INVALID_URL_CODE);
            } catch (Exception exc) {
                // could do better by treating the different sax/xml exceptions individually
                reply.send(ERROR_CODE);
            }
        } catch (PendingIntent.CanceledException exc) {
            Log.i(TAG, ""reply cancelled"", exc);
        }
    }
}
</code></pre>

<p>Step 2: Register the service in the manifest:</p>

<pre><code>&lt;service
        android:name="".DownloadIntentService""
        android:exported=""false""/&gt;
</code></pre>

<p>Step 3: Invoke the service from the Activity, passing a PendingResult object which the Service will use to return the result:</p>

<pre><code>PendingIntent pendingResult = createPendingResult(
    RSS_DOWNLOAD_REQUEST_CODE, new Intent(), 0);
Intent intent = new Intent(getApplicationContext(), DownloadIntentService.class);
intent.putExtra(DownloadIntentService.URL_EXTRA, URL);
intent.putExtra(DownloadIntentService.PENDING_RESULT_EXTRA, pendingResult);
startService(intent);
</code></pre>

<p>Step 4: Handle the result in onActivityResult:</p>

<pre><code>@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    if (requestCode == RSS_DOWNLOAD_REQUEST_CODE) {
        switch (resultCode) {
            case DownloadIntentService.INVALID_URL_CODE:
                handleInvalidURL();
                break;
            case DownloadIntentService.ERROR_CODE:
                handleError(data);
                break;
            case DownloadIntentService.RESULT_CODE:
                handleRSS(data);
                break;
        }
        handleRSS(data);
    }
    super.onActivityResult(requestCode, resultCode, data);
}
</code></pre>

<p>A github project containing a complete working Android-Studio/gradle project is available <a href=""https://github.com/steveliles/Android-Download-Service-Example"">here</a>.</p>
"
"2150078","21300175","1","<p>You can observe softkeyboard's hide by using activity's decorView.</p>

<pre><code>public final class SoftKeyboardUtil {
    public static final String TAG = ""SoftKeyboardUtil"";
    public static void observeSoftKeyBoard(Activity activity , final OnSoftKeyBoardHideListener listener){
        final View decorView = activity.getWindow().getDecorView();
        decorView.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {
            @Override
            public void onGlobalLayout() {
                Rect rect = new Rect();
                decorView.getWindowVisibleDisplayFrame(rect);
                int displayHight = rect.bottom - rect.top;
                int hight = decorView.getHeight();
                boolean hide = (double)displayHight / hight &gt; 0.8 ;
                if(Log.isLoggable(TAG, Log.DEBUG)){
                    Log.d(TAG ,""DecorView display hight = ""+displayHight);
                    Log.d(TAG ,""DecorView hight = ""+ hight);
                    Log.d(TAG, ""softkeyboard visible = "" + !hide);
                }

                listener.onSoftKeyBoardVisible(!hide);

            }
        });
    }



    public interface OnSoftKeyBoardHideListener{
        void onSoftKeyBoardVisible(boolean visible);
    }
}
</code></pre>
"
"8500283","21358940","13","<p>Create two styles:</p>

<pre><code>&lt;style name=""AppThemeNoBar"" parent=""Theme.AppCompat.Light""&gt;
     &lt;item name=""android:windowNoTitle""&gt;true&lt;/item&gt;
&lt;/style&gt;

&lt;style name=""AppThemeBar"" parent=""Theme.AppCompat.Light""&gt;
    &lt;item name=""android:windowNoTitle""&gt;false&lt;/item&gt;
&lt;/style&gt;
</code></pre>

<p>Set AppThemeNoBar as application theme and AppThemeBar to the activity where you want to show the ActionBar.﻿
Using two styles you wont see the Action bar while views are loading. </p>

<p>Check this link <a href=""https://plus.google.com/105092052613467789971/posts/gs8EKC35YjL"">Android: hide action bar while view load</a></p>
"
"2780102","21363768","2","<p>For API level 3+, nothing more then one line of code:</p>

<p><code>
Intent intent = context.getPackageManager().getLaunchIntentForPackage(""name.of.package"");
</code></p>

<p>Return a CATEGORY_INFO launch Intent (apps with no launcher activity, wallpapers for example, often use this to provide some information about app) and, if no find it, returns the CATEGORY_LAUNCH of package, if exists. </p>
"
"4617898","21410296","0","<p>Here is my code. The idea is that ImageView gets color filter when user touches it, and color filter is removed when user stops touching it.</p>

<p>Martin Booka Weser, András, Ah Lam, altosh,  solution doesn't work when ImageView has also onClickEvent.
worawee.s and kcoppock (with ImageButton) solution requires background, which has no sense when ImageView is not transparent.</p>

<p>This one is extension of <a href=""http://stackoverflow.com/a/7754032/185022"">AZ_</a> idea about color filter.</p>

<pre><code>class PressedEffectStateListDrawable extends StateListDrawable {

    private int selectionColor;

    public PressedEffectStateListDrawable(Drawable drawable, int selectionColor) {
        super();
        this.selectionColor = selectionColor;
        addState(new int[] { android.R.attr.state_pressed }, drawable);
        addState(new int[] {}, drawable);
    }

    @Override
    protected boolean onStateChange(int[] states) {
        boolean isStatePressedInArray = false;
        for (int state : states) {
            if (state == android.R.attr.state_pressed) {
                isStatePressedInArray = true;
            }
        }
        if (isStatePressedInArray) {
            super.setColorFilter(selectionColor, PorterDuff.Mode.MULTIPLY);
        } else {
            super.clearColorFilter();
        }
        return super.onStateChange(states);
    }

    @Override
    public boolean isStateful() {
        return true;
    }
}
</code></pre>

<p>usage:</p>

<pre><code>Drawable drawable = new FastBitmapDrawable(bm);
imageView.setImageDrawable(new PressedEffectStateListDrawable(drawable, 0xFF33b5e5));
</code></pre>
"
"2591036","21434165","14","<p>Add </p>

<p><code>&lt;item name=""android:windowNoTitle""&gt;true&lt;/item&gt;</code></p>

<p>inside AppTheme (styles.xml)</p>
"
"3647993","21435106","0","<p>I improved upon the answer by Teo Inke. It no longer rotates the image unless it is actually necessary. It is also easier to read, and should run faster.</p>

<pre><code>// Load Image
Bitmap bitmap = BitmapFactory.decodeFile(filePath);

// Rotate Image if Needed
try
{
    // Determine Orientation
    ExifInterface exif = new ExifInterface(filePath);
    int orientation = exif.getAttributeInt(ExifInterface.TAG_ORIENTATION, 1);

    // Determine Rotation
    int rotation = 0;
    if      (orientation == 6)      rotation = 90;
    else if (orientation == 3)      rotation = 180;
    else if (orientation == 8)      rotation = 270;

    // Rotate Image if Necessary
    if (rotation != 0)
    {
        // Create Matrix
        Matrix matrix = new Matrix();
        matrix.postRotate(rotation);

        // Rotate Bitmap
        Bitmap rotated = Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true); 

        // Pretend none of this ever happened!
        bitmap.recycle();
        bitmap = rotated;
        rotated = null;
     }
}
catch (Exception e)
{
    // TODO: Log Error Messages Here
}

// TODO: Use Result Here
xxx.setBitmap(bitmap);
</code></pre>
"
"2471935","21477143","1","<p><strong>Working for imageView in any container , like listview grid view , normal layout</strong> </p>

<pre><code> private class LoadImagefromUrl extends AsyncTask&lt; Object, Void, Bitmap &gt; {
        ImageView ivPreview = null;

        @Override
        protected Bitmap doInBackground( Object... params ) {
            this.ivPreview = (ImageView) params[0];
            String url = (String) params[1];
            System.out.println(url);
            return loadBitmap( url );
        }

        @Override
        protected void onPostExecute( Bitmap result ) {
            super.onPostExecute( result );
            ivPreview.setImageBitmap( result );
        }
    }

    public Bitmap loadBitmap( String url ) {
        URL newurl = null;
        Bitmap bitmap = null;
        try {
            newurl = new URL( url );
            bitmap = BitmapFactory.decodeStream( newurl.openConnection( ).getInputStream( ) );
        } catch ( MalformedURLException e ) {
            e.printStackTrace( );
        } catch ( IOException e ) {

            e.printStackTrace( );
        }
        return bitmap;
    }
/** Usage **/
  new LoadImagefromUrl( ).execute( imageView, url );
</code></pre>
"
"2169649","21488062","4","<p>this is my revisit to this topic, gathering all the information here, plus from other relevant stack overflow questions. It returns images from some provider, while handling out-of-memory conditions and image rotation. It supports gallery, picasa and file managers, like drop box. Usage is simple: as input, the constructor receives the content resolver and the uri. The output is the final bitmap.</p>

<pre><code>/**
 * Creates resized images without exploding memory. Uses the method described in android
 * documentation concerning bitmap allocation, which is to subsample the image to a smaller size,
 * close to some expected size. This is required because the android standard library is unable to
 * create a reduced size image from an image file using memory comparable to the final size (and
 * loading a full sized multi-megapixel picture for processing may exceed application memory budget).
 */

public class UserPicture {
    static int MAX_WIDTH = 600;
    static int MAX_HEIGHT = 800;
    Uri uri;
    ContentResolver resolver;
    String path;
    Matrix orientation;
    int storedHeight;
    int storedWidth;

    public UserPicture(Uri uri, ContentResolver resolver) {
        this.uri = uri;
        this.resolver = resolver;
    }

    private boolean getInformation() throws IOException {
        if (getInformationFromMediaDatabase())
            return true;

        if (getInformationFromFileSystem())
            return true;

        return false;
    }

    /* Support for gallery apps and remote (""picasa"") images */
    private boolean getInformationFromMediaDatabase() {
        String[] fields = { Media.DATA, ImageColumns.ORIENTATION };
        Cursor cursor = resolver.query(uri, fields, null, null, null);

        if (cursor == null)
            return false;

        cursor.moveToFirst();
        path = cursor.getString(cursor.getColumnIndex(Media.DATA));
        int orientation = cursor.getInt(cursor.getColumnIndex(ImageColumns.ORIENTATION));
        this.orientation = new Matrix();
        this.orientation.setRotate(orientation);
        cursor.close();

        return true;
    }

    /* Support for file managers and dropbox */
    private boolean getInformationFromFileSystem() throws IOException {
        path = uri.getPath();

        if (path == null)
            return false;

        ExifInterface exif = new ExifInterface(path);
        int orientation = exif.getAttributeInt(ExifInterface.TAG_ORIENTATION,
                                               ExifInterface.ORIENTATION_NORMAL);

        this.orientation = new Matrix();
        switch(orientation) {
            case ExifInterface.ORIENTATION_NORMAL:
                /* Identity matrix */
                break;
            case ExifInterface.ORIENTATION_FLIP_HORIZONTAL:
                this.orientation.setScale(-1, 1);
                break;
            case ExifInterface.ORIENTATION_ROTATE_180:
                this.orientation.setRotate(180);
                break;
            case ExifInterface.ORIENTATION_FLIP_VERTICAL:
                this.orientation.setScale(1, -1);
                break;
            case ExifInterface.ORIENTATION_TRANSPOSE:
                this.orientation.setRotate(90);
                this.orientation.postScale(-1, 1);
                break;
            case ExifInterface.ORIENTATION_ROTATE_90:
                this.orientation.setRotate(90);
                break;
            case ExifInterface.ORIENTATION_TRANSVERSE:
                this.orientation.setRotate(-90);
                this.orientation.postScale(-1, 1);
                break;
            case ExifInterface.ORIENTATION_ROTATE_270:
                this.orientation.setRotate(-90);
                break;
        }

        return true;
    }

    private boolean getStoredDimensions() throws IOException {
        InputStream input = resolver.openInputStream(uri);
        Options options = new Options();
        options.inJustDecodeBounds = true;
        BitmapFactory.decodeStream(resolver.openInputStream(uri), null, options);

        /* The input stream could be reset instead of closed and reopened if it were possible
           to reliably wrap the input stream on a buffered stream, but it's not possible because
           decodeStream() places an upper read limit of 1024 bytes for a reset to be made (it calls
           mark(1024) on the stream). */
        input.close();

        if (options.outHeight &lt;= 0 || options.outWidth &lt;= 0)
            return false;

        storedHeight = options.outHeight;
        storedWidth = options.outWidth;

        return true;
    }

    public Bitmap getBitmap() throws IOException {
        if (!getInformation())
            throw new FileNotFoundException();

        if (!getStoredDimensions())
            throw new InvalidObjectException(null);

        RectF rect = new RectF(0, 0, storedWidth, storedHeight);
        orientation.mapRect(rect);
        int width = (int)rect.width();
        int height = (int)rect.height();
        int subSample = 1;

        while (width &gt; MAX_WIDTH || height &gt; MAX_HEIGHT) {
            width /= 2;
            height /= 2;
            subSample *= 2;
        }

        if (width == 0 || height == 0)
            throw new InvalidObjectException(null);

        Options options = new Options();
        options.inSampleSize = subSample;
        Bitmap subSampled = BitmapFactory.decodeStream(resolver.openInputStream(uri), null, options);

        Bitmap picture;
        if (!orientation.isIdentity()) {
            picture = Bitmap.createBitmap(subSampled, 0, 0, options.outWidth, options.outHeight,
                                          orientation, false);
            subSampled.recycle();
        } else
            picture = subSampled;

        return picture;
    }
}
</code></pre>

<p>References:</p>

<ul>
<li><a href=""http://developer.android.com/training/displaying-bitmaps/index.html"" rel=""nofollow"">http://developer.android.com/training/displaying-bitmaps/index.html</a></li>
<li><a href=""http://stackoverflow.com/questions/2169649/get-pick-an-image-from-androids-built-in-gallery-app-programmatically"">Get/pick an image from Android&#39;s built-in Gallery app programmatically</a></li>
<li><a href=""http://stackoverflow.com/questions/477572/strange-out-of-memory-issue-while-loading-an-image-to-a-bitmap-object/"">Strange out of memory issue while loading an image to a Bitmap object</a></li>
<li><a href=""http://stackoverflow.com/questions/19753912/set-image-orientation-using-exifinterface"">Set image orientation using ExifInterface</a></li>
<li><a href=""https://gist.github.com/9re/1990019"" rel=""nofollow"">https://gist.github.com/9re/1990019</a></li>
<li><a href=""http://stackoverflow.com/questions/17774442/how-to-get-bitmap-information-and-then-decode-bitmap-from-internet-inputstream/"">how to get bitmap information and then decode bitmap from internet-inputStream?</a></li>
</ul>
"
"2169649","21517011","3","<p>hcpl's methods work perfectly pre-KitKat, but not working with the DocumentsProvider API. For that just simply follow the official Android tutorial for documentproviders: <a href=""https://developer.android.com/guide/topics/providers/document-provider.html"" rel=""nofollow"">https://developer.android.com/guide/topics/providers/document-provider.html</a> -> open a document, Bitmap section.</p>

<p>Simply I used hcpl's code and extended it: if the file with the retrieved path to the image throws exception I call this function:</p>

<pre><code>private Bitmap getBitmapFromUri(Uri uri) throws IOException {
        ParcelFileDescriptor parcelFileDescriptor =
             getContentResolver().openFileDescriptor(uri, ""r"");
        FileDescriptor fileDescriptor = parcelFileDescriptor.getFileDescriptor();
        Bitmap image = BitmapFactory.decodeFileDescriptor(fileDescriptor);
        parcelFileDescriptor.close();
        return image;
}
</code></pre>

<p>Tested on Nexus 5.</p>
"
"4605527","21521919","1","<p>to convert Pixels to dp use the <a href=""http://developer.android.com/reference/android/util/TypedValue.html"" rel=""nofollow"">TypedValue</a> . </p>

<p>As the documentation mentioned : Container for a dynamically typed data value . </p>

<p>and use the <a href=""http://developer.android.com/reference/android/util/TypedValue.html#applyDimension%28int,%20float,%20android.util.DisplayMetrics%29"" rel=""nofollow"">applyDimension</a> method : </p>

<pre><code>public static float applyDimension (int unit, float value, DisplayMetrics metrics) 
</code></pre>

<p>which Converts an unpacked complex data value holding a dimension to its final floating point value like the following : </p>

<pre><code>Resources resource = getResources();
float dp = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_PX, 69, resource.getDisplayMetrics());
</code></pre>

<p>Hope that Helps .</p>
"
"4617898","21640324","2","<p>In combination with all the answers above, I wanted the ImageView to be pressed and changed state but if the user moved then ""cancel"" and not perform an onClickListener.</p>

<p>I ended up making a Point object within the class and setting its coordinates according to when the user pushed down on the ImageView. On the MotionEvent.ACTION_UP I recording a new point and compared the points.</p>

<p>I can only explain it so well, but here is what I did.</p>

<pre><code>// set the ontouch listener
weatherView.setOnTouchListener(new OnTouchListener() {

    @Override
    public boolean onTouch(View v, MotionEvent event) {
        // Determine what action with a switch statement
        switch (event.getAction()) {

        // User presses down on the ImageView, record the original point
        // and set the color filter
        case MotionEvent.ACTION_DOWN: {
            ImageView view = (ImageView) v;

            // overlay is black with transparency of 0x77 (119)
            view.getDrawable().setColorFilter(0x77000000,
                    PorterDuff.Mode.SRC_ATOP);
            view.invalidate();

            p = new Point((int) event.getX(), (int) event.getY());
            break;
        }

        // Once the user releases, record new point then compare the
        // difference, if within a certain range perform onCLick
        // and or otherwise clear the color filter
        case MotionEvent.ACTION_UP: {
            ImageView view = (ImageView) v;
            Point f = new Point((int) event.getX(), (int) event.getY());
            if ((Math.abs(f.x - p.x) &lt; 15)
                    &amp;&amp; ((Math.abs(f.x - p.x) &lt; 15))) {
                view.performClick();
            }
            // clear the overlay
            view.getDrawable().clearColorFilter();
            view.invalidate();
            break;
        }
        }
        return true;
    }
});
</code></pre>

<p>I have an onClickListener set on the imageView, but this can be an method.</p>
"
"2736389","21658902","2","<p>Crete a class like bean class and implements <code>Serializable</code> interface then we can pass it through the <code>intent</code> method <em>e.g.</em>:</p>

<pre><code>intent.putExtra(""class"",BeanClass);
</code></pre>

<p>then get it from other activity <em>e.g.</em>: </p>

<pre><code>BeanClass cb=intent.getSerializableExtra(""class"");
</code></pre>
"
"6070805","21705055","1","<p>This one works for me:</p>

<pre><code>&lt;EditText
    android:inputType=""textShortMessage|textMultiLine""
    android:minLines=""3""
    ... /&gt;
</code></pre>

<p>It shows a smiley instead of the Enter key.</p>
"
"4605527","21732837","9","<p>There is a default util in android SDK:
<a href=""http://developer.android.com/reference/android/util/TypedValue.html"">http://developer.android.com/reference/android/util/TypedValue.html</a></p>

<pre><code>float resultPix = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,1,getResources().getDisplayMetrics())
</code></pre>
"
"3331527","21735291","0","<p>This worked for me. The function gets a path to a file on the sd card and returns a Bitmap in the maximum displayable size.
The code is from Ofir with some changes like image file on sd instead a Ressource and the witdth and heigth are get from the Display Object.</p>

<pre><code>private Bitmap makeBitmap(String path) {

    try {
        final int IMAGE_MAX_SIZE = 1200000; // 1.2MP
        //resource = getResources();

        // Decode image size
        BitmapFactory.Options options = new BitmapFactory.Options();
        options.inJustDecodeBounds = true;
        BitmapFactory.decodeFile(path, options);

        int scale = 1;
        while ((options.outWidth * options.outHeight) * (1 / Math.pow(scale, 2)) &gt;
                IMAGE_MAX_SIZE) {
            scale++;
        }
        Log.d(""TAG"", ""scale = "" + scale + "", orig-width: "" + options.outWidth + "", orig-height: "" + options.outHeight);

        Bitmap pic = null;
        if (scale &gt; 1) {
            scale--;
            // scale to max possible inSampleSize that still yields an image
            // larger than target
            options = new BitmapFactory.Options();
            options.inSampleSize = scale;
            pic = BitmapFactory.decodeFile(path, options);

            // resize to desired dimensions

            Display display = getWindowManager().getDefaultDisplay();
            Point size = new Point();
            display.getSize(size);
            int width = size.y;
            int height = size.x;

            //int height = imageView.getHeight();
            //int width = imageView.getWidth();
            Log.d(""TAG"", ""1th scale operation dimenions - width: "" + width + "", height: "" + height);

            double y = Math.sqrt(IMAGE_MAX_SIZE
                    / (((double) width) / height));
            double x = (y / height) * width;

            Bitmap scaledBitmap = Bitmap.createScaledBitmap(pic, (int) x, (int) y, true);
            pic.recycle();
            pic = scaledBitmap;

            System.gc();
        } else {
            pic = BitmapFactory.decodeFile(path);
        }

        Log.d(""TAG"", ""bitmap size - width: "" +pic.getWidth() + "", height: "" + pic.getHeight());
        return pic;

    } catch (Exception e) {
        Log.e(""TAG"", e.getMessage(),e);
        return null;
    }

}
</code></pre>
"
"4165414","21748552","0","<p>You may easily override the onKey() event in activity and fragments to hide the keyboard.</p>

<pre><code>@Override
public boolean onKey(View v, int keyCode, KeyEvent event) {

    if (event.getAction() == MotionEvent.ACTION_DOWN) {
        if (keyCode == event.KEYCODE_ENTER) {

            intiateLoginProcess();
            InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
            imm.hideSoftInputFromWindow(getWindow().getCurrentFocus()
                    .getWindowToken(), 0);

            return true;
        }
    }
    return false;
}
</code></pre>
"
"3495890","21767663","0","<p>Here is my version of the code that calculates total height of the list view. This one works for me:</p>

<pre><code>   public static void setListViewHeightBasedOnChildren(ListView listView) {
    ListAdapter listAdapter = listView.getAdapter();
    if (listAdapter == null || listAdapter.getCount() &lt; 2) {
        // pre-condition
        return;
    }

    int totalHeight = 0;
    int widthMeasureSpec = View.MeasureSpec.makeMeasureSpec(BCTDApp.getDisplaySize().width, View.MeasureSpec.AT_MOST);
    int heightMeasureSpec = View.MeasureSpec.makeMeasureSpec(0, View.MeasureSpec.UNSPECIFIED);
    ViewGroup.LayoutParams lp = new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);

    for (int i = 0; i &lt; listAdapter.getCount(); i++) {
        View listItem = listAdapter.getView(i, null, listView);
        if (listItem instanceof ViewGroup) listItem.setLayoutParams(lp);
        listItem.measure(widthMeasureSpec, heightMeasureSpec);
        totalHeight += listItem.getMeasuredHeight();
    }

    totalHeight += listView.getPaddingTop() + listView.getPaddingBottom();
    totalHeight += (listView.getDividerHeight() * (listAdapter.getCount() - 1));
    ViewGroup.LayoutParams params = listView.getLayoutParams();
    params.height = totalHeight;
    listView.setLayoutParams(params);
    listView.requestLayout();
}
</code></pre>
"
"4605527","21774531","1","<p>like this:</p>

<pre><code>public class ScreenUtils {

    public static float dpToPx(Context context, float dp) {
        if (context == null) {
            return -1;
        }
        return dp * context.getResources().getDisplayMetrics().density;
    }

    public static float pxToDp(Context context, float px) {
        if (context == null) {
            return -1;
        }
        return px / context.getResources().getDisplayMetrics().density;
    }
}
</code></pre>

<p>dependent on Context, return float value, static method</p>

<p>from: <a href=""https://github.com/Trinea/android-common/blob/master/src/cn/trinea/android/common/util/ScreenUtils.java#L15"" rel=""nofollow"">https://github.com/Trinea/android-common/blob/master/src/cn/trinea/android/common/util/ScreenUtils.java#L15</a></p>
"
"5033012","21851157","8","<p><strong>Warning, bug in Android Honeycomb and Ice Cream Sandwich</strong></p>

<p>Androids versions: 3.1 - 4.04 have a bug, that setTextSize() inside of TextView works only for the 1st time (1st invocation).</p>

<p>Bug is described here: <a href=""http://code.google.com/p/android/issues/detail?id=22493"">http://code.google.com/p/android/issues/detail?id=22493</a> <a href=""http://code.google.com/p/android/issues/detail?id=17343#c9"">http://code.google.com/p/android/issues/detail?id=17343#c9</a></p>

<p>workaround is to add new line character to text assigned to TextView before changing size:</p>

<pre><code>final String DOUBLE_BYTE_SPACE = ""\u3000"";
textView.append(DOUBLE_BYTE_SPACE);
</code></pre>

<p>I use it in my code as follow:</p>

<pre><code>final String DOUBLE_BYTE_SPACE = ""\u3000"";
AutoResizeTextView textView = (AutoResizeTextView) view.findViewById(R.id.aTextView);
String fixString = """";
if (android.os.Build.VERSION.SDK_INT &gt;= android.os.Build.VERSION_CODES.HONEYCOMB_MR1
   &amp;&amp; android.os.Build.VERSION.SDK_INT &lt;= android.os.Build.VERSION_CODES.ICE_CREAM_SANDWICH_MR1) {  
    fixString = DOUBLE_BYTE_SPACE;
}
textView.setText(fixString + ""The text"" + fixString);
</code></pre>

<p>I add this ""\u3000"" character on left and right of my text, to keep it centered. If you have it aligned to left then append to the right only. Of course it can be also embedded with AutoResizeTextView widget, but I wanted to keep fix code outside.</p>
"
"3495890","21878703","2","<p>Although the suggested <strong>setListViewHeightBasedOnChildren()</strong> methods work in most of the cases, in some cases, specially with a lot of items, I noticed that the last elements are not displayed. So I decided to mimic a <em>simple</em> version of the <strong>ListView</strong> behavior in order to reuse any Adapter code, here it's the ListView alternative:</p>

<pre><code>import android.content.Context;
import android.database.DataSetObserver;
import android.util.AttributeSet;
import android.util.Log;
import android.view.View;
import android.widget.LinearLayout;
import android.widget.ListAdapter;

public class StretchedListView extends LinearLayout {

private final DataSetObserver dataSetObserver;
private ListAdapter adapter;
private OnItemClickListener onItemClickListener;

public StretchedListView(Context context, AttributeSet attrs) {
    super(context, attrs);
    setOrientation(LinearLayout.VERTICAL);
    this.dataSetObserver = new DataSetObserver() {
        @Override
        public void onChanged() {
            syncDataFromAdapter();
            super.onChanged();
        }

        @Override
        public void onInvalidated() {
            syncDataFromAdapter();
            super.onInvalidated();
        }
    };
}

public void setAdapter(ListAdapter adapter) {
    ensureDataSetObserverIsUnregistered();

    this.adapter = adapter;
    if (this.adapter != null) {
        this.adapter.registerDataSetObserver(dataSetObserver);
    }
    syncDataFromAdapter();
}

protected void ensureDataSetObserverIsUnregistered() {
    if (this.adapter != null) {
        this.adapter.unregisterDataSetObserver(dataSetObserver);
    }
}

public Object getItemAtPosition(int position) {
    return adapter != null ? adapter.getItem(position) : null;
}

public void setSelection(int i) {
    getChildAt(i).setSelected(true);
}

public void setOnItemClickListener(OnItemClickListener onItemClickListener) {
    this.onItemClickListener = onItemClickListener;
}

public ListAdapter getAdapter() {
    return adapter;
}

public int getCount() {
    return adapter != null ? adapter.getCount() : 0;
}

private void syncDataFromAdapter() {
    removeAllViews();
    if (adapter != null) {
        int count = adapter.getCount();
        for (int i = 0; i &lt; count; i++) {
            View view = adapter.getView(i, null, this);
            boolean enabled = adapter.isEnabled(i);
            if (enabled) {
                final int position = i;
                final long id = adapter.getItemId(position);
                view.setOnClickListener(new View.OnClickListener() {

                    @Override
                    public void onClick(View v) {
                        if (onItemClickListener != null) {
                            onItemClickListener.onItemClick(null, v, position, id);
                        }
                    }
                });
            }
            addView(view);

        }
    }
}
}
</code></pre>
"
"6176391","21884934","0","<p>Create a custom ScrollView (create a class and have it extend HorizontalScrollView) and make a getter setter for scrollable. Then override computeScrollDeltaToGetChildRectOnScreen.</p>

<p>How it works: Every time android has an edit text or something in focus that is off screen it calls method computeScrollDeltaToGetChildRectOnScreen to bring it into view. If you Override it and return 0 when it is disabled than it will not scroll...</p>

<p>So you will have A custom scroll view like this:</p>

<pre><code>    public class TrackableHorizontalScrollView extends HorizontalScrollView {


    // true if we can scroll (not locked)
    // false if we cannot scroll (locked)
    private boolean mScrollable = true;

    public TrackableHorizontalScrollView(Context context) {
        super(context);
    }

    public TrackableHorizontalScrollView(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    public TrackableHorizontalScrollView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
    }

    public void setScrollingEnabled(boolean enabled) {
        mScrollable = enabled;
    }

    public boolean isScrollable() {
        return mScrollable;
    }

    @Override
    public boolean onTouchEvent(MotionEvent ev) {
        switch (ev.getAction()) {
            case MotionEvent.ACTION_DOWN:
                // if we can scroll pass the event to the superclass
                if (mScrollable) return super.onTouchEvent(ev);
                // only continue to handle the touch event if scrolling enabled
                return mScrollable; // mScrollable is always false at this point
            default:
                return super.onTouchEvent(ev);
        }
    }

    @Override
    public boolean onInterceptTouchEvent(MotionEvent ev) {
        // Don't do anything with intercepted touch events if
        // we are not scrollable
        if (!mScrollable) return false;
        else return super.onInterceptTouchEvent(ev);
    }

    @Override
    public void scrollTo(int x, int y){
        if (!mScrollable) return;
        super.scrollTo(x, y);
    }


    //Custom smooth scroll method since norm is final and cannot be overridden
    public final void smooothScrollToIfEnabled(int x, int y){
         if (!mScrollable) return;
         smoothScrollTo(x, y);
    }

    @Override
    protected int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect rect){
        if (!mScrollable) return 0;
        return super.computeScrollDeltaToGetChildRectOnScreen(rect);
    }


}
</code></pre>

<p>You can use this inside your XML like this:</p>

<pre><code>&lt;com.your.package.ui.widget.TrackableHorizontalScrollView
            android:id=""@+id/wi_et_credit_scroller""
            android:layout_toRightOf=""@id/wi_et_credit_iv""
            android:layout_width=""fill_parent""
            android:scrollbars=""none""
            android:layout_height=""wrap_content""
            android:paddingRight=""5dp""
            android:layout_gravity=""center_vertical""&gt;

&lt;!--Whatever you have inside the scrollview--&gt;

&lt;/com.your.package.ui.widget.TrackableHorizontalScrollView&gt;
</code></pre>
"
"6290531","21905089","2","<p>You can also check all the EditText Strings in one If condition: like this</p>

<pre><code>if (mString.matches("""") || fString.matches("""") || gender==null || docString.matches("""") || dString.matches("""")) {
                Toast.makeText(WriteActivity.this,""Data Incomplete"", Toast.LENGTH_SHORT).show();
            }
</code></pre>
"
"2169649","21934076","0","<pre><code>public class BrowsePictureActivity extends Activity {

    // this is the action code we use in our intent, 
    // this way we know we're looking at the response from our own action
    private static final int SELECT_PICTURE = 1;

    private String selectedImagePath;

    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        ((Button) findViewById(R.id.Button01))
                .setOnClickListener(new OnClickListener() {

                    public void onClick(View arg0) {

                        // in onCreate or any event where your want the user to
                        // select a file
                        Intent intent = new Intent();
                        intent.setType(""image/*"");
                        intent.setAction(Intent.ACTION_GET_CONTENT);
                        startActivityForResult(Intent.createChooser(intent,
                                ""Select Picture""), SELECT_PICTURE);
                    }
                });
    }

    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (resultCode == RESULT_OK) {
            if (requestCode == SELECT_PICTURE) {
                Uri selectedImageUri = data.getData();
                selectedImagePath = getPath(selectedImageUri);
            }
        }
    }

    /**
     * helper to retrieve the path of an image URI
     */
    public String getPath(Uri uri) {
            // just some safety built in 
            if( uri == null ) {
                // TODO perform some logging or show user feedback
                return null;
            }
            // try to retrieve the image from the media store first
            // this will only work for images selected from gallery
            String[] projection = { MediaStore.Images.Media.DATA };
            Cursor cursor = managedQuery(uri, projection, null, null, null);
            if( cursor != null ){
                int column_index = cursor
                .getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
                cursor.moveToFirst();
                return cursor.getString(column_index);
            }
            // this is our fallback here
            return uri.getPath();
    }

}
</code></pre>
"
"2150078","21946176","3","<p>I used a slight variant of Reuban's answer, which proved to be more helpful in certain circumstances, especially with high resolution devices. </p>

<pre><code>final View activityRootView = findViewById(R.id.activityRoot);
activityRootView.getViewTreeObserver().addOnGlobalLayoutListener(
        new OnGlobalLayoutListener() {
            @Override
            public void onGlobalLayout() {
                int heightView = activityRootView.getHeight();
                int widthView = activityRootView.getWidth();
                if (1.0 * widthView / heightView &gt; 3) {
                    //Make changes for Keyboard not visible
                } else {
                    //Make changes for keyboard visible
                }
            }
        });
</code></pre>
"
"5763304","22066871","2","<p>to start, i used the Code posted posted in the first Comment but i changed it like this:</p>

<pre><code>    public class LockableScrollView extends ScrollView {

    public LockableScrollView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        // TODO Auto-generated constructor stub
    }
    public LockableScrollView(Context context, AttributeSet attrs) 
    {
        super(context, attrs);
    }

    public LockableScrollView(Context context) 
    {
        super(context);
    }

    // true if we can scroll (not locked)
    // false if we cannot scroll (locked)
    private boolean mScrollable = true;

    public void setScrollingEnabled(boolean enabled) {
        mScrollable = enabled;
    }

    public boolean isScrollable() {
        return mScrollable;
    }

    @Override
    public boolean onTouchEvent(MotionEvent ev) {
        switch (ev.getAction()) {
            case MotionEvent.ACTION_DOWN:
                // if we can scroll pass the event to the superclass
                if (mScrollable) return super.onTouchEvent(ev);
                // only continue to handle the touch event if scrolling enabled
                return mScrollable; // mScrollable is always false at this point
            default:
                return super.onTouchEvent(ev);
        }
    }



@Override  
public boolean onInterceptTouchEvent(MotionEvent ev) {
    switch (ev.getAction()) {     
    case MotionEvent.ACTION_DOWN:         
        // if we can scroll pass the event to the superclass      
        if (mScrollable) return super.onInterceptTouchEvent(ev);      
        // only continue to handle the touch event if scrolling enabled    
        return mScrollable; // mScrollable is always false at this point     
        default:          
            return super.onInterceptTouchEvent(ev);      
            }
    }

}
</code></pre>

<p>then i called it in by this way</p>

<pre><code>((LockableScrollView)findViewById(R.id.scrollV)).setScrollingEnabled(false);
</code></pre>

<p>because i tried </p>

<pre><code>((LockableScrollView)findViewById(R.id.scrollV)).setIsScrollable(false);
</code></pre>

<p>but it said that <strong>setIsScrollable</strong> is undefined</p>

<p>i hope this will help you</p>
"
"4165414","22093509","0","<p>hey guys i have simple solution for this problem and this solution can be used for simple registration or login form.
my solution is same as i implemented in ios setontouch listener to Main view </p>

<p>activity_main.xml add ID to your main relative layout <code>android:id=""@+id/mainlayout""</code></p>

<p>and add this code to your activity </p>

<pre><code>  RelativeLayout mainLayout = (RelativeLayout)findViewById(R.id.mainlayout);
  mainLayout.setOnTouchListener(new OnTouchListener() {

            @Override
            public boolean onTouch(View v, MotionEvent event) {
                // TODO Auto-generated method stub
                 Log.d(""Json Response"", ""Touch outside"");
                  InputMethodManager inputMethodManager = (InputMethodManager)  MainActivity.this.getSystemService(Activity.INPUT_METHOD_SERVICE);
                    inputMethodManager.hideSoftInputFromWindow(MainActivity.this.getCurrentFocus().getWindowToken(), 0);
                return false;
            }
        });
</code></pre>
"
"2471935","22108038","2","<p>Version with exception handling and async task:</p>

<pre><code>AsyncTask&lt;URL, Void, Boolean&gt; asyncTask = new AsyncTask&lt;URL, Void, Boolean&gt;() {
    public Bitmap mIcon_val;
    public IOException error;

    @Override
    protected Boolean doInBackground(URL... params) {
        try {
            mIcon_val = BitmapFactory.decodeStream(params[0].openConnection().getInputStream());
        } catch (IOException e) {
            this.error = e;
            return false;
        }
        return true;
    }

    @Override
    protected void onPostExecute(Boolean success) {
        super.onPostExecute(success);
        if (success) {
            image.setImageBitmap(mIcon_val);
        } else {
            image.setImageBitmap(defaultImage);
        }
    }
};
try {
    URL url = new URL(url);
    asyncTask.execute(url);
} catch (MalformedURLException e) {
    e.printStackTrace();
}
</code></pre>
"
"6343166","22115167","3","<pre><code>    **Use like this in Your Activity**

    btnsub.setOnClickListener(new View.OnClickListener() 
    {
        @Override
        public void onClick(View v) 
        {
            new Thread(new Runnable() {

                @Override
                public void run() {
                    // TODO Auto-generated method stub

            //Initialize soap request + add parameters
            SoapObject request = new SoapObject(NAMESPACE, METHOD_NAME1);        

            //Use this to add parameters


            request.addProperty(""pincode"",txtpincode.getText().toString());
            request.addProperty(""bg"",bloodgroup.getSelectedItem().toString());

            //Declare the version of the SOAP request
            SoapSerializationEnvelope envelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);

            envelope.setOutputSoapObject(request);
            envelope.dotNet = true;

            try {

                HttpTransportSE androidHttpTransport = new HttpTransportSE(URL);

                //this is the actual part that will call the webservice
                androidHttpTransport.call(SOAP_ACTION1, envelope);

                // Get the SoapResult from the envelope body.
                SoapObject result = (SoapObject)envelope.getResponse();
                Log.e(""result data"", ""data""+result);
                 SoapObject root = (SoapObject) result.getProperty(0);
             //   SoapObject s_deals = (SoapObject) root.getProperty(0);
                //SoapObject s_deals_1 = (SoapObject) s_deals.getProperty(0);
                   //                    


                System.out.println(""********Count : ""+  root.getPropertyCount());

                value=new ArrayList&lt;Detailinfo&gt;();

                for (int i = 0; i &lt; root.getPropertyCount(); i++) 
                {
                    SoapObject s_deals = (SoapObject) root.getProperty(i);
                    Detailinfo info=new Detailinfo();

                    info.setFirstName(     s_deals.getProperty(""Firstname"").toString());
                    info.setLastName( s_deals.getProperty(""Lastname"").toString());
                    info.setDOB( s_deals.getProperty(""DOB"").toString());
                    info.setGender( s_deals.getProperty(""Gender"").toString());
                    info.setAddress( s_deals.getProperty(""Address"").toString());
                    info.setCity( s_deals.getProperty(""City"").toString());
                    info.setState( s_deals.getProperty(""State"").toString());
                    info.setPinecode( s_deals.getProperty(""Pinecode"").toString());
                    info.setMobile( s_deals.getProperty(""Mobile"").toString());
                    info.setEmail( s_deals.getProperty(""Email"").toString());
                    info.setBloodgroup( s_deals.getProperty(""Bloodgroup"").toString());
                    info.setAdddate( s_deals.getProperty(""Adddate"").toString());
                    info.setWaight(s_deals.getProperty(""waight"").toString());
                    value.add(info);

                }    


            } catch (Exception e) {
                e.printStackTrace();
            }
            Intent inten=new Intent(getApplicationContext(),ComposeMail.class);
            //intent.putParcelableArrayListExtra(""valuesList"", value);

            startActivity(inten);



                }
            }).start();
        }
    });
</code></pre>
"
"3495890","22138364","0","<p>try this, this works for me, I forgot where I found it, somewhere in stack overflow, 
i'm not here to explained it why it doesn't work, but this is the answer :).</p>

<pre><code>    final ListView AturIsiPulsaDataIsiPulsa = (ListView) findViewById(R.id.listAturIsiPulsaDataIsiPulsa);
    AturIsiPulsaDataIsiPulsa.setOnTouchListener(new ListView.OnTouchListener() 
    {
        @Override
        public boolean onTouch(View v, MotionEvent event) 
        {
            int action = event.getAction();
            switch (action) 
            {
                case MotionEvent.ACTION_DOWN:
                // Disallow ScrollView to intercept touch events.
                v.getParent().requestDisallowInterceptTouchEvent(true);
                break;

                case MotionEvent.ACTION_UP:
                // Allow ScrollView to intercept touch events.
                v.getParent().requestDisallowInterceptTouchEvent(false);
                break;
            }

            // Handle ListView touch events.
            v.onTouchEvent(event);
            return true;
        }
    });
    AturIsiPulsaDataIsiPulsa.setClickable(true);
    AturIsiPulsaDataIsiPulsa.setAdapter(AturIsiPulsaDataIsiPulsaAdapter);
</code></pre>

<p>EDIT !, I finally found out where I got the code. here ! : <a href=""http://stackoverflow.com/questions/6210895/listview-inside-scrollview-is-not-scrolling-on-android?rq=1"">Listview inside ScrollView is not scrolling on Android</a></p>
"
"6495898","22175107","14","<p>Inside Fragment class you will get <a href=""http://developer.android.com/reference/android/app/Fragment.html#onViewCreated%28android.view.View,android.os.Bundle%29"">onViewCreated()</a> override method where you should always initialize your views as in this method you get view object using which you can find your views like :</p>

<pre><code>@Override
public void onViewCreated(View view, Bundle savedInstanceState) {
    super.onViewCreated(view, savedInstanceState);
    view.findViewById(R.id.yourId).setOnClickListener(this);
    //or
    getActivity().findViewById(R.id.yourId).setOnClickListener(this);

}
</code></pre>
"
"4617898","22269881","0","<p>The easiest way i think is putting a new xml file, in this case lets call it ""example.xml"" in the drawable folder, and put the follow code:</p>

<pre><code>&lt;selector xmlns:android=""http://schemas.android.com/apk/res/android""&gt;
    &lt;item android:drawable=""@color/blue""
          android:state_pressed=""true"" /&gt;

&lt;/selector&gt;
</code></pre>

<p>but before that you have to set the colors in the colors.xml file, in the values folder, like that: </p>

<pre><code>&lt;resources&gt;
    &lt;color name=""blue""&gt;#0000FF&lt;/color&gt;
&lt;/resources&gt;
</code></pre>

<p>that made, you just set the Button / ImageButton to use the new layout, like that: </p>

<pre><code>&lt;ImageView
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:background=""@drawable/example""
        /&gt;
</code></pre>

<p>than when you click that image, it will change to the color setted in: </p>

<pre><code>&lt;item android:drawable=""@color/blue""
          android:state_pressed=""true"" /&gt;
</code></pre>

<p>giving the feedback that you want ...</p>
"
"2795833","22375569","0","<p>Old post I know. Whatever the orientation may be or is swapped etc. I designed this function that is used to set the device in the right orientation without the need to know how the portrait and landscape features are organised on the device.</p>

<pre><code>   private void initActivityScreenOrientPortrait()
    {
        // Avoid screen rotations (use the manifests android:screenOrientation setting)
        // Set this to nosensor or potrait

        // Set window fullscreen
        this.activity.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

        DisplayMetrics metrics = new DisplayMetrics();
        this.activity.getWindowManager().getDefaultDisplay().getMetrics(metrics);

         // Test if it is VISUAL in portrait mode by simply checking it's size
        boolean bIsVisualPortrait = ( metrics.heightPixels &gt;= metrics.widthPixels ); 

        if( !bIsVisualPortrait )
        { 
            // Swap the orientation to match the VISUAL portrait mode
            if( this.activity.getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT )
             { this.activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }
            else { this.activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ); }
        }
        else { this.activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_NOSENSOR); }

    }
</code></pre>

<p>Works like a charm!</p>
"
"3624280","22404228","5","<p>To store information</p>

<pre><code>  SharedPreferences preferences = getSharedPreferences(PREFS_NAME,Context.MODE_PRIVATE);
  SharedPreferences.Editor editor = preferences.edit();
  editor.putString(""username"", username.getText().toString());
  editor.putString(""password"", password.getText().toString());
  editor.putString(""logged"", ""logged"");
  editor.commit();
</code></pre>

<p>To reset your preferences</p>

<pre><code>  SharedPreferences.Editor editor = preferences.edit();
  editor.clear();
  editor.commit();
</code></pre>
"
"3647993","22429097","1","

<h2>Use a Utility to do the Heavy Lifting.</h2>

<p><a href=""https://gist.github.com/9re"" rel=""nofollow"">9re</a> created a simple utility to handle the heavy lifting of dealing with EXIF data and rotating images to their correct orientation. </p>

<p><strong>You can find the utility code here: <a href=""https://gist.github.com/9re/1990019"" rel=""nofollow"">https://gist.github.com/9re/1990019</a></strong></p>

<p>Simply download this, add it to your project <code>src</code> directory (perhaps under a <code>utilities</code> package name) and use <code>ExifUtil.rotateBitmap()</code> to get the correct orientation, like so: </p>

<pre><code>// photoFile is a File object for the image with EXIF data I want to rotate.

String imagePath = photoFile.getAbsolutePath();
Bitmap myBitmap  = BitmapFactory.decodeFile(imagePath);

Bitmap orientedBitmap = ExifUtil.rotateBitmap(imagePath, myBitmap);
</code></pre>
"
"4617898","22455495","0","<p>here's my solution, which, using ""<a href=""http://nineoldandroids.com/"" rel=""nofollow""><strong>nineOldAndroids</strong></a>"" library, support old APIs too:</p>

<pre><code>rootView.setOnTouchListener(new OnTouchListener() {

@Override
public boolean onTouch(final View v, final MotionEvent event) {
    switch (event.getAction()) {
    case MotionEvent.ACTION_UP:
    case MotionEvent.ACTION_CANCEL:
        v.setBackgroundResource(R.drawable.listview_normal);
        ViewHelper.setAlpha(imageView, 1);
        break;
    case MotionEvent.ACTION_DOWN:
        v.setBackgroundResource(0);
        v.setBackgroundColor(getResources().getColor(R.color.listview_pressed));
        ViewHelper.setAlpha(imageView, 0.75f);
        break;
    }
    return false;
}
});
</code></pre>

<p>it assumes the rootView is the cell itself (the layout), and that it has a single imageView that you wish to be affected by the color that you wish to apply to the whole cell.</p>
"
"3916330","22532358","0","<pre><code>WebView browser = (WebView) findViewById(R.id.webview);
browser.getSettings().setLoadWithOverviewMode(true);
browser.getSettings().setUseWideViewPort(true);
browser.getSettings().setMinimumFontSize(40);
</code></pre>

<p>This works great for me since the text size has been set to really small by .setLoadWithOverViewMode and .setUseWideViewPort. </p>
"
"6290531","22567853","2","<p>I use this method, that uses <code>trim()</code> to avoid blank spaces :</p>

<pre><code>EditText myEditText = (EditText) findViewById(R.id.editUsername);
if ("""".equals(myEditText.getText().toString().trim()) {
    Toast.makeText(this, ""You did not enter a value!"", Toast.LENGTH_LONG).show();
    return;
}
</code></pre>

<p>an example if you have several EditText´s</p>

<pre><code>if (("""".equals(edtUser.getText().toString().trim()) || """".equals(edtPassword.getText().toString().trim()))){
        Toast.makeText(this, ""a value is missing!"", Toast.LENGTH_LONG).show();
        return;
}
</code></pre>
"
"6495898","22739009","6","<p>The method <b>getView()</b> wont work on fragments outside OnCreate and similar methods.</p>

<p>You have two ways, pass the view to the function on the oncreate (what means you can only run your functions when the view is being created) or set the view as a variable:</p>

<pre><code>    private View rootView;
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
        Bundle savedInstanceState) {
    rootView = inflater.inflate(R.layout.fragment_contatos, container, false);
    }

    public void doSomething () {
    ImageView thumbnail = (ImageView) rootView.findViewById(R.id.someId);
    }
</code></pre>
"
"3495890","22751867","0","<p>There are two issue when using a ListView inside a ScrollView.</p>

<p>1- ListView must fully expand to its children height. this ListView resolve this:</p>

<pre><code>public class ListViewExpanded extends ListView
{
    public ListViewExpanded(Context context, AttributeSet attrs)
    {
        super(context, attrs);
        setDividerHeight(0);
    }

    @Override
    public void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
    {
        super.onMeasure(widthMeasureSpec, MeasureSpec.makeMeasureSpec(Integer.MAX_VALUE &gt;&gt; 2, MeasureSpec.AT_MOST));
    }
}
</code></pre>

<p>Divider height must be 0, use padding in rows instead.</p>

<p>2- The ListView consumes touch events so ScrollView can't be scrolled as usual. This ScrollView resolve this issue:</p>

<pre><code>public class ScrollViewInterceptor extends ScrollView
{
    float startY;

    public ScrollViewInterceptor(Context context, AttributeSet attrs)
    {
        super(context, attrs);
    }

    @Override
    public boolean onInterceptTouchEvent(MotionEvent e)
    {
        onTouchEvent(e);
        if (e.getAction() == MotionEvent.ACTION_DOWN) startY = e.getY();
        return (e.getAction() == MotionEvent.ACTION_MOVE) &amp;&amp; (Math.abs(startY - e.getY()) &gt; 50);
    }
}
</code></pre>

<p>This is the best way I found to do the trick!</p>
"
"5033012","22932659","0","<p>I have use code from chase and M-WaJeEh
and I found some advantage &amp; disadvantage here</p>

<p>from chase</p>

<blockquote>
  <p>Advantage: </p>
  
  <ul>
  <li>it's perfect for 1 line TextView </li>
  </ul>
  
  <p>Disadvantage: </p>
  
  <ul>
  <li><p>if it's more than 1 line with custom font some of text will disappear</p></li>
  <li><p>if it's enable ellipse, it didn't prepare space for ellipse</p></li>
  <li><p>if it's custom font (typeface), it didn't support</p></li>
  </ul>
</blockquote>

<p>from M-WaJeEh</p>

<blockquote>
  <p>Advantage: </p>
  
  <ul>
  <li>it's perfect for multi-line</li>
  </ul>
  
  <p>Disadvantage: </p>
  
  <ul>
  <li><p>if set height as wrap-content, this code will start from minimum size and it will reduce to smallest as it can, not from the setSize and reduce by the limited width</p></li>
  <li><p>if it's custom font (typeface), it didn't support</p></li>
  </ul>
</blockquote>

<p>So, as the result I remix chase code with M-WaJeEh and become the perfect for either single line or multiple line here</p>

<pre><code>import android.R;
import android.annotation.TargetApi;
import android.content.Context;
import android.content.res.Resources;
import android.graphics.RectF;
import android.os.Build;
import android.text.Layout.Alignment;
import android.text.StaticLayout;
import android.text.TextPaint;
import android.util.AttributeSet;
import android.util.SparseIntArray;
import android.util.TypedValue;
import android.widget.TextView;


/**
 * Text view that auto adjusts text size to fit within the view.
 * If the text size equals the minimum text size and still does not
 * fit, append with an ellipsis.
 * 
 * @author Chase Colburn, M-WaJeEh, ToonSuperLove
 * @since Apr 4, 2011
 * @updated Apr 8, 2014
 * 
 * 
 */

public class AutoResizeTextView extends TextView {
private interface SizeTester {
    /**
     * 
     * @param suggestedSize
     *            Size of text to be tested
     * @param availableSpace
     *            available space in which text must fit
     * @return an integer &lt; 0 if after applying {@code suggestedSize} to
     *         text, it takes less space than {@code availableSpace}, &gt; 0
     *         otherwise
     */
    public int onTestSize(int suggestedSize, RectF availableSpace);
}

private RectF mTextRect = new RectF();

private RectF mAvailableSpaceRect;

private SparseIntArray mTextCachedSizes;

private TextPaint mPaint;

private float mMaxTextSize;

private float mSpacingMult = 1.0f;

private float mSpacingAdd = 0.0f;

private float mMinTextSize = 6;

private int mWidthLimit;

private static final int NO_LINE_LIMIT = -1;
private int mMaxLines;

private boolean mEnableSizeCache = true;
private boolean mInitiallized;

public AutoResizeTextView(Context context) {
    super(context);
    initialize();
}

public AutoResizeTextView(Context context, AttributeSet attrs) {
    super(context, attrs);
    initialize();
}

public AutoResizeTextView(Context context, AttributeSet attrs, int defStyle) {
    super(context, attrs, defStyle);
    initialize();
}

private void initialize() {
    mPaint = new TextPaint(getPaint());
    mMaxTextSize = getTextSize();
    mAvailableSpaceRect = new RectF();
    mTextCachedSizes = new SparseIntArray();
    if (mMaxLines == 0) {
        // no value was assigned during construction
        mMaxLines = NO_LINE_LIMIT;
    }
    mInitiallized = true;
}

@Override
public void setText(final CharSequence text, BufferType type) {
    super.setText(text, type);
    adjustTextSize(text.toString());
}

@Override
public void setTextSize(float size) {
    mMaxTextSize = size;
    mTextCachedSizes.clear();
    adjustTextSize(getText().toString());
}

@Override
public void setMaxLines(int maxlines) {
    super.setMaxLines(maxlines);
    mMaxLines = maxlines;
    reAdjust();
}

public int getMaxLines() {
    return mMaxLines;
}

@Override
public void setSingleLine() {
    super.setSingleLine();
    mMaxLines = 1;
    reAdjust();
}

@Override
public void setSingleLine(boolean singleLine) {
    super.setSingleLine(singleLine);
    if (singleLine) {
        mMaxLines = 1;
    } else {
        mMaxLines = NO_LINE_LIMIT;
    }
    reAdjust();
}

@Override
public void setLines(int lines) {
    super.setLines(lines);
    mMaxLines = lines;
    reAdjust();
}

@Override
public void setTextSize(int unit, float size) {
    Context c = getContext();
    Resources r;

    if (c == null)
        r = Resources.getSystem();
    else
        r = c.getResources();
    mMaxTextSize = TypedValue.applyDimension(unit, size,
            r.getDisplayMetrics());
    mTextCachedSizes.clear();
    adjustTextSize(getText().toString());
}

@Override
public void setLineSpacing(float add, float mult) {
    super.setLineSpacing(add, mult);
    mSpacingMult = mult;
    mSpacingAdd = add;
}

/**
 * Set the lower text size limit and invalidate the view
 * 
 * @param minTextSize
 */
public void setMinTextSize(float minTextSize) {
    mMinTextSize = minTextSize;
    reAdjust();
}

private void reAdjust() {
    adjustTextSize(getText().toString());
}

private void adjustTextSize(String string) {
    if (!mInitiallized) {
        return;
    }
    int startSize = (int) mMinTextSize;
    //int heightLimit = getMeasuredHeight() - getCompoundPaddingBottom()
    //    - getCompoundPaddingTop();
    mWidthLimit = getMeasuredWidth() - getCompoundPaddingLeft()
        - getCompoundPaddingRight();

    int heightLimit = getTextHeight(string, getPaint(), mWidthLimit, mMaxTextSize);

    mAvailableSpaceRect.right = mWidthLimit;
    mAvailableSpaceRect.bottom = heightLimit;
    super.setTextSize(
            TypedValue.COMPLEX_UNIT_PX,
            efficientTextSizeSearch(startSize, (int) mMaxTextSize,
                    mSizeTester, mAvailableSpaceRect));
}

// Set the text size of the text paint object and use a static layout to render text off screen before measuring
private int getTextHeight(CharSequence source, TextPaint paint, int width, float textSize) {
    // Update the text paint object
    paint.setTextSize(textSize);
    // Measure using a static layout
    StaticLayout layout = new StaticLayout(source, paint, width, Alignment.ALIGN_NORMAL, mSpacingMult, mSpacingAdd, true);
    return layout.getHeight();
}

private final SizeTester mSizeTester = new SizeTester() {
    @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
    @Override
    public int onTestSize(int suggestedSize, RectF availableSPace) {
        mPaint.setTextSize(suggestedSize);
        mPaint.setTypeface(getTypeface());
        String text = getText().toString();
        boolean singleline = getMaxLines() == 1;
        if (singleline) {
            mTextRect.bottom = mPaint.getFontSpacing();
            mTextRect.right = mPaint.measureText(text);
        } else {
            StaticLayout layout = new StaticLayout(text, mPaint,
                    mWidthLimit, Alignment.ALIGN_NORMAL, mSpacingMult,
                    mSpacingAdd, true);
            // return early if we have more lines
            if (getMaxLines() != NO_LINE_LIMIT
                    &amp;&amp; layout.getLineCount() &gt; getMaxLines()) {
                return 1;
            }
            mTextRect.bottom = layout.getHeight();
            int maxWidth = -1;
            for (int i = 0; i &lt; layout.getLineCount(); i++) {
                if (maxWidth &lt; layout.getLineWidth(i)) {
                    maxWidth = (int) layout.getLineWidth(i);
                }
            }
            mTextRect.right = maxWidth;
        }

        mTextRect.offsetTo(0, 0);
        if (availableSPace.contains(mTextRect)) {
            // may be too small, don't worry we will find the best match
            return -1;
        } else {
            // too big
            return 1;
        }
    }
};

/**
 * Enables or disables size caching, enabling it will improve performance
 * where you are animating a value inside TextView. This stores the font
 * size against getText().length() Be careful though while enabling it as 0
 * takes more space than 1 on some fonts and so on.
 * 
 * @param enable
 *            enable font size caching
 */
public void enableSizeCache(boolean enable) {
    mEnableSizeCache = enable;
    mTextCachedSizes.clear();
    adjustTextSize(getText().toString());
}

private int efficientTextSizeSearch(int start, int end,
        SizeTester sizeTester, RectF availableSpace) {
    if (!mEnableSizeCache) {
        return binarySearch(start, end, sizeTester, availableSpace);
    }
    String text = getText().toString();
    int key = text == null ? 0 : text.length();
    int size = mTextCachedSizes.get(key);
    if (size != 0) {
        return size;
    }
    size = binarySearch(start, end, sizeTester, availableSpace);
    mTextCachedSizes.put(key, size);
    return size;
}

private static int binarySearch(int start, int end, SizeTester sizeTester,
        RectF availableSpace) {
    int lastBest = start;
    int lo = start;
    int hi = end - 1;
    int mid = 0;
    while (lo &lt;= hi) {
        mid = (lo + hi) &gt;&gt;&gt; 1;
        int midValCmp = sizeTester.onTestSize(mid, availableSpace);
        if (midValCmp &lt; 0) {
            lastBest = lo;
            lo = mid + 1;
        } else if (midValCmp &gt; 0) {
            hi = mid - 1;
            lastBest = hi;
        } else {
            return mid;
        }
    }
    // make sure to return last best
    // this is what should always be returned
    return lastBest;

}

@Override
protected void onTextChanged(final CharSequence text, final int start,
        final int before, final int after) {
    super.onTextChanged(text, start, before, after);
    reAdjust();
}

@Override
protected void onSizeChanged(int width, int height, int oldwidth,
        int oldheight) {
    mTextCachedSizes.clear();
    super.onSizeChanged(width, height, oldwidth, oldheight);
    if (width != oldwidth || height != oldheight) {
        reAdjust();
    }
}
}
</code></pre>
"
"2201917","22932726","2","<p>Just like the solutions other have written (that work fine), I would like to answer the same thing, but with a tip that I think most would prefer to use.</p>

<p>In case you wish the app you start to open in a new task, indepandant of your own, instead of staying on the same stack, you can use this code:</p>

<pre><code>final Intent intent=new Intent(Intent.ACTION_VIEW,Uri.parse(url));
intent.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY|Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET);
intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK|Intent.FLAG_ACTIVITY_MULTIPLE_TASK);
startActivity(intent);
</code></pre>
"
"6070805","22973944","1","<p>The accepted answer worked so well until I copied text with line-breaks into into the EditText. So I added onTextContextMenuItem to monitor the paste action.</p>

<pre><code>@Override
public boolean onTextContextMenuItem(int id) {
    boolean ret = super.onTextContextMenuItem(id);
    switch (id) {
        case android.R.id.paste:
            onTextPaste();
            break;
    }
    return ret;
}

public void onTextPaste() {
    if (getText() == null)
        return;
    String text = getText().toString();
    text = text.replaceAll(System.getProperty(""line.separator""), "" "");
    text = text.replaceAll(""\\s+"", "" "");
    setText(text);
}
</code></pre>
"
"3226495","22983581","2","<p>Some Activities actually you don't want to open again when back button pressed such Splash Screen Activity, Welcome Screen Activity, Confirmation Windows. Actually you don't need this in activity stack. you can do this using=> open manifest.xml file and add a attribute </p>

<blockquote>
  <p>android:noHistory=""true""</p>
</blockquote>

<p>to these activities.</p>

<pre><code>&lt;activity
    android:name=""com.example.shoppingapp.AddNewItems""
    android:label="""" 
    android:noHistory=""true""&gt;
&lt;/activity&gt;
</code></pre>

<p>OR </p>

<p>Sometimes you want close the entire application in certain back button press. Here best practice is open up the home window instead of exiting application. For that you need to override onBackPressed() method. usually this method open up the top activity in the stack.</p>

<pre><code>@override
public void onBackPressed(){
Intent a = new Intent(Intent.ACTION_MAIN);
a.addCategory(Intent.CATEGORY_HOME);
a.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
startActivity(a);

}
</code></pre>

<p>OR</p>

<p>in back button pressed you want to exit that activity and also you also don't want to add this in activity stack. call finish() method inside onBackPressed() method. it will not make  close the entire application. it will go for the previous activity in the stack.</p>

<pre><code>public void onBakPressed() {
  finish();
}
</code></pre>
"
"6200533","23086334","1","<p>Standard way to do this is to use the custom styles.
Ex-</p>

<p>In styles.xml add the following.</p>

<pre><code>&lt;resources xmlns:android=""http://schemas.android.com/apk/res/android""&gt;
&lt;style name=""MyApp.TextAppearance.LoginText""&gt;
    &lt;item name=""android:textStyle""&gt;bold|italic&lt;/item&gt;
&lt;/style&gt;
</code></pre>

<p></p>

<p>Apply this style to your TextView as follows.</p>

<pre><code>&lt;TextView
    android:layout_width=""wrap_content""
    android:layout_height=""wrap_content""
    style=""@style/MyApp.TextAppearance.LoginText"" /&gt;
</code></pre>
"
"2471935","23128702","3","<p>The best modern library for such a task for my opinion is <a href=""http://square.github.io/picasso/"" rel=""nofollow"">Picasso</a> by Square. It allows to load an image to an ImageView by URL with one-liner:</p>

<pre><code>Picasso.with(context).load(""http://i.imgur.com/DvpvklR.png"").into(imageView);
</code></pre>
"
"5495225","23143089","0","<p>Funny trick. Works 100% :)</p>

<pre><code>tv.setThreshold(Integer.MAX_VALUE);
tv.setText(station.getName());
tv.setThreshold(1);
</code></pre>
"
"7723964","23218415","0","<p>I found simple solution, which works fine even if you want add new fragments in the middle or replace current fragment. In my solution you should override <code>getItemId()</code> which should return unique id for each fragment. Not position as by default. </p>

<p>There is it:</p>

<pre><code>public class DynamicPagerAdapter extends FragmentPagerAdapter {

private ArrayList&lt;Page&gt; mPages = new ArrayList&lt;Page&gt;();
private ArrayList&lt;Fragment&gt; mFragments = new ArrayList&lt;Fragment&gt;();

public DynamicPagerAdapter(FragmentManager fm) {
    super(fm);
}

public void replacePage(int position, Page page) {
    mPages.set(position, page);
    notifyDataSetChanged();
}

public void setPages(ArrayList&lt;Page&gt; pages) {
    mPages = pages;
    notifyDataSetChanged();
}

@Override
public Fragment getItem(int position) {
    if (mPages.get(position).mPageType == PageType.FIRST) {
        return FirstFragment.newInstance(mPages.get(position));
    } else {
        return SecondFragment.newInstance(mPages.get(position));
    }
}

@Override
public int getCount() {
    return mPages.size();
}

@Override
public long getItemId(int position) {
    // return unique id
    return mPages.get(position).getId();
}

@Override
public Object instantiateItem(ViewGroup container, int position) {
    Fragment fragment = (Fragment) super.instantiateItem(container, position);
    while (mFragments.size() &lt;= position) {
        mFragments.add(null);
    }
    mFragments.set(position, fragment);
    return fragment;
}

@Override
public void destroyItem(ViewGroup container, int position, Object object) {
    super.destroyItem(container, position, object);
    mFragments.set(position, null);
}

@Override
public int getItemPosition(Object object) {
    PagerFragment pagerFragment = (PagerFragment) object;
    Page page = pagerFragment.getPage();
    int position = mFragments.indexOf(pagerFragment);
    if (page.equals(mPages.get(position))) {
        return POSITION_UNCHANGED;
    } else {
        return POSITION_NONE;
    }
}
}
</code></pre>

<p>Notice: In this example <code>FirstFragment</code> and <code>SecondFragment</code> extends abstract class PageFragment, which has method <code>getPage()</code>.</p>
"
"3349121","23240068","0","<p>It's Right, the best way to go about it to fix it in the XML Layout itself using:</p>

<pre><code>&lt;EditText
android:inputType=""text""
android:digits=""0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"" /&gt;
</code></pre>

<p>as rightly pointed by Florian Fröhlich, it works well for text views even.</p>

<pre><code>&lt;TextView
android:inputType=""text""
android:digits=""0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"" /&gt;
</code></pre>

<p>Just a word of caution, the characters mentioned in the <code>android:digits</code> will only be displayed, so just be careful not to miss some out    :)</p>
"
"4894885","23548998","2","<p>You can use <a href=""https://commons.apache.org/proper/commons-io/javadocs/api-1.4/org/apache/commons/io/FilenameUtils.html"" rel=""nofollow"">FilenameUtils</a> from <em>Apache Commons</em>:</p>

<pre><code>String extension = FilenameUtils.getExtension(mFile.getName());
</code></pre>
"
"3624280","23556228","1","<p>Using this <a href=""https://github.com/kcochibili/TinyDB--Android-Shared-Preferences-Turbo"" rel=""nofollow"">simple library</a>, here is how you make the calls to SharedPreferences..</p>

<pre><code>TinyDB tinydb = new TinyDB(context);

tinydb.putInt(""clickCount"", 2);

tinydb.putString(""userName"", ""john"");
tinydb.putBoolean(""isUserMale"", true); 

tinydb.putList(""MyUsers"", mUsersArray);
tinydb.putImagePNG(""DropBox/WorkImages"", ""MeAtlunch.png"", lunchBitmap);

//These plus the corresponding get methods are all Included
</code></pre>
"
"2160619","23561174","0","<p>This one handled my html as well,</p>

<pre><code>/*
 * Copyright (C) 2013 Google Inc.
 * Licensed to The Android Open Source Project.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.android.mail.ui;

import android.content.Context;
import android.content.res.TypedArray;
import android.text.Layout;
import android.text.Layout.Alignment;
import android.text.SpannableStringBuilder;
import android.text.Spanned;
import android.text.StaticLayout;
import android.text.TextUtils;
import android.util.AttributeSet;
import android.widget.TextView;
/**
 * A special MultiLine TextView that will apply ellipsize logic to only the last
 * line of text, such that the last line may be shorter than any previous lines.
 */
public class EllipsizedMultilineTextView extends TextView {
    public static final int ALL_AVAILABLE = -1;
    private int mMaxLines;

    public EllipsizedMultilineTextView(Context context) {
        super(context);
    }
    public EllipsizedMultilineTextView(Context context, AttributeSet attrs) {
        super(context, attrs);
        init(context, attrs);
    }
    public EllipsizedMultilineTextView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        init(context, attrs);
    }

    private final void init(Context context, AttributeSet attrs) {
        final TypedArray a = context.obtainStyledAttributes(attrs,
            new int[] { android.R.attr.maxLines });
        setMaxLines(a.getInt(0, 2));
    }
    @Override
    public void setMaxLines(int maxlines) {
        super.setMaxLines(maxlines);
        mMaxLines = maxlines;
    }
    /**
     * Ellipsize just the last line of text in this view and set the text to the
     * new ellipsized value.
     * @param text Text to set and ellipsize
     * @param avail available width in pixels for the last line
     * @param paint Paint that has the proper properties set to measure the text
     *            for this view
     * @return the {@link CharSequence} that was set on the {@link TextView}
     */
    public CharSequence setText(final CharSequence text, int avail) {
        if (text == null || text.length() == 0) {
            return text;
        }
        setEllipsize(null);
        setText(text);
        if (avail == ALL_AVAILABLE) {
            return text;
        }
        Layout layout = getLayout();
        if (layout == null) {
            final int w = getWidth() - getCompoundPaddingLeft() - getCompoundPaddingRight();
            layout = new StaticLayout(text, 0, text.length(), getPaint(), w, Alignment.ALIGN_NORMAL,
                1.0f, 0f, false);
        }
        // find the last line of text and chop it according to available space
        final int lastLineStart = layout.getLineStart(mMaxLines - 1);
        final CharSequence remainder = TextUtils.ellipsize(text.subSequence(lastLineStart,
            text.length()), getPaint(), avail, TextUtils.TruncateAt.END);
        // assemble just the text portion, without spans
        final SpannableStringBuilder builder = new SpannableStringBuilder();
        builder.append(text.toString(), 0, lastLineStart);
        if (!TextUtils.isEmpty(remainder)) {
            builder.append(remainder.toString());
        }
        // Now copy the original spans into the assembled string, modified for any ellipsizing.
        //
        // Merely assembling the Spanned pieces together would result in duplicate CharacterStyle
        // spans in the assembled version if a CharacterStyle spanned across the lastLineStart
        // offset.
        if (text instanceof Spanned) {
            final Spanned s = (Spanned) text;
            final Object[] spans = s.getSpans(0, s.length(), Object.class);
            final int destLen = builder.length();
            for (int i = 0; i &lt; spans.length; i++) {
                final Object span = spans[i];
                final int start = s.getSpanStart(span);
                final int end = s.getSpanEnd(span);
                final int flags = s.getSpanFlags(span);
                if (start &lt;= destLen) {
                    builder.setSpan(span, start, Math.min(end, destLen), flags);
                }
            }
        }
        setText(builder);
        return builder;
    }
}
</code></pre>

<p>Orignal Source <a href=""https://android.googlesource.com/platform/packages/apps/UnifiedEmail/+/184ec73/src/com/android/mail/ui/EllipsizedMultilineTextView.java"" rel=""nofollow"">LINK</a></p>
"
"2271131","23603331","2","<p>here is the code which worked for me please try this is the simple method which takes time and date from system call the method  Datetime() where ever you needed</p>

<pre><code>public static String Datetime()
                {
                Calendar c = Calendar .getInstance();
                System.out.println(""Current time =&gt; ""+c.getTime());
                SimpleDateFormat df = new SimpleDateFormat(""yyyy-MM-dd HH:mms"");
                  formattedDate = df.format(c.getTime());
                  return formattedDate;


                }
</code></pre>
"
"5357455","23816494","0","<p>I really liked Pinhassi's answer, but noticed that after the user had entered the specified number digits after the decimal point you could no longer enter text to the left side of the decimal point.  The problem was that the solution only tested the previous text that had been entered, not the current text being entered.  So here is my solution that inserts the new character into the original text for validation.</p>

<pre><code>package com.test.test;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import android.text.InputFilter;
import android.text.Spanned;
import android.util.Log;

public class InputFilterCurrency implements InputFilter {
    Pattern moPattern;

    public InputFilterCurrency(int aiMinorUnits) {
        // http://www.regexplanet.com/advanced/java/index.html
        moPattern=Pattern.compile(""[0-9]*+((\\.[0-9]{0,""+ aiMinorUnits + ""})?)||(\\.)?"");

    } // InputFilterCurrency

    @Override
    public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
        String lsStart  = """";
        String lsInsert = """";
        String lsEnd    = """";
        String lsText   = """";

        Log.d(""debug"", moPattern.toString());
        Log.d(""debug"", ""source: "" + source + "", start: "" + start + "", end:"" + end + "", dest: "" + dest + "", dstart: "" + dstart + "", dend: "" + dend );

        lsText = dest.toString();

        // If the length is greater then 0, then insert the new character
        // into the original text for validation
        if (lsText.length() &gt; 0) {

            lsStart = lsText.substring(0, dstart);
            Log.d(""debug"", ""lsStart : "" + lsStart);
            // Check to see if they have deleted a character
            if (source != """") {
                lsInsert = source.toString();
                Log.d(""debug"", ""lsInsert: "" + lsInsert);
            } // if
            lsEnd = lsText.substring(dend);
            Log.d(""debug"", ""lsEnd   : "" + lsEnd);
            lsText = lsStart + lsInsert + lsEnd;
            Log.d(""debug"", ""lsText  : "" + lsText);

        } // if

        Matcher loMatcher = moPattern.matcher(lsText);
        Log.d(""debug"", ""loMatcher.matches(): "" + loMatcher.matches() + "", lsText: "" + lsText);
        if(!loMatcher.matches()) {
            return """";
        }
        return null;

    } // CharSequence

} // InputFilterCurrency
</code></pre>

<p>And the call to set the editText filter</p>

<pre><code>editText.setFilters(new InputFilter[] {new InputFilterCurrency(2)});

Ouput with two decimal places
05-22 15:25:33.434: D/debug(30524): [0-9]*+((\.[0-9]{0,2})?)||(\.)?
05-22 15:25:33.434: D/debug(30524): source: 5, start: 0, end:1, dest: 123.4, dstart: 5, dend: 5
05-22 15:25:33.434: D/debug(30524): lsStart : 123.4
05-22 15:25:33.434: D/debug(30524): lsInsert: 5
05-22 15:25:33.434: D/debug(30524): lsEnd   : 
05-22 15:25:33.434: D/debug(30524): lsText  : 123.45
05-22 15:25:33.434: D/debug(30524): loMatcher.matches(): true, lsText: 123.45

Ouput inserting a 5 in the middle
05-22 15:26:17.624: D/debug(30524): [0-9]*+((\.[0-9]{0,2})?)||(\.)?
05-22 15:26:17.624: D/debug(30524): source: 5, start: 0, end:1, dest: 123.45, dstart: 2, dend: 2
05-22 15:26:17.624: D/debug(30524): lsStart : 12
05-22 15:26:17.624: D/debug(30524): lsInsert: 5
05-22 15:26:17.624: D/debug(30524): lsEnd   : 3.45
05-22 15:26:17.624: D/debug(30524): lsText  : 1253.45
05-22 15:26:17.624: D/debug(30524): loMatcher.matches(): true, lsText: 1253.45
</code></pre>
"
"6330260","23824210","3","<pre><code>Intent intent = new Intent(this, classObject);
intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | IntentCompat.FLAG_ACTIVITY_CLEAR_TASK);
startActivity(intent);
</code></pre>

<p>This Will work for all Android versions. Where <code>IntentCompat</code> the class added in Android Support library. </p>
"
"4165414","23844422","3","<p>I implemented dispatchTouchEvent in Activity to do this:</p>

<pre><code>private EditText mEditText;
private Rect mRect = new Rect();
@Override
public boolean dispatchTouchEvent(MotionEvent ev) {
    final int action = MotionEventCompat.getActionMasked(ev);

    int[] location = new int[2];
    mEditText.getLocationOnScreen(location);
    mRect.left = location[0];
    mRect.top = location[1];
    mRect.right = location[0] + mEditText.getWidth();
    mRect.bottom = location[1] + mEditText.getHeight();

    int x = (int) ev.getX();
    int y = (int) ev.getY();

    if (action == MotionEvent.ACTION_DOWN &amp;&amp; !mRect.contains(x, y)) {
        InputMethodManager input = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
        input.hideSoftInputFromWindow(mEditText.getWindowToken(), 0);
    }
    return super.dispatchTouchEvent(ev);
}
</code></pre>

<p>and I tested it, works perfect!</p>
"
"2471935","23865531","6","<p><a href=""http://square.github.io/picasso/"" rel=""nofollow""><strong>Picasso</strong></a> allows for hassle-free image loading in your application—often in one line of code!</p>

<pre><code>Picasso.with(context).load(""http://i.imgur.com/DvpvklR.png"").into(imageView);
</code></pre>

<p>Many common pitfalls of image loading on Android are handled automatically by <a href=""http://square.github.io/picasso/"" rel=""nofollow""><strong>Picasso</strong></a></p>

<ul>
<li>Handling ImageView recycling and download cancelation in an adapter.</li>
<li>Complex image transformations with minimal memory use.</li>
<li>Automatic memory and disk caching.</li>
</ul>

<p><img src=""http://i.stack.imgur.com/qCC7y.png"" alt=""enter image description here""></p>
"
"2459916","23885808","6","<p>Rounded image Using imageLoader <a href=""https://github.com/nostra13/Android-Universal-Image-Loader"" rel=""nofollow"">here</a></p>

<p>Create a Options;</p>

<pre><code> DisplayImageOptions options = new DisplayImageOptions.Builder()
       // this will make circle, pass the width of image 
.displayer(new.RoundedBitmapDisplayer(getResources().getDimensionPixelSize(R.dimen.image_dimen_menu))) 
.cacheOnDisc(true)
 .build();
</code></pre>

<p>imageLoader.displayImage(url_for_image,ImageView,options);</p>

<p>Or U can user Picasso Library from squre.</p>

<pre><code>Picasso.with(mContext)
.load(com.app.utility.Constants.BASE_URL+b.image)
.placeholder(R.drawable.profile)
.error(R.drawable.profile)
.transform(new RoundedTransformation(50, 4))
.resizeDimen(R.dimen.list_detail_image_size, R.dimen.list_detail_image_size)
.centerCrop()
.into(v.im_user);
</code></pre>

<p>you can download RoundedTrasformation file here
<a href=""https://www.dropbox.com/s/lp3d43hra3gbhul/RoundedTransformation.java"" rel=""nofollow"">here</a></p>
"
"2201917","23891973","5","<p>a common way to achieve this is with the next code:</p>

<pre><code>String url = ""http://www.stackoverflow.com"";
Intent i = new Intent(Intent.ACTION_VIEW);
i.setData(Uri.parse(url)); 
startActivity(i); 
</code></pre>

<p>that could be changed to a short code version ...</p>

<pre><code>Intent intent = new Intent(Intent.ACTION_VIEW).setData(Uri.parse(""http://www.stackoverflow.com""));      
startActivity(intent); 
</code></pre>

<p>or</p>

<pre><code>Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(""http://www.stackoverflow.com"")); 
startActivity(intent);
</code></pre>

<p>or</p>

<pre><code>startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""http://www.stackoverflow.com"")));
</code></pre>

<p>=)</p>
"
"5495225","23909350","0","<pre><code>act.post(new Runnable() 
{
  @Override
  public void run()
  {
    act.dismissDropDown();
  }
});
</code></pre>

<p>Works just fine!</p>
"
"3035692","23924441","2","<p>Android provides a non straight foward solution: <code>BitmapDrawable</code>. To get the Bitmap , we'll have to provide the resource id <code>R.drawable.flower_pic</code> to the  a <code>BitmapDrawable</code> and then cast it to a <code>Bitmap</code>. </p>

<pre><code>Bitmap bm = ((BitmapDrawable) getResources().getDrawable(R.drawable.flower_pic)).getBitmap();
</code></pre>
"
"4946295","23931483","3","<p>For Smooth animation please use Handler with run method.....And Enjoy Expand /Collapse animation</p>

<pre><code> class AnimUtils{

             public void expand(final View v) {
              int ANIMATION_DURATION=500;//in milisecond
    v.measure(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
    final int targtetHeight = v.getMeasuredHeight();

    v.getLayoutParams().height = 0;
    v.setVisibility(View.VISIBLE);
    Animation a = new Animation()
    {
        @Override
        protected void applyTransformation(float interpolatedTime, Transformation t) {
            v.getLayoutParams().height = interpolatedTime == 1
                    ? LayoutParams.WRAP_CONTENT
                    : (int)(targtetHeight * interpolatedTime);
            v.requestLayout();
        }

        @Override
        public boolean willChangeBounds() {
            return true;
        }
    };

    // 1dp/ms
    a.setDuration(ANIMATION_DURATION);

  // a.setDuration((int)(targtetHeight / v.getContext().getResources().getDisplayMetrics().density));
    v.startAnimation(a);
}



public void collapse(final View v) {
    final int initialHeight = v.getMeasuredHeight();

    Animation a = new Animation()
    {
        @Override
        protected void applyTransformation(float interpolatedTime, Transformation t) {
            if(interpolatedTime == 1){
                v.setVisibility(View.GONE);
            }else{
                v.getLayoutParams().height = initialHeight - (int)(initialHeight * interpolatedTime);
                v.requestLayout();
            }
        }

        @Override
        public boolean willChangeBounds() {
            return true;
        }
    };

    // 1dp/ms
    a.setDuration(ANIMATION_DURATION);
   // a.setDuration((int)(initialHeight / v.getContext().getResources().getDisplayMetrics().density));
    v.startAnimation(a);
}
</code></pre>

<p>}</p>

<p>And Call using this code:</p>

<pre><code>       private void setAnimationOnView(final View inactive ) {
    //I am applying expand and collapse on this TextView ...You can use your view 

    //for expand animation
    new Handler().postDelayed(new Runnable() {
        @Override
        public void run() {

            new AnimationUtililty().expand(inactive);

        }
    }, 1000);


    //For collapse
    new Handler().postDelayed(new Runnable() {
        @Override
        public void run() {

            new AnimationUtililty().collapse(inactive);
            //inactive.setVisibility(View.GONE);

        }
    }, 8000);

}
</code></pre>

<p>Other solution is:</p>

<pre><code>               public void expandOrCollapse(final View v,String exp_or_colpse) {
    TranslateAnimation anim = null;
    if(exp_or_colpse.equals(""expand""))
    {
        anim = new TranslateAnimation(0.0f, 0.0f, -v.getHeight(), 0.0f);
        v.setVisibility(View.VISIBLE);  
    }
    else{
        anim = new TranslateAnimation(0.0f, 0.0f, 0.0f, -v.getHeight());
        AnimationListener collapselistener= new AnimationListener() {
            @Override
            public void onAnimationStart(Animation animation) {
            }

            @Override
            public void onAnimationRepeat(Animation animation) {
            }

            @Override
            public void onAnimationEnd(Animation animation) {
            v.setVisibility(View.GONE);
            }
        };

        anim.setAnimationListener(collapselistener);
    }

     // To Collapse
        //

    anim.setDuration(300);
    anim.setInterpolator(new AccelerateInterpolator(0.5f));
    v.startAnimation(anim);
}
</code></pre>
"
"3611457","23952064","0","<p>This works prefect for me. It solves problem with different ""natural orientation"" of tablet/phone ;)</p>

<pre><code>int rotation = getWindowManager().getDefaultDisplay().getRotation();

        Configuration config = getResources().getConfiguration();
        int naturalOrientation;

        if (((rotation == Surface.ROTATION_0 || rotation == Surface.ROTATION_180) &amp;&amp;
                config.orientation == Configuration.ORIENTATION_LANDSCAPE)
                || ((rotation == Surface.ROTATION_90 || rotation == Surface.ROTATION_270) &amp;&amp;
                config.orientation == Configuration.ORIENTATION_PORTRAIT)) {
            naturalOrientation = Configuration.ORIENTATION_LANDSCAPE;
        } else {
            naturalOrientation = Configuration.ORIENTATION_PORTRAIT;
        }

        // because getRotation() gives ""rotation from natural orientation"" of device (different on phone and tablet)
        // we need to update rotation variable if natural orienation isn't 0 (mainly tablets)
        if (naturalOrientation == Configuration.ORIENTATION_LANDSCAPE)
            rotation = ++rotation % 4;

        switch (rotation) {
            case Surface.ROTATION_0: //0
                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
                break;
            case Surface.ROTATION_90: //1
                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
                break;
            case Surface.ROTATION_180: //2
                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_REVERSE_PORTRAIT);
                break;
            case Surface.ROTATION_270: //3
                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE);
                break;
        }
    } else {
        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED);
    }
</code></pre>
"
"3035692","23954355","2","<p>Use this code.it will help you for achieving your goal.</p>

<pre><code> Bitmap bmp=BitmapFactory.decodeResource(getResources(), R.drawable.profileimage);
    if (bmp!=null) {
        Bitmap bitmap_round=getRoundedShape(bmp);
        if (bitmap_round!=null) {
            profileimage.setImageBitmap(bitmap_round);
        }
    }

  public Bitmap getRoundedShape(Bitmap scaleBitmapImage) {
    int targetWidth = 100;
    int targetHeight = 100;
    Bitmap targetBitmap = Bitmap.createBitmap(targetWidth, 
            targetHeight,Bitmap.Config.ARGB_8888);

    Canvas canvas = new Canvas(targetBitmap);
    Path path = new Path();
    path.addCircle(((float) targetWidth - 1) / 2,
            ((float) targetHeight - 1) / 2,
            (Math.min(((float) targetWidth), 
                    ((float) targetHeight)) / 2),
                    Path.Direction.CCW);

    canvas.clipPath(path);
    Bitmap sourceBitmap = scaleBitmapImage;
    canvas.drawBitmap(sourceBitmap, 
            new Rect(0, 0, sourceBitmap.getWidth(),
                    sourceBitmap.getHeight()), 
                    new Rect(0, 0, targetWidth, targetHeight), new Paint(Paint.FILTER_BITMAP_FLAG));
    return targetBitmap;
}
</code></pre>
"
"8181828","23975081","0","<p>I've made some improvements to ZeroG's answer. Mainly cancellation of excess task calls and implementing the whole thing as a private OnTouchListener, so all the scroll detection code would be in one place.</p>

<p>Paste the following code into your own ScrollView implementation:</p>

<pre><code>private class ScrollFinishHandler implements OnTouchListener
{
        private static final int SCROLL_TASK_INTERVAL = 100;

        private Runnable    mScrollerTask;
        private int         mInitialPosition = 0;

        public ScrollFinishHandler()
        {
            mScrollerTask = new Runnable() {

                public void run() {

                    int newPosition = getScrollY();
                    if(mInitialPosition - newPosition == 0)
                    {//has stopped

                       onScrollStopped(); // Implement this on your main ScrollView class
                    }else{
                        mInitialPosition = getScrollY();
                        ExpandingLinearLayout.this.postDelayed(mScrollerTask, SCROLL_TASK_INTERVAL);
                    }
                }
            };
        }

        @Override
        public boolean onTouch(View v, MotionEvent event) 
        {
            if (event.getAction() == MotionEvent.ACTION_UP) 
            {

                startScrollerTask();
            }
            else
            {
                stopScrollerTask();
            }

            return false;
        }

}
</code></pre>

<p>And then in your ScrollView implementation:</p>

<pre><code>setOnTouchListener( new ScrollFinishHandler() );
</code></pre>
"
"3035692","23994183","10","<p>1.to get the drawable from the resources </p>

<pre><code>Bitmap icon = BitmapFactory.decodeResource(mContext.getResources(),
            R.drawable.index);
</code></pre>

<p>2.get the image from the url</p>

<pre><code>String urlString =  ""http://your image url"";
URL url  = new URL(urlString);
ImageView imageView = (ImageView)findViewById(R.id.userImage);
if (imageView != null) {
Bitmap bmIcon =
    BitmapFactory.decodeStream(url_url.openConnection().getInputStream());
imageView.setImageBitmap(bmIcon);
}
</code></pre>
"
"5357455","24014006","3","<p>My solution is simple and works perfect!</p>

<pre><code>public class DecimalInputTextWatcher implements TextWatcher {

private String mPreviousValue;
private int mCursorPosition;
private boolean mRestoringPreviousValueFlag;
private int mDigitsAfterZero;
private EditText mEditText;

public DecimalInputTextWatcher(EditText editText, int digitsAfterZero) {
    mDigitsAfterZero = digitsAfterZero;
    mEditText = editText;
    mPreviousValue = """";
    mRestoringPreviousValueFlag = false;
}

@Override
public void beforeTextChanged(CharSequence s, int start, int count, int after) {
    if (!mRestoringPreviousValueFlag) {
        mPreviousValue = s.toString();
        mCursorPosition = mEditText.getSelectionStart();
    }
}

@Override
public void onTextChanged(CharSequence s, int start, int before, int count) {
}

@Override
public void afterTextChanged(Editable s) {
    if (!mRestoringPreviousValueFlag) {

        if (!isValid(s.toString())) {
            mRestoringPreviousValueFlag = true;
            restorePreviousValue();
        }

    } else {
        mRestoringPreviousValueFlag = false;
    }
}

private void restorePreviousValue() {
    mEditText.setText(mPreviousValue);
    mEditText.setSelection(mCursorPosition);
}

private boolean isValid(String s) {
    Pattern patternWithDot = Pattern.compile(""[0-9]*((\\.[0-9]{0,"" + mDigitsAfterZero + ""})?)||(\\.)?"");
    Pattern patternWithComma = Pattern.compile(""[0-9]*((,[0-9]{0,"" + mDigitsAfterZero + ""})?)||(,)?"");

    Matcher matcherDot = patternWithDot.matcher(s);
    Matcher matcherComa = patternWithComma.matcher(s);

    return matcherDot.matches() || matcherComa.matches();
}
}
</code></pre>

<p>Usage:</p>

<pre><code>myTextEdit.addTextChangedListener(new DecimalInputTextWatcher(myTextEdit, 2));
</code></pre>
"
"3916330","24026132","0","<p>In theory the combination of:</p>

<pre><code>settings.setLayoutAlgorithm(LayoutAlgorithm.NARROW_COLUMNS); 
</code></pre>

<p>with </p>

<pre><code>settings.setUseWideViewPort(false)
</code></pre>

<p>fixes the problem, wrapping the content and fitting to the screen. But the <em><a href=""http://developer.android.com/reference/android/webkit/WebSettings.LayoutAlgorithm.html"" rel=""nofollow"">NARROW_COLUMNS</a></em> has been deprecated. I advice you to read this thread below that explores the issue in detail: <a href=""https://code.google.com/p/android/issues/detail?id=62378"" rel=""nofollow"">https://code.google.com/p/android/issues/detail?id=62378</a></p>
"
"2591036","24103226","5","<p>You can use this code in your java file</p>

<p>add this line before you set or load your view</p>

<pre><code>requestWindowFeature(Window.FEATURE_NO_TITLE); 
setContentView(R.layout.activity_main);
</code></pre>
"
"2471935","24134425","2","<p><strong>Try this way,hope this will help you to solve your problem.</strong></p>

<p>Here I explain about how to use ""AndroidQuery"" external library for load image from url/server in asyncTask manner with also cache loaded image to device file or cache area.</p>

<ul>
<li>Download ""AndroidQuery"" library <a href=""https://code.google.com/p/android-query/"" rel=""nofollow"">from here</a> </li>
<li>Copy/Paste this jar to project lib folder and add this library to project build-path</li>
<li>Now I show demo to how to use it.</li>
</ul>

<p><strong>activity_main.xml</strong></p>

<pre><code>&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
        android:layout_width=""match_parent""
        android:layout_height=""match_parent""
        android:gravity=""center""&gt;

        &lt;FrameLayout
            android:layout_width=""wrap_content""
            android:layout_height=""wrap_content""&gt;

            &lt;ImageView
                android:id=""@+id/imageFromUrl""
                android:layout_width=""wrap_content""
                android:layout_height=""wrap_content""
                android:adjustViewBounds=""true""/&gt;
            &lt;ProgressBar
                android:id=""@+id/pbrLoadImage""
                android:layout_width=""wrap_content""
                android:layout_height=""wrap_content""
                android:layout_gravity=""center""/&gt;

        &lt;/FrameLayout&gt;
    &lt;/LinearLayout&gt;
</code></pre>

<p><strong>MainActivity.java</strong></p>

<pre><code>public class MainActivity extends Activity {

private AQuery aQuery;
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    aQuery = new AQuery(this);
    aQuery.id(R.id.imageFromUrl).progress(R.id.pbrLoadImage).image(""http://itechthereforeiam.com/wp-content/uploads/2013/11/android-gone-packing.jpg"",true,true);
 }
}

Note : Here I just implemented common method to load image from url/server but you can use various types of method which can be provided by ""AndroidQuery""to load your image easily.
</code></pre>
"
"6290531","24147053","3","<pre><code>TextUtils.isEmpty(editText.getText());
</code></pre>
"
"6290531","24158002","0","<p><strong>""check out this  i m sure you will like it.""</strong></p>

<pre><code>log_in.setOnClickListener(new OnClickListener() {

    @Override
    public void onClick(View v) {
        // TODO Auto-generated method stub
        username=user_name.getText().toString();
        password=pass_word.getText().toString();
        if(username.equals(""""))
        {
            user_name.setError(""Enter username"");
        }
        else if(password.equals(""""))
        {
            pass_word.setError(""Enter your password"");
        }
        else
        {
            Intent intent=new Intent(MainActivity.this,Scan_QRActivity.class);
            startActivity(intent);
        }
    }
});
</code></pre>
"
"6343166","24175886","2","<p>I suggest using <a href=""http://androidannotations.org/"" rel=""nofollow"">Android Annotations</a>. That will allow you to simply run any method in a background thread:</p>

<pre><code>// normal method
private void normal() {
    doSomething(); // do something in background
}

@Background
protected void doSomething() 
    // run your networking code here
}
</code></pre>
"
"4617898","24231539","1","<p>use  <strong>style=""?android:borderlessButtonStyle""</strong> in the xml file. 
It will show android default click effect. </p>

<pre><code>&lt;ImageView
    android:id=""@+id/imageView1""
    android:layout_width=""wrap_content""
    android:layout_height=""wrap_content""
    android:src=""@drawable/ic_launcher"" 
    style=""?android:borderlessButtonStyle""
    /&gt;
</code></pre>
"
"3145089","24273312","0","<p>The recommended way to do this is to use <code>LocationClient</code>:</p>

<p>First, define location update interval values. Adjust this to your needs.</p>

<pre><code>private static final int MILLISECONDS_PER_SECOND = 1000;
private static final long UPDATE_INTERVAL = MILLISECONDS_PER_SECOND * UPDATE_INTERVAL_IN_SECONDS;
private static final int FASTEST_INTERVAL_IN_SECONDS = 1;
private static final long FASTEST_INTERVAL = MILLISECONDS_PER_SECOND * FASTEST_INTERVAL_IN_SECONDS;
</code></pre>

<p>Have your <code>Activity</code> implement <code>GooglePlayServicesClient.ConnectionCallbacks</code>, <code>GooglePlayServicesClient.OnConnectionFailedListener</code>, and <code>LocationListener</code>.</p>

<pre><code>public class LocationActivity extends Activity implements 
GooglePlayServicesClient.ConnectionCallbacks, GooglePlayServicesClient.OnConnectionFailedListener, LocationListener {}
</code></pre>

<p>Then, set up a <code>LocationClient</code>in the <code>onCreate()</code> method of your <code>Activity</code>:</p>

<pre><code>public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);

    mLocationClient = new LocationClient(this, this, this);

    mLocationRequest = LocationRequest.create();
    mLocationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY);
    mLocationRequest.setInterval(UPDATE_INTERVAL);
    mLocationRequest.setFastestInterval(FASTEST_INTERVAL);
}
</code></pre>

<p>Add the required methods to your <code>Activity</code>; <code>onConnected()</code> is the method that is called when the <code>LocationClient</code>connects. <code>onLocationChanged()</code> is where you'll retrieve the most up-to-date location.</p>

<pre><code>@Override
public void onConnectionFailed(ConnectionResult connectionResult) {
    Log.w(TAG, ""Location client connection failed"");
}

@Override
public void onConnected(Bundle dataBundle) {
    Log.d(TAG, ""Location client connected"");
    mLocationClient.requestLocationUpdates(mLocationRequest, this); 
}

@Override
public void onDisconnected() {
    Log.d(TAG, ""Location client disconnected"");
}

@Override
public void onLocationChanged(Location location) {
    if (location != null) {
        Log.d(TAG, ""Updated Location: "" + Double.toString(location.getLatitude()) + "","" + Double.toString(location.getLongitude()));
    } else {
        Log.d(TAG, ""Updated location NULL"");
    } 
}     
</code></pre>

<p>Be sure to connect/disconnect the <code>LocationClient</code> so it's only using extra battery when absolutely necessary and so the GPS doesn't run indefinitely. The <code>LocationClient</code> must be connected in order to get data from it. </p>

<pre><code>public void onResume() {
    super.onResume();
    mLocationClient.connect();
}

public void onStop() {
    if (mLocationClient.isConnected()) {
        mLocationClient.removeLocationUpdates(this);
    }
    mLocationClient.disconnect();
    super.onStop();
}
</code></pre>

<p>Get the user's location. First try using the <code>LocationClient</code>; if that fails, fall back to the <code>LocationManager</code>.</p>

<pre><code>public Location getLocation() {
    if (mLocationClient != null &amp;&amp; mLocationClient.isConnected()) {
        return mLocationClient.getLastLocation();
    } else {
        LocationManager locationManager = (LocationManager) this.getSystemService(Context.LOCATION_SERVICE);
        if (locationManager != null) {
            Location lastKnownLocationGPS = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);
            if (lastKnownLocationGPS != null) {
                return lastKnownLocationGPS;
            } else {
                return locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);
            }
        } else {
            return null;
        }
    }
}
</code></pre>
"
"3624280","24285057","0","<p>You can save the Values </p>

<pre><code>SharedPreferences sharedPreferences = PreferenceManager
            .getDefaultSharedPreferences(getApplicationContext());

    Editor editor = sharedPreferences.edit();
    Log.i(TAG, ""id "" + id + "" name "" + name + "" email "" + email);
    editor.putInt(""id"", 12);
    editor.putString(""name"",YourName);
    editor.putString(""email"", xxx@xx.com);

    editor.commit();
</code></pre>

<p>You can REmove Particular  Like that</p>

<pre><code> PreferenceManager.getDefaultSharedPreferences(this).edit().remove(""name"").commit();
PreferenceManager.getDefaultSharedPreferences(this).edit().remove(""id"").commit();
</code></pre>

<p>You can Remove All values</p>

<pre><code>PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).edit().clear().commit();
</code></pre>

<p>You can retrive Values</p>

<pre><code>SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);
preferences.getString(""id"", """");
preferences.getString(""name"", """");
preferences.getString(""email"", """");
</code></pre>
"
"5694933","24336742","0","<p>Here is my solution:</p>

<pre><code>public static File getRemovableStorage() {
    String value = System.getenv(""SECONDARY_STORAGE"");
    if (!TextUtils.isEmpty(value)) {
        String[] paths = value.split("":"");
        for (String path : paths) {
            File file = new File(path);
            if (file.isDirectory()) {
                return file;
            }
        }
    }
    return null; // Most likely, a removable micro sdcard doesn't exist
}
</code></pre>
"
"3331527","24355595","6","<p>After reading these answers and <a href=""http://developer.android.com/training/displaying-bitmaps/load-bitmap.html"">android documentation</a> here's the code to resize bitmap without loading it into memory:</p>

<pre><code>public Bitmap getResizedBitmap(int targetW, int targetH,  String imagePath) {

    // Get the dimensions of the bitmap
    BitmapFactory.Options bmOptions = new BitmapFactory.Options();
    //inJustDecodeBounds = true &lt;-- will not load the bitmap into memory
    bmOptions.inJustDecodeBounds = true;
    BitmapFactory.decodeFile(imagePath, bmOptions);
    int photoW = bmOptions.outWidth;
    int photoH = bmOptions.outHeight;

    // Determine how much to scale down the image
    int scaleFactor = Math.min(photoW/targetW, photoH/targetH);

    // Decode the image file into a Bitmap sized to fill the View
    bmOptions.inJustDecodeBounds = false;
    bmOptions.inSampleSize = scaleFactor;
    bmOptions.inPurgeable = true;

    Bitmap bitmap = BitmapFactory.decodeFile(imagePath, bmOptions);
    return(bitmap);
}
</code></pre>
"
"3166501","24385733","3","<p>The following answer is a small improvement based upon qwertzguy's answer. </p>

<pre><code>double density = getResources().getDisplayMetrics().density;
if (density &gt;= 4.0) {
   //""xxxhdpi"";
}
if (density &gt;= 3.0 &amp;&amp; density &lt; 4.0) {
   //xxhdpi
}
if (density &gt;= 2.0) {
   //xhdpi
}
if (density &gt;= 1.5 &amp;&amp; density &lt; 2.0) {
   //hdpi
}
if (density &gt;= 1.0 &amp;&amp; density &lt; 1.5) {
   //mdpi
}
</code></pre>
"
"6343166","24396701","2","<p>Just to spell out something explicitly:</p>

<p>The main thread is basically the UI thread.</p>

<p>So saying that you cannot do networking operations in the main thread means you cannot do networking operations in the UI thread, which means <em>you cannot do networking operations in a <code>*runOnUiThread(new Runnable() { ... }*</code> block</em> inside some other thread, either.</p>

<p>(I just had a long head-scratching moment trying to figure out why I was getting that error somewhere other than my main thread.  This was why; this thread helped; and hopefully this comment will help someone else.)</p>
"
"5357455","24397810","0","<p>I don't like the other solution and I created my own.
With this solution you can't enter more than MAX_BEFORE_POINT digit before the point and the decimals can't be more than MAX_DECIMAL.</p>

<p>You just can't type the digit in excess, no other effects!
In additional if you write ""."" it types ""0.""</p>

<ol>
<li><p>Set the EditText in the layout to:</p>

<p>android:inputType=""numberDecimal""</p></li>
<li><p>Add the Listener in your onCreate. If you want modify the number of digits before and after the point edit the call to PerfectDecimal(str, NUMBER_BEFORE_POINT, NUMBER_DECIMALS), here is set to 3 and 2 </p>

<pre><code>EditText targetEditText = (EditText)findViewById(R.id.targetEditTextLayoutId);

targetEditText.addTextChangedListener(new TextWatcher() {
  public void onTextChanged(CharSequence arg0, int arg1, int arg2, int arg3) {}

  public void beforeTextChanged(CharSequence arg0, int arg1, int arg2, int arg3) {}

  public void afterTextChanged(Editable arg0) {
    String str = targetEditText.getText().toString();
    if (str.isEmpty()) return;
    String str2 = PerfectDecimal(str, 3, 2);

    if (!str2.equals(str)) {
        targetEditText.setText(str2);
        int pos = targetEditText.getText().length();
        targetEditText.setSelection(pos);
    }
  }
});
</code></pre></li>
<li><p>Include this Funcion: </p>

<pre><code>public String PerfectDecimal(String str, int MAX_BEFORE_POINT, int MAX_DECIMAL){
  if(str.charAt(0) == '.') str = ""0""+str;
  int max = str.length();

  String rFinal = """";
  boolean after = false;
  int i = 0, up = 0, decimal = 0; char t;
  while(i &lt; max){
    t = str.charAt(i);
    if(t != '.' &amp;&amp; after == false){
        up++;
        if(up &gt; MAX_BEFORE_POINT) return rFinal;
    }else if(t == '.'){
        after = true;
    }else{
        decimal++;
        if(decimal &gt; MAX_DECIMAL)
            return rFinal;
    }
    rFinal = rFinal + t;
    i++;
  }return rFinal;
}
</code></pre></li>
</ol>

<p>And it's done!</p>
"
"7723964","24410559","0","<p>Replacing fragments in a viewpager is quite involved but is very possible and can look super slick. First, you need to let the viewpager itself handle the removing and adding of the fragments. What is happening is when you replace the fragment inside of SearchFragment, your viewpager retains its fragment views. So you end up with a blank page because the SearchFragment gets removed when you try to replace it.</p>

<p>The solution is to create a listener inside of your viewpager that will handle changes made outside of it so first add this code to the bottom of your adapter.</p>

<pre><code>public interface nextFragmentListener {
    public void fragment0Changed(String newFragmentIdentification);
}
</code></pre>

<p>Then you need to create a private class in your viewpager that becomes a listener for when you want to change your fragment. For example you could add something like this. Notice that it implements the interface that was just created. So whenever you call this method, it will run the code inside of the class below.</p>

<pre><code>private final class fragmentChangeListener implements nextFragmentListener {


    @Override
    public void fragment0Changed(String fragment) {
        //I will explain the purpose of fragment0 in a moment
        fragment0 = fragment;
        manager.beginTransaction().remove(fragAt0).commit();

        switch (fragment){
            case ""searchFragment"":
                fragAt0 = SearchFragment.newInstance(listener);
                break;
            case ""searchResultFragment"":
                fragAt0 = Fragment_Table.newInstance(listener);
                break;
        }

        notifyDataSetChanged();
    }
</code></pre>

<p>There are two main things to point out here: </p>

<ol>
<li>fragAt0 is a ""flexible"" fragment. It can take on whatever fragment type you give it. This allows it to become your best friend in changing the fragment at position 0 to the fragment you desire.</li>
<li><p>Notice the listeners that are placed in the 'newInstance(listener)constructor.  These are how you will callfragment0Changed(String newFragmentIdentification)`. The following code shows how you create the listener inside of your fragment.</p>

<p>static nextFragmentListener listenerSearch;</p>

<pre><code>    public static Fragment_Journals newInstance(nextFragmentListener listener){
            listenerSearch = listener;
            return new Fragment_Journals();
        }
</code></pre></li>
</ol>

<p>You could call the change inside of your <code>onPostExecute</code></p>

<pre><code>private class SearchAsyncTask extends AsyncTask&lt;Void, Void, Void&gt;{

    protected Void doInBackground(Void... params){
        .
        .//some more operation
        .
    }
    protected void onPostExecute(Void param){

        listenerSearch.fragment0Changed(""searchResultFragment"");
    }

}
</code></pre>

<p>This would trigger the code inside of your viewpager to switch your fragment at position zero fragAt0 to become a new searchResultFragment. There are two more small pieces you would need to add to the viewpager before it became functional.</p>

<p>One would be in the getItem override method of the viewpager.</p>

<pre><code>@Override
public Fragment getItem(int index) {

    switch (index) {
    case 0:
        //this is where it will ""remember"" which fragment you have just selected. the key is to set a static String fragment at the top of your page that will hold the position that you had just selected.  

        if(fragAt0 == null){

            switch(fragment0){
            case ""searchFragment"":
                fragAt0 = FragmentSearch.newInstance(listener);
                break;
            case ""searchResultsFragment"":
                fragAt0 = FragmentSearchResults.newInstance(listener);
                break;
            }
        }
        return fragAt0;
    case 1:
        // Games fragment activity
        return new CreateFragment();

    }
</code></pre>

<p>Now without this final piece you would still get a blank page. Kind of lame, but it is an essential part of the viewPager. You must override the getItemPosition method of the viewpager. Ordinarily this method will return POSITION_UNCHANGED which tells the viewpager to keep everything the same and so getItem will never get called to place the new fragment on the page. Here's an example of something you could do</p>

<pre><code>public int getItemPosition(Object object)
{
    //object is the current fragment displayed at position 0.  
    if(object instanceof SearchFragment &amp;&amp; fragAt0 instanceof SearchResultFragment){
        return POSITION_NONE;
    //this condition is for when you press back
    }else if{(object instanceof SearchResultFragment &amp;&amp; fragAt0 instanceof SearchFragment){
        return POSITION_NONE;
    }
        return POSITION_UNCHANGED
}
</code></pre>

<p>Like I said, the code gets very involved, but you basically have to create a custom adapter for your situation. The things I mentioned will make it possible to change the fragment. It will likely take a long time to soak everything in so I would be patient, but it will all make sense. It is totally worth taking the time because it can make a really slick looking application.</p>

<p>Here's the nugget for handling the back button. You put this inside your MainActivity</p>

<pre><code> public void onBackPressed() {
    if(mViewPager.getCurrentItem() == 0) {
        if(pagerAdapter.getItem(0) instanceof FragmentSearchResults){
            ((Fragment_Table) pagerAdapter.getItem(0)).backPressed();
        }else if (pagerAdapter.getItem(0) instanceof FragmentSearch) {
            finish();
        }
    }
</code></pre>

<p>You will need to create a method called backPressed() inside of FragmentSearchResults that calls fragment0changed. This in tandem with the code I showed before will handle pressing the back button. Good luck with your code to change the viewpager. It takes a lot of work, and as far as I have found, there aren't any quick adaptations. Like I said, you are basically creating a custom viewpager adapter, and letting it handle all of the necessary changes using listeners</p>
"
"5105354","24445970","-1","<p><code>showSoftInput</code> was not working for me at all.</p>

<p>I figured I needed to set the input mode: (here in the Activity component in the manifest)</p>

<pre><code>android:windowSoftInputMode=""stateVisible"" 
</code></pre>
"
"6290531","24482847","2","<p>I used <code>TextUtils</code> for this:</p>

<pre><code>if (TextUtils.isEmpty(UsernameInfo.getText())) {
    validationError = true;
    validationErrorMessage.append(getResources().getString(R.string.error_blank_username));
}
</code></pre>
"
"3145089","24549771","0","<p>Even though the answer is already given here. I just wanted to share this to the world incase the come across such scenario.</p>

<p>My requirement was that i needed to get a user's current location within 30 to 35 seconds at max so here is the solution i made following <a href=""http://stackoverflow.com/a/15757944/1118886"">Nirav Ranpara's Answer</a>.</p>

<p><strong>1.</strong> I made <strong>MyLocationManager.java</strong> class which handles all the GPS and Network stuff</p>

<pre><code>import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

import com.app.callbacks.OnLocationDetectectionListener;

import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.provider.Settings;
import android.util.Log;
import android.widget.Toast;

public class MyLocationManager {
    /** The minimum distance to GPS change Updates in meters **/
    private final long MIN_DISTANCE_CHANGE_FOR_UPDATES_FOR_GPS = 2; // 2
                                                                    // meters
    /** The minimum time between GPS updates in milliseconds **/
    private final long MIN_TIME_BW_UPDATES_OF_GPS = 1000 * 5 * 1; // 5
                                                                    // seconds

    /** The minimum distance to NETWORK change Updates in meters **/
    private final long MIN_DISTANCE_CHANGE_FOR_UPDATES_FOR_NETWORK = 5; // 5
                                                                        // meters
    /** The minimum time between NETWORK updates in milliseconds **/
    private final long MIN_TIME_BW_UPDATES_OF_NETWORK = 1000 * 10 * 1; // 10
                                                                        // seconds

    /**
     * Lets just say i don't trust the first location that the is found. This is
     * to avoid that
     **/

    private int NetworkLocationCount = 0, GPSLocationCount = 0;
    private boolean isGPSEnabled;
    private boolean isNetworkEnabled;
    /**
     * Don't do anything if location is being updated by Network or by GPS
     */
    private boolean isLocationManagerBusy;
    private LocationManager locationManager;
    private Location currentLocation;
    private Context mContext;
    private OnLocationDetectectionListener mListener;

    public MyLocationManager(Context mContext,
            OnLocationDetectectionListener mListener) {
        this.mContext = mContext;
        this.mListener = mListener;
    }

    /**
     * Start the location manager to find my location
     */
    public void startLocating() {
        try {
            locationManager = (LocationManager) mContext
                    .getSystemService(Context.LOCATION_SERVICE);

            // Getting GPS status
            isGPSEnabled = locationManager
                    .isProviderEnabled(LocationManager.GPS_PROVIDER);

            // Getting network status
            isNetworkEnabled = locationManager
                    .isProviderEnabled(LocationManager.NETWORK_PROVIDER);

            if (!isGPSEnabled &amp;&amp; !isNetworkEnabled) {
                // No network provider is enabled
                showSettingsAlertDialog();
            } else {
                // If GPS enabled, get latitude/longitude using GPS Services
                if (isGPSEnabled) {
                    locationManager.requestLocationUpdates(
                            LocationManager.GPS_PROVIDER,
                            MIN_TIME_BW_UPDATES_OF_GPS,
                            MIN_DISTANCE_CHANGE_FOR_UPDATES_FOR_GPS,
                            gpsLocationListener);

                }
                if (isNetworkEnabled) {
                    locationManager.requestLocationUpdates(
                            LocationManager.NETWORK_PROVIDER,
                            MIN_TIME_BW_UPDATES_OF_NETWORK,
                            MIN_DISTANCE_CHANGE_FOR_UPDATES_FOR_NETWORK,
                            networkLocationListener);

                }
            }
            /**
             * My 30 seconds plan to get myself a location
             */
            ScheduledExecutorService se = Executors
                    .newSingleThreadScheduledExecutor();
            se.schedule(new Runnable() {

                @Override
                public void run() {
                    if (currentLocation == null) {
                        if (isGPSEnabled) {
                            currentLocation = locationManager
                                    .getLastKnownLocation(LocationManager.GPS_PROVIDER);
                        } else if (isNetworkEnabled) {
                            currentLocation = locationManager
                                    .getLastKnownLocation(LocationManager.NETWORK_PROVIDER);

                        }
                        if (currentLocation != null &amp;&amp; mListener != null) {
                            locationManager.removeUpdates(gpsLocationListener);
                            locationManager
                                    .removeUpdates(networkLocationListener);
                            mListener.onLocationDetected(currentLocation);
                        }
                    }
                }
            }, 30, TimeUnit.SECONDS);

        } catch (Exception e) {
            Log.e(""Error Fetching Location"", e.getMessage());
            Toast.makeText(mContext,
                    ""Error Fetching Location"" + e.getMessage(),
                    Toast.LENGTH_SHORT).show();
        }
    }

    /**
     * Handle GPS location listener callbacks
     */
    private LocationListener gpsLocationListener = new LocationListener() {

        @Override
        public void onStatusChanged(String provider, int status, Bundle extras) {
            // TODO Auto-generated method stub

        }

        @Override
        public void onProviderEnabled(String provider) {
            // TODO Auto-generated method stub

        }

        @Override
        public void onProviderDisabled(String provider) {
            // TODO Auto-generated method stub

        }

        @Override
        public void onLocationChanged(Location location) {

            if (GPSLocationCount != 0 &amp;&amp; !isLocationManagerBusy) {
                Log.d(""GPS Enabled"", ""GPS Enabled"");
                isLocationManagerBusy = true;
                currentLocation = location;
                locationManager.removeUpdates(gpsLocationListener);
                locationManager.removeUpdates(networkLocationListener);
                isLocationManagerBusy = false;
                if (currentLocation != null &amp;&amp; mListener != null) {
                    mListener.onLocationDetected(currentLocation);
                }
            }
            GPSLocationCount++;
        }
    };
    /**
     * Handle Network location listener callbacks
     */
    private LocationListener networkLocationListener = new LocationListener() {

        @Override
        public void onStatusChanged(String provider, int status, Bundle extras) {
            // TODO Auto-generated method stub

        }

        @Override
        public void onProviderEnabled(String provider) {
            // TODO Auto-generated method stub

        }

        @Override
        public void onProviderDisabled(String provider) {
            // TODO Auto-generated method stub

        }

        @Override
        public void onLocationChanged(Location location) {
            if (NetworkLocationCount != 0 &amp;&amp; !isLocationManagerBusy) {
                Log.d(""Network"", ""Network"");
                isLocationManagerBusy = true;
                currentLocation = location;
                locationManager.removeUpdates(gpsLocationListener);
                locationManager.removeUpdates(networkLocationListener);
                isLocationManagerBusy = false;
                if (currentLocation != null &amp;&amp; mListener != null) {
                    mListener.onLocationDetected(currentLocation);
                }
            }
            NetworkLocationCount++;
        }
    };

    /**
     * Function to show settings alert dialog. On pressing the Settings button
     * it will launch Settings Options.
     * */
    public void showSettingsAlertDialog() {
        AlertDialog.Builder alertDialog = new AlertDialog.Builder(mContext);

        // Setting Dialog Title
        alertDialog.setTitle(""GPS is settings"");

        // Setting Dialog Message
        alertDialog
                .setMessage(""GPS is not enabled. Do you want to go to settings menu?"");

        // On pressing the Settings button.
        alertDialog.setPositiveButton(""Settings"",
                new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        Intent intent = new Intent(
                                Settings.ACTION_LOCATION_SOURCE_SETTINGS);
                        mContext.startActivity(intent);
                    }
                });

        // On pressing the cancel button
        alertDialog.setNegativeButton(""Cancel"",
                new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        dialog.cancel();
                    }
                });

        // Showing Alert Message
        alertDialog.show();
    }
}
</code></pre>

<p><strong>2.</strong> I made an Interface (callback) <strong>OnLocationDetectectionListener.java</strong> in order to communicate the results back to the calling fragment or activity </p>

<pre><code>import android.location.Location;

public interface OnLocationDetectectionListener {
    public void onLocationDetected(Location mLocation);
}
</code></pre>

<p><strong>3.</strong> Then i made an <strong>MainAppActivty.java</strong> Activity that implements <code>OnLocationDetectectionListener</code> interface and here is how i receive my location in it</p>

<pre><code>public class MainAppActivty extends Activity implements
        OnLocationDetectectionListener {

    private Location currentLocation;
    private MyLocationManager mLocationManager;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        setContentView(R.layout.activity_home);
        super.onCreate(savedInstanceState);
            mLocationManager = new MyLocationManager(this, this);
            mLocationManager.startLocating();
    }





    @Override
    public void onLocationDetected(Location mLocation) {
        //Your new Location is received here
        currentLocation = mLocation;
    }
</code></pre>

<p><strong>4.</strong> Add the following permissions to your manifest file</p>

<pre><code>&lt;uses-permission android:name=""android.permission.INTERNET"" /&gt;
 &lt;uses-permission android:name=""android.permission.ACCESS_FINE_LOCATION"" /&gt;
</code></pre>

<p>Hope this is helpful to others :)</p>
"
"2150078","24558553","0","<p>Here's my solution, and it works. Instead of looking for pixel size just check that the height of the content view has changed or not:</p>

<pre><code>// Scroll to the latest comment whenever the keyboard is shown
commentsContent.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {

        private int oldHeight;

        @Override
        public void onGlobalLayout() {
            int newHeight = commentsContent.getMeasuredHeight();
            if (newHeight &lt; oldHeight) {
                // Check for the keyboard showing in case the height difference
                // is a result of orientation change
                if (isSoftKeyboardShowing(CommentsActivity.this)) {
                    // Keyboard is showing so scroll to the latest comment
                    scrollToLatestComment();
                }
            }
            oldHeight = newHeight;
        }

    });


public static boolean isSoftKeyboardShowing(Activity activity) {
    InputMethodManager inputMethodManager = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
    return inputMethodManager.isActive();
}
</code></pre>
"
"5832368","24609551","-2","<p>Following code worked for me absolutely as expected, regardless of the screensize and density of the devices.</p>

<pre><code>        String userAgent = new WebView(YourActivity.this).getSettings().getUserAgentString();
    if (userAgent.contains(""Mobile"")) {
        // It is a Mobile
    } else {
        // It is a Tablet
    }
</code></pre>
"
"6290531","24624944","4","<p>Other answers are correct but do it in a short way like</p>

<pre><code>if(editText.getText().toString().isEmpty()) {
     // editText is empty
} else {
     // editText is not empty
}
</code></pre>
"
"5357455","24632346","0","<p>I made some fixes for @Pinhassi solution. It handles some cases:</p>

<p>1.you can move cursor anywhere</p>

<p>2.minus sign handling</p>

<p>3.digitsbefore = 2  and digitsafter = 4 and you enter 12.4545. Then if you want to remove ""."", it will not allow.</p>

<pre><code>public class DecimalDigitsInputFilter implements InputFilter {
    private int mDigitsBeforeZero;
    private int mDigitsAfterZero;
    private Pattern mPattern;

    private static final int DIGITS_BEFORE_ZERO_DEFAULT = 100;
    private static final int DIGITS_AFTER_ZERO_DEFAULT = 100;

    public DecimalDigitsInputFilter(Integer digitsBeforeZero, Integer digitsAfterZero) {
    this.mDigitsBeforeZero = (digitsBeforeZero != null ? digitsBeforeZero : DIGITS_BEFORE_ZERO_DEFAULT);
    this.mDigitsAfterZero = (digitsAfterZero != null ? digitsAfterZero : DIGITS_AFTER_ZERO_DEFAULT);
    mPattern = Pattern.compile(""-?[0-9]{0,"" + (mDigitsBeforeZero) + ""}+((\\.[0-9]{0,"" + (mDigitsAfterZero)
        + ""})?)||(\\.)?"");
    }

    @Override
    public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
    String replacement = source.subSequence(start, end).toString();
    String newVal = dest.subSequence(0, dstart).toString() + replacement
        + dest.subSequence(dend, dest.length()).toString();
    Matcher matcher = mPattern.matcher(newVal);
    if (matcher.matches())
        return null;

    if (TextUtils.isEmpty(source))
        return dest.subSequence(dstart, dend);
    else
        return """";
    }
}
</code></pre>
"
"3331527","24637101","-1","<p>Here is the code I use which doesn't have any issues decoding large images in memory on Android.  I have been able to decode images larger then 20MB as long as my input parameters are around 1024x1024. You can save the returned bitmap to another file.  Below this method is another method which I also use to scale images to a new bitmap.  Feel free to use this code as you wish.</p>

<pre><code>/*****************************************************************************
 * public decode - decode the image into a Bitmap
 * 
 * @param xyDimension
 *            - The max XY Dimension before the image is scaled down - XY =
 *            1080x1080 and Image = 2000x2000 image will be scaled down to a
 *            value equal or less then set value.
 * @param bitmapConfig
 *            - Bitmap.Config Valid values = ( Bitmap.Config.ARGB_4444,
 *            Bitmap.Config.RGB_565, Bitmap.Config.ARGB_8888 )
 * 
 * @return Bitmap - Image - a value of ""null"" if there is an issue decoding
 *         image dimension
 * 
 * @throws FileNotFoundException
 *             - If the image has been removed while this operation is
 *             taking place
 */
public Bitmap decode( int xyDimension, Bitmap.Config bitmapConfig ) throws FileNotFoundException
{
    // The Bitmap to return given a Uri to a file
    Bitmap bitmap = null;
    File file = null;
    FileInputStream fis = null;
    InputStream in = null;

    // Try to decode the Uri
    try
    {
        // Initialize scale to no real scaling factor
        double scale = 1;

        // Get FileInputStream to get a FileDescriptor
        file = new File( this.imageUri.getPath() );

        fis = new FileInputStream( file );
        FileDescriptor fd = fis.getFD();

        // Get a BitmapFactory Options object
        BitmapFactory.Options o = new BitmapFactory.Options();

        // Decode only the image size
        o.inJustDecodeBounds = true;
        o.inPreferredConfig = bitmapConfig;

        // Decode to get Width &amp; Height of image only
        BitmapFactory.decodeFileDescriptor( fd, null, o );
        BitmapFactory.decodeStream( null );

        if( o.outHeight &gt; xyDimension || o.outWidth &gt; xyDimension )
        {
            // Change the scale if the image is larger then desired image
            // max size
            scale = Math.pow( 2, (int) Math.round( Math.log( xyDimension / (double) Math.max( o.outHeight, o.outWidth ) ) / Math.log( 0.5 ) ) );
        }

        // Decode with inSampleSize scale will either be 1 or calculated value
        o.inJustDecodeBounds = false;
        o.inSampleSize = (int) scale;

        // Decode the Uri for real with the inSampleSize
        in = new BufferedInputStream( fis );
        bitmap = BitmapFactory.decodeStream( in, null, o );
    }
    catch( OutOfMemoryError e )
    {
        Log.e( DEBUG_TAG, ""decode : OutOfMemoryError"" );
        e.printStackTrace();
    }
    catch( NullPointerException e )
    {
        Log.e( DEBUG_TAG, ""decode : NullPointerException"" );
        e.printStackTrace();
    }
    catch( RuntimeException e )
    {
        Log.e( DEBUG_TAG, ""decode : RuntimeException"" );
        e.printStackTrace();
    }
    catch( FileNotFoundException e )
    {
        Log.e( DEBUG_TAG, ""decode : FileNotFoundException"" );
        e.printStackTrace();
    }
    catch( IOException e )
    {
        Log.e( DEBUG_TAG, ""decode : IOException"" );
        e.printStackTrace();
    }

    // Save memory
    file = null;
    fis = null;
    in = null;

    return bitmap;

} // decode
</code></pre>

<p>NOTE: Methods have nothing to do with each other except createScaledBitmap calls decode method above. Note width and height can change from original image.</p>

<pre><code>/*****************************************************************************
 * public createScaledBitmap - Creates a new bitmap, scaled from an existing
 * bitmap.
 * 
 * @param dstWidth
 *            - Scale the width to this dimension
 * @param dstHeight
 *            - Scale the height to this dimension
 * @param xyDimension
 *            - The max XY Dimension before the original image is scaled
 *            down - XY = 1080x1080 and Image = 2000x2000 image will be
 *            scaled down to a value equal or less then set value.
 * @param bitmapConfig
 *            - Bitmap.Config Valid values = ( Bitmap.Config.ARGB_4444,
 *            Bitmap.Config.RGB_565, Bitmap.Config.ARGB_8888 )
 * 
 * @return Bitmap - Image scaled - a value of ""null"" if there is an issue
 * 
 */
public Bitmap createScaledBitmap( int dstWidth, int dstHeight, int xyDimension, Bitmap.Config bitmapConfig )
{
    Bitmap scaledBitmap = null;

    try
    {
        Bitmap bitmap = this.decode( xyDimension, bitmapConfig );

        // Create an empty Bitmap which will contain the new scaled bitmap
        // This scaled bitmap should be the size we want to scale the
        // original bitmap too
        scaledBitmap = Bitmap.createBitmap( dstWidth, dstHeight, bitmapConfig );

        float ratioX = dstWidth / (float) bitmap.getWidth();
        float ratioY = dstHeight / (float) bitmap.getHeight();
        float middleX = dstWidth / 2.0f;
        float middleY = dstHeight / 2.0f;

        // Used to for scaling the image
        Matrix scaleMatrix = new Matrix();
        scaleMatrix.setScale( ratioX, ratioY, middleX, middleY );

        // Used to do the work of scaling
        Canvas canvas = new Canvas( scaledBitmap );
        canvas.setMatrix( scaleMatrix );
        canvas.drawBitmap( bitmap, middleX - bitmap.getWidth() / 2, middleY - bitmap.getHeight() / 2, new Paint( Paint.FILTER_BITMAP_FLAG ) );
    }
    catch( IllegalArgumentException e )
    {
        Log.e( DEBUG_TAG, ""createScaledBitmap : IllegalArgumentException"" );
        e.printStackTrace();
    }
    catch( NullPointerException e )
    {
        Log.e( DEBUG_TAG, ""createScaledBitmap : NullPointerException"" );
        e.printStackTrace();
    }
    catch( FileNotFoundException e )
    {
        Log.e( DEBUG_TAG, ""createScaledBitmap : FileNotFoundException"" );
        e.printStackTrace();
    }

    return scaledBitmap;
} // End createScaledBitmap
</code></pre>
"
"3495890","24645448","1","<p>I converted @DougW's <code>Utility</code> into C# (used in Xamarin). The following works fine for fixed-height items in the list, and is going to be mostly fine, or at least a good start, if only some of the items are a bit bigger than the standard item.</p>

<pre><code>// You will need to put this Utility class into a code file including various
// libraries, I found that I needed at least System, Linq, Android.Views and 
// Android.Widget.
using System;
using System.Linq;
using Android.Views;
using Android.Widget;

namespace UtilityNamespace  // whatever you like, obviously!
{
    public class Utility
    {
        public static void setListViewHeightBasedOnChildren (ListView listView)
        {
            if (listView.Adapter == null) {
                // pre-condition
                return;
            }

            int totalHeight = listView.PaddingTop + listView.PaddingBottom;
            for (int i = 0; i &lt; listView.Count; i++) {
                View listItem = listView.Adapter.GetView (i, null, listView);
                if (listItem.GetType () == typeof(ViewGroup)) {
                    listItem.LayoutParameters = new LinearLayout.LayoutParams (ViewGroup.LayoutParams.MatchParent, ViewGroup.LayoutParams.WrapContent);
                }
                listItem.Measure (0, 0);
                totalHeight += listItem.MeasuredHeight;
            }

            listView.LayoutParameters.Height = totalHeight + (listView.DividerHeight * (listView.Count - 1));
        }
    }
}
</code></pre>

<p>Thanks @DougW, this got me out of a tight spot when I had to work with OtherPeople'sCode. :-)</p>
"
"6070805","24649791","0","<pre><code>    EditText textView = new EditText(activity);
    ...
    textView.setOnEditorActionListener(new TextView.OnEditorActionListener() {
        @Override
        public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
            if(KeyEvent.KEYCODE_ENTER == keyEvent.getKeyCode()) {
                return false;
            }
            ....... 

        }
    });
</code></pre>
"
"3624280","24658426","0","<p>If you are making a large application with other developers in your team and intend to have everything well organized without scattered code or different SharedPreferences instances, you may do something like this:</p>

<pre><code>//SharedPreferences manager class
public class SharedPrefs {

    //SharedPreferences file name
    private static String SHARED_PREFS_FILE_NAME = ""my_app_shared_prefs"";

    //here you can centralize all your shared prefs keys
    public static String KEY_MY_SHARED_BOOLEAN = ""my_shared_boolean"";
    public static String KEY_MY_SHARED_FOO = ""my_shared_foo"";

    //get the SharedPreferences object instance
    //create SharedPreferences file if not present


    private static SharedPreferences getPrefs(Context context) {
        return context.getSharedPreferences(SHARED_PREFS_FILE_NAME, Context.MODE_PRIVATE);
    }

    //Save Booleans
    public static void savePref(Context context, String key, boolean value) {
        getPrefs(context).edit().putBoolean(key, value).commit();       
    }

    //Get Booleans
    public static boolean getBoolean(Context context, String key) {
        return getPrefs(context).getBoolean(key, false);
    }

    //Get Booleans if not found return a predefined default value
    public static boolean getBoolean(Context context, String key, boolean defaultValue) {
        return getPrefs(context).getBoolean(key, defaultValue);
    }

    //Strings
    public static void save(Context context, String key, String value) {
        getPrefs(context).edit().putString(key, value).commit();
    }

    public static String getString(Context context, String key) {
        return getPrefs(context).getString(key, """");
    }

    public static String getString(Context context, String key, String defaultValue) {
        return getPrefs(context).getString(key, defaultValue);
    }

    //Integers
    public static void save(Context context, String key, int value) {
        getPrefs(context).edit().putInt(key, value).commit();
    }

    public static int getInt(Context context, String key) {
        return getPrefs(context).getInt(key, 0);
    }

    public static int getInt(Context context, String key, int defaultValue) {
        return getPrefs(context).getInt(key, defaultValue);
    }

    //Floats
    public static void save(Context context, String key, float value) {
        getPrefs(context).edit().putFloat(key, value).commit();
    }

    public static float getFloat(Context context, String key) {
        return getPrefs(context).getFloat(key, 0);
    }

    public static float getFloat(Context context, String key, float defaultValue) {
        return getPrefs(context).getFloat(key, defaultValue);
    }

    //Longs
    public static void save(Context context, String key, long value) {
        getPrefs(context).edit().putLong(key, value).commit();
    }

    public static long getLong(Context context, String key) {
        return getPrefs(context).getLong(key, 0);
    }

    public static long getLong(Context context, String key, long defaultValue) {
        return getPrefs(context).getLong(key, defaultValue);
    }

    //StringSets
    public static void save(Context context, String key, Set&lt;String&gt; value) {
        getPrefs(context).edit().putStringSet(key, value).commit();
    }

    public static Set&lt;String&gt; getStringSet(Context context, String key) {
        return getPrefs(context).getStringSet(key, null);
    }

    public static Set&lt;String&gt; getStringSet(Context context, String key, Set&lt;String&gt; defaultValue) {
        return getPrefs(context).getStringSet(key, defaultValue);
    }
}
</code></pre>

<p>In your activity you may save SharedPreferences this way</p>

<pre><code>//saving a boolean into prefs
SharedPrefs.savePref(this, SharedPrefs.KEY_MY_SHARED_BOOLEAN, booleanVar);
</code></pre>

<p>and you may retrieve your SharedPreferences this way</p>

<pre><code>//getting a boolean from prefs
booleanVar = SharedPrefs.getBoolean(this, SharedPrefs.KEY_MY_SHARED_BOOLEAN);
</code></pre>
"
"4946295","24675760","0","<p>I created version in which you don't need to specify layout height, hence it's a lot easier and cleaner to use. The solution is to get the height in the first frame of the animation (it's available at that moment, at least during my tests). This way you can provide a View with an arbitrary height and bottom margin.</p>

<p>There's also one little hack in the constructor - the bottom margin is set to -10000 so that the view stays hidden before the transformation (prevents flicker).</p>

<pre><code>public class ExpandAnimation extends Animation {


    private View mAnimatedView;
    private ViewGroup.MarginLayoutParams mViewLayoutParams;
    private int mMarginStart, mMarginEnd;

    public ExpandAnimation(View view) {
        mAnimatedView = view;
        mViewLayoutParams = (ViewGroup.MarginLayoutParams) view.getLayoutParams();
        mMarginEnd = mViewLayoutParams.bottomMargin;
        mMarginStart = -10000; //hide before viewing by settings very high negative bottom margin (hack, but works nicely)
        mViewLayoutParams.bottomMargin = mMarginStart;
        mAnimatedView.setLayoutParams(mViewLayoutParams);
    }

    @Override
    protected void applyTransformation(float interpolatedTime, Transformation t) {
        super.applyTransformation(interpolatedTime, t);
            //view height is already known when the animation starts
            if(interpolatedTime==0){
                mMarginStart = -mAnimatedView.getHeight();
            }
            mViewLayoutParams.bottomMargin = (int)((mMarginEnd-mMarginStart) * interpolatedTime)+mMarginStart;
            mAnimatedView.setLayoutParams(mViewLayoutParams);
    }
}
</code></pre>
"
"3495890","24710369","4","<p>We could not use two scrolling simulteniuosly.We will have get total length of ListView and expand listview with the total height .Then we can add ListView in ScrollView directly or using LinearLayout because ScrollView have directly one child .
copy  setListViewHeightBasedOnChildren(lv) method in your code and expand listview then you can use listview inside scrollview.
\layout xml file</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
android:layout_width=""match_parent""
android:layout_height=""match_parent""
android:orientation=""vertical"" &gt;
 &lt;ScrollView

        android:layout_width=""fill_parent""
        android:layout_height=""fill_parent""
         android:background=""#1D1D1D""
        android:orientation=""vertical""
        android:scrollbars=""none"" &gt;

        &lt;LinearLayout
            android:layout_width=""fill_parent""
            android:layout_height=""fill_parent""
            android:background=""#1D1D1D""
            android:orientation=""vertical"" &gt;

            &lt;TextView
                android:layout_width=""fill_parent""
                android:layout_height=""40dip""
                android:background=""#333""
                android:gravity=""center_vertical""
                android:paddingLeft=""8dip""
                android:text=""First ListView""
                android:textColor=""#C7C7C7""
                android:textSize=""20sp"" /&gt;

            &lt;ListView
                android:id=""@+id/first_listview""
                android:layout_width=""260dp""
                android:layout_height=""wrap_content""
                android:divider=""#00000000""
               android:listSelector=""#ff0000""
                android:scrollbars=""none"" /&gt;

               &lt;TextView
                android:layout_width=""fill_parent""
                android:layout_height=""40dip""
                android:background=""#333""
                android:gravity=""center_vertical""
                android:paddingLeft=""8dip""
                android:text=""Second ListView""
                android:textColor=""#C7C7C7""
                android:textSize=""20sp"" /&gt;

            &lt;ListView
                android:id=""@+id/secondList""
                android:layout_width=""260dp""
                android:layout_height=""wrap_content""
                android:divider=""#00000000""
                android:listSelector=""#ffcc00""
                android:scrollbars=""none"" /&gt;
  &lt;/LinearLayout&gt;
  &lt;/ScrollView&gt;

   &lt;/LinearLayout&gt;
</code></pre>

<p>onCreate method in Activity class:</p>

<pre><code> import java.util.ArrayList;
  import android.app.Activity;
 import android.os.Bundle;
 import android.view.Menu;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.ArrayAdapter;
 import android.widget.ListAdapter;
  import android.widget.ListView;

   public class MainActivity extends Activity {

   @Override
   protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.listview_inside_scrollview);
    ListView list_first=(ListView) findViewById(R.id.first_listview);
    ListView list_second=(ListView) findViewById(R.id.secondList);
    ArrayList&lt;String&gt; list=new ArrayList&lt;String&gt;();
    for(int x=0;x&lt;30;x++)
    {
        list.add(""Item ""+x);
    }

       ArrayAdapter&lt;String&gt; adapter=new ArrayAdapter&lt;String&gt;(getApplicationContext(), 
          android.R.layout.simple_list_item_1,list);               
      list_first.setAdapter(adapter);

     setListViewHeightBasedOnChildren(list_first);

      list_second.setAdapter(adapter);

    setListViewHeightBasedOnChildren(list_second);
   }



   public static void setListViewHeightBasedOnChildren(ListView listView) {
    ListAdapter listAdapter = listView.getAdapter();
    if (listAdapter == null) {
        // pre-condition
        return;
    }

    int totalHeight = 0;
    for (int i = 0; i &lt; listAdapter.getCount(); i++) {
        View listItem = listAdapter.getView(i, null, listView);
        listItem.measure(0, 0);
        totalHeight += listItem.getMeasuredHeight();
    }

    ViewGroup.LayoutParams params = listView.getLayoutParams();
    params.height = totalHeight
            + (listView.getDividerHeight() * (listAdapter.getCount() - 1));
    listView.setLayoutParams(params);
      }
</code></pre>
"
"6290531","24757832","0","<p>To editText is empty try another this simple way :</p>

<blockquote>
  <p><code>
      String star=editText.getText().toString();
      if(star.equalsIgnoreCase(""""))
      {
      Toast.makeText(getApplicationContext(), ""Please Set start no"", Toast.LENGTH_LONG).show();
      }</code></p>
</blockquote>
"
"6343166","24773389","3","<p>A Good Library :<a href=""http://loopj.com/android-async-http/"" rel=""nofollow"">AsyncHTTPClient</a></p>

<pre><code>AsyncHttpClient client = new AsyncHttpClient();
client.get(""http://www.google.com"", new AsyncHttpResponseHandler() {

    @Override
    public void onStart() {
        // called before request is started
    }

    @Override
    public void onSuccess(int statusCode, Header[] headers, byte[] response) {
        // called when response HTTP status is ""200 OK""
    }

    @Override
    public void onFailure(int statusCode, Header[] headers, byte[] errorResponse, Throwable e) {
        // called when response HTTP status is ""4XX"" (eg. 401, 403, 404)
    }

    @Override
    public void onRetry(int retryNo) {
        // called when request is retried
    }
});
</code></pre>
"
"3916330","24794396","0","<p>All you need to do is simply</p>

<pre><code>webView.getSettings().setLayoutAlgorithm(LayoutAlgorithm.SINGLE_COLUMN);
webView.getSettings().setLoadWithOverviewMode(true);
webView.getSettings().setUseWideViewPort(true);
</code></pre>
"
"2201917","24803887","0","<pre><code>Intent getWebPage = new Intent(Intent.ACTION_VIEW, Uri.parse(MyLink));          
startActivity(getWebPage);
</code></pre>
"
"4617898","24809258","1","<p>Here is my simple way to solve that:</p>

<pre><code>    ImageView iv = (ImageView) findViewById(R.id.imageView);
    iv.setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View arg0) {
            // TODO Auto-generated method stub
            //Agrega porcentajes de cada fraccion de grafica pastel

            Animation animFadein = AnimationUtils.loadAnimation(getApplicationContext(),R.anim.fade_in);

            iv.startAnimation(animFadein); 
        });
</code></pre>

<p>in res/anim/fade_in.xml</p>

<pre><code> &lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
     &lt;set xmlns:android=""http://schemas.android.com/apk/res/android""
             android:fillAfter=""true"" &gt;

&lt;alpha
    android:duration=""100""
    android:fromAlpha=""0.0""
    android:interpolator=""@android:anim/accelerate_interpolator""
    android:toAlpha=""1.0"" /&gt;
 &lt;/set&gt;
</code></pre>
"
"8181828","24809944","0","<p>There are some great answers here, but my code can detect when scrolling stops without having to extend ScrollView class.
every view instance can call getViewTreeObserver(). when Holding this instance of ViewTreeObserver you can add a OnScrollChangedListener using the function addOnScrollChangedListener().</p>

<p>declare the following:</p>

<pre><code>private ScrollView scrollListener;
private volatile long milesec;

private Handler scrollStopDetector;
private Thread scrollcalled = new Thread() {

    @Override
    public void run() { 
        if (System.currentTimeMillis() - milesec &gt; 200) {
            //scroll stopped - put your code here
        }
    }
}; 
</code></pre>

<p>and in your onCreate (or another place) add:</p>

<pre><code>    scrollListener = (ScrollView) findViewById(R.id.scroll);

    scrollListener.getViewTreeObserver().addOnScrollChangedListener(new OnScrollChangedListener() {

        @Override
        public void onScrollChanged() {
            milesec = System.currentTimeMillis();
            scrollStopDetector.postDelayed(scrollcalled, 200);
        }
    });
</code></pre>

<p>you might want to take longer or slower time between this checks, but when scrolling this listner gets called really fast so it will work very fast. </p>
"
"6343166","24864462","2","<p>This Exception occurs due to the any heavy task performed on the main thread.
If that performing task takes too much time.
To avoid this we can handle it using <strong>Threads</strong> or <strong>Executers</strong></p>

<p>Executors.newSingleThreadExecutor().submit(new Runnable() {</p>

<pre><code>        @Override
        public void run() {
            //You can performed your task here.

        }
    });
</code></pre>
"
"2271131","24879369","0","<pre><code>            Calendar c = Calendar.getInstance();

            int seconds = c.get(Calendar.SECOND);
            int minutes = c.get(Calendar.MINUTE);
            int hour = c.get(Calendar.HOUR);
            String time = hour+"":""+minutes+"":""+seconds;


            int day = c.get(Calendar.DAY_OF_MONTH);
            int month = c.get(Calendar.MONTH);
            int year = c.get(Calendar.YEAR);
            String date = day+""/""+month+""/""+year;

            //assuming that you need date and time in separate textview named txt_date and txt_time.

            txt_date.setText(date);
            txt_time.setText(time);
</code></pre>
"
"8181828","24883303","0","<p>My approach is determine scrolling state by a timestamp changed each time the onScrollChanged() is called.
It's very easy to determine when is start and end of scrolling.
You can also change threshold ( I use 100ms ) to fix sensitivity.</p>

<pre><code>public class CustomScrollView extends ScrollView {
    private long lastScrollUpdate = -1;

    private class ScrollStateHandler implements Runnable {

        @Override
        public void run() {
            long currentTime = System.currentTimeMillis();
            if ((currentTime - lastScrollUpdate) &gt; 100) {
                lastScrollUpdate = -1;
                onScrollEnd();
            } else {
                postDelayed(this, 100);
            }
        }
    }

    @Override
    protected void onScrollChanged(int l, int t, int oldl, int oldt) {
        super.onScrollChanged(l, t, oldl, oldt);
        if (lastScrollUpdate == -1) {
            onScrollStart();
            postDelayed(new ScrollStateHandler(), 100);
        }

        lastScrollUpdate = System.currentTimeMillis();
    }

    private void onScrollStart() {
        // do something
    }

    private void onScrollEnd() {
        // do something
    }

}
</code></pre>
"
"2459916","24938889","0","<p>Quite a lot of answers!</p>

<p>I followed this example which a few people have kinda suggested too: <a href=""http://www.techrepublic.com/article/pro-tip-round-corners-on-an-android-imageview-with-this-hack/"" rel=""nofollow"">http://www.techrepublic.com/article/pro-tip-round-corners-on-an-android-imageview-with-this-hack/</a></p>

<p>However, what I needed was a coloured circle, behind a transparent image. For anyone who is interested in doing the same...</p>

<p>1) Set the FrameLayout to the width and height - in my case the size of the image (50dp). <br />
2) Place the ImageView that has the src = ""@drawable/..."", above the ImageView that has the image. Give it an id, in my case I called it iconShape<br />
3) Drawable mask.xml should have a solid colour of #ffffffff
4) If you want to dynamically change the circle colour in your code, do</p>

<pre><code>ImageView iv2 = (ImageView) v.findViewById(R.id.iconShape);
Drawable shape = getResources().getDrawable(R.drawable.mask);
shape.setColorFilter(Color.BLUE, Mode.MULTIPLY);
iv2.setImageDrawable(shape);
</code></pre>
"
"2160619","24962497","0","<p>I combined the solutions by Micah Hainline, Alex Băluț, and Paul Imhoff to create an ellipsizing multiline <code>TextView</code> that also supports <code>Spanned</code> text.</p>

<p>You only need to set <code>android:ellipsize</code> and <code>android:maxLines</code>.</p>

<pre><code>/*
 * Copyright (C) 2011 Micah Hainline
 * Copyright (C) 2012 Triposo
 * Copyright (C) 2013 Paul Imhoff
 * Copyright (C) 2014 Shahin Yousefi
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Canvas;
import android.support.annotation.NonNull;
import android.text.Layout;
import android.text.Layout.Alignment;
import android.text.SpannableStringBuilder;
import android.text.Spanned;
import android.text.StaticLayout;
import android.text.TextUtils;
import android.text.TextUtils.TruncateAt;
import android.util.AttributeSet;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.List;
import java.util.regex.Pattern;

public class EllipsizingTextView extends TextView {
    private static final CharSequence ELLIPSIS = ""\u2026"";
    private static final Pattern DEFAULT_END_PUNCTUATION
            = Pattern.compile(""[\\.!?,;:\u2026]*$"", Pattern.DOTALL);
    private final List&lt;EllipsizeListener&gt; mEllipsizeListeners = new ArrayList&lt;&gt;();
    private EllipsizeStrategy mEllipsizeStrategy;
    private boolean isEllipsized;
    private boolean isStale;
    private boolean programmaticChange;
    private CharSequence mFullText;
    private int mMaxLines;
    private float mLineSpacingMult = 1.0f;
    private float mLineAddVertPad = 0.0f;

    private Pattern mEndPunctPattern;

    public EllipsizingTextView(Context context) {
        this(context, null);
    }


    public EllipsizingTextView(Context context, AttributeSet attrs) {
        this(context, attrs, android.R.attr.textViewStyle);
    }


    public EllipsizingTextView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        TypedArray a = context.obtainStyledAttributes(attrs,
                new int[]{ android.R.attr.maxLines }, defStyle, 0);
        setMaxLines(a.getInt(0, Integer.MAX_VALUE));
        a.recycle();
        setEndPunctuationPattern(DEFAULT_END_PUNCTUATION);
    }

    public void setEndPunctuationPattern(Pattern pattern) {
        mEndPunctPattern = pattern;
    }

    public void addEllipsizeListener(@NonNull EllipsizeListener listener) {
        mEllipsizeListeners.add(listener);
    }

    public void removeEllipsizeListener(EllipsizeListener listener) {
        mEllipsizeListeners.remove(listener);
    }

    public boolean isEllipsized() {
        return isEllipsized;
    }

    @SuppressLint(""Override"")
    public int getMaxLines() {
        return mMaxLines;
    }

    @Override
    public void setMaxLines(int maxLines) {
        super.setMaxLines(maxLines);
        mMaxLines = maxLines;
        isStale = true;
    }

    public boolean ellipsizingLastFullyVisibleLine() {
        return mMaxLines == Integer.MAX_VALUE;
    }

    @Override
    public void setLineSpacing(float add, float mult) {
        mLineAddVertPad = add;
        mLineSpacingMult = mult;
        super.setLineSpacing(add, mult);
    }

    @Override
    public void setText(CharSequence text, BufferType type) {
        if (!programmaticChange) {
            mFullText = text;
            isStale = true;
        }
        super.setText(text, type);
    }

    @Override
    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        super.onSizeChanged(w, h, oldw, oldh);
        if (ellipsizingLastFullyVisibleLine()) isStale = true;
    }

    @Override
    public void setPadding(int left, int top, int right, int bottom) {
        super.setPadding(left, top, right, bottom);
        if (ellipsizingLastFullyVisibleLine()) isStale = true;
    }

    @Override
    protected void onDraw(@NonNull Canvas canvas) {
        if (isStale) resetText();
        super.onDraw(canvas);
    }

    private void resetText() {
        int maxLines = getMaxLines();
        CharSequence workingText = mFullText;
        boolean ellipsized = false;

        if (maxLines != -1) {
            if (mEllipsizeStrategy == null) setEllipsize(null);
            workingText = mEllipsizeStrategy.processText(mFullText);
            ellipsized = !mEllipsizeStrategy.isInLayout(mFullText);
        }

        if (!workingText.equals(getText())) {
            programmaticChange = true;
            try {
                setText(workingText);
            } finally {
                programmaticChange = false;
            }
        }

        isStale = false;
        if (ellipsized != isEllipsized) {
            isEllipsized = ellipsized;
            for (EllipsizeListener listener : mEllipsizeListeners) {
                listener.ellipsizeStateChanged(ellipsized);
            }
        }
    }

    @Override
    public void setEllipsize(TruncateAt where) {
        if (where == null) {
            mEllipsizeStrategy = new EllipsizeNoneStrategy();
            return;
        }

        switch (where) {
            case END:
                mEllipsizeStrategy = new EllipsizeEndStrategy();
                break;
            case START:
                mEllipsizeStrategy = new EllipsizeStartStrategy();
                break;
            case MIDDLE:
                mEllipsizeStrategy = new EllipsizeMiddleStrategy();
                break;
            case MARQUEE:
                super.setEllipsize(where);
                isStale = false;
            default:
                mEllipsizeStrategy = new EllipsizeNoneStrategy();
                break;
        }
    }

    public interface EllipsizeListener {
        void ellipsizeStateChanged(boolean ellipsized);
    }

    private abstract class EllipsizeStrategy {
        public CharSequence processText(CharSequence text) {
            return !isInLayout(text) ? createEllipsizedText(text) : text;
        }

        public boolean isInLayout(CharSequence text) {
            Layout layout = createWorkingLayout(text);
            return layout.getLineCount() &lt;= getLinesCount();
        }

        protected Layout createWorkingLayout(CharSequence workingText) {
            return new StaticLayout(workingText, getPaint(),
                    getMeasuredWidth() - getPaddingLeft() - getPaddingRight(),
                    Alignment.ALIGN_NORMAL, mLineSpacingMult,
                    mLineAddVertPad, false /* includepad */);
        }

        protected int getLinesCount() {
            if (ellipsizingLastFullyVisibleLine()) {
                int fullyVisibleLinesCount = getFullyVisibleLinesCount();
                return fullyVisibleLinesCount == -1 ? 1 : fullyVisibleLinesCount;
            } else {
                return mMaxLines;
            }
        }

        protected int getFullyVisibleLinesCount() {
            Layout layout = createWorkingLayout("""");
            int height = getHeight() - getCompoundPaddingTop() - getCompoundPaddingBottom();
            int lineHeight = layout.getLineBottom(0);
            return height / lineHeight;
        }

        protected abstract CharSequence createEllipsizedText(CharSequence fullText);
    }

    private class EllipsizeNoneStrategy extends EllipsizeStrategy {
        @Override
        protected CharSequence createEllipsizedText(CharSequence fullText) {
            return fullText;
        }
    }

    private class EllipsizeEndStrategy extends EllipsizeStrategy {
        @Override
        protected CharSequence createEllipsizedText(CharSequence fullText) {
            Layout layout = createWorkingLayout(fullText);
            int cutOffIndex = layout.getLineEnd(mMaxLines - 1);
            int textLength = fullText.length();
            int cutOffLength = textLength - cutOffIndex;
            if (cutOffLength &lt; ELLIPSIS.length()) cutOffLength = ELLIPSIS.length();
            String workingText = TextUtils.substring(fullText, 0, textLength - cutOffLength).trim();
            String strippedText = stripEndPunctuation(workingText);

            while (!isInLayout(strippedText + ELLIPSIS)) {
                int lastSpace = workingText.lastIndexOf(' ');
                if (lastSpace == -1) break;
                workingText = workingText.substring(0, lastSpace).trim();
                strippedText = stripEndPunctuation(workingText);
            }

            workingText = strippedText + ELLIPSIS;
            SpannableStringBuilder dest = new SpannableStringBuilder(workingText);

            if (fullText instanceof Spanned) {
                TextUtils.copySpansFrom((Spanned) fullText, 0, workingText.length(), null, dest, 0);
            }
            return dest;
        }

        public String stripEndPunctuation(CharSequence workingText) {
            return mEndPunctPattern.matcher(workingText).replaceFirst("""");
        }
    }

    private class EllipsizeStartStrategy extends EllipsizeStrategy {
        @Override
        protected CharSequence createEllipsizedText(CharSequence fullText) {
            Layout layout = createWorkingLayout(fullText);
            int cutOffIndex = layout.getLineEnd(mMaxLines - 1);
            int textLength = fullText.length();
            int cutOffLength = textLength - cutOffIndex;
            if (cutOffLength &lt; ELLIPSIS.length()) cutOffLength = ELLIPSIS.length();
            String workingText = TextUtils.substring(fullText, cutOffLength, textLength).trim();

            while (!isInLayout(ELLIPSIS + workingText)) {
                int firstSpace = workingText.indexOf(' ');
                if (firstSpace == -1) break;
                workingText = workingText.substring(firstSpace, workingText.length()).trim();
            }

            workingText = ELLIPSIS + workingText;
            SpannableStringBuilder dest = new SpannableStringBuilder(workingText);

            if (fullText instanceof Spanned) {
                TextUtils.copySpansFrom((Spanned) fullText, textLength - workingText.length(),
                        textLength, null, dest, 0);
            }
            return dest;
        }
    }

    private class EllipsizeMiddleStrategy extends EllipsizeStrategy {
        @Override
        protected CharSequence createEllipsizedText(CharSequence fullText) {
            Layout layout = createWorkingLayout(fullText);
            int cutOffIndex = layout.getLineEnd(mMaxLines - 1);
            int textLength = fullText.length();
            int cutOffLength = textLength - cutOffIndex;
            if (cutOffLength &lt; ELLIPSIS.length()) cutOffLength = ELLIPSIS.length();
            cutOffLength += cutOffIndex % 2;    // Make it even.
            String firstPart = TextUtils.substring(
                    fullText, 0, textLength / 2 - cutOffLength / 2).trim();
            String secondPart = TextUtils.substring(
                    fullText, textLength / 2 + cutOffLength / 2, textLength).trim();

            while (!isInLayout(firstPart + ELLIPSIS + secondPart)) {
                int lastSpaceFirstPart = firstPart.lastIndexOf(' ');
                int firstSpaceSecondPart = secondPart.indexOf(' ');
                if (lastSpaceFirstPart == -1 || firstSpaceSecondPart == -1) break;
                firstPart = firstPart.substring(0, lastSpaceFirstPart).trim();
                secondPart = secondPart.substring(firstSpaceSecondPart, secondPart.length()).trim();
            }

            SpannableStringBuilder firstDest = new SpannableStringBuilder(firstPart);
            SpannableStringBuilder secondDest = new SpannableStringBuilder(secondPart);

            if (fullText instanceof Spanned) {
                TextUtils.copySpansFrom((Spanned) fullText, 0, firstPart.length(),
                        null, firstDest, 0);
                TextUtils.copySpansFrom((Spanned) fullText, textLength - secondPart.length(),
                        textLength, null, secondDest, 0);
            }
            return TextUtils.concat(firstDest, ELLIPSIS, secondDest);
        }
    }
}
</code></pre>

<p>Complete source: <a href=""https://gist.github.com/shayousefi/5b4709f8b2024dea735f"" rel=""nofollow"">EllipsizingTextView.java</a></p>
"
"4165414","24981382","0","<p>Override public boolean dispatchTouchEvent(MotionEvent event) in any Activity (or extend class of Activity)</p>

<pre><code>@Override
public boolean dispatchTouchEvent(MotionEvent event) {
    View view = getCurrentFocus();
    boolean ret = super.dispatchTouchEvent(event);

    if (view instanceof EditText) {
        View w = getCurrentFocus();
        int scrcoords[] = new int[2];
        w.getLocationOnScreen(scrcoords);
        float x = event.getRawX() + w.getLeft() - scrcoords[0];
        float y = event.getRawY() + w.getTop() - scrcoords[1];

        if (event.getAction() == MotionEvent.ACTION_UP 
 &amp;&amp; (x &lt; w.getLeft() || x &gt;= w.getRight() 
 || y &lt; w.getTop() || y &gt; w.getBottom()) ) { 
            InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
            imm.hideSoftInputFromWindow(getWindow().getCurrentFocus().getWindowToken(), 0);
        }
    }
 return ret;
}
</code></pre>

<p>And that's all you need to do</p>
"
"6343166","24993517","3","<pre><code>put your code inside

    new Thread(new Runnable(){
      @Override
       public void run() {
          try {

             //Your implementation 

              } catch (Exception ex) {
                      ex.printStackTrace();
                }
         } 
     }).start();
</code></pre>

<p>or </p>

<pre><code>class DemoTask extends AsyncTask&lt;Void, Void, Void&gt; {



protected Void doInBackground(Void... arg0) {

      //Your implementation 

}

protected void onPostExecute(Void result) {

    // TODO: do something with the feed
}
}
</code></pre>
"
"5357455","25015474","0","<p>I improved on the solution that uses a regex by Pinhassi so it also handles the edge cases correctly. Before checking if the input is correct, first the final string is constructed as described by the android docs.</p>

<pre><code>public class DecimalDigitsInputFilter implements InputFilter {

    private Pattern mPattern;

    private static final Pattern mFormatPattern = Pattern.compile(""\\d+\\.\\d+"");

    public DecimalDigitsInputFilter(int digitsBeforeDecimal, int digitsAfterDecimal) {
        mPattern = Pattern.compile(
            ""^\\d{0,"" + digitsBeforeDecimal + ""}([\\.,](\\d{0,"" + digitsAfterDecimal +
                ""})?)?$"");
    }

    @Override
    public CharSequence filter(CharSequence source, int start, int end, Spanned dest, 
                               int dstart, int dend) {

        String newString =
            dest.toString().substring(0, dstart) + source.toString().substring(start, end) 
            + dest.toString().substring(dend, dest.toString().length());

        Matcher matcher = mPattern.matcher(newString);
        if (!matcher.matches()) {
            return """";
        }
        return null;
    }
}
</code></pre>

<p>Usage:</p>

<pre><code>editText.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(5,2)});
</code></pre>
"
"6330260","25016158","3","<p>Before launching your new Activity, simply add the following code:</p>

<pre><code>finishAffinity();
</code></pre>

<p>Or if you want it to work in previous versions of Android:</p>

<pre><code>ActivityCompat.finishAffinity(this);
</code></pre>
"
"5033012","25099117","0","<p>I combined some of the above suggestions to make one that scales up and down, with bisection method. It also scales within the width.</p>

<pre><code>/**
 *               DO WHAT YOU WANT TO PUBLIC LICENSE
 *                    Version 2, December 2004
 *
 * Copyright (C) 2004 Sam Hocevar &lt;sam@hocevar.net&gt;
 *
 * Everyone is permitted to copy and distribute verbatim or modified
 * copies of this license document, and changing it is allowed as long
 * as the name is changed.
 *
 *            DO WHAT YOU WANT TO PUBLIC LICENSE
 *   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
 *
 *  0. You just DO WHAT YOU WANT TO.
 */

import android.content.Context;
import android.text.Layout.Alignment;
import android.text.StaticLayout;
import android.text.TextPaint;
import android.util.AttributeSet;
import android.util.TypedValue;
import android.widget.TextView;

/**
 * Text view that auto adjusts text size to fit within the view. If the text
 * size equals the minimum text size and still does not fit, append with an
 * ellipsis.
 * 
 * @author Chase Colburn
 * @since Apr 4, 2011
 */
public class AutoResizeTextView extends TextView {

    // Minimum text size for this text view
    public static final float MIN_TEXT_SIZE = 10;

    // Minimum text size for this text view
    public static final float MAX_TEXT_SIZE = 128;

    private static final int BISECTION_LOOP_WATCH_DOG = 30;

    // Interface for resize notifications
    public interface OnTextResizeListener {
        public void onTextResize(TextView textView, float oldSize, float newSize);
    }

    // Our ellipse string
    private static final String mEllipsis = ""..."";

    // Registered resize listener
    private OnTextResizeListener mTextResizeListener;

    // Flag for text and/or size changes to force a resize
    private boolean mNeedsResize = false;

    // Text size that is set from code. This acts as a starting point for
    // resizing
    private float mTextSize;

    // Temporary upper bounds on the starting text size
    private float mMaxTextSize = MAX_TEXT_SIZE;

    // Lower bounds for text size
    private float mMinTextSize = MIN_TEXT_SIZE;

    // Text view line spacing multiplier
    private float mSpacingMult = 1.0f;

    // Text view additional line spacing
    private float mSpacingAdd = 0.0f;

    // Add ellipsis to text that overflows at the smallest text size
    private boolean mAddEllipsis = true;

    // Default constructor override
    public AutoResizeTextView(Context context) {
        this(context, null);
    }

    // Default constructor when inflating from XML file
    public AutoResizeTextView(Context context, AttributeSet attrs) {
        this(context, attrs, 0);
    }

    // Default constructor override
    public AutoResizeTextView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        mTextSize = getTextSize();
    }

    /**
     * When text changes, set the force resize flag to true and reset the text
     * size.
     */
    @Override
    protected void onTextChanged(final CharSequence text, final int start,
            final int before, final int after) {
        mNeedsResize = true;
        // Since this view may be reused, it is good to reset the text size
        resetTextSize();
    }

    /**
     * If the text view size changed, set the force resize flag to true
     */
    @Override
    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        if (w != oldw || h != oldh) {
            mNeedsResize = true;
        }
    }

    /**
     * Register listener to receive resize notifications
     * 
     * @param listener
     */
    public void setOnResizeListener(OnTextResizeListener listener) {
        mTextResizeListener = listener;
    }

    /**
     * Override the set text size to update our internal reference values
     */
    @Override
    public void setTextSize(float size) {
        super.setTextSize(size);
        mTextSize = getTextSize();
    }

    /**
     * Override the set text size to update our internal reference values
     */
    @Override
    public void setTextSize(int unit, float size) {
        super.setTextSize(unit, size);
        mTextSize = getTextSize();
    }

    /**
     * Override the set line spacing to update our internal reference values
     */
    @Override
    public void setLineSpacing(float add, float mult) {
        super.setLineSpacing(add, mult);
        mSpacingMult = mult;
        mSpacingAdd = add;
    }

    /**
     * Set the upper text size limit and invalidate the view
     * 
     * @param maxTextSize
     */
    public void setMaxTextSize(float maxTextSize) {
        mMaxTextSize = maxTextSize;
        requestLayout();
        invalidate();
    }

    /**
     * Return upper text size limit
     * 
     * @return
     */
    public float getMaxTextSize() {
        return mMaxTextSize;
    }

    /**
     * Set the lower text size limit and invalidate the view
     * 
     * @param minTextSize
     */
    public void setMinTextSize(float minTextSize) {
        mMinTextSize = minTextSize;
        requestLayout();
        invalidate();
    }

    /**
     * Return lower text size limit
     * 
     * @return
     */
    public float getMinTextSize() {
        return mMinTextSize;
    }

    /**
     * Set flag to add ellipsis to text that overflows at the smallest text size
     * 
     * @param addEllipsis
     */
    public void setAddEllipsis(boolean addEllipsis) {
        mAddEllipsis = addEllipsis;
    }

    /**
     * Return flag to add ellipsis to text that overflows at the smallest text
     * size
     * 
     * @return
     */
    public boolean getAddEllipsis() {
        return mAddEllipsis;
    }

    /**
     * Reset the text to the original size
     */
    public void resetTextSize() {
        if (mTextSize &gt; 0) {
            super.setTextSize(TypedValue.COMPLEX_UNIT_PX, mTextSize);
            // mMaxTextSize = mTextSize;
        }
    }

    /**
     * Resize text after measuring
     */

    @Override
    protected void onLayout(boolean changed, int left, int top, int right,
            int bottom) {
        if (changed || mNeedsResize) {
            int widthLimit = (right - left) - getCompoundPaddingLeft()
                    - getCompoundPaddingRight();
            int heightLimit = (bottom - top) - getCompoundPaddingBottom()
                    - getCompoundPaddingTop();
            resizeText(widthLimit, heightLimit);
        }
        super.onLayout(changed, left, top, right, bottom);
    }

    /**
     * Resize the text size with default width and height
     */
    public void resizeText() {

        // Height and width with a padding as a percentage of height
        int heightLimit = getHeight() - getPaddingBottom() - getPaddingTop();
        int widthLimit = getWidth() - getPaddingLeft() - getPaddingRight();
        resizeText(widthLimit, heightLimit);
    }

    /**
     * Resize the text size with specified width and height
     * 
     * @param width
     * @param height
     */
    public void resizeText(int width, int height) {
        CharSequence text = getText();

        // Do not resize if the view does not have dimensions or there is no
        // text
        if (text == null || text.length() == 0 || height &lt;= 0 || width &lt;= 0
                || mTextSize == 0) {
            return;
        }

        // Get the text view's paint object
        TextPaint textPaint = getPaint();

        // Store the current text size
        float oldTextSize = textPaint.getTextSize();

        // Bisection method: fast &amp; precise
        float lower = mMinTextSize;
        float upper = mMaxTextSize;
        int loop_counter = 1;
        float targetTextSize = (lower + upper) / 2;
        int textHeight = getTextHeight(text, textPaint, width, targetTextSize);
        int textWidth = getTextWidth(text, textPaint, width, targetTextSize);

        while (loop_counter &lt; BISECTION_LOOP_WATCH_DOG &amp;&amp; upper - lower &gt; 1) {
            targetTextSize = (lower + upper) / 2;
            textHeight = getTextHeight(text, textPaint, width, targetTextSize);
            textWidth = getTextWidth(text, textPaint, width, targetTextSize);
            if (textHeight &gt; (height) || textWidth &gt; (width))
                upper = targetTextSize;
            else
                lower = targetTextSize;
            loop_counter++;
        }

        targetTextSize = lower;
        textHeight = getTextHeight(text, textPaint, width, targetTextSize);

        // If we had reached our minimum text size and still don't fit, append
        // an ellipsis
        if (mAddEllipsis &amp;&amp; targetTextSize == mMinTextSize
                &amp;&amp; textHeight &gt; height) {
            // Draw using a static layout
            // modified: use a copy of TextPaint for measuring
            TextPaint paintCopy = new TextPaint(textPaint);
            paintCopy.setTextSize(targetTextSize);
            StaticLayout layout = new StaticLayout(text, paintCopy, width,
                    Alignment.ALIGN_NORMAL, mSpacingMult, mSpacingAdd, false);
            // Check that we have a least one line of rendered text
            if (layout.getLineCount() &gt; 0) {
                // Since the line at the specific vertical position would be cut
                // off,
                // we must trim up to the previous line
                int lastLine = layout.getLineForVertical(height) - 1;
                // If the text would not even fit on a single line, clear it
                if (lastLine &lt; 0) {
                    setText("""");
                }
                // Otherwise, trim to the previous line and add an ellipsis
                else {
                    int start = layout.getLineStart(lastLine);
                    int end = layout.getLineEnd(lastLine);
                    float lineWidth = layout.getLineWidth(lastLine);
                    float ellipseWidth = paintCopy.measureText(mEllipsis);

                    // Trim characters off until we have enough room to draw the
                    // ellipsis
                    while (width &lt; lineWidth + ellipseWidth) {
                        lineWidth = paintCopy.measureText(text.subSequence(
                                start, --end + 1).toString());
                    }
                    setText(text.subSequence(0, end) + mEllipsis);
                }
            }
        }

        // Some devices try to auto adjust line spacing, so force default line
        // spacing
        // and invalidate the layout as a side effect
        setTextSize(TypedValue.COMPLEX_UNIT_PX, targetTextSize);
        setLineSpacing(mSpacingAdd, mSpacingMult);

        // Notify the listener if registered
        if (mTextResizeListener != null) {
            mTextResizeListener.onTextResize(this, oldTextSize, targetTextSize);
        }

        // Reset force resize flag
        mNeedsResize = false;
    }

    // Set the text size of the text paint object and use a static layout to
    // render text off screen before measuring
    private int getTextHeight(CharSequence source, TextPaint originalPaint,
            int width, float textSize) {
        // modified: make a copy of the original TextPaint object for measuring
        // (apparently the object gets modified while measuring, see also the
        // docs for TextView.getPaint() (which states to access it read-only)
        TextPaint paint = new TextPaint(originalPaint);
        // Update the text paint object
        paint.setTextSize(textSize);
        // Measure using a static layout
        StaticLayout layout = new StaticLayout(source, paint, width,
                Alignment.ALIGN_NORMAL, mSpacingMult, mSpacingAdd, true);
        return layout.getHeight();
    }

    // Set the text size of the text paint object and use a static layout to
    // render text off screen before measuring
    private int getTextWidth(CharSequence source, TextPaint originalPaint,
            int width, float textSize) {
        // Update the text paint object
        TextPaint paint = new TextPaint(originalPaint);
        // Draw using a static layout
        paint.setTextSize(textSize);

        StaticLayout layout = new StaticLayout(source, paint, width,
                Alignment.ALIGN_NORMAL, mSpacingMult, mSpacingAdd, true);

        return (int) layout.getLineWidth(0);
    }
}
</code></pre>
"
"3495890","25112450","0","<p>There's a built-in setting for it. On the ScrollView:</p>

<pre><code>android:fillViewport=""true""
</code></pre>

<p>In Java,</p>

<pre><code>mScrollView.setFillViewport(true);
</code></pre>

<p>Romain Guy explains it in depth here: <a href=""http://www.curious-creature.org/2010/08/15/scrollviews-handy-trick/"" rel=""nofollow"">http://www.curious-creature.org/2010/08/15/scrollviews-handy-trick/</a></p>
"
"6176391","25133309","0","<p>For me, it doesnt worked to override ScrollView onTouch. Also does not worked     android:descendantFocusability=""beforeDescendants"" 
android:focusableInTouchMode=""true"" 
This and other mentioned solutions only worked for the first time - only when EditText is not selected, but once you select it, scrollview autoscrolls again.</p>

<p>Because I was already written a code to hide a keyboard when touching other views, I just added two lines of code and it worked like a champ:</p>

<pre><code>public static void setupUI(final Activity activity, final View view) {
    //view is the parent view in your layout
    OnTouchListener mTouchListener = new OnTouchListener() {
        public boolean onTouch(View v, MotionEvent event) {
            try {
                View vFocused = null;
                vFocused = activity.getCurrentFocus();

                if (vFocused != null) {
                    hideSoftKeyboard(activity, v);
                    if (vFocused instanceof EditText) {
                        vFocused.clearFocus();//this is the trick to avoid ScrollView autoscroll
                    }
                }
            } catch (Exception e) {
            }
            return false;
        }
    };

    // Set up touch listener for non-text box views to hide keyboard.
    if (!(view instanceof EditText) &amp;&amp; !(view instanceof ViewGroup)) {
        view.setOnTouchListener(mTouchListener);
    }

    // If a layout container, iterate over children and seed recursion.
    if (view instanceof ViewGroup) {
        view.setOnTouchListener(mTouchListener);
        for (int i = 0; i &lt; ((ViewGroup) view).getChildCount(); i++) {
            View innerView = ((ViewGroup) view).getChildAt(i);
            setupUI(activity, innerView);
        }
    }
}
public static void hideSoftKeyboard(Context context, View v) {
    InputMethodManager inputMethodManager = (InputMethodManager) context
            .getSystemService(Activity.INPUT_METHOD_SERVICE);
    inputMethodManager.hideSoftInputFromWindow(v.getWindowToken(), 0);
}
</code></pre>

<p>also added this in root view:</p>

<pre><code>android:descendantFocusability=""beforeDescendants"" android:focusableInTouchMode=""true""
</code></pre>

<p>Maybe its not really nice solution, but its working.</p>
"
"6290531","25156934","5","<p>if edittext is empty than use  setError method </p>

<pre><code>EditText txtUserName = (EditText) findViewById(R.id.txtUsername);
String strUserName = usernameEditText.getText().toString();

 if(TextUtils.isEmpty(strUserName) {
    txtUserName.setError(""Your message"");
    return;
 }
</code></pre>

<p><img src=""http://i.stack.imgur.com/qdhpK.jpg"" alt=""enter image description here""></p>
"
"3331527","25157333","0","<pre><code> Bitmap yourBitmap;
 Bitmap resized = Bitmap.createScaledBitmap(yourBitmap, newWidth, newHeight, true);
</code></pre>

<p>or:</p>

<pre><code> resized = Bitmap.createScaledBitmap(yourBitmap,(int)(yourBitmap.getWidth()*0.8), (int)(yourBitmap.getHeight()*0.8), true);
</code></pre>
"
"6495898","25164439","1","<p>You can call <code>findViewById()</code> with the <strong>Activity Object</strong> you get inside your <code>public void onAttach(Activity activity)</code> method inside your Fragment.</p>

<p>Save the Activity into a variable for example:</p>

<p>In the <strong>Fragment class</strong>:
<code>private Activity mainActivity;</code>
In the <code>onAttach()</code> method:
<code>this.mainActivity=activity;</code></p>

<p>Finally execute every findViewById through the vairable:
<code>mainActivity.findViewById(R.id.TextView);</code></p>
"
"3349121","25191846","0","<p>Ignoring the span stuff that other people have dealt with, to properly handle dictionary suggestions I found the following code works. </p>

<p>The source grows as the suggestion grows so we have to look at how many characters it's actually expecting us to replace before we return anything. </p>

<p>If we don't have any invalid characters, return null so that the default replacement occurs. </p>

<p>Otherwise we need to extract out the valid characters from the substring that's ACTUALLY going to be placed into the EditText.</p>

<pre><code>InputFilter filter = new InputFilter() { 
    public CharSequence filter(CharSequence source, int start, int end, 
    Spanned dest, int dstart, int dend) { 

        boolean includesInvalidCharacter = false;
        StringBuilder stringBuilder = new StringBuilder();

        int destLength = dend - dstart + 1;
        int adjustStart = source.length() - destLength;
        for(int i=start ; i&lt;end ; i++) {
            char sourceChar = source.charAt(i);
            if(Character.isLetterOrDigit(sourceChar)) {
                if(i &gt;= adjustStart)
                     stringBuilder.append(sourceChar);
            } else
                includesInvalidCharacter = true;
        }
        return includesInvalidCharacter ? stringBuilder : null;
    } 
}; 
</code></pre>
"
"5694933","25196520","2","<p>Just simply use this:</p>

<pre><code>String primary_sd = System.getenv(""EXTERNAL_STORAGE"");
if(primary_sd != null)
    Log.i(""EXTERNAL_STORAGE"", primary_sd);
String secondary_sd = System.getenv(""SECONDARY_STORAGE"");
if(secondary_sd != null)
    Log.i(""SECONDARY_STORAGE"", secondary_sd)
</code></pre>
"
"2403632","25402864","0","<p>This is good sample for you :</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""
    android:orientation=""vertical"" &gt;

    &lt;ScrollView
        android:id=""@+id/scrollID""
        android:layout_width=""fill_parent""
        android:layout_height=""0dip""
        android:layout_weight=""1"" &gt;

        &lt;LinearLayout
            android:id=""@+id/test""
            android:layout_width=""match_parent""
            android:layout_height=""wrap_content""
            android:orientation=""vertical"" &gt;
        &lt;/LinearLayout&gt;
    &lt;/ScrollView&gt;

    &lt;LinearLayout
        android:layout_width=""match_parent""
        android:layout_height=""wrap_content""
        android:baselineAligned=""true""
        android:orientation=""horizontal""
        android:paddingBottom=""5dp""
        android:paddingLeft=""5dp""
        android:paddingRight=""5dp""
        android:weightSum=""1"" &gt;

        &lt;EditText
            android:id=""@+id/txtInpuConversation""
            android:layout_width=""0dip""
            android:layout_height=""wrap_content""
            android:layout_weight=""0.5""
            android:hint=""@string/edt_Conversation"" &gt;

            &lt;requestFocus /&gt;
        &lt;/EditText&gt;

        &lt;Button
            android:id=""@+id/btnSend""
            android:layout_width=""0dip""
            android:layout_height=""wrap_content""
            android:layout_weight=""0.5""
            android:text=""@string/btn_Conversation"" /&gt;
    &lt;/LinearLayout&gt;

&lt;/LinearLayout&gt;
</code></pre>
"
"2169649","25405935","0","<p>This snippet is copied from the <a href=""https://developer.android.com/guide/components/intents-common.html#Storage"" rel=""nofollow"">official</a> documentation:</p>

<hr>

<p><strong>Example intent to get a photo:</strong></p>

<pre><code>static final int REQUEST_IMAGE_GET = 1;

public void selectImage() {
    Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
    intent.setType(""image/*"");
    if (intent.resolveActivity(getPackageManager()) != null) {
        startActivityForResult(intent, REQUEST_IMAGE_GET);
    }
}

@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    if (requestCode == REQUEST_IMAGE_GET &amp;&amp; resultCode == RESULT_OK) {
        Bitmap thumbnail = data.getParcelable(""data"");
        Uri fullPhotoUri = data.getData();
        // Do work with photo saved at fullPhotoUri
        ...
    }
}
</code></pre>
"
"3624280","25407674","2","<p>Basic idea of <a href=""http://developer.android.com/reference/android/content/SharedPreferences.html"" rel=""nofollow"">SharedPreferences</a> is to store things on XML file. </p>

<ol>
<li><p>Declare your xml file path.(if you don't have this file, Android will create it. If you have this file, Android will access it.)</p>

<pre><code>SharedPreferences prefs = this.getSharedPreferences(""com.example.app"", Context.MODE_PRIVATE);
</code></pre></li>
<li><p>Write value to Shared Preferences</p>

<pre><code>prefs.edit().putLong(""preference_file_key"", 1010101).apply();
</code></pre>

<p>the <code>preference_file_key</code> is the name of shared preference files. And the <code>1010101</code> is the value you need to store. </p>

<p><code>apply()</code> at last is to save the changes. If you get error from <code>apply()</code>, change it to <code>commit()</code>. So this alternative sentence is</p>

<pre><code>prefs.edit().putLong(""preference_file_key"", 1010101).commit();
</code></pre></li>
<li><p>Read from Shared Preferences</p>

<pre><code>SharedPreferences sp = this.getSharedPreferences(""com.example.app"", Context.MODE_PRIVATE);
long lsp = sp.getLong(""preference_file_key"", -1);
</code></pre>

<p><code>lsp</code> will be <code>-1</code> if <code>preference_file_key</code> has no value. If 'preference_file_key' has a value, it will return the value of this.</p></li>
</ol>

<p>The whole code for writing is</p>

<pre><code>    SharedPreferences prefs = this.getSharedPreferences(""com.example.app"", Context.MODE_PRIVATE);    // Declare xml file
    prefs.edit().putLong(""preference_file_key"", 1010101).apply();    // Write the value to key.
</code></pre>

<p>The code for reading is</p>

<pre><code>    SharedPreferences sf = this.getSharedPreferences(""com.example.app"", Context.MODE_PRIVATE);    // Declare xml file
    long lsp = sp.getLong(""preference_file_key"", -1);    // Read the key and store in lsp
</code></pre>
"
"6200533","25483262","0","<p>Since I want to use a custom font only conjunction of several answers works for me. Obviously  settings in my <code>layout.xml</code> like <code>android:textStlyle=""italic""</code> was ignored by AOS. So finally I had to do as follows:
in <code>strings.xml</code> the target string was declared as:</p>

<pre><code>&lt;string name=""txt_sign""&gt;&lt;i&gt;The information blah blah ...&lt;/i&gt;&lt;/string&gt;
</code></pre>

<p>then additionally in code:</p>

<pre><code>TextView textSign = (TextView) findViewById(R.id.txt_sign);
FontHelper.setSomeCustomFont(textSign);
textSign.setTypeface(textSign.getTypeface(), Typeface.ITALIC);
</code></pre>

<p>I didn't try the <code>Spannable</code> option (which I assume MUST work) but</p>

<pre><code>textSign.setText(Html.fromHtml(getString(R.string.txt_sign))) 
</code></pre>

<p>had no effect. Also if I remove the <code>italic tag</code> from <code>strings.xml</code> leaving the <code>setTypeface()</code> all alone it has no effect either. Tricky Android...</p>
"
"6495898","25548516","2","<p>The best way to implement this is as follows:    </p>

<pre><code>public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {

rootView = inflater.inflate(R.layout.testclassfragment, container, false);
        ImageView imageView = (ImageView) rootView.findViewById(R.id.my_image);
        return rootView
}
</code></pre>

<p>In this way, the rootView can be used for each control defined in the xml layout and the code is much cleaner in this way.</p>

<p>Hope this helps :)</p>
"
"6343166","25551789","1","<pre><code>1.try to run all network Task that can take few seconds in AsyncTask 

 Do not use Thread separately in your Android application. it can freeze your UI content of your application.
check these link 
</code></pre>

<p><a href=""http://stackoverflow.com/questions/9728032/why-should-i-use-android-service-instead-of-java-thread"">why should i use android service instead of java thread</a> </p>

<pre><code> Check bellow link to know about AsynTask 
 &lt;http://developer.android.com/reference/android/os/AsyncTask.html&gt;

 2.If API version is 11 or above android:targetSDk does not allow netwrok on main thread But it works in below in HoneyComb.n 

Try to  remove  android:targetSdkVersion line from your manifest.
  I did this in 3rd party code and work for me most of time.
</code></pre>
"
"5694933","25612858","0","<p>You can try to use the support library function called of <a href=""http://developer.android.com/reference/android/support/v4/content/ContextCompat.html#getExternalFilesDirs(android.content.Context,%20java.lang.String)"" rel=""nofollow""><strong>ContextCompat.getExternalFilesDirs()</strong></a> :</p>

<pre><code>      final File[] appsDir=ContextCompat.getExternalFilesDirs(getActivity(),null);
      final ArrayList&lt;File&gt; extRootPaths=new ArrayList&lt;&gt;();
      for(final File file : appsDir)
        extRootPaths.add(file.getParentFile().getParentFile().getParentFile().getParentFile());
</code></pre>

<p>The first one is the primary external storage, and the rest are supposed to be real SD-cards paths.</p>

<p>The reason for the multiple "".getParentFile()"" is to go up another folder, since the original path is </p>

<pre><code>.../Android/data/YOUR_APP_PACKAGE_NAME/files/
</code></pre>
"
"8181828","25615932","0","<p>Here's my solution which includes scroll tracking and scroll ending:</p>

<pre><code>public class ObservableHorizontalScrollView extends HorizontalScrollView {
    public interface OnScrollListener {
        public void onScrollChanged(ObservableHorizontalScrollView scrollView, int x, int y, int oldX, int oldY);
        public void onEndScroll(ObservableHorizontalScrollView scrollView);
    }

    private boolean mIsScrolling;
    private boolean mIsTouching;
    private Runnable mScrollingRunnable;
    private OnScrollListener mOnScrollListener;

    public ObservableHorizontalScrollView(Context context) {
        this(context, null, 0);
    }

    public ObservableHorizontalScrollView(Context context, AttributeSet attrs) {
        this(context, attrs, 0);
    }

    public ObservableHorizontalScrollView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
    }

    @Override
    public boolean onTouchEvent(MotionEvent ev) {
        int action = ev.getAction();

        if (action == MotionEvent.ACTION_MOVE) {
            mIsTouching = true;
            mIsScrolling = true;
        } else if (action == MotionEvent.ACTION_UP) {
            if (mIsTouching &amp;&amp; !mIsScrolling) {
                if (mOnScrollListener != null) {
                    mOnScrollListener.onEndScroll(this);
                }
            }

            mIsTouching = false;
        }

        return super.onTouchEvent(ev);
    }

    @Override
    protected void onScrollChanged(int x, int y, int oldX, int oldY) {
        super.onScrollChanged(x, y, oldX, oldY);

        if (Math.abs(oldX - x) &gt; 0) {
            if (mScrollingRunnable != null) {
                removeCallbacks(mScrollingRunnable);
            }

            mScrollingRunnable = new Runnable() {
                public void run() {
                    if (mIsScrolling &amp;&amp; !mIsTouching) {
                        if (mOnScrollListener != null) {
                            mOnScrollListener.onEndScroll(ObservableHorizontalScrollView.this);
                        }
                    }

                    mIsScrolling = false;
                    mScrollingRunnable = null;
                }
            };

            postDelayed(mScrollingRunnable, 200);
        }

        if (mOnScrollListener != null) {
            mOnScrollListener.onScrollChanged(this, x, y, oldX, oldY);
        }
    }

    public OnScrollListener getOnScrollListener() {
        return mOnScrollListener;
    }

    public void setOnScrollListener(OnScrollListener mOnEndScrollListener) {
        this.mOnScrollListener = mOnEndScrollListener;
    }

}
</code></pre>
"
"2780102","25616982","1","<p>Use this :</p>

<pre><code>    PackageManager pm = getPackageManager();
    Intent intent = pm.getLaunchIntentForPackage(""com.package.name"");
    startActivity(intent);
</code></pre>
"
"2201917","25659478","0","<pre><code>String url = ""http://www.example.com"";
Intent i = new Intent(Intent.ACTION_VIEW);
i.setData(Uri.parse(url));
startActivity(i);
</code></pre>
"
"2644134","25729376","1","<p>You Can do this without using <code>AlertDialog</code> by defining new Class that extends from <code>Dialog</code> Class like this:</p>

<pre><code>public class myDialog extends Dialog {
    public myDialog(Context context) {
        super(context);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
    }
}
</code></pre>
"
"2403632","25764891","0","<p>Why this answer - Because above solution will show your keyboard but it will not vanish if you click anywhere other that <code>EditText</code>. So you need to do something to make the keybaord disappear when <code>EditText</code> loses focus.</p>

<p>You can achieve this by doing the following steps:</p>

<ol>
<li><p>Make the parent view(content view of your activity) clickable and focusable by adding the following attributes</p>

<pre><code>    android:clickable=""true"" 
    android:focusableInTouchMode=""true"" 
</code></pre></li>
<li><p>Implement a hideKeyboard() method</p>

<pre><code>    public void hideKeyboard(View view) {
        InputMethodManager inputMethodManager =(InputMethodManager)getSystemService(Activity.INPUT_METHOD_SERVICE);
        inputMethodManager.hideSoftInputFromWindow(view.getWindowToken(),InputMethodManager.HIDE_IMPLICIT_ONLY );
    }
</code></pre></li>
<li><p>Lastly, set the onFocusChangeListener of your edittext.</p>

<pre><code>    edittext.setOnFocusChangeListener(new View.OnFocusChangeListener() {
        @Override
        public void onFocusChange(View v, boolean hasFocus) {
            if (!hasFocus) {
                hideKeyboard(v);
            }
        }
    });
</code></pre></li>
</ol>
"
"4617898","25853290","1","<p>You can Override <code>setPressed</code> in the ImageView and do the color filtering there, instead of creating onTouchEvent listeners: </p>

<pre><code>@Override
public void setPressed(boolean pressed) {
    super.setPressed(pressed);

    if(getDrawable() == null)
        return;

    if(pressed) {
        getDrawable().setColorFilter(0x44000000, PorterDuff.Mode.SRC_ATOP);
        invalidate();
    }
    else {
        getDrawable().clearColorFilter();
        invalidate();
    }
}
</code></pre>
"
"3624280","25891286","0","<p><strong>to save</strong> </p>

<pre><code>PreferenceManager.getDefaultSharedPreferences(this).edit().putString(""VarName"",""your value"").apply();
</code></pre>

<p><strong>to retreive :</strong></p>

<pre><code>String name = PreferenceManager.getDefaultSharedPreferences(this).getString(""VarName"",""defaultValue"");
</code></pre>

<blockquote>
  <p>default value is : Values to return if this preference does not exist.</p>
  
  <p>you can change ""<strong><em>this</em></strong>"" with <strong><em>getActivity()</em></strong> or <strong><em>getApplicationContext()</em></strong> in
  some cases</p>
</blockquote>
"
"3624280","25891501","0","<p>There are many ways people recommend how to use <strong>SharedPreferences</strong>. I have made a <a href=""https://github.com/akhgupta/Android-PreferenceDemo"" rel=""nofollow""><strong>demo project here</strong></a>. Key point in sample is to use <strong>ApplicationContext &amp; single sharedpreferences object</strong>. This demonstrates how to use <strong>SharedPreferences</strong> with following features:-</p>

<ul>
<li>Using singelton class to access/update SharedPreferences</li>
<li>No need to pass context always for read/write SharedPreferences</li>
<li>It uses apply() instead of commit()</li>
<li>apply() is asynchronus save, doesn't return anything, it update value in memory first &amp; changes are written to disk later
asynchronusly.</li>
<li>commit() is synchronus save, it return true/false based on outcome. Changes are written to disk synchronusly</li>
<li>works on android 2.3+ versions</li>
</ul>

<p>Usage example as below:-</p>

<pre><code>MyAppPreference.getInstance().setSampleStringKey(""some_value"");
String value= MyAppPreference.getInstance().getSampleStringKey();
</code></pre>

<p><a href=""https://github.com/akhgupta/Android-PreferenceDemo"" rel=""nofollow""><strong>Get source code here</strong></a>
&amp; Detailed API's can be found <a href=""http://developer.android.com/reference/android/content/SharedPreferences.Editor.html"" rel=""nofollow""><strong>here</strong></a> on developer.android.com </p>
"
"3349121","25990341","1","<p>to prevent words in edittext.
create a class that u could use anytime.</p>

<p>public class Wordfilter implements InputFilter
{</p>

<pre><code>@Override
public CharSequence filter(CharSequence source, int start, int end,Spanned dest, int dstart, int dend) {
    // TODO Auto-generated method stub

    boolean append = false;
    String text = source.toString().substring(start, end);
    StringBuilder str = new StringBuilder(dest.toString());

    if(dstart == str.length())
    {
        append = true;
        str.append(text);
    }
    else
        str.replace(dstart, dend, text);

    if(str.toString().contains(""aaaaaaaaaaaa/*the word here*/aaaaaaaa""))
    {
        if(append==true)
            return """";
        else
            return dest.subSequence(dstart, dend);
    }

    return null;
}
</code></pre>

<p>}</p>
"
"5694933","25993873","-1","<p>I try all solutions inside this topic on this time. But all of them not correct work on devices with one external (removable) and one internal (not-removable) cards. Path of external card not possible get from 'mount' command, from 'proc/mounts' file etc.</p>

<p>And I create my own solution (on Paulo Luan's):</p>

<pre><code>  String sSDpath = null;
  File   fileCur = null;
  for( String sPathCur : Arrays.asList( ""ext_card"", ""external_sd"", ""ext_sd"", ""external"", ""extSdCard"",  ""externalSdCard"")) // external sdcard
   {
     fileCur = new File( ""/mnt/"", sPathCur);
     if( fileCur.isDirectory() &amp;&amp; fileCur.canWrite())
       {
         sSDpath = fileCur.getAbsolutePath();
         break;
       }
   }
  fileCur = null;
  if( sSDpath == null)  sSDpath = Environment.getExternalStorageDirectory().getAbsolutePath();
</code></pre>
"
"5105354","26012003","0","<p>You can try to force the soft keyboard to appear, it works for me:</p>

<pre><code>...
dialog.show();
input.requestFocus();
InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
imm.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);
</code></pre>
"
"5832368","26028009","0","<p>This is the method that i use :</p>

<pre><code>public static boolean isTablet(Context ctx){    
    return = (ctx.getResources().getConfiguration().screenLayout &amp; Configuration.SCREENLAYOUT_SIZE_MASK) &gt;= Configuration.SCREENLAYOUT_SIZE_LARGE; 
}
</code></pre>
"
"5105354","26034764","0","<p>All solutions given above (<em>InputMethodManager</em> interaction in <em>OnFocusChangeListener.onFocusChange</em> listener attached to your <em>EditText</em> works fine if you have single edit in the activity.</p>

<p>In my case I have two edits.</p>

<pre><code> private EditText tvX, tvY;
 protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
 tvX.setOnFocusChangeListener(this);
    tvY.setOnFocusChangeListener(this);

@Override
public void onFocusChange(View v, boolean hasFocus) {       
    InputMethodManager imm =  (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
    if(tvX.hasFocus() || tvY.hasFocus()) {            
        imm.showSoftInput(v, 0);            
    } else {
        imm.hideSoftInputFromWindow(v.getWindowToken(), 0);         
    }       
};
</code></pre>

<p>I have observed that onFocusChange is triggered for tvX with hasFocus=true (keyboard shown) but then for tvY with  hasFocus=true (keyboard hidden). In the end, no keyboard was visible.</p>

<p>General solution should have correct statement in if ""show keyboard if EditText text has focus""</p>
"
"3647993","26041477","0","<p>its because gallery correct displaying rotated images but not ImageView
look at here:</p>

<pre><code>                    myBitmap = BitmapFactory.decodeFile(imgFile.getAbsolutePath(),optionss);
                    ExifInterface exif = new ExifInterface(selectedImagePath);
                    int rotation = exif.getAttributeInt(ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_NORMAL);
                    int rotationInDegrees = exifToDegrees(rotation);
                    deg = rotationInDegrees;
                    Matrix matrix = new Matrix();
                    if (rotation != 0f) {
                        matrix.preRotate(rotationInDegrees);
                        myBitmap = Bitmap.createBitmap(myBitmap, 0, 0, myBitmap.getWidth(), myBitmap.getHeight(), matrix, true);
                    }
</code></pre>

<p>and you need this:</p>

<pre><code>private static int exifToDegrees(int exifOrientation) {        
    if (exifOrientation == ExifInterface.ORIENTATION_ROTATE_90) { return 90; } 
    else if (exifOrientation == ExifInterface.ORIENTATION_ROTATE_180) {  return 180; } 
    else if (exifOrientation == ExifInterface.ORIENTATION_ROTATE_270) {  return 270; }            
    return 0;    
} 
</code></pre>
"
"5105354","26136420","1","<p>In your onResume() section of the Activity you can do call the method bringKeyboard();</p>

<pre><code> onResume() {
     EditText yourEditText= (EditText) findViewById(R.id.yourEditText);
     bringKeyboard(yourEditText);
 }


  protected boolean bringKeyboard(EditText view) {
    if (view == null) {
        return false;
    }
    try {
      // Depending if edittext has some pre-filled values you can decide whether to bring up soft keyboard or not
        String value = view.getText().toString();
        if (value == null) {
            WidgetUtils.showKeyboard(view);
            return true;
        }
    } catch (Exception e) {
        Log.e(TAG, ""decideFocus. Exception"", e);
    }
    return false;
  }
</code></pre>
"
"2780102","26139304","0","<p>If you're attempting to start a SERVICE rather than activity, this worked for me:</p>

<pre><code>Intent intent = new Intent();
intent.setClassName(""com.example.otherapplication"", ""com.example.otherapplication.ServiceName"");
context.startService(intent);
</code></pre>

<p>If you use the intent.setComponent(...) method as mentioned in other answers, you may get an ""Implicit intents with startService are not safe"" warning.</p>
"
"2150078","26152562","1","<p>Some improvements to avoid wrongly detect the visibility of soft keyboard on high density devices: </p>

<ol>
<li><p>Threshold of height difference should be defined as <strong>128 dp</strong>, not <em>128 pixels</em>.<br>
Refer to <a href=""http://developer.android.com/design/style/metrics-grids.html"" rel=""nofollow"">Google design doc about Metrics and Grid</a>, <em>48 dp</em> is comfortable size for touch object and <em>32 dp</em> is minimum for buttons. Generic soft keyboard should include 4 rows of key buttons, so minimum keyboard height should be:  <strong>32 dp * 4 = 128 dp</strong>, that means threshold size should transfer to pixels by multiply device density. For xxxhdpi devices (density 4), the  soft keyboard height threshold should be 128 * 4 = 512 pixels.</p></li>
<li><p>Height difference between root view and its visible area:<br>
root view height - status bar height - visible frame height = root view bottom - visible frame bottom, since status bar height equal to the top of root view visible frame. </p>

<pre><code>private final String TAG = ""TextEditor"";
private TextView mTextEditor;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_editor);
    mTextEditor = (TextView) findViewById(R.id.text_editor);
    mTextEditor.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {
        @Override
        public void onGlobalLayout() {
            isKeyboardShown(mTextEditor.getRootView());
        }
    });
}

private boolean isKeyboardShown(View rootView) {
    /* 128dp = 32dp * 4, minimum button height 32dp and generic 4 rows soft keyboard */
    final int SOFT_KEYBOARD_HEIGHT_DP_THRESHOLD = 128;

    Rect r = new Rect();
    rootView.getWindowVisibleDisplayFrame(r);
    DisplayMetrics dm = rootView.getResources().getDisplayMetrics();
    /* heightDiff = rootView height - status bar height (r.top) - visible frame height (r.bottom - r.top) */
    int heightDiff = rootView.getBottom() - r.bottom;
    /* Threshold size: dp to pixels, multiply with display density */
    boolean isKeyboardShown = heightDiff &gt; SOFT_KEYBOARD_HEIGHT_DP_THRESHOLD * dm.density;

    Log.d(TAG, ""isKeyboardShown ? "" + isKeyboardShown + "", heightDiff:"" + heightDiff + "", density:"" + dm.density
            + ""root view height:"" + rootView.getHeight() + "", rect:"" + r);

    return isKeyboardShown;
}
</code></pre></li>
</ol>
"
"3611457","26207978","0","<p>I have come up with a solution which depends on the display rotation and then decides the orientation of the device. From knowing the orientation we can lock the orientation and release it later when needed. This solution also can determine if the device in <strong>reverse landscape</strong> mode.</p>

<pre><code>private void lockOrientation(){
    switch (((WindowManager) getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay().getRotation()) {


        // Portrait
        case Surface.ROTATION_0:
            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
            break;


        //Landscape     
        case Surface.ROTATION_90: 
            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
            break;


        // Reversed landscape
        case Surface.ROTATION_270:
            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE);             
            break;
    }
}
</code></pre>

<p>Then later if we need to release the orientation we can call this method:</p>

<pre><code>setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED);
</code></pre>
"
"3331527","26239077","0","<p>I don't know if my solution is best practice, but I achieved loading a bitmap with my desired scaling by using the <code>inDensity</code> and <code>inTargetDensity</code> options. <code>inDensity</code> is <code>0</code> initially when not loading a drawable resource, so this approach is for loading non resource images.</p>

<p>The variables <code>imageUri</code>, <code>maxImageSideLength</code> and <code>context</code> are parameters of my method. I posted only the method implementation without the wrapping AsyncTask for clarity.</p>

<pre><code>            ContentResolver resolver = context.getContentResolver();
            InputStream is;
            try {
                is = resolver.openInputStream(imageUri);
            } catch (FileNotFoundException e) {
                Log.e(TAG, ""Image not found."", e);
                return null;
            }
            Options opts = new Options();
            opts.inJustDecodeBounds = true;
            BitmapFactory.decodeStream(is, null, opts);

            // scale the image
            float maxSideLength = maxImageSideLength;
            float scaleFactor = Math.min(maxSideLength / opts.outWidth, maxSideLength / opts.outHeight);
            // do not upscale!
            if (scaleFactor &lt; 1) {
                opts.inDensity = 10000;
                opts.inTargetDensity = (int) ((float) opts.inDensity * scaleFactor);
            }
            opts.inJustDecodeBounds = false;

            try {
                is.close();
            } catch (IOException e) {
                // ignore
            }
            try {
                is = resolver.openInputStream(imageUri);
            } catch (FileNotFoundException e) {
                Log.e(TAG, ""Image not found."", e);
                return null;
            }
            Bitmap bitmap = BitmapFactory.decodeStream(is, null, opts);
            try {
                is.close();
            } catch (IOException e) {
                // ignore
            }

            return bitmap;
</code></pre>
"
"6290531","26265413","0","<p>I wanted to do something similar. But getting the text value from edit text and comparing it like <code>(str=="""")</code> wasn't working for me. So better option was:</p>

<pre><code>EditText eText = (EditText) findViewById(R.id.etext);

if (etext.getText().length() == 0)
{//do what you want }
</code></pre>

<p>Worked like a charm.</p>
"
"6495898","26331955","1","<p>According to the documentation on API level 11</p>

<p>Reference, in Back Stack
<a href=""http://developer.android.com/reference/android/app/Fragment.html"" rel=""nofollow"">http://developer.android.com/reference/android/app/Fragment.html</a></p>

<p>short code</p>

<pre><code>/**
 * The Fragment's UI is just a simple text view showing its
 * instance number.
 */
@Override
public View onCreateView(LayoutInflater inflater, ViewGroup container,
        Bundle savedInstanceState) {
    View v = inflater.inflate(R.layout.hello_world, container, false);
    View tv = v.findViewById(R.id.text);
    ((TextView)tv).setText(""Fragment #"" + mNum);
    tv.setBackgroundDrawable(getResources().getDrawable(android.R.drawable.gallery_thumb));
    return v;
}
</code></pre>
"
"2459916","26342897","0","<p>This pure xml solution was good enough in my case. <a href=""http://www.techrepublic.com/article/pro-tip-round-corners-on-an-android-imageview-with-this-hack/"" rel=""nofollow"">http://www.techrepublic.com/article/pro-tip-round-corners-on-an-android-imageview-with-this-hack/</a></p>

<p><strong>EDIT</strong></p>

<p>Here's the answer in a nutshell:</p>

<p>In the /res/drawable folder, create a frame.xml file. In it, we define a simple rectangle with rounded corners and a <strong>transparent</strong> center.</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
    &lt;shape xmlns:android=""http://schemas.android.com/apk/res/android"" android:shape=""rectangle""&gt;
         &lt;solid android:color=""#00ffffff"" /&gt;
         &lt;padding android:left=""6dp""
            android:top=""6dp""
            android:right=""6dp""
            android:bottom=""6dp"" /&gt;
         &lt;corners android:radius=""12dp"" /&gt;
         &lt;stroke android:width=""6dp"" android:color=""#ffffffff"" /&gt;
    &lt;/shape&gt;
</code></pre>

<p>In your layout file you add a LinearLayout that contains a standard ImageView, as well as a nested FrameLayout. The FrameLayout uses padding and the custom drawable to give the illusion of rounded corners.</p>

<pre><code>&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent""
    android:orientation=""vertical""
    android:layout_gravity=""center""
    android:gravity=""center"" 
    android:background=""#ffffffff""&gt;

    &lt;ImageView
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:padding=""6dp""
        android:src=""@drawable/tr""/&gt;

    &lt;FrameLayout 
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""&gt;

        &lt;ImageView
            android:layout_width=""match_parent""
            android:layout_height=""match_parent""
            android:padding=""6dp""
            android:src=""@drawable/tr""/&gt;

        &lt;ImageView 
             android:src=""@drawable/frame""
             android:layout_width=""match_parent""
             android:layout_height=""match_parent"" /&gt;

    &lt;/FrameLayout&gt;

&lt;/LinearLayout&gt;
</code></pre>
"
"3611457","26363743","0","<p>I think this code is easier to read.</p>

<pre><code>private void keepOrientation() {

    int orientation = getResources().getConfiguration().orientation;
    int rotation = getWindowManager().getDefaultDisplay().getRotation();

    switch (rotation) {
        case Surface.ROTATION_0:
            if (orientation == Configuration.ORIENTATION_PORTRAIT) {
                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
            } else {
                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
            }
            break;
        case Surface.ROTATION_90:
            if (orientation == Configuration.ORIENTATION_PORTRAIT) {
                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_REVERSE_PORTRAIT);
            } else {
                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
            }
            break;
        case Surface.ROTATION_180:
            if (orientation == Configuration.ORIENTATION_PORTRAIT) {
                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_REVERSE_PORTRAIT);
            } else {
                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE);
            }
            break;
        default:
            if (orientation == Configuration.ORIENTATION_PORTRAIT) {
                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
            } else {
                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE);
            }
    }
}
</code></pre>
"
"2150078","26371778","0","<p>Don't make any hard code. Best way is you have to resize your views while on Get Focus on EditText with KeyBord Show.
You can do this adding resize property on activity into Manifest file using below code.</p>

<p><code>android:windowSoftInputMode=""adjustResize""</code></p>
"
"3996938","26379880","0","<p>This is an old thread but since this basically came up first in current Google search here's a quick way to understand what <code>listView.getCheckedItemPositions()</code> does:</p>

<p><strong>Unless the list Item wasn't 'toggled' at all in your ListView, it wont be added to the SparseBooleanArray that is returned by <code>listView.getCheckedItemPositions()</code></strong></p>

<p>But then, you really don't want your users to click every list item to ""properly"" add it to the returned SparseBooleanArray right?</p>

<p>Hence you need to combine the usage of <strong>valueAt()</strong> AND <strong>keyAt()</strong> of the SparseBooleanArray for this.</p>

<pre><code>    SparseBooleanArray checkedArray = listView.getCheckedItemPositions();

    ArrayList&lt;DataEntry&gt; entries = baseAdapter.getBackingArray(); //point this to the array of your custom adapter

    if (checkedArray != null)
    {
        for(int i = 0; i &lt; checkedArray.size(); i++)
        {
            if(checkedArray.valueAt(i))    //valueAt() gets the boolean
                entries.yourMethodAtIndex(checkedArray.keyAt(i)); //keyAt() gets the key
        }
    }
</code></pre>
"
"4894885","26412266","0","<p>Here is a method that test all the cases</p>

<pre><code>    String getExtension(String fileName){
        final String emptyExtension = """";
        if(fileName == null){
            return emptyExtension;
        }
        int index = fileName.lastIndexOf(""."");
        if(index == -1){
            return emptyExtension;
        }
        return fileName.substring(index + 1);
    }
</code></pre>
"
"4165414","26417291","0","<p>This may be old but I got this working by implenting a custom class </p>

<pre><code>public class DismissKeyboardListener implements OnClickListener {

    Activity mAct;

    public DismissKeyboardListener(Activity act) {
        this.mAct = act;
    }

    @Override
    public void onClick(View v) {
        if ( v instanceof ViewGroup ) {
            hideSoftKeyboard( this.mAct );
        }
    }       
}

public void hideSoftKeyboard(Activity activity) {
        InputMethodManager imm = (InputMethodManager)
        getSystemService(Activity.INPUT_METHOD_SERVICE);
        imm.toggleSoftInput(InputMethodManager.HIDE_IMPLICIT_ONLY, 0);
}
</code></pre>

<p>the best practice here is to create a Helper class and every container Relative / Linear Layouts should implement this. </p>

<p>**** Take note only the main Container should implement this class (For optimization) ****</p>

<p>and implement it like this :</p>

<pre><code>Parent.setOnClickListener( new DismissKeyboardListener(this) ); 
</code></pre>

<p>the keyword this is for Activity. so if you are on fragment you use like getActivity();</p>

<p>---thumbs up if it help you... 
--- cheers Ralph ---</p>
"
"2150078","26428753","0","<p>My answer is basically the same as Kachi's answer, but I wrapped it into a nice helper class to clean up the way it's used throughout my app.</p>

<pre><code>import android.app.Activity;
import android.app.Fragment;
import android.graphics.Rect;
import android.view.View;
import android.view.ViewTreeObserver.OnGlobalLayoutListener;

/**
 * Detects Keyboard Status changes and fires events only once for each change
 */
public class KeyboardStatusDetector {
    KeyboardVisibilityListener visibilityListener;

    boolean keyboardVisible = false;

    public void registerFragment(Fragment f) {
        registerView(f.getView());
    }

    public void registerActivity(Activity a) {
        registerView(a.getWindow().getDecorView().findViewById(android.R.id.content));
    }

    public KeyboardStatusDetector registerView(final View v) {
        v.getViewTreeObserver().addOnGlobalLayoutListener(new OnGlobalLayoutListener() {
            @Override
            public void onGlobalLayout() {
                Rect r = new Rect();
                v.getWindowVisibleDisplayFrame(r);

                int heightDiff = v.getRootView().getHeight() - (r.bottom - r.top);
                if (heightDiff &gt; 100) { // if more than 100 pixels, its probably a keyboard...
                    /** Check this variable to debounce layout events */
                    if(!keyboardVisible) {
                        keyboardVisible = true;
                        if(visibilityListener != null) visibilityListener.onVisibilityChanged(true);
                    }
                } else {
                    if(keyboardVisible) {
                        keyboardVisible = false;
                        if(visibilityListener != null) visibilityListener.onVisibilityChanged(false);
                    }
                }
            }
        });

        return this;
    }

    public KeyboardStatusDetector setVisibilityListener(KeyboardVisibilityListener listener) {
        visibilityListener = listener;
        return this;
    }

    public static interface KeyboardVisibilityListener {
        public void onVisibilityChanged(boolean keyboardVisible);
    }
}
</code></pre>

<p>You can use this to detect keyboard changes anywhere throughout the app like this:</p>

<pre><code>    new KeyboardStatusDetector()
            .registerFragment(fragment)  //register to a fragment 
            .registerActivity(activity)  //or register to an activity
            .registerView(view)          //or register to a view
            .setVisibilityListener(new KeyboardVisibilityListener() {
                @Override
                public void onVisibilityChanged(boolean keyboardVisible) {
                    if(keyboardVisible) {
                       //Do stuff for keyboard visible
                    }else {
                       //Do stuff for keyboard hidden
                    }
                }
            });
</code></pre>

<p>Note: only use one of the ""register"" calls.  They all work the same and are only there for convenience</p>
"
"2973270","26453133","0","<p>@majinboo's answer is revised for performance and memory management. Any more than one font need related Activity can use this Font class by giving the constructor itself as a parameter.</p>

<pre><code>@Override
public void onCreate(Bundle savedInstanceState)
{
    Font font = new Font(this);
}
</code></pre>

<p>Revised Fonts class is as below:</p>

<pre><code>public class Fonts
{
    private HashMap&lt;AssetTypefaces, Typeface&gt; hashMapFonts;

    private enum AssetTypefaces
    {
        RobotoLight,
        RobotoThin,
        RobotoCondensedBold,
        RobotoCondensedLight,
        RobotoCondensedRegular
    }

    public Fonts(Context context)
    {
        AssetManager mngr = context.getAssets();

        hashMapFonts = new HashMap&lt;AssetTypefaces, Typeface&gt;();
        hashMapFonts.put(AssetTypefaces.RobotoLight, Typeface.createFromAsset(mngr, ""fonts/Roboto-Light.ttf""));
        hashMapFonts.put(AssetTypefaces.RobotoThin, Typeface.createFromAsset(mngr, ""fonts/Roboto-Thin.ttf""));
        hashMapFonts.put(AssetTypefaces.RobotoCondensedBold, Typeface.createFromAsset(mngr, ""fonts/RobotoCondensed-Bold.ttf""));
        hashMapFonts.put(AssetTypefaces.RobotoCondensedLight, Typeface.createFromAsset(mngr, ""fonts/RobotoCondensed-Light.ttf""));
        hashMapFonts.put(AssetTypefaces.RobotoCondensedRegular, Typeface.createFromAsset(mngr, ""fonts/RobotoCondensed-Regular.ttf""));
    }

    private Typeface getTypeface(String fontName)
    {
        try
        {
            AssetTypefaces typeface = AssetTypefaces.valueOf(fontName);
            return hashMapFonts.get(typeface);
        }
        catch (IllegalArgumentException e)
        {
            // e.printStackTrace();
            return Typeface.DEFAULT;
        }
    }

    public void setupLayoutTypefaces(View v)
    {
        try
        {
            if (v instanceof ViewGroup)
            {
                ViewGroup vg = (ViewGroup) v;
                for (int i = 0; i &lt; vg.getChildCount(); i++)
                {
                    View child = vg.getChildAt(i);
                    setupLayoutTypefaces(child);
                }
            }
            else if (v instanceof TextView)
            {
                ((TextView) v).setTypeface(getTypeface(v.getTag().toString()));
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
            // ignore
        }
    }
}
</code></pre>
"
"2459916","26471808","0","<p>In the v21 of the Support library there is now a solution to this, its called <a href=""http://developer.android.com/reference/android/support/v4/graphics/drawable/RoundedBitmapDrawable.html"" rel=""nofollow"">RoundedBitmapDrawable</a></p>

<p>its basically just like a normal ImageView except you give it a corner radius for the clipping with</p>

<pre><code>setCornerRadius(float cornerRadius)
</code></pre>
"
"3624280","26484268","0","<p><strong>Store in SharedPreferences</strong></p>

<pre><code>SharedPreferences preferences = getSharedPreferences(""temp"", getApplicationContext().MODE_PRIVATE);
Editor editor = preferences.edit();
editor.putString(""name"", name);
editor.commit();
</code></pre>

<p><strong>Fetch in SharedPreferences</strong></p>

<pre><code>SharedPreferences preferences=getSharedPreferences(""temp"", getApplicationContext().MODE_PRIVATE);
String name=preferences.getString(""name"",null);
</code></pre>

<p>Note: ""temp"" is sharedpreferences name and ""name"" is input value. if value does't exit then return null </p>
"
"3495890","26541557","0","<p>When we place <code>ListView</code> inside <code>ScrollView</code> two problems arise. One is <code>ScrollView</code> measures its children in UNSPECIFIED mode, so <code>ListView</code> sets its own height to accommodate only one item(I don't know why), another is <code>ScrollView</code> intercepts the touch event so <code>ListView</code> does not scrolls.</p>

<p>But we <em>can</em> place <code>ListView</code> inside <code>ScrollView</code> with some workaround. <a href=""http://durgadasss.blogspot.in/2014/10/scroll-inside-scrollthis-project-shows.html"" rel=""nofollow"">This post</a>, by me, explains the workaround. By this workaround we can also retain <code>ListView</code>'s recycling feature as well.</p>
"
"2169649","26571774","0","<p>Above Answers are correct. I faced an different issue where in HTC M8 my application crashes when selecting an image from gallery. I'm getting null value for image path. I fixed and optimized with the following solution. in onActivityResult method</p>

<pre><code>protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    if ((requestCode == RESULT_LOAD_IMAGE) &amp;&amp; (resultCode == RESULT_OK)) {
     if (data != null) {

            Uri selectedImageUri = null;
            selectedImageUri = data.getData();
            String[] filePathColumn = { MediaStore.Images.Media.DATA };

            Cursor imageCursor = mainActivity.getContentResolver().query(
                    selectedImageUri, filePathColumn, null, null, null);

            if (imageCursor == null) {
                return;
            }

            imageCursor.moveToFirst();
            int columnIndex = imageCursor.getColumnIndex(filePathColumn[0]);
            picturePath = imageCursor.getString(columnIndex);
            if (picturePath == null) {
                picturePath = selectedImageUri.getPath();
                String wholeID = DocumentsContract
                        .getDocumentId(selectedImage);

                // Split at colon, use second item in the array
                String id = wholeID.split("":"")[1];

                String[] column = { MediaStore.Images.Media.DATA };

                // where id is equal to
                String sel = MediaStore.Images.Media._ID + ""=?"";

                Cursor cursor = mainActivity.getContentResolver().query(
                        MediaStore.Images.Media.EXTERNAL_CONTENT_URI,
                        column, sel, new String[] { id }, null);

                columnIndex = cursor.getColumnIndex(column[0]);

                if (cursor.moveToFirst()) {
                    picturePath = cursor.getString(columnIndex);
                }

                cursor.close();
            }
            picturePathAbs = new File(picturePath).getAbsolutePath();
            imageCursor.close();
        }
</code></pre>

<p>}</p>
"
"3611457","26601009","0","<p>I have found a combination of existing rotation/orientation values are needed to cover the four possibilities; there's the portrait/landscape values and the natural orientation of the device.  Let's say the devices' natural orientation will have a rotation value of 0 degrees when the screen is in it's ""natural"" portrait or landscape orientation.  Similarly, there will be a rotation value of 90 degrees when it's in landscape or portrait (notice it's opposite of the orientation @ 0 degrees).  So the rotation values that are not 0 or 90 degrees will imply ""Reverse"" orientation.  Ok, here's some code:</p>

<pre><code>public enum eScreenOrientation 
{
PORTRAIT (ActivityInfo.SCREEN_ORIENTATION_PORTRAIT),
LANDSCAPE (ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE),
PORTRAIT_REVERSE (ActivityInfo.SCREEN_ORIENTATION_REVERSE_PORTRAIT),
LANDSCAPE_REVERSE (ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE),
UNSPECIFIED_ORIENTATION (ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED);

    public final int activityInfoValue;

    eScreenOrientation ( int orientation )
    {
        activityInfoValue = orientation;
    }
}



public eScreenOrientation currentScreenOrientation ( )
{
    final int rotation = ((WindowManager) getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay().getRotation();

    final int orientation = getResources().getConfiguration().orientation;
    switch ( orientation ) 
    {
    case Configuration.ORIENTATION_PORTRAIT:
        if ( rotation == Surface.ROTATION_0 || rotation == Surface.ROTATION_90 )
            return eScreenOrientation.PORTRAIT;
        else
            return eScreenOrientation.PORTRAIT_REVERSE;
    case Configuration.ORIENTATION_LANDSCAPE:
        if ( rotation == Surface.ROTATION_0 || rotation == Surface.ROTATION_90 )
            return eScreenOrientation.LANDSCAPE;
        else
            return eScreenOrientation.LANDSCAPE_REVERSE;
    default:
        return eScreenOrientation.UNSPECIFIED_ORIENTATION;
    }
}

public void lockScreenOrientation ( )
    throws UnsupportedDisplayException
{
    eScreenOrientation currentOrientation = currentScreenOrientation( );
    if ( currentOrientation == eScreenOrientation.UNSPECIFIED_ORIENTATION )
        throw new UnsupportedDisplayException(""Unable to lock screen - unspecified orientation"");
    else
        setRequestedOrientation( currentOrientation.activityInfoValue );
}

public void unlockScreenOrientation (  )
{
    setRequestedOrientation( ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED );
}
</code></pre>
"
"6176391","26662583","0","<p>I was having a similar problem and finally got it to work. My scroll view contains a series of customized buttons, followed by an <code>EditText</code> (which normally has focus, but I don't want it to be losing focus). Any time the buttons were clicked, the scroll view auto-scrolled to the focused <code>EditText</code>.  Overriding <code>public boolean requestChildRectangleOnScreen(final View child, final Rect rectangle, final boolean immediate)</code> and always returning <code>false</code> (default behavior of a <code>ViewGroup</code>) did the trick. Hope it helps with your situation too.</p>
"
"6343166","26662873","0","<p>You are facing this Exception because you are using a network operation on main thread,
You need to run internet activities on a thread separate from main (UI) thread, you can do that by wrapping your code in the following block:Simply use your code in the ""run"" method, this error will be gone, no one is suggested this approach.</p>

<pre><code> runOnUiThread(new Runnable(){
            public void run() {
                //use your code here
               try{
                URL url = new URL(urlToRssFeed);
                SAXParserFactory factory = SAXParserFactory.newInstance();
                SAXParser parser = factory.newSAXParser();
                XMLReader xmlreader = parser.getXMLReader();
                RssHandler theRSSHandler = new RssHandler();
                xmlreader.setContentHandler(theRSSHandler);
                InputSource is = new InputSource(url.openStream());
                xmlreader.parse(is);
                return theRSSHandler.getFeed();
                }catch(Exception e){
                e.printStackTrace();
                }
            }
        });
</code></pre>
"
"4605527","26677222","0","<p>Probably the best way if you have the dimension inside values/dimen is to get the dimension directly from getDimension() method, it will return you the dimension already converted into pixel value.</p>

<pre><code>context.getResources().getDimension(R.dimen.my_dimension)
</code></pre>
"
"4946295","26683836","0","<p>This was my solution, my <code>ImageView</code> grows from <code>100%</code> to <code>200%</code> and return to his original size, using two animation files inside <code>res/anim/</code> folder</p>

<p><strong>anim_grow.xml</strong></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;set xmlns:android=""http://schemas.android.com/apk/res/android""
 android:interpolator=""@android:anim/accelerate_interpolator""&gt;
 &lt;scale
  android:fromXScale=""1.0""
  android:toXScale=""2.0""
  android:fromYScale=""1.0""
  android:toYScale=""2.0""
  android:duration=""3000""
  android:pivotX=""50%""
  android:pivotY=""50%""
  android:startOffset=""2000"" /&gt;
&lt;/set&gt;
</code></pre>

<p><strong>anim_shrink.xml</strong></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;set xmlns:android=""http://schemas.android.com/apk/res/android""
 android:interpolator=""@android:anim/accelerate_interpolator""&gt;
 &lt;scale
  android:fromXScale=""2.0""
  android:toXScale=""1.0""
  android:fromYScale=""2.0""
  android:toYScale=""1.0""
  android:duration=""3000""
  android:pivotX=""50%""
  android:pivotY=""50%""
  android:startOffset=""2000"" /&gt;
&lt;/set&gt;
</code></pre>

<p>Send an <code>ImageView</code> to my method <code>setAnimationGrowShrink()</code></p>

<pre><code>ImageView img1 = (ImageView)findViewById(R.id.image1);
setAnimationGrowShrink(img1);
</code></pre>

<p><code>setAnimationGrowShrink()</code> method:</p>

<pre><code>private void setAnimationGrowShrink(final ImageView imgV){
    final Animation animationEnlarge = AnimationUtils.loadAnimation(getApplicationContext(), R.anim.anim_grow);
    final Animation animationShrink = AnimationUtils.loadAnimation(getApplicationContext(), R.anim.anim_shrink);

    imgV.startAnimation(animationEnlarge);

    animationEnlarge.setAnimationListener(new AnimationListener() {         
        @Override
        public void onAnimationStart(Animation animation) {}

        @Override
        public void onAnimationRepeat(Animation animation) {}

        @Override
        public void onAnimationEnd(Animation animation) {
            imgV.startAnimation(animationShrink);
        }
    });

    animationShrink.setAnimationListener(new AnimationListener() {          
        @Override
        public void onAnimationStart(Animation animation) {}

        @Override
        public void onAnimationRepeat(Animation animation) {}

        @Override
        public void onAnimationEnd(Animation animation) {
            imgV.startAnimation(animationEnlarge);
        }
    });

}
</code></pre>
"
"2591036","26686825","-1","<p>You can use the following code to achieve this:</p>

<pre><code>requestWindowFeature(Window.FEATURE_NO_TITLE); 
setContentView(R.layout.activity_main);
</code></pre>
"
"11281010","11281048","21","<p>I guess to use the external sdcard you need to use this:</p>

<pre><code>new File(""/mnt/external_sd/"")
</code></pre>

<p>OR </p>

<pre><code>new File(""/mnt/extSdCard/"")
</code></pre>

<p>in your case...</p>

<p>in replace of <code>Environment.getExternalStorageDirectory()</code></p>

<p>Works for me. You should check whats in the directory mnt first and work from there..</p>

<hr>

<p>You should use some type of selection method to choose which sdcard to use:</p>

<pre><code>File storageDir = new File(""/mnt/"");
if(storageDir.isDirectory()){
    String[] dirList = storageDir.list();
    //TODO some type of selecton method?
}
</code></pre>
"
"11444238","11493752","84","<h1>TL;DR: 1-2-3 dead easy steps for a global solution:</h1>

<ol>
<li>Download <a href=""https://docs.google.com/open?id=0B-Q8sq_qCRv3V1NEbk5kTlJXSm8"">this</a> class.</li>
<li>Implement <code>OnDateSetListener</code> in your activity (or change the class to suit your needs).</li>
<li><p>Trigger the dialog with this code (in this sample, I use it inside a <code>Fragment</code>):</p>

<pre><code>Bundle b = new Bundle();
b.putInt(DatePickerDialogFragment.YEAR, 2012);
b.putInt(DatePickerDialogFragment.MONTH, 6);
b.putInt(DatePickerDialogFragment.DATE, 17);
DialogFragment picker = new DatePickerDialogFragment();
picker.setArguments(b);
picker.show(getActivity().getSupportFragmentManager(), ""frag_date_picker"");
</code></pre></li>
</ol>

<p><strong>And that's all it takes!</strong> The reason I still keep my answer as ""accepted"" is because I still prefer my solution since it has a very small footprint in client code, it addresses the fundamental issue (the listener being called in the framework class), works fine across config changes and it routes the code logic to the default implementation in previous Android versions not plagued by this bug (see class source).</p>

<h1><em>Original answer (kept for historical and didactic reasons):</em></h1>

<p><em>--- <strong>Note: I'm using a temporary workaround. See end of answer.</strong> ---</em></p>

<h1>Bug source</h1>

<p>OK, looks like it's indeed a bug and someone else already filled it. <a href=""http://code.google.com/p/android/issues/detail?id=34833"">Issue 34833</a>.</p>

<p>I've found that the problem is possibly in <code>DatePickerDialog.java</code>. Where it reads:</p>

<pre><code>private void tryNotifyDateSet() {
    if (mCallBack != null) {
        mDatePicker.clearFocus();
        mCallBack.onDateSet(mDatePicker, mDatePicker.getYear(),
                mDatePicker.getMonth(), mDatePicker.getDayOfMonth());
    }
}

@Override
protected void onStop() {
    tryNotifyDateSet();
    super.onStop();
}
</code></pre>

<p>I'd guess it could have been:</p>

<pre><code>@Override
protected void onStop() {
    // instead of the full tryNotifyDateSet() call:
    if (mCallBack != null) mDatePicker.clearFocus();
    super.onStop();
}
</code></pre>

<p>Now if someone can tell me how I can propose a patch/bug report to Android, I'd be glad to. Meanwhile, I suggested a possible fix (simple) as an attached version of <code>DatePickerDialog.java</code> in the Issue there.</p>

<h1>Concept to avoid the bug</h1>

<p><strong>Set the listener to <code>null</code> in the constructor and create your own <code>BUTTON_POSITIVE</code> button later on</strong>. That's it, details below.</p>

<p>The problem happens because <code>DatePickerDialog.java</code>, as you can see in the source, calls a global variable (<code>mCallBack</code>) that stores the listener that was passed in the constructor:</p>

<pre><code>    /**
 * @param context The context the dialog is to run in.
 * @param callBack How the parent is notified that the date is set.
 * @param year The initial year of the dialog.
 * @param monthOfYear The initial month of the dialog.
 * @param dayOfMonth The initial day of the dialog.
 */
public DatePickerDialog(Context context,
        OnDateSetListener callBack,
        int year,
        int monthOfYear,
        int dayOfMonth) {
    this(context, 0, callBack, year, monthOfYear, dayOfMonth);
}

    /**
 * @param context The context the dialog is to run in.
 * @param theme the theme to apply to this dialog
 * @param callBack How the parent is notified that the date is set.
 * @param year The initial year of the dialog.
 * @param monthOfYear The initial month of the dialog.
 * @param dayOfMonth The initial day of the dialog.
 */
public DatePickerDialog(Context context,
        int theme,
        OnDateSetListener callBack,
        int year,
        int monthOfYear,
        int dayOfMonth) {
    super(context, theme);

    mCallBack = callBack;
    // ... rest of the constructor.
}
</code></pre>

<p>So, the trick is to provide a <code>null</code> listener to be stored as the listener, and then roll your own set of buttons (below is the original code from #1, updated):</p>

<pre><code>    DatePickerDialog picker = new DatePickerDialog(
        this,
        null, // instead of a listener
        2012, 6, 15);
    picker.setCancelable(true);
    picker.setCanceledOnTouchOutside(true);
    picker.setButton(DialogInterface.BUTTON_POSITIVE, ""OK"",
        new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                Log.d(""Picker"", ""Correct behavior!"");
            }
        });
    picker.setButton(DialogInterface.BUTTON_NEGATIVE, ""Cancel"", 
        new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                Log.d(""Picker"", ""Cancel!"");
            }
        });
picker.show();
</code></pre>

<p>Now it will work because of the possible correction that I posted above. </p>

<p><strong>And since <code>DatePickerDialog.java</code> checks for a <code>null</code> whenever it reads <code>mCallback</code> (<a href=""http://grepcode.com/search?query=DatePickerDialog&amp;start=0&amp;entity=type&amp;n="">since the days of API 3/1.5 it seems</a> --- can't check Honeycomb of course), it won't trigger the exception.</strong></p>

<p>At first I was afraid of not calling the <code>clearFocus()</code>, but I've tested here and the Log lines were clean. So that line I proposed may not even be necessary after all, but I don't know.</p>

<h1>Compatibility with previous API levels <em>(edited)</em></h1>

<p>As I pointed in the comment below, that was a concept, and you can <a href=""https://docs.google.com/open?id=0B-Q8sq_qCRv3V1NEbk5kTlJXSm8"">download the class I'm using from my Google Drive account</a> or use <a href=""http://paste.ubuntu.com/6890703/"">DatePickerDialogFragment</a>. </p>

<p>I took a few assumptions (button names etc.) that are suitable for my needs because I wanted to reduce boilerplate code in client classes to a minimum. Full usage example:</p>

<pre><code>class YourActivity extends SherlockFragmentActivity implements OnDateSetListener

// ...

Bundle b = new Bundle();
b.putInt(DatePickerDialogFragment.YEAR, 2012);
b.putInt(DatePickerDialogFragment.MONTH, 6);
b.putInt(DatePickerDialogFragment.DATE, 17);
DialogFragment picker = new DatePickerDialogFragment();
picker.setArguments(b);
picker.show(getActivity().getSupportFragmentManager(), ""fragment_date_picker"");
</code></pre>
"
"11321129","11965637","0","<p>I tried and find one solution for this. I think it will help you..</p>

<pre><code>searchView.setBackgroundColor(Color.WHITE);
</code></pre>

<p><img src=""http://i.stack.imgur.com/Hrlml.png"" alt=""enter image description here""></p>
"
"11444238","12345118","12","<p>I'm gonna add my own riff on the solution David Cesarino posted, in case you're not using Fragments, and want an easy way to fix it in all versions (2.1 thru 4.1):</p>

<pre><code>public class FixedDatePickerDialog extends DatePickerDialog {
  //I use a Calendar object to initialize it, but you can revert to Y,M,D easily
  public FixedDatePickerDialog(Calendar dateToShow, Context context, OnDateSetListener callBack) {
    super(context, null, dateToShow.get(YEAR), dateToShow.get(MONTH), dateToShow.get(DAY_OF_MONTH));
    initializePicker(callBack);
  }

  public FixedDatePickerDialog(Calendar dateToShow, Context context, int theme,
    OnDateSetListener callBack) {
    super(context, theme, null, dateToShow.get(YEAR), dateToShow.get(MONTH), dateToShow.get(DAY_OF_MONTH));
    initializePicker(callBack);
  }

  private void initializePicker(final OnDateSetListener callback) {
    try {
      //If you're only using Honeycomb+ then you can just call getDatePicker() instead of using reflection
      Field pickerField = DatePickerDialog.class.getDeclaredField(""mDatePicker"");
      pickerField.setAccessible(true);
      final DatePicker picker = (DatePicker) pickerField.get(this);
      this.setCancelable(true);
      this.setButton(DialogInterface.BUTTON_NEGATIVE, getContext().getText(android.R.string.cancel), (OnClickListener) null);
      this.setButton(DialogInterface.BUTTON_POSITIVE, getContext().getText(android.R.string.ok),
          new DialogInterface.OnClickListener() {
              @Override
              public void onClick(DialogInterface dialog, int which) {
                picker.clearFocus(); //Focus must be cleared so the value change listener is called
                callback.onDateSet(picker, picker.getYear(), picker.getMonth(), picker.getDayOfMonth());
              }
          });
    } catch (Exception e) { /* Reflection probably failed*/ }
  }
}
</code></pre>
"
"11444238","12510563","0","<p><br>Try the below concepts.
<br></p>

<pre><code>DatePickerDialog picker = new DatePickerDialog(
        this,
        new OnDateSetListener() {
            @Override
            public void onDateSet(DatePicker v, int y, int m, int d) {
                Log.d(""Picker"", ""Set!"");
            }
        },
        2012, 6, 15);
picker.show();
</code></pre>

<p><br>the onDateSet() method calls twice (if u are checking in emulator.it calls twice.If are using real device then it will call correctly single time.If you are using emulator then use the counter.if you are working in real device then ignore counter variable.For real device its working for me.)
<br>when user clicks the button in DatePickerDialog .<br>for this you should maintain a counter value and nothing do when the mothod calls first time and perform the operation when the method calls 2nd time.
<br> Refer the below coding snippets</p>

<pre><code>   static int counter=0;       //Counter will be declared globally.

    DatePickerDialog picker = new DatePickerDialog(
            this,
            new OnDateSetListener() {
                @Override
                public void onDateSet(DatePicker v, int y, int m, int d) {

                   counter++;
                   if(counter==1) return;
                   counter=0;
                   //Do the operations here

                }
            },
            2012, 6, 15);
    picker.show();
</code></pre>

<p><br>
<br>For cancelling datepicker dilalog its working for me.For emulator its not wokring
<br></p>

<pre><code>DialogInterface.OnClickListener dialogOnClickListener=new DialogInterface.OnClickListener()
        {

            @Override
            public void onClick(DialogInterface dialog, int which) {
                // TODO Auto-generated method stub

                if(which==Dialog.BUTTON_NEGATIVE)
                {
                    Log.i(tagName, ""dialog negative button clicked"");
                    dialog.dismiss();
                }

            }

        };

        mDatePickerDialog.setButton(Dialog.BUTTON_NEGATIVE, ""Cancel"", dialogOnClickListener);
</code></pre>

<p><br>Its working for me for a real device.But for emulator its not working correctly.I think its an android emulator bug.</p>
"
"11444238","12737234","4","<p>My simple solution. When you want to get it firing again just run ""resetFired"" (say when opening the dialog again).</p>

<pre><code>private class FixedDatePickerDialogListener implements DatePickerDialog.OnDateSetListener{
    private boolean fired = false;

    public void resetFired(){
        fired = false;
    }

    public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {
        if (fired) {
            Log.i(""DatePicker"", ""Double fire occurred."");
            return;
        } 
        fired = true;//first time fired
    }
}
</code></pre>
"
"11321129","12931048","3","<p>If you base your app theme on the holo theme you will get a white instead of a black text in your SearchView</p>

<p><code>&lt;style name=""Theme.MyTheme"" parent=""android:Theme.Holo""&gt;</code></p>

<p>I did not find any other way to change the textcolor of the searchview without using dirty hacks.</p>
"
"11281010","13395801","1","<p>that's not true. /mnt/sdcard/external_sd can exist even if the SD card is not mounted. your application will crash when you try to write to /mnt/sdcard/external_sd when it's not mounted.</p>

<p>you need to check if the SD card is mounted first using:</p>

<pre><code>boolean isSDPresent = Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED);
</code></pre>
"
"11281010","13648873","21","<p>I have a variation on a solution I found <a href=""http://mono-for-android.1047100.n5.nabble.com/detect-SD-Card-path-tp5710218p5710250.html"">here</a></p>

<pre><code>public static HashSet&lt;String&gt; getExternalMounts() {
    final HashSet&lt;String&gt; out = new HashSet&lt;String&gt;();
    String reg = ""(?i).*vold.*(vfat|ntfs|exfat|fat32|ext3|ext4).*rw.*"";
    String s = """";
    try {
        final Process process = new ProcessBuilder().command(""mount"")
                .redirectErrorStream(true).start();
        process.waitFor();
        final InputStream is = process.getInputStream();
        final byte[] buffer = new byte[1024];
        while (is.read(buffer) != -1) {
            s = s + new String(buffer);
        }
        is.close();
    } catch (final Exception e) {
        e.printStackTrace();
    }

    // parse output
    final String[] lines = s.split(""\n"");
    for (String line : lines) {
        if (!line.toLowerCase(Locale.US).contains(""asec"")) {
            if (line.matches(reg)) {
                String[] parts = line.split("" "");
                for (String part : parts) {
                    if (part.startsWith(""/""))
                        if (!part.toLowerCase(Locale.US).contains(""vold""))
                            out.add(part);
                }
            }
        }
    }
    return out;
}
</code></pre>

<p>The original method was tested and worked with</p>

<ul>
<li>Huawei X3 (stock)</li>
<li>Galaxy S2 (stock)</li>
<li>Galaxy S3 (stock)</li>
</ul>

<p>I'm not certain which android version these were on when they were tested.</p>

<p>I've tested my modified version with</p>

<ul>
<li>Moto Xoom 4.1.2 (stock)</li>
<li>Galaxy Nexus (cyanogenmod 10) using an otg cable</li>
<li>HTC Incredible (cyanogenmod 7.2) this returned both the internal and external. This device is kinda an oddball in that its internal largely goes unused as getExternalStorage() returns a path to the sdcard instead.</li>
</ul>

<p>and some single storage devices that use an sdcard as their main storage</p>

<ul>
<li>HTC G1 (cyanogenmod 6.1)</li>
<li>HTC G1 (stock)</li>
<li>HTC Vision/G2 (stock)</li>
</ul>

<p>Excepting the Incredible all these devices only returned their removable storage. There are probably some extra checks I should be doing, but this is at least a bit better than any solution I've found thus far.</p>
"
"13739785","13739821","5","<p>Arrays in Java are not <em>dynamic</em>, you can use an <code>ArrayList</code> instead.</p>
"
"13739785","13739822","6","<p>You don't. </p>

<p>Arrays can not be resized. </p>

<p>You would need to create a new (smaller) array, and copy the elements you wished to preserve into it.</p>

<p>A better Idea would be to use a <code>List</code> implementation that was dynamic. An <code>ArrayList&lt;Integer&gt;</code> for example.</p>
"
"13739785","13739827","0","<p>You can do it using the following method..</p>

<pre><code>public static String[] removeElements(String[] input, String deleteMe) {
List result = new LinkedList();

for(String item : input)
    if(!deleteMe.equals(item))
        result.add(item);

return result.toArray(input);
}
</code></pre>

<p>OR you could use <a href=""http://developer.oesf.biz/em/developer/reference/durian/com/android/internal/util/ArrayUtils.html"" rel=""nofollow""><code>ArrayUtils</code></a>.</p>

<pre><code>array = ArrayUtils.removeElement(array, element)
</code></pre>
"
"13739785","13739852","2","<p>Try something like this</p>

<pre><code>int[] intAry = new int[5]; 

// populate array with 0 to 4  

for (int i=0; i &lt; intAry.length; i++) {  

  intAry[i] = i;  

}  

List&lt;Integer&gt; aList  = Arrays.asList(intAry); // change the array to a list of integers  

aList.remove(3); // remove the item 3 (4th index)  

aList.toArray(intAry); // convert list back to array  

System.out.println(""size of array="" + intAry.size()); // output array size should be 4  

for (int i=0; i &lt; intAry.length; i++) {  

  System.out.print(intAry[i] + "" ""); // should output ""0 1 2 4 ""  

}  
</code></pre>
"
"13739785","13739859","1","<p>You can copy the array elements that you want into a new array</p>

<pre><code> j = 0;
 for(int i= 0;i&lt;arr_fav.length;i++)
  {
   if(current_id != Integer.parseInt(arr_fav[i]))
 {
    arr_new[j++] = arr_fav[i];
 } }
</code></pre>
"
"13739785","13739875","4","<p>its better to use arraylist</p>

<pre><code>arr_fav = {""1"",""2"",""3""};
List&lt;String&gt; numlist = new ArrayList&lt;String&gt;();
for(int i= 0;i&lt;arr_fav.length;i++)
{
 if(current_id == Integer.parseInt(arr_fav[i]))
 {
   // No operation here 
 }
 else
 {
     numlist.add(arr_fav[i]);
 }
}
 arr_fav = numlist .toArray(new String[numlist .size()]);
</code></pre>
"
"13739785","13739885","2","<p>Use an <code>ArrayList</code> instead of an array.  It supports features like deleting any element, dynamic size, and many more.</p>

<pre><code>ArrayList&lt;String&gt; arr_fav_list = new ArrayList&lt;String&gt;();
arr_fav_list.addAll(arr_fav);
arr_fav_list.remove(1);
</code></pre>
"
"13739785","13739947","0","<p>set </p>

<pre><code>    array_fav[1]=array_fav[2];
    array_fav[2]=null;
</code></pre>
"
"13739785","13739970","0","<pre><code>    String[] arr_fav =
    { ""1"", ""2"", ""3"" };

    List&lt;String&gt; myList = Arrays.asList(arr_fav);

            String currentId = String.valueOf(current_id);
    for (int i = 0; i &lt; arr_fav.length; i++)
    {
        if (arr_fav[i].equals(currentId))
        {
            myList.remove(i);
        }
    }
</code></pre>
"
"13739785","13740035","1","<p>try this:</p>

<pre><code>    ArrayList&lt;String&gt; rm = new ArrayList&lt;String&gt;();
    rm .addAll(arr_fav);
    rm .remove(1);
</code></pre>
"
"13739785","13740040","0","<p>For simple arrays like this you can't do this in this way </p>

<p>here is the full sample code for this </p>

<pre><code>int current_id = 2;
        String[] arr_fav = { ""1"", ""2"", ""3"" };
        for (int i = 0; i &lt; arr_fav.length; i++) {
            if (current_id == Integer.parseInt(arr_fav[i])) {
                String[] arr_fav_tem = new String[arr_fav.length - 1];
                arr_fav[1] = null;
                int counter = 0;
                for (int j = 0; j &lt; arr_fav.length; j++) {
                    if (arr_fav[j] != null) {

                        arr_fav_tem[counter] = arr_fav[j];
                        counter++;
                    }

                }

                arr_fav = arr_fav_tem;

            }
        }

        for (int i = 0; i &lt; arr_fav.length; i++) {
            System.out.println(arr_fav[i]);
        }
</code></pre>
"
"13739785","13742624","0","<p>This will do the job ...</p>

<pre><code>List x = new ArrayList(Arrays.asList(arr_fav));
x.remove(String.valueOf(current_id));
arr_fav = x.toArray();
</code></pre>
"
"11321129","14099276","3","<p>Yes it is possible using fallowing method.</p>

<pre><code>public static EditText setHintEditText(EditText argEditText,String argHintMessage,boolean argIsRequire) {
    try{
    if(argIsRequire)
    {argHintMessage=""   ""+argHintMessage;
        //String text = ""&lt;font color=#8c8c8c&gt;""+argHintMessage+""&lt;/font&gt; &lt;font color=#cc0029&gt;*&lt;/font&gt;"";
        String text = ""&lt;font color=#8c8c8c&gt;""+argHintMessage+""&lt;/font&gt;"";
        argEditText.setHint(Html.fromHtml(text));
    }else{
    argEditText.setHint(argHintMessage);
    }
    }catch(Exception e){
        e.printStackTrace();
    }
    return argEditText;
}
</code></pre>

<p>Calling of this method look like this..</p>

<pre><code>metLoginUserName=(EditText)this.findViewById(R.id.etLoginUserName);
    metLoginPassword=(EditText)this.findViewById(R.id.etLoginPassword);

    /**Set the hint in username and password edittext*/
    metLoginUserName=HotSpotStaticMethod.setHintEditText(metLoginUserName, getString(R.string.hint_username),true);
    metLoginPassword=HotSpotStaticMethod.setHintEditText(metLoginPassword, getString(R.string.hint_password),true);
</code></pre>

<p>using it i have successfully add red color * mark in hint using this method.
You should change this method according to your requirement.
I hope its helpful to you ....:)</p>
"
"11321129","14364222","47","<p>Try something like this :
You would get a handle to the textview from the sdk and then change it since they don't expose it publicly.</p>

<pre><code>int id = searchView.getContext().getResources().getIdentifier(""android:id/search_src_text"", null, null);
TextView textView = (TextView) searchView.findViewById(id);
textView.setTextColor(Color.WHITE);
</code></pre>
"
"11281010","14371563","1","<p>refer to my code, hope helpful for you:</p>

<pre><code>    Runtime runtime = Runtime.getRuntime();
    Process proc = runtime.exec(""mount"");
    InputStream is = proc.getInputStream();
    InputStreamReader isr = new InputStreamReader(is);
    String line;
    String mount = new String();
    BufferedReader br = new BufferedReader(isr);
    while ((line = br.readLine()) != null) {
        if (line.contains(""secure"")) continue;
        if (line.contains(""asec"")) continue;

        if (line.contains(""fat"")) {//TF card
            String columns[] = line.split("" "");
            if (columns != null &amp;&amp; columns.length &gt; 1) {
                mount = mount.concat(""*"" + columns[1] + ""\n"");
            }
        } else if (line.contains(""fuse"")) {//internal storage
            String columns[] = line.split("" "");
            if (columns != null &amp;&amp; columns.length &gt; 1) {
                mount = mount.concat(columns[1] + ""\n"");
            }
        }
    }
    txtView.setText(mount);
</code></pre>
"
"11321129","14559964","3","<p>Use this one, it's right. :D</p>

<pre><code>AutoCompleteTextView searchText = (AutoCompleteTextView) searchView.findViewById(R.id.abs__search_src_text);
searchText.setHintTextColor(getResources().getColor(color.black));
searchText.setTextColor(getResources().getColor(color.black));
</code></pre>
"
"11321129","15160364","3","<p>I had this problem, and this works for me. </p>

<pre><code>@Override
public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.customer_menu, menu);
        SearchManager searchManager = (SearchManager) getSystemService(Context.SEARCH_SERVICE);
        SearchView searchView       = (SearchView) menu.findItem(R.id.menu_customer_search).getActionView();
        searchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));

        searchView.setOnQueryTextListener(this);

        //Applies white color on searchview text
        int id = searchView.getContext().getResources().getIdentifier(""android:id/search_src_text"", null, null);
        TextView textView = (TextView) searchView.findViewById(id);
        textView.setTextColor(Color.WHITE);

        return true;
}
</code></pre>
"
"11444238","15191076","5","<p>Until the bug will be fixed I suggest not to use DatePickerDialog or TimePickerDialog. Use custom made AlertDialog with TimePicker/DatePicker widget;</p>

<p>Change TimePickerDialog with;</p>

<pre><code>    final TimePicker timePicker = new TimePicker(this);
    timePicker.setIs24HourView(true);
    timePicker.setCurrentHour(20);
    timePicker.setCurrentMinute(15);

    new AlertDialog.Builder(this)
            .setTitle(""Test"")
            .setPositiveButton(android.R.string.ok, new OnClickListener() {

                @Override
                public void onClick(DialogInterface dialog, int which) {
                    Log.d(""Picker"", timePicker.getCurrentHour() + "":""
                            + timePicker.getCurrentMinute());
                }
            })
            .setNegativeButton(android.R.string.cancel,
                    new OnClickListener() {

                        @Override
                        public void onClick(DialogInterface dialog,
                                int which) {
                            Log.d(""Picker"", ""Cancelled!"");
                        }
                    }).setView(timePicker).show();
</code></pre>

<p>Change DatePickerDialog with;</p>

<pre><code>    final DatePicker datePicker = new DatePicker(this);
    datePicker.init(2012, 10, 5, null);
    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB) {
        datePicker.setCalendarViewShown(false);
    }

    new AlertDialog.Builder(this)
            .setTitle(""Test"")
            .setPositiveButton(android.R.string.ok, new OnClickListener() {

                @Override
                public void onClick(DialogInterface dialog, int which) {
                    Log.d(""Picker"", datePicker.getYear() + "" ""
                            + (datePicker.getMonth() + 1) + "" ""
                            + datePicker.getDayOfMonth());
                }
            })
            .setNegativeButton(android.R.string.cancel,
                    new OnClickListener() {

                        @Override
                        public void onClick(DialogInterface dialog,
                                int which) {
                            Log.d(""Picker"", ""Cancelled!"");
                        }
                    }).setView(datePicker).show();
</code></pre>
"
"11444238","15975836","-1","<p>I know this post has been here for almost a year but I thought I should post my findings.
You could still keep the listener(instead of setting it to mull) and still have this work as expected. The key is to implicitly set the ""OK"" or(and) the ""cancel"" buttons. I tested it and it works gratefully for me. The listener does not get fired twice.</p>

<p>Look at this example,</p>

<pre><code>private void setTime(){
final Calendar c = Calendar.getInstance();
int hour = c.get(Calendar.HOUR_OF_DAY);
int minute = c.get(Calendar.MINUTE);

final TimePickerDialog timepicker = new TimePickerDialog(this.getActivity(),
        timePickerListener,
        hour, 
        minute, 
        DateFormat.is24HourFormat(getActivity()));

timepicker.setButton(DialogInterface.BUTTON_POSITIVE, ""Print"", new    
    android.content.DialogInterface.OnClickListener(){
        @Override
        public void onClick(DialogInterface dialog,int which) {
            print = true;
            timepicker.dismiss();           
        }
});

timepicker.setButton(DialogInterface.BUTTON_NEGATIVE, ""Cancel"", new 
    android.content.DialogInterface.OnClickListener(){
        @Override
        public void onClick(DialogInterface dialog,int which){
            print = false;
            timepicker.dismiss();       
        }
});

timepicker.setCancelable(false);
timepicker.show();
}
</code></pre>
"
"16143562","16143606","19","<p>Try this</p>

<pre><code>if(gender.equals(""Male""))
 salutation =""Mr."";
if(gender.equals(""Female""))
 salutation =""Ms."";
</code></pre>

<p>Also remove <code>;</code>(semi-colon ) in your if statement</p>

<pre><code>if(gender.equals(g1));
</code></pre>

<p>In Java, one of the most common mistakes newcomers meet is using == to compare Strings. You have to remember, == compares the object references, not the content.</p>
"
"16143562","16143619","2","<p>try this </p>

<pre><code>String g1=""Male"";
    String g2=""Female"";
    if(gender.equals(g1))
       salutation =""Mr."";
    if(gender.equals(g2))
       salutation =""Ms."";
</code></pre>

<p>you were ending your if statement  <code>if(gender.equals(g1));</code> &lt;&lt;--- here by adding "";""</p>
"
"16143562","16143635","4","<p>In Java we don't compare string as you are doing above...
Here is String comparison...</p>

<pre><code>    if (gender.equalsIgnoreCase(""Male"")) {
        salutation = ""Mr."";
    } else if (gender.equalsIgnoreCase(""Female"")) {
        salutation = ""Ms."";
    }
</code></pre>
"
"16143562","16143639","0","<pre><code>if(gender.equals(g1)); &lt;---
if(gender == ""Female""); &lt;---
</code></pre>

<p>You have semicolon after if.REMOVE IT.</p>
"
"16143562","16143652","0","<p>This should work:    </p>

<pre><code>if(gender.equals(""Male"")){
 salutation =""Mr."";
}
else if(gender.equals(""Female"")){
 salutation =""Ms."";
}
</code></pre>

<p>Remember, not to use <code>;</code> after <code>if</code> statement.</p>
"
"16143562","16143697","2","<p>Your <code>gender == ""Male""</code> is actually comparing the object references for the object <code>gender</code> and a different object <code>Male</code>. What you have to use is the <code>.equals()</code> method to compare the value of the objects.</p>
"
"16143562","16143710","2","<pre><code>String g1=""Male"";
String g2=""Female"";
String salutation="""";
String gender=""Male"";
if(gender.toLowerCase().trim().equals(g1.toLowerCase().trim()));
   salutation =""Mr."";
if(gender.toLowerCase().trim().equals(g2.toLowerCase().trim()));
   salutation =""Ms."";
</code></pre>
"
"16143562","16143725","1","<p>try this.</p>

<pre><code>        String g1 = ""Male"";
        String g2 = ""Female"";
        String gender = ""Male"";
        String salutation = """";
        if (gender.equalsIgnoreCase(g1))

            salutation = ""Mr."";
        else if (gender.equalsIgnoreCase(g2))

            salutation = ""Ms."";
        System.out.println(""Welcome "" + salutation);
</code></pre>

<p>Output:</p>

<pre><code>Welcome Mr.
</code></pre>
"
"16143562","16143998","0","<p>Actually every code runs well here, but your probleme probably come from your <code>gender</code> variable. Did you try to do a simple <code>System.out.println(gender);</code> before the comparaison ?</p>
"
"16143562","16146139","0","<p>A if statement has to be opened by:</p>

<pre><code>    {
</code></pre>

<p>and closed by:</p>

<pre><code>    }
</code></pre>

<p>Example:</p>

<pre><code>    if(gender.equals(""Male"")) {
        salutation =""Mr."";
    }

    if(gender.equals(""Female"")) {
        salutation =""Ms."";
    }
</code></pre>

<p>Or I think this is even possible:</p>

<pre><code>    if(gender == ""Male"") {
        salutation =""Mr."";
    }

    if(gender == ""Female"") {
        salutation =""Ms."";
    }
</code></pre>
"
"11444238","16779155","3","<p>In case anyone wants a quick workaround, here's the code I used: </p>

<pre><code>public void showCustomDatePicker () {

final DatePicker mDatePicker = (DatePicker) getLayoutInflater().
        inflate(R.layout.date_picker_view, null);
//Set an initial date for the picker
final Calendar c = Calendar.getInstance();
int year = c.get(Calendar.YEAR);
int month = c.get(Calendar.MONTH);
int day = c.get(Calendar.DAY_OF_MONTH);
//Set the date now
mDatePicker.updateDate(year, month, day);

//create the dialog
AlertDialog.Builder mBuilder = new Builder(this);
//set the title
mBuilder.setTitle(getString(R.string.date_picker_title))
    //set our date picker
    .setView(mDatePicker)
    //set the buttons 
.setPositiveButton(android.R.string.ok, new OnClickListener() {

    @Override
    public void onClick(DialogInterface dialog, int which) {
        //whatever method you choose to handle the date changes
            //the important thing to know is how to retrieve the data from the picker
        handleOnDateSet(mDatePicker.getYear(), 
                mDatePicker.getMonth(), 
                mDatePicker.getDayOfMonth());
    }
})
.setNegativeButton(android.R.string.cancel, new OnClickListener() {

    @Override
    public void onClick(DialogInterface dialog, int which) {
        dialog.dismiss();
    }
})
//create the dialog and show it.
.create().show();
</code></pre>

<p>}</p>

<p>Where layout.date_picker_view is a simple layout resource with a DatePicker as it's only element: </p>

<pre><code>&lt;!xml version=""1.0"" encoding=""utf-8""&gt;
&lt;DatePicker xmlns:android=""http://schemas.android.com/apk/res/android""
android:id=""@+id/date_picker""
android:layout_width=""fill_parent""   
android:spinnersShown=""true"" 
android:calendarViewShown=""false""
android:layout_height=""fill_parent""/&gt;
</code></pre>

<p>Here's the <a href=""http://suspendedthoughts.com/2013/07/12/working-with-date-pickers/"" rel=""nofollow"">full tutorial</a> in case you are interested.</p>
"
"11444238","17084811","0","<p>A simple solution would be using a boolean to skip second run</p>

<pre><code>boolean isShow = false; // define global variable


// when showing time picker
TimePickerDialog timeDlg = new TimePickerDialog( this, new OnTimeSetListener()
            {

                @Override
                public void onTimeSet( TimePicker view, int hourOfDay, int minute )
                {
                    if ( isShow )
                    {
                        isShow = false;
                        // your code
                    }

                }
            }, 8, 30, false );

timeDlg.setButton( TimePickerDialog.BUTTON_NEGATIVE, ""Cancel"", new DialogInterface.OnClickListener()
            {
                @Override
                public void onClick( DialogInterface dialog, int which )
                {
                    isShow = false;
                }
            } );
timeDlg.setButton( TimePickerDialog.BUTTON_POSITIVE, ""Set"", new DialogInterface.OnClickListener()
            {
                @Override
                public void onClick( DialogInterface dialog, int which )
                {
                    isShow = true;
                }
            } );

timeDlg.show();
</code></pre>
"
"11281010","17289911","5","<p>Thanks for the clues provided by you guys, especially @SmartLemon, I got the solution. In case someone else need it, I put my final solution here( to find the first listed external SD card ):</p>

<pre><code>public File getExternalSDCardDirectory()
{
    File innerDir = Environment.getExternalStorageDirectory();
    File rootDir = innerDir.getParentFile();
    File firstExtSdCard = innerDir ;
    File[] files = rootDir.listFiles();
    for (File file : files) {
        if (file.compareTo(innerDir) != 0) {
            firstExtSdCard = file;
            break;
        }
    }
    //Log.i(""2"", firstExtSdCard.getAbsolutePath().toString());
    return firstExtSdCard;
}
</code></pre>

<p>If no external SD card there, then it returns the on board storage. I will use it if the sdcard is not exist, you may need to change it. </p>
"
"11321129","17711254","0","<p>Change color of typed text:</p>

<pre><code>   ((EditText)((SearchView)findViewById(R.id.searchView)).findViewById(((SearchView)findViewById(R.id.searchView)).getContext().getResources().getIdentifier(""android:id/search_src_text"", null, null))).setTextColor(Color.WHITE);
</code></pre>

<p>Change color of hint text:</p>

<pre><code>    ((EditText)((SearchView)findViewById(R.id.searchView)).findViewById(((SearchView)findViewById(R.id.searchView)).getContext().getResources().getIdentifier(""android:id/search_src_text"", null, null))).setHintTextColor(Color.LTGRAY);
</code></pre>
"
"11444238","17969768","0","<p>You can override onCancel() and use setOnDismissListener() to detect negative user actions. And with a DatePickerDialog.BUTTON_POSITIVE you know that the user wants to set a new date.</p>

<pre><code> DatePickerDialog mDPD = new DatePickerDialog(
                      getActivity(), mOnDateSetListener, mYear, mMonth, mDay);
 mDPD.setOnCancelListener(new OnCancelListener() {
    @Override
    public void onCancel(DialogInterface dialog) {
        // do something onCancek
        setDate = false;
    }
 });

 mDPD.setOnDismissListener(new OnDismissListener() {
    @Override
    public void onDismiss(DialogInterface arg0) {
        // do something onDismiss
        setDate = false;
    }
});

mDPD.setButton(DatePickerDialog.BUTTON_POSITIVE, ""Finish"", new DatePickerDialog.OnClickListener() {

    @Override
    public void onClick(DialogInterface dialog, int which) {
        // user set new date
        setDate = true;
    }
});
</code></pre>

<p>then check for setDate:</p>

<pre><code>public void onDateSet(DatePicker view, int year, int month, int day) {
    if(setDate){
        //do something with new date
    }
}
</code></pre>
"
"11444238","18554331","1","<p>The way I managed this situation was using a flag and overriding the onCancel and onDismiss methods. </p>

<p>onCancel gets called only when the user touches outside the dialog or the back button.
onDismiss always gets called</p>

<p>Setting a flag in the onCancel method can help filter in the onDismiss method the user's intent: cancel action or done action. Below some code that shows the idea.</p>

<pre><code>public class DatePickerDialogFragment extends DialogFragment implements DatePickerDialog.OnDateSetListener {

    private boolean cancelDialog = false;
    private int year;
    private int month;
    private int day;

    @Override
    public Dialog onCreateDialog(Bundle savedInstanceState) {
        DatePickerDialog dpd = new DatePickerDialog(getActivity(), this, year, month, day);
        return dpd;
    }

    public void setDatePickerDate(int year, int month, int day) {
        this.year = year;
        this.month = month;
        this.day = day;
    }

    @Override
    public void onCancel(DialogInterface dialog) {
        super.onCancel(dialog);
        cancelDialog = true;
    }

    @Override
    public void onDismiss(DialogInterface dialog) {
        super.onDismiss(dialog);
        if (!cancelDialog) {
          #put the code you want to execute if the user clicks the done button
        }
    }

    @Override
    public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {
        setDatePickerDate(year, monthOfYear, dayOfMonth);
    }
}
</code></pre>
"
"11444238","18782109","1","<p>There is a very simple workaround, if your application does not use the action bar. Note by the way, that some apps rely on this functionality to work, because cancelling out of the date picker has a special meaning (e.g. it clears the date field to an empty string, which for some apps is a valid and meaningful type of input) and using boolean flags to prevent the date from being set twice on OK will not help you in this case.</p>

<p>Re. the actual fix, you do not have to create new buttons or your own dialog.  The point is to be compatible with both, the older versions of Android, the buggy ones (4.<em>) and any future ones, though the latter is impossible to be sure about, of course.
Note that in Android 2.</em>, the onStop() for android.app.Dialog does nothing at all, and in 4.* it does mActionBar.setShowHideAnimationEnabled(false) which is important only if your app has an action bar.  The onStop() in DatePickerDialog, which inherits from Dialog, only contributes mDatePicker.clearFocus() (as of the latest fix to Android sources 4.3), which does not seem essential.</p>

<p>Therefore replacing onStop() with a method that does nothing should in many instances fix your app and ensure that it will remain so for the foreseeable future. Thus simply extend DatePickerDialog class with your own and override onStop() whit a dummy method.  You will also have to provide one or two constructors, as per your requirements.
Note also that one should not be tempted to try to overdo this fix by e.g. attempting to do something with the activity bar directly, as this would limit your compatibility to the latest versions of Android only.  Also note that it would be nice to be able to call the super for DatePicker's onStop() because the bug is only in the onStop() in DatePickerDialog itself, but not in DatePickerDialog's super class.  However, this would require you to call super.super.onStop() from your custom class, which Java will not let you do, as it goes against the encapsulation philosophy :)
Below is my little class that I used to verride DatePickerDialog.
I hope this comment would be useful for somebody.
Wojtek Jarosz</p>

<p>public class myDatePickerDialog extends DatePickerDialog {</p>

<pre><code>public myDatePickerDialog(Context context, OnDateSetListener callBack, int year, int monthOfYear, int dayOfMonth) {
    super(context, callBack, year, monthOfYear, dayOfMonth);
}

@Override
protected void onStop() {
    // Replacing tryNotifyDateSet() with nothing - this is a workaround for Android bug https://android-review.googlesource.com/#/c/61270/A

    // Would also like to clear focus, but we cannot get at the private members, so we do nothing.  It seems to do no harm...
    // mDatePicker.clearFocus();

    // Now we would like to call super on onStop(), but actually what we would mean is super.super, because
    // it is super.onStop() that we are trying NOT to run, because it is buggy.  However, doing such a thing
    // in Java is not allowed, as it goes against the philosophy of encapsulation (the Creators never thought
    // that we might have to patch parent classes from the bottom up :)
    // However, we do not lose much by doing nothing at all, because in Android 2.* onStop() in androd.app.Dialog actually
    // does nothing and in 4.* it does:
    //      if (mActionBar != null) mActionBar.setShowHideAnimationEnabled(false); 
    // which is not essential for us here because we use no action bar... QED
    // So we do nothing and we intend to keep this workaround forever because of users with older devices, who might
    // run Android 4.1 - 4.3 for some time to come, even if the bug is fixed in later versions of Android.
}
</code></pre>

<p>}</p>
"
"11281010","18871043","14","<p>I found more reliable way to get paths to all SD-CARDs in system.
This works on all Android versions and return paths to all storages (include emulated).</p>

<p>Works correctly on all my devices.</p>

<p>P.S.: Based on source code of Environment class.</p>

<pre><code>private static final Pattern DIR_SEPORATOR = Pattern.compile(""/"");

/**
 * Raturns all available SD-Cards in the system (include emulated)
 *
 * Warning: Hack! Based on Android source code of version 4.3 (API 18)
 * Because there is no standart way to get it.
 * TODO: Test on future Android versions 4.4+
 *
 * @return paths to all available SD-Cards in the system (include emulated)
 */
public static String[] getStorageDirectories()
{
    // Final set of paths
    final Set&lt;String&gt; rv = new HashSet&lt;String&gt;();
    // Primary physical SD-CARD (not emulated)
    final String rawExternalStorage = System.getenv(""EXTERNAL_STORAGE"");
    // All Secondary SD-CARDs (all exclude primary) separated by "":""
    final String rawSecondaryStoragesStr = System.getenv(""SECONDARY_STORAGE"");
    // Primary emulated SD-CARD
    final String rawEmulatedStorageTarget = System.getenv(""EMULATED_STORAGE_TARGET"");
    if(TextUtils.isEmpty(rawEmulatedStorageTarget))
    {
        // Device has physical external storage; use plain paths.
        if(TextUtils.isEmpty(rawExternalStorage))
        {
            // EXTERNAL_STORAGE undefined; falling back to default.
            rv.add(""/storage/sdcard0"");
        }
        else
        {
            rv.add(rawExternalStorage);
        }
    }
    else
    {
        // Device has emulated storage; external storage paths should have
        // userId burned into them.
        final String rawUserId;
        if(Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.JELLY_BEAN_MR1)
        {
            rawUserId = """";
        }
        else
        {
            final String path = Environment.getExternalStorageDirectory().getAbsolutePath();
            final String[] folders = DIR_SEPORATOR.split(path);
            final String lastFolder = folders[folders.length - 1];
            boolean isDigit = false;
            try
            {
                Integer.valueOf(lastFolder);
                isDigit = true;
            }
            catch(NumberFormatException ignored)
            {
            }
            rawUserId = isDigit ? lastFolder : """";
        }
        // /storage/emulated/0[1,2,...]
        if(TextUtils.isEmpty(rawUserId))
        {
            rv.add(rawEmulatedStorageTarget);
        }
        else
        {
            rv.add(rawEmulatedStorageTarget + File.separator + rawUserId);
        }
    }
    // Add all secondary storages
    if(!TextUtils.isEmpty(rawSecondaryStoragesStr))
    {
        // All Secondary SD-CARDs splited into array
        final String[] rawSecondaryStorages = rawSecondaryStoragesStr.split(File.pathSeparator);
        Collections.addAll(rv, rawSecondaryStorages);
    }
    return rv.toArray(new String[rv.size()]);
}
</code></pre>
"
"11281010","19073756","6","<p>I did the following to get acces to all the external sd cards.</p>

<p>With:</p>

<pre><code>File primaryExtSd=Environment.getExternalStorageDirectory();
</code></pre>

<p>you get the path to the primary external SD
Then with:</p>

<pre><code>File parentDir=new File(primaryExtSd.getParent());
</code></pre>

<p>you get the parent dir of the primary external storage, and it is also the parent of all the external sd. 
Now, you can list all the storage and select the one that you want.</p>

<p>Hope it is usefull.</p>
"
"11321129","19165723","0","<p>You can implement like this class to change font color and image :: </p>

<pre><code>import com.actionbarsherlock.widget.SearchView;
import com.actionbarsherlock.widget.SearchView.SearchAutoComplete;


public class MySearchView {
    public static SearchView getSearchView(Context context, String strHint) {
        SearchView searchView = new SearchView(context);
        searchView.setQueryHint(strHint);
        searchView.setFocusable(true);
        searchView.setFocusableInTouchMode(true);
        searchView.requestFocus();
        searchView.requestFocusFromTouch();

         ImageView searchBtn = (ImageView) searchView.findViewById(R.id.abs__search_button);
         searchBtn.setImageResource(R.drawable.ic_menu_search);


         ImageView searchBtnClose = (ImageView) searchView.findViewById(R.id.abs__search_close_btn);
         searchBtnClose.setImageResource(R.drawable.ic_cancel_search_bar);


         SearchAutoComplete searchText = (SearchAutoComplete) searchView.findViewById(R.id.abs__search_src_text);

        searchText.setTextColor(context.getResources().getColor(color.white));

        return searchView;
    }


    public static SearchView getSearchView(Context context, int strHintRes) {
        return getSearchView(context, context.getString(strHintRes));
    }
}
</code></pre>

<p>I hope it can help you guys.
:D</p>
"
"11281010","19831522","7","<p>In order to retrieve all the <a href=""http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"">External Storages</a> (whether they are <strong><em>SD cards</em></strong> or <strong><em>internal non-removable storages</em></strong>), you can use the following code:</p>

<pre><code>final String state = Environment.getExternalStorageState();

if ( Environment.MEDIA_MOUNTED.equals(state) || Environment.MEDIA_MOUNTED_READ_ONLY.equals(state) ) {  // we can read the External Storage...           
    //Retrieve the primary External Storage:
    final File primaryExternalStorage = Environment.getExternalStorageDirectory();

    //Retrieve the External Storages root directory:
    final String externalStorageRootDir;
    if ( (externalStorageRootDir = primaryExternalStorage.getParent()) == null ) {  // no parent...
        Log.d(TAG, ""External Storage: "" + primaryExternalStorage + ""\n"");
    }
    else {
        final File externalStorageRoot = new File( externalStorageRootDir );
        final File[] files = externalStorageRoot.listFiles();

        for ( final File file : files ) {
            if ( file.isDirectory() &amp;&amp; file.canRead() &amp;&amp; (file.listFiles().length &gt; 0) ) {  // it is a real directory (not a USB drive)...
                Log.d(TAG, ""External Storage: "" + file.getAbsolutePath() + ""\n"");
            }
        }
    }
}
</code></pre>

<p>Alternatively, you might use <strong>System.getenv(""EXTERNAL_STORAGE"")</strong> to retrieve the primary External Storage directory (e.g. <em>""/storage/sdcard0""</em>) and <strong>System.getenv(""SECONDARY_STORAGE"")</strong> to retieve the list of all the secondary directories (e.g. <em>""/storage/extSdCard:/storage/UsbDriveA:/storage/UsbDriveB""</em>). Remember that, also in this case, you might want to filter the list of secondary directories in order to exclude the USB drives.</p>

<p>In any case, please note that using hard-coded paths is always a bad approach (expecially when every manufacturer may change it as pleased).</p>
"
"11281010","20236362","1","<p>On some devices (for example samsung galaxy sII )internal memory card mabe be in vfat. In this case  use refer last code, we obtain path internal memory card (/mnt/sdcad) but no external card. Code refer below solve this problem.</p>

<pre><code>static String getExternalStorage(){
         String exts =  Environment.getExternalStorageDirectory().getPath();
         try {
            FileReader fr = new FileReader(new File(""/proc/mounts""));       
            BufferedReader br = new BufferedReader(fr);
            String sdCard=null;
            String line;
            while((line = br.readLine())!=null){
                if(line.contains(""secure"") || line.contains(""asec"")) continue;
            if(line.contains(""fat"")){
                String[] pars = line.split(""\\s"");
                if(pars.length&lt;2) continue;
                if(pars[1].equals(exts)) continue;
                sdCard =pars[1]; 
                break;
            }
        }
        fr.close();
        br.close();
        return sdCard;  

     } catch (Exception e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    return null;
}
</code></pre>
"
"11444238","20243534","0","<p>The one for TimePicker based on the solution by <strong>David Cesarino , ""TL;DR: 1-2-3 dead easy steps for a global solution""</strong></p>

<p>TimePickerDialog does not provide the functionality like DatePickerDialog.getDatePicker.
So, <strong>OnTimeSetListener</strong> listener has to be provided.
Just to keep the similarity with DatePicker workaround solution, I have maintained the old mListener concept. You can change it if you need to.</p>

<p>Calling and Listener is same as original solution.
Just include</p>

<pre><code>import android.app.TimePickerDialog;
import android.app.TimePickerDialog.OnTimeSetListener;
</code></pre>

<p>extend parent class,  </p>

<pre><code>... implements OnDateSetListener, OnTimeSetListener
</code></pre>

<p>Implement</p>

<pre><code> @Override
 public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
 ...
 }
</code></pre>

<p>example calling</p>

<pre><code>    Calendar cal = Calendar.getInstance();
    int hour = cal.get(Calendar.HOUR_OF_DAY);
    int minute = cal.get(Calendar.MINUTE);


    Bundle b = new Bundle();
    b.putInt(TimePickerDialogFragment.HOUR, hour);
    b.putInt(TimePickerDialogFragment.MINUTE, minute);

    DialogFragment picker = new TimePickerDialogFragment();
    picker.setArguments(b);
    picker.show(getSupportFragmentManager(), ""frag_time_picker"");
</code></pre>

<p>(Updated to handle cancel)</p>

<pre><code>public class TimePickerDialogFragment extends DialogFragment {

    public static final String HOUR = ""Hour"";
    public static final String MINUTE = ""Minute"";

    private boolean isCancelled = false; //Added to handle cancel
    private TimePickerDialog.OnTimeSetListener mListener;

    //Added to handle parent listener
    private TimePickerDialog.OnTimeSetListener mTimeSetListener = new TimePickerDialog.OnTimeSetListener() {
        public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
            if (!isCancelled)
            {
                mListener.onTimeSet(view,hourOfDay,minute);
            }
        }
    };
    //
    @Override
    public void onAttach(Activity activity) {
        super.onAttach(activity);
        this.mListener = (TimePickerDialog.OnTimeSetListener) activity;
    }

    @Override
    public void onDetach() {
        this.mListener = null;
        super.onDetach();
    }

    @TargetApi(11)
    @Override
    public Dialog onCreateDialog(Bundle savedInstanceState) {
        Bundle b = getArguments();
        int h = b.getInt(HOUR);
        int m = b.getInt(MINUTE);

        final TimePickerDialog picker = new TimePickerDialog(getActivity(), getConstructorListener(), h, m,DateFormat.is24HourFormat(getActivity()));

        //final TimePicker timePicker = new TimePicker(getBaseContext());
        if (hasJellyBeanAndAbove()) {
            picker.setButton(DialogInterface.BUTTON_POSITIVE,
                    getActivity().getString(android.R.string.ok),
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            isCancelled = false; //Cancel flag, used in mTimeSetListener
                        }
                    });
            picker.setButton(DialogInterface.BUTTON_NEGATIVE,
                    getActivity().getString(android.R.string.cancel),
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            isCancelled = true; //Cancel flag, used in mTimeSetListener
                        }
                    });
        }
        return picker;
    }
    private boolean hasJellyBeanAndAbove() {
        return Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.JELLY_BEAN;
    }

    private TimePickerDialog.OnTimeSetListener getConstructorListener() {
        return hasJellyBeanAndAbove() ? mTimeSetListener : mListener; //instead of null, mTimeSetListener is returned.
    }
}
</code></pre>
"
"11321129","22111666","0","<pre><code>searchView = (SearchView) view.findViewById(R.id.searchView);

SearchView.SearchAutoComplete searchText = (SearchView.SearchAutoComplete) searchView
      .findViewById(org.holoeverywhere.R.id.search_src_text);
searchText.setTextColor(Color.BLACK);
</code></pre>

<p>I am using Holoeverywhere Library. Note the <strong>org.holoeverywhere.R.id.search_src_text</strong></p>
"
"8500283","22235644","7","<p>Best result to me was to create an activity with ThemeNoTitleBar and without content as launcher. Then this activity call directly to the other. </p>

<p>Of course if you want you can add content to the Splash Activity but in my case I just wanted to show application directly.</p>

<p>Manifest:</p>

<pre><code>&lt;activity
        android:name=""com.package.SplashActivity""
        android:theme=""@android:style/Theme.Black.NoTitleBar"" &gt;
        &lt;intent-filter&gt;
            &lt;action android:name=""android.intent.action.MAIN"" /&gt;
            &lt;category android:name=""android.intent.category.LAUNCHER"" /&gt;
        &lt;/intent-filter&gt;
    &lt;/activity&gt;
</code></pre>

<p>Activity:</p>

<pre><code>public class SplashActivity extends Activity{

@Override
protected void onCreate(Bundle savedInstanceState){
    super.onCreate(savedInstanceState);

    //start StartActivity
    Intent intent = new Intent(this, StartActivity.class);
    startActivity(intent);
    finish();
}
</code></pre>

<p>}</p>
"
"11321129","22262252","0","<pre><code>TextView textView = (TextView) searchView.findViewById(R.id.search_src_text);
textView.setTextColor(Color.BLACK);
</code></pre>
"
"11321129","22316328","1","<p>A <code>SearchView</code> object extends from <code>LinearLayout</code>, so it holds other views. The trick is to find the view holding the hint text and change the colour programmatically. The problem with trying to find the view by id is that the id is dependent from the theme used in the application. So depending on the theme used, the <code>findViewById(int id)</code> method might return <code>null</code>. A better approach that works with every theme is to traverse the view hierarchy and find the widget containing the hint text:</p>

<pre><code>// get your SearchView with its id
SearchView searchView = (SearchView) menu.findItem(R.id.search).getActionView();
// traverse the view to the widget containing the hint text
LinearLayout ll = (LinearLayout)searchView.getChildAt(0);
LinearLayout ll2 = (LinearLayout)ll.getChildAt(2);
LinearLayout ll3 = (LinearLayout)ll2.getChildAt(1);
SearchView.SearchAutoComplete autoComplete = (SearchView.SearchAutoComplete)ll3.getChildAt(0);
// set the hint text color
autoComplete.setHintTextColor(getResources().getColor(Color.WHITE));
// set the text color
autoComplete.setTextColor(Color.BLUE);
</code></pre>

<p>Using this method, you can also change the look of other widgets in the <code>SearchView</code> hierarchy, such as the <code>EditText</code> holding the search query. Unless Google decides to change the view hierarchy of a <code>SearchView</code> shortly, you should be able to change the appearance of the widget with this method for some time.</p>
"
"11281010","22372292","0","<pre><code>       File[] files = null;
    File file = new File(""/storage"");// /storage/emulated
if (file.exists()) {
        files = file.listFiles();
            }
            if (null != files)
                for (int j = 0; j &lt; files.length; j++) {
                    Log.e(TAG, """" + files[j]);
                    Log.e(TAG, ""//--//--// "" +             files[j].exists());

                    if (files[j].toString().replaceAll(""_"", """")
                            .toLowerCase().contains(""extsdcard"")) {
                        external_path = files[j].toString();
                        break;
                    } else if (files[j].toString().replaceAll(""_"", """")
                            .toLowerCase()
                            .contains(""sdcard"".concat(Integer.toString(j)))) {
                        // external_path = files[j].toString();
                    }
                    Log.e(TAG, ""--///--///--  "" + external_path);
                }
</code></pre>
"
"11281010","22547112","3","<p>Good news!  In KitKat there's now a public API for interacting with these secondary shared storage devices.</p>

<p>The new <code>Context.getExternalFilesDirs()</code> and <code>Context.getExternalCacheDirs()</code> methods can return multiple paths, including both primary and secondary devices.  You can then iterate over them and check <code>Environment.getStorageState()</code> and <code>File.getFreeSpace()</code> to determine the best place to store your files.  These methods are also available on <code>ContextCompat</code> in the support-v4 library.</p>

<p>Also note that if you're only interested in using the directories returned by <code>Context</code>, you no longer need the <code>READ_</code> or <code>WRITE_EXTERNAL_STORAGE</code> permissions.  Going forward, you'll always have read/write access to these directories with no additional permissions required.</p>

<p>Apps can also continue working on older devices by end-of-lifing their permission request like this:</p>

<pre><code>&lt;uses-permission
    android:name=""android.permission.WRITE_EXTERNAL_STORAGE""
    android:maxSdkVersion=""18"" /&gt;
</code></pre>
"
"8500283","23028870","0","<p>I had still error with null pointer and finally it helped when I called first getWindow().requestFeature() and then super.onCreate() </p>

<pre><code>public void onCreate(Bundle savedInstanceState) {
getWindow().requestFeature(Window.FEATURE_ACTION_BAR);
super.onCreate(savedInstanceState);
getActionBar().show();
</code></pre>
"
"11321129","23184686","3","<p>This is best achieved through custom styles.  Overload the action bar widget style with your own custom style.  For holo light with dark action bar, put this in your own styles file such as <code>res/values/styles_mytheme.xml</code>:</p>

<pre><code>&lt;style name=""Theme.MyTheme"" parent=""@android:style/Theme.Holo.Light.DarkActionBar""&gt;
    &lt;item name=""android:actionBarWidgetTheme""&gt;@style/Theme.MyTheme.Widget&lt;/item&gt;
    &lt;!-- your other custom styles --&gt;
&lt;/style&gt;

&lt;style name=""Theme.MyTheme.Widget"" parent=""@android:style/Theme.Holo""&gt;
    &lt;item name=""android:textColorHint""&gt;@android:color/white&lt;/item&gt;
    &lt;!-- your other custom widget styles --&gt;
&lt;/style&gt;
</code></pre>

<p>Make sure your application is using theme custom theme as described in <a href=""https://developer.android.com/guide/topics/ui/themes.html#ApplyATheme"" rel=""nofollow"">enter link description here</a></p>
"
"11321129","23522617","5","<p>I wanted to do something similar. I finally had to find the <code>TextView</code> among the <code>SearchView</code> children:</p>

<pre><code>for (TextView textView : findChildrenByClass(searchView, TextView.class)) {
    textView.setTextColor(Color.WHITE);
}
</code></pre>

<p>If you want the util method:</p>

<pre><code>public static &lt;V extends View&gt; Collection&lt;V&gt; findChildrenByClass(ViewGroup viewGroup, Class&lt;V&gt; clazz) {

    return gatherChildrenByClass(viewGroup, clazz, new ArrayList&lt;V&gt;());
}

private static &lt;V extends View&gt; Collection&lt;V&gt; gatherChildrenByClass(ViewGroup viewGroup, Class&lt;V&gt; clazz, Collection&lt;V&gt; childrenFound) {

    for (int i = 0; i &lt; viewGroup.getChildCount(); i++)
    {
        final View child = viewGroup.getChildAt(i);
        if (clazz.isAssignableFrom(child.getClass())) {
            childrenFound.add((V)child);
        }
        if (child instanceof ViewGroup) {
            gatherChildrenByClass((ViewGroup) child, clazz, childrenFound);
        }
    }

    return childrenFound;
}
</code></pre>
"
"11281010","23737179","0","<p>Actually in some devices the external sdcard default name is showing as <code>extSdCard</code> and for other it is <code>sdcard1</code>.</p>

<p>This code snippet helps to find out that exact path and helps to retrieve you the path of external device.</p>

<pre><code>String sdpath,sd1path,usbdiskpath,sd0path;    
        if(new File(""/storage/extSdCard/"").exists())
            {
               sdpath=""/storage/extSdCard/"";
               Log.i(""Sd Cardext Path"",sdpath);
            }
        if(new File(""/storage/sdcard1/"").exists())
         {
              sd1path=""/storage/sdcard1/"";
              Log.i(""Sd Card1 Path"",sd1path);
         }
        if(new File(""/storage/usbcard1/"").exists())
         {
              usbdiskpath=""/storage/usbcard1/"";
              Log.i(""USB Path"",usbdiskpath);
         }
        if(new File(""/storage/sdcard0/"").exists())
         {
              sd0path=""/storage/sdcard0/"";
              Log.i(""Sd Card0 Path"",sd0path);
         }
</code></pre>
"
"11281010","24115276","0","<p>I am sure this code  will surely resolve your issues...This is working fine for me...\</p>

<pre><code>try {
            File mountFile = new File(""/proc/mounts"");
            usbFoundCount=0;
            sdcardFoundCount=0;
            if(mountFile.exists())
             {
                Scanner usbscanner = new Scanner(mountFile);
                while (usbscanner.hasNext()) {
                    String line = usbscanner.nextLine();
                    if (line.startsWith(""/dev/fuse /storage/usbcard1"")) {
                        usbFoundCount=1;
                        Log.i(""-----USB--------"",""USB Connected and properly mounted---/dev/fuse /storage/usbcard1"" );
                    }
            }
         }
            if(mountFile.exists()){
                Scanner sdcardscanner = new Scanner(mountFile);
                while (sdcardscanner.hasNext()) {
                    String line = sdcardscanner.nextLine();
                    if (line.startsWith(""/dev/fuse /storage/sdcard1"")) {
                        sdcardFoundCount=1;
                        Log.i(""-----USB--------"",""USB Connected and properly mounted---/dev/fuse /storage/sdcard1"" );
                    }
            }
         }
            if(usbFoundCount==1)
            {
                Toast.makeText(context,""USB Connected and properly mounted"", 7000).show();
                Log.i(""-----USB--------"",""USB Connected and properly mounted"" );
            }
            else
            {
                Toast.makeText(context,""USB not found!!!!"", 7000).show();
                Log.i(""-----USB--------"",""USB not found!!!!"" );

            }
            if(sdcardFoundCount==1)
            {
                Toast.makeText(context,""SDCard Connected and properly mounted"", 7000).show();
                Log.i(""-----SDCard--------"",""SDCard Connected and properly mounted"" );
            }
            else
            {
                Toast.makeText(context,""SDCard not found!!!!"", 7000).show();
                Log.i(""-----SDCard--------"",""SDCard not found!!!!"" );

            }
        }catch (Exception e) {
            e.printStackTrace();
        } 
</code></pre>
"
"8500283","25010188","3","<p>Try this, it works for me:</p>

<p>Below gets rid of activity's title bar</p>

<pre><code> requestWindowFeature(Window.FEATURE_NO_TITLE);
</code></pre>

<p>Below eliminates the notification bar to make the activity go full-screen</p>

<pre><code> getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, 
        WindowManager.LayoutParams.FLAG_FULLSCREEN);
</code></pre>

<p>(Full Example Below)
Take note: These methods were called before we set the content view of our activity</p>

<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        // Sets Application to full screen by removing action bar
        requestWindowFeature(Window.FEATURE_NO_TITLE);    
        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, 
        WindowManager.LayoutParams.FLAG_FULLSCREEN);

        setContentView(R.layout.activity_main); 

        // without this check, we would create a new fragment at each orientation change!
        if (null == savedInstanceState)
            createFragment();
    }
</code></pre>
"
"11444238","25064793","0","<p>Here is my workaround class for DatePickerDialog on cancel button as well as abandoning it by back button. Copy&amp;use in style of DatePickerDialog (Because the listener is stateful, we must create new instance when use, otherwise more code is required to make it it works)</p>

<p>Use:</p>

<pre><code>new FixedDatePickerDialog(this,
            new FixedOnDateSetListener() {

                @Override
                public void onDateSet(DatePicker view, int year,
                        int monthOfYear, int dayOfMonth) {
                    if (isOkSelected()) {
                        // when DONE button is clicked
                    }
                }

            }, year, month, day).show();
</code></pre>

<p>Class:</p>

<pre><code>public class FixedDatePickerDialog extends DatePickerDialog {
private final FixedOnDateSetListener fixedCallback;
public FixedDatePickerDialog(Context context,
        FixedOnDateSetListener callBack, int year, int monthOfYear,
        int dayOfMonth) {
    super(context, callBack, year, monthOfYear, dayOfMonth);
    fixedCallback = callBack;
    this.setButton(DialogInterface.BUTTON_NEGATIVE,
            context.getString(R.string.cancel), this);
    this.setButton(DialogInterface.BUTTON_POSITIVE,
            context.getString(R.string.done), this);
}

@Override
public void onClick(DialogInterface dialog, int which) {
    if (which == BUTTON_POSITIVE) {
        fixedCallback.setOkSelected(true);
    } else {
        fixedCallback.setOkSelected(false);
    }
    super.onClick(dialog, which);
}

public abstract static class FixedOnDateSetListener implements
        OnDateSetListener {
    private boolean okSelected = false;

    @Override
    abstract public void onDateSet(DatePicker view, int year,
            int monthOfYear, int dayOfMonth);

    public void setOkSelected(boolean okSelected) {
        this.okSelected = okSelected;
    }

    public boolean isOkSelected() {
        return okSelected;
    }
}
</code></pre>

<p>}</p>
"
"11281010","25697943","0","<p>Yes. Different manufacturer use different SDcard name like in Samsung Tab 3 its extsd, and other samsung devices use sdcard like this different manufacturer use different names.</p>

<p>I had the same requirement as you. so i have created a sample example for you from my project goto this link <a href=""https://github.com/shivarajp/AndroidDirectoryChooserExample"" rel=""nofollow"">Android Directory chooser</a> example which uses the androi-dirchooser library. This example detect the SDcard and list all the subfolders and it also detects if the device has morethan one SDcard.</p>

<p>Part of the code looks like this For full example goto the link <a href=""https://github.com/shivarajp/AndroidDirectoryChooserExample"" rel=""nofollow"">Android Directory Chooser</a></p>

<pre><code>/**
* Returns the path to internal storage ex:- /storage/emulated/0
 *
* @return
 */
private String getInternalDirectoryPath() {
return Environment.getExternalStorageDirectory().getAbsolutePath();
 }

/**
 * Returns the SDcard storage path for samsung ex:- /storage/extSdCard
 *
 * @return
 */
    private String getSDcardDirectoryPath() {
    return System.getenv(""SECONDARY_STORAGE"");
}


 mSdcardLayout.setOnClickListener(new OnClickListener() {
    @Override
    public void onClick(View view) {
        String sdCardPath;
        /***
         * Null check because user may click on already selected buton before selecting the folder
         * And mSelectedDir may contain some wrong path like when user confirm dialog and swith back again
         */

        if (mSelectedDir != null &amp;&amp; !mSelectedDir.getAbsolutePath().contains(System.getenv(""SECONDARY_STORAGE""))) {
            mCurrentInternalPath = mSelectedDir.getAbsolutePath();
        } else {
            mCurrentInternalPath = getInternalDirectoryPath();
        }
        if (mCurrentSDcardPath != null) {
            sdCardPath = mCurrentSDcardPath;
        } else {
            sdCardPath = getSDcardDirectoryPath();
        }
        //When there is only one SDcard
        if (sdCardPath != null) {
            if (!sdCardPath.contains("":"")) {
                updateButtonColor(STORAGE_EXTERNAL);
                File dir = new File(sdCardPath);
                changeDirectory(dir);
            } else if (sdCardPath.contains("":"")) {
                //Multiple Sdcards show root folder and remove the Internal storage from that.
                updateButtonColor(STORAGE_EXTERNAL);
                File dir = new File(""/storage"");
                changeDirectory(dir);
            }
        } else {
            //In some unknown scenario at least we can list the root folder
            updateButtonColor(STORAGE_EXTERNAL);
            File dir = new File(""/storage"");
            changeDirectory(dir);
        }


    }
});
</code></pre>
"
"11321129","25972437","1","<p>It is possible to customize searchview by using appcompat v7 library.I used appcompat v7 library and defined custom style for it.
In drawable folder put bottom_border.xml file which looks like this:</p>

<pre><code> &lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
 &lt;layer-list xmlns:android=""http://schemas.android.com/apk/res/android"" &gt;
 &lt;item&gt;
  &lt;shape &gt;
      &lt;solid android:color=""@color/blue_color"" /&gt;
  &lt;/shape&gt;
 &lt;/item&gt;
 &lt;item android:bottom=""0.8dp""
   android:left=""0.8dp""
   android:right=""0.8dp""&gt;
  &lt;shape &gt;
      &lt;solid android:color=""@color/background_color"" /&gt;
  &lt;/shape&gt;
 &lt;/item&gt;

 &lt;!-- draw another block to cut-off the left and right bars --&gt;
 &lt;item android:bottom=""2.0dp""&gt;
  &lt;shape &gt;
      &lt;solid android:color=""@color/main_accent"" /&gt;
  &lt;/shape&gt;
  &lt;/item&gt;
 &lt;/layer-list&gt;
</code></pre>

<p>In values folder styles_myactionbartheme.xml: </p>

<pre><code> &lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
 &lt;resources&gt;
  &lt;style name=""AppnewTheme"" parent=""Theme.AppCompat.Light""&gt;
    &lt;item name=""android:windowBackground""&gt;@color/background&lt;/item&gt;
    &lt;item name=""android:actionBarStyle""&gt;@style/ActionBar&lt;/item&gt;
    &lt;item name=""android:actionBarWidgetTheme""&gt;@style/ActionBarWidget&lt;/item&gt;
  &lt;/style&gt; 
  &lt;!-- Actionbar Theme --&gt;
  &lt;style name=""ActionBar"" parent=""Widget.AppCompat.Light.ActionBar.Solid.Inverse""&gt;
    &lt;item name=""android:background""&gt;@color/main_accent&lt;/item&gt;
    &lt;!-- &lt;item name=""android:icon""&gt;@drawable/abc_ic_ab_back_holo_light&lt;/item&gt; --&gt;
  &lt;/style&gt; 
  &lt;style name=""ActionBarWidget"" parent=""Theme.AppCompat.Light""&gt;
    &lt;!-- SearchView customization--&gt;
     &lt;!-- Changing the small search icon when the view is expanded --&gt;
    &lt;!-- &lt;item name=""searchViewSearchIcon""&gt;@drawable/ic_action_search&lt;/item&gt; --&gt;
     &lt;!-- Changing the cross icon to erase typed text --&gt;
   &lt;!--   &lt;item name=""searchViewCloseIcon""&gt;@drawable/ic_action_remove&lt;/item&gt; --&gt;
     &lt;!-- Styling the background of the text field, i.e. blue bracket --&gt;
    &lt;item name=""searchViewTextField""&gt;@drawable/bottom_border&lt;/item&gt;
     &lt;!-- Styling the text view that displays the typed text query --&gt;
    &lt;item name=""searchViewAutoCompleteTextView""&gt;@style/AutoCompleteTextView&lt;/item&gt;        
  &lt;/style&gt;

    &lt;style name=""AutoCompleteTextView"" parent=""Widget.AppCompat.Light.AutoCompleteTextView""&gt;
     &lt;item name=""android:textColor""&gt;@color/text_color&lt;/item&gt;
   &lt;!--   &lt;item name=""android:textCursorDrawable""&gt;@null&lt;/item&gt; --&gt;
    &lt;!-- &lt;item name=""android:textColorHighlight""&gt;@color/search_view_selected_text&lt;/item&gt; --&gt;
  &lt;/style&gt;
 &lt;/resources&gt;
</code></pre>

<p>I defined custommenu.xml  file for displaying menu:</p>

<pre><code> &lt;menu xmlns:android=""http://schemas.android.com/apk/res/android""
   xmlns:com.example.actionbartheme=""http://schemas.android.com/apk/res-auto"" &gt;  

  &lt;item android:id=""@+id/search""
      android:title=""@string/search_title""
      android:icon=""@drawable/search_buttonn""
      com.example.actionbartheme:showAsAction=""ifRoom|collapseActionView""
        com.example.actionbartheme:actionViewClass=""android.support.v7.widget.SearchView""/&gt;        
  &lt;/menu&gt;
</code></pre>

<p>Your activity should extend ActionBarActivity instead of Activity.
 Here is onCreateOptionsMenu method.</p>

<pre><code>  @Override
  public boolean onCreateOptionsMenu(Menu menu) 
  {
    // Inflate the menu; this adds items to the action bar if it is present.
    MenuInflater inflater = getMenuInflater();
    inflater.inflate(R.menu.custommenu, menu);
  }
</code></pre>

<p>In manifest file:</p>

<pre><code>  &lt;application
      android:allowBackup=""true""
      android:icon=""@drawable/ic_launcher""
      android:label=""@string/app_name""
      android:theme=""@style/AppnewTheme"" &gt;
</code></pre>

<p>For more information see this url:<br>
Here <a href=""http://www.jayway.com/2014/06/02/android-theming-the-actionbar/"" rel=""nofollow"">http://www.jayway.com/2014/06/02/android-theming-the-actionbar/</a></p>
"
"11321129","26251197","0","<p>For me the following works.
I used a code from a link: <a href=""http://stackoverflow.com/questions/18786726/change-text-color-of-search-hint-in-actionbar-using-support-library"">Change text color of search hint in actionbar using support library</a>.</p>

<pre><code>    searchView = (SearchView) menu.findItem(R.id.action_search).getActionView();

    EditText txtSearch = ((EditText)searchView.findViewById(android.support.v7.appcompat.R.id.search_src_text));
    txtSearch.setHint(getResources().getString(R.string.search_hint));
    txtSearch.setHintTextColor(Color.LTGRAY);
    txtSearch.setTextColor(Color.WHITE);
</code></pre>

<p><a href=""http://stackoverflow.com/questions/17791388/changing-action-bar-searchview-hint-text-color"">Changing action bar searchview hint text color</a> advices another solution. It works but sets only hint text and color.</p>

<pre><code>    searchView.setQueryHint(Html.fromHtml(""&lt;font color = #ffffff&gt;"" + getResources().getString(R.string.search_hint) + ""&lt;/font&gt;""));
</code></pre>
"
"8500283","26369409","0","<p>Just add this in your styles.xml</p>

<pre><code>&lt;item name=""android:windowNoTitle""&gt;true&lt;/item&gt;
</code></pre>
"
"16143562","26567363","1","<p>String unlike int or other numeric variables are compared in Java differently than other languages.</p>

<p>To compare Strings in Java (android) it is used the method .compareTo();</p>

<p>so the code sould be like this:</p>

<pre><code>if(gender.compareTo(""Male"")==0){
   salutation =""Mr."";
}
if(gender.compareTo(""Female"")==0){
   salutation =""Ms."";
}
</code></pre>
"