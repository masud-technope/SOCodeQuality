works in Android 4.0.1.
@emmby Do you have any idea how to clear the selection after the user set it? I tried refactoring the two invoke() calls into a clearSelection() method, but it doesn't really work. Although the popup list shows the formerly-selected item as unselected, the spinner widget still shows it as selected, and if the user selects the same item again, onItemSelected() is not called.
could some explain how to use above class ?
This solution is not 100% perfect on Android 4.2 (Cyanogenmod 10.1), using android:entries. The height of the inflated TextView is smaller thant the height of whichever resource the default Adapter inflates. So, when you actually select an option, the height increases, ~10px in my Galaxy S, which isn't acceptable. I've tried several things (gravity, padding, margin, etc.) and none worked reliably across devices, so I'm going to opt for a different solution.
@DavidDoria You have to use the NoDefaultSpinner class in your layout file. Copy the source from above into your project, e.g. into package com.example.customviews. Now in your layout xml, instead of <Spinner ...> use <com.example.customviews.NoDefaultSpinner. The rest of the code can stay the same. Don't forget to add the android:prompt attribute to the <com.example.customviews.NoDefaultSpinner> view in your layout.
To prevent the spinner from resizing itself don't use the entries property in the XML and do it via Java with something like this.