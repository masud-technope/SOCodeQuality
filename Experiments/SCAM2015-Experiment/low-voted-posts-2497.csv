95946,"<p>An alternative to the code from @Cody: </p>

<p>Using the modulus operator:</p>

<pre><code>bool isEven = (a % 2) == 0;
</code></pre>

<p>I think this is marginally better code than writing if/else, because there is less duplication &amp; unused flexibility.  It does require a bit more brain power to examine, but the good naming of <code>isEven</code> compensates.</p>
"
104943,"<p>Because it would break existing (pre-Java5) code. e.g.,</p>

<pre><code>Set stringSet = new HashSet();
// do some stuff...
Object o = ""foobar"";
stringSet.remove(o);
</code></pre>

<p>Now you might say the above code is wrong, but suppose that o came from a heterogeneous set of objects (i.e., it contained strings, number, objects, etc.). You want to remove all the matches, which was legal because remove would just ignore the non-strings because they were non-equal. But if you make it remove(String o), that no longer works. </p>
"
21845,"<p>Perhaps a code example would help, I'm going to use C#, but you should be able to follow along.</p>

<p>Lets pretend we have an interface called IPayable</p>

<pre><code>public interface IPayable
{
    public Pay(double amount);
}
</code></pre>

<p>Now, we have two concrete classes that implement this interface:</p>

<pre><code>public class BusinessAccount : IPayable
{
    public void Pay(double amount)
    {
    	//Logic
    }
}

public class CustomerAccount : IPayable
{
    public void Pay(double amount)
    {
    	//Logic
    }
}
</code></pre>

<p>Now, lets pretend we have a collection of various accounts, to do this we will use a generic list of the type IPayable</p>

<pre><code>List&lt;IPayable&gt; accountsToPay = new List&lt;IPayable&gt;();
accountsToPay.add(new CustomerAccount());
accountsToPay.add(new BusinessAccount());
</code></pre>

<p>Now, we want to pay $50.00 to all those accounts:</p>

<pre><code>foreach (IPayable account in accountsToPay)
{
    account.Pay(50.00);
}
</code></pre>

<p>So now you see how interfaces are incredibly useful. </p>

<p>They are used on instantiated objects only. Not on static classes. </p>

<p>If you had made pay static, when looping through the IPayable's in accountsToPay there would be no way to figure out if it should call pay on BusinessAcount or CustomerAccount.</p>
"
21858,"<p>I would just go by</p>

<pre><code>throw new exception(""WhatCausedIt"")
</code></pre>

<p>if you want to handle your exceptions, you could pass a code instead of ""WhatCausedIt"" an then react to the different answers with a switch statement. </p>
"
31606,"<p>I agree with @Bernard that method chaining like this muddles the purpose of the setters. Instead I would suggest that if you are always creating chains of setters like this that you create a custom Constructor for your class so instead of</p>

<pre><code>    MyClass
    .setInt(1)
    .setString(""test"")
    .setBoolean(true)
  ;
</code></pre>

<p>You do</p>

<pre><code>new MyClass(1,""test"",true);
</code></pre>

<p>This makes it more readable and you can use this to make your class immutable if you chose to.</p>
"
156721,"<p>Are you concerned primarily with getting a clean report from FindBugs or with having code that works? These are not necessarily the same thing. Your original code is fine (although I would get rid of the redundant <code>if (fis != null)</code> check since an <code>OutOfMemoryException</code> would have been thrown otherwise). FileInputStream has a finalizer method which will close the stream for you in the unlikely event that you actually receive an IOException in your processing. It's simply not worth the bother of making your code more sophisticated to avoid the extremely unlikely scenario of</p>

<ol>
<li>you get an IOException and </li>
<li>this happens so often that you start to run into finalizer backlog issues.</li>
</ol>

<p><strong>Edit:</strong> if you are getting so many IOExceptions that you are running into problems with the finalizer queue then you have far far bigger fish to fry! This is about getting a sense of perspective.</p>
"
74905,"<p>Sometimes a simple ""<strong><code>static Foo foo = new Foo();</code></strong>"" is not enough. Just think of some basic data insertion you want to do.</p>

<p>On the other hand you would have to synchronize any method that instantiates the singleton variable as such. Synchronisation is not bad as such, but it can lead to performance issues or locking (in very very rare situations using this example. The solution is</p>

<pre><code>public class Singleton {

    private static Singleton instance = null;

    static {
          instance = new Singleton();
          // do some of your instantiation stuff here
    }

    private Singleton() {
          if(instance!=null) {
                  throw new ErrorYouWant(""Singleton double-instantiation, should never happen!"");
          }
    }

    public static getSingleton() {
          return instance;
    }

}
</code></pre>

<p>Now what happens? The class is loaded via the class loader. Directly after the class was interpreted from a byte Array, the VM executes the <strong>static { }</strong> - block. that's the whole secret: The static-block is only called once, the time the given class (name) of the given package is loaded by this one class loader.</p>
"
76998,"<p>This will get rid of your concurrent modification exception. I won't speak to the efficiency however ;)</p>

<pre><code>List&lt;Blah&gt; list = fillMyList();
List&lt;Blah&gt; temp = new ArrayList&lt;Blah&gt;();
for (Blah blah : list) {
     //list.remove(blah);  would throw the exception
     temp.add(blah);
}
list.removeAll(temp);
</code></pre>
"
169805,"<p>Try <code>mainPanel.invalidate()</code> and then if necessary, <code>mainPanel.validate()</code>.  It also might be worth checking that you're doing this all in the event dispatch thread, otherwise your results will be spotty and (generally) non-deterministic.</p>
"
201429,"<pre><code>jRadioOne = new javax.swing.JRadioButton();
jRadioTwo = new javax.swing.JRadioButton();
jRadioThree = new javax.swing.JRadioButton();
</code></pre>

<p>... then for every button:</p>

<pre><code>buttonGroup1.add(jRadioOne);
jRadioOne.setText(""One"");
jRadioOne.setActionCommand(ONE);
jRadioOne.addActionListener(radioButtonActionListener);
</code></pre>

<p>...listener</p>

<pre><code>ActionListener radioButtonActionListener = new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonActionPerformed(evt);
            }
        };
</code></pre>

<p>...do whatever you need as response to event</p>

<pre><code>protected void radioButtonActionPerformed(ActionEvent evt) {            
       System.out.println(evt.getActionCommand());
    }
</code></pre>
"
116224,"<p>They should <strong>absolutely</strong> be kept under version control.  You can use an environment variable in the user's environment to detect the developer-specific properties.  In ant, for example:</p>

<pre><code>&lt;property environment=""env"" /&gt;
&lt;property file=""${basedir}/online/${env.LOGNAME}.build.properties"" /&gt;
&lt;property file=""${basedir}/online/${env.USERNAME}.build.properties"" /&gt;
&lt;property file=""${basedir}/online/default.properties"" /&gt;
</code></pre>

<p>If you have <code>LOGNAME</code> set to, say, 'davec' and <code>davec.build.properties</code> exists, it will override any values in <code>default.properties</code>.</p>

<p>This is also helpful for examining your co-workers configurations to get started or diagnose problems.</p>
"
137770,"<p>I use special functions in my library to work with days/month/year ints -</p>

<pre><code>int[] int_dmy( long timestamp ) // remember month is [0..11] !!!
{
  Calendar cal = new GregorianCalendar(); cal.setTimeInMillis( timestamp );
  return new int[] { 
    cal.get( Calendar.DATE ), cal.get( Calendar.MONTH ), cal.get( Calendar.YEAR )
  };
};


int[] int_dmy( Date d ) { 
 ...
}
</code></pre>
"
138019,"<p>You can do the whole thing using Integer math without needing to instantiate a calendar:</p>

<pre><code>return (System.currentTimeMillis()/1000/3600/24/365.25 +1970);
</code></pre>

<p>May be off for an hour or two at new year but I don't get the impression that is an issue?</p>
"
277047,"<p>A brute force algorithm:</p>

<pre><code>public static boolean hasAtLeastTwoOdds(int[] args) {
    int[] target = args; // make defensive copy
    int oddsFound;
    int numberOddsSought = 2;

    for (int i = 0; i &lt; target.length; i++) {
        if (target[i] % 2 != 0) {
            if (oddsFound== numberOddsSought) {
                return true;
            }
            oddsFound++;
        }
    }

    return false;
}
</code></pre>
"
277158,"<p>I'd initialize a <code>word_count</code> int to 1, then loop through each character in the file and increment <code>word_count</code> for every whitespace character <em>unless</em> the previous character was a whitespace character. (A space, tab, or newline.)</p>
"
367455,"<p>Here is my code that works on mysql on os X</p>

<pre><code>public SQL(String host, String port, String database, String userid, String password)
	{
		queryType = QUERYTYPE.Single;
		String driver = ""org.gjt.mm.mysql.Driver"";
		String url = ""jdbc:mysql://"" + host;
		if (port != null)
			{
				url += "":"" + port;
			}
		else
			{
				url += "":"" + defaultPort;
			}
		url += ""/"" + database;
		try
			{
				Class.forName(driver);

				connection = DriverManager.getConnection(url, userid, password);
			}
		catch (Exception e)
			{
				e.printStackTrace();
			}
	}
</code></pre>
"
377860,"<p>There is nothing here that says these values should be inlined. You are just declaring some <code>public</code>, <code>static</code> members. Those other classes are using the values of these members. No inlining is asked. Even the <code>final</code> keyword </p>

<p>But for <strong>performance reasons</strong>, some JVMs may <strong>inline</strong> these values in those other classes. This is an optimization. No optimization should change the behaviour of a program. So if you change the definition of these members, the JVM should <strong>un-inline</strong> the previous values.</p>

<p>This is why there is no way to turn inlining off. Either the JVM does not inline and there is no problem or if it is inlined, the JVM guarantee the un-inlining.</p>

<p>I am not sure what happens when you import statically this class. I think (not sure) the inlining is performed and may cause the trouble you mention. If that is the case, you could basically delete the static import and you are ok.</p>
"
282115,"<p>I would NOT recommend using any regex for this, those are actually all painfully slow when you're doing simple operations. Instead I'd recommend you start with something like this</p>

<pre><code>// usage:
Map&lt;String, String&gt; replaceRules = new HashMap&lt;String, String&gt;();
replaceRules.put(""ao"", ""1"");
replaceRules.put(""df"", ""2"");
replaceRules.put(""n"", ""3"");
String s = replacePartsOf(""foobooandfoo"", replaceRules);

// actual method
public String replacePartsOf(String thisString, Map&lt;String, String&gt; withThese) {
    for(Entry&lt;String, String&gt; rule : withThese.entrySet()) {
    	thisString = thisString.replaceAll(rule.getKey(), rule.getValue());
    }

    return thisString;
}
</code></pre>

<p>and after you've got that working, refactor it to use character arrays instead. While I think what you want to do can be done with StringBuilder it most likely won't be worth the effort.</p>
"
300330,"<p>I think it's risky. Threading results in all kinds of subtly issues that are a giant pain to debug. You might want to look at <a href=""http://commons.apache.org/collections/api/org/apache/commons/collections/FastHashMap.html"" rel=""nofollow""><code>FastHashMap</code></a>, which is intended for read-only threading cases like this.</p>

<p>At the least, I'd also declare <code>validProgramCodes</code> to be <code>volatile</code> so that the reference won't get optimized into a register or something.</p>
"
300394,"<p>If I read the <a href=""http://docs.oracle.com/javase/specs/jls/se5.0/html/j3TOC.html"" rel=""nofollow"">JLS</a> correctly (no guarantees there!), accesses to <em>references</em> are always atomic, period.  See <a href=""http://docs.oracle.com/javase/specs/jls/se5.0/html/memory.html#17.7"" rel=""nofollow"">Section 17.7 Non-atomic Treatment of double and long</a> </p>

<p>So, if the access to a reference is always atomic and it doesn't matter what instance of the returned <code>Hashmap</code> the threads see, you should be OK.  You won't see partial writes to the reference, ever.</p>

<hr>

<p>Edit:  After review of the discussion in the comments below and other answers, here are references/quotes from </p>

<p><a href=""http://g.oswego.edu/"" rel=""nofollow"">Doug Lea</a>'s book (Concurrent Programming in Java, 2nd Ed), p 94, section 2.2.7.2 <em>Visibility</em>, item #3:  ""</p>

<blockquote>
  <p>The first time a thread access a field
  of an object, it sees either the
  initial value of the field or the
  value since written by some other
  thread.""</p>
</blockquote>

<p>On p. 94, Lea goes on to describe risks associated with this approach:</p>

<blockquote>
  <p>The memory model guarantees that, given the eventual occurrence of the above operations, a particular update to a particular field made by one thread will eventually be visible to another.  But <em>eventually</em> can be an arbitrarily long time.</p>
</blockquote>

<p>So when it <strong><em>absolutely, positively, must be visible</em></strong> to any calling thread, <code>volatile</code> or some other synchronization barrier is required, especially in long running threads or threads that access the value in a loop (as Lea says).</p>

<p><em><strong>However</em></strong>, in the case where there is a <em>short lived thread</em>, as implied by the question, with new threads for new readers and it <em>does not impact</em> the application to read stale data, synchronization <em>is not</em> <strong><em>required.</em></strong></p>

<hr>

<p>@<a href=""http://stackoverflow.com/users/3474/erickson"">erickson</a>'s answer is the safest in this situation, guaranteeing that other threads will see the changes to the <code>HashMap</code> reference as they occur.  I'd suggest following that advice simply to avoid the confusion over the requirements and implementation that resulted in the ""down votes"" on this answer and the discussion below.</p>

<p>I'm not deleting the answer in the hope that it will be useful.  I'm <strong>not</strong> looking for the ""Peer Pressure"" badge... ;-)</p>
"
12885,"<p>There is no pretty solution.  Java just doesn't do things like this well.  Mike's solution is pretty much the way to do it if you want strings as the indices (keys).  Another option if the hash-of-hashes setup is too ugly is to append the strings together (shamelessly stolen from Mike and modified):</p>

<pre><code>Hashtable&lt;String, String&gt; schedule = new Hashtable&lt;String, String&gt;();
schedule.put(""A-Winter"", ""M"");
schedule.put(""A-Spring"", ""tTS"");
</code></pre>

<p>and then lookup:</p>

<pre><code>String val = schedule.get(group + ""-"" + season);
</code></pre>

<p>If you're unhappy with the general ugliness (and I don't blame you), put it all behind a method call:</p>

<pre><code>String whenCanIWater(String group, Date date) { /* ugliness here */ }
</code></pre>
"
326409,"<p>You could try:</p>

<pre><code>FileInputStream input = new FileInputStream(filePath);

byte[] fileData = new byte[input.available()];

input.read(fileData);
input.close();

return new String(fileData, ""UTF-8"");
</code></pre>

<p>I'm not sure what problems might occur with the bytes and character sets etc, but it works for me.</p>
"
109396,"<p>Depending on the context, using <code>java.util.LinkedHashMap&lt;T&gt;</code> which rememebers the order in which items are placed into the map.  Otherwise, if you need to sort values based on their natural ordering, I would recommend maintaining a separate List which can be sorted via <code>Collections.sort()</code>.</p>
"
109407,"<p>If your Map values implement Comparable (e.g. String), this should work</p>

<pre><code>Map&lt;Object, String&gt; map = new HashMap&lt;Object, String&gt;();
// Populate the Map
List&lt;String&gt; mapValues = new ArrayList&lt;String&gt;(map.values());
Collections.sort(mapValues);
</code></pre>

<p>If the map values themselves don't implement Comparable, but you have an instance of Comparable that can sort them, replace the last line with this:</p>

<pre><code>Collections.sort(mapValues, comparable);
</code></pre>
"
109958,"<p>Okay, this version works with two new Map objects and two iterations and sorts on values. Hope, the performs well although the map entries must be looped twice:</p>

<pre><code>public static void main(String[] args) {
	Map&lt;String, String&gt; unsorted = new HashMap&lt;String, String&gt;();
	unsorted.put(""Cde"", ""Cde_Value"");
	unsorted.put(""Abc"", ""Abc_Value"");
	unsorted.put(""Bcd"", ""Bcd_Value"");

	Comparator&lt;String&gt; comparer = new Comparator&lt;String&gt;() {
		@Override
		public int compare(String o1, String o2) {
			return o1.compareTo(o2);
		}};

	System.out.println(sortByValue(unsorted, comparer));

}

public static &lt;K, V&gt; Map&lt;K,V&gt; sortByValue(Map&lt;K, V&gt; in, Comparator&lt;? super V&gt; compare) {
	Map&lt;V, K&gt; swapped = new TreeMap&lt;V, K&gt;(compare);
	for(Entry&lt;K,V&gt; entry: in.entrySet()) {
		if (entry.getValue() != null) {
			swapped.put(entry.getValue(), entry.getKey());
		}
	}
	LinkedHashMap&lt;K, V&gt; result = new LinkedHashMap&lt;K, V&gt;();
	for(Entry&lt;V,K&gt; entry: swapped.entrySet()) {
		if (entry.getValue() != null) {
			result.put(entry.getValue(), entry.getKey());
		}
	}
	return result;
}
</code></pre>

<p>The solution uses a TreeMap with a Comparator and sorts out all null keys and values. First, the ordering functionality from the TreeMap is used to sort upon the values, next the sorted Map is used to create a result as a LinkedHashMap that retains has the same order of values.</p>

<p>Greetz, GHad</p>
"
80954,"<p>You are thinking C/C++.</p>

<p>Use objects instead of an identifier byte (or int).</p>

<p><strong>My Bad, the overload approach is better and using the SSN as a primary key is not so good</strong></p>

<pre><code>public ??? getEmployeeName(Object obj){

if (obj instanceof Integer){

  ...

} else if (obj instanceof String){

...

} else if .... // and so on


} else throw SomeMeaningFullRuntimeException()

return employeeName
}
</code></pre>

<p>I think it is better to use Unchecked Exceptions to signaling incorrect input.</p>

<p>Document it so the customer knows what objects to expect. Or create your own wrappers.  I prefer the first option.</p>
"
81712,"<p>stick all your options in an enum, the have something like the following</p>

<pre><code>GetEmployeeName(Enum identifier)
{
    switch (identifier)
    case eBatchID:
    {
        // Do stuff
    }
    case eSSN:
    {
    }
    case eEmailId:
    {
    }
    case eSalary:
    {
    }
    default:
    {
        // No match
        return 0;
    }
}

enum Identifier
{
    eBatchID,
    eSSN,
    eEmailID,
    eSalary
}
</code></pre>
"
94068,"<p>Maybe this can help you: <a href=""http://www.jguru.com/forums/view.jsp?EID=1268343"" rel=""nofollow"">How can we kill the running thread in java?</a></p>

<blockquote>
  <p>u can kill the partictular thread by
  setting external class varaiable.</p>
</blockquote>

<pre><code> Class Outer
 {    
    public static flag=true;
    Outer()
    {
        new Test().start();
    } 
    class Test extends Thread
    {               
       public void run()
       {
         while(Outer.flag)
         {
          //do ur work here
         }  
       }
    }
  }
</code></pre>

<blockquote>
  <p>if u want to stop the above thread ,
  set flag variable as false. The
  another way to kill a thread is just
  register ur thread with ThreadGroup.
  and use the method destroy() of
  ThreadGroup. and this way is also used
  kill similar threads by creating them
  as group or register with group.</p>
</blockquote>
"
5229274,"<p>Try the <code>int.tryparse</code> it will provide a value of zero if the string cannot be converted and it will also convert the string it can be done very usefull</p>
"
168858,"<p>here's the way pagination is done in hibernate</p>

<pre><code>Query q = sess.createQuery(""from DomesticCat cat"");
q.setFirstResult(20);
q.setMaxResults(10);
List cats = q.list();
</code></pre>

<p>you can get more info from hibernate docs at : <a href=""http://www.hibernate.org/hib_docs/v3/reference/en-US/html_single/#objectstate-querying-executing-pagination"" rel=""nofollow"">http://www.hibernate.org/hib_docs/v3/reference/en-US/html_single/#objectstate-querying-executing-pagination</a>
10.4.1.5 and 10.4.1.6 section give you more flexbile options.</p>

<p>BR,<BR>
~A</p>
"
175317,"<p>It's a bit outside scope, but you forgot to re-implement hashCode(). When you override equals please override hashCode(), even in an example. </p>

<p>For example; contains() will very probably go wrong when you have a HashSet implementation of Set as the HashSet uses the hashCode of Object to locate the bucket (a number which has nothing to do with business logic), and only equals() the elements within that bucket.</p>

<pre><code>public class A {
  public int id;
  public B b;
  public int hashCode() {return id;} // simple and efficient enough for small Sets 
  public boolean equals(Object another) { 
    if (object == null || ! (object instanceOf A) ) {
      return false;
    }
    return this.id == ((A)another).id; 
   }
}
public class Logic {
  /**
   * Replace the element in data with the same id as element, or add element
   * to data when the id of element is not yet used by any A in data. 
   */
  public void update(Set&lt;A&gt; data, A element) {
    data.remove(element); // Safe even if the element is not in the Set
    data.add(element); 
  }
}
</code></pre>

<p><strong>EDIT</strong> Yuvalindicated correctly that Set.add does not overwrite an existing element, but only adds if the element is not yet in the collection (with ""is"" implemented by equals)</p>
"
10188271,"<p>Try this code, you will understand the <strong>code in finally block is get executed after return statement</strong>.</p>

<pre><code>public class TestTryCatchFinally {
    static int x = 0;

    public static void main(String[] args){
        System.out.println(f1() );
        System.out.println(f2() );
    }

    public static int f1(){
        try{
            x = 1;
            return x;
        }finally{
            x = 2;
        }
    }

    public static int f2(){
        return x;
    }
}
</code></pre>
"
1600756,"<p>I would just use the string concatenation operator ""+"" to join two strings.  <code>s1 += s2;</code></p>
"
158832,"<p>You could try using an output parameter </p>

<pre><code>boolean MyFunction( a,b,Date c)
{
  if (good) 
     c.SetDate(....);
  return good;

}
</code></pre>

<p>Then you can call it</p>

<pre><code>Date theDate = new Date();
if(MyFunction(a, b ,theDate ) 
{
   do stuff with C
}
</code></pre>

<p>It still requires you to check something, but there isn't a way of avoiding some checking in this scenario.</p>

<p>Although SetDate is deprecated, and the Calendar implementation is just ugly.</p>

<p>Stupidest API change Sun ever did.</p>
"
11234509,"<p>while you're at it you can even do something like this:</p>

<p><code>Runtime.exec(""format c:"")</code></p>

<p><em>(downvoters: just a joke obviously)</em></p>
"
11244794,"<p>Use that simple code:</p>

<pre><code>// Do your insert code

myDataBase.execSQL(""INSERT INTO TABLE_NAME (FIELD_NAME1,FIELD_NAME2,...)VALUES (VALUE1,VALUE2,...)"");

// Use the sqlite function ""last_insert_rowid""

Cursor last_id_inserted = yourBD.rawQuery(""SELECT last_insert_rowid()"", null);

// Retrieve data from cursor.

last_id_inserted.moveToFirst(); // Don't forget that!

ultimo_id = last_id_inserted.getLong(0);  // For Java, the result is returned on Long type  (64)
</code></pre>
"
190165,"<p>I can't improve on the two-liner in the general case without introducing your own utility method, but if you do have lists of Strings and you're willing to assume those Strings don't contain commas, you can pull this long one-liner:</p>

<pre><code>List&lt;String&gt; newList = new ArrayList&lt;String&gt;(Arrays.asList((listOne.toString().subString(1, listOne.length() - 1) + "", "" + listTwo.toString().subString(1, listTwo.length() - 1)).split("", "")));
</code></pre>

<p>If you drop the generics, this should be JDK 1.4 compliant (though I haven't tested that). Also not recommended for production code ;-)</p>
"
16062731,"<p>I've actually in front of me a code which looks like this:</p>

<pre><code>for (int i = offset; i &lt; offset + length; i++) {
    char append = (char) (data[i] &amp; 0xFF);
    buffer.append(append);
}
...
for (int i = offset; i &lt; offset + length; i++) {
    char append = (char) (data[i] &amp; 0xFF);
    buffer.append(append);
}
...
for (int i = offset; i &lt; offset + length; i++) {
    char append = (char) (data[i] &amp; 0xFF);
    buffer.append(append);
}
</code></pre>

<p>So, relying on compiler abilities, I can assume there would be only one stack allocation for <strong>i</strong> and one for <strong>append</strong>. Then everything would be fine except the duplicated code.</p>

<p>As a side note, java applications are known to be slow. I never tried to do profiling in java but I guess the performance hit comes mostly from memory allocation management.</p>
"
2607251,"<p>I was surprised when I first noticed the Ternary-Operator which equals a simple if-then-else statement:</p>

<pre><code>minVal = (a &lt; b) ? a : b;
</code></pre>
"
17381820,"<p>I like to share my way of supporting user details on freemarker page.
Everything is very simple and working perfectly!</p>

<p>You just have to place Authentication rerequest on <code>default-target-url</code> (page after form-login)
This is my Controler method for that page:</p>

<pre><code>@RequestMapping(value = ""/monitoring"", method = RequestMethod.GET)
public ModelAndView getMonitoringPage(Model model, final HttpServletRequest request) {
    showRequestLog(""monitoring"");


    Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
    String userName = authentication.getName();
    //create a new session
    HttpSession session = request.getSession(true);
    session.setAttribute(""username"", userName);

    return new ModelAndView(catalogPath + ""monitoring"");
}
</code></pre>

<p>And this is my ftl code:</p>

<pre><code>&lt;@security.authorize ifAnyGranted=""ROLE_ADMIN, ROLE_USER""&gt;
&lt;p style=""padding-right: 20px;""&gt;Logged in as ${username!""Anonymous"" }&lt;/p&gt;
&lt;/@security.authorize&gt; 
</code></pre>

<p>And that's it, username will appear on every page after authorisation.</p>
"
19603170,"<pre><code>public void reverse(){
    if(isEmpty()){
    return;
     }
     Node&lt;T&gt; revHead = new Node&lt;T&gt;();
     this.reverse(head.next, revHead);
     this.head = revHead;
}

private Node&lt;T&gt; reverse(Node&lt;T&gt; node, Node&lt;T&gt; revHead){
    if(node.next == null){
       revHead.next = node;
       return node;
     }
     Node&lt;T&gt; reverse = this.reverse(node.next, revHead);
     reverse.next = node;
     node.next = null;
     return node;
}
</code></pre>
"
321453,"<p>I use this..</p>

<pre><code>finally
{
    if (ps != null) ps.close();
    if (rs != null) rs.close();
}
</code></pre>
"
21011075,"<p>Here is a reference if someone is looking for Scala implementation:</p>

<pre><code>scala&gt; import scala.collection.mutable.LinkedList
import scala.collection.mutable.LinkedList

scala&gt; def reverseLinkedList[A](ll: LinkedList[A]): LinkedList[A] =
         ll.foldLeft(LinkedList.empty[A])((accumulator, nextElement) =&gt; nextElement +: accumulator)
reverseLinkedList: [A](ll: scala.collection.mutable.LinkedList[A])scala.collection.mutable.LinkedList[A]

scala&gt; reverseLinkedList(LinkedList(""a"", ""b"", ""c""))
res0: scala.collection.mutable.LinkedList[java.lang.String] = LinkedList(c, b, a)

scala&gt; reverseLinkedList(LinkedList(""1"", ""2"", ""3""))
res1: scala.collection.mutable.LinkedList[java.lang.String] = LinkedList(3, 2, 1)
</code></pre>
"
74284,"<p>If the problem is just LazyInitializationExceptions, you can avoid that by adding an OpenSessionInViewFilter.<br />
This will allow the objects to be loaded in the view, but will not help with the speed issue.</p>

<pre><code>     &lt;filter&gt;
    	&lt;filter-name&gt;hibernateFilter&lt;/filter-name&gt;
    	&lt;filter-class&gt; org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
    	&lt;/filter-class&gt;
    &lt;/filter&gt;
    &lt;filter-mapping&gt;
    	&lt;filter-name&gt;hibernateFilter&lt;/filter-name&gt;
    	&lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;
</code></pre>
"
23630046,"<p>For those readers who arrive here like me years after the question was asked, I have a more general solution for this question.</p>

<pre><code>/**
 * Checks, if the string represents a number.
 *
 * @param string the string
 * @return true, if the string is a number
 */
public static boolean isANumber(final String string) {
    if (string != null) {
        final int length = string.length();
        if (length != 0) {
            int i = 0;
            if (string.charAt(0) == '-') {
                if (length == 1) {
                    return false;
                }
                i++;
            }
            for (; i &lt; length; i++) {
                final char c = string.charAt(i);
                if ((c &lt;= PERIOD) || ((c &gt;= COLON))) {
                    final String strC = Character.toString(c).toUpperCase();
                    final boolean isExponent = strC.equals(""E"");
                    final boolean isPeriod = (c == PERIOD);
                    final boolean isPlus = (c == PLUS);

                    if (!isExponent &amp;&amp; !isPeriod &amp;&amp; !isPlus) {
                        return false;
                    }
                }
            }
            return true;
        }
    }
    return false;
}
</code></pre>
"
52362,"<p>I doubt you want to do it programmatically unless you just want to do it once and store it for future use.  It's a costly thing to do.  There's no sizeof() operator in Java, and even if there was, it would only count the cost of the references to other objects and the size of the primitives.</p>

<p>One way you could do it is to serialize the thing to a File and look at the size of the file, like this:</p>

<pre><code>Serializable myObject;
ObjectOutputStream oos = new ObjectOutputStream (new FileOutputStream (""obj.ser""));
oos.write (myObject);
oos.close ();
</code></pre>

<p>Of course, this assumes that each object is distinct and doesn't contain non-transient references to anything else.</p>

<p>Another strategy would be to take each object and examine its members by reflection and add up the sizes (boolean &amp; byte = 1 byte, short &amp; char = 2 bytes, etc.), working your way down the membership hierarchy.  But that's tedious and expensive and ends up doing the same thing the serialization strategy would do.</p>
"
24379913,"<p>We can also create the object in this way:-</p>

<pre><code>String s =""Hello"";
</code></pre>

<p>Nobody has discuss it.</p>
"
356320,"<p>I would choose the Exception option in first place.</p>

<p>But, in second place, I would prefer the C-style technique:</p>

<pre><code>public boolean authenticate(Client client, final StringBuilder sb) {
	if (sb == null)
		throw new IllegalArgumentException();
	if (isOK()) {
		sb.append(""info message"");
		return true;
	} else {
		sb.append(""error message"");
		return false;
	}
}
</code></pre>

<p>This is not so strange and it's done in many places in the framework.</p>
"
122863,"<p>First, your syntax had an extra ""]"" which was causing an error.  </p>

<p>To fix that, and to set a variable you would do this:</p>

<pre><code>&lt;c:set var=""nullUser"" 
    scope=""session"" 
    value=""${sessionScope[Constants.ATTR_CURRENT_USER] eq null}"" /&gt;

&lt;c:if test=""${nullUser}""&gt;
     &lt;h2&gt;First Test&lt;/h2&gt;
&lt;/c:if&gt;
&lt;c:if test=""${nullUser}""&gt;
     &lt;h2&gt;Another Test&lt;/h2&gt;
&lt;/c:if&gt;
</code></pre>
"
83394,"<p>Have you tried using:</p>

<pre><code>System.loadLibrary(""mylibrary.dll"");
</code></pre>

<p>Not sure if this will work with a pure C library but it's probably worth a shot. :)</p>
"
25050139,"<p>Yes, in a <code>try/catch/finally</code> block, the finally will always be called. 
However, in your example:</p>

<pre><code>try {
   something();
   return success; // Will return out of the method if successful.
} catch (Exception ex) {
   return failure; // Will return out of the method if not successful.
} finally {
   // Possibly unreachable code.
   System.out.println(""I'm not sure if this will be printed..."");
}
</code></pre>

<p>Your <code>finally</code> might not be executed because of the <code>return</code> statements.
Now, depending on the circumstances of the code, just one <code>return</code> statement is suffice and pass down a variable.</p>

<pre><code>public boolean runSomething () {
    boolean isSuccess = true;
    try {
       something(); // Runs thread. If successful, run finally block.
    } catch (Exception ex) {
       // If exception is caught, display (if desired) exception and set
       // the out bound variable to false. Finally, run finally block.
       System.out.println(""Exception: "" + ex.toString());
       isSuccess = false;
    } finally {
       System.out.println(""This was executed in the finally."");
    }
    return isSuccess; // Returns success flag.
}
</code></pre>

<p>I do realize this post is 5 years old, but I hope this will help someone out there!
Cheers!</p>
"
11949674,"<pre><code>Date newDate = new Date();
newDate.setDate(newDate.getDate()+1);
System.out.println(newDate);
</code></pre>
"
356326,"<p>Instead of creating a special object for return type, I usually just return an array where all the returned information is stored. The benefit is that you can extend this array with new elements without creating new types and mess. The downside you have to know exactly what elements should present when array is returned from particular method to parse it correctly. Usually I agree on certain structure, like first element is always Boolean indication success, second is String with description, the rest is optional.
Example:</p>

<pre><code>public static void main(String[] args)
{
	Object[] result = methodReturningStatus();
	if(!(Boolean)result[0])
		System.out.println(""Method return: ""+ result[1]);
}

static Object[] methodReturningStatus()
{
	Object[] result = new Object[2];

	result[0] = false;
	result[1] = ""Error happened"";

	return result;
}
</code></pre>
"
63218,"<pre><code>public static String join(String[] strings, char del)
{
    StringBuffer sb = new StringBuffer();
    int len = strings.length;
    boolean appended = false;
    for (int i = 0; i &lt; len; i++)
    {
        if (appended)
        {
            sb.append(del);
        }
        sb.append(""""+strings[i]);
        appended = true;
    }
    return sb.toString();
}
</code></pre>
"
342110,"<p>It's not much of a ""trick"", but this works for 4-char strings.  Obviously it gets uglier for longer strings, but the idea is the same.</p>

<pre><code>char array[] = new char[4];
for (char c0 = 'a'; c0 &lt;= 'z'; c0++) {
  array[0] = c0;
  for (char c1 = 'a'; c1 &lt;= 'z'; c1++) {
    array[1] = c1;
    for (char c2 = 'a'; c2 &lt;= 'z'; c2++) {
      array[2] = c2;
      for (char c3 = 'a'; c3 &lt;= 'z'; c3++) {
        array[3] = c3;
        String s = new String(array);
        System.out.println(s);
      }
    }
  }
}
</code></pre>
"
12561974,"<p>I think below given code is solving the issue.</p>

<pre><code>Class Singleton {
    private static volatile  Singleton singleton = null;
    private Singleton() {
    }
    public static Singleton getInstance() {
        if (singleton == null) {
            synchronized(Singleton.class) {
                if (singleton == null) {
                    singleton =  new Singleton();
                }
            }
        }
     return singleton;
    }
    }
</code></pre>
"
25625661,"<p>I looked up the code below in the generated bytecode since I did not understand why the 
return value should be 2 and not 12.
It would be logical if the code in the finally clause would be put in between the assignment i=2; and the return statement return i;</p>

<p>However, the bytecode shows that value 12 is stored in variable 1 while value 2 is stored first in variable 1 but then copied to variable 2. (in L4). Or in other words: the compiler saves the return value in a separate variable and then returns that variable, notwithstanding the fact that the assignment i=12 is executed after the assignment i=2 to the same variable. </p>

<p>Therefore I conclude that when a variable is returned, its value is saved before the finally clause gets executed and therefore assignments to the to be returned variable in the finally clause will have no effect on the returned value.</p>

<pre><code>TRYCATCHBLOCK L0 L1 L2 null
L3
LINENUMBER 31 L3
ICONST_0
ISTORE 1
L0
LINENUMBER 33 L0
ICONST_2
ISTORE 1
L4
LINENUMBER 34 L4
ILOAD 1
ISTORE 2
L1
LINENUMBER 37 L1
BIPUSH 12
ISTORE 1
L5
LINENUMBER 38 L5
GETSTATIC java/lang/System.out : Ljava/io/PrintStream;
NEW java/lang/StringBuilder
DUP
INVOKESPECIAL java/lang/StringBuilder.&lt;init&gt; ()V
LDC ""In finally block. Value of i = ""
INVOKEVIRTUAL java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
ILOAD 1
INVOKEVIRTUAL java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;
INVOKEVIRTUAL java/lang/StringBuilder.toString ()Ljava/lang/String;
INVOKEVIRTUAL java/io/PrintStream.println (Ljava/lang/String;)V
ILOAD 2
IRETURN
</code></pre>

<p>Java code was: </p>

<pre><code>public static void main(String[] args) {

      System.out.println(Test.test());
}

public static int test() {

 int i = 0;
  try {
   i=2;
   return i;
 } finally {
   i = 12;
   System.out.println(""In finally block. Value of i = ""+i);
 }  
}
</code></pre>
"
27608651,"<p><strong>Simple program</strong></p>

<pre><code>import java.io.*;
class Aclass
{
    public int a;
}
public class test
{
    public static void foo_obj(Aclass obj)
    {
        obj.a=5;
    }
    public static void foo_int(int a)
    {
        a=3;
    }
    public static void main(String args[])
    {
        //test passing an object
        Aclass ob = new Aclass();
        ob.a=0;
        foo_obj(ob);
        System.out.println(ob.a);//prints 5

        //test passing an integer
        int i=0;
        foo_int(i);
        System.out.println(i);//prints 0
    }
}
</code></pre>

<p>From a C/C++ programmer's point of view, java uses pass by value, so for primitive data types (int, char etc) changes in the function does not reflect in the calling function. But when you pass an object and in the function you change its data members or call member functions which can change the state of the object, the calling function will get the changes.</p>
"
28027899,"<p>You can encapsulate Your object into an AtomicReference object to get it passed-by-reference to a method : <code>AtomicReference&lt;MyType&gt; q = new AtomicReference&lt;MyType&gt;('initialvalue')</code>. In the method to be called, replace each occurence of <code>x</code> by <code>x.get()</code> or <code>x.set(...)</code> respectivly.</p>
"
115952,"<p>If you don't want to use @SuppressWarnings(""unchecked"") you can do the following.</p>

<pre><code>   Query q = sess.createQuery(""from Cat cat"");
   List&lt;?&gt; results =(List&lt;?&gt;) q.list();
   List&lt;Cat&gt; cats = new ArrayList&lt;Cat&gt;();
   for(Object result:results) {
       Cat cat = (Cat) result;
       cats.add(cat);
    }
</code></pre>

<p>FYI - I created a util method that does this for me so it doesn't litter my code and I don't have to use @SupressWarning. </p>
"
29241014,"<pre><code>import java.awt.*;
import java.awt.event.*;
import javax.swing.*; 
public class MyJRadioButton extends JFrame implements ActionListener
{
    JRadioButton rb1,rb2;  //components
    ButtonGroup bg;
    MyJRadioButton()
{
    setLayout(new FlowLayout());
    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

    rb1=new JRadioButton(""male"");
    rb2=new JRadioButton(""female"");

    //add radio button to button group
    bg=new ButtonGroup();
    bg.add(rb1);
    bg.add(rb2);

    //add radio buttons to frame,not button group
    add(rb1);
    add(rb2);
    //add action listener to JRadioButton, not ButtonGroup
    rb1.addActionListener(this);
    rb2.addActionListener(this);
    pack();
    setVisible(true);
}
public static void main(String[] args)
{
    new MyJRadioButton(); //calling constructor
}
@Override
public void actionPerformed(ActionEvent e) 
{
    System.out.println(((JRadioButton) e.getSource()).getActionCommand());
}
</code></pre>

<p>}</p>
"
140181,"<p>I think will do it for you. I cobbled it together from a similar function that returned the data as a string:</p>

<pre><code>private static byte[] decode(String encoded) {
    byte result[] = new byte[encoded/2];
    char enc[] = encoded.toUpperCase().toCharArray();
    StringBuffer curr;
    for (int i = 0; i &lt; enc.length; i += 2) {
        curr = new StringBuffer("""");
        curr.append(String.valueOf(enc[i]));
        curr.append(String.valueOf(enc[i + 1]));
        result[i] = (byte) Integer.parseInt(curr.toString(), 16);
    }
    return result;
}
</code></pre>
"
29398128,"<p>Updated for your question</p>

<pre><code> ArrayList&lt;E&gt; list2 = new ArrayList&lt;E&gt;();


    for (int i = 1; i &lt; list.size(); i++) {
        String a1 = list2.get(i);
        if (!list2.contains(a1)) {
            list2.add(a1);
        }
    }
</code></pre>
"
17477921,"<p>Use the following piece of code</p>

<pre><code>ActionListener a=new ActionListener(){
   public void actionPerformed(ActionEvent ae)
   {
    // your code
   }
};
getRootPane().registerKeyboardAction(a,KeyStroke.getKeyStroke(""ctrl D""),JComponent.WHEN_IN_FOCUSED_WINDOW);
</code></pre>

<p>Replace ""ctrl D"" with the shortcut you want.</p>
"
390722,"<p>Generally, this indicates someone who isn't comfortable with the new-fashioned C++ style of declaring when initialized.  </p>

<p>Back in the C days, it wasn't considered good form to define auto variables in an inner scope; C++ eliminated the parser restriction, and Java extended that.</p>

<p>So you see code that has</p>

<pre><code>int q;
for(q=0;q&lt;MAX;q++){
    String s;
    int ix;
    // other stuff
    s = new String(""Hello, there!"");
    // do something with s
}
</code></pre>

<p>In the extreme case, all the declarations may be at the top of a function, and not in enclosed scopes like the <code>for</code> loop here.</p>

<p>IN general, though, the effect of this is to cause a String ctor to be called once, and the resulting String thrown away.  (The desire to avoid this is just what led Stroustrup to allow declarations anywhere in the code.)  So you are correct that it's unnecessary and bad style at best, and possibly actually bad.</p>
"
19191359,"<p>There is another option if your goal is to generate a fixed list at runtime, which is as simple as it is effective:</p>

<pre><code>static final ArrayList&lt;Element&gt; myList = generateMyList();

private static ArrayList&lt;Element&gt; generateMyList() {
  final ArrayList&lt;Element&gt; result = new ArrayList&lt;&gt;();
  result.add(new Element(1));
  result.add(new Element(2));
  result.add(new Element(3));
  result.add(new Element(4));
  return result;
}
</code></pre>

<p><br>
The benefit of using this pattern is, that the list is for once generated very intuitively and therefore is very easy to modify even with large lists or complex initialization, while on the other hand always contains the same Elements on every actual run of the program (unless you change it at a later point of course).</p>
"
19849576,"<pre><code>public class Singleton {

    private static final Singleton INSTANCE = new Singleton();

    private Singleton(){
    if (INSTANCE != null)
        throw new IllegalStateException (“Already instantiated...”);
}

    public synchronized static Singleton getInstance() { 
    return INSTANCE;

    }

}
</code></pre>

<p>As we have added the Synchronized keyword before getInstance, we have avoided the race condition in the case when two threads call the getInstance at the same time.</p>
"
141279,"<p>No there isn't.</p>

<p>You can</p>

<pre><code>public void func(){

  {
    ArrayList l  =  new ArrayList();
  }
  System.out.println(""Hello"");

}
</code></pre>

<p>This gives you the limited scope of the using clause, but there isn't any IDisposable interface to call finalization code.  You can use try{}catch(){}Finally{}, but it doesn't have the sugar of using. Incidentally using finalizers in Java is generally a bad idea.</p>
"
174644,"<p>The above code is bad because it is equivalent as the following. </p>

<pre><code>// this is bad
int val = Integer.MIN_VALUE;
try
{
   val = Integer.parseInt(userdata);
}
catch (NumberFormatException ignoreException) { }
</code></pre>

<p>The exception is ignored completely. Also, the magic token is bad because an user can pass in -2147483648 (Integer.MIN_VALUE).</p>

<p>The generic parse-able question is not beneficial.  Rather, it should be relevant to the context.  Your application has a specific requirement.  You can define your method as</p>

<pre><code>private boolean isUserValueAcceptable(String userData)
{
   return (    isNumber(userData)    
          &amp;&amp;   isInteger(userData)   
          &amp;&amp;   isBetween(userData, Integer.MIN_VALUE, Integer.MAX_VALUE ) 
          );
}
</code></pre>

<p>Where you can documentation the requirement and you can create well defined and testable rules.</p>
"
22047890,"<p>You can make it the hard way:</p>

<pre><code>package gaming;

import java.util.Random;

public class game2 {

public static char c;
public static Random r = new Random();
public static int i = r.nextInt(25);
public static int i2 = r.nextInt(25);
public static int i3 = r.nextInt(25);
public static int i4= r.nextInt(25);
public static int i5 = r.nextInt(25);
public static int num2 = r.nextInt(9);
public static int num3= r.nextInt(9);
public static String s1 = String.valueOf(num2);
public static String s2 = String.valueOf(num3);

public static void main(String[] args){


    System.out.print(""The pin is: "");
    changeToString(i);
    System.out.print(c);
    changeToString(i2);
    System.out.print(c);
    changeToString(i3);
    System.out.print(c);
    changeToString(i4);
    System.out.print(c);
    changeToString(i5);
    System.out.print(c);
    System.out.print(s1);
    System.out.print(s2);

}

public static void changeToString(int rand){

    switch (rand){

    case 0:

        c = 'A';
        break;
    case 1:

        c = 'B';
        break;
    case 2:

        c = 'C';
        break;
    case 3:

        c = 'D';
        break;
    case 4:

        c = 'E';
        break;
    case 5:

        c = 'F';
        break;
    case 6:

        c = 'G';
        break;
    case 7:

        c = 'H';
        break;
    case 8:

        c = 'I';
        break;
    case 9:

        c = 'J';
        break;
    case 10:

        c = 'K';
        break;
    case 11:

        c = 'L';
        break;
    case 12:

        c = 'M';
        break;
    case 13:

        c = 'N';
        break;
    case 14:

        c = 'O';
        break;
    case 15:

        c = 'P';
        break;
    case 16:

        c = 'Q';
        break;
    case 17:

        c = 'R';
        break;
    case 18:

        c = 'S';
        break;
    case 19:

        c = 'T';
        break;
    case 20:

        c = 'U';
        break;
    case 21:

        c = 'V';
        break;
    case 22:

        c = 'W';
        break;
    case 23:

        c = 'X';
        break;
    case 24:

        c = 'Y';
        break;
    case 25:

        c = 'Z';
        break;

    }

}
}
</code></pre>
"
29821817,"<p>This comes from a practice in the programming language C. There are three sorts of (big-block) comments:</p>

<pre><code>/*
 * foo
 */
</code></pre>

<p>and</p>

<pre><code>/**
 * bar
 */
</code></pre>

<p>and</p>

<pre><code>/*-
 * baz
 */
</code></pre>

<p>In C, as well as in Java itself, these are completely identical. It is the tooling that makes a difference.</p>

<p>There were automatic code indentation tools even decades back, and they reformatted (line wrap, etc.) the “foo” style comments, but left the other two alone. Eventually, people began using the “baz” style comments for, e.g. the licencing block at the top of the file (that shall not be reformatted), and the “bar” style comments for above a function to describe what it does (usually, loosely so, but still listing parameters, etc. so reformatting would have destroyed the layout). (Other comments to not be reformatted, e.g. a block about concepts, had either “bar” or “baz” style, people never standardised on one of them.)</p>

<p>In Java, this has been formalised more: the “bar” style comments are processed by Javadoc (and PHPdoc), as the other excellent answers already documented. I am just trying to give a bit of historic background and understanding here.</p>

<p>In contemporary C, the <a href=""https://www.mirbsd.org/man1/indent"" rel=""nofollow"">indent(1)</a> programme still works like that (as does GNU indent), see the “'Box' comments” paragraph in the “Comments” subsection. C programmers that do know about this (which often does not include newcomers or “career changers” (wrt. the language)) tend to keep the distinction; in addition, Javadoc-style formatting of “bar”-style comment blocks has become more common.</p>
"
175498,"<p>The exception mechanism is valuable, as it is the only way to get a status indicator in combination with a response value. Furthermore, the status indicator is standardized. If there is an error you get an exception. That way you don't have to think of an error indicator yourself. 
The controversy is not so much with exceptions, but with Checked Exceptions (e.g. the ones you have to catch or declare).</p>

<p>Personally I feel you picked one of the examples where exceptions are really valuable. It is a common problem the user enters the wrong value, and typically you will need to get back to the user for the correct value. You normally don't revert to the default value if you ask the user; that gives the user the impression his input matters. </p>

<p>If you do not want to deal with the exception, just wrap it in a RuntimeException (or derived class) and it will allow you to ignore the exception in your code (and kill your application when it occurs; that's fine too sometimes).</p>

<p>Some examples on how I would handle NumberFormat exceptions:
In web app configuration data:</p>

<pre><code>loadCertainProperty(String propVal) {
  try
  {
    val = Integer.parseInt(userdata);
    return val;
  }
  catch (NumberFormatException nfe)
  { // RuntimeException need not be declared
    throw new RuntimeException(""Property certainProperty in your configuration is expected to be "" +
                               "" an integer, but was '"" + propVal + ""'. Please correct your "" +
                               ""configuration and start again"");
    // After starting an enterprise application the sysadmin should always check availability
    // and can now correct the property value
  }
}
</code></pre>

<p>In a GUI:</p>

<pre><code>public int askValue() {
  // TODO add opt-out button; see Swing docs for standard dialog handling
  boolean valueOk = false;
  while(!valueOk) {
    try {
      String val = dialog(""Please enter integer value for FOO"");
      val = Integer.parseInt(userdata);
      return val; 
    } catch (NumberFormatException nfe) {
      // Ignoring this; I don't care how many typo's the customer makes
    }
  }
}
</code></pre>

<p>In a web form: return the form to the user with a usefull error message and a chance to
correct. Most frameworks offer a standardized way of validation.</p>
"
27059883,"<pre><code>public class OccurencesInString { public static void main(String[] args) { String str = ""NARENDRA AMILINENI""; HashMap occur = new HashMap(); int count =0; String key = null; for(int i=0;i&lt;str.length()-1;i++){ key = String.valueOf(str.charAt(i)); if(occur.containsKey(key)){ count = (Integer)occur.get(key); occur.put(key,++count); }else{ occur.put(key,1); } } System.out.println(occur); } }
</code></pre>
"
444393,"<p>Mmhh I know you've already discarded URLEncoder, but despite of what the docs say, I decided to give it a try.</p>

<p>You said:</p>

<blockquote>
  <p>For example, given an input:</p>
  
  <p><em><a href=""http://google.com/resource?key=value"" rel=""nofollow"">http://google.com/resource?key=value</a></em></p>
  
  <p>I expect the output:</p>
  
  <p><em>http%3a%2f%2fgoogle.com%2fresource%3fkey%3dvalue</em></p>
</blockquote>

<p>So:</p>

<pre><code>C:\oreyes\samples\java\URL&gt;type URLEncodeSample.java
import java.net.*;

public class URLEncodeSample {
    public static void main( String [] args ) throws Throwable {
        System.out.println( URLEncoder.encode( args[0], ""UTF-8"" ));
    }
}

C:\oreyes\samples\java\URL&gt;javac URLEncodeSample.java

C:\oreyes\samples\java\URL&gt;java URLEncodeSample ""http://google.com/resource?key=value""
http%3A%2F%2Fgoogle.com%2Fresource%3Fkey%3Dvalue
</code></pre>

<p>As expected.</p>

<p>What would be the problem with this?</p>
"
187694,"<p>Here's a method that I've written that will format phone numbers to (###) ###-####:</p>

<pre><code>String formatTeleNumber(String s) {
    StringBuffer number = new StringBuffer();

    if (s.length() == 0) {

        return ""(999)999-9999"";
    }

    // Strip all non-numbers
    for (int i = 0; i &lt; s.length(); i++) {

        if (Character.isDigit(s.charAt(i))) {
           number.append(s.charAt(i));
        }
    }

    // Pad with 0s
    for (int i = number.length(); i &lt; 10; i++) {

        number.insert(0, '0');
    }

    // Format telephone number to (###)###-####
    number = new StringBuffer(number.substring(number.length() - 10));
    number.insert(0, '(');
    number.insert(4, ')');
    number.insert(8, '-');

    return number.toString();
}
</code></pre>

<p>Simply strip out anything that's not a number, pad it with 0's (if required), and then insert the correct characters at the correct locations.</p>
"
471388,"<p>Unless <code>i</code> is being changed inside the loop?</p>
"
473499,"<p>Most likely, Bill the Lizard is right. In case it still doesn't work out, you could extract the test name from the stack dump of the current thread (<code>Thread.currentThread().getStackTrace()</code>) -- rather hacky, but maybe the end justifies the means :)</p>
"
200496,"<p>I found this answer for cloning multidimensional arrays on <a href=""http://www.jguru.com/faq/view.jsp?EID=20435"" rel=""nofollow"">jGuru</a>:</p>

<pre><code>ByteArrayOutputStream baos = new ByteArrayOutputStream();
ObjectOutputStream oos = new ObjectOutputStream(baos);
oos.writeObject(this);
ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
ObjectInputStream ois = new ObjectInputStream(bais);
Object deepCopy = ois.readObject();
</code></pre>
"
309974,"<p>You're assuming that the <code>contains()</code> method in <code>List</code> knows the type of the object at runtime, which is incorrect.  </p>

<p>Because of erasure, <code>List&lt;MyClass&gt;</code> becomes just a regular <code>List</code> at runtime, so the <code>contains()</code> method sees its parameter as an <code>Object</code>, thus invoking Object's <code>equals()</code> instead of the one you defined for <code>MyClass</code> in its execution.</p>
"
29466399,"<p>You can use this:</p>

<pre><code>String subString = testString.subString(firstIndex, secondIndex);
</code></pre>

<p>and you can get the index by this:</p>

<pre><code>int index = testString.indexOf(String);
</code></pre>
"
205495,"<p>Psuedo-code:</p>

<ol>
<li>Split the strings by the path seperator (""/"")</li>
<li>Find the greatest common path by iterating thru the result of the split string (so you'd end up with ""/var/data"" or ""/a"" in your two examples)</li>
<li><code>return ""."" + whicheverPathIsLonger.substring(commonPath.length);</code></li>
</ol>
"
208803,"<p>You <em>could</em> override <code>finalize()</code> in your object, but that is problematic for reasons others have mentioned.</p>

<p>For your specific example, you could take a look at using something like  <a href=""http://java.sun.com/j2se/1.4.2/docs/api/java/io/File.html#deleteOnExit()"" rel=""nofollow""><code>File.deleteOnExit()</code></a>, which would remove the file once the VM exits.</p>
"
29549185,"<pre><code>public static boolean isSumOfSquares(int num) {
         int sum = 0;
         int lowerBound = 1;

         //largest square root that is less than num
         int upperBound = (int)Math.floor(Math.sqrt(num)); 

         while(lowerBound != upperBound) {
             sum = 0
             for(int x=lowerBound; x&lt;upperBound; x++) {
                 sum += x * x;
             }

             if(sum != num) {
                 lowerBound++;
             }
             else {
                 return true;
             }
         }

         return false;
     }
</code></pre>
"
29549363,"<p>Perhaps I am missing the point, but considering N, for 1&lt;=N&lt;=1000 the most efficient way would be to solve the problem some way (perhaps brute force) and store the solutions in a switch.</p>

<pre><code>switch(n){
    case 5:
    case 13:
    ...
        return true;
    default:
        return false;
}
</code></pre>
"
29549399,"<pre><code>public static boolean validNumber(int num) {
    if (!isPalindrome(num))
        return false;
    int i = 1, j = 2, sum = 1*1 + 2*2;
    while (i &lt; j)
        if (sum &gt;  num) {
            sum = sum - i*i; i = i + 1;
        } else if (sum &lt;  num) {
            j = j + 1; sum = sum + j*j;
        } else {
            return true;
        }
    return false;
}
</code></pre>

<p>However There Are Only Eleven ""Good Numbers"" { 5, 55, 77, 181, 313, 434, 505, 545, 595, 636, 818 }. And This Grows Very Slow, For N = 10^6, There Are Only 59.</p>
"
223718,"<p>You could do the cast with <code>@SuppressWarnings</code>.   I believe that would be appropriate in this case, just make sure you document why in a comment.</p>

<p>Alternately, do the following:</p>

<pre><code>public List&lt;JComponent&gt; getComponents()
{
  return new ArrayList&lt;JComponent&gt;( buttons );
}
</code></pre>

<p>Yes I know this makes a copy and the list is already read-only.  But until the profiler tells you otherwise, I would assume the penalty is small.</p>

<p>@Calum: I agree that using ?-expressions in return types is bad form because calling code is unable to do this for example:</p>

<pre><code>List&lt;JComponent&gt; list = obj.getComponents();
</code></pre>
"
212753,"<p>If you make the logger nonstatic, you can at least inherit it:</p>

<pre><code>public class SomeBaseClass
{
    protected Logger logger = Logger.getLogger(getClass());
}

public class SubClass extends SomeBaseClass
{
    public void doit() { logger.debug(""doit!!!!""); }
}
</code></pre>

<p>That's how I've always done it.</p>
"
483587,"<p>Have you tried using a wildcard in the classpath? So you would use something like:</p>

<pre><code>javac MyApp.java -cp /some/path/to/libraries/*.jar
</code></pre>

<p>I've not used java for a while so not sure if the above is possible, but it's what I would expect to be the syntax.</p>
"
29986452,"<p>I thought it is straightforward.</p>

<p>When you pass in 2, it will return </p>

<pre><code> myMethod(1) + myMethod(1)
</code></pre>

<p>which translates to ** + **...</p>
"
245472,"<p>First, let's take care of the static scope issue ... Your class is defining an object, but never actually instantiating one.  Since main is statically scoped, the first thing to do is get an object, then execute it's methods like this:</p>

<pre><code>public class RecursiveTry{

    private int[] n = {1,2,4,3,3,32,100};

    public static void main(String[] args){
        RecursiveTry maxObject = new RecursiveTry();
        System.out.println(maxObject.Max(maxObject.n, 0));
    }

    public int Max(int[] n, int start) {
        if(start == n.length - 1) {
        	return n[start];
        } else { 
    	    int maxRest = Max(n, start + 1);
    	    if(n[start] &gt; maxRest) {
    	        return n[start];
    	    }
    	    return maxRest;
        }
    }

}
</code></pre>

<p>So now we have a RecursiveTry object named maxObject that does not require the static scope.  I'm not sure that finding a maximum is effective using recursion as the number of iterations in the traditional looping method is roughly equivalent, but the amount of stack used is larger using recursion.  But for this example, I'd pare it down a lot.</p>

<p>One of the advantages of recursion is that your state doesn't generally need to be persisted during the repeated tests like it does in iteration.  Here, I've conceded to the use of a variable to hold the starting point, because it's less CPU intensive that passing a new int[] that contains all the items except for the first one.</p>
"
30028334,"<p>There are two types of Exceptions:</p>

<p>Checked and Unchecked.</p>

<p><a href=""http://www.geeksforgeeks.org/checked-vs-unchecked-exceptions-in-java/"" rel=""nofollow"">This page</a> says:</p>

<blockquote>
  <p>Checked: are the exceptions that are checked at compile time</p>
  
  <p>Unchecked are the exceptions that are not checked at compiled time</p>

<pre><code>            +-----------+
          | Throwable |
            +-----------+
             /         \
          /           \
      +-------+          +-----------+
      | Error |          | Exception |
      +-------+          +-----------+
    /  |  \            /     |    \
      \______/            \______/     \
                                   +------------------+
    unchecked       checked        | RuntimeException |
                                   +------------------+
                                    /   |    |      \
                                    \________________/

                                        unchecked
</code></pre>
</blockquote>

<p>so this a general rule if a client can reasonably be expected to recover from an exception, make it a checked exception. If a client cannot do anything to recover from the exception, make it an unchecked exception</p>

<p>Also <a href=""http://www.javatpoint.com/throws-keyword-and-difference-between-throw-and-throws"" rel=""nofollow"">on this site</a>, it says:</p>

<blockquote>
  <p>Exception Handling is mainly used to handle the checked exceptions. If
  there occurs any unchecked exception such as NullPointerException, it
  is programmers fault that he is not performing check up before the
  code being used.</p>
</blockquote>
"
318247,"<p>You can pass parameters into your initial java process with -D:</p>

<pre><code>java -cp &lt;classpath&gt; -Dkey1=value -Dkey2=value ...
</code></pre>
"
423759,"<p>See this option:</p>

<pre><code>public class WaitForAnyRedux {

private static final int POOL_SIZE = 10;

public static &lt;T&gt; T waitForAny(Collection&lt;T&gt; collection) throws InterruptedException, ExecutionException {

    List&lt;Callable&lt;T&gt;&gt; callables = new ArrayList&lt;Callable&lt;T&gt;&gt;();
    for (final T t : collection) {
        Callable&lt;T&gt; callable = Executors.callable(new Thread() {

            @Override
            public void run() {
                synchronized (t) {
                    try {
                        t.wait();
                    } catch (InterruptedException e) {
                    }
                }
            }
        }, t);
        callables.add(callable);
    }

    BlockingQueue&lt;Runnable&gt; queue = new ArrayBlockingQueue&lt;Runnable&gt;(POOL_SIZE);
    ExecutorService executorService = new ThreadPoolExecutor(POOL_SIZE, POOL_SIZE, 0, TimeUnit.SECONDS, queue);
    return executorService.invokeAny(callables);
}

static public void main(String[] args) throws InterruptedException, ExecutionException {

    final List&lt;Integer&gt; integers = new ArrayList&lt;Integer&gt;();
    for (int i = 0; i &lt; POOL_SIZE; i++) {
        integers.add(i);
    }

    (new Thread() {
        public void run() {
            Integer notified = null;
            try {
                notified = waitForAny(integers);
            } catch (InterruptedException e) {
                e.printStackTrace();
            } catch (ExecutionException e) {
                e.printStackTrace();
            }
            System.out.println(""notified="" + notified);
        }

    }).start();


    synchronized (integers) {
        integers.wait(3000);
    }


    Integer randomInt = integers.get((new Random()).nextInt(POOL_SIZE));
    System.out.println(""Waking up "" + randomInt);
    synchronized (randomInt) {
        randomInt.notify();
    }
  }
}
</code></pre>
"
285346,"<p>You could write the code in class B as follows:</p>

<pre><code>public int displayAlteredValue(int inp) 
{
    return -1;
}
</code></pre>

<p>and indicate on the function that -1 is an error return. For int this doesn't really work, but if you returned a class, you could return null if they call the single parameter version of the method.</p>
"
303485,"<p>I haven't tried it yet, but I think Collections.copy will do that.</p>

<p>[EDIT] Now, I tried:</p>

<pre><code>static String GetRandomString(int length)
{
  UUID uuid = UUID.randomUUID();
  return uuid.toString().substring(0, length);  
}

public static void main(String[] args)
{
  ArrayList&lt;String&gt; al = new ArrayList&lt;String&gt;(20);
  for (int i = 0; i &lt; 10; i++)
  {
    al.add(GetRandomString(7));
  }
  ArrayList&lt;String&gt; cloneArray = new ArrayList&lt;String&gt;(al);
  Collections.copy(cloneArray, al);
  System.out.println(al);
  System.out.println(cloneArray);
  for (int i = 9; i &gt;= 0; i -= 2)
  {
    al.remove(i);
  }
  System.out.println(al);
  System.out.println(cloneArray);
}
</code></pre>
"
2293195,"<p>terribly late but i just encountered this issue and this is my fix:</p>

<pre><code>private static String removeNonUtf8CompliantCharacters( final String inString ) {
    if (null == inString ) return null;
    byte[] byteArr = inString.getBytes();
    for ( int i=0; i &lt; byteArr.length; i++ ) {
        byte ch= byteArr[i]; 
        // remove any characters outside the valid UTF-8 range as well as all control characters
        // except tabs and new lines
        if ( !( (ch &gt; 31 &amp;&amp; ch &lt; 253 ) || ch == '\t' || ch == '\n' || ch == '\r') ) {
            byteArr[i]=' ';
        }
    }
    return new String( byteArr );
}
</code></pre>
"
13409132,"<p>I think this should work nicely:</p>

<pre><code>Dim MyDate As Date = #11/14/2012#  'This is just an example date

MyDate = MyDate.AddDays(DateTime.DaysInMonth(MyDate.Year, MyDate.Month) - MyDate.Day)
</code></pre>
"
2514431,"<p>Eclipse java code templates for eclipse 3.5.0, derived from Bruno Conde's templates:</p>

<pre><code>@Override
public boolean equals(Object obj) {
    if (obj == null) {
        return false;
    } else if (obj == this) {
        return true;
    } else if (obj.getClass() != this.getClass()) {
        return false;
    }

    ${enclosing_type} other = (${enclosing_type}) obj;
    return new EqualsBuilder()//
            .appendSuper(super.equals(other))//
            .append(${cursor})//
                .isEquals();
}
</code></pre>

<p>and</p>

<pre><code>@Override
public int hashCode() {
    return new HashCodeBuilder(${cursor})//
            .append()//
            .toHashCode();
}
</code></pre>
"
308948,"<p>You have to avoid Lazy initialization. It leads to problems later.<br>
But if you have to do it because the initialization is too heavy you have to do it like this:</p>

<p>Static fields:</p>

<pre><code>// Lazy initialization holder class idiom for static fields
private static class FieldHolder {
   static final FieldType field = computeFieldValue();
}
static FieldType getField() { return FieldHolder.field; }
</code></pre>

<p>Instance fields:</p>

<pre><code>// Double-check idiom for lazy initialization of instance fields
private volatile FieldType field;
FieldType getField() {
   FieldType result = field;
   if (result == null) { // First check (no locking)
      synchronized(this) {
         result = field;
         if (result == null) // Second check (with locking)
            field = result = computeFieldValue();
      }
   }
   return result;
}
</code></pre>

<p>Acording to Joshua Bolch book's ""Effective Java™
Second Edition"" (ISBN-13: 978-0-321-35668-0):
<br>
<strong>""Use lazy initialization judiciously""</strong></p>
"
440824,"<p>If you just want to group the files by their extension and do not care about the actual alphabetical order, you can use this:</p>

<p>I think the simplest thing you can do that also works when the filenname does not have a ""."" is to just reverse the names and compare them.</p>

<pre><code>Arrays.sort(ary, new Comparator&lt;String&gt;() {
    @Override
    public int compare(String o1, String o2) {
        String r1 = new StringBuffer(o1).reverse().toString();
        String r2 = new StringBuffer(o2).reverse().toString();
        return r1.compareTo(r2);
    }
});
</code></pre>

<p>Its a shame that java's string does not even have a reverse().</p>
"
15754387,"<p>In C, you would do it by passing pointers to placeholders for the results as arguments:</p>

<pre><code>void getShoeAndWaistSizes(int *shoeSize, int *waistSize) {
    *shoeSize = 36;
    *waistSize = 45;
}
...
int shoeSize, waistSize;
getShoeAndWaistSize(&amp;shoeSize, &amp;waistSize);
int i = shoeSize + waistSize;
</code></pre>

<p>Let's try something similar, in Java.</p>

<pre><code>void getShoeAndWaistSizes(List&lt;Integer&gt; shoeSize, List&lt;Integer&gt; waistSize) {
    shoeSize.add(36);
    waistSize.add(45);
}
...
List&lt;Integer&gt; shoeSize = new List&lt;&gt;();
List&lt;Integer&gt; waistSize = new List&lt;&gt;();
getShoeAndWaistSizes(shoeSize, waistSize);
int i = shoeSize.get(0) + waistSize.get(0);
</code></pre>
"
3056891,"<p>for me a pretty simple and fool proof way would be to simply make a method caller method like so:</p>

<pre><code>public static object methodCaller(String methodName)
{
    if(methodName.equals(""getName""))
        return className.getName();
}
</code></pre>

<p>then when you need to call the method simply put something like this</p>

<pre><code>//calling a toString method is unnessary here, but i use it to have my programs to both rigid and self-explanitory 
System.out.println(methodCaller(methodName).toString()); 
</code></pre>
"
30210458,"<pre><code>public class RandomGenerator {
          private static SecureRandom prng;
          private static final Logger LOG = LoggerFactory
                    .getLogger(AuthTokenGenerator.class);
            static {
                try {
                    // Initialize SecureRandom
                    prng = SecureRandom.getInstance(""SHA1PRNG"");
                } catch (NoSuchAlgorithmException e) {
                    LOG.info(""ERROR while intantiating Secure Random:   "" + prng);
            }
        }
        /**
         * @return
         */
        public static String getToken() {
            try {
                LOG.info(""About to Generate Token in getToken()"");
                String token;
                // generate a random number
                String randomNum = Integer.toString(prng.nextInt());
                // get its digest
                MessageDigest sha = MessageDigest.getInstance(""SHA-1"");
                byte[] result = sha.digest(randomNum.getBytes());
                token = hexEncode(result);
                LOG.info(""Token in getToken():   "" + token);
                return token;
            } catch (NoSuchAlgorithmException ex) {
                return null;
            }
        }
        /**
         * @param aInput
         * @return
         */
        private static String hexEncode(byte[] aInput) {
            StringBuilder result = new StringBuilder();
            char[] digits = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',
                    'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z' };
            for (byte b : aInput) {
                result.append(digits[(b &amp; 0xf0) &gt;&gt; 4]);
                result.append(digits[b &amp; 0x0f]);
            }
            return result.toString();
        }
}
</code></pre>
"
16113198,"<p>This worked fine for me, too:</p>

<pre><code>&lt;welcome-file-list&gt;
&lt;welcome-file&gt;MyAction.action&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;
</code></pre>

<p>I was not able to get the default action to execute when the user enters the webapp using the root of the web app (mywebapp/).  There is a bug in struts 2.3.12 that won't go to the default action or use the welcome page when you use the root url.  This will be a common occurrence.  Once I changed back to struts 2.1.8 it worked fine.</p>
"
314980,"<p>In the Parent class initiate the boolean to null and in the child class build a method to check to see if the boolean has been set</p>

<p>in Parent class  </p>

<pre><code>private Boolean a = null;

public void setA(Boolean a) {
	this.a = a;
}


public Boolean getA() {
	return a;
}
</code></pre>

<p>In the Child Class </p>

<pre><code>if (a == true)
{
dothis;
}
else if (a == false)
{
dothat;
}
else
{
assert false : ""Boolean a has not been set"";
}
</code></pre>

<p>Make sure that assertions are turned on. Assertions are only for the development cycle and test cycle, they are not for runtime exceptions.</p>
"
3502497,"<p>First ,you have to know the encoding of string that you want to convert.Because the java.io.InputStream operates an underlying array of bytes,however,a string is composed by a array of character that needs an encoding, e,g. UTF-8,the JDK will take the default encoding that is taken from System.getProperty(""file.encoding"",""UTF-8""); </p>

<pre><code>byte[] bytes=new byte[inputStream.available()];
inputStream.read(bytes);
String s = new String(bytes);
</code></pre>

<p>If inputStream's byte array is very big, you could do it in loop.</p>

<p>:EOF</p>
"
16613662,"<p>I used to mainly deal with C++ and that is what lead me to the search of a destructor as well. I am using JAVA a lot now. What I did, and it may not be the best case for everyone, but I implemented my own destructor by reseting all the values to either 0 or there default through a function.</p>

<p>Example:</p>

<pre><code>public myDestructor() {

variableA = 0; //INT
variableB = 0.0; //DOUBLE &amp; FLOAT
variableC = ""NO NAME ENTERED""; //TEXT &amp; STRING
variableD = false; //BOOL

}
</code></pre>

<p>Ideally this won't work for all situations, but where there are global variables it will work as long as you don't have a ton of them.</p>

<p>I know I am not the best Java programmer, but it seems to be working for me.</p>
"
4200787,"<p>you can simply make a method with multiple replaceAll() like</p>

<pre><code>String RemoveTag(String html){
   html = html.replaceAll(""\\&lt;.*?&gt;"","""")
   html = html.replaceAll(""&amp;nbsp;"","""");
   html = html.replaceAll(""&amp;amp;""."""");
   ----------
   ----------
   return html;
}
</code></pre>

<p>Use this link for most common replacements you need:
<a href=""http://tunes.org/wiki/html_20special_20characters_20and_20symbols.html"" rel=""nofollow"">http://tunes.org/wiki/html_20special_20characters_20and_20symbols.html</a></p>

<p>It is simple but effective. I use this method first to remove the junk but not the very first line i.e replaceAll(""\&lt;.*?>"",""""), and later i use specific keywords to search for indexes and then use .substring(start, end) method to strip away unnecessary stuff. As this is more robust and you can pin point exactly what you need in the entire html page.</p>
"
4205620,"<pre><code>str.contains(""!="") ^ str.startsWith(""not("")
</code></pre>

<p>looks better for me than</p>

<pre><code>str.contains(""!="") != str.startsWith(""not("")
</code></pre>
"
394361,"<p>I agree with the Visitor usage. </p>

<p>Additionally if you don't have access to the Ball hierarchy ( source code access ) or simple don't feel like modifying anything there; you could modify your client class and decide from there. </p>

<p>The bad thing of course is you'll end up with many if/elseif statements.</p>

<p>You'll need to add the generic method ( <em>add( Ball )</em>  )  and from there call the others. This is quick, easy and dirty. </p>

<p>:) </p>

<pre><code>public class Test {
    public static void main( String [] args ) { 
        Ball ball = new IllegalBall();
        Test test = new Test();
        test.add( ball );
        test.add( new IllegalBall() );
        test.add( new LegalBall() );
    }
    private void add( Ball ball ){
        System.out.println(""Generic method: I'll have someone handling this : ""  + ball );
        if( ball instanceof IllegalBall ) {
            add( ( IllegalBall ) ball );
        } else if( ball instanceof LegalBall ) {
            add( ( LegalBall ) ball );
        }
    }
    private void add( IllegalBall ball ){
        System.out.println(""illega-ball: I won't do anything about it! "" + ball );
    }
    private void add( LegalBall ball ) { 
        System.out.println(""legal-ball: Hey this is legal I'll do my best!! "" + ball );
    }
}

class Ball {}
class IllegalBall extends Ball {}
class LegalBall extends Ball {}
</code></pre>

<p>BTW if you don't have the reference directly the compiler will send it to the correct method as in the last 2 calls.</p>

<p>As you can see you just need to add the following code:</p>

<pre><code>private void add( Ball ball ){
    System.out.println(""Generic method: I'll have someone handling this : ""  + ball );
    if( ball instanceof IllegalBall ) {
        add( ( IllegalBall ) ball );
    } else if( ball instanceof LegalBall ) {
        add( ( LegalBall ) ball );
    }
}
</code></pre>
"
17931873,"<p>Just use the beef class:</p>

<pre><code>public &lt;T&gt; T beefmarshal( Class&lt;beef&gt; beefClass, InputBeef inputBeef )
     throws JAXBException {
     String packageName = docClass.getPackage().getBeef();
     JAXBContext beef = JAXBContext.newInstance( packageName );
     Unmarshaller u = beef.createBeef();
     JAXBElement&lt;T&gt; doc = (JAXBElement&lt;T&gt;)u.beefmarshal( inputBeef );
     return doc.getBeef();
}
</code></pre>
"
399074,"<p>No no no, with all due respect to Josh Bloch, <em>never throw an <code>AssertionError</code> unless it's from an assertion.</em>  If you want an AssertionError here, throw it with <code>assert(false)</code>.  Then someone reading the code can find it later.</p>

<p>Even better, define your own exception, say <code>CantInstantiateUtilityClass</code>.  then you'll have code that says</p>

<pre><code>try {
    // some stuff
} catch (CantInstantiateUtilityClass e) {
    // react
}
</code></pre>

<p>so that the reader of the catcher knows <em>what</em> happened.</p>

<p><strong>Update</strong></p>

<p>Every so often some damn fool wanders by here and downvotes this again, almost four years after the fact.  So, let me just note that the standard <em>still</em> defines <code>AssertionError</code> as the result of a failed assertion, not as what some beginner thinks <em>ought</em> to be thrown in place of a well-defined informative exception.  Sadly, good exception discipline is perhaps the least encouraged skill in Java programming.</p>
"
5041615,"<pre><code>public class SortedMapExample {

    public static void main(String[] args) {
        Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();

        map.put(""Cde"", ""C"");
        map.put(""Abc"", ""A"");
        map.put(""Cbc"", ""Z"");
        map.put(""Dbc"", ""D"");
        map.put(""Bcd"", ""B"");
        map.put(""sfd"", ""Bqw"");
        map.put(""DDD"", ""Bas"");
        map.put(""BGG"", ""Basd"");

        System.out.println(sort(map, new Comparator&lt;String&gt;() {
            @Override
            public int compare(String o1, String o2) {
                    return o1.compareTo(o2);
            }}));
    }

    @SuppressWarnings(""unchecked"")
    public static &lt;K, V&gt; Map&lt;K,V&gt; sort(Map&lt;K, V&gt; in, Comparator&lt;? super V&gt; compare) {
        Map&lt;K, V&gt; result = new LinkedHashMap&lt;K, V&gt;();
        V[] array = (V[])in.values().toArray();
        for(int i=0;i&lt;array.length;i++)
        {

        }
        Arrays.sort(array, compare);
        for (V item : array) {
            K key= (K) getKey(in, item);
            result.put(key, item);
        }
        return result;
    }

    public static &lt;K, V&gt;  Object getKey(Map&lt;K, V&gt; in,V value)
    {
       Set&lt;K&gt; key= in.keySet();
       Iterator&lt;K&gt; keyIterator=key.iterator();
       while (keyIterator.hasNext()) {
           K valueObject = (K) keyIterator.next();
           if(in.get(valueObject).equals(value))
           {
                   return valueObject;
           }
       }
       return null;
   }
</code></pre>

<p>}</p>

<p>// Please try here. I am modifing the code for value sort.</p>
"
484061,"<p><a href=""http://java.sun.com/javase/6/docs/api/java/beans/Expression.html"" rel=""nofollow"">java.beans.Expression</a> will do that, as long as the method is accessible in the concrete class of the receiver.</p>

<pre><code>public static void main(String[] args) throws Exception {
    new Expression(new A(), ""doSomething"", null).getValue();
    new Expression(new B(), ""doSomething"", null).getValue();
}

public static class A {
    public void doSomething() {
            System.out.println(""I'm doing it already!"");
    }
}

public static class B {
    public void doSomething() {
            System.out.println(""I'm doing it too!"");
    }
}
</code></pre>
"
421401,"<p>I have been dealing with something similar recently. If you are running Java 5, perhaps you could consider using NIO file locks in conjunction with a ReentrantReadWriteLock? Make sure all code referencing the FileChannel object ALSO references the ReentrantReadWriteLock. This way the NIO locks it at a per-VM level while the reentrant lock locks it at a per-thread level.</p>

<pre><code>FileLock fileLock = filechannel.lock(position, size, shared);
reentrantReadWriteLock.lock();

// do stuff

fileLock.release();
reentrantReadWriteLock.unlock();
</code></pre>

<p>Of course, some exception handling would be required.</p>
"
21212931,"<p>This code should serve as a model, as it addresses the problem of stackoverflow on serialization. It uses memory inplace of recursion. Although not fit to be concidered universal as a serializer, it serializes and deserializes the classes it was tested with.</p>

<pre><code>import java.io.*;
import java.util.*;
import java.lang.reflect.*;
import android.util.*;

public class SequentialObjectInputStream extends DataInputStream implements ObjectInput
{
    interface FieldPutAction
    {
        void put(Object obj, Field field) throws IllegalAccessException, IOException;
    }

    interface ArrayPutAction
    {
        void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException;
    }

    public HashMap&lt;Class, FieldPutAction&gt; Primatives;
    public HashMap&lt;Class, ArrayPutAction&gt; ArrayPrimatives;

    public SequentialObjectInputStream(InputStream stream)
    {
        super(stream);

        Primatives = new HashMap&lt;Class, FieldPutAction&gt;();

        try
        {
            Primatives.put(boolean.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        boolean x = readBoolean(); 
                        field.setBoolean(obj, x);

                    }
                });

            Primatives.put(byte.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        byte x = readByte(); 
                        field.setByte(obj, x);

                    }
                });


            Primatives.put(short.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        short x = readShort(); 
                        field.setShort(obj, x);

                    }
                });


            Primatives.put(int.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        int x = readInt(); 
                        field.setInt(obj, x);

                    }
                });


            Primatives.put(long.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        long x = readLong(); 
                        field.setLong(obj, x);

                    }
                });


            Primatives.put(char.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        char x = readChar(); 
                        field.setChar(obj, x);

                    }
                });


            Primatives.put(float.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        float x = readFloat(); 
                        field.setFloat(obj, x);

                    }
                });


            Primatives.put(double.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        double x = readDouble(); 
                        field.setDouble(obj, x);

                    }
                });


            Primatives.put(String.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        String x = readUTF(); 
                        field.set(obj, x);

                    }
                });
        } catch(Exception e)
        {
            Log.e(""SOb"", Log.getStackTraceString(e));
        }

        ArrayPrimatives = new HashMap&lt;Class, ArrayPutAction&gt;();

        try
        {
            ArrayPrimatives.put(boolean.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        boolean x = readBoolean();
                        Array.setBoolean(obj, index, x);
                    }
                });

            ArrayPrimatives.put(byte.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        byte x = readByte(); 
                        Array.setByte(obj, index, x);

                    }
                });


            ArrayPrimatives.put(short.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        short x = readShort(); 
                        Array.setShort(obj, index, x);

                    }
                });


            ArrayPrimatives.put(int.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        int x = readInt(); 
                        Array.setInt(obj, index, x);

                    }
                });


            ArrayPrimatives.put(long.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        long x = readLong(); 
                        Array.setLong(obj, index, x);

                    }
                });


            ArrayPrimatives.put(char.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        char x = readChar(); 
                        Array.setChar(obj, index, x);

                    }
                });


            ArrayPrimatives.put(float.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        float x = readFloat(); 
                        Array.setFloat(obj, index, x);

                    }
                });


            ArrayPrimatives.put(double.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        double x = readDouble(); 
                        Array.setDouble(obj, index, x);

                    }
                });


            ArrayPrimatives.put(String.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        String x = readUTF(); 
                        Array.set(obj, index, x);

                    }
                });
        } catch(Exception e)
        {
            Log.e(""SOb"", Log.getStackTraceString(e));
        }
    }


    @Override
    public Object readObject() throws ClassNotFoundException, IOException
    {
        long Total = readLong();

        Log.i(""SOb"", ""readObject : "" + Long.toString(Total) + "" objects in graph"");

        HashMap&lt;Long, Object&gt; References = new HashMap&lt;Long, Object&gt;();

        long currentId = 1;

        HashMap&lt;Object, HashMap&lt;Field, Long&gt;&gt; refCache =
            new HashMap&lt;Object, HashMap&lt;Field, Long&gt;&gt;();
        final HashMap&lt;Object, HashMap&lt;Integer, Long&gt;&gt; arefCache =
            new HashMap&lt;Object, HashMap&lt;Integer,Long&gt;&gt;();

        for (int I=0; I &lt; Total; I++)
        {
            String Name = readUTF();
            Class C = Class.forName(Name);

            Log.i(""SOb"", ""Object of ""+C.getCanonicalName() +"" on graph"");

            int adim = 0;

            Object O = null;

            if (C.isArray())
            {
                Class ComponentType = C.getComponentType();

                int Size = readInt();

                Log.i(""SOb"", ""array of ""+ComponentType.getCanonicalName() + "", "" + Long.toString(Size) + "" elements"");          
                O = Array.newInstance(ComponentType, Size);

                References.put(currentId, O);
                currentId++;

                ArrayPutAction action = null;

                if (ArrayPrimatives.keySet().contains(ComponentType))
                {
                    action = ArrayPrimatives.get(ComponentType);
                } else
                {
                    arefCache.put(O, new HashMap&lt;Integer, Long&gt;());

                    action = new ArrayPutAction()
                    {
                        public void put(Object O, int Index) throws ArrayIndexOutOfBoundsException , IOException
                        {
                            long Ref = readLong();

                            arefCache.get(O).put(Index, Ref);
                        }
                    };
                }

                for (int index=0; index&lt; Size; index++)
                {
                    action.put(O,index);
                }

            } else
            {

            try
            {

                O = 
                    C.getConstructor(new Class[0]).newInstance(new Object[0]);
            } catch(InstantiationException e)
            {
                Log.e(""SOb"", Log.getStackTraceString(e));
            } catch(NoSuchMethodException e)
            {
                Log.e(""SOb"", Log.getStackTraceString(e));
            } catch(IllegalAccessException e)
            {
                Log.e(""SOb"", Log.getStackTraceString(e));
            } catch(InvocationTargetException e)
            {
                Log.e(""SOb"", Log.getStackTraceString(e));
            }

            References.put(currentId, O);
            currentId++;
            refCache.put(O, new HashMap&lt;Field, Long&gt;());

            for (Field F : C.getFields())
            {
                if (F.isAccessible())
                {
                    Class T = F.getType();

                    if (Primatives.containsKey(T))
                    {
                        try
                        {
                            Primatives.get(T).put(O, F);
                        } catch (IllegalAccessException e)
                        {

                        }
                    } else
                    {
                        refCache.get(O).put(F, readLong());
                    }
                }
            }

        }
        }
        for (long I=0; I &lt; Total; I++)
        {

            Object O = References.get(I+1);

            Class C = O.getClass();

            //Log.i(""SOb"", ""get reference ""+Long.toString(I)+"" ""+C.getCanonicalName());


            if (C.isArray())
            {
                HashMap&lt;Integer,Long&gt; aref_table = arefCache.get(O);

                if (ArrayPrimatives.containsKey(C.getComponentType()) == false)
                {

                    int len = Array.getLength(O);

                    for (int index=0; index&lt;len; index++)
                    {
                        long r = aref_table.get(index);
                        Object ref = r == 0 ? null : References.get(r);

                        Array.set(O, index, ref);   
                    }
                }

            } else
            {

            HashMap&lt;Field, Long&gt; ref_table = refCache.get(O);

            for (Field F : C.getFields())
            {
                if (F.isAccessible())
                {
                    Class T = F.getType();

                    if (Primatives.containsKey(T) == false)
                    {
                        try
                        {
                            long r = ref_table.get(F);
                            Object ref = r == 0 ? null : References.get(r);

                            F.set(O, ref);
                        } catch (IllegalAccessException e)
                        {
                            Log.e(""SOb"", Log.getStackTraceString(e));
                        }

                    }
                }
            }
            }

        }


        return References.get((Long) (long) 1);
    }

}


import java.io.*;
import java.util.*;
import java.lang.reflect.*;
import android.util.*;

public class SequentialObjectOutputStream extends DataOutputStream
implements ObjectOutput
{
    interface FieldGetAction
    {
        void get(Object obj, Field field) throws IllegalAccessException, IOException;
    }

    interface ArrayGetAction
    {
        void get(Object array, int Index) throws ArrayIndexOutOfBoundsException, IOException;       
    }

    public HashMap&lt;Class, FieldGetAction&gt; Primatives;
    public HashMap&lt;Class, ArrayGetAction&gt; ArrayPrimatives;

    public SequentialObjectOutputStream(OutputStream stream)
    {
        super(stream);

        Primatives = new HashMap&lt;Class, FieldGetAction&gt;();

        try
        {
            Primatives.put(boolean.class,
            new FieldGetAction()
            {
                public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                {
                    boolean x = field.getBoolean(obj);
                    writeBoolean(x);

                }
            });

            Primatives.put(byte.class,
                new FieldGetAction()
                {
                    public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        byte x = field.getByte(obj);
                        writeByte(x);

                    }
                });


            Primatives.put(short.class,
                new FieldGetAction()
                {
                    public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        short x = field.getShort(obj);
                        writeShort(x);

                    }
                });


            Primatives.put(int.class,
                new FieldGetAction()
                {
                    public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        int x = field.getInt(obj);
                        writeInt(x);

                    }
                });


            Primatives.put(long.class,
                new FieldGetAction()
                {
                    public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        long x = field.getLong(obj);
                        writeLong(x);

                    }
                });


            Primatives.put(char.class,
                new FieldGetAction()
                {
                    public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        char x = field.getChar(obj);
                        writeChar(x);

                    }
                });


            Primatives.put(float.class,
                new FieldGetAction()
                {
                    public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        float x = field.getFloat(obj);
                        writeFloat(x);

                    }
                });


            Primatives.put(double.class,
                new FieldGetAction()
                {
                    public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        double x = field.getDouble(obj);
                        writeDouble(x);
                    }
                });


            Primatives.put(String.class,
                new FieldGetAction()
                {
                    public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        String x = (String) field.get(obj);
                        writeUTF(x);

                    }
                });
        } catch(Exception e)
        {
            Log.e(""SOb"", Log.getStackTraceString(e));
        }



        ArrayPrimatives = new HashMap&lt;Class, ArrayGetAction&gt;();

        try
        {
            ArrayPrimatives.put(boolean.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        boolean x = Array.getBoolean(obj, index);
                        writeBoolean(x);

                    }
                });

            ArrayPrimatives.put(byte.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        byte x = Array.getByte(obj, index);
                        writeByte(x);

                    }
                });


            ArrayPrimatives.put(short.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        short x = Array.getShort(obj, index);
                        writeShort(x);

                    }
                });


            ArrayPrimatives.put(int.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        int x = Array.getInt(obj, index);
                        writeInt(x);

                    }
                });


            ArrayPrimatives.put(long.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        long x = Array.getLong(obj, index);
                        writeLong(x);

                    }
                });


            ArrayPrimatives.put(char.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        char x = Array.getChar(obj, index);
                        writeChar(x);

                    }
                });


            ArrayPrimatives.put(float.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        float x = Array.getFloat(obj, index);
                        writeFloat(x);

                    }
                });


            ArrayPrimatives.put(double.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        double x = Array.getDouble(obj, index);
                        writeDouble(x);
                    }
                });


            ArrayPrimatives.put(String.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        String x = (String) Array.get(obj, index);
                        writeUTF(x);

                    }
                });
        } catch(Exception e)
        {
            Log.e(""SOb"", Log.getStackTraceString(e));
        }

    }

    class State
    {
        public ArrayList&lt;Object&gt; OStack = new ArrayList&lt;Object&gt;();

        public long currentId = 1;

        public HashMap&lt;Object, Long&gt; References = new HashMap&lt;Object, Long&gt;();

    }

    public void writeObject(Object A) throws IOException, NotSerializableException
    {
        final State state = new State();

        state.OStack.add(0, A);

        LinkedList&lt;Object&gt; ForStack = new LinkedList&lt;Object&gt;();

        while (!(state.OStack.size() == 0))
        {
            Object Current = state.OStack.get(0);
            state.OStack.remove(0);

            if (((Serializable) Current) == null)
            {
                throw new NotSerializableException();
            }


            //Type C = Current.getClass();

            Class C = Current.getClass();

            Log.i(""SOb"", ""placing #""+Long.toString(state.currentId)+"" of ""+C.getCanonicalName()+"" on graph""); 
            state.References.put(Current, state.currentId);
            state.currentId++;

            ForStack.add(Current);

            if (C.isArray())
            {
                //Array array = (Array) Current;
                Class Ctype = C.getComponentType();

                if (ArrayPrimatives.keySet().contains(Ctype) == false)
                {
                    for (int I=0; I&lt;Array.getLength(Current); I++)
                    {
                        Object o = Array.get(Current, I);

                        if ((o != null) &amp;&amp; (state.References.keySet().contains(o) == false))
                        {
                            if (state.OStack.contains(o) == false) state.OStack.add(state.OStack.size(), o);
                        }

                    }
                }
            } else
            {
                for (Class Cur = C; Cur != null; Cur = Cur.getSuperclass())
                {

                    Field[] fields = Cur.getDeclaredFields();

                    for (Field f : fields)
                    {
                        if (Modifier.isStatic(f.getModifiers()))
                        {
                            continue;
                        }

                        f.setAccessible(true);

                        if (f.isAccessible() == false)
                        {
                        //  Log.i(""SOb"", ""     isAccessible = false"");
                            continue;
                        }

                        Class type = f.getType();
                        //Log.i(""SOb"", ""     field \""""+f.getName()+""\"" of ""+type.getCanonicalName());

                        if (Primatives.keySet().contains(type) == false)
                        {       
                            try
                            {
                                Object o = f.get(Current);

                                if ((o != null) &amp;&amp; (state.References.keySet().contains(o) == false))
                                {
                                    if (state.OStack.contains(o) == false) state.OStack.add(state.OStack.size(), o);
                                }

                            } catch (IllegalAccessException e)
                            {
                                Log.e(""SOb"", Log.getStackTraceString(e));
                            }
                        }
                    }
                }
            }
        }

        writeLong(state.References.size());

        for (Object O : ForStack )
        {
            Serializable s = (Serializable) O;

        //  if (s != null)
            {
                Class cl = O.getClass();

                String name = cl.getName();

                writeUTF(name);

                if (cl.isArray())
                {
                    Class components = cl.getComponentType();

                    ArrayGetAction action;

                    //Array array = (Array) O;

                    if (ArrayPrimatives.keySet().contains(components))
                    {
                        action = ArrayPrimatives.get(components);
                    } else
                    {
                        action = new ArrayGetAction()
                        {
                            public void get(Object array, int index) throws ArrayIndexOutOfBoundsException, IOException     
                            {
                                Object O = Array.get(array, index);
                                if (O==null)  writeLong(0);
                                else writeLong(state.References.get(O));
                            }
                        };
                    }

                    int length = Array.getLength(O);

                    writeInt(length);

                    for (int I=0; I&lt;length; I++)
                    {
                        action.get(O, I);
                    }

                } else
                {
                    for (Class Cur = cl; Cur != null; Cur = Cur.getSuperclass())
                    {
                        Field[] fields = Cur.getDeclaredFields();

                        for (Field F : fields)
                        {
                            Class FieldType = F.getType();

                            F.setAccessible(true);

                            if (F.isAccessible() &amp;&amp; (Modifier.isStatic(FieldType.getModifiers())))
                            {
                                FieldGetAction action;

                                //Array array = (Array) O;

                                if (Primatives.keySet().contains(FieldType))
                                {
                                    action = Primatives.get(FieldType);
                                } else
                                {
                                    action = new FieldGetAction()
                                    {
                                        public void get(Object obj, Field index) throws IllegalAccessException, IOException     
                                        {
                                            Object O = index.get(obj);
                                            if (O==null)  writeLong(0);
                                            else writeLong(state.References.get(O));
                                        }
                                    };
                                }

                                try
                                {
                                    action.get(O, F);
                                } catch (IllegalAccessException e)
                                {
                                    Log.e(""SOb"", Log.getStackTraceString(e));
                                }

                            }
                        }

                    }
                }
            }   
        }
    }
}
</code></pre>
"
6852418,"<p><code>i == i</code> is not atomic. Proved by such program:</p>

<pre><code>static volatile boolean i = true;
public static void main(String[] args) throws InterruptedException
{
    new Thread() {
        @Override
        public void run() {
            while (true) {
                i = !i;
            }
        }
    }.start();

    while (i == i) ;
    System.out.println(""Not atomic! i: "" + i);
}
</code></pre>

<p><strong>Update</strong>
Here is one more example of not-infinite loop (no new threads are created).</p>

<pre><code>public class NoNewThreads {
    public static void main(String[] args) {
        new NoNewThreads();
        System.gc();
        int i = 500;
        System.out.println(""Still Running"");
        while (i == i) ;
    }

    @Override
    protected void finalize() throws Throwable {
        super.finalize();
        Thread.sleep(1000);
        System.exit(0);
    }
}
</code></pre>
"
430496,"<p>You could construct boxed objects, ie,</p>

<pre><code>Integer iObj = new Integer(i);
Integer jObj = new Integer(j);
</code></pre>

<p>and write your routine as</p>

<pre><code>public void test(Integer i, Integer j){
  i = i.add(1);
  j = j.add(1);
}
</code></pre>

<p>For any number of reasons, the designers of Java felt call-by-value was better; they purposefully didn't include a method for call by reference.  (Strictly, they pass copies of references to the objects, with the special case for the primitive types that they are purely call by value.  But the effect is the same.)</p>
"
23457131,"<p>Here is simple code for RMI to get filename and file content:</p>

<pre><code>import java.rmi.*;
import java.rmi.registry.*;
import java.rmi.server.*;
import java.io.*;

interface myimpl extends Remote{
    public void file(String filename)throws RemoteException;
}

class ipcbingo extends UnicastRemoteObject implements myimpl{
    ipcbingo() throws RemoteException{}
    public void file(String filename){
   try{
        FileReader fr=new FileReader(filename);
         System.out.println(filename);
        BufferedReader br=new BufferedReader(fr);
      String total="""";
      String temp="""";
       while((temp=br.readLine())!=null)
        {
        total+=temp;
        }
       System.out.println(total);
   }catch(Exception e){}
    }
}

class ipcser{
    public static void main(String args[])throws Exception
    {
        ipcbingo i1=new ipcbingo();
        Registry r1=LocateRegistry.createRegistry(1099);
        r1.bind(""abcd"", i1);

    }
}

class ipccli{
    public static void main(String args[])throws Exception
    {
        myimpl i1=(myimpl)Naming.lookup(""abcd"");
        i1.file(""C:\\Users\\scc\\Documents\\NetBeansProjects\\rmi\\src\\lucky.txt"");
    }
}
</code></pre>
"
8326785,"<p>Although you should not use doubles for precise calculations the following trick helped me if you are rounding the results anyway. </p>

<pre><code>public static int round(Double i) {
    return (int) Math.round(i + ((i &gt; 0.0) ? 0.00000001 : -0.00000001));
}
</code></pre>

<p>Example:</p>

<pre><code>    Double foo = 0.0;
    for (int i = 1; i &lt;= 150; i++) {
        foo += 0.00010;
    }
    System.out.println(foo);
    System.out.println(Math.round(foo * 100.0) / 100.0);
    System.out.println(round(foo*100.0) / 100.0);
</code></pre>

<p>Which prints:</p>

<pre><code>0.014999999999999965
0.01
0.02
</code></pre>

<p>More info: <a href=""http://en.wikipedia.org/wiki/Double_precision"" rel=""nofollow"">http://en.wikipedia.org/wiki/Double_precision</a></p>
"
26236963,"<p>I always disliked the Builder pattern as something unwieldy, obtrusive and very often abused by less experienced programmers. Its a pattern which only makes sense if you need to assemble the object from some data which requires <strong>a post-initialisation step</strong> (i.e. once all the data is collected - do something with it). Instead, in 99% of the time builders are simply used to initialise the class members.</p>

<p>In such cases it is far better to simply declare <code>withXyz(...)</code> type setters inside the class and make them return a reference to itself. </p>

<p>Consider this:</p>

<pre><code>public class Complex {

    private String first;
    private String second;
    private String third;

    public String getFirst(){
       return first; 
    }

    public void setFirst(String first){
       this.first=first; 
    }

    ... 

    public Complex withFirst(String first){
       this.first=first;
       return this; 
    }

    public Complex withSecond(String second){
       this.second=second;
       return this; 
    }

    public Complex withThird(String third){
       this.third=third;
       return this; 
    }

}


Complex complex = new Complex()
     .withFirst(""first value"")
     .withSecond(""second value"")
     .withThird(""third value"");
</code></pre>

<p>Now we have a neat single class that manages its own initialization and does pretty much the same job as the builder, except that its far more elegant. </p>
"
452673,"<p>Ok, basically you have things the wrong way arond: <code>JPA is the generation tool</code>.</p>

<p>I say this because the only thing you could generate JPA entities from is SQL and the whole point of JPA is to do things the other way around.  You define your object model first and, from that, you can generate your tables and queries.</p>

<p>For example, I've seen projects use Hibernate to define their entities and then they have an ant build script that creates the database from the Hibernate entity model.</p>

<p>JPA entity definitions--especially done with annotations--aren't exactly onerous.  They really are your best option as the first thing to do rather than being the product of something else.</p>

<p>Besides, another tool won't help you write named queries, define the correct cascade options on relationships, etc.  And if you had generated code, how would you handle modifying it afterwards?</p>

<p>It's just not the right way to go.</p>
"
9512746,"<p>In Haskell you can do something like that <code>[a, b, c] ++ [d, e]</code> to get <code>[a, b, c, d, e]</code>. These are Haskell lists concatenated but that'd very nice to see a similar operator in Java for arrays. Don't you think so ? That's elegant, simple, generic and it's not that difficult to implement.</p>

<p>If you want to, I suggest you to have a look at Alexander Hristov's work in his <a href=""http://www.ahristov.com/tutoriales/java-compiler/duplicating-lexer.html"" rel=""nofollow"">Hacking the OpenJDK compiler</a>. He explains how to modify javac source to create a new operator. His example consists in defining a '**' operator where <code>i ** j = Math.pow(i, j)</code>. One could take that example to implement an operator that concatenates two arrays of same type.<br></p>

<p>Once you do that, you are bound to your customized javac to compile your code but the generated bytecode will be understood by any JVM. <br><br>Of course, you can implement your own array concatenatation method at your source level, there are many examples on how to do it in the other answers !<br>
<br>
There are so many useful operators that could be added, this one would be one of them.</p>
"
458279,"<p>The easiest way is to implement your own <a href=""http://java.sun.com/javase/6/docs/api/javax/swing/table/TableModel.html"" rel=""nofollow"">TableModel</a></p>

<pre><code>public class MyModel extends AbstractTableModel {
    List rows;

    public int getRowCount() {
        return rows.size();
    }

    public int getColumnCount() {
         return 4;
    }

    public Object getValueAt(int row, int column) {
        return rows.get(row).getCol(col);  //assuming your row ""Object"" has a getCol()
    }

    public Class&lt;?&gt; getColumnClass(int col) {
        return Boolean.class;
    }

    public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
        rows.get(rowIndex).getCol(columnIndex).setValue(aValue);
    }

}
</code></pre>

<p>Load this into you JTable.  If you haven't replaced the default cell renderer for Boolean's, all you cells will be rendered as check boxes thanks to you implementation of getColumnClass().  All user input to these check boxes is collected with our setValueAt().</p>
"
9842650,"<p>Its easy to do using <a href=""http://code.google.com/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#equals"" rel=""nofollow"">Google's Guava library</a>.</p>

<p>e.g. <code>Objects.equal(name, name2) &amp;&amp; Objects.equal(age, age2) &amp;&amp; ...</code></p>

<p>More examples:</p>

<ul>
<li><a href=""http://stackoverflow.com/a/5039178/1180621"">http://stackoverflow.com/a/5039178/1180621</a></li>
</ul>
"
29145403,"<p>You can craete object both way and i recommend you to use </p>

<pre><code>JButton start = new JButton(""Start"");
</code></pre>
"
466670,"<p>Here is how I would handle it: </p>

<pre><code>public void doSomething() 
        throws MyException{
    doA();

    try { 
        doB();
    } finally {
        doC();
    }
}
</code></pre>

<p>If an error occurs in doB(), the exception will propagate up the stack.</p>
"
721061,"<pre><code>public class MyMain2 {
    public static void main(String[] args) {
        double myDub;
        myDub=1234.5678;
        long myLong;
        myLong=(int)myDub;
        myDub=(myDub%1)*10000;
        int myInt=(int)myDub;
        System.out.println(myLong + ""\n"" + myInt);
    }
}
</code></pre>
"
472188,"<p>Though its a bad design pattern IMHO, Another possible solution is</p>

<pre><code>static void test(AtomicInteger i, AtomicInteger j)
{
    i.incrementAndGet();
    j.incrementAndGet();
}
</code></pre>
"
736110,"<p>this is the reverse: gives you the date of the monday of the week (in perl)</p>

<pre><code>use POSIX qw(mktime);
use Time::localtime;

sub monday_of_week {
    my $year=shift;
    my $week=shift;
    my $p_date=shift;

    my $seconds_1_jan=mktime(0,0,0,1,0,$year-1900,0,0,0);
    my $t1=localtime($seconds_1_jan);
    my $seconds_for_week;
    if (@$t1[6] &lt; 5) {
#first of january is a thursday (or below)
        $seconds_for_week=$seconds_1_jan+3600*24*(7*($week-1)-@$t1[6]+1);
    } else {
        $seconds_for_week=$seconds_1_jan+3600*24*(7*($week-1)-@$t1[6]+8);
    }
    my $wt=localtime($seconds_for_week);
    $$p_date=sprintf(""%02d/%02d/%04d"",@$wt[3],@$wt[4]+1,@$wt[5]+1900);
}
</code>

</pre>
"
11186592,"<p>I did this... Seems to work ok - I'm sure somebody will point out mistakes though...</p>

<pre><code>public final class MD5 {
public enum SaltOption {
    BEFORE, AFTER, BOTH, NONE;
}
private static final String ALG = ""MD5"";
//For conversion to 2-char hex
private static final char[] digits = {
    '0' , '1' , '2' , '3' , '4' , '5' ,
    '6' , '7' , '8' , '9' , 'a' , 'b' ,
    'c' , 'd' , 'e' , 'f' , 'g' , 'h' ,
    'i' , 'j' , 'k' , 'l' , 'm' , 'n' ,
    'o' , 'p' , 'q' , 'r' , 's' , 't' ,
    'u' , 'v' , 'w' , 'x' , 'y' , 'z'
};

private SaltOption opt;

/**
 * Added the SaltOption constructor since everybody
 * has their own standards when it comes to salting
 * hashes.
 * 
 * This gives the developer the option...
 * 
 * @param option The salt option to use, BEFORE, AFTER, BOTH or NONE.
 */
public MD5(final SaltOption option) {
    //TODO: Add Char Encoding options too... I was too lazy!
    this.opt = option;
}

/**
 * 
 * Returns the salted MD5 checksum of the text passed in as an argument.
 * 
 * If the salt is an empty byte array - no salt is applied.
 * 
 * @param txt The text to run through the MD5 algorithm.
 * @param salt The salt value in bytes.
 * @return The salted MD5 checksum as a &lt;code&gt;byte[]&lt;/code&gt;
 * @throws NoSuchAlgorithmException
 */
private byte[] createChecksum(final String txt, final byte[] salt) throws NoSuchAlgorithmException {
    final MessageDigest complete = MessageDigest.getInstance(ALG);
    if(opt.equals(SaltOption.BEFORE) || opt.equals(SaltOption.BOTH)) {
        complete.update(salt);
    }
    complete.update(txt.getBytes());
    if(opt.equals(SaltOption.AFTER) || opt.equals(SaltOption.BOTH)) {
        complete.update(salt);
    }
    return complete.digest();
}

/**
 * 
 * Returns the salted MD5 checksum of the file passed in as an argument.
 * 
 * If the salt is an empty byte array - no salt is applied.
 * 
 * @param fle The file to run through the MD5 algorithm.
 * @param salt The salt value in bytes.
 * @return The salted MD5 checksum as a &lt;code&gt;byte[]&lt;/code&gt;
 * @throws IOException
 * @throws NoSuchAlgorithmException
 */
private byte[] createChecksum(final File fle, final byte[] salt)
        throws IOException, NoSuchAlgorithmException {
    final byte[] buffer = new byte[1024];
    final MessageDigest complete = MessageDigest.getInstance(ALG);
            if(opt.equals(SaltOption.BEFORE) || opt.equals(SaltOption.BOTH)) {
            complete.update(salt);
        }
    int numRead;
    InputStream fis = null;
    try {
        fis = new FileInputStream(fle);
        do {
            numRead = fis.read(buffer);
            if (numRead &gt; 0) {
                complete.update(buffer, 0, numRead);
            }
        } while (numRead != -1);
    } finally {
    if (fis != null) {
            fis.close();
        }
    }
            if(opt.equals(SaltOption.AFTER) || opt.equals(SaltOption.BOTH)) {
            complete.update(salt);
        }
    return complete.digest();
}

/**
 * 
 * Efficiently converts a byte array to its 2 char per byte hex equivalent.
 * 
 * This was adapted from JDK code in the Integer class, I just didn't like
 * having to use substrings once I got the result...
 *
 * @param b The byte array to convert
 * @return The converted String, 2 chars per byte...
 */
private String convertToHex(final byte[] b) {
    int x;
    int charPos;
    int radix;
    int mask;
    final char[] buf = new char[32];
    final char[] tmp = new char[3];
    final StringBuilder md5 = new StringBuilder();
    for (int i = 0; i &lt; b.length; i++) {
        x = (b[i] &amp; 0xFF) | 0x100;
        charPos = 32;
        radix = 1 &lt;&lt; 4;
        mask = radix - 1;
        do {
            buf[--charPos] = digits[x &amp; mask];
            x &gt;&gt;&gt;= 4;
        } while (x != 0);
        System.arraycopy(buf, charPos, tmp, 0, (32 - charPos));
        md5.append(Arrays.copyOfRange(tmp, 1, 3));
    }
    return md5.toString();
}

/**
 * 
 * Returns the salted MD5 checksum of the file passed in as an argument.
 * 
 * @param fle The file you want want to run through the MD5 algorithm.
 * @param salt The salt value in bytes
 * @return The salted MD5 checksum as a 2 char per byte HEX &lt;code&gt;String&lt;/code&gt;
 * @throws NoSuchAlgorithmException
 * @throws IOException
 */
public String getMD5Checksum(final File fle, final byte[] salt)
        throws NoSuchAlgorithmException, IOException {
    return convertToHex(createChecksum(fle, salt));
}

/**
 * 
 * Returns the MD5 checksum of the file passed in as an argument.
 * 
 * @param fle The file you want want to run through the MD5 algorithm.
 * @return The MD5 checksum as a 2 char per byte HEX &lt;code&gt;String&lt;/code&gt;
 * @throws NoSuchAlgorithmException
 * @throws IOException
 */
public String getMD5Checksum(final File fle)
        throws NoSuchAlgorithmException, IOException {
    return convertToHex(createChecksum(fle, new byte[0]));
}

/**
 * 
 * Returns the salted MD5 checksum of the text passed in as an argument.
 * 
 * @param txt The text you want want to run through the MD5 algorithm.
 * @param salt The salt value in bytes.
 * @return The salted MD5 checksum as a 2 char per byte HEX &lt;code&gt;String&lt;/code&gt;
 * @throws NoSuchAlgorithmException
 * @throws IOException
 */
public String getMD5Checksum(final String txt, final byte[] salt)
        throws NoSuchAlgorithmException {
    return convertToHex(createChecksum(txt, salt));
}

/**
 * 
 * Returns the MD5 checksum of the text passed in as an argument.
 * 
 * @param txt The text you want want to run through the MD5 algorithm.
 * @return The MD5 checksum as a 2 char per byte HEX &lt;code&gt;String&lt;/code&gt;
 * @throws NoSuchAlgorithmException
 * @throws IOException
 */
public String getMD5Checksum(final String txt)
        throws NoSuchAlgorithmException {

    return convertToHex(createChecksum(txt, new byte[0]));
}
}
</code></pre>
"
29288705,"<pre><code>class a{
  function dosomething(){
     //code goes here
   }
}

class b{
    a firstobject=new a();
    c secondobject=new c(a objtopass);  //passing object of a to c
    function donext(){
        //next code
    }
}

class c{
a receivedobj=null;
public c(a objtoreceive){
    //constructor
    receivedobj=objtoreceive;
}
 function doAdd(){
   //function code
  }
}
</code></pre>
"
753767,"<p>week number in perl (sorry, not object oriented, will certainly disgust some)</p>

<pre><code>use POSIX qw(mktime);
use Time::localtime;
use strict;

my $week;
my $year;
&amp;num_of_week(\$week,\$year);
printf ""this week: %d of year %s\n"",$week,$year;


sub num_of_week {
my $p_week=shift;

my $lt=localtime();
my $tz=0;
my $tNowSeconds=mktime(@$lt[0],@$lt[1],@$lt[2],@$lt[3],@$lt[4],@$lt[5],0,0,$tz);
my $week_day=@$lt[6];
my $thursday_offset=4-$week_day; #week num is the week num of the thursday
my $tThursdaySeconds = $tNowSeconds+$thursday_offset*3600*24; #
$lt=localtime($tThursdaySeconds); # recompute using thursday
my $seconds_1_jan=mktime(0,0,0,1,0,@$lt[5],0,0,0); # use year of thursday
my $week_num=1+($tThursdaySeconds-$seconds_1_jan)/(24*3600*7);

$$p_year=@$lt[5]+1900;
$$p_week=$week_num;
}
</code></pre>
"
11566262,"<p>Quick and easy:</p>

<pre><code>String result = (String)new ObjectInputStream( inputStream ).readObject();
</code></pre>
"
479111,"<p>How about</p>

<pre><code>public override int GetHashCode()
{
    return id.GetHashCode() ^ name.GetHashCode();
}
</code></pre>
"
501623,"<p>I felt like coding , so here you go :</p>

<pre>
<code>
import java.util.*;

class ReverseBuffer {
    private StringBuilder soFar;
    public ReverseBuffer() {
        soFar = new StringBuilder();
    }

    public void add(char ch) {
        soFar.append(ch);
    }

    public String getReversedString() {
        String str = soFar.toString();
        soFar.setLength(0);
        return str;
    }
}

public class Reverso {
    public static String[] getReversedWords(String sentence) {
        ArrayList &lt String &gt strings = new ArrayList &lt String &gt();
        ReverseBuffer rb = new ReverseBuffer();
        for(int i = 0;i &lt sentence.length();i++) {
            char current = sentence.charAt(i);
            if(current == ' ') {
                strings.add(rb.getReversedString());
            }
            else {
                rb.add(current);
            }
        }
        strings.add(rb.getReversedString());
        Collections.reverse(strings);
        return (String[])strings.toArray(new String[0]);
    }

    public static void main(String[] args) {
        String cSentence = ""The rain in Spain falls mostly on the"";
        String words[] = Reverso.getReversedWords(cSentence);
        for(String word : words) {
            System.out.println(word);
        }
    }
}
</code></pre>

<p>EDIT: had to call getReversedString once more after the loop.</p>

<p>Hope this helps !</p>
"
1483057,"<p>This is what seems to work:</p>

<pre><code>private synchronized static String utftoasci(String s){
  final StringBuffer sb = new StringBuffer( s.length() * 2 );

  final StringCharacterIterator iterator = new StringCharacterIterator( s );

  char ch = iterator.current();

  while( ch != StringCharacterIterator.DONE ){
   if(Character.getNumericValue(ch)&gt;0){
    sb.append( ch );
   }else{
    boolean f=false;
    if(Character.toString(ch).equals(""Ê"")){sb.append(""E"");f=true;}
    if(Character.toString(ch).equals(""È"")){sb.append(""E"");f=true;}
    if(Character.toString(ch).equals(""ë"")){sb.append(""e"");f=true;}
    if(Character.toString(ch).equals(""é"")){sb.append(""e"");f=true;}
    if(Character.toString(ch).equals(""è"")){sb.append(""e"");f=true;}
    if(Character.toString(ch).equals(""è"")){sb.append(""e"");f=true;}
    if(Character.toString(ch).equals(""Â"")){sb.append(""A"");f=true;}
    if(Character.toString(ch).equals(""ä"")){sb.append(""a"");f=true;}
    if(Character.toString(ch).equals(""ß"")){sb.append(""ss"");f=true;}
    if(Character.toString(ch).equals(""Ç"")){sb.append(""C"");f=true;}
    if(Character.toString(ch).equals(""Ö"")){sb.append(""O"");f=true;}
    if(Character.toString(ch).equals(""º"")){sb.append("""");f=true;}
    if(Character.toString(ch).equals(""Ó"")){sb.append(""O"");f=true;}
    if(Character.toString(ch).equals(""ª"")){sb.append("""");f=true;}
    if(Character.toString(ch).equals(""º"")){sb.append("""");f=true;}
    if(Character.toString(ch).equals(""Ñ"")){sb.append(""N"");f=true;}
    if(Character.toString(ch).equals(""É"")){sb.append(""E"");f=true;}
    if(Character.toString(ch).equals(""Ä"")){sb.append(""A"");f=true;}
    if(Character.toString(ch).equals(""Å"")){sb.append(""A"");f=true;}
    if(Character.toString(ch).equals(""ä"")){sb.append(""a"");f=true;}
    if(Character.toString(ch).equals(""Ü"")){sb.append(""U"");f=true;}
    if(Character.toString(ch).equals(""ö"")){sb.append(""o"");f=true;}
    if(Character.toString(ch).equals(""ü"")){sb.append(""u"");f=true;}
    if(Character.toString(ch).equals(""á"")){sb.append(""a"");f=true;}
    if(Character.toString(ch).equals(""Ó"")){sb.append(""O"");f=true;}
    if(Character.toString(ch).equals(""É"")){sb.append(""E"");f=true;}
    if(!f){
     sb.append(""?"");
    }
   }
   ch = iterator.next();
  }
  return sb.toString();
 }
</code></pre>
"
11566478,"<p>Fastest way using <a href=""https://code.google.com/p/guava-libraries/"" rel=""nofollow"">Guava</a>:</p>

<pre><code>Map&lt;String,Double&gt; map = new Maps.newHashMap();
map.put(""A"",99.5);
map.put(""B"",67.4);
map.put(""C"",67.5);
map.put(""D"",67.3);

Map&lt;String, Double&gt; sortedMap = Maps.newTreeMap(Ordering.natural);
sortedMap.putAll(map);
</code></pre>
"
479123,"<p>How about this </p>

<pre><code>public override int GetHashCode()
{
    return (id.ToString() + name.ToString()).GetHashCode();
}
</code></pre>

<p>The function should allways return a ""valid"" hash...</p>

<p>Edit: just noticed that you use ""or"" not ""and"" :P well i doubt there is any good solution to this problem...</p>
"
11824592,"<p>focus finally clause,</p>

<pre><code>finally {
   try {
      rs.close();
      ps.close();
   } catch (Exception e) {
      // Do something
   }
}
</code></pre>

<p>I think you have to modify 2 points.</p>

<p>First, use try &amp; catch again in fainlly clause.</p>

<p>Second, do rs.close() before doing ps.close().</p>

<p>fly1997@naver.com</p>
"
12032525,"<p>If you're using GWT, you can't use InternetAddress, and the pattern supplied by MBCook is pretty scary.</p>

<p>Here is a less scary regex (might not be as accurate):</p>

<pre><code>public static boolean isValidEmail(String emailAddress) {
    return emailAddress.contains("" "") == false &amp;&amp; emailAddress.matches("".+@.+\\.[a-z]+"");
}
</code></pre>
"
12172924,"<p>We simply sort a map just like this</p>

<pre><code>            Map&lt;String, String&gt; unsortedMap = new HashMap&lt;String, String&gt;();

    unsortedMap.put(""E"", ""E Val"");
    unsortedMap.put(""F"", ""F Val"");
    unsortedMap.put(""H"", ""H Val"");
    unsortedMap.put(""B"", ""B Val"");
    unsortedMap.put(""C"", ""C Val"");
    unsortedMap.put(""A"", ""A Val"");
    unsortedMap.put(""G"", ""G Val"");
    unsortedMap.put(""D"", ""D Val"");

    Map&lt;String, String&gt; sortedMap = new TreeMap&lt;String, String&gt;(unsortedMap);

    System.out.println(""\nAfter sorting.."");
    for (Map.Entry &lt;String, String&gt; mapEntry : sortedMap.entrySet()) {
        System.out.println(mapEntry.getKey() + "" \t"" + mapEntry.getValue());
</code></pre>
"
12944709,"<p>Concatenating strings:</p>

<pre><code>String concat(String[] strings) {
    StringBuffer buf = new StringBuffer();
    for(int i=0; i &lt; strings.length; i++) {
        buf.append(strings[i]);
    }
    return buf.toString();
}
</code></pre>
"
13283772,"<pre><code>public static boolean isValidEmail(String emailAddress) {
    return emailAddress.contains("" "") == false &amp;&amp; emailAddress.matches("".+@.+\\.[a-z]+"");
} 
</code></pre>
"
499032,"<p>Can you pick the appropriate char set in the <a href=""http://java.sun.com/javase/6/docs/api/java/io/InputStreamReader.html"" rel=""nofollow"">Constructor</a>:</p>

<pre><code>new InputStreamReader(new FileInputStream(in), ""ISO8859_1"");
</code></pre>
"
16487716,"<pre><code>  InputStream IS=new URL(""http://www.petrol.si/api/gas_prices.json"").openStream();   

  ByteArrayOutputStream BAOS=new ByteArrayOutputStream();
  IOUtils.copy(IS, BAOS);
  String d= new String(BAOS.toByteArray(),""UTF-8"");           

System.out.println(d);
</code></pre>
"
16998401,"<p>My answer will use Mcherm's answer.
Before you convert the string into bytes you can try</p>

<pre><code>string=StringEscapeUtils.unescapeJava(string);
</code></pre>

<p>You may do it multiple times to achieve desired result.
<a href=""http://commons.apache.org/proper/commons-lang/javadocs/api-3.1/org/apache/commons/lang3/StringEscapeUtils.html"" rel=""nofollow"">http://commons.apache.org/proper/commons-lang/javadocs/api-3.1/org/apache/commons/lang3/StringEscapeUtils.html</a></p>
"
18240546,"<pre><code>public class JoinArray {

static int[] testcase1 = {1,14,15,2,3};
static int[] testcase2 = {20,30,40,30,20};

public static void main(String args[]){
    JoinArray testInstance = new JoinArray();
    int[] result = testInstance.join(testcase1,testcase2);
    System.out.print(""{"");
    for (int i=0;i&lt;result.length;i++){
        if (i&gt;0)
            System.out.print("","");
        System.out.print(result[i]);
    }
    System.out.println(""}"");
}

//write your code here
public int[] join(int[] arr1,int[] arr2)
   {

      int[] arr3=new int[arr1.length+arr2.length];
      int[] result= new int[arr1.length+arr2.length];

      for(int i=0;i&lt;arr1.length;i++)
      {
          arr3[i]=arr1[i];
      }

      for(int j=arr1.length,i=0;j&lt;arr2.length+arr1.length;j++,i++)
      {
          arr3[j]=arr2[i];
      }

        result=arr3;
        return result;

   }
}
</code></pre>
"
1608977,"<p>Add this <code>&lt;!DOCTYPE ...&gt;</code> to your xml file.  Please put it under <code>&lt;?xml ...&gt;</code>:</p>

<pre><code>&lt;!DOCTYPE ??? PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd""&gt;
</code></pre>

<p><code>???</code> = Your root element, now if your sub-element name is using a html reserved word you might be catching some errors, all you have to do is change them to a non-reserved word. </p>

<p>For example:<br />
If your current sub-element is <code>&lt;img&gt;</code>, change it to <code>&lt;pic&gt;</code>...</p>
"
4469413,"<p>For comaparing a list or set we can use <code>Arrays.equals(object[], object[])</code>. It will check for the values only. To get the <code>Object[]</code> we can use <code>Collection.toArray()</code> method.</p>
"
2421152,"<p>Or you could just use getClass().  You can do something like:</p>

<pre><code>public class Foo
{
    public static final String PROGNAME = new Foo().getClass().getName();
}
</code></pre>

<p>And then PROGNAME will be available anywhere inside Foo.  If you're not in a static context, it gets easier as you could use this:</p>

<pre><code>String myProgramName = this.getClass().getName();
</code></pre>
"
1504917,"<pre><code>public class leftpadding {
public static void main(String[] args) {
    for (int i = 1; i &lt; 10000; i++) {
        System.out.print(padded(i,5)+ "" "");
}   
}
public static String padded(int x,int pad)
{
        String r="""";
    for (int i=0; i&lt;pad-(Integer.toString(x).length()); i++ )
    r+=""0"";
return r+x; 
}
}
</code></pre>
"
4507105,"<p><code>JComboBox.setFocusable(false)</code> will do the trick.</p>
"
1889473,"<p>In case you have specified in connection pool (mysql-ds.xml), in your Java code you can open the connection as follows:</p>

<pre><code>DriverManager.registerDriver(new com.mysql.jdbc.Driver());
Connection conn = DriverManager.getConnection(
    ""jdbc:mysql://192.168.1.12:3308/mydb?characterEncoding=greek"",
    ""Myuser"", ""mypass"");
</code></pre>
"
19293096,"<pre><code>String s=""java  -classpath abcd/ ""+pgmname+"" ""+filename;   
Process pro2 = Runtime.getRuntime().exec(s); 
BufferedReader in = new BufferedReader(new InputStreamReader(pro2.getInputStream()));
</code></pre>

<p>is an example of changin the classpath in java program</p>
"
19563077,"<p>as map is unordered 
to sort it ,we can do following </p>

<pre><code>Map&lt;String, String&gt; map= new TreeMap&lt;String, String&gt;(unsortMap);
</code></pre>

<p>You should note that, unlike a hash map, a tree map guarantees that its elements will be sorted in ascending key order.</p>
"
5312826,"<p>this is what i use:</p>

<pre><code>&lt;?php
function remove_accent($str)  {
#   http://www.php.net/manual/en/function.preg-replace.php#96586
$a = array('À', 'Á', 'Â', 'Ã', 'Ä', 'Å', 'Æ', 'Ç', 'È', 'É', 'Ê', 'Ë', 'Ì', 'Í', 'Î', 'Ï', 'Ð', 'Ñ', 'Ò', 'Ó', 'Ô', 'Õ', 'Ö', 'Ø', 'Ù', 'Ú', 'Û', 'Ü', 'Ý', 'ß', 'à', 'á', 'â', 'ã', 'ä', 'å', 'æ', 'ç', 'è', 'é', 'ê', 'ë', 'ì', 'í', 'î', 'ï', 'ñ', 'ò', 'ó', 'ô', 'õ', 'ö', 'ø', 'ù', 'ú', 'û', 'ü', 'ý', 'ÿ', 'Ā', 'ā', 'Ă', 'ă', 'Ą', 'ą', 'Ć', 'ć', 'Ĉ', 'ĉ', 'Ċ', 'ċ', 'Č', 'č', 'Ď', 'ď', 'Đ', 'đ', 'Ē', 'ē', 'Ĕ', 'ĕ', 'Ė', 'ė', 'Ę', 'ę', 'Ě', 'ě', 'Ĝ', 'ĝ', 'Ğ', 'ğ', 'Ġ', 'ġ', 'Ģ', 'ģ', 'Ĥ', 'ĥ', 'Ħ', 'ħ', 'Ĩ', 'ĩ', 'Ī', 'ī', 'Ĭ', 'ĭ', 'Į', 'į', 'İ', 'ı', 'Ĳ', 'ĳ', 'Ĵ', 'ĵ', 'Ķ', 'ķ', 'Ĺ', 'ĺ', 'Ļ', 'ļ', 'Ľ', 'ľ', 'Ŀ', 'ŀ', 'Ł', 'ł', 'Ń', 'ń', 'Ņ', 'ņ', 'Ň', 'ň', 'ŉ', 'Ō', 'ō', 'Ŏ', 'ŏ', 'Ő', 'ő', 'Œ', 'œ', 'Ŕ', 'ŕ', 'Ŗ', 'ŗ', 'Ř', 'ř', 'Ś', 'ś', 'Ŝ', 'ŝ', 'Ş', 'ş', 'Š', 'š', 'Ţ', 'ţ', 'Ť', 'ť', 'Ŧ', 'ŧ', 'Ũ', 'ũ', 'Ū', 'ū', 'Ŭ', 'ŭ', 'Ů', 'ů', 'Ű', 'ű', 'Ų', 'ų', 'Ŵ', 'ŵ', 'Ŷ', 'ŷ', 'Ÿ', 'Ź', 'ź', 'Ż', 'ż', 'Ž', 'ž', 'ſ', 'ƒ', 'Ơ', 'ơ', 'Ư', 'ư', 'Ǎ', 'ǎ', 'Ǐ', 'ǐ', 'Ǒ', 'ǒ', 'Ǔ', 'ǔ', 'Ǖ', 'ǖ', 'Ǘ', 'ǘ', 'Ǚ', 'ǚ', 'Ǜ', 'ǜ', 'Ǻ', 'ǻ', 'Ǽ', 'ǽ', 'Ǿ', 'ǿ'); 
$b = array('A', 'A', 'A', 'A', 'A', 'A', 'AE', 'C', 'E', 'E', 'E', 'E', 'I', 'I', 'I', 'I', 'D', 'N', 'O', 'O', 'O', 'O', 'O', 'O', 'U', 'U', 'U', 'U', 'Y', 's', 'a', 'a', 'a', 'a', 'a', 'a', 'ae', 'c', 'e', 'e', 'e', 'e', 'i', 'i', 'i', 'i', 'n', 'o', 'o', 'o', 'o', 'o', 'o', 'u', 'u', 'u', 'u', 'y', 'y', 'A', 'a', 'A', 'a', 'A', 'a', 'C', 'c', 'C', 'c', 'C', 'c', 'C', 'c', 'D', 'd', 'D', 'd', 'E', 'e', 'E', 'e', 'E', 'e', 'E', 'e', 'E', 'e', 'G', 'g', 'G', 'g', 'G', 'g', 'G', 'g', 'H', 'h', 'H', 'h', 'I', 'i', 'I', 'i', 'I', 'i', 'I', 'i', 'I', 'i', 'IJ', 'ij', 'J', 'j', 'K', 'k', 'L', 'l', 'L', 'l', 'L', 'l', 'L', 'l', 'l', 'l', 'N', 'n', 'N', 'n', 'N', 'n', 'n', 'O', 'o', 'O', 'o', 'O', 'o', 'OE', 'oe', 'R', 'r', 'R', 'r', 'R', 'r', 'S', 's', 'S', 's', 'S', 's', 'S', 's', 'T', 't', 'T', 't', 'T', 't', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'W', 'w', 'Y', 'y', 'Y', 'Z', 'z', 'Z', 'z', 'Z', 'z', 's', 'f', 'O', 'o', 'U', 'u', 'A', 'a', 'I', 'i', 'O', 'o', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'A', 'a', 'AE', 'ae', 'O', 'o'); 
return str_replace($a, $b, $str); 
}

function SEOify($i){
#   http://php.ca/manual/en/function.preg-replace.php#90316
$o          = $i;
$o          = html_entity_decode($o,ENT_COMPAT,'UTF-8');
$o          = remove_accent(trim($o)); 
$patterns   = array( ""([\40])"" , ""([^a-zA-Z0-9_-])"", ""(-{2,})"" ); 
$replacers  = array(""-"", """", ""-""); 
$o          = preg_replace($patterns, $replacers, $o);
return $o;
}
?&gt;
</code></pre>
"
19666913,"<p>Should do the trick. This is assuming String[] first and String[] second</p>

<pre><code>List&lt;String&gt; myList = new ArrayList&lt;String&gt;(Arrays.asList(first));
myList.addAll(new ArrayList&lt;String&gt;(Arrays.asList(second)));
String[] both = myList.toArray(new String[myList.size()]);
</code></pre>
"
20308711,"<p>Old post but ""e"" variable must be unique:</p>

<pre><code>try {
  // Do something
} catch(IOException ioE) {
  throw new ApplicationException(""Problem connecting to server"");
} catch(Exception e) {
  // Will the ApplicationException be caught here?
}
</code></pre>
"
3561415,"<p>some tests we did in our team show that <code>A.class.isAssignableFrom(B.getClass())</code> works faster than <code>B instanceof A</code>. this can be very useful if you need to check this on large number of elements.</p>
"
2417393,"<pre><code>In[1162] := Plus @@ IntegerDigits[2^1000]
Out[1162] = 1366
</code></pre>
"
3271148,"<pre><code>public static DetachedCriteria Clone(this DetachedCriteria criteria)
{
   var dummy = criteria.ToByteArray();
   return dummy.FromByteArray&lt;DetachedCriteria&gt;();
}
</code></pre>
"
3693355,"<pre><code>public static final String zeroPad (int value, int size) {
  String s = ""0000000000""+value;
  return s.substring(s.length() - size);
}
</code></pre>
"
9771364,"<p>I had a similar need where I needed to convert Minutes to hours &amp; minutes. What I used was:</p>

<pre><code>int hrs = 0; int mins = 0;

float tm = totalmins;

if ( tm &gt; 60 ) ( hrs = (int) (tm / 60);

mins = (int) (tm - (hrs * 60));

System.out.println(""Total time in Hours &amp; Minutes = "" + hrs + "":"" + mins);
</code></pre>
"
3903511,"<pre><code>import java .util.*;
public class file 
  {
 public static void main(String [] args)
  {
   long largest=0;
   long number=0;
    for( long i=106239;i&lt;1000000;i=i+2)
     {
      long k=1;
       long z=i;
      while(z!=1)
       {
        if(z%2==0)
        {
         k++;
         z=z/2;
        } else{
          k++;
          z=3*z+1;
           }
       }    
    if(k&gt;largest)
      {
       number=i;
       largest=k;
       System.out.println(number+"" ""+largest);
      }
     }//for loop

   }//main
  }
</code></pre>
"
5732918,"<p>You can use a semi-colon-delimited list if you're using numeric references to the IDs of objects, and an appropriate Converter implementation registered.</p>

<p>POST data
    leaderboards=1,2</p>

<p>Converter implementation (ignore the JSON stuff)</p>

<pre><code>    public final class LeaderboardConverter extends JsonDeserializer&lt;Leaderboard&gt; implements Converter&lt;String, Leaderboard&gt;
    {
        public Leaderboard convert(String source) throws IllegalArgumentException
        {
            Leaderboard activity = new Leaderboard();
            activity.setId(new Integer(source));
            return activity;
        }


        public Leaderboard deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException, JsonProcessingException
        {
            return convert(jp.getText());
        }

}
</code></pre>
"
4190672,"<pre><code>for (int i = 1; i &lt; 100000;)
{
    i = i * 10;
    System.out.print(i);              
}
</code></pre>

<p>or</p>

<pre><code>int i = 1;

while (i &lt; 100000)
{
    i = i * 10;
    System.out.print(i);
}
</code></pre>
"
10977140,"<p>When should I use <code>LinkedList</code>? When working with stacks mostly, or when working with buffers.
When should I use <code>ArrayList</code>? Only when working with indexes,  otherwise you can use HashTable with linked list, then you get:</p>

<ul>
<li>Access by key <strong>O(1),</strong></li>
<li>Insert by key <strong>O(1),</strong></li>
<li>Remove by key <strong>O(1)</strong></li>
<li>and there is a trick to implement RemoveAll / SetAll with O(1)</li>
</ul>

<p>It seems like a good solution, and in most of the cases it is, how ever you should know:
HashTable takes a lot of disc space, so when you need to manage 1,000,000 elements list it can become a thing that matters. This can happen in server implementations, in clients it is rarely the case.</p>

<p>Also take a look at <a href=""http://en.wikipedia.org/wiki/Red%E2%80%93black_tree"" rel=""nofollow"">Red-Black-Tree</a></p>

<ul>
<li>Random access <strong>Log(n),</strong></li>
<li>Insert <strong>Log(n),</strong></li>
<li>Remove <strong>Log(n)</strong></li>
</ul>
"
4425569,"<p>if you use this </p>

<pre><code>public int countLines(String filename) throws IOException {
    LineNumberReader reader  = new LineNumberReader(new FileReader(filename));
    int cnt = 0;
    String lineRead = """";
    while ((lineRead = reader.readLine()) != null) {}

    cnt = reader.getLineNumber(); 
    reader.close();
    return cnt;
}
</code></pre>

<p>you cant run to big num rows, likes 100K rows, because return from reader.getLineNumber is int. you need long type of data to process maximum rows..</p>
"
4397645,"<pre><code>String x=""abCd"";
System.out.println(Pattern.compile(""c"",Pattern.CASE_INSENSITIVE).matcher(x).find());
</code></pre>
"
4532022,"<pre><code>import java.io.*;
class LeftZeroPad{
    public static void main(String[] args) throws IOException{
        System.out.println(""Enter an integer,length less than 5:"");
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String x = br.readLine();
        int len=x.length();
        int i;
        System.out.println(""Length of the integer:"" +len);
        if (5 &gt; len) 
        { 
            for (i=0; i &lt; (5-len); i++) 
            { 
                //For Right Zero Padd
                //x += '0';
                //For Left Zero Padd
                 x='0'+ x;      
            } 
            System.out.println(""Integer after Left Zero Pad:"" + x);
        } 
        else
            {System.out.println(""Entered integer length is greater than 5"");}
        }
}
</code></pre>
"
16557475,"<p>The simple logic for not allowing the generic array creation seems to me is that you will never require it.
This is because you will never hold memroy allocation for type specified.It just you are creating places for references and reference to any object is of the same length.</p>

<p>Hence,this does not makes any sense:</p>

<pre><code>Entry&lt;String&gt; [] table = new Entry&lt;String&gt;[];
</code></pre>

<p>Only sensible : As this will say that you will hold String refernces.</p>

<pre><code>Entry&lt;String&gt; [] table = new Entry[];
</code></pre>
"
13618905,"<p>It's a breeze in Groovy; I embed the groovy jar and create a <code>groovy</code> utility class to do all these things and more which I find exasperating to do in Java (since I am stuck using Java 6 in the enterprise.)</p>

<pre><code>it.'p'.each{
switch (it.@name.text()){
   case ""choclate"":
     myholder.myval=(it.text());
     break;
     }}...
</code></pre>
"
7679371,"<p>I just made my own UniqueList in my own little library like this:</p>

<pre><code>package com.bprog.collections;//my own little set of useful utilities and classes

import java.util.HashSet;
import java.util.ArrayList;
import java.util.List;
/**
*
* @author Jonathan
*/
public class UniqueList {

private HashSet masterSet = new HashSet();
private ArrayList growableUniques;
private Object[] returnable;

public UniqueList() {
    growableUniques = new ArrayList();
}

public UniqueList(int size) {
    growableUniques = new ArrayList(size);
}

public void add(Object thing) {
    if (!masterSet.contains(thing)) {
        masterSet.add(thing);
        growableUniques.add(thing);
    }
}

/**
 * Casts to an ArrayList of unique values
 * @return 
 */
public List getList(){
    return growableUniques;
}

public Object get(int index) {
    return growableUniques.get(index);
}

public Object[] toObjectArray() {
    int size = growableUniques.size();
    returnable = new Object[size];
    for (int i = 0; i &lt; size; i++) {
        returnable[i] = growableUniques.get(i);
    }
    return returnable;
    }
}
</code></pre>

<p>I have a TestCollections class that looks like this:</p>

<pre><code>package com.bprog.collections;
import com.bprog.out.Out;
/**
*
* @author Jonathan
*/
public class TestCollections {
    public static void main(String[] args){
        UniqueList ul = new UniqueList();
        ul.add(""Test"");
        ul.add(""Test"");
        ul.add(""Not a copy"");
        ul.add(""Test""); 
        //should only contain two things
        Object[] content = ul.toObjectArray();
        Out.pl(""Array Content"",content);
    }
}
</code></pre>

<p>Works fine. All it does is it adds to a set if it does not have it already and there's an Arraylist that is returnable, as well as an object array.</p>
"
29227669,"<p>Use the following code snippet to get the String[] array -  </p>

<pre><code>String strings = ""100.122.323.344;543.433.872.438;218.544.678.322"";
String[] intString = strings.split(""."");
</code></pre>

<p>Now convert the <code>intString</code> to an int array. From your requirement It seems you need a two dimensional array of int - that is <code>int[][]</code> <code>intArray</code>:  </p>

<pre><code>int strArrayLength = intString.length;
int row = strArrayLength/4 //since in each row you need 4 columns
int[][] intArray = new int[row][];

int strArrayCounter = strArrayLength-1;
for(i=0; i&lt;row,strArrayCounter&gt;=0; i++){
   for(j=0; j&lt;4; j++){
      intArray[i][j] = Integer.parseInt(strArrayLength[strArrayCounter--]);
   }
}
</code></pre>
"
18012906,"<p>Why don't you use a <code>ByteArrayOutputStream</code>? That's what you are supposed to use for this purpose.</p>
"
29228148,"<p>Conceptually Scanner and collections should work for you:</p>

<pre><code>        String strings = ""100.122.323.344;543.433.872.438;218.544.678.322"";
    Scanner scanner = new Scanner(new ByteArrayInputStream(strings.getBytes()));
    scanner.useDelimiter("";"");
    List&lt;List&lt;Integer&gt;&gt; list = new ArrayList&lt;&gt;();

    while(scanner.hasNext())
    {
        Scanner scanner2 = new Scanner(new ByteArrayInputStream(scanner.next().getBytes()));
        scanner2.useDelimiter(""\\D"");
        List&lt;Integer&gt; lst = new ArrayList&lt;&gt;();
        while(scanner2.hasNextInt())
            lst.add(scanner2.nextInt());
        list.add(lst);  
    }
    System.out.println(""Lists: "");
    for(List&lt;Integer&gt; lst : list)
        System.out.println(lst);
</code></pre>
"
14277235,"<p>Java Reflection makes it possible to inspect classes, interfaces, fields and methods at runtime, without knowing the names of the classes, methods etc. at compile time. Mostly at framework level the maximum benefits of reflection can be achieved. The byte code that is compiled if needs extra modification at run time for examination, modification, addition of more byte code within itself, or another program or another framework at method level, instance variable level, constructor level, annotation level reflection can be useful.</p>

<p>Suppose you have a method <code>add(Int a,int b)</code>. The equivalent byte code is suppose <code>B1</code>. If suppose you have 1000 methods named <code>add</code> in your system. Now you want to check the value of parameter <code>a</code> and <code>b</code> before method <code>add</code> is called. So, you can glue your code to another program or framework that uses reflection to dynamically examine the byte code value using <code>Object.getClass.getMethod()</code>. There are several classes for examining. It can add more operation before method <code>add</code> is called. But, the program itself or another program or framework does not know about the object that has a method named <code>add</code>. Mostly in dependency injection, aspect oriented programming use of reflection is mostly used.</p>
"
14754238,"<p>The following should do rounding better than the above solutions, but at the expense of performance (due to floating point calculation of 0.5*rctDenominator):</p>

<pre><code>uint64_t integerDivide( const uint64_t&amp; rctNumerator, const uint64_t&amp; rctDenominator )
{
  // Ensure .5 upwards is rounded up (otherwise integer division just truncates - ie gives no remainder)
  return (rctDenominator == 0) ? 0 : (rctNumerator + (int)(0.5*rctDenominator)) / rctDenominator;
}
</code></pre>
"
29322850,"<p>This error occurs when a connection is closed abruptly (when a TCP connection is reset while there is still data in the send buffer). The condition is very similar to a much more common 'Connection reset by peer'. It can happen sporadically when connecting over the Internet, but also systematically if the timing is right (e.g. with keep-alive connections on localhost).</p>

<p>An HTTP client should just re-open the connection and retry the request. It is important to understand that when a connection is in this state, there is no way out of it other than to close it. Any attempt to send or receive will produce the same error.</p>

<p>Don't use <code>URL.open()</code>, use Apache-Commons <a href=""https://hc.apache.org/httpcomponents-client-ga/"" rel=""nofollow"">HttpClient</a> which has a retry mechanism, connection pooling, keep-alive and many other features.</p>

<p>Sample usage:</p>

<pre><code>HttpClient httpClient = HttpClients.custom()
            .setConnectionTimeToLive(20, TimeUnit.SECONDS)
            .setMaxConnTotal(400).setMaxConnPerRoute(400)
            .setDefaultRequestConfig(RequestConfig.custom()
                    .setSocketTimeout(30000).setConnectTimeout(5000).build())
            .setRetryHandler(new DefaultHttpRequestRetryHandler(5, true))
            .build();
// the httpClient should be re-used because it is pooled and thread-safe.

HttpGet request = new HttpGet(uri);
HttpResponse response = httpClient.execute(request);
reader = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));
// handle response ...
</code></pre>
"
19051117,"<p>String [] array;</p>

<pre><code>int checkWord(String searchWord)
{
    for(int i = 0; i &lt; array.length; i++)
    {
        if(searchWord.equals(array[i]))
            return i;
    }
    return 0;

}
</code></pre>
"
7666726,"<pre><code>public static String zeroPad(long number, int width) {
   long wrapAt = (long)Math.pow(10, width);
   return String.valueOf(number % wrapAt + wrapAt).substring(1);
}
</code></pre>

<p>The only problem with this approach is that it makes you put on your thinking hat to figure out how it works.</p>
"
9091254,"<p>No method <code>setMessage()</code> defined for class Exception. One should use workarounds to build exception message from custom exception parameters instead of building it directly in the constructor.</p>
"
21534079,"<p>use the below code please :
    <pre>
    Properties p = new Properties(); 
    StringBuffer path = new StringBuffer(""com/al/common/email/templates/"");
    path.append(""foo.properties"");
    InputStream fs = getClass().getClassLoader()
                                    .getResourceAsStream(path.toString());</p>

<code>if(fs == null){
     System.err.println(""Unable to load the properties file"");
  }
else{
   try{
       p.load(fs);
     } 
catch (IOException e) {
        e.printStackTrace();
      }
   }
</code></pre>
"
21553287,"<p>You can with a classloader and the class name, eventually some parameters.</p>

<pre><code>final ClassLoader classLoader = ...
final Class&lt;?&gt; aClass = classLoader.loadClass(""java.lang.Integer"");
final Constructor&lt;?&gt; constructor = aClass.getConstructor(int.class);
final Object o = constructor.newInstance(123);
System.out.println(""o = "" + o);
</code></pre>
"
11683074,"<p>If you're willing to run your Java code under .NET (or Mono), it is possible to do this using <a href=""http://www.ikvm.net/"" rel=""nofollow"">IKVM</a>.</p>

<p>Because (as far as I know) current Java compilers don't read .NET assemblies, there are 2 steps. First you need to <a href=""http://www.ikvm.net/userguide/ikvmstub.html"" rel=""nofollow"">generate a stub JAR</a> containing dummy classes and methods with the signatures of the .NET assembly you want to use, so that <code>javac</code> (or your IDE) knows what methods are available. For example, if you want to use something in the main .NET standard library from Java, run</p>

<pre><code>ikvmstub mscorlib
</code></pre>

<p>which generates the stub <code>mscorlib.jar</code>. (It found the Mono <code>mscorlib.dll</code> assembly for me automatically under Linux, but if it fails you may have to give the full path to the DLL.)</p>

<p>You can then write a Java file that uses it, e.g. (<a href=""http://www.ikvm.net/userguide/ikvmstub.html"" rel=""nofollow"">based on the example from the IKVM documentation</a>):</p>

<pre><code>import cli.System.IO.Directory;
public class IKVMTest {
    public static void main(String[] args) {
        for(String file : Directory.GetFiles(""."")) // From .NET standard library
            System.out.println(file);              // From Java standard library
    }
}
</code></pre>

<p>Note that CLI packges are prefixed with <code>cli.</code>, hence the import <code>cli.System</code> instead of just <code>System</code>.</p>

<p>To compile, include the stub JAR on the classpath:</p>

<pre><code>javac -classpath mscorlib.jar IKVMTest.java
</code></pre>

<p>Since Java linking occurs at runtime, the output <code>class</code> files use the methods of the desired names and signatures, but you can swap out the dummy stub methods with the real .NET methods when run under IKVM:</p>

<pre><code>ikvm IKVMTest
</code></pre>

<p>and it will print the files in the current directory by calling the .NET methods.</p>
"
29895419,"<p>I would try as below</p>

<pre><code>public static void main(String args[])
{
    String x=""123312351863"";
    String r[]=x.split("""");int sum=0;
    for(int i=1;i&lt;=x.length();i++)
    {

        sum+=Integer.parseInt(r[i]);
    }
    System.out.println(sum);
}
</code></pre>
"
21864471,"<p>To add to all the answers, printing the object as a JSON string is also an option.</p>

<p>Using Jackson:</p>

<pre><code>ObjectWriter ow = new ObjectMapper().writer().withDefaultPrettyPrinter();
System.out.println(ow.writeValueAsString(anyArray));
</code></pre>

<p>Using Gson:</p>

<pre><code>Gson gson = new Gson();
System.out.println(gson.toJson(anyArray));
</code></pre>
"
23112447,"<p>I am pretty sure that you can do it using Java Reflection mechanism. It is not as straightforward as using super but it gives you more power.</p>

<pre><code>class A
{
    public void myMethod()
    { /* ... */ }
}

class B extends A
{
    public void myMethod()
    {
        super.myMethod(); // calling parent method
    }
}
</code></pre>
"
11395769,"<p>To detect an URL you just need this:</p>

<pre><code>if (yourtextview.getText().toString().contains(""www"") || yourtextview.getText().toString().contains(""http://""){ your code here if contains URL;}
</code></pre>
"
24768836,"<p>Try this:</p>

<pre><code>Query q = sess.createQuery(""from Cat cat"");
List&lt;?&gt; results = q.list();
for (Object obj : results) {
    Cat cat = (Cat) obj;
}
</code></pre>
"
25281888,"<p>Simplest that works for me using Hibernate that supports files in jar-file tag, so can use <strong>./target/classes</strong>.</p>

<p>Put this as under <strong>src/test/resources/META-INF/persistence.xml</strong>:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?&gt;
&lt;persistence xmlns=""http://java.sun.com/xml/ns/persistence""
xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" version=""2.0""
xsi:schemaLocation=""http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd""&gt;
&lt;persistence-unit name=""your_persistence_unit"" transaction-type=""RESOURCE_LOCAL""&gt;
    &lt;provider&gt;org.hibernate.ejb.HibernatePersistence&lt;/provider&gt;
    &lt;jar-file&gt;./target/classes&lt;/jar-file&gt;
    &lt;exclude-unlisted-classes&gt;false&lt;/exclude-unlisted-classes&gt;
    &lt;!-- validation-mode&gt;NONE&lt;/validation-mode --&gt;
    &lt;properties&gt;
        &lt;property name=""hibernate.archive.autodetection"" value=""class"" /&gt;

       ...

    &lt;/properties&gt;
&lt;/persistence-unit&gt;
</code></pre>

<p></p>

<p>Can run both with TestNG directly or as a maven test.</p>
"
25545166,"<p>If you have instance </p>

<pre><code>OutputStream output = new OutputStream();
</code></pre>

<p>Then just do the</p>

<pre><code>   output.toString();
</code></pre>
"
15336749,"<pre><code>Important Answar
String name;
int roll;

public int compare(Object obj1,Object obj2) { // For Comparator interface
    return obj1.compareTo(obj1);
}

public int compareTo(Object obj1) { // For Comparable Interface
    return obj1.compareTo(obj);
}
</code></pre>

<p>Here in <code>return obj1.compareTo(obj1)</code> or <code>return obj1.compareTo(obj)</code> statement 
only take Object; primitive is not allowed.
For Example </p>

<pre><code>name.compareTo(obj1.getName()) // Correct Statement.
</code></pre>

<p>But </p>

<pre><code>roll.compareTo(obj1.getRoll()) 
// Wrong Statement Compile Time Error Because roll 
// is not an Object Type, it is primitive type.
</code></pre>

<p>name is String Object so it worked.
If you want to sort roll number of student than use below code.</p>

<pre><code>public int compareTo(Object obj1) { // For Comparable Interface
    Student s = (Student) obj1;
    return rollno - s.getRollno();
}  
</code></pre>

<p>or</p>

<pre><code>public int compare(Object obj1,Object obj2) { // For Comparator interface
    Student s1 = (Student) obj1;
    Student s2 = (Student) obj2;
    return s1.getRollno() - s2.getRollno();
}  
</code></pre>
"
27821517,"<p>For Reading a string in a stream using just what java supplies.</p>

<pre><code>InputStream s = new BufferedInputStream( new ReaderInputStream( new StringReader(""a string"")));
</code></pre>
"
28672797,"<p>A simple way of doing this is <code>System.getProperty(""user.dir/bin/&lt;fileName&gt;.ini"")</code>
Assuming your ini is located in your bin folder (advised). You can then use <code>System.getProperty(key, args);</code>, where key is the key to be used and args is the value of the key</p>
"
28825937,"<p>This answer is not related to Object size, but when you are using array to accommodate the objects; how much memory size it will allocate for the object.</p>

<p>So arrays, list, or map all those collection won't be going to store objects really (only at the time of primitives, real object memory size is needed), it will store only references for those objects. </p>

<p>Now the <code>Used heap memory = sizeOfObj + sizeOfRef (4 bytes) in collection</code></p>

<p><strong>PRIMITIVES</strong></p>

<pre><code>int   [] intArray    = new int   [1]; will require 4 bytes.
long  [] longArray   = new long  [1]; will require 8 bytes.
</code></pre>

<p><strong>OBJECTS</strong></p>

<pre><code>Object[] objectArray = new Object[1]; will require 4 bytes. The object can be any user defined Object.
Long  [] longArray   = new Long  [1]; will require 4 bytes.
</code></pre>

<p>I mean to say all the object REFERENCE needs only 4 bytes of memory. It may be String reference OR Double object reference, But depends on object creation the memory needed will vary.</p>

<p>e.g) If i create object for the below class <code>ReferenceMemoryTest</code> then 4 + 4 + 4 = 12 bytes of memory will be created. The memory may differ when you are trying to initialize the references.</p>

<pre><code> class ReferenceMemoryTest {
    public String refStr;
    public Object refObj;
    public Double refDoub; 
}
</code></pre>

<p>So when are creating object/reference array, all its contents will be occupied with NULL references. And we know each reference requires 4 bytes.</p>

<p>And finally, memory allocation for the below code is 20 bytes.</p>

<p>ReferenceMemoryTest ref1 = new ReferenceMemoryTest(); ( 4(ref1) + 12 = 16 bytes)
ReferenceMemoryTest ref2 = ref1;                      ( 4(ref2) + 16 = 20 bytes)</p>
"
29062896,"<p>In each of your  tried options</p>

<pre><code>rule[0].equals("""")
rule[0].equals(null)
rule[0].equals(""null"")
rule[0].matches("""")
rule[0].matches(""null"")
rule.length == 0
rule.equals(null)
</code></pre>

<p>You  already assumed that your element at <code>0</code> index is not null , and calling <code>equals()</code> and <code>matches()</code> method on element at 0th index causing <a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/NullPointerException.html"" rel=""nofollow"">NullPointerException</a></p>

<blockquote>
  <p>Thrown when an application attempts to use null in a case where an
  object is required. These include:</p>
  
  <ol>
  <li>Calling the instance method of a null object.</li>
  <li>Accessing or modifying the field of a null object.</li>
  <li>Taking the length of null as if it were an array.</li>
  <li>Accessing or modifying the slots of null as if it were an array.</li>
  <li>Throwing null as if it were a Throwable value.</li>
  </ol>
</blockquote>

<p>Instead try like this  </p>

<pre><code>if(rule[0] != null){
// Now you can call methods on your `0th` index element

}
</code></pre>
"
29135746,"<p>Fix answer Rob Dickerson.</p>

<p>It's easier to use:</p>

<pre><code>public static String join(String delimiter, String... values)
{
    StringBuilder stringBuilder = new StringBuilder();

    for (String value : values)
    {
        stringBuilder.append(value);
        stringBuilder.append(delimiter);
    }

    String result = stringBuilder.toString();

    return result.isEmpty() ? result : result.substring(0, result.length() - 1);
}
</code></pre>
"
19091039,"<p>This is what I used when I had similar requirement. This determines the PID of the Java process correctly. Let your java code spawn a server on a pre-defined port number and then execute OS commands to find out the PID listening on the port. For Linux</p>

<pre><code>netstat -tupln | grep portNumber
</code></pre>
"
29309027,"<p>Use a data structure which keeps values sorted in descending order.  Then traverse just until you find the 5's. Change those values. Viola, you didn't traverse the entire array, though you might wind up doing more work anyway.</p>

<p>I suggest a max-heap. In Java, a <code>PriorityQueue</code> would do what you want.</p>

<p>Though know this isn't going to operate more efficiently than just traversing the array a single time.  Keeping an ordered data structure and performing operations on it are time consuming.</p>
"
20007695,"<p>The major difference is <code>StringBuffer</code> is syncronized but <code>StringBuilder</code> is not.If you need to use more than one thread , then StringBuffer is recommended.But, as per the execution speed <code>StringBuilder</code> is faster than <code>StringBuffer</code> , because its not syncronized .</p>
"
19125208,"<pre><code>package in.javadomain;

public class JavaSplit {

    public static void main(String[] args) {
        String input = ""chennai\nvellore\ncoimbatore\nbangalore\narcot"";
        System.out.println(""Before split:\n"");
        System.out.println(input);

        String[] inputSplitNewLine =input.split(""\\n"");
        System.out.println(""\n After split:\n"");
        for(int i=0;i&lt;inputSplitNewLine.length;i++){
            System.out.println(inputSplitNewLine[i]);
        }
    }

}
</code></pre>
"
30016335,"<p>Just make the <code>name</code> field <code>protected</code>. This keyword exists just for this purpose, and it's weird to call a getter method instead. </p>
"
29572824,"<p>Well Java use reference semantics. Thus, you can think of ""arr"" parameter as a pointer to an array. Remember it's just a pointer, so you can copy the contents of arr2 to arr1 one by one and it should work fine.</p>

<p>instead of:
    arr = arr2</p>

<p>try:</p>

<pre><code>for (int i=0; i&lt;arr.size(); ++i) {
    arr[i] = arr2[i];
}
</code></pre>
"
21473673,"<p>This works for me:</p>

<blockquote>
  <p>netbeans_default_options=""-J-client -J-Xverify:none -J-Xmx1024m -J-Xss2m -J-Xms256m -J-XX:PermSize=32m -J-Dnetbeans.logger.console=true -J-ea -J-Dapple.laf.useScreenMenuBar=true -J-Dapple.awt.graphics.UseQuartz=true -J-Dsun.java2d.noddraw=true -J-Dsun.java2d.dpiaware=true -J-Dsun.zip.disableMemoryMapping=true -J-Dplugin.manager.check.updates=false -J-Dnetbeans.extbrowser.manual_chrome_plugin_install=yes""</p>
</blockquote>

<p>Settings in the <code>etc/netbeans.conf</code>.</p>
"
29720896,"<pre><code>package test;

public class BankAccount
{
    private Money balance;

    public BankAccount()
    {
        // start with zero balance
        balance = new Money(0,0);
    }

    public void addMoneyToBalance(Money m)
    {
        balance.setDollars(m.getDollars());
        balance.setCents(m.getCents());
    }

    public String accountBalanceToString()
    {
        return ""$"" + balance.getDollars() + ""."" + balance.getCents();
    }

    // inner class defines how money is held in memory
    private static class Money
    {
        private int dollars;
        private int cents;

        public Money()
        {}

        // overloaded constructor, for a one-shot setup
        public Money(int newDollars, int newCents)
        {
            dollars = newDollars;
            cents = newCents;
        }

        public void setDollars(int newDollars)
        {
            dollars = newDollars;
        }

        public void setCents(int newCents)
        {
            cents = newCents;
        }

        public int getDollars()
        {
            return dollars;
        }

        public int getCents()
        {
            return cents;
        }
    }

    public static void main(String[] args)
    {
        BankAccount myAccount = new BankAccount();
        // prepare a deposit of $69.69
        Money currentDeposit = new Money(69, 69);
        myAccount.addMoneyToBalance(currentDeposit);
        System.out.println(myAccount.accountBalanceToString());
    }
}
</code></pre>
"
30350067,"<p>Reason behind this immutability and pool mechanism used by <code>String</code> to make java more memory efficient since <code>String</code> is widely used object in java.</p>

<p>let us suppose two or more reference variable reffering to same object in pool,change in one will reflect in other thats why String is immutable.</p>

<blockquote>
  <p>Below are some important benifiet of String over String
  Buffer/Builder-</p>
</blockquote>

<ul>
<li>if there are thousands of String object in pool,and they are referring to same makes language to more memory efficient.</li>
<li>String literals are compile time identical object.</li>
<li>String objects are light weighted than builder or buffer,thats why both of these also used String.</li>
<li>StringBuilder and StringBuffer both  will cause a problems while    using in collections like keys in hashMap.</li>
</ul>
"
30385058,"<p>You can make this work by hiding behind unchecked casts with helper method.</p>

<pre><code>public static void main(String[] args) {
    ArrayList&lt;Tbin&lt;? extends Base&gt;&gt; test = new ArrayList&lt;&gt;();
    test.add(new Tbin&lt;Derived&gt;());

    TbinList&lt;? extends Base&gt; test2 = new TbinList&lt;&gt;();
    Tbin&lt;Derived&gt; value2 = new Tbin&lt;&gt;();
    add(test2, value2);
}

private static &lt;T, Y extends T&gt; void add(TbinList&lt;? extends T&gt; test2, Tbin&lt;Y&gt; value) {
    TbinList&lt;T&gt; test3 = (TbinList&lt;T&gt;) test2;
    test3.add((Tbin&lt;T&gt;) value);
}
</code></pre>
"
23625612,"<p>I naively do it this way :</p>

<pre><code>&lt;build&gt;
  &lt;finalName&gt;osmwse&lt;/finalName&gt;
  &lt;sourceDirectory&gt;src/main/java, src/interfaces, src/services&lt;/sourceDirectory&gt;
&lt;/build&gt;
</code></pre>
"
25479306,"<p>whats wrong with </p>

<pre><code>class Example
{
    FileOutputStream fileOutputStream;

    public Example()
    {
        //System.out.println(""Example.Example()"");

        debug(""Example.Example()"",false); // toggle

         try
         {
              fileOuputStream = new FileOutputStream(""debug.txt"");
         }
         catch (Exception exception)
         {
             debug(exception + Calendar.getInstance().getTime());
          }
    }

    private boolean was911AnInsideJob()
    {
         System.out.println(""Example.was911AnInsideJob()"");

         return true;
    }


    public boolean shouldGWBushBeImpeached()
    {
         System.out.println(""Example.shouldGWBushBeImpeached()"");

         return true;
    }

    public void setPunishment(int yearsInJail)
    {
        debug(""Server.setPunishment(int yearsInJail="" + yearsInJail + "")"",true);
    }
}
</code></pre>

<p><br><br>
and before people go crazy about using ""System.out.println(...)"" you could always, and should, create some method so that output can be redirected  e.g
<br><Br><Br></p>

<pre><code>private void debug (Object object)
{
    debug(object,true);
}

private void dedub(Object object, boolean debug)
{
    if (debug)
    {
        System.out.println(object);

        // you can also write to a file but make sure the outputstream ISNT opened
        // every time debug(Object object) is called

        fileOutputStream.write(object.toString().getBytes());
    }
}
</code></pre>
"
30047200,"<p>You need an argument to the println() method, not a directive.</p>

<p>But I think it's cleaner to use an ""if"" instead:
<code>
if (i%5 == 0)
    System.out.println("""" + i);
</code></p>
"
24225075,"<p>Here's a thread-safe solution for the problem:</p>

<p><a href=""https://svn.code.sf.net/p/loggifier/code/trunk/de.unkrig.commons.lang/src/de/unkrig/commons/lang/security/Sandbox.java"" rel=""nofollow"">https://svn.code.sf.net/p/loggifier/code/trunk/de.unkrig.commons.lang/src/de/unkrig/commons/lang/security/Sandbox.java</a></p>

<pre><code>package de.unkrig.commons.lang.security;

import java.security.AccessControlContext;
import java.security.Permission;
import java.security.Permissions;
import java.security.ProtectionDomain;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.WeakHashMap;

import de.unkrig.commons.nullanalysis.Nullable;

/**
 * This class establishes a security manager that confines the permissions for code executed through specific classes,
 * which may be specified by class, class name and/or class loader.
 * &lt;p&gt;
 * To 'execute through a class' means that the execution stack includes the class. E.g., if a method of class {@code A}
 * invokes a method of class {@code B}, which then invokes a method of class {@code C}, and all three classes were
 * previously {@link #confine(Class, Permissions) confined}, then for all actions that are executed by class {@code C}
 * the &lt;i&gt;intersection&lt;/i&gt; of the three {@link Permissions} apply.
 * &lt;p&gt;
 * Once the permissions for a class, class name or class loader are confined, they cannot be changed; this prevents any
 * attempts (e.g. of the confined class itself) to release the confinement.
 * &lt;p&gt;
 * Code example:
 * &lt;pre&gt;
 *  Runnable unprivileged = new Runnable() {
 *      public void run() {
 *          System.getProperty(""user.dir"");
 *      }
 *  };
 *
 *  // Run without confinement.
 *  unprivileged.run(); // Works fine.
 *
 *  // Set the most strict permissions.
 *  Sandbox.confine(unprivileged.getClass(), new Permissions());
 *  unprivileged.run(); // Throws a SecurityException.
 *
 *  // Attempt to change the permissions.
 *  {
 *      Permissions permissions = new Permissions();
 *      permissions.add(new AllPermission());
 *      Sandbox.confine(unprivileged.getClass(), permissions); // Throws a SecurityException.
 *  }
 *  unprivileged.run();
 * &lt;/pre&gt;
 */
public final
class Sandbox {

    private Sandbox() {}

    private static final Map&lt;Class&lt;?&gt;, AccessControlContext&gt;
    CHECKED_CLASSES = Collections.synchronizedMap(new WeakHashMap&lt;Class&lt;?&gt;, AccessControlContext&gt;());

    private static final Map&lt;String, AccessControlContext&gt;
    CHECKED_CLASS_NAMES = Collections.synchronizedMap(new HashMap&lt;String, AccessControlContext&gt;());

    private static final Map&lt;ClassLoader, AccessControlContext&gt;
    CHECKED_CLASS_LOADERS = Collections.synchronizedMap(new WeakHashMap&lt;ClassLoader, AccessControlContext&gt;());

    static {

        // Install our custom security manager.
        if (System.getSecurityManager() != null) {
            throw new ExceptionInInitializerError(""There's already a security manager set"");
        }
        System.setSecurityManager(new SecurityManager() {

            @Override public void
            checkPermission(@Nullable Permission perm) {
                assert perm != null;

                for (Class&lt;?&gt; clasS : this.getClassContext()) {

                    // Check if an ACC was set for the class.
                    {
                        AccessControlContext acc = Sandbox.CHECKED_CLASSES.get(clasS);
                        if (acc != null) acc.checkPermission(perm);
                    }

                    // Check if an ACC was set for the class name.
                    {
                        AccessControlContext acc = Sandbox.CHECKED_CLASS_NAMES.get(clasS.getName());
                        if (acc != null) acc.checkPermission(perm);
                    }

                    // Check if an ACC was set for the class loader.
                    {
                        AccessControlContext acc = Sandbox.CHECKED_CLASS_LOADERS.get(clasS.getClassLoader());
                        if (acc != null) acc.checkPermission(perm);
                    }
                }
            }
        });
    }

    // --------------------------

    /**
     * All future actions that are executed through the given {@code clasS} will be checked against the given {@code
     * accessControlContext}.
     *
     * @throws SecurityException Permissions are already confined for the {@code clasS}
     */
    public static void
    confine(Class&lt;?&gt; clasS, AccessControlContext accessControlContext) {

        if (Sandbox.CHECKED_CLASSES.containsKey(clasS)) {
            throw new SecurityException(""Attempt to change the access control context for '"" + clasS + ""'"");
        }

        Sandbox.CHECKED_CLASSES.put(clasS, accessControlContext);
    }

    /**
     * All future actions that are executed through the given {@code clasS} will be checked against the given {@code
     * protectionDomain}.
     *
     * @throws SecurityException Permissions are already confined for the {@code clasS}
     */
    public static void
    confine(Class&lt;?&gt; clasS, ProtectionDomain protectionDomain) {
        Sandbox.confine(
            clasS,
            new AccessControlContext(new ProtectionDomain[] { protectionDomain })
        );
    }

    /**
     * All future actions that are executed through the given {@code clasS} will be checked against the given {@code
     * permissions}.
     *
     * @throws SecurityException Permissions are already confined for the {@code clasS}
     */
    public static void
    confine(Class&lt;?&gt; clasS, Permissions permissions) {
        Sandbox.confine(clasS, new ProtectionDomain(null, permissions));
    }

    // Code for 'CHECKED_CLASS_NAMES' and 'CHECKED_CLASS_LOADERS' omitted here.

}
</code></pre>

<p>Please comment!</p>

<p>CU</p>

<p>Arno</p>
"
26011571,"<pre><code>public static String genXmlTag(String tagName, String innerXml, String properties )
{
    return String.format(""&lt;%s %s&gt;%s&lt;/%s&gt;"", tagName, properties, innerXml, tagName);
}

public static String genXmlTag(String tagName, String innerXml )
{
    return genXmlTag(tagName, innerXml, """");
}

public static &lt;T&gt; String serializeXML(List&lt;T&gt; list)
{
    String result = """";
    if (list.size() &gt; 0)
    {
        T tmp = list.get(0);
        String clsName = tmp.getClass().getName();
        String[] splitCls = clsName.split(""\\."");
        clsName = splitCls[splitCls.length - 1];
        Field[] fields = tmp.getClass().getFields();

        for (T t : list)
        {
            String row = """";
            try {
                for (Field f : fields)
                {
                    Object value = f.get(t);
                    row += genXmlTag(f.getName(), value == null ? """" : value.toString());
                }
            } catch (IllegalAccessException e) {
                e.printStackTrace();
            }
            row = genXmlTag(clsName, row);

            result += row;
        }
    }

    result = genXmlTag(""root"", result);
    return result;
}
</code></pre>
"
30292049,"<p>If you mean iterating through a list of arrays something like this will print out each value inside each array:        </p>

<pre><code>for(int=0; i&lt;list.size(); i++){
      for(int j=0; j&lt;list.get(i).length; j++){
          System.out.println(j);
       }
    }
</code></pre>
"
27326948,"<p>For Me this was the solution, HEX=""FF01"" then split to FF(255) and 01(01) </p>

<pre><code>private static byte[] BytesEncode(String encoded) {
    //System.out.println(encoded.length());
    byte result[] = new byte[encoded.length() / 2];
    char enc[] = encoded.toUpperCase().toCharArray();
    String curr = """";
    for (int i = 0; i &lt; encoded.length(); i=i+2) {
        curr = encoded.substring(i,i+2);
        System.out.println(curr);
        if(i==0){
            result[i]=((byte) Integer.parseInt(curr, 16));
        }else{
            result[i/2]=((byte) Integer.parseInt(curr, 16));
        }

    }
    return result;
}
</code></pre>
"
29399875,"<p>It looks as though you are returning the value at index 0.</p>

<pre><code>public static int[] invertieren(int[] werte) {
    int[] werte1 = new int[werte.length];
    int len = werte.length - 1;
    for (int i = 0; i &lt; len; i++) {
        werte1[len-i] = werte[i];
    }
    return werte1;
}
</code></pre>
"
28525284,"<pre><code>public class TestClass implements Runnable {
    public static void main(String[] args) {
        TestClass tc = new TestClass();

        Thread t1 = new Thread(tc);
        System.out.println(""Before Starting Thread "" + Thread.currentThread().hashCode());
        t1.start();
        System.out.println(""After Starting Thread "" + Thread.currentThread().hashCode());
    }

    @Override
    public void run() {
        System.out.println(""TestClass Run method is  Running with thread "" + Thread.currentThread().hashCode());        
    }
}
</code></pre>
"
28816615,"<p>You can use following method</p>

<pre><code>int num=((int)(Math.random()*100))%6+5;
</code></pre>

<p>This will return random values from 5 to 10.</p>

<p>Generalized to the following</p>

<pre><code>int num=((int)(Math.random()*100))%(min+1)+(max-min);
</code></pre>
"
29279143,"<p>It's better to use  SecureRandom rather then just Random. </p>

<pre><code>public static int generateRandomInteger(int min, int max) {
    SecureRandom rand = new SecureRandom();
    rand.setSeed(new Date().getTime());
    int randomNum = rand.nextInt((max - min) + 1) + min;
    return randomNum;
}
</code></pre>
"
29717146,"<p>In the other answers, you have valid solutions for choosing randomly between two values. What I propose you is a way to choose between any number of values :</p>

<pre><code>private static Random rd = new Random();
public static &lt;T&gt; T randomItem(List&lt;T&gt; elts) {
    return elts.get(rd.nextInt(elts.size());
}
</code></pre>
"
30003266,"<p>Initializing a null String with <code>""""</code> should work.</p>
"
29592511,"<p>Pass the activity into the <code>AsyncTask</code>. See below.</p>

<pre><code>private class SearchForQuestions extends AsyncTask&lt;String, Void, DataHandler&gt; {
    Activity activity;
    public void SearchForQuestions(Activity activity){
        this.activity = activity;
    }
//... rest of the code
</code></pre>

<hr>

<pre><code>  public class QuizMap extends FragmentActivity implements OnMarkerClickListener {
    /*...*/
    new SearchForQuestions(this).execute();
    /*...*/
    /*When calling the toast:*/
Toast.makeText(this.activity, ""This is Toast!!!"", Toast.LENGTH_SHORT).show();
</code></pre>
"
29845162,"<p>Editted.</p>

<pre><code>import java.util.*;

public class Stutter {

    static String stutterString = """";

    public static String stutter ( String s ) {
        if(s.length() &gt; 0)
        {
            return stutterString.concat(s.substring(0,1)).concat(s.substring(0,1)).concat(stutter(s.substring(1)));
        }
        else
        {
            return stutterString;
        }
    }

    public static void main ( String [] args ) {


        Scanner inputScanner = new Scanner ( System.in );

        System.out.println ( ""What word would you like to stutter?"" );
        String userInput = inputScanner.next();

        inputScanner.close();

        System.out.println ( stutter ( userInput ) );

    }

}
</code></pre>
"
29845297,"<p>This can be achieved very simply using <a href=""https://docs.oracle.com/javase/7/docs/api/java/lang/String.html#replaceAll(java.lang.String,%20java.lang.String)"" rel=""nofollow"">String.replaceAll()</a>:</p>

<pre><code>public class Stutter {
    public static void main (String args[]) {
        String TEST_STRING = ""abcdefg"";
        System.out.println(stutter(TEST_STRING));
    }

    private static String stutter(String s) {
        return s.replaceAll(""(.)"", ""$1$1"");
    }
}
</code></pre>
"
30315565,"<p>First of all, I'm operating under the assumption that you want x and y to be of varying (generic) type.</p>

<p>For this, you would want:</p>

<pre><code>public class Vec2&lt;E extends Number&gt; {

private E x, y;

public Vec2(E xa, E ya) {
    this.x = xa;
    this.y = ya;
}

//Not _easily_ possible with generics, as the compiler has no guarantee that
//zero is an acceptable value. Consider some variation of a Factory pattern,
//but this will work. Note that there is an ""officially""-unchecked cast warning.
public Vec2() {
    super();

    final Number zero = 0.0; 
    this.x = (E)zero;
    this.y = (E)zero;
}

public Vec2(Vec2&lt;E&gt; vec) {
    this(vec.x, vec.y);
}

public void addX(E xa) {
    Number c = x.doubleValue() + xa.doubleValue();
    x = (E)c;
}

public void addY(E ya) {
    Number c = y.doubleValue() + ya.doubleValue();
    x = (E)c;
}
</code></pre>

<p>This should work well. While I encourage you to use generics, note that keeping a numeric type (like int, float, or double) as a generic is often not advisable, as they're only similar on the surface. When you dig into the operations of, say, ""+"", they are radically different dependent on type. You will also have an assortment of unchecked-cast warnings in this code; perhaps I could have rooted them out properly had I the time, but this just goes back to my warning about generic numbers.</p>

<p>You will also notice a few flukes of the language doing this, such as the way that <code>(E)zero</code> works, but (E)(0.0) does not.</p>

<p>By and large, though, generics are a much easier and cleaner way to go about things than inheritance, when it is possible.</p>
"
29940598,"<p>I don't know what you mean by ""simple and elegant"", but I'll go with it.</p>

<p>EDIT: String.join is probably the best way</p>

<p>DOUBLE EDIT: Don't use this, as pointed out in the comments below.</p>

<pre><code>public String printMyArrayList(ArrayList&lt;String&gt; list)
{
   String result = """";
   for(String s : list)
   {
      result += s + "", "";
   }
   return result.substring(0, result.length()-2);
}
</code></pre>
"
29940622,"<p>Use <code>List#toString</code> method. It will enclose with <code>[]</code>. If you don't want to include <code>[]</code> than you can substring it.</p>

<pre><code>   String listStr= list.toString();
   String withoutSym= listStr.substring(1, listStr.length()-1);
</code></pre>
"
30025412,"<pre><code>public class PrintNumbersbyThreads implements Runnable {
    private int i;

    public PrintNumbersbyThreads(int i) {
        this.i = i;
    }

    public static void main(String[] args) {
        PrintNumbersbyThreads p = new PrintNumbersbyThreads(1);
        PrintNumbersbyThreads p2 = new PrintNumbersbyThreads(2);
        PrintNumbersbyThreads p3 = new PrintNumbersbyThreads(3);
        Thread t1 = new Thread(p, ""t1"");
        Thread t2 = new Thread(p2, ""t2"");
        Thread t3 = new Thread(p3, ""t3"");
        t1.start();

        try {
            t1.join();
            t2.start();
            t2.join();
            t3.start();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void run() {
        System.out.println(""\n"" + Thread.currentThread().getName() + "" prints  "");
        for (int j = 0; j &lt; 10; j++) {
            System.out.print(i + "" "");
            i = i + 10;
        }
    }
}
</code></pre>

<p>Written sample code 3 Threads and the output is </p>

<p><code>t1</code> prints:  </p>

<blockquote>
  <p>1 11 21 31 41 51 61 71 81 91</p>
</blockquote>

<p><code>t2</code> prints:</p>

<blockquote>
  <p>2 12 22 32 42 52 62 72 82 92</p>
</blockquote>

<p><code>t3</code> prints: </p>

<blockquote>
  <p>3 13 23 33 43 53 63 73 83 93</p>
</blockquote>

<p>Hope this is what you are Looking for?</p>
"
30026166,"<p>Hope this helps =) Took me an hour to do it. </p>

<pre><code>package com.xxxx.simpleapp;

import java.util.ArrayList;
import java.util.List;

public class TenThreads {

    public int currentTaskValue = 1;

    public static void main(String[] args) {
        TenThreads monitor = new TenThreads();
        List&lt;ModThread&gt; list = new ArrayList();
        for (int i = 0; i &lt; 10; i++) {
            ModThread modThread = new ModThread(i, monitor);
            list.add(modThread);
        }
        for (ModThread a : list) {
            a.start();
        }
    }

}

class ModThread extends Thread {
    private int modValue;
    private TenThreads monitor;

    public ModThread(int modValue, TenThreads monitor) {
        this.modValue = modValue;
        this.monitor = monitor;
    }

    @Override
    public void run() {
        synchronized (monitor) {
            try {
                while (true) {
                    while (monitor.currentTaskValue % 10 != modValue) {
                        monitor.wait();
                    }

                    if (monitor.currentTaskValue == 101) {
                        break;
                    }
                    System.out.println(Thread.currentThread().getName() + "" : ""
                            + monitor.currentTaskValue + "" ,"");
                    monitor.currentTaskValue = monitor.currentTaskValue + 1;
                    monitor.notifyAll();
                }
            } catch (InterruptedException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
    }
}
</code></pre>

<p>output</p>

<pre><code>Thread-1 : 1 ,
Thread-2 : 2 ,
Thread-3 : 3 ,
Thread-4 : 4 ,
Thread-5 : 5 ,
Thread-6 : 6 ,
Thread-7 : 7 ,
Thread-8 : 8 ,
Thread-9 : 9 ,
......
.....
...
Thread-4 : 94 ,
Thread-5 : 95 ,
Thread-6 : 96 ,
Thread-7 : 97 ,
Thread-8 : 98 ,
Thread-9 : 99 ,
Thread-0 : 100 ,
</code></pre>

<p>Documentation are intentionally left out for you to figure it out, there are minor bugs too! </p>
"
30028951,"<p>I have written one generic code which will take the number till where you want to print and the number of threads to be used.</p>

<pre><code>public class ThreadedPrinting {
    private Object locks[];

    private static class Printer extends Thread {
        int curVal;
        int endVal;
        Object myLock;
        Object nextLock;
        int step;

        public Printer(int startFrom, int endVal, int step, Object myLock, Object nextLock){
            this.curVal = startFrom;
            this.endVal = endVal;
            this.step = step;
            this.myLock = myLock;
            this.nextLock = nextLock;
            this.step = step;
        }

        @Override
        public void run(){
            synchronized(myLock) {
                while (curVal &lt;= endVal) {
                    try {
                        myLock.wait();
                        System.out.println(curVal);
                        curVal += step;
                    }
                    catch(InterruptedException e) {}
                    synchronized(nextLock) {
                        nextLock.notify();
                    }
                }
            }
            synchronized(nextLock) {
                nextLock.notify(); /// this ensures all worker threads exiting at the end
            }
        }
    } // Printer

    public ThreadedPrinting(int maxNum, int threads) {
        locks = new Object[threads];
        int i;
        for(i = 0; i &lt; threads; ++i) locks[i] = new Object();
        for(i = 0; i &lt; threads -1 ; ++i) {
            Printer curPrinter = new Printer(i, maxNum, threads, locks[i], locks[i+1]);
            curPrinter.start();
        }
        Printer lastPrinter = new Printer(i, maxNum, threads, locks[threads - 1], locks[0]);
        lastPrinter.start();
    }

    public void start() {
        synchronized (locks[0]) {
            locks[0].notify();
        }
    }

    public static void main(String[] args) {
        ThreadedPrinting printer = new ThreadedPrinting(1000,7);
        printer.start();
    }
}
</code></pre>

<p>The same problem can be solved by usign Phaser as well but the order is not restrictive but will be in round-robin fashion. I have provided the solution for similar problem <a href=""http://stackoverflow.com/questions/18314852/running-threads-in-round-robin-fashion-in-java/29934870#29934870"">here</a>.</p>
"
511057,"<blockquote>
  <p>Can you anyone help me in telling how
  to get output ""<code>Super Test</code>"" with the
  given sequences in <code>main</code>.</p>
</blockquote>

<ul>
<li><p>Don't overwrite <code>anotherMethod()</code> and <code>retValue()</code> in <code>Sub</code> in the first place.</p></li>
<li><p>In S<code>ub.anotherMethod()</code>, return <strong><code>super</code></strong><code>.retValue(s)</code> instead of <code>retValue(s)</code>.</p></li>
</ul>
"
513182,"<p>I think java does not have static interface methods because you do not need them. You may think you do, but...
How would you use them? If you want to call them like</p>

<pre><code>MyImplClass.myMethod()
</code></pre>

<p>then you do not need to declare it in the interface. If you want to call them like</p>

<pre><code>myInstance.myMethod()
</code></pre>

<p>then it should not be static.
If you are actually going to use first way, but just want to enforce each implementation to have such  static method, then it is really a coding convention, not a contract between instance that implements an interface and calling code.</p>

<p>Interfaces allow you to define contract between instance of class that implement the interface and calling code. And java helps you to be sure that this contract is not violated, so you can rely on it and don't worry what class implements this contract, just ""someone who signed a contract"" is enough. In case of static interfaces your code </p>

<pre><code>MyImplClass.myMethod()
</code></pre>

<p>does not rely on the fact that each interface implementation has this method, so you do not need java to help you to be sure with it.</p>
"
514519,"<p>Reference typed arguments are passed as references to objects themselves (not references  to other <em>variables</em> that refer to objects). You can call methods on the object that has been passed. However, in your code sample:</p>

<pre><code>public static void thisDoesntWork(String foo){
    foo = ""howdy"";
}
</code></pre>

<p>you are only storing a reference to the string <code>""howdy""</code> in a variable that is local to the method. That local variable (<code>foo</code>) was initialized to the value of the caller's <code>foo</code> when the method was called, but has no reference to the caller's variable itself. After initialization:</p>

<pre><code>caller     data     method
------    ------    ------
(foo) --&gt;   """"   &lt;-- (foo)
</code></pre>

<p>After the assignment in your method:</p>

<pre><code>caller     data     method
------    ------    ------
(foo) --&gt;   """"
          ""hello"" &lt;-- (foo)
</code></pre>

<p>You have another issues there: <code>String</code> instances are immutable (by design, for security) so you can't modify its value.</p>

<p>If you really want your method to provide an initial value for your string (or at <em>any</em> time in its life, for that matter), then have your method <em>return</em> a <code>String</code> value which you assign to the caller's variable at the point of the call. Something like this, for example:</p>

<pre><code>String foo = thisWorks();
System.out.println(foo);//this prints the value assigned to foo in initialization 

public static String thisWorks(){
    return ""howdy"";
}
</code></pre>
"
522859,"<p>What exactly are you trying to do? Are you always trying to go to two digits? Or are you always trying to fix things like 99999 at the end no matter what?</p>

<p>According to the comments, it is in fact the former: rounding to dollars and cents. So indeed just <code>round(100*a)/100</code> is what you want. (The latter would be much more complicated...) </p>

<p>Finally, if you just want to extract the cents part, the following would work:</p>

<pre><code>dollars_and_cents = round(100*a)/100
cents = (dollars_and_cents-(int)dollars_and_cents)*100
</code></pre>

<p>(or does java just have <code>frac</code>? In which case the last line would just be <code>frac(dollars_and_cents)*100</code>.</p>
"
522969,"<pre><code>int[] somenumbers = getAnArrayOfSomenumbers();
int numbertoLookFor = getTheNumberToLookFor();

boolean arrayContainsNumber = 
   new HashSet(Arrays.asList(somenumbers))
      .contains(numbertoLookfor);
</code></pre>

<p>It's fast, too.</p>

<p>Oh - you wanted to find the nearest number? In that case:</p>

<pre><code>int[] somenumbers = getAnArrayOfSomenumbers();
int numbertoLookFor = getTheNumberToLookFor();

ArrayList&lt;Integer&gt; l = new ArrayList&lt;Integer&gt;(
  Arrays.asList(somenumbers)
);
Collections.sort(l);
while(l.size()&gt;1) {
  if(numbertoolookfor &lt;= l.get((l.size()/2)-1)) {
    l = l.subList(0, l.size()/2);
  }
  else {
    l = l.subList(l.size()/2, l.size); 
  }
}

System.out.println(""nearest number is"" + l.get(0));
</code></pre>

<p>Oh - hang on: you were after a least squares solution?</p>

<pre><code>Collections.sort(l,  new Comparator&lt;Integer&gt;(){
  public int compare(Integer o1, Integer o2) {
    return (o1-numbertoLookFor)*(o1-numbertoLookFor) - 
           (o2-numbertoLookFor)*(o2-numbertoLookFor);
  }});

System.out.println(""nearest number is"" + l.get(0));
</code></pre>
"
523491,"<p>I suggest you use long for rounding a double value. It won't matter for small numbers but could make a difference.</p>

<pre><code>double d = 50.539999;
long cents = (long)(d * 100 + 0.5);
double rounded = cents/100;
</code></pre>
"
580026,"<p>It's been a while since I did any graphics in Swing, but I think the code you're looking for is something like:</p>

<pre><code>Graphics g = getGraphics();
if (g != null) paintComponent(g);
else repaint();
</code></pre>

<p>And as you noted, you'll need to add this code in a listener attached to the JPanel's scroll functions.</p>

<p>I would probably create a Canvas that would contain the entire drawing and put it inside a JScrollPane.  That will let Java do all the work!</p>
"
612307,"<p>I just consider this:</p>

<pre><code>instanceVar.staticMethod();
</code></pre>

<p>to be shorthand for this:</p>

<pre><code>instanceVar.getClass().staticMethod();
</code></pre>

<p>If you always had to do this:</p>

<pre><code>SomeClass.staticMethod();
</code></pre>

<p>then you wouldn't be able to leverage inheritance for static methods.</p>

<p>That is, by calling the static method via the instance you don't need to know what concrete class the instance is at compile time, only that it implements staticMethod() somewhere along the inheritance chain.</p>

<p>EDIT:  This answer is wrong.  See comments for details.</p>
"
660383,"<p>If the arrays are all the same length, then the following should help.</p>

<pre><code>Arrays.equals(myArray[0], {1,1,1})
</code></pre>

<p>Otherwise, write a function that loops through all the values in <code>myArray[0]</code>.</p>
"
692579,"<p>If you want to get current time, use <code>java.util.Date</code>.</p>
"
798743,"<p>I happen to really like this operator, but I never use it at work.</p>

<p>You always have to balance code compactness with the time spent reading it, and in that it has some pretty severe flaws.</p>

<p>First of all, there is the posters case.  He just spent an hour posting about it and reading the responses.  How longer would it have taken the author to write every ?: as an if/then throughout the course of his entire life.  Not an hour to be sure.</p>

<p>Secondly, in C-like languages, you get in the habit of simply knowing that conditionals are the first thing in the line.  I noticed this when I was using Ruby and came across lines like:</p>

<pre><code>callMethodWhatever(Long + Expression + with + syntax) if conditional
</code></pre>

<p>If I was a long time Ruby user I probably wouldn't have had a problem with this line, but coming from C, when you see ""callMethodWhatever"" as the first thing in the line, you expect it to be executed.  The ?: is less cryptic, but still unusual enough as to throw a reader off.</p>

<p>The advantage, however, is a really cool feeling in your tummy when you can write a 3-line if statement in the space of 1 of the lines.  Can't deny that :)  But honestly, not necessarily more readable by 90% of the people out there simply because of its' rarity. </p>
"
852669,"<p>If you want to convert a string to an integer use:</p>

<pre><code>int x = Integer.parseInt(aString);
</code></pre>
"
877959,"<p>Java's use of erasure to implement generics means that you're going to have trouble new'ing a generic type.</p>

<p>How about using null to represent 0</p>

<pre><code>retVal[i][j] = null;
</code></pre>

<p>You can then assign any type you want to the array later on.</p>
"
880589,"<p>you don't need. <code>int[]</code> is an object and can be used as a key inside a map.</p>

<pre><code>Map&lt;int[], Double&gt; frequencies = new HashMap&lt;int[], Double&gt;();
</code></pre>

<p>is the proper definition of the frequencies map.</p>

<p>This was wrong :-). The proper solution is posted too :-).</p>
"
963983,"<p>It's a very good question.
I usually use the not graceful:    </p>

<pre><code>if (object.getAttribute(""someAttr"") != null &amp;&amp; object.getAttribute(""someAttr"").equals(""true"")) { // ....
</code></pre>

<p>(and I will not use it anymore)</p>
"
1002203,"<p>A JAR file can function as an executable, when you export your project as a JAR file in Eclipse (as Michael Borgwardt pointed out) you can specify what's the executable class, that meaning which one has the entry point [aka <code>public static void main(String[] args)</code>]</p>

<p>If the user installed the JRE he/she can double-click it and the application would be executed.</p>

<p><strong><em>EDIT:</em></strong> For a detailed explanation of how this works, see the <a href=""http://stackoverflow.com/questions/804466/how-do-i-create-executable-java-program"">""How do I create executable Java program?""</a></p>
"
1012856,"<p>Perhaps this would work:</p>

<pre><code>Process process = Runtime.getRuntime().exec(""su jim &amp;&amp; ls ~bob"");

OutputStream standardInput = process.getOutputStream();
Writer standardInputWriter = new OutputStreamWriter(standardInput);
standardInputWriter.write(""password\n"");
standardInputWriter.close();
</code></pre>
"
1012901,"<p>I'm not sure this code:</p>

<pre><code>Process p = Runtime.getRuntime().exec(""su jim &amp;&amp; ls ~bob"");
</code></pre>

<p>will be executed in a shell, needed to evaluate the &amp;&amp;, that is a shell command (/bin/sh). You should pass the command ""ls ~bob"" via a command line swith of su. Something like:</p>

<pre><code>su jim -c 'ls ~bob'
</code></pre>
"
1074257,"<p>Have you tried <code>Math.floor()</code> ?</p>
"
1079168,"<p>As long as you're not leaving .NET realm, why not use the serialization mechanisms that .NET offers? It can easily serialize your object graphs (private fields included) to a binary blob and back again. There is also a built-in mechanism for serializing to and from XML, although that has some limitations when it comes to private fields and stuff (you can work around that though). There are also attributes that specify that some fields are newer and may not be in the serialized stream. You'll have to deal with them being NULL yourself, but then - you'd have to do that anyway.</p>

<p><strong>Added:</strong> Ah, yes, forgot to mention - I'm talking about <code>System.Runtime.Serialization.Formatters.Binary.BinaryFormatter</code> class.</p>
"
1131136,"<p>PDFs may contain binary data and chances are it's getting mangled when you do ToString.
It seems to me that you want this:</p>

<pre><code>        FileInputStream inputStream = new FileInputStream(sourcePath);

        int numberBytes = inputStream .available();
        byte bytearray[] = new byte[numberBytes];

        inputStream .read(bytearray);
</code></pre>
"
1164828,"<p>Simply run the Python interpreter as a subprocess from within Java.</p>

<p>Write your Python functionality as a proper script, which reads from stdin and writes to stdout.</p>

<p>Use the Java <code>Runtime</code> class to spawn a subprocess that runs your Python script.  This is very simple to do and provides a very clean interface.</p>

<p><hr /></p>

<p><strong>Edit</strong></p>

<pre><code>import simplejson
import sys
for request in sys.stdin.readlines():
    args = simplejson.loads( request )
    result = myFunction( args['this'], args['that'] )
    sys.stdout.writeline( simplejson.dumps( result ) + ""\n"" )
</code></pre>

<p>The interface is simple, structured and very low overhead.</p>
"
1310883,"<p>I'm good with Mnementh's recommentation. 
<br/>Just one caveat though, </p>

<pre><code> ConcurrentModificationException
</code></pre>

<p>Mind that you don't have more than one thread running. This exception could appear if more than one thread executes, and the threads are not well synchronized. </p>
"
1384989,"<p>Here is my platform specific code(unix)</p>

<pre><code>public static List&lt;File&gt; findFiles(String dir, String... names)
	{
		LinkedList&lt;String&gt; command = new LinkedList&lt;String&gt;();
		command.add(""/usr/bin/find"");
		command.add(dir);
		List&lt;File&gt; result = new LinkedList&lt;File&gt;();
		if (names.length &gt; 1)
			{
				List&lt;String&gt; newNames = new LinkedList&lt;String&gt;(Arrays.asList(names));
				String first = newNames.remove(0);
				command.add(""-name"");
				command.add(first);
				for (String newName : newNames)
					{
						command.add(""-or"");
						command.add(""-name"");
						command.add(newName);
					}
			}
		else if (names.length &gt; 0)
			{
				command.add(""-name"");
				command.add(names[0]);
			}
		try
			{
				ProcessBuilder pb = new ProcessBuilder(command);
				Process p = pb.start();
				p.waitFor();
				InputStream is = p.getInputStream();
				InputStreamReader isr = new InputStreamReader(is);
				BufferedReader br = new BufferedReader(isr);
				String line;
				while ((line = br.readLine()) != null)
					{
						// System.err.println(line);
						result.add(new File(line));
					}
				p.destroy();
			}
		catch (Exception e)
			{
				e.printStackTrace();
			}
		return result;
	}
</code></pre>
"
1435617,"<p>may be you could do your calculation with <a href=""http://java.sun.com/javase/6/docs/api/java/math/BigInteger.html"" rel=""nofollow"">java.math.BigInteger</a> and compare the result with </p>

<pre><code>new java.math.BigInteger(String.valueOf(Long.MAX_VALUE))
</code></pre>
"
1623551,"<p>exactly. for AlertDialog, that was created w/ <code>Builder.create()</code>, <code>onPrepareDialog()</code> is useless. Builder is one-way in that once the dialog is created, you can't update. i mean can't loosely, i am sure you could get a handle to the view and do it all manually, but that defeats the point of using the builder in the first place.</p>

<p>the only solution i found was to manually create / show / dismiss the dialog instead of using <code>onCreateDialog()</code>, <code>showDialog()</code>, etc. i tried calling <code>removeDialog()</code>, but that did not seem to work.</p>
"
3212872,"<p>simple mvc</p>

<pre><code> package app.controllers;
    import mvc.*;
    class mycontroller implements Controller {
        public View Controller() {
            return new View(""myview"");
        }
    }
</code></pre>

<p><a href=""http://www.webmahsulleri.com/yazilim-mimarileri/tasarim-kaliplari/simple-mvc-ile-java-uzerinde-mvc-uygulamalari/"" rel=""nofollow"">http://www.webmahsulleri.com/yazilim-mimarileri/tasarim-kaliplari/simple-mvc-ile-java-uzerinde-mvc-uygulamalari/</a></p>
"
3450728,"<p>Try this</p>

<p><code>
Integer a = Integer.valueOf(""10"");<br>
Integer b = Integer.valueOf(""10"");<br>
if (a.equals(b)) {<br>
    System.out.println(""Equals"");<br>
} else {<br>
    System.out.println(""Not Equals"");<br>
}<br>
if (a == b) {<br>
    System.out.println(""a == b"");<br>
} else {<br>
    System.out.println(""a != b"");<br>
}<br>
</code></p>

<p>If you run this example; the result is </p>

<p><code>
Equals<br>
a != b
</code></p>

<p>So Integer.valueOf() does not return the same object.</p>

<p>Even tools like PMD, findBugs recommend using .valueOf()</p>
"
4043019,"<p>If you modify your list, then use <a href=""http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html#listIterator()"" rel=""nofollow""><code>listIterator()</code></a> and iterate from last index (that is <code>size()-1</code> respectively).
If you fail again, check your list structure.</p>
"
4698092,"<p>I've created a new project to help construct HTTP URLs. The library will automatically URL encode path segments and query parameters.</p>

<p>You can view the source and download a binary at <a href=""https://github.com/Widen/urlbuilder"" rel=""nofollow"">https://github.com/Widen/urlbuilder</a></p>

<p>The example URL in this question:</p>

<pre><code>new UrlBuilder(""search.barnesandnoble.com"", ""booksearch/first book.pdf"").toString()
</code></pre>

<p>produces</p>

<p><code>http://search.barnesandnoble.com/booksearch/first%20book.pdf</code></p>
"
6204945,"<p><strong>I am answering the question you WANT the answer to, not the one you asked.  Your real question is ""how can I make this go faster?"" and the answer is ""handle the integers an array at a time, and not singly.""</strong></p>

<p>If the bottleneck is truly the ByteBuffer.getInt() or ByteBuffer.getInt(location), then you do not need to extend the class, you can use the pre-existing IntBuffer class to grab data in bulk for more efficient processing.</p>

<pre><code>int totalLength = numberOfIntsInBuffer;
ByteBuffer myBuffer = whateverMyBufferIsCalled;
int[] block = new int[1024];
IntBuffer intBuff = myBuffer.asIntBuffer();
int partialLength = totalLength/1024;

//Handle big blocks of 1024 ints at a time
try{
  for (int i = 0; i &lt; partialLength; i++) {
     intBuff.get(block);
     // Do processing on ints, w00t!
  }

  partialLength = totalLength % 1024; //modulo to get remainder
  if (partialLength &gt; 0) {
    intBuff.get(block,0,partialLength);
    //Do final processing on ints
  }
} catch BufferUnderFlowException bufo {
   //well, dang!
}
</code></pre>

<p>This is MUCH, MUCH faster than getting an int at a time.  Iterating over the int[] array, which has set and known-good bounds, will also let your code JIT much tighter by eliminating bounds checks and the exceptions ByteBuffer can throw.</p>

<p>If you need further performance, you can tweak the code, or roll your own size-optimized  byte[] to int[] conversion code. I was able to get some performance improvement using that in place of the IntBuffer methods with partial loop unrolling... but it's not suggested by any means.</p>
"
6434061,"<p>I believe <code>replaceAll()</code> is an expensive operation. The below solution will probably perform better:</p>

<pre><code>String temp = ""Hi \n Wssup??"";          
System.out.println(temp);

StringBuilder result = new StringBuilder();

StringTokenizer t = new StringTokenizer(temp, ""\n"");

while (t.hasMoreTokens()) {
    result.append(t.nextToken().trim()).append("""");
}
String result_of_temp = result.toString();

System.out.println(result_of_temp);
</code></pre>
"
7421850,"<pre><code>Integer[] arr = (Integer[]) x.toArray(new Integer[x.size()]);
</code></pre>

<p>access <code>arr</code> like normal <code>int[]</code>.</p>
"
7657874,"<pre><code>String s=""praveen"";
boolean p=s.contains(""s"");
if(p)
    System.out.println(""string contains the char 's'"");
else
    System.out.println(""string does not contains the char 's'"");
</code></pre>

<h2>Output</h2>

<pre><code>string does not contains the char 's'
</code></pre>
"
8151123,"<p>And I got a idea but not so good.*<em>This is used when the users don't use the dialog quite frequently!</em>*The solution :first,you should declare a variable (int type) and make the default value as 0.such as <code>private int i=0;</code>
and before you use the showDialog methods of Activity,increase the int variable i and post the value i as the parameter as showDialog method.
the code may like this</p>

<pre><code>private int i=0;

//before you show the dialog
this.i++;
this.showDialog(this.i);
</code></pre>
"
8813908,"<p>//this is only the main... you can use wither buffered reader or scanner </p>

<pre><code>string s;
int l=s.length();
int f=0;
for(int i=0;i&lt;l;i++)
   {
      char ch1=s.charAt(i); 
      for(int j=0;j&lt;l;j++)
         {
          char ch2=charAt(j);
          if(ch1==ch2)
           {
             f=f+1;
             s.replace(ch2,'');
           }
          f=0;
          }
     }
//if replacing with null does not work then make it space by using ' ' and add a if condition on top.. checking if its space if not then only perform the inner loop... 
</code></pre>
"
9780181,"<p>How about:</p>

<p>public String UrlEncode(String in_) {</p>

<pre><code>String retVal = """";

try {
    retVal = URLEncoder.encode(in_, ""UTF8"");
} catch (UnsupportedEncodingException ex) {
    Log.get().exception(Log.Level.Error, ""urlEncode "", ex);
}

return retVal;
</code></pre>

<p>}</p>
"
9856230,"<p>133 characters :-)</p>

<pre><code>class F {

    public static void main(String[] z) {

        l:
        for (int a=1,b; a &lt; z; a += 2) {

            for (b = 2; b &lt; a; b++)
                if (a % b == 0) 
                    continue l;
            System.out.println(a);
        }
    }
}
</code></pre>
"
10696096,"<pre><code>static String removeOccurences(String a, String b)
{
    StringBuilder s2 = new StringBuilder(a);

    for(int i=0;i&lt;b.length();i++){
        char ch = b.charAt(i);  
        System.out.println(ch+""  first index""+a.indexOf(ch));

        int lastind = a.lastIndexOf(ch);

    for(int k=new String(s2).indexOf(ch);k &gt; 0;k=new String(s2).indexOf(ch)){
            if(s2.charAt(k) == ch){
                s2.deleteCharAt(k);
        System.out.println(""val of s2 :             ""+s2.toString());
            }
        }
      }

    System.out.println(s1.toString());

    return (s1.toString());
}
</code></pre>
"
11080761,"<p>this is already-answered question is one of the best sources you come up after a google search. So i want to place my advice for avoiding this trouble.</p>

<p><code>0000-00-00 00:00:00</code> is the value that mySql places when you choose <code>None</code> as default value for your <code>DATETIME</code> column . So , if you avoid choosing this value while creating or altering your table , there's no way you can have this value in that column afterwards.</p>
"
11250193,"<p>There is exactly <strong>no difference</strong> between the two, though according to the Java standards, the convention for making an array is:</p>

<pre><code>String[] args
</code></pre>

<p>rather than,</p>

<pre><code>String args[]
</code></pre>

<p>and equally valid form using the ellipses as well (only for infinite array):</p>

<pre><code>String...args
</code></pre>

<p>A brief overview of the <strong>psvm()</strong> in Java:</p>

<p><strong>public</strong>: the method can be accessed anywhere within the class or outside the class or even outside the package.</p>

<p><strong>static</strong>: the method is shared by all the objects and it does not need any objects to be created to call this method.</p>

<p><strong>void</strong>: this particular main() method cannot return any value so here we have to use void; it is the syntax which need to be followed.</p>

<p><strong>main()</strong>: this is the entry point of the code or the class you execute. In most cases, this is also the exit point of the code.</p>

<p><strong>String[]args</strong>: these are <strong>run-time commands line arguments</strong>, whether you pass them or not you have to mention them in the arguments.</p>
"
12085359,"<p>Did you try</p>

<pre><code>string.trim(); 
</code></pre>

<p>This is meant to trim all leading and leaning while spaces in the string. Hope this helps.</p>

<p>Edit: (I was not explicit enough)</p>

<p>So, when you string.split(), you will have a string[] - for each of the strings in the array, do a string.trim() and then append it.</p>

<pre><code>String[] tokens = yourString.split("" "");
StringBuffer buff = new StringBuffer();
for (String token : tokens)
{
  buff.append(token.trim());
}
</code></pre>

<p>Use stringBuffer/Builder instead of appending in the same string.</p>
"
12468499,"<p>Every enum has name(), which gives a string with the name of enum member.</p>

<p>Given <code>enum Suit{Heart, Spade, Club, Diamond}</code>, <code>Suit.Heart.name()</code> will give <code>Heart</code>.</p>

<p>Every enum has a <code>valueOf()</code> method, which takes an enum type and a string, to perform the reverse operation:</p>

<p><code>Enum.valueOf(Suit.class, ""Heart"")</code> returns <code>Suit.Heart</code>.</p>

<p>Why anyone would use ordinals is beyond me. It may be nanoseconds faster, but it is not safe, if the enum members change, as another developer may not be aware some code is relying on ordinal values (especially in the JSP page cited in the question, network and database overhead completely dominates the time, not using an integer over a string).</p>
"
14300232,"<p>Try the code below. Using core Java basic functions. It takes care of <code>String</code>s with extension, and without extension (without the <code>'.'</code> character). The case of multiple <code>'.'</code> is also covered.</p>

<pre><code>String str = ""filename.xml"";
if (!str.contains(""."")) 
    System.out.println(""File Name="" + str); 
else {
    str = str.substring(0, str.lastIndexOf("".""));
    // Because extension is always after the last '.'
    System.out.println(""File Name="" + str);
}
</code></pre>

<p>You can adapt it to work with <code>null</code> strings.</p>
"
15714884,"<p>Probably the SIMPLEST method is this:</p>

<pre><code>setBackground(Color.CYAN);
</code></pre>

<p>You must extend JFrame in the class before doing this!</p>
"
16144292,"<p>Note that it would also be possible to use a global binding 
to replace the XMLGregorianCalendars with something sane^ ^ ^ ^ else, like a suitable Jodatime data type.</p>

<p>See here: 
<a href=""http://stackoverflow.com/questions/11109608/how-replace-xmlgregoriancalendar-by-date"">how replace XmlGregorianCalendar by Date?</a></p>

<p>Oh, and I found something that I did once: I think it still works...</p>

<pre><code>&lt;jxb:globalBindings&gt;
    &lt;jxb:javaType name=""org.joda.time.LocalDateTime"" xmlType=""xs:dateTime""
        parseMethod=""test.util.JaxbConverter.parseDateTime""
        printMethod=""se.seb.bis.test.util.JaxbConverter.printDateTime"" /&gt;
    &lt;jxb:javaType name=""org.joda.time.LocalDate"" xmlType=""xs:date""
        parseMethod=""test.util.JaxbConverter.parseDate""
        printMethod=""test.util.JaxbConverter.printDate"" /&gt;
    &lt;jxb:javaType name=""org.joda.time.LocalTime"" xmlType=""xs:time""
        parseMethod=""test.util.JaxbConverter.parseTime""
        printMethod=""test.util.JaxbConverter.printTime"" /&gt;
    &lt;jxb:serializable uid=""2"" /&gt;
&lt;/jxb:globalBindings&gt;
</code></pre>

<p>And the converter:</p>

<pre><code>public class JaxbConverter {
static final DateTimeFormatter dtf = ISODateTimeFormat.dateTimeNoMillis();
static final DateTimeFormatter df = ISODateTimeFormat.date();
static final DateTimeFormatter tf = ISODateTimeFormat.time();

public static LocalDateTime parseDateTime(String s) {
    try {
        if (StringUtils.trimToEmpty(s).isEmpty())
            return null;
        LocalDateTime r = dtf.parseLocalDateTime(s);
        return r;
    } catch (Exception e) {
        throw new IllegalArgumentException(e);
    }
}

public static String printDateTime(LocalDateTime d) {
    try {
        if (d == null)
            return null;
        return dtf.print(d);
    } catch (Exception e) {
        throw new IllegalArgumentException(e);
    }
}

public static LocalDate parseDate(String s) {
    try {
        if (StringUtils.trimToEmpty(s).isEmpty())
            return null;
        return df.parseLocalDate(s);
    } catch (Exception e) {
        throw new IllegalArgumentException(e);
    }
}

public static String printDate(LocalDate d) {
    try {
        if (d == null)
            return null;
        return df.print(d);
    } catch (Exception e) {
        throw new IllegalArgumentException(e);
    }
}

public static String printTime(LocalTime d) {
    try {
        if (d == null)
            return null;
        return tf.print(d);
    } catch (Exception e) {
        throw new IllegalArgumentException(e);
    }
}

public static LocalTime parseTime(String s) {
    try {
        if (StringUtils.trimToEmpty(s).isEmpty())
            return null;
        return df.parseLocalTime(s);
    } catch (Exception e) {
        throw new IllegalArgumentException(e);
    }
}
</code></pre>
"
16336520,"<pre><code>   List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();

    list.add(1);
    list.add(2);

    int[] result = null;
    StringBuffer strBuffer = new StringBuffer();
    for (Object o : list) {
        strBuffer.append(o);
        result = new int[] { Integer.parseInt(strBuffer.toString()) };
        for (Integer i : result) {
            System.out.println(i);
        }
        strBuffer.delete(0, strBuffer.length());
    }
</code></pre>
"
18220374,"<pre><code>    frame.getContentPane().setBackground(Color.white);
</code></pre>
"
21451778,"<p>How about this function:</p>

<pre><code>public static String toString(final Collection&lt;?&gt; collection) {
    final StringBuilder sb = new StringBuilder(""{"");
    boolean isFirst = true;
    for (final Object object : collection) {
        if (!isFirst)
            sb.append(',');
        else
            isFirst = false;
        sb.append(object);
    }
    sb.append('}');
    return sb.toString();
}
</code></pre>

<p>it works for any type of collection...</p>
"
22483048,"<p>I develop a library that serves this purpose: <a href=""https://github.com/smola/galimatias"" rel=""nofollow"">galimatias</a>. It parses URL the same way web browsers do. That is, if a URL works in a browser, it will be correctly parsed by <a href=""https://github.com/smola/galimatias"" rel=""nofollow"">galimatias</a>.</p>

<p>In this case:</p>

<pre class=""lang-java prettyprint-override""><code>// Parse
io.mola.galimatias.URL.parse(
    ""http://search.barnesandnoble.com/booksearch/first book.pdf""
).toString()
</code></pre>

<p>Will give you: <code>http://search.barnesandnoble.com/booksearch/first%20book.pdf</code>. Of course this is the simplest case, but it'll work with anything, way beyond <code>java.net.URI</code>.</p>

<p>You can check it out at: <a href=""https://github.com/smola/galimatias"" rel=""nofollow"">https://github.com/smola/galimatias</a></p>
"
25456825,"<p>You can use a function like this. Complete and modify it to your need :</p>

<pre><code>/**
     * Encode URL (except :, /, ?, &amp;, =, ... characters)
     * @param url to encode
     * @param encodingCharset url encoding charset
     * @return encoded URL
     * @throws UnsupportedEncodingException
     */
    public static String encodeUrl (String url, String encodingCharset) throws UnsupportedEncodingException{
            return new URLCodec().encode(url, encodingCharset).replace(""%3A"", "":"").replace(""%2F"", ""/"").replace(""%3F"", ""?"").replace(""%3D"", ""="").replace(""%26"", ""&amp;"");
    }
</code></pre>

<p>Example of use :</p>

<pre><code>String urlToEncode = """"http://www.growup.com/folder/intérieur-à_vendre?o=4"";
Utils.encodeUrl (urlToEncode , ""UTF-8"")
</code></pre>

<p>The result is : <a href=""http://www.growup.com/folder/int%C3%A9rieur-%C3%A0_vendre?o=4"" rel=""nofollow"">http://www.growup.com/folder/int%C3%A9rieur-%C3%A0_vendre?o=4</a></p>
"
27373282,"<p>It's because you have open a session maybe for get data and then you forget to close it.
When you delete you open session again then it becomes error.</p>

<p>SOLUTION: 
every function should open and close session</p>

<p><code>session.getTransaction.begin();
/* your operation */
session.close()</code></p>
"
28274148,"<p>In my model object class i ha defined the annotations like this </p>

<pre><code>@Entity
@Table(name = ""user_details"")
public class UserDetails {  
    @GeneratedValue
    private int userId;
    private String userName;

    public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }   

    @Id
    public int getUserId() {
        return userId;
    }

    public void setUserId(int userId) {
        this.userId = userId;
    }
}
</code></pre>

<p>the issue resolved when I writing the both @Id and @GenerateValue annotation together @ the variable declaration.</p>

<pre><code>@Entity
@Table(name = ""user_details"")
public class UserDetails {
    @Id
    @GeneratedValue
    private int userId;
    private String userName;

    public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }   

    public int getUserId() {
        return userId;
    }
...
}
</code></pre>

<p>Hope this is helpful</p>
"
28821405,"<p>I have made a class earlier for an Android Application you might find it useful </p>

<pre><code>package com.amit.parking.parking.Analytics;

import android.widget.EditText;

import java.util.ArrayList;

/**
 * Created by Android Developer on 3/1/2015.
 */
public class EmailValidator {

private static String email;
private static int count = 0;


private static final Character [] alphabeticSmall = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
private static final Character [] alphabeticLarge = {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'};
private static final Character [] forbiddenSymbols = {
        '\'','^','[',',','!','#','$','%','&amp;','*','+','/','=',
        '?','`','{','|','}','~',']','(',')',':','\\',' ','÷'
        ,'×','؛','&lt;','&gt;','|',';','""','₩','¥','£','€','`','°'
        ,'•','○','●','□','■','♤','♡','♢','♧','☆','¤','《',
        '》','¡','¿'
};

private String[] validEnds = {""ac"", ""ad"", ""ae"", ""aero"", ""af"", ""ag"", ""ai"",
        ""al"", ""am"", ""an"", ""ao"", ""aq"", ""ar"", ""arpa"", ""as"", ""asia"", ""at"", ""au"",
        ""aw"", ""ax"", ""az"", ""ba"", ""bb"", ""bd"", ""be"", ""bf"", ""bg"", ""bh"", ""bi"", ""biz"",
        ""bj"", ""bm"", ""bn"", ""bo"", ""br"", ""bs"", ""bt"", ""bv"", ""bw"", ""by"", ""bz"", ""ca"",
        ""cat"", ""cc"", ""cd"", ""cf"", ""cg"", ""ch"", ""ci"", ""ck"", ""cl"", ""cm"", ""cn"", ""co"",
        ""com"", ""coop"", ""cr"", ""cu"", ""cv"", ""cx"", ""cy"", ""cz"", ""de"", ""dj"", ""dk"",
        ""dm"", ""do"", ""dz"", ""ec"", ""edu"", ""ee"", ""eg"", ""er"", ""es"", ""et"", ""eu"", ""fi"",
        ""fj"", ""fk"", ""fm"", ""fo"", ""fr"", ""ga"", ""gb"", ""gd"", ""ge"", ""gf"", ""gg"", ""gh"",
        ""gi"", ""gl"", ""gm"", ""gn"", ""gov"", ""gp"", ""gq"", ""gr"", ""gs"", ""gt"", ""gu"", ""gw"",
        ""gy"", ""hk"", ""hm"", ""hn"", ""hr"", ""ht"", ""hu"", ""id"", ""ie"", ""il"", ""im"", ""in"",
        ""info"", ""int"", ""io"", ""iq"", ""ir"", ""is"", ""it"", ""je"", ""jm"", ""jo"", ""jobs"",
        ""jp"", ""ke"", ""kg"", ""kh"", ""ki"", ""km"", ""kn"", ""kp"", ""kr"", ""kw"", ""ky"", ""kz"",
        ""la"", ""lb"", ""lc"", ""li"", ""lk"", ""lr"", ""ls"", ""lt"", ""lu"", ""lv"", ""ly"", ""ma"",
        ""mc"", ""md"", ""me"", ""mg"", ""mh"", ""mil"", ""mk"", ""ml"", ""mm"", ""mn"", ""mo"",
        ""mobi"", ""mp"", ""mq"", ""mr"", ""ms"", ""mt"", ""mu"", ""museum"", ""mv"", ""mw"", ""mx"",
        ""my"", ""mz"", ""na"", ""name"", ""nc"", ""ne"", ""net"", ""nf"", ""ng"", ""ni"", ""nl"",
        ""no"", ""np"", ""nr"", ""nu"", ""nz"", ""om"", ""org"", ""pa"", ""pe"", ""pf"", ""pg"", ""ph"",
        ""pk"", ""pl"", ""pm"", ""pn"", ""pr"", ""pro"", ""ps"", ""pt"", ""pw"", ""py"", ""qa"", ""re"",
        ""ro"", ""rs"", ""ru"", ""rw"", ""sa"", ""sb"", ""sc"", ""sd"", ""se"", ""sg"", ""sh"", ""si"",
        ""sj"", ""sk"", ""sl"", ""sm"", ""sn"", ""so"", ""sr"", ""st"", ""su"", ""sv"", ""sy"", ""sz"",
        ""tc"", ""td"", ""tel"", ""tf"", ""tg"", ""th"", ""tj"", ""tk"", ""tl"", ""tm"", ""tn"", ""to"",
        ""tp"", ""tr"", ""travel"", ""tt"", ""tv"", ""tw"", ""tz"", ""ua"", ""ug"", ""uk"", ""um"",
        ""us"", ""uy"", ""uz"", ""va"", ""vc"", ""ve"", ""vg"", ""vi"", ""vn"", ""vu"", ""wf"", ""ws"",
        ""ye"", ""yt"", ""yu"", ""za"", ""zm"", ""zw""};

private static ArrayList&lt;Character&gt; correctSmallLetters;
private static ArrayList&lt;Character&gt; correctLargeLetters;
private static ArrayList&lt;Character&gt; forbiddenSymbolsArray;

private static CharSequence cleanText = """";
private static CharSequence [] cleanTextToArray;

private static int dynamicArraySize = 1;
private static Character [] dynamicArray;

public EmailValidator(String email){
    this.email = email;
    correctSmallLetters = new ArrayList&lt;&gt;();
    correctLargeLetters = new ArrayList&lt;&gt;();
    forbiddenSymbolsArray = new ArrayList&lt;&gt;();
}

public static boolean isEmailCharactersValidated(){
        if(equalsGetSmallLetters() || equalsGetLargeLetters()){
            return true;
        }
        return false;
}

private static boolean equalsGetSmallLetters() {
    count = 0;
    while(count &lt; email.length()) {
        for (int smallLetterIndex = 0; smallLetterIndex &lt; alphabeticSmall.length; smallLetterIndex++) {

            if(email.charAt(count) == alphabeticSmall[smallLetterIndex]){
                correctSmallLetters.add(email.charAt(count));
            }
        }
        count++;
    }
    count = 0;
    return correctSmallLetters.size() &gt; 0;
}

private static boolean equalsGetLargeLetters() {
    count = 0;
    while(count &lt; email.length()) {
        for (int largeLetterIndex = 0; largeLetterIndex &lt; alphabeticLarge.length; largeLetterIndex++) {

            if(email.charAt(count) == alphabeticLarge[largeLetterIndex]){
                correctLargeLetters.add(email.charAt(count));
            }
        }
        count++;
    }
    count = 0;
    return correctLargeLetters.size() &gt; 0;
}

public static boolean isEmailHasForbiddenSymbols(){
    count = 0;
    while(count &lt; email.length()) {
        for (int symbolIndex = 0; symbolIndex &lt; forbiddenSymbols.length; symbolIndex++) {

            if(email.charAt(count) == forbiddenSymbols[symbolIndex]){
                forbiddenSymbolsArray.add(email.charAt(count));
                //addToTheDynamicArray(email.charAt(count));
            }

        }
        count++;
    }
    count = 0;

    return forbiddenSymbolsArray.size() &gt; 0;
}

/* THIS IS JUST A TEST METHOD... */
private static void addToTheDynamicArray(Character c){

    dynamicArray = new Character[dynamicArraySize];

    if (dynamicArray.length == 1) {
        dynamicArray[dynamicArraySize -1] = c;
        dynamicArraySize++;
    } else {
        dynamicArray = new Character[dynamicArraySize];
        dynamicArray[dynamicArraySize -1] = c;
        dynamicArraySize++;
    }
}

public static void removeForbiddenSymbols(EditText etEmail){

    try {
        count = 0;
        while (count &lt; etEmail.getText().toString().length()) {
            for (int symbolIndex = 0; symbolIndex &lt; forbiddenSymbols.length; symbolIndex++) {

                if (etEmail.getText().toString().charAt(count) == forbiddenSymbols[symbolIndex]) {
                    etEmail.setText(etEmail.getText().toString().replace(String.valueOf(etEmail.getText().toString().charAt(count)), """"));
                }
            }
            count++;
        }
        count = 0;
    }catch (Exception ignored) { }
}

public boolean isEmailCorrect() {return checkForAts() &amp;&amp; checkForDots();}

private boolean checkForAts() {
    int atsCount = 0;
    ArrayList&lt;Character&gt; ats = new ArrayList&lt;&gt;();

    while(atsCount &lt; email.length()){
        if(email.charAt(atsCount) == '@'){
            ats.add(email.charAt(atsCount));
        }
        atsCount++;
    }

    return ats.size() == 1;
}

public boolean isEmailHasValidEnd(){
    int validEndsCount = 0;
    int emailCharsCount = 0;
    while (emailCharsCount &lt; email.length()){

        while(validEndsCount &lt; validEnds.length){


            if(email.endsWith(validEnds[validEndsCount]))
                return true;

            validEndsCount++;
        }

        emailCharsCount++;
    }


    return false;
}

private boolean checkForDots() {
    int dotsCount = 0;
    ArrayList&lt;Character&gt; dots = new ArrayList&lt;&gt;();

    while(dotsCount &lt; email.length()){
        if(email.charAt(dotsCount) == '.'){
            dots.add(email.charAt(dotsCount));
        }
        dotsCount++;
    }

    return dots.size() == 1;
}

public boolean isValidEmailAddress(String email) {
    String ePattern = ""^[a-zA-Z0-9.!#$%&amp;'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$"";
    java.util.regex.Pattern p = java.util.regex.Pattern.compile(ePattern);
    java.util.regex.Matcher m = p.matcher(email);
    return m.matches();
}
</code></pre>

<p>}</p>
"
545065,"<p>I don't know any debugging methods, but I use vim whenever I'm programming - no matter what language. Using Makefiles and binding make commands to some function keys was a big help to me. Some examples:</p>

<pre><code>:map &lt;F12&gt;     :make&lt;CR&gt;:cclose&lt;CR&gt;:copen&lt;CR&gt;
:map &lt;S-F12&gt;   :make debug&lt;CR&gt;:cclose&lt;CR&gt;
:map &lt;C-F12&gt;   :make exec&lt;CR&gt;:cclose&lt;CR&gt;
:map &lt;C-S-F12&gt; :make clean&lt;CR&gt;
</code></pre>
"
550127,"<p>You do not use UTF-8 to encode text data for HTML forms. The html standard defines two encodings, and <a href=""http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.2"" rel=""nofollow"">the relevant part of that standard is here</a>. The ""old"" encoding, than handles ascii, is application/x-www-form-urlencoded. The new one, that works properly, is multipart/form-data.</p>

<p>Specifically, the form declaration looks like this:</p>

<pre><code> &lt;FORM action=""http://server.com/cgi/handle""
       enctype=""multipart/form-data""
       method=""post""&gt;
   &lt;P&gt;
   What is your name? &lt;INPUT type=""text"" name=""submit-name""&gt;&lt;BR&gt;
   What files are you sending? &lt;INPUT type=""file"" name=""files""&gt;&lt;BR&gt;
   &lt;INPUT type=""submit"" value=""Send""&gt; &lt;INPUT type=""reset""&gt;
 &lt;/FORM&gt;
</code></pre>

<p>And I think that's all you have to worry about - the webserver should handle it. If you are writing something that directly reads the InputStream from the web client, then you will need to read <a href=""http://www.ietf.org/rfc/rfc2045.txt"" rel=""nofollow"">RFC 2045</a> and <a href=""http://www.ietf.org/rfc/rfc2046.txt"" rel=""nofollow"">RFC 2046</a>.</p>
"
605844,"<pre><code>import java.io.*;

import java.net.*;

public class ConvertURLToFileName{


   public static void main(String[] args)throws IOException{
   BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
   System.out.print(""Please enter the URL : "");

   String str = in.readLine();


   try{

     URL url = new URL(str);

     System.out.println(""File : ""+ url.getFile());
     System.out.println(""Converting process Successfully"");

   }  
   catch (MalformedURLException me){

      System.out.println(""Converting process error"");

 }
</code></pre>

<p>I hope this will help you. </p>
"
642564,"<p>Create a static method in your class which will return an array of declared methods and do the correct handling of exceptions.</p>

<pre><code>private static Method[] declaredMethods(Class&lt;T&gt; clazz, String methodName) {
  Method[] result = new Method[1];
  try{
    result[0] = clazz.getDeclaredMethod(methodName);
  } catch (NoSuchMethodException nsme) {
    // respond to the error
  } catch (SecurityException se)  {
    // Respond to the error
  }

  return result;
}

Method[] actions = declaredMethods(""count"");
</code></pre>
"
663766,"<p>Please see what the update-alternatives command does (it has a nice man...).</p>

<p>Shortly - what happens when you have java-sun-1.4 and java-opensouce-1.0 ... which one takes ""java""? It debian ""/usr/bin/java"" is symbolic link and ""/usr/bin/java-sun-1.4"" is an alternative to ""/usr/bin/java""</p>

<p>Edit:
As Richard said, <code>update-alternatives</code> is not enough. You actually need to use <code>update-java-alternatives</code>. More info at:</p>

<p><a href=""https://help.ubuntu.com/community/Java"" rel=""nofollow"">https://help.ubuntu.com/community/Java</a></p>
"
791406,"<p>I guess you don't get many of these question with C#. You need to understand what the exception is and deal with it appropriately (which is usually to let it go further up the stack).</p>

<p><code>InterruptedException</code> - Thrown when a thread is interrupted (by <code>Thread.interrupt</code>) when waiting (roughly). Why would you want a thread to be interrupted? Usually you want the thread to stop what it's doing - reset the interrupt state and exit. For instance, the PlugIn will interrupt applet threads if they continue for much longer after an applet should be gone. However, in this case provided <code>done</code> is called correctly you shouldn't be waiting at all. Therefore, it would be appropriate to wrap the exception in an <code>IllegalStateException</code> (and the API docs should probably state that). It's a really bad API. The <code>publish</code>/<code>process</code> mode probably makes more sense.</p>

<p><code>ExecutionException</code> - You need to deal with the wrapped exception. If you are not expecting a particular type of exception, wrap it in an unchecked exception.</p>

<p>Generally I would suggest a clear separation between what happens on the EDT and what happens off the EDT. Therefore, avoid <code>SwingWorker</code> in production code.</p>
"
825637,"<p>No, they aren't equal, they have different presentation in memory.</p>

<p>In general when you want to compare 2 floating point values you mustn't use == (and if so you can't operate with termin 'equals'). You should use comparison with epsilon.</p>

<pre><code>double eps = 0.0000001;
if (Math.abs (Java_PI - Another_Pi) &lt;= eps)
  System.out.println (""equals"");
</code></pre>
"
912745,"<pre><code>try getHibernateTemplate().saveOrUpdate()
</code></pre>
"
922536,"<p>Wouldn't this work?</p>

<pre><code>return ( ( Math.abs( size( root.left ) - size( root.right ) ) &lt; 2 );
</code></pre>

<p>Any unbalanced tree would always fail this.</p>
"
1074112,"<pre><code>Integer[] arr1 = {1,2,3};  
List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();  
list = Arrays.asList(arr1);  
</code></pre>

<p>Lists can be formed of only Objects and not primitives.</p>

<p>if you have an int array try converting it to Integer array and further to a list</p>

<p>[code format edited]</p>
"
1107802,"<p>Use a regex like <code>^\d</code></p>
"
1174708,"<p>I wrote this up real quick, I think it solves your problem accurately.  I used the BigInteger class to avoid that cast from double to integer, which <em>could</em> be causing you problems.  I tested it on several large numbers over 25, such as 101, which accurately returned 24 zeros.</p>

<p>The idea behind the method is that if you take 25! then the first calculation is 25 * 24 = 600, so you can knock two zeros off immediately and then do 6 * 23 = 138.  So it calculates the factorial removing zeros as it goes.</p>

<pre><code>public static int count(int number) {
	final BigInteger zero = new BigInteger(""0"");
	final BigInteger ten = new BigInteger(""10"");
	int zeroCount = 0;
	BigInteger mult = new BigInteger(""1"");
	while (number &gt; 0) {
		mult = mult.multiply(new BigInteger(Integer.toString(number)));
		while (mult.mod(ten).compareTo(zero) == 0){
			mult = mult.divide(ten);
			zeroCount += 1;
		}
		number -= 1;
	}
	return zeroCount;
}
</code></pre>

<p>Since you said you don't care about run time at all (not that my first was particularly efficient, just slightly more so)  this one just does the factorial and then counts the zeros, so it's cenceptually simpler:</p>

<pre><code>public static BigInteger factorial(int number) {
	BigInteger ans = new BigInteger(""1"");
	while (number &gt; 0) {
		ans = ans.multiply(new BigInteger(Integer.toString(number)));
		number -= 1;
	}
	return ans;
}

public static int countZeros(int number) {
	final BigInteger zero = new BigInteger(""0"");
	final BigInteger ten = new BigInteger(""10"");
	BigInteger fact = factorial(number);
	int zeroCount = 0;
	while (fact.mod(ten).compareTo(zero) == 0){
		fact = fact.divide(ten);
		zeroCount += 1;
	}
}
</code></pre>
"
1175098,"<p>My 2 cents: avoid to work with double since they are error-prone. <strong>A better datatype in this case is BigInteger</strong>, and here there is a small method that will help you:</p>

<pre><code>public class CountTrailingZeroes {

    public int countTrailingZeroes(double number) {
        return countTrailingZeroes(String.format(""%.0f"", number));
    }

    public int countTrailingZeroes(String number) {
        int c = 0;
        int i = number.length() - 1;

        while (number.charAt(i) == '0') {
            i--;
            c++;
        }

        return c;

    }

    @Test
    public void $128() {
        assertEquals(0, countTrailingZeroes(""128""));
    }

    @Test
    public void $120() {
        assertEquals(1, countTrailingZeroes(""120""));
    }

    @Test
    public void $1200() {
        assertEquals(2, countTrailingZeroes(""1200""));
    }

    @Test
    public void $12000() {
        assertEquals(3, countTrailingZeroes(""12000""));
    }

    @Test
    public void $120000() {
        assertEquals(4, countTrailingZeroes(""120000""));
    }

    @Test
    public void $102350000() {
        assertEquals(4, countTrailingZeroes(""102350000""));
    }

    @Test
    public void $1023500000() {
        assertEquals(5, countTrailingZeroes(1023500000.0));
    }
}
</code></pre>
"
1195231,"<p>Typedef allows items to be implicitly assigned to types they are not. Some people try to get around this with extensions; <a href=""http://www.ibm.com/developerworks/java/library/j-jtp02216/index.html"" rel=""nofollow"">read here at IBM for an explanation of why this is a bad idea.</a></p>

<p>Edit: While strong type inference is a useful thing, I don't think (and hope we won't) see <code>typedef</code> rearing it's ugly head in managed languages (ever?).</p>

<p>Edit 2: In C#, you can use a using statement like this at the top of a source file. It's used so you don't have to do the second item shown. The only time you see the name change is when a scope introduces a name collision between two types. The renaming is limited to one file, outside of which every variable/parameter type which used it is known by its full name.</p>

<pre><code>using Path = System.IO.Path;
using System.IO;
</code></pre>
"
1195236,"<p>You could use an Enum, although that's semantically a bit different than a typedef in that it only allows a restricted set of values. Another possible solution is a named wrapper class, e.g.</p>

<pre><code>public class Apple {
      public Apple(Integer i){this.i=i; }
}
</code></pre>

<p>but that seems way more clunky, especially given that it's not clear from the code that the class has no other function than as an alias. </p>
"
1235304,"<p>To reduce CPU, you want to sleep your threads inside of common <strong>if</strong> and <strong>while</strong> loops.</p>

<pre><code>while(whatever) {
    //do something
    //Note the capitol 'T' here, this sleeps the current thread.
    Thread.sleep(someNumberOfMilliSeconds);
}
</code></pre>

<p>Sleeping for a few hundred milliseconds will greatly reduce CPU usage with little to no noticeable result on performance.</p>

<p>As for the memory, I'd run a profiler on the individual threads and do some performance tuning. If you out throttled the amount of memory available to thread I think an out of memory exception or starved thread is likely. I would trust the JVM to provide as much memory as the thread needed and work on reducing the memory usage by keeping only essential objects in scope at any given time.</p>
"
1277959,"<p><strike>The buffered reader is overkill</strike></p>

<pre><code>Reader r = new FileReader(""f.txt"");

int count = 0;
int nextchar = 0;
while (nextchar != -1){
        nextchar = r.read();
		if (nextchar == Character.getNumericValue('\n') ){
			count++;
		}
	}
</code></pre>

<p>My search for a simple example has createde one thats actually quite poor. calling read() repeadedly for a single character is less than optimal. see <a href=""http://java.sun.com/developer/technicalArticles/Programming/PerfTuning/"" rel=""nofollow"">here</a> for examples and measurements.</p>
"
1370519,"<p>You could call</p>

<pre><code>removeHiddenImageReferences();
</code></pre>

<p>first.  Then you only need one try/catch.  There's no use optimizing, unless you KNOW removeHiddenImageReferences() is horribly slow (like if you're working with millions of objects).  Usually you can't do too much about running out of memory anyways.</p>
"
1385805,"<p>Are you really saying that you want callers to be able to modify the object's boolean value by manipulating what gets returned?   So that the object and caller would share a reference to it? </p>

<p>Just so I understand, given:</p>

<pre>
class OddClass {
   private Boolean strangeFlag;
   public Object getAttrbiute(String attributeName) { 
      if (attributeName.equals(""strangeflag"")) return (Object)strangeFlag; 
      ...
   }
}
</pre>

<p>And then caller does:</p>

<pre>
   Boolean manipulableFlag = (Boolean) myOddClass.getAttrbiute (""strangeflag"");
</pre>

<p>And then later, if caller changes the value of <code>manipulableFlag</code>, you want that change to happen in the OddClass instance, just as though caller had instead used a setAttrbiute method.</p>

<p>Is that what you're asking?</p>

<p>In that case, you'd need a holder class, as suggested by Adam.</p>
"
1516235,"<p>If you need to do anything more with office documents in Java, go for POI as mentioned.</p>

<p>For simple reading/writing an excel document like you requested, you can use the CSV format (also as mentioned):</p>

<pre><code>import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;

public class CsvWriter {
 public static void main(String args[]) throws IOException {

  String fileName = ""test.xls"";

  PrintWriter out = new PrintWriter(new FileWriter(fileName));
  out.println(""a,b,c,d"");
  out.println(""e,f,g,h"");
  out.println(""i,j,k,l"");
  out.close();

  BufferedReader in = new BufferedReader(new FileReader(fileName));
  String line = null;
  while ((line = in.readLine()) != null) {

   Scanner scanner = new Scanner(line);
   String sep = """";
   while (scanner.hasNext()) {
    System.out.println(sep + scanner.next());
    sep = "","";
   }
  }
  in.close();
 }
}
</code></pre>
"
1532616,"<p>For simple strings like that I prefer to use </p>

<pre><code>""string"".concat(""string"").concat(""string"");
</code></pre>

<p>In order, I would say the preferred method of constructing a string is using StringBuilder, String#concat(), then the overloaded + operator.  StringBuilder is a significant performance increase when working large strings just like using the + operator is a large decrease in performance (exponentially large decrease as the String size increases).  The one problem with using .concat() is that it can throw NullPointerExceptions.</p>
"
1535206,"<p>How about this:</p>

<pre><code>static int[]     SCORES =
    { 90, 80, 70, 60, 0 };  

static String[]  GRADES =
    { ""A"", ""B"", ""C"", ""D"", ""F"" };  

String letterGrade(int pct)
{
    for (int i = 0;  i &lt; SCORES.length;  i++)
        if (pct &gt;= SCORES[i])
            return GRADES[i];
}
</code></pre>

<p>This assumes that <code>pct</code> is positive. It uses a single <code>if</code> statement, so I'm not sure if this qualifies as a valid solution or not.</p>
"
1548873,"<p>Just to reiterate, don't use try/catch blocks for logical flow. The catch block should be used for handling exceptions/errors gracefully. Secondly, any function that is NOT declared void must return some form of the declared type, in your case a boolean value.</p>

<p><em>Possible solution</em></p>

<pre><code>private static boolean isTransientField(String name, Class beanClass) 
{
    try 
    {
        Field field = beanClass.getDeclaredField(name);
        if((field.getModifiers() &amp; Modifier.TRANSIENT) == Modifier.TRANSIENT)
        {
            return true;
        }
        else
        {
            return false;
        }

    } 
    catch (Exception e) 
    {
        e.printStackTrace();
    }
}
</code></pre>
"
1654591,"<p>usually, risky codes are put <strong>all</strong> in one try-catch block. nested try-catch blocks are not a very good idea, IMO (or just try to avoid nested try-catch blocks as much as possible, unless you really need them).</p>

<p>because the risky codes are exceptional scenario, so putting exceptional codes for exceptional case for even more exceptional case, that's alot of unnecessary work.</p>

<p>for example in <code>example1()</code>, place all risky codes in one try-catch block:</p>

<pre><code>try{
FileWriter out = new FileWriter(“test.txt”);
out.write(“example”);
out.close();
} catch(Exception e) {
    //handle exception
}
</code></pre>

<p>OR, another good idea is to place several catch(s) for the same try:</p>

<pre><code>try{
    FileWriter out = new FileWriter(“test.txt”);
    out.write(“example”);
    out.close();
} catch(FileNotFoundException e) {
        //if IOException, do this..
} catch(IOException e) {
        //if FileNotFound, do this..
} catch(Exception e) {
        //completely general exception, do this..
}
</code></pre>
"
1667585,"<p>You say ""Java"" but ""not Java EE"". Do you mean you are using JSP and/or servlets but not a full Java EE stack? If that's the case, then you should still have request.getParameter() available to you.</p>

<p>If you mean you are writing Java but you are not writing JSPs nor servlets, or that you're just using Java as your reference point but you're on some other platform that doesn't have built-in parameter parsing ... Wow, that just sounds like an unlikely question, but if so, the principle would be:</p>

<pre><code>xparm=0
word=""""
loop
  get next char
  if no char
    exit loop
  if char=='='
    param_name[xparm]=word
    word=""""
  else if char=='&amp;'
    param_value[xparm]=word
    word=""""
    xparm=xparm+1
  else if char=='%'
    read next two chars
    word=word+interpret the chars as hex digits to make a byte
  else
    word=word+char
</code></pre>

<p>(I could write Java code but that would be pointless, because if you have Java available, you can just use request.getParameters.)</p>
"
1695856,"<p><code>null</code> does not occupy any space in memory.</p>

<p>Simply saying <code>int</code> occupies some bytes like <code>float</code> occupies some space in memory.</p>

<p>But for <code>null</code> no space is occupied in memory.
Send me details if my answer is wrong.</p>

<p>Try for <code>system.memorrysize()</code> like method in Java.</p>
"
1756072,"<p>I guess you want</p>

<pre><code>public void increment() 
{
   if(value &gt;= limit)
     value = 0;
   else
     value = value + 1;
}
</code></pre>

<p>but it definitely smells like homework...</p>
"
1756139,"<pre><code>public void increment()
{
    value++;
    if(value &gt;= limit)
        value = 0;
}
</code></pre>
"
2677737,"<p>You can easily do Integer[] to List</p>

<pre><code>    List&lt;Integer&gt; = Arrays.asList(new Integer(4));
</code></pre>

<p>I suspect you can then do
   List = Arrays.asList(4);</p>

<p>(PS-the parameter to the asList method is actually an array, so you can pass in a single element or the array)</p>
"
2889822,"<pre><code>// The following is in C#

public class fqueue
{

  // The following code implements a circular queue of objects

  //private data:

    private bool empty;
    private bool full;

    private int begin, end;

    private object[] x;

  //public data:

    public fqueue()
    {
        empty = !(full = false);
        begin = end = 0xA2;

        x = new object[256];
        return;
    }

    public fqueue(int size)
    {
        if (1 &gt; size) throw new Exception(""fqueue: Size cannot be zero or negative"");

        empty = !(full = false);
        begin = end = 0xA2;

        x = new object[size];
        return;
    }

    public object write
    {
        set
        {
            if(full) throw new Exception(""Write error: Queue is full"");

            end = empty ? end : (end + 1) % x.Length;

            full = ((end + 1) % x.Length) == begin;
            empty = false;

            x[end] = value;
        }
    }

    public object read
    {
        get
        {
            if(empty) throw new Exception(""Read error: Queue is empty"");
            full = false;

            object ret = x[begin];

            begin = (empty=end==begin) ?
                begin :
                (begin + 1) % x.Length;

            return ret;
        }
    }

    public int maxSize
    {
        get
        {
            return x.Length;
        }
    }

    public int queueSize
    {
        get
        {
            return end - begin + (empty ? 0 : 1 + ((end &lt; begin) ? x.Length : 0));
        }
    }

    public bool isEmpty
    {
        get
        {
            return empty;
        }
    }

    public bool isFull
    {
        get
        {
            return full;
        }
    }

    public int start
    {
        get
        {
            return begin;
        }
    }        

    public int finish
    {
        get
        {
            return end;
        }
    }
}
</code></pre>
"
3027450,"<p>Just use the <code>.setVisible()</code> method of JTextField:</p>

<pre><code>JTextField tf = new JTextField() ;
tf.setVisible(true) ;
panel.add(tf) ;
</code></pre>
"
3441638,"<p>The easy way to do this is to have the folder your image is in parallel to the jar file.  Example:</p>

<p>Say in the code you call the image like this:</p>

<pre><code>pic = new ImageIcon(""Pics/buttonpic.jpg"");
</code></pre>

<p>This means your picture would be called buttonpic and is located in a folder called Pics in your project directory.  Now after you make your jar file, copy that Pics folder into the same folder your jar file is located. </p>

<p>Example: if your jar file is located on your desktop, then put the Pics folder on the desktop. Now when you run the jar file, your pictures will work correctly. Now to cover up the fact that you need to have your Pics folder next to your jar file, you can create a new folder and place in that folder your jar and the Pics folder.  Then right click the jar and create a shortcut, then place that shortcut on the desktop or where you wanted to have just the jar file, and place the new folder you created wherever you want to hide it at.</p>
"
3634769,"<p>you can use this simple code to remove all html tags...</p>

<pre><code>htmlString.replaceAll(""\\&lt;.*?\\&gt;"", """"))
</code></pre>
"
558825,"<p>Try setting both of <strong>lp</strong>'s LayoutParams to be <code>WRAP_CONTENT</code>.</p>

<p>Setting <strong>mlp</strong> to be <code>WRAP_CONTENT</code>, <code>WRAP_CONTENT</code> ensures that your TextView(s) <strong>t</strong> are just wide and tall enough enough to hold ""Hello"" or whatever String you put in them.  I think <strong>l</strong> may not be aware of how wide your <strong>t</strong>'s are.  The <code>setSingleLine(true)</code> may be contributing too.</p>
"
561666,"<p>It's hard to answer this precisely as it depends on the compiler/interpreter implementation.</p>

<p>But generally speaking you can say roughly extend i++ to the following instructions:</p>

<pre><code>COPY i to tmp
INCREMENT tmp
SAVE tmp as i
</code></pre>

<p>While ++i will roughly extend to:</p>

<pre><code>LOAD i
INCREMENT i
</code></pre>

<p>You can't just say that ++i is faster than i++ since language implementations are pretty smart and they can optimize these instructions when you know that you won't access the temporary value of i++. This usually happens in say a for loop. So in many cases it's just the same.</p>

<p>If you're trying to these kind of micro-optimizations I'd advice you to profile/measure before chosing one over another.</p>
"
4031525,"<p>You can try <code>allowCoreThreadTimeOut(true);</code></p>
"
5333377,"<p>From my experience, people new to Java never ever override <code>equals</code>, <code>hashCode</code> and <code>toString</code> methods, no mater what the objects purpose is. Also nobody ever bothers with setting up simple <strong>logging system</strong>. When I see <code>System.out.println</code> I feel like I'm ready to break fingers! But lot of seasoned coders are putting pin into thous tasks too. </p>

<p>On more advanced note get used to coding where <code>Specs</code> come first followed closely by <code>unit testing</code> - but this is more generic not just for Java. But again lots of people put pin into this. </p>
"
583319,"<p>There is no point in catching <strong>Error</strong>. </p>

<p>Errors are used to indicate something went really wrong in your application and it should be restarted. </p>

<p>For instance one common error is </p>

<pre><code>java.lang.OutOfMemoryError
</code></pre>

<p>There is <strong>NOTHING</strong> you can do when that happens. Is already too late, the JVM has exhausted all its options  to get more memory but it is impossible. </p>

<p>See this other answer to understand more about the <a href=""http://stackoverflow.com/questions/462501/exception-other-than-runtimeexception/462745#462745"">three kinds of exceptions</a>.</p>
"
607056,"<p>in the comments below this post, myself and 2 other individuals have determined that you should learn the java langauge, research the notion of object oriented programming (including object scope), and then learn how to implement the proper event handling code - there are several ways in which you can accomplish what you want, i would suggest a combination of the code i provided along with the reference suggestion supplied by Welbog up above (this of course, will require modification of my code, but not much actually if your main class is somewhere else)</p>

<p>basically, <strong>google a java tutorial (or buy a book/""acquire"" a book), and if you know some basic concepts skip ahead to the object-oriented part.</strong></p>

<p>if i follow what you want, here's some skeleton code:</p>

<pre><code>// imports

public class GUI extends JFrame implements ActionListener {
    public String s = ""String"";

    public GUI() {
    	// initializer code for buttons
    	btn1.addActionListener(this);
    	btn2.addActionListener(this);
    }

    public void actionPerformed(ActionEvent e) {
    	if(s == ""???"")
    		s = ""this"";
    	else
    		s = ""that"";
    }

    // other methods

}
</code></pre>
"
7967307,"<p>You can also try this syntax.</p>

<pre><code>static public String generateCollection(List list){
    if(list == null || list.isEmpty())
        return ""()"";
    String result = ""( "";
    for(Iterator it = list.iterator();it.hasNext();){
        Object ob = it.next();
        result += ob.toString();
        if(it.hasNext())
            result += "" , "";
    }
    result += "" )"";
    return result;
}
</code></pre>

<p>And put into query, <code>""Select * from Class where field in "" + Class.generateCollection(list);</code></p>
"
607122,"<p>It's very difficult to decipher your question. But in general, if you want to know which button it was that caused an event, add a different <code>ActionListener</code> to each one (or its model). Keep the code as clean and simple as possible.</p>
"
607143,"<p>I would use a listener for observing the state of the 'string' variable.</p>

<pre><code>public class Gui
{
    public static final String STRING_PROPERTY = ""string"";
    private String string = ""String"";
    private PropertyChangeSupport propertyChangeSupport = new PropertyChangeSupport(this);

    private void setString(String string)
    {
    	String oldValue = this.string;
    	this.string = string;
    	propertyChangeSupport.firePropertyChange(STRING_PROPERTY, oldValue, this.string);
    }

    public void addPropertyChangeListener(String propertyName, PropertyChangeListener listener)
    {
    	propertyChangeSupport.addPropertyChangeListener(propertyName, listener);
    }
}
</code></pre>

<p>This snippet just demonstrates how to add propertyChangeListener support to your class. The class that is interested in knowing the value of 'string' would implement PropertyChangeListener and be added to through the 'addPropertyChangeListener' method.</p>
"
607162,"<p>You could use an ActionListener and an action command on each button as shown in this code</p>

<pre><code>public class GUI  extends JFrame implements ActionListener
{
  public static final String BUTTON_1_PRESSED = ""BUTTON_1_PRESSED"";
  public static final String BUTTON_2_PRESSED = ""BUTTON_2_PRESSED"";

  public String s = ""String"";

  public GUI()
  {
    // create buttons
    button1.addActionListener(this);
    button1.setActionCommand(BUTTON_1_PRESSED);
    button2.addActionListener(this);
    button2.setActionCommand(BUTTON_2_PRESSED);
  }

  public void actionPerformed(ActionEvent e) 
  {
    if(e.getActionCommand().equals(BUTTON_1_PRESSED))
    {
      s = ""this"";
    }
    else if(e.getActionCommand().equals(BUTTON_2_PRESSED))
    {
      s = ""that"";
    }
  }
}
</code></pre>
"
8688769,"<p>When the use logs in, put its username in the session: </p>

<pre><code>`session.setAttribute(""USER"", username);`
</code></pre>

<p>At the beginning of each page you can do this:</p>

<pre><code>&lt;%
String username = (String)session.getAttribute(""USER"");
if(username==null) 
// if session is expired, forward it to login page
%&gt;
&lt;jsp:forward page=""Login.jsp"" /&gt;
&lt;% { } %&gt;
</code></pre>
"
8720608,"<pre><code>package javagame;

import java.awt.BorderLayout;
import javax.swing.JFrame;

/**
 *
 * @author stuart
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        JFrame frame= new JFrame();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setBounds(100, 100, 500, 400);

        frame.add(new GamePanel(), BorderLayout.CENTER);
        frame.setVisible(true);
    }

}
</code></pre>
"
9268535,"<p>In Java, you can't do</p>

<pre><code>ArrayList&lt;String&gt; places = new ArrayList&lt;String&gt;( Arrays.asList(""Buenos Aires"", ""Córdoba"", ""La Plata""));
</code></pre>

<p>As was pointed out, you'd need to do a double brace initialization:</p>

<pre><code>List&lt;String&gt; places = new ArrayList&lt;String&gt;() {{ add(""x""); add(""y""); }};
</code></pre>

<p>But this may force you into adding an annotation <code>@SuppressWarnings(""serial"")</code> or generate a serial UUID which is annoying. Also most code formatters will unwrap that into multiple statements/lines.</p>

<p>Alternatively you can do</p>

<pre><code>List&lt;String&gt; places = Arrays.asList(new String[] {""x"", ""y"" });
</code></pre>

<p>but then you may want to do a <code>@SuppressWarnings(""unchecked"")</code>.</p>

<p>Also according to javadoc you should be able to do this:</p>

<pre><code>List&lt;String&gt; stooges = Arrays.asList(""Larry"", ""Moe"", ""Curly"");
</code></pre>

<p>But I'm not able to get it to compile with JDK 1.6.</p>
"
631132,"<p>You may be wanting ""isAssignable"" instead of instanceof: </p>

<pre><code>if (MyInterface.isAssignableFrom(myObject.getClass())) {
  //  do work here
}
</code></pre>

<p>This will return true for classes that implement your interface.</p>
"
9969526,"<p>I know its a bit late but I wanted to share this because I think the simplest solution is do something like this (removing try catch code for brevity+clarity):</p>

<pre><code>ByteArrayOutputStream out = new ByteArrayOutputStream();

byte[] buffer = new byte[1024]; //you can configure the buffer size
while (in.read(buffer) != -1) out.write(buffer); //copy streams

byte[] result = out.toByteArray();
</code></pre>
"
635973,"<pre><code>long time1, time2;
time1 = System.currentMillis();

.. drink coffee

time2 = System.currentMillis();

long difference = time2 - time1 // millies between time1 and time2

java.util.Date differneceDate = new Date(difference);
</code></pre>

<p>To create a string like ""2 Minutes"" you should use DateFormatter/DateFormat. You can find more details on this in the the Java API spec (java.sun.com). </p>
"
638339,"<p><code>java.io.StringReader</code> will allow you to use <code>InputSource</code>. </p>

<p>You might want to store the data in a <code>byte[]</code> and then read with <code>ByteArrayInputStream</code>. If it's particular large, you might might want to consider compression. This can be read out iwth <code>GzipInputStream</code>, which should often be wrapped in a <code>BufferedInputStream</code>.</p>
"
11741122,"<pre><code>public static &lt;T&gt; List&lt;T&gt; asList(T... a) {
    return new ArrayList&lt;T&gt;(a);
}
</code></pre>

<p>This is the implementation of <code>Arrays.asList</code>, so you could go with</p>

<pre><code>ArrayList&lt;String&gt; arr = (ArrayList&lt;String&gt;) Arrays.asList(""1"", ""2"");
</code></pre>
"
12356059,"<p>Instead of this complicated step you can use the following logic:</p>

<pre><code>DataInputStream in=new DataInputStream(System.in);
System.out.println(""Enter the a character"")
byte b = in.readByte();
char ch=(char)b;
System.out.println(""Char : "" +ch );
</code></pre>

<p>you see here it will only read only one character.</p>
"
709083,"<p>jpalecek's solution fails; it captures the rightmost number. The original poster was a lot closer, but he got the <em>right-most</em> number. To get the left-most number, ignore anything after the first dot:</p>

<pre><code>[^\d]*(\d+)\..*html
</code></pre>

<p>[^\d]* ignores everything before the left-most number (so X1.html captures number 1)
(\d+). captures the first digits, if they are followed by a dot. .* ignores everything between the dot and the final html.</p>
"
14700882,"<p>The answer for conversion of char to int or long is simple casting.</p>

<p>For example:- if you would like to convert Char '0' into long.</p>

<p>Follow simple cast</p>

<pre><code>Char ch='0';
String convertedChar= Character.toString(ch);  //Convert Char to String.
Long finalLongValue=Long.parseLong(convertedChar);
</code></pre>

<p>Done!!</p>
"
14988974,"<pre><code>    static boolean isBalanced(Node root) {
    //check in the depth of left and right subtree
    int diff = depth(root.getLeft()) - depth(root.getRight());
    if (diff &lt; 0) {
        diff = diff * -1;
    }
    if (diff &gt; 1) {
        return false;
    }
    //go to child nodes
    else {
        if (root.getLeft() == null &amp;&amp; root.getRight() == null) {
            return true;
        } else if (root.getLeft() == null) {
            if (depth(root.getRight()) &gt; 1) {
                return false;
            } else {
                return true;
            }
        } else if (root.getRight() == null) {
            if (depth(root.getLeft()) &gt; 1) {
                return false;
            } else {
                return true;
            }
        } else if (root.getLeft() != null &amp;&amp; root.getRight() != null &amp;&amp; isBalanced(root.getLeft()) &amp;&amp; isBalanced(root.getRight())) {
            return true;
        } else {
            return false;
        }
    }
}
</code></pre>
"
15617046,"<p>Modulo API consistency, why JUnit didn't provide <code>assertNotEquals()</code> is the same reason why JUnit never provided methods like</p>

<ul>
<li><code>assertStringMatchesTheRegex(regex, str)</code> vs. <code>assertStringDoesntMatchTheRegex(regex, str)</code></li>
<li><code>assertStringBeginsWith(prefix, str)</code> vs. <code>assertStringDoesntBeginWith(prefix, str)</code></li>
</ul>

<p>i.e. there's no end to providing a specific assertion methods for the kinds of things you might want in your assertion logic!</p>

<p>Far better to provide composable test primitives like <code>equalTo(...)</code>, <code>is(...)</code>, <code>not(...)</code>, <code>regex(...)</code> and let the programmer piece those together instead for more readability and sanity.</p>
"
15676007,"<p>You can use a boolean array</p>

<pre><code>final boolean[] values = { false };
values[0] = true;
</code></pre>
"
17449292,"<p>The answer given as correct is no good for counting things like line returns and is far too verbose. Later answers are better but all can be achieved simply with</p>

<pre><code>str.split(findStr).length
</code></pre>

<p>It does not drop trailing matches using the example in the question.</p>
"
18445963,"<p>You should use:</p>

<pre><code>import javax.xml.rpc.Stub;

...


int timeout = &lt;number of milliseconds&gt;;

((Stub) port)._setProperty(
                ""axis.connection.timeout"",
                timeout);
</code></pre>
"
823969,"<p>try to catch a Throwable, the root of Exception and Error, with:</p>

<pre><code>try{
        av = UserHelper.importUsers(data, admin);
        System.out.print(""test2"");
    } catch (ImportException ie) {
        System.out.print(""testE"");
        returnMessageValue = ie.getMessage();
    } catch (Exception e) {
        System.out.print(""testE2"");
    } catch (Throwable t) {
        // Here you'll catch *anything* else
        System.out.print(""testTE"");
    }
</code></pre>
"
21090920,"<p>Try Like this it will reduce your steps <br>
<code>int[] ints = {1, 2, 3};</code><br>
then <br>
<code>List l = Arrays.asList(Arrays.toString(ints));</code></p>
"
21130752,"<p>To do it in a generic JPA way using getter annotations, the example below works for me with Hibernate 3.5.4 and Oracle 11g. Note that the mapped getter and setter (<code>getOpenedYnString</code> and <code>setOpenedYnString</code>) are private methods. Those methods provide the mapping but all programmatic access to the class is using the <code>getOpenedYn</code> and <code>setOpenedYn</code> methods.</p>

<pre><code>private String openedYn;

@Transient
public Boolean getOpenedYn() {
  return toBoolean(openedYn);
}

public void setOpenedYn(Boolean openedYn) {
  setOpenedYnString(toYesNo(openedYn));
}

@Column(name = ""OPENED_YN"", length = 1)
private String getOpenedYnString() {
  return openedYn;
}

private void setOpenedYnString(String openedYn) {
  this.openedYn = openedYn;
}
</code></pre>

<p>Here's the util class with static methods <code>toYesNo</code> and <code>toBoolean</code>:</p>

<pre><code>public class JpaUtil {

    private static final String NO = ""N"";
    private static final String YES = ""Y"";

    public static String toYesNo(Boolean value) {
        if (value == null)
            return null;
        else if (value)
            return YES;
        else
            return NO;
    }

    public static Boolean toBoolean(String yesNo) {
        if (yesNo == null)
            return null;
        else if (YES.equals(yesNo))
            return true;
        else if (NO.equals(yesNo))
            return false;
        else
            throw new RuntimeException(""unexpected yes/no value:"" + yesNo);
    }
}
</code></pre>
"
21271679,"<p>i cast the objects to java.util.Date and compare</p>

<pre><code>assertEquals((Date)timestamp1,(Date)timestamp2);
</code></pre>
"
22055362,"<p>This will write a JTable to a tab separated file that can be easily imported into Excel. This works.</p>

<p>If you save an Excel worksheet as an XML document you could also build the XML file for EXCEL with code. I have done this with word so you do not have to use third-party packages. </p>

<p>This could code have the JTable taken out and then just write a tab separated to any text file and then import into Excel. I hope this helps.</p>

<p>Code:</p>

<pre><code>import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JTable;
import javax.swing.table.TableModel;

public class excel {
    String columnNames[] = { ""Column 1"", ""Column 2"", ""Column 3"" };

    // Create some data
    String dataValues[][] =
    {
        { ""12"", ""234"", ""67"" },
        { ""-123"", ""43"", ""853"" },
        { ""93"", ""89.2"", ""109"" },
        { ""279"", ""9033"", ""3092"" }
    };

    JTable table;

    excel() {
        table = new JTable( dataValues, columnNames );
    }


    public void toExcel(JTable table, File file){
        try{
            TableModel model = table.getModel();
            FileWriter excel = new FileWriter(file);

            for(int i = 0; i &lt; model.getColumnCount(); i++){
                excel.write(model.getColumnName(i) + ""\t"");
            }

            excel.write(""\n"");

            for(int i=0; i&lt; model.getRowCount(); i++) {
                for(int j=0; j &lt; model.getColumnCount(); j++) {
                    excel.write(model.getValueAt(i,j).toString()+""\t"");
                }
                excel.write(""\n"");
            }

            excel.close();

        }catch(IOException e){ System.out.println(e); }
    }

    public static void main(String[] o) {
        excel cv = new excel();
        cv.toExcel(cv.table,new File(""C:\\Users\\itpr13266\\Desktop\\cs.tbv""));
    }
}
</code></pre>
"
944319,"<p>Looks like you first need to create a class that <code>extends java.lang.Thread</code> so you can have a constructor that takes 2 parameters.</p>

<p>You also presumably need to override <code>public void run()</code> in your Thread subclass so it knows what to do with the 2 job objects.</p>
"
24796440,"<pre><code>    Map&lt;String, Integer&gt; map = new HashMap&lt;String, Integer&gt;();
    map.put(""java"", 20);
    map.put(""C++"", 45);

    Set &lt;Entry&lt;String, Integer&gt;&gt; set = map.entrySet();

    List&lt;Entry&lt;String, Integer&gt;&gt; list = new ArrayList&lt;Entry&lt;String, Integer&gt;&gt;(set);
</code></pre>

<p>we can have both key and value pair in list.Also can get key and value using Map.Entry by iterating over list.</p>
"
25789114,"<pre><code>public static String reverse(String s){

    int n = s.length()-1;

    if(n &gt;=0)
    return  s.substring(s.length()-1)+ReverseString(s.substring(0,n--));
    else return """";
}
</code></pre>
"
1016616,"<p>So you just want to loop over a data set for ever?</p>

<p>Can't you do something like this</p>

<pre><code>for(int i =0; i &lt; List.size() ; i++){

 if(i == List.size()){

   i =0;
 }

}
</code></pre>
"
26715369,"<p>public class Account </p>

<p>{</p>

<pre><code>private static final Exception InsufficientFundsException = null;

private int  accountNumber;
private double availableBalance;
private int pin;
public Account(int account, int pin,double amount )
{

    this.accountNumber = account;
    this.pin = pin;
    this.availableBalance = amount;
}

public void credit(double amount)
{
    this.availableBalance= this.availableBalance+amount;
}

public void debit(double amount) throws Exception
{
    if(this.availableBalance&gt;=amount)
    {
    this.availableBalance= this.availableBalance-amount;
    }
    else
    { 
        throw new InsufficientFundsException();
    }

}

public int getAccountNumber() 
{
    return accountNumber;
}   

public double getAvailableBalance()
{
    return availableBalance;
}
public String toString()
{
    return ""Account=""+accountNumber+""pin=""+pin+""balance""+availableBalance;
}
public boolean validatePIN(int pin)
{
    if(this.pin==pin)
        return true;
    else return false;  
</code></pre>

<p>}
}</p>
"
1052421,"<p>Basically in order to have a properly cloneable object is enough to have a public clone() method implemented in that class.</p>

<p>The Cloneable interface is a <code>marker</code> interface used to signal to the VM that it's safe to implement the default protected clone() method as a field by field copy. </p>

<p>In order to properly implement the clone method for a class you should do declare a public method clone like this().</p>

<pre><code>public Object clone() {
   return super.clone();
}
</code></pre>

<p>A good working implementationk will create a new object and properly assign the fields as the business logic reaquires:</p>

<pre><code>public Object clone() {
   CurrentClass newObject = new CurrentClass();

   newObject.field1 = this.field1; // for simple types: int, long, etc
   newObject.referenceField = this.referenceField.clone(); // for agregate objects or references.
   return newObject;
}
</code></pre>

<p>The conclusion:
 declare a public clone method.
 If you want to have the default implementation as a field by field copy call super and mark the class as Cloneable
 If you want only custom cloning you can ignore the Cloneable mark.</p>
"
1068486,"<p><code>&lt;hello&gt;</code> what are we thinking here?</p>

<pre><code>public static void main(String[] args) {
	// TODO Auto-generated method stub
	String str = readIndex();
	String comp[] = str.split(""}"");

	StringBuffer sb = new StringBuffer();
	for (String s : comp) {
		sb.append(s);
		sb.append(""}\n"");
	}
	System.out.println (sb.toString());
}
</code></pre>

<p>As a modeling notation, the influence of the OMT notation dominates (e. g., using rectangles for classes and objects). Though the Booch ""cloud"" notation was dropped, the Booch capability to specify lower-level design detail was embraced. The use case notation from Objectory and the <a href=""http://en.wikipedia.org/wiki/Unified%5FModeling%5FLanguage"" rel=""nofollow"">component notation from Booch</a> were integrated with the rest of the notation, but the semantic integration was relatively weak in UML 1.1, and was not really fixed until the UML 2.0 major revision.</p>
"
29629593,"<p>this method takes the uri and return map of par name and par value</p>

<pre><code>  public static Map&lt;String, String&gt; getQueryMap(String uri) {

    String queryParms[] = uri.split(""\\?"");

    Map&lt;String, String&gt; map = new HashMap&lt;&gt;();// 

    if (queryParms == null || queryParms.length == 0) return map;

    String[] params = queryParms[1].split(""&amp;"");
    for (String param : params) {
        String name = param.split(""="")[0];
        String value = param.split(""="")[1];
        map.put(name, value);
    }
    return map;
}
</code></pre>
"
29809553,"<p>Here is my solution which does not allocate any heap memory, therefore it should be significantly faster than most of the other implementations mentioned here.</p>

<pre><code>public static int indexOfIgnoreCase(final String haystack,
                                    final String needle) {
    if (needle.isEmpty() || haystack.isEmpty()) {
        // Fallback to legacy behavior.
        return haystack.indexOf(needle);
    }

    for (int i = 0; i &lt; haystack.length(); ++i) {
        // Early out, if possible.
        if (i + needle.length() &gt; haystack.length()) {
            return -1;
        }

        // Attempt to match substring starting at position i of haystack.
        int j = 0;
        int ii = i;
        while (ii &lt; haystack.length() &amp;&amp; j &lt; needle.length()) {
            char c = Character.toLowerCase(haystack.charAt(ii));
            char c2 = Character.toLowerCase(needle.charAt(j));
            if (c != c2) {
                break;
            }
            j++;
            ii++;
        }
        // Walked all the way to the end of the needle, return the start
        // position that this was found.
        if (j == needle.length()) {
            return i;
        }
    }

    return -1;
}
</code></pre>

<p>And here are the unit tests that verify correct behavior.</p>

<pre><code>@Test
public void testIndexOfIgnoreCase() {
    assertThat(StringUtils.indexOfIgnoreCase(""A"", ""A""), is(0));
    assertThat(StringUtils.indexOfIgnoreCase(""a"", ""A""), is(0));
    assertThat(StringUtils.indexOfIgnoreCase(""A"", ""a""), is(0));
    assertThat(StringUtils.indexOfIgnoreCase(""a"", ""a""), is(0));

    assertThat(StringUtils.indexOfIgnoreCase(""a"", ""ba""), is(-1));
    assertThat(StringUtils.indexOfIgnoreCase(""ba"", ""a""), is(1));

    assertThat(StringUtils.indexOfIgnoreCase(""Royal Blue"", "" Royal Blue""), is(-1));
    assertThat(StringUtils.indexOfIgnoreCase("" Royal Blue"", ""Royal Blue""), is(1));
    assertThat(StringUtils.indexOfIgnoreCase(""Royal Blue"", ""royal""), is(0));
    assertThat(StringUtils.indexOfIgnoreCase(""Royal Blue"", ""oyal""), is(1));
    assertThat(StringUtils.indexOfIgnoreCase(""Royal Blue"", ""al""), is(3));
    assertThat(StringUtils.indexOfIgnoreCase("""", ""royal""), is(-1));
    assertThat(StringUtils.indexOfIgnoreCase(""Royal Blue"", """"), is(0));
    assertThat(StringUtils.indexOfIgnoreCase(""Royal Blue"", ""BLUE""), is(6));
    assertThat(StringUtils.indexOfIgnoreCase(""Royal Blue"", ""BIGLONGSTRING""), is(-1));
    assertThat(StringUtils.indexOfIgnoreCase(""Royal Blue"", ""Royal Blue LONGSTRING""), is(-1));  
}
</code></pre>
"
1147347,"<p>Odd and even numbers are usually thought of as positive numbers, so I think don't think its useful to think of negative numbers as odd or even. The test is often really to see if the lowest bit is set.</p>

<p>These are both fine for negative numbers as well.</p>

<pre><code>if ((i &amp; 1) == 0) // lowest bit not set.

if ((i &amp; 1) == 1) // lowest bit set.
</code></pre>

<p>or</p>

<pre><code>if ((i &amp; 1) != 0) // lowest bit set.
</code></pre>
"
1149182,"<p>The JVM Tool INterface (jvmti) has a method named  ForceGarbageCollection. You could write some JNI to call it. </p>

<p>something like</p>

<pre><code>#include ""jvmti.h""
#include ""jni.h""

jvmtiEnv *jvmti;

JNIEXPORT jint JNICALL
Agent_OnLoad(JavaVM *vm, char *options, void *reserved) {
    (*vm)-&gt;GetEnv(vm, (void **)&amp;jvmti, JVMTI_VERSION_1);
    return JNI_OK;
}

JNIEXPORT void JNICALL my_managled_function_name_that_is_entirely_too_long_to_be_easy_to_use (JNIEnv *env) {
    error = (*jvmti)-&gt;ForceGarbageCollection(jvmti);
//    you can trap the error if you want;
}
</code></pre>

<p>BTW, this is a bad idea. I only use this code for debugging (to ensure that certain class, like listeners, have no more reachable references.)</p>

<p>My bet is that the VM will gc all possible data before throwing Memory Errors.</p>
"
1253597,"<p>There is no memory fragmentation in Java; during the GC run, memory areas are compacted.</p>

<p>Since you don't see a high CPU utilization, there is no GC running, either. So something else must be the cause of your problems. Here are a few ideas:</p>

<ul>
<li><p>If the database of your application is on a different server, there may be network problems</p></li>
<li><p>If you run Windows and you have mapped network drives, one of the drives may lock up your computer (again network problems). The same is true for NFS drives on Unix. Check the system log for network errors.</p></li>
<li><p>Is the computer swapping lots of data to disk? Since CPU util is low, the cause of the problem could be that the app was swapped to disk and the GC run forced it back into RAM. This will take a long time if your server hasn't enough real RAM to keep the whole Java app in RAM.</p></li>
</ul>

<p>Also, other processes can force the app out of RAM. Check the real memory utilization and your swap space usage.</p>

<p>To understand the output of the GC log, <a href=""http://forums.sun.com/thread.jspa?threadID=5352404"" rel=""nofollow"">this post</a> might help.</p>

<p>[EDIT] I still can't get my head around ""low CPU"" and ""GC stalls"". Those two usually contradict each other. If the GC is stalling, you must see 100% CPU usage. If the CPU is idle, then something else is blocking the GC. Do you have objects which overload <code>finalize()</code>? If a finalize blocks, the GC can take forever.</p>
"
1263408,"<p>What if instead of having an interface like:</p>

<pre><code>public interface Command&lt;T&gt; {
    T execute(String... args);
}
</code></pre>

<p>You instead had:</p>

<pre><code>public interface Command&lt;T&gt; {
    void execute(String... args);
    T getResult();
    bool hasResult();
}
</code></pre>

<p>Then callers would do:</p>

<pre><code>public void doSomething(Command&lt;?&gt; cmd) {
    cmd.execute(args);
    if(cmd.hasResult()) {
        // ... do something with cmd.getResult() ...
    }
}
</code></pre>

<p>You could also create an interface VoidCommmand that extends Command, if you like.</p>

<p>This seems like the cleanest solution to me.</p>
"
1433758,"<p>For homework, it's really a matter of taste. For real projects, you should instantiate the class and wrap that in <code>try/catch</code> so you can print the full stack trace if something goes wrong during construction of the class.</p>

<p>The default <code>printStackTrace()</code> of Java sometimes omits the nested exceptions, so you'll end up with ""there was an error, see next exception"" but you can't see it.</p>
"
1444806,"<p>The solution is not in Spring, but in Oracle: you need to set the <code>OPEN_CURSORS</code> initialization parameter to some value higher than the default 50.</p>

<p>Oracle -- at least as-of 8i, perhaps it's changed -- would reparse JDBC PreparedStatement objects unless you left them open. This was expensive, and most people end up maintaining a fixed pool of open statements that are resubmitted.</p>

<p>(taking a quick look at the 10i docs, they explicitly note that the OCI driver will cache PreparedStatements, so I'm assuming that the native driver still recreates them each time)</p>
"
1501443,"<pre><code>java.util.StringTokenizer tokenizer = new java.util.StringTokenizer(line, "" "");
while (tokenizer.hasMoreTokens()) {
    String token = tokenizer.nextToken();
    int index = token.indexOf('=');
    String key = token.substring(0, index);
    String value = token.substring(index + 1);
}
</code></pre>
"
1523388,"<p>These can be very convenient because of possibility to make circular references:</p>

<pre><code>class A
{ 
    public static final A _1 = new A() {
        public A foo()
        {
            return _2;
        }
    };

    public static final A _2 = new A() {
        public A foo()
        {
            return _1;
        }
    };
}
</code></pre>

<p>Creation of several objects which are holding references to each other can be very awkward without usage of anonymous classes. </p>
"
1537225,"<p>Since you haven't posted code, we're kind of working in the dark.  What are the details of the exception?</p>

<p><b>Are you calling Thread.wait() from within the thread, or outside it?   </b></p>

<p>I ask this because according to the javadoc for IllegalMonitorStateException, it is:</p>

<blockquote>
<i>Thrown to indicate that a thread has attempted to wait on an object's monitor or to notify other threads waiting on an object's monitor without owning the specified monitor. </i>
</blockquote>

<p>To clarify this answer, this call to wait on a thread also throws IllegalMonitorStateException, despite being called from within a synchronized block:</p>

<pre><code>
     private static final class Lock { }
     private final Object lock = new Lock();

    @Test
    public void testRun() {
        ThreadWorker worker = new ThreadWorker();
        System.out.println (""Starting worker"");
        worker.start();
        System.out.println (""Worker started - telling it to wait"");
        try {
            synchronized (lock) {
                worker.wait();
            }
        } catch (InterruptedException e1) {
            String msg = ""InterruptedException: ["" + e1.getLocalizedMessage() + ""]"";
            System.out.println (msg);
            e1.printStackTrace();
            System.out.flush();
        }
        System.out.println (""Worker done waiting, we're now waiting for it by joining"");
        try {
            worker.join();
        } catch (InterruptedException ex) { }

    }
</code></pre>
"
1582409,"<p>Using idxA to idxC in ary,</p>

<pre><code>int ab = ary[idxA] &lt; ary[idxB] ? idxA : idxB;
int bc = ary[idxB] &lt; ary[idxC] ? idxB : idxC;
int ac = ary[idxA] &lt; ary[idxC] ? idxA : idxC;

int idxMid = ab == bc ? ac : ab == ac ? bc : ab;
</code></pre>

<p>indexMiddle points to the middle value.</p>

<p>Explanation: from the 3 minima 2 are the overall minimum and the other value must be the middle. Because we check equality we can compare the indices in the last line instead of having to compare the array values.</p>
"
1582410,"<p>or a one liner for finding the index in the array containing the middle value:</p>

<pre><code> int middleIndex = (a[0]&lt;a[1]) ? ((a[0]&lt;a[2) ? a[2] : a[0]) : ((a[1]&lt;a[2) ? a[2] : a[1]);
</code></pre>
"
1691154,"<p>I don't know if you can do this at compile time, but here's an idea.  Why not check at runtime by creating a class of type Foo and checking to see if it is an <code>instanceof</code> FooInterface?  Hope this helps.  I tried to think of some sort of solution with annotations, but nothing I can come up with works at compile time.</p>
"
1691345,"<p>Using <strong>AOP</strong>, you can weave the students' classes and synthetically <strong>let them implement <code>FooInterface</code> at runtime</strong> and run your test suite against them. This can be done fairly easy and automated using custom class loaders for each student.</p>

<p>However, i'm unsure about how this will behave at runtime when the class does not actually implement all the methods with correct signature, e.g. if it just throws <code>MethodNotFoundErrors</code></p>

<pre><code>aspect MakeImplementFooAspect {
  // makes many classes implement FooInterface
  declare parents : edu.teaching.foo.* implements FooInterface;
}
</code></pre>
"
1715561,"<p>String variable str is given the null value.</p>

<p>When you print it, the String#toString() converts that to the string 'null', and appends the string ""Added"".  The result is</p>

<pre><code>nullAdded
</code></pre>
"
1828718,"<ul>
<li><code>YourBean implements Comparable&lt;YourBean&gt;</code></li>
<li>method compareTo : order by number of word</li>
<li>TreeMap instead of hashmap</li>
</ul>
"
1885047,"<p>An alternative, more verbose way</p>

<pre><code>List&lt;SomeObject&gt; toRemove = new ArrayList&lt;SomeObject&gt;();
for (SomeObject key: map.keySet()) {
    if (something) {
        toRemove.add(key);
    }
}

for (SomeObject key: toRemove) {
    map.remove(key);
}
</code></pre>
"
1950903,"<p>Trust your guts... :)
With StringTokenizer: <pre><code>import java.io.*;
import java.util.StringTokenizer;
public class Test {
  public Test() {
  }</p>

<p>public void execute(String str) {
    String date, time, firstName, lastName, cardNo;
    StringTokenizer st = new StringTokenizer(str, "" "");
    date = st.nextToken();
    time = st.nextToken();
    st.nextToken(); //Admitted
    lastName = st.nextToken("","").trim();
    firstName = st.nextToken("",("").trim();
    st.nextToken(""#""); //Card
    cardNo = st.nextToken("")#"");
    System.out.println(""date = "" + date +""\ntime = "" + time +""\nfirstName = "" + firstName +""\nlastName = ""+ lastName +""\ncardNo = "" +cardNo);
  }</p>

<p>public static void main(String args[]) {
    Test t = new Test();
    String record1 = ""12/18/2009 02:08:26 Admitted Doe, John (Card #111) at South Lobby [In]"";
    String record2 = ""12/18/2009 02:08:26 Admitted Van Halen, Eddie (Card #222) at South Lobby [In]"";
    String record3 = ""12/18/2009 02:08:26 Admitted Thoreau, Henry David (Card #333) at South Lobby [In]"";
    t.execute(record1);
    t.execute(record2);
    t.execute(record3);
  }
}</code></pre></p>
"
1978110,"<p>I haven't used these classes before, but the Exception occurs on line 3 when you call the <code>setInterface</code> method.</p>

<p>I would guess it's something to the effect that you're using the same reference twice or something.
I found a snippet of code that looked like this, maybe this is how you should be doing it:</p>

<pre><code>    MulticastSocket ms = new MulticastSocket(new InetSocketAddress(0));
    ms.setInterface(InetAddress.getByName(""192.168.0.1""));
</code></pre>
"
1985888,"<p>You should first create the Multicast socket with a well known port - something higher than 1024 and less than 65535 - as already stated 0 means the operating system will choose a port for you (but then its going to be kinda random - which I guess you don't want).</p>

<p>For multicast - you generally need to set the interface to use on joinGroup() not on creation - e.g:</p>

<p>MulticastSocket socket = new MulticastSocket(2121);</p>

<pre><code>InetSocketAddress socketAddress = new InetSocketAddress(""localhost"", 2121);

if (networkInterfaceName != null){
        NetworkInterface ni = NetworkInterface.getByName(networkInterfaceName);
socket.joinGroup(this.socketAddress, ni);

}else {
   socket.joinGroup(socketAddress.getAddress());
}
</code></pre>
"
2445505,"<pre><code>import java.io.*;
public class FileTest
{
    public static void main (String [] args) throws IOException
    {
        BufferedReader wow = new BufferedReader(new InputStreamReader(System.in));
        System.out.print(""Enter File Name: "");
        String fileInput = wow.readLine();

        FileInputStream in = new FileInputStream(fileInput);
        //FileInputStream out = new FileInputStream(fileOutput);
    }
}
</code></pre>
"
4571725,"<p>generate url containing both id and description like this url <code>http://stackoverflow.com/questions/784891/java-and-seo-urls</code> . in the servlet parse the url and then use id for fetching data from database. Same Technique is applies on this stackoverflow page too. look at the url. its <code>http://stackoverflow.com/questions/784891/java-and-seo-urls</code>
however only questionId is considered and description is ignored. try <code>http://stackoverflow.com/questions/784891</code> or <code>http://stackoverflow.com/questions/784891/abcdxyz</code> . you will get same page. this is very good technique to generate seo urls</p>
"
4840582,"<p>This is a problem and an algorithm needs to be made to account for leap years and exact amount of months and days beside years. Interesting how it is simple if only one unit of measure is to be used. For example, total number of days between two days is correct as apposed to reminder number of days after number of months and years is calculate within let's say two decades.</p>

<p>I am currently working on this to provide it from my PML implementation, for example, in the form of:</p>

<pre><code>unemployed &lt;- date.difference[
    From = 2009-07-01, 
    Till = now, 
    YEARS, MONTHS, DAYS
]: yyyy-MM-dd

$$-&gt; *unemployed -&gt; date.translate[ YEARS, MONTHS, DAYS ] -&gt; print[""Unemployed for:"", .]
</code></pre>

<p>Of course, this would also be useful and required for exact interest rate calculations.</p>
"
5119965,"<p>This is what worked for me:</p>

<pre><code>var Date1 = new Date(dateObject1.toDateString()); //this sets time to 00:00:00
var Date2 = new Date(dateObject2.toDateString()); 
//do a normal compare
if(Date1 &gt; Date2){ //do something }
</code></pre>
"
5701868,"<p>I thought I would share some good fortune I had in dealing with this issue.  I am using JDK 1.6.0_23 and so I cannot benefit from NIO2.  I am building and running on Windows 7 /x64 ONLY so mileage may vary in other environments.  Unfortunately, other solutions here did not work for me in avoiding NullPointerExceptions caused when attempting to traverse a junction (probably because junction != symlink....).  While I am not constrained by JDK version, I decided to keep at the problem for a bit longer.</p>

<p>I had this code which would cause a NullPointerException if used on a symbolic link or when encountering the 'System Volume Information' directory.  (Note, traverseItem.f() returns an object of type java.io.File)</p>

<pre><code>if (traverseItem.f().isDirectory) {
    for (File item : traverseItem.f().listFiles()) {
</code></pre>

<p>So, it is supposedly a directory but calling listFiles() on it causes an NPE.  What to do?  I spied the list() method and wondered if it would exhibit the same behavior.  What I discovered was the following:</p>

<p>Calling list() on a File describing an empty folder returns a String[] array of length zero.  However, calling list() on a File describing a junction which would otherwise crash from listFiles() returns null</p>

<p>I was able to avoid the NullPointerExceptions by adding the following test before calling listFiles()</p>

<pre><code>    String[] contents = traverseItem.f().list();
    if (contents != null) {  //Non-traversible if null, possibly junction or ???
</code></pre>

<p>It remains to exhaustively test all cases of junction, symbolic link, hard link, and dare I mention it, shortcut, but this may help some.</p>
"
7329242,"<p>I enclose my example code with <code>&lt;pre class=""brush: java""&gt;&lt;/pre&gt;</code> tags and use <a href=""http://alexgorbatchev.com/SyntaxHighlighter/manual/older_versions.html"" rel=""nofollow"">SyntaxHighlighter</a> for published javadocs. It doesn't hurt IDE and makes published code examples beautiful.</p>
"
7763961,"<p>if you have parent and client frame and you want to make child frame as model.</p>

<pre><code>&lt;YOUR_CHILD_FRAME_INSTANCE&gt;.setAlwaysOnTop(true);
</code></pre>

<p>And it will Do.</p>
"
8226091,"<p>Another option might be to use a special value internally (-1 or Integer.MIN_VALUE or similar), but expose the integer as two methods:</p>

<pre><code>hasValue() {
    return (internalValue != -1);
}

getValue() {
    if (internalValue == -1) {
        throw new IllegalStateException(
            ""Check hasValue() before calling getValue()."");
    }
    return internalValue;
}
</code></pre>
"
8293834,"<pre><code>DateFormat df = DateFormat.getDateTimeInstance(DateFormat.FULL, DateFormat.FULL);
df.setTimeZone(TimeZone.getTimeZone(""PST""));
final String dateTimeString = df.format(new Date());
</code></pre>
"
11197724,"<p>If you are usgin Mysql a date column can be passed a String representation of this date</p>

<p>so i using the DateFormatter Class to format it and then set it as a String in the sql statement or prepared statement</p>

<p>here is the code illustration:</p>

<pre><code>private String converUtilDateToSqlDate(java.util.Date utilDate) {
    SimpleDateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd"");
    String sqlDate = sdf.format(utilDate);
    return sqlDate;
}
</code></pre>

<p>String date = converUtilDateToSqlDate(otherTransaction.getTransDate());</p>

<p>//then pass this date in you sql statement</p>
"
11632692,"<p>I was reviewing code this morning and one of my colleagues had a different approach, just pass the parameter using <code>setString(""name1','name2','name3"")</code>.</p>

<p><strong>Note:</strong> I skipped the single quote at the beginning and end because these are going to be added by the <code>setString</code>. </p>
"
11969461,"<p>parsing is the division of text in to a set of parts or tokens</p>

<pre><code>    stringtokenizer to parsing process lexer or scanner
</code></pre>
"
12102822,"<p>You can try using a method that I made. </p>

<p><code>String key</code> - will be the order you want and in this case in alphabetically. Just put ""abc..."".</p>

<p><code>String list[]</code> - the list you want to put in order using key.</p>

<p><code>int index</code> - set as 0, will set the offset for the key.</p>

<pre><code>    public static String[] order(String key, String list[], int index) {
    ArrayList&lt;String&gt; order_List = new ArrayList&lt;String&gt;();
    ArrayList&lt;String&gt; temp_Order_List = null;
    char[] key_char = key.toCharArray();
    for (int offset = 0; offset &lt; key_char.length; offset++) {
        if (key_char.length &gt;= offset + index) {
            String str = (index &gt; 1 ? list[0].substring(0, index - 1) : """")
                    + new String(key_char, offset, 1);
            for (int i = 0; i &lt; list.length; i++) {
                temp_Order_List = new ArrayList&lt;String&gt;();
                for (int k = 0; k &lt; list.length; k++) {
                    if (!order_List.contains(list[k])
                            &amp;&amp; !temp_Order_List.contains(list[k])) {
                        if (list[k].equalsIgnoreCase(str))
                            order_List.add(list[k]);
                        else if (list[k].toLowerCase().startsWith(str.toLowerCase())) {
                            temp_Order_List.add(list[k]);

                        }
                    }
                }
                if (temp_Order_List.size() &gt; 0) {
                    if (temp_Order_List.size() &gt; 1) {
                        String[] add = order(key,
                                temp_Order_List.toArray(new String[temp_Order_List
                                        .size()]), index + 1);
                        for (String s : add) {
                            order_List.add(s);
                        }
                    } else {
                        order_List.add(temp_Order_List.get(0));
                    }
                }
            }
        }
    }
    return order_List.toArray(new String[order_List.size()]);
}
</code></pre>
"
653704,"<p>For ints,  int n1 and int n2;</p>

<pre><code>return ("""" + n1).charAt(0) == ("""" + n2).charAt(0);
</code></pre>
"
12352072,"<p>In order to avoid possible ClassCastException, I would do:</p>

<pre><code>                try{
                    yourString = (String) object;
                } catch (ClassCastException e){
                    yourString = object.toString();
                }
</code></pre>
"
14065399,"<pre><code>package com.nisarg.threads;


public class CurrentlyActiveThreads {
    public static void main(String[] args) {
        ThreadGroup threadGroup = Thread.currentThread().getThreadGroup();
        ThreadGroup parent;
        while((parent = threadGroup.getParent()) != null) {
            if(null != threadGroup) {
                threadGroup = parent;
                if(null != threadGroup) {
                    Thread [] threadList = new Thread[threadGroup.activeCount()];
                    threadGroup.enumerate(threadList);
                    for (Thread thread : threadList)
                        System.out.println(new StringBuilder().append(thread.getThreadGroup().getName())
                                .append(""::"").append(thread.getName()).append(""::PRIORITY:-"")
                                .append(thread.getPriority()));
                }
            }
        }
    }
}
</code></pre>
"
14385259,"<pre><code>private void WaitTimer(long ms)
{
    long t = 0;
    long x = System.currentTimeMillis();

    while(t &lt; ms)
    {
       t = System.currentTimeMillis() - x;
    }
}
</code></pre>
"
703650,"<p>Would be nice to know what you exactly want to do. </p>

<p>This seams more like a quiz.
My solution would be something like this:</p>

<pre><code>Arrays.sort(abcd);
A = Arrays.binarySearch(abcd, A) + 1;
B = Arrays.binarySearch(abcd, B) + 1;
C = Arrays.binarySearch(abcd, C) + 1;
D = Arrays.binarySearch(abcd, D) + 1;
</code></pre>

<p>assuming time is not an issue and unique values...  </p>

<p>OR,  </p>

<p>if allowed, create a mutable Integer to use instead of the primitive int:  </p>

<pre><code>Int A = new Int(300);
Int B = new Int(400);
Int C = new Int(1000);
Int D = new Int(500);

Int []abcd = {A,B,C,D};
Arrays.sort(abcd);
for (int i = 0; i &lt; abcd.length; i++)
    abcd[i].setInt(i+1);
</code></pre>
"
15523953,"<p>In case you are into functional this is a function written in Scala showing how you could copy an input stream to an output stream using only vals (and not vars).</p>

<pre><code>def copyInputToOutputFunctional(inputStream: InputStream, outputStream: OutputStream,bufferSize: Int) {
  val buffer = new Array[Byte](bufferSize);
  def recurse() {
    val len = inputStream.read(buffer);
    if (len &gt; 0) {
      outputStream.write(buffer.take(len));
      recurse();
    }
  }
  recurse();
}
</code></pre>

<p><em>Note that this is not recommended to use in a java application with little memory available because with a recursive function you could easily get a stack overflow exception error</em></p>
"
723452,"<p>You are probably seeing only 50% due to java not using the second core of your CPU.</p>

<p>Your code will do the addition and comparison as fast as the CPU can do them.</p>

<pre><code>// wait 16 milliseconds to cap frame rate to 60 fps
while (System.nanoTime() &lt; lastFrame + 16000000)        {
  Thread.yield();
}
</code></pre>

<p>Use Thread.sleep(16) instead of the tight while loop with lots of math.</p>
"
16653297,"<p>The <a href=""http://grabz.it/"" rel=""nofollow"">GrabzIt</a> service provides a <a href=""http://grabz.it/api/java/"" rel=""nofollow"">Java API</a> that allows you to take sscreenshots of web pages. To take a screenshot just do something like:</p>

<pre><code>GrabzItClient grabzIt = new GrabzItClient(""APPLICATION KEY"", ""APPLICATION SECRET"");
grabzIt.SetImageOptions(""http://www.google.com""); 
grabzIt.Save(""http://www.example.com/handler"");

//Or to save straight to disk 
grabzit.SaveTo(""test.jpg"");
</code></pre>
"
20349948,"<p>Guys an really useful Library we use in our GWT product is Joda time 
import org.joda.time.DateTime;</p>

<pre><code>Date date = new DateTime(mostDateFormats).toDate();
</code></pre>

<p>No more date missions</p>
"
20551199,"<p>i am using the following code please try it out</p>

<pre><code>DateFormat fm= new SimpleDateFormatter();
</code></pre>

<p>specify the format of the date you want
for example <code>""DD-MM_YYYY""</code> or <code>'YYYY-mm-dd'</code>  then use the java Date datatype as</p>

<pre><code>fm.format(""object of java.util.date"");
</code></pre>

<p>then it will parse your date</p>
"
23193061,"<p>To resolve this issue just change the method </p>

<pre><code>public void setUpBeforeClass 
</code></pre>

<p>to </p>

<pre><code>public static void setUpBeforeClass()
</code></pre>

<p>and all that are defined in this method to <code>static</code>.</p>
"
24531107,"<p>Other method :</p>

<pre><code>public void setValues(PreparedStatement ps) throws SQLException {
    // first param inside IN clause with myList values
    ps.setObject(1 , myList.toArray(), 2003); // 2003=array in java.sql.Types
}
</code></pre>
"
24623614,"<p>With <a href=""http://www.joda.org/joda-time/"" rel=""nofollow"">Joda-Time</a> since version 2.0 you can use <code>LocalDate.toDate()</code>.</p>

<p>Simply
</p>

<pre><code>// someDatetime is whatever java.util.Date you have.
Date someDay = new LocalDate(someDatetime).toDate();
</code></pre>
"
24822569,"<p>""sealed and readonly"" cannot used for variables. For variables use <code>const</code> keyword to get an equivalent effect.</p>
"
24849939,"<p>Got the same error but probably for the other (yet unknown) reason.</p>

<p>I was casting exported object to the type of my remote interface and then while binding to name I was getting NoSuchObjectException. Removing casting fixed the problem.</p>

<p>Briefly:</p>

<pre><code>public interface MyRemoteInterface extedns Remote {
    ...
}

public class MyRemoteObject implements MyRemoteInterface {
    ...
}

public static MyRemoteObject obj = new MyRemoteObject();

public static void main(String[] args) {
    //removing cast to MyRemoteInterface fixes the problem
    this.obj = UnicastRemoteObject.exportObject((MyRemoteInterface) this.obj, 0);

    //unless the above cast is removed, this throws NoSuchObjectException occasionally
    LocateRegisry.getRegistry(""127.0.0.1"", 1099).bind(""name"", this.obj);
}
</code></pre>
"
26088324,"<p><code>median = (a+b+c) - Math.min(min(a,b),c) - Math.max(max(a,b),c)</code></p>

<p>This is the basic one, i don't know how efficient this would work but these functions use if conditions after all. If you would like you can turn this statement into if-else statements, yet it will take time. Why so lazy?</p>
"
909971,"<p>int q = 5, r= 5;
     int [][] x = new int [q][r]</p>

<pre><code>for(int i = 0, i &lt; q * r, i++)
{
    int xaxis = i / q;
    int yaxis = i % r;

    x[xaxis][yaxis] = rg.nextInt();
}
</code></pre>

<p>Though I don't know why you'd want to... you still have the same number of iterations
and this is IMHO more difficult to read and requires more mathematical calculations to run, so it's probably slower if you profile it</p>
"
27464624,"<p>To serialize somethiing you will need object in entry.  What you can do is put your object in collection of objects, and after that make loop to get iterator and put them in byte array.  Then, call <code>ByteBuffer.allocate(byte[].length)</code>.  That is what I did and it worked for me.</p>
"
27814948,"<pre><code>//Here is sorted List alphabetically with syncronized
package com.mnas.technology.automation.utility;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;

import org.apache.log4j.Logger;
/**
* 
* @author manoj.kumar
*/
public class SynchronizedArrayList {
static Logger log = Logger.getLogger(SynchronizedArrayList.class.getName());
@SuppressWarnings(""unchecked"")
public static void main(String[] args) {

List&lt;Employee&gt; synchronizedList = Collections.synchronizedList(new ArrayList&lt;Employee&gt;());
synchronizedList.add(new Employee(""Aditya""));
synchronizedList.add(new Employee(""Siddharth""));
synchronizedList.add(new Employee(""Manoj""));
Collections.sort(synchronizedList, new Comparator() {
public int compare(Object synchronizedListOne, Object synchronizedListTwo) {
//use instanceof to verify the references are indeed of the type in question
return ((Employee)synchronizedListOne).name
.compareTo(((Employee)synchronizedListTwo).name);
}
}); 
/*for( Employee sd : synchronizedList) {
log.info(""Sorted Synchronized Array List...""+sd.name);
}*/

// when iterating over a synchronized list, we need to synchronize access to the synchronized list
synchronized (synchronizedList) {
Iterator&lt;Employee&gt; iterator = synchronizedList.iterator();
while (iterator.hasNext()) {
log.info(""Sorted Synchronized Array List Items: "" + iterator.next().name);
}
}

}
}
class Employee {
String name;
Employee (String name) {
this.name = name;

}
}
</code></pre>
"
929769,"<p>This is an exercise from the book Objects First With Java.It is as below.The pickDefaultResponse() generates a response using an ArrayList and getting an randomly generated integer and using it as the index of the ArrayList.<strong>This works But what I wanted to overcome was filling up two Lists</strong>.Here the HashMap instance responseMap as well as ArrayList instance defaultResponses both has to be filled up separately.</p>

<pre><code>import java.util.HashMap;
import java.util.HashSet;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Random;

/**
 * The responder class represents a response generator object.
 * It is used to generate an automatic response, based on specified input.
 * Input is presented to the responder as a set of words, and based on those
 * words the responder will generate a String that represents the response.
 *
 * Internally, the reponder uses a HashMap to associate words with response
 * strings and a list of default responses. If any of the input words is found
 * in the HashMap, the corresponding response is returned. If none of the input
 * words is recognized, one of the default responses is randomly chosen.
 * 
 * @version    1.0
 * @author     Michael Kolling and David J. Barnes
 */
public class Responder
{
    // Used to map key words to responses.
    private HashMap&lt;String, String&gt; responseMap;
    // Default responses to use if we don't recognise a word.
    private ArrayList&lt;String&gt; defaultResponses;
    private Random randomGenerator;

    /**
     * Construct a Responder
     */
    public Responder()
    {
        responseMap = new HashMap&lt;String, String&gt;();
        defaultResponses = new ArrayList&lt;String&gt;();
        fillResponseMap();
        fillDefaultResponses();
        randomGenerator = new Random();
    }

    /**
     * Generate a response from a given set of input words.
     * 
     * @param words  A set of words entered by the user
     * @return       A string that should be displayed as the response
     */
    public String generateResponse(HashSet&lt;String&gt; words)
    {
        Iterator&lt;String&gt; it = words.iterator();
        while(it.hasNext()) {
            String word = it.next();
            String response = responseMap.get(word);
            if(response != null) {
                return response;
            }
        }
        // If we get here, none of the words from the input line was recognized.
        // In this case we pick one of our default responses (what we say when
        // we cannot think of anything else to say...)
        return **pickDefaultResponse();**
    }

    /**
     * Enter all the known keywords and their associated responses
     * into our response map.
     */
    private void fillResponseMap()
    {
        responseMap.put(""crash"", 
                        ""Well, it never crashes on our system. It must have something\n"" +
                        ""to do with your system. Tell me more about your configuration."");
        responseMap.put(""crashes"", 
                        ""Well, it never crashes on our system. It must have something\n"" +
                        ""to do with your system. Tell me more about your configuration."");
        responseMap.put(""slow"", 
                        ""I think this has to do with your hardware. Upgrading your processor\n"" +
                        ""should solve all performance problems. Have you got a problem with\n"" +
                        ""our software?"");
        responseMap.put(""performance"", 
                        ""Performance was quite adequate in all our tests. Are you running\n"" +
                        ""any other processes in the background?"");
        responseMap.put(""bug"", 
                        ""Well, you know, all software has some bugs. But our software engineers\n"" +
                        ""are working very hard to fix them. Can you describe the problem a bit\n"" +
                        ""further?"");
        responseMap.put(""buggy"", 
                        ""Well, you know, all software has some bugs. But our software engineers\n"" +
                        ""are working very hard to fix them. Can you describe the problem a bit\n"" +
                        ""further?"");
        responseMap.put(""windows"", 
                        ""This is a known bug to do with the Windows operating system. Please\n"" +
                        ""report it to Microsoft. There is nothing we can do about this."");
        responseMap.put(""macintosh"", 
                        ""This is a known bug to do with the Mac operating system. Please\n"" +
                        ""report it to Apple. There is nothing we can do about this."");
        responseMap.put(""expensive"", 
                        ""The cost of our product is quite competitive. Have you looked around\n"" +
                        ""and really compared our features?"");
        responseMap.put(""installation"", 
                        ""The installation is really quite straight forward. We have tons of\n"" +
                        ""wizards that do all the work for you. Have you read the installation\n"" +
                        ""instructions?"");
        responseMap.put(""memory"", 
                        ""If you read the system requirements carefully, you will see that the\n"" +
                        ""specified memory requirements are 1.5 giga byte. You really should\n"" +
                        ""upgrade your memory. Anything else you want to know?"");
        responseMap.put(""linux"", 
                        ""We take Linux support very seriously. But there are some problems.\n"" +
                        ""Most have to do with incompatible glibc versions. Can you be a bit\n"" +
                        ""more precise?"");
        responseMap.put(""bluej"", 
                        ""Ahhh, BlueJ, yes. We tried to buy out those guys long ago, but\n"" +
                        ""they simply won't sell... Stubborn people they are. Nothing we can\n"" +
                        ""do about it, I'm afraid."");
    }

    /**
     * Build up a list of default responses from which we can pick one
     * if we don't know what else to say.
     */
    private void fillDefaultResponses()
    {
        defaultResponses.add(""That sounds odd. Could you describe that problem in more detail?"");
        defaultResponses.add(""No other customer has ever complained about this before. \n"" +
                             ""What is your system configuration?"");
        defaultResponses.add(""That sounds interesting. Tell me more..."");
        defaultResponses.add(""I need a bit more information on that."");
        defaultResponses.add(""Have you checked that you do not have a dll conflict?"");
        defaultResponses.add(""That is explained in the manual. Have you read the manual?"");
        defaultResponses.add(""Your description is a bit wishy-washy. Have you got an expert\n"" +
                             ""there with you who could describe this more precisely?"");
        defaultResponses.add(""That's not a bug, it's a feature!"");
        defaultResponses.add(""Could you elaborate on that?"");
    }

    /**
     * Randomly select and return one of the default responses.
     * @return     A random default response
     */
    private String **pickDefaultResponse()**
    {
        // Pick a random number for the index in the default response list.
        // The number will be between 0 (inclusive) and the size of the list (exclusive).
        int index = randomGenerator.nextInt(defaultResponses.size());
        return defaultResponses.get(index);
    }
}
</code></pre>
"
29450951,"<pre><code>         Set s=map.entrySet();
         Iterator iter = s.iterator();
         while (iter.hasNext()) 
         {
         Map.Entry entry =(Map.Entry)iter.next();
         if(""sample"".equals(entry.getKey()))
         {
         iter.remove();
         }
         }
</code></pre>
"
29494914,"<p>class Graph {
    private List> vertices;</p>

<pre><code>private static class Vertex&lt;E&gt; {
    E elem;
    List&lt;Vertex&lt;E&gt;&gt; neighbors;
}
</code></pre>

<p>}</p>
"
981687,"<pre><code>File dir = new File(""BASE DIRECTORY PATH"");
FileFilter ff = new FileFilter() {

	@Override
	public boolean accept(File f) {
		//only want zip files
		return (f.isFile() &amp;&amp; f.getName().toLowerCase().endsWith("".zip""));
	}
};

File[] list = null;
while ((list = dir.listFiles(ff)).length &gt; 0) {
	File file1 = list[0];
	//TODO unzip the file to the base directory
}
</code></pre>
"
1000308,"<p>To move/rename a file you can use this function:</p>

<pre><code>BOOL WINAPI MoveFile(
  __in  LPCTSTR lpExistingFileName,
  __in  LPCTSTR lpNewFileName
);
</code></pre>

<p>It is defined in kernel32.dll.</p>
"
1075692,"<p>It depends on what concrete List class you are using.  The abstract class AbstractCollection has a method called containsAll(Collection) that takes another collection ( a List is a collection) and:</p>

<blockquote>
  <p>Returns true if this collection contains all of the elements in the specified collection. </p>
</blockquote>

<p>So if an ArrayList is being passed in you can call this method to see if they are exactly the same.</p>

<pre><code>       List foo = new ArrayList();
	List bar = new ArrayList();
	String str = ""foobar"";

	foo.add(str);
	bar.add(str);

	foo.containsAll(bar);
</code></pre>

<p>The reason for containsAll() is because it iterates through the first list looking for the match in the second list.  So if they are out of order equals() will not pick it up.</p>

<p>EDIT:
I just want to make a comment here about the amortized running time of performing the various options being offered.  Is running time important?  Sure.  Is it the only thing you should consider?  No.</p>

<p>The cost of copying EVERY single element from your lists into other lists takes time, and it also takes up a good chunk of memory (effectively doubling the memory you are using).</p>

<p>So if memory in your JVM isn't a concern (which it should generally be) then you still need to consider the time it takes to copy every element from two lists into two TreeSets.  Remember it is sorting every element as it enters them.  </p>

<p>My final advice?  You need to consider your data set and how many elements you have in your data set, and also how large each object in your data set is before you can make a good decision here.  Play around with them, create one each way and see which one runs faster.  It's a good exercise.</p>
"
1089339,"<p>I don't know if it would fit your needs, but you can always have these constants defined in an interface and have all your classes just implement this interface. Then using some smart RegExp as others suggest you could get rid of all <code>Foo.</code> occurences.</p>

<p>Example:</p>

<pre><code>public interface Foo {
   static final String constant1 = ""Some"";
   static final String constant2 = ""Value"";
   //...
}
</code></pre>

<p>And then</p>

<pre><code>public class YourClass implements Foo {
   public YourClass() {
      System.out.println(""Hello "" + constant1);
   }
}
</code></pre>
"
1235046,"<pre><code> setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
</code></pre>
"
1283358,"<p>All forms of concurrency control can be provided by the Java synchronization primitives by constructing more <a href=""http://en.wikipedia.org/wiki/Semaphore%5F%28programming%29"" rel=""nofollow"">complex</a> <a href=""http://en.wikipedia.org/wiki/Monitor%5F%28synchronization%29"" rel=""nofollow"">concurrency</a> <a href=""http://en.wikipedia.org/wiki/Barrier%5F%28computer%5Fscience%29"" rel=""nofollow"">controls</a> that suit your problem.</p>

<p>The reasons for deprecation are clearly given in the link you provide. If you're willing to accept the reasons why, then feel free to use those features.</p>

<p>However, if you choose to use those features, you also accept that support for those features could stop at any time.</p>

<p><strong>Edit:</strong> I'll reiterate the reason for deprecation as well as how to avoid them.</p>

<p>Since the only danger is that objects that can be referenced by the <code>stop</code>ed thread could be corrupted, simply <code>clone</code> the <code>String</code> before you pass it to the <code>Thread</code>. If no shared objects exist, the threat of corrupted objects in the program outside the <code>stop</code>ed <code>Thread</code> is no longer there.</p>
"
1307714,"<p>Replace your static functions with non-static ones. Instead of</p>

<pre><code>Utils.do_something(...)
</code></pre>

<p>do</p>

<pre><code>new Utils().do_something(...)
</code></pre>
"
1337415,"<p>You can also have a look at <a href=""http://refspecs.freestandards.org/LSB%5F3.1.0/LSB-Core-generic/LSB-Core-generic/lsbrelease.html"" rel=""nofollow"">lsb_release</a></p>

<pre><code>lsb_release -a
</code></pre>

<p>would give you something like:</p>

<pre><code>cyril@merlin:~$ lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 8.10
Release:    8.10
Codename:   intrepid
</code></pre>
"
1364034,"<p>You can write method which will return two-elements array which contents are swapped parameters to that method.</p>

<pre><code>static Object[] swap(Object a, Object b) {
    return new Object[]{b,a};
}
</code></pre>
"
1436245,"<p>Wicket uses the following method to escape html, located in: org.apache.wicket.util.string.Strings</p>

<pre><code>public static CharSequence escapeMarkup(final String s, final boolean escapeSpaces,
	final boolean convertToHtmlUnicodeEscapes)
{
	if (s == null)
	{
		return null;
	}
	else
	{
		int len = s.length();
		final AppendingStringBuffer buffer = new AppendingStringBuffer((int)(len * 1.1));

		for (int i = 0; i &lt; len; i++)
		{
			final char c = s.charAt(i);

			switch (c)
			{
				case '\t' :
					if (escapeSpaces)
					{
						// Assumption is four space tabs (sorry, but that's
						// just how it is!)
						buffer.append(""&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"");
					}
					else
					{
						buffer.append(c);
					}
					break;

				case ' ' :
					if (escapeSpaces)
					{
						buffer.append(""&amp;nbsp;"");
					}
					else
					{
						buffer.append(c);
					}
					break;

				case '&lt;' :
					buffer.append(""&amp;lt;"");
					break;

				case '&gt;' :
					buffer.append(""&amp;gt;"");
					break;

				case '&amp;' :

					buffer.append(""&amp;amp;"");
					break;

				case '""' :
					buffer.append(""&amp;quot;"");
					break;

				case '\'' :
					buffer.append(""&amp;#039;"");
					break;

				default :

					if (convertToHtmlUnicodeEscapes)
					{
						int ci = 0xffff &amp; c;
						if (ci &lt; 160)
						{
							// nothing special only 7 Bit
							buffer.append(c);
						}
						else
						{
							// Not 7 Bit use the unicode system
							buffer.append(""&amp;#"");
							buffer.append(new Integer(ci).toString());
							buffer.append(';');
						}
					}
					else
					{
						buffer.append(c);
					}

					break;
			}
		}

		return buffer;
	}
}
</code></pre>
"
1445334,"<p>It is a very easy problem to solve: Use <code>List&lt;T&gt;</code>!</p>

<p>Arrays of reference type should be avoided.</p>

<p>In the current version of Java (1.7), you can mark method with <a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/SafeVarargs.html"" rel=""nofollow""><code>@SafeVargs</code></a> which will remove the warning from the caller. Careful with that though, and you're still better off without legacy arrays.</p>

<p>See also the <a href=""http://docs.oracle.com/javase/7/docs/technotes/guides/language/non-reifiable-varargs.html"" rel=""nofollow"">Improved Compiler Warnings and Errors When Using Non-Reifiable Formal Parameters with Varargs Methods</a> tech note.</p>
"
1613708,"<p>An alternative solution to your RunListener approach:</p>

<p>Enclose your test in a try-catch block and do the screenshot in the catch block, that's what i always do.</p>

<p>Example java code:</p>

<pre><code>public void testEnterFormFields()
  try {
    enterFormFields();
  } catch(SeleniumException e) {
    //do screenshot, logging, dumping, stacktracing or whatever here
  }
}
</code></pre>

<p>You could catch Throwable or Exception as well, if your coding rules allow it, but it makes sense to catch the specific Exception one by one. This approach produces a bit more clutter in your code but it will help you a lot in case of failure analysis. You can tailor your exception handling to the type of error. You maybe want to capture other informations in case of an AssertionError than in case of a SeleniumException.</p>
"
1632103,"<pre><code>	double d = 56789;
	String s = d+"""";
</code></pre>
"
1652802,"<p>ummm, would this work for you?</p>

<pre><code>for(int i = 0;i &lt; myobj.size();i++)
{   
    myobj.at(i).doSomething();
    myobj.at(i).doSomethingElse();
}
</code></pre>
"
1700562,"<p>2 important questions:</p>

<ol>
<li><p>Which web technology are you using? JSF, Struts, SpringMVC or just plain servlets/JSPs.</p>

<ul>
<li><p>Servlets/JSPs already give you the session support you need.<br> JSP Example: <code>Hello, &lt;%= session.getAttribute( ""theName"" ) %&gt;</code></p></li>
<li><p>I really don't think you have something to worry about cookies, since the data is stored safely in the server and handeling the cookie is done automaticlly.</p></li>
</ul></li>
<li><p>Is your application installed on a single server?</p>

<ul>
<li><p>If YES than you have no problem, use the servlet session option.</p></li>
<li><p>if NO than you gotta find another way to do this. Like using a sticky session, or maybe parse the entire session object in the requests/responses as a field. This option indeed requires you to take security measures.     </p></li>
</ul></li>
</ol>
"
1757124,"<p>I would do something like this:</p>

<pre><code>boolean foundQuote = false;

if(charAtIndex(currentStringIndex) == '""')
{
   foundQuote = true;
}

if(foundQuote == true)
{
   //do nothing
}

else 

{
  string[] split = currentString.split(',');  
}
</code></pre>
"
1901833,"<p>If your ExecutorService is single threaded then there is no shared state, so I don't see how there could be any issues around that.</p>

<p>However wouldn't it make more sense to pass a new instance of your <code>Test</code> class to each call to <code>execute()</code>? i.e.</p>

<pre><code>for (int i=0; i&lt;10; ++i)
    ex.execute(new Test());
</code></pre>

<p>This way there will not be any shared state.</p>
"
1908077,"<p>Why not make one .java file like this:</p>

<p>Empty.java</p>

<pre><code>class Empty{
}
</code></pre>

<p>and one class like this:</p>

<p>NotEmpty.java</p>

<pre><code>class NotEmpty{
   boolean b;
}
</code></pre>

<p>Compile them both and compare the .class files with a hex editor.</p>
"
1957439,"<p>There are some good answers here:</p>

<p><a href=""http://stackoverflow.com/questions/658936/is-there-a-library-to-convert-java-pojos-to-and-from-json-and-xml"">http://stackoverflow.com/questions/658936/is-there-a-library-to-convert-java-pojos-to-and-from-json-and-xml</a></p>

<p><strong>EDIT</strong>: from this link:</p>

<p><a href=""http://jackson.codehaus.org/Tutorial"" rel=""nofollow"">http://jackson.codehaus.org/Tutorial</a></p>

<p>you have an example using the ObjectMapper():</p>

<pre><code>ObjectMapper mapper = new ObjectMapper(); // can reuse, share globally
User user = mapper.readValue(new File(""user.json""), User.class);
</code></pre>

<p>i.e. you have to have your java class/POJO already defined, but once it is you can create an instance of this class very quickly.</p>
"
1973594,"<p>Delegates in C# look ugly to me. (declaring something as variable, and then adding <code>()</code> after it feels bad in OOP)</p>

<p>Besides, if you want : ""The delegate object can then be passed to code which can call the referenced method, without having to know at compile time which method will be invoked.</p>

<p>you can simply use <code>java.lang.reflect.Method</code></p>

<p>Edit: As you said, using reflection is not a good approach. This is true, but using delegates, in an OOP perspective, is not a better approach, in my opinion. It is a functional-language construct.</p>
"
1984427,"<p>As others have pointed out the WindowListener is what you are after... but you should do this from now on when overriding a method:</p>

<pre><code>this.addWindowStateListener(
    new WindowAdapter() 
    {
        @Overrides
        public void windowClosing(WindowEvent e) 
        {
            ExitAction.getInstance().actionPerformed(null);
        }

    });
</code></pre>

<p>Then the compiler will tell you when you are not actually overriding a method and are instead adding a new method (that in this case will never be called).</p>
"
2000753,"<p>Try to add the buttons first and then call <code>hp.setHorizontalAlignment(""your aligment here"")</code>.</p>

<p>Good luck!</p>
"
2008227,"<p>In the past, I ran <a href=""http://www.videolan.org/"" rel=""nofollow"">VLC</a> from the command-line and used it to do my conversions (it's free, supports nearly all audio and video formats, and works on many different platforms).  If you have VLC installed on the server, you can access it this way using any language that has a <code>system()</code> command or equivalent.</p>
"
2045651,"<p>Why use regex? Since you always rely on some sort of format, you can also assume that the last brackets are the weight and location and that the weight and unit of measure is always formatted like that, e.g. with spaces.</p>

<pre><code>@Test
public void testParseWeight() throws Exception {
    String input = ""&lt;div&gt;&lt;b&gt;Item Weight  (0.51 lbs in Warehouse 3)&lt;/b&gt;&lt;/div&gt;"";
    int startPos = input.lastIndexOf('(');
    int space = input.indexOf(' ', startPos);
    String weight = input.substring(startPos + 1, space);
    String uom = input.substring(space + 1, input.indexOf(' ', space + 1));
    Number parse = NumberFormat.getNumberInstance(Locale.US).parse(weight);
    assertEquals(0.51d, parse.doubleValue(), 0.0d);
    assertEquals(""lbs"", uom);
}
</code></pre>
"
2053170,"<p>Better to avoid it. A comma is preferable, for example: <code>example/key,value/key,value</code></p>

<p>Or a slash and calculate which ones are keys and values.</p>
"
2069524,"<p>Ugly and slow and untested, but...</p>

<pre><code>int mult(a,b){
    int i, rv=0;
    for(i=0; i &lt; 31; ++i){
        if(a &amp; i&lt;&lt;i){
            rv += b &lt;&lt; i
        }
    }
    if(a &amp; 1&lt;&lt;31){ // two's complement
        rv -= b&lt;&lt;31;
    }
    return rv;
}
</code></pre>
"
2074568,"<p>Whether a getter on the returned map happens to twiddle with some internal state is unimportant, as long as the object honors its contract (which is to be a map that cannot be modified). So your question is ""barking up the wrong tree"".</p>

<p>You are right to be cautious of UnmodifiableMap, in the case where you do not have ownership and control over the map it wraps. For example</p>

<pre><code>Map&lt;String,String&gt; wrapped = new HashMap&lt;String,String&gt;();
wrapped.add(""pig"",""oink"");
Map&lt;String,String&gt; wrapper = Collections.unmodifiableMap(wrapped);
System.out.println(wrapper.size());
wrapper.put(""cow"", ""moo""); // throws exception
wrapped.put(""cow"", ""moo"");
System.out.println(wrapper.size()); // d'oh!
</code></pre>
"
2118080,"<p>Reasons why Object needs to be concrete.</p>

<ol>
<li><p>reflection<br>
see Object.getClass()</p></li>
<li><p>generic use (pre Java 5)  </p></li>
<li><p>comparison/output<br>
see Object.toString(), Object.equals(), Object.hashCode(), etc.</p></li>
<li><p>syncronization<br>
see Object.wait(), Object.notify(), etc.</p></li>
</ol>

<p>Even though a couple of areas have been replaced/deprecated, there was still a need for a concrete parent class to provide these features to every Java class.</p>

<p>The Object class  is used in reflection so code can call methods on instances of indeterminate type, i.e. 'Object.class.getDeclaredMethods()'. If Object were to be Abstract then code that wanted to participate would have to implement all abstract methods before client code could use reflection on them.</p>

<p>According to Sun, <a href=""http://java.sun.com/docs/books/tutorial/java/IandI/abstract.html"" rel=""nofollow"">An abstract class is a class that is declared abstract—it may or may not include abstract methods. Abstract classes cannot be instantiated, but they can be subclassed.</a> This also means you can't call methods or access public fields of an abstract class.</p>

<p>Example of an abstract root class:  </p>

<pre><code>abstract public class AbstractBaseClass
{
    public Class clazz;

    public AbstractBaseClass(Class clazz)
   {
       super();
       this.clazz = clazz;
   }
}
</code></pre>

<p>A child of our AbstractBaseClass: </p>

<pre><code>public class ReflectedClass extends AbstractBaseClass  
{
    public ReflectedClass() 
    {
       super(this);
    }

    public static void main(String[] args)  
    {
        ReflectedClass me = new ReflectedClass();
    }
}
</code></pre>

<p>This will not compile because it's invalid to reference 'this' in a constructor unless its to call another constructor in the same class. I can get it to compile if I change it to:  </p>

<pre><code>   public ReflectedClass()
   {
       super(ReflectedClass.class);
   }  
</code></pre>

<p>but that only works because ReflectedClass has a parent (""Object"") which is 1) concrete and 2) has a field to store the type for its children.</p>

<p>A example more typical of reflection would be in a non-static member function:    </p>

<pre><code>public void foo()
{
    Class localClass = AbstractBaseClass.clazz;  
}
</code></pre>

<p>This fails unless you change the field 'clazz' to be static.  For the class field of Object this wouldn't work because it is supposed to be instance specific. It would make no sense for Object to have a static class field.</p>

<p>Now, I did try the following change and it works but is a bit misleading. It still requires the base class to be extended to work.  </p>

<pre><code>public void genericPrint(AbstractBaseClass c)
{
    Class localClass = c.clazz;
    System.out.println(""Class is: "" + localClass);
}

public static void main(String[] args)
{
    ReflectedClass me = new ReflectedClass();
    ReflectedClass meTwo = new ReflectedClass();

    me.genericPrint(meTwo);
}
</code></pre>

<p>Pre-Java5 generics (like with arrays) would have been impossible</p>

<pre><code>Object[] array = new Object[100];
array[0] = me;
array[1] = meTwo;
</code></pre>

<p>Instances need to be constructed to serve as placeholders until the actual objects are received.</p>
"
2165513,"<p>The question as I read it (but then it's strangely formulated) is not if interface should be in their own directory or not.  The question is if you should recreate your complete directory <strong>structure</strong> (bold to emphasis what is in the question's title) where one branch would contain only interfaces, like this:</p>

<pre><code>pureooabstraction/
 |
 |_com/
   |
   |_example/
     |
     |__SomeInterface.java
     |__SomeOtherInterface.java

src/
 |
 |_com/
   |
   |_example/
     |
     |__SomeClass.java
     |__...
</code></pre>

<p>Where the <em>pureooabstraction/</em> directory <em>structure</em> would contain only ""pure abstract classes"" (from an OO point of view, not the Java 'abstract' definition), aka interfaces in Java.</p>

<p>And the petty implementation details (which don't exist at the OOA/OOD level) where ""code"" lies would go in the <em>src/</em> directory.</p>

<p>It certainly makes sense if your development process goes from OOA to OOD to OOP.</p>
"
2235708,"<pre><code>final StringBuilder result = new StringBuilder();
final StringCharacterIterator iterator = new StringCharacterIterator(str);
char character =  iterator.current();
while (character != CharacterIterator.DONE )
{
  if (character == '\\\\') {
     result.append(""\\"");
  }
  else {
    result.append(character);
  }

  character = iterator.next();
}

System.out.print(result);
</code></pre>
"
4241490,"<pre><code>byte myByte = 0x5B;

boolean bits = new boolean[8];

for(int i = 0 ; i &lt; 8 ; i++)
    bit[i] = (myByte%2 == 1);
</code></pre>

<p>The results is an array of zeros and ones where <code>1=TRUE</code> and <code>0=FALSE</code> :)</p>
"
4906921,"<p>I'm using Spring 3 and load a properties like that:</p>

<pre><code>&lt;context:property-placeholder location=""/WEB-INF/my.properties"" /&gt;
</code></pre>
"
6135002,"<p>To further clear any confusion about the two approach i.e use of</p>

<ol>
<li><code>@PostConstruct</code> and</li>
<li><code>init-method=""init""</code></li>
</ol>

<p>From personal experience, I realized that using (1) only works in a servlet container, while (2) works in any environment, even in desktop applications. So, if you would be using Spring in a standalone application, you would have to use (2) to carry out that ""call this method after initialization.</p>
"
7902679,"<pre><code>String s = ""1.210000"";
while (s.endsWith(""0"")){
    s = (s.substring(0, s.length() - 1));
}
</code></pre>

<p>This will make the string to drop the tailing 0-s.</p>
"
10055093,"<pre><code> File srcFile = new File(origFilename);
 File destFile = new File(newFilename);
 srcFile.renameTo(destFile);
</code></pre>

<p>The above is the simple code. I have tested on windows 7 and works perfectly fine.</p>
"
10204317,"<p>Incase you want to mimic what php function htmlspecialchars_decode does use php function get_html_translation_table() to dump the table and then use the java code like,</p>

<pre><code>static Map&lt;String,String&gt; html_specialchars_table = new Hashtable&lt;String,String&gt;();
static {
        html_specialchars_table.put(""&amp;lt;"",""&lt;"");
        html_specialchars_table.put(""&amp;gt;"",""&gt;"");
        html_specialchars_table.put(""&amp;amp;"",""&amp;"");
}
static String htmlspecialchars_decode_ENT_NOQUOTES(String s){
        Enumeration en = html_specialchars_table.keys();
        while(en.hasMoreElements()){
                String key = en.nextElement();
                String val = html_specialchars_table.get(key);
                s = s.replaceAll(key, val);
        }
        return s;
}
</code></pre>
"
10481788,"<p>Usually you do not really want a <strong>random</strong> value but rather just <strong>any</strong> value, and then it's nice doing this:</p>

<pre><code>Object selectedObj = null;
for (Object obj : map.values()) {
    selectedObj = obj;
    break;
}
</code></pre>
"
10512935,"<p>I know this is a really old thread.. But I think the best way to do this is as below:</p>

<pre><code>public class Test {

    public static void main(String args[]){
        System.out.println(String.format(""%s something"",new Double(3.456)));
        System.out.println(String.format(""%s something"",new Double(3.456234523452)));
        System.out.println(String.format(""%s something"",new Double(3.45)));
        System.out.println(String.format(""%s something"",new Double(3)));
    }
}
</code></pre>

<p>Output:</p>

<pre><code>3.456 something
3.456234523452 something
3.45 something
3.0 something
</code></pre>

<p>The only issue is the last one where .0 doesn't get removed. But if you are able to live with that then this works best. %.2f will round it to the last 2 decimal digits. So will DecimalFormat. If you need all the decimal places but not the trailing zeros then this works best.</p>
"
12592313,"<pre><code>import java.util.HashSet;
import java.util.Set;
import java.util.TreeSet;

public class HashTreeSetCompare {

    //It is generally faster to add elements to the HashSet and then
    //convert the collection to a TreeSet for a duplicate-free sorted
    //Traversal.

    //really? 
    O(Hash + tree set) &gt; O(tree set) ??
    Really???? Why?



    public static void main(String args[]) {

        int size = 80000;
        useHashThenTreeSet(size);
        useTreeSetOnly(size);

    }

    private static void useTreeSetOnly(int size) {

        System.out.println(""useTreeSetOnly: "");
        long start = System.currentTimeMillis();
        Set&lt;String&gt; sortedSet = new TreeSet&lt;String&gt;();

        for (int i = 0; i &lt; size; i++) {
            sortedSet.add(i + """");
        }

        //System.out.println(sortedSet);
        long end = System.currentTimeMillis();

        System.out.println(""useTreeSetOnly: "" + (end - start));
    }

    private static void useHashThenTreeSet(int size) {

        System.out.println(""useHashThenTreeSet: "");
        long start = System.currentTimeMillis();
        Set&lt;String&gt; set = new HashSet&lt;String&gt;();

        for (int i = 0; i &lt; size; i++) {
            set.add(i + """");
        }

        Set&lt;String&gt; sortedSet = new TreeSet&lt;String&gt;(set);
        //System.out.println(sortedSet);
        long end = System.currentTimeMillis();

        System.out.println(""useHashThenTreeSet: "" + (end - start));
    }
}
</code></pre>
"
12801685,"<p>Here is how you use <code>parseDouble</code> to convert a <code>String</code> to a <code>Double</code>:</p>

<p><strong>doubleExample.java</strong></p>

<pre><code>import java.io.BufferedReader;

import java.io.IOException;

import java.io.InputStreamReader; 

public class doubleExample {

        public static void main(String[] args) {

                Double myDouble = new Double(""0"");
                System.out.println(""Please enter a number:"");

                try
                {
                        //get the number from console
                        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
                        myDouble = Double.parseDouble(br.readLine());
                }
                //if invalid value was entered
                catch(NumberFormatException ne)
                {
                        System.out.println(""Invalid value"" + ne);
                        System.exit(0);
                }
    catch(IOException ioe)
                {
                        System.out.println(""IO Error :"" + ioe);
                        System.exit(0);
                }

                System.out.println(""Double value is "" + myDouble);
        }
}
</code></pre>
"
12900796,"<pre><code>public class Swap
{
    public static void main (String[]args)
    {
        int y = 5;
        int x = 4;
        int c;

        System.out.println(""y = ""+y);
        System.out.println(""x = ""+x);

        c=x; //c = 4
        x=y; //x = 5;
        y=c;

        System.out.println(""\n"");
        System.out.println(""y= ""+y);
        System.out.println(""x= ""+x);
    }    
}
</code></pre>
"
18580676,"<p>Try this: </p>

<pre><code>java.util.Arrays.toString(anArray).replaceAll("", "", "","")
                .replaceFirst(""^\\["","""").replaceFirst(""\\]$"","""");
</code></pre>
"
19022123,"<p><strong>Multiplication with shift and add</strong> is easy </p>

<ul>
<li>saw some solutions here but not explained </li>
<li>so here it is in full</li>
<li>basic formula: <strong>a * b = c</strong> </li>
<li>rewrite <strong>b</strong> to binary number form</li>
<li>for 32 bit numbers you get: </li>
<li><strong>a * ( b0*(2^0) + b1*(2^1) + ... + b31*(2^31) ) = c</strong></li>
<li><strong>2^i</strong> is the same as <strong>1 &lt;&lt; i</strong></li>
<li><strong>b0,...,b31</strong> are the bits from <strong>b</strong></li>
</ul>

<p>Now the obvious code (tested for unsigned 32bit ints):</p>

<pre><code>DWORD mul(DWORD a,DWORD b)
    {
    DWORD c=0,i,m;
    for (m=1,i=0;i&lt;32;i++,m&lt;&lt;=1,a&lt;&lt;=1)
     if (DWORD(b&amp;m))
      c+=a;
    return c;
    }
</code></pre>

<p>and also can be further optimized </p>

<ul>
<li>reset all used bits in b </li>
<li>then the loop can end if b==0 </li>
<li>so no need for i</li>
<li>for more speed also a>=b so swap them if not (less bits of b means less iterations)</li>
</ul>

<p>optimized code</p>

<pre><code>DWORD mul(DWORD a,DWORD b)
    {
    DWORD c;
    if (a&lt;b) { c=a; a=b; b=c; }
    for (c=0;b;b&gt;&gt;=1,a&lt;&lt;=1)
     if (DWORD(b&amp;1))
      c+=a;
    return c;
    }
</code></pre>

<p>if you need bigint multiplication have a look here <a href=""http://stackoverflow.com/questions/18465326/fast-bignum-square-computation"">Fast bignum square computation</a></p>

<ul>
<li>there are some ideas</li>
<li>the use of NTT is also possible </li>
<li>have speed it up 40x times so its usable, but still for veeeery big numbers</li>
<li>for more info look here <a href=""http://stackoverflow.com/questions/18577076/ntt-finite-field-dft-optimization"">NTT (finite field DFT) optimization</a></li>
</ul>

<p>if you need signed numbers then handle signum separately</p>

<pre><code>int mul(int a,int b)
    {
    int c,s;
    s=+1;
    if (a&lt;0) { s=-s; a=-a; }
    if (b&lt;0) { s=-s; b=-b; }
    if (a&lt;b) { c=a; a=b; b=c; }
    for (c=0;b;b&gt;&gt;=1,a&lt;&lt;=1)
     if (DWORD(b&amp;1))
      c+=a;
    if (s&lt;0) c=-c;
    return c;
    }
</code></pre>

<p>And last but not least <strong>Do not forget about OVERFLOW !!!</strong></p>

<ul>
<li>(n0)bits * (n1)bits = (n0+n1)bits</li>
<li>to avoid overflow you need to use 2N-bit shift and add arithmetics</li>
<li>so the result is also 2N-bit long</li>
</ul>

<p>hope it helps</p>
"
20493143,"<p>Easily change without any headche 
Convert any object array to string array
        Object drivex[] = {1,2};</p>

<pre><code>    for(int i=0; i&lt;drive.length ; i++)
        {
            Str[i]= drivex[i].toString();
            System.out.println(Str[i]); 
        }
</code></pre>
"
20804670,"<p>I developed my own algorithm to measure similarity. It gives reasonable comparisons with output between 0 and 1. Where 1 means equals and 0 means totally different.</p>

<pre><code>    public static float stringSimilarity(String string1, String  string2){

    //null check:
    if(string1==null || string2==null){
        return (float) 0.5;
    }


    float score = 0;//similarity between 0 y 1.

    ArrayList&lt;String&gt; charactersString1 = new  ArrayList&lt;String&gt;();
    ArrayList&lt;String&gt; charactersString2 = new  ArrayList&lt;String&gt;();

    for(int i=0 ; i &lt; string1.length() ; i++){
        String aCharacter = String.valueOf(string1.charAt(i));
        charactersString1.add(aCharacter); 
    }

    for(int i=0 ; i &lt; string2.length() ; i++){
        String aCharacter = String.valueOf(string2.charAt(i));
        charactersString2.add(aCharacter); 
    }

    //eliminate extraneous letters. 
    boolean differentSize = false;
    ArrayList&lt;String&gt; arrayLargo = new  ArrayList&lt;String&gt;();
    ArrayList&lt;String&gt; arrayCorto = new  ArrayList&lt;String&gt;();
    if(charactersString1.size() &lt; charactersString2.size()){
        arrayLargo = charactersString2;
        arrayCorto = charactersString1;
        differentSize = true;
    }else{
        if (charactersString2.size() &lt; charactersString1.size()) {
            arrayLargo = charactersString1;
            arrayCorto = charactersString2;
            differentSize = true;

        }else{//they are the same size: yeah easy!
            if (charactersString2.size() == charactersString1.size()) {
                for (int i=0 ; i &lt; charactersString1.size() ; i++) {

                    String elementoS1 = charactersString1.get(i);
                    String elementoS2 = charactersString2.get(i);

                    if (elementoS1.equalsIgnoreCase(elementoS2) ) {
                        score=score+1;
                    }else{//if the elements are different.
                        if (0&lt;i) {//if i-1 exists (ie not at the first letter).

                            String elementoS1Past = charactersString1.get(i-1);
                            String elementoS2Past = charactersString2.get(i-1);

                            if (elementoS1Past.equalsIgnoreCase(elementoS2) &amp;&amp; elementoS1.equalsIgnoreCase(elementoS2Past)) {
                                //switching letters, the score sould be increased by 1 (only 1 error
                                score = score+1;
                            }

                        }
                    }
                }
            }else{
                System.out.print(""logical error making the code in wordcorrector!"");
            }

            score = score/charactersString1.size();//normalize
        }
    }




    if (differentSize) {
        int indice=0;
        for (int i=0; i &lt; arrayCorto.size();i++) {
            String elementoS1 = arrayLargo.get(i);
            String elementoS2 = arrayCorto.get(i);

            if (elementoS1.equalsIgnoreCase(elementoS2)) {
                score=score+1;
            }else{//paila, dio cero
                boolean switched = false; //the error in the characters is initailized as it is not a switching error.
                if (i+1 &lt; arrayCorto.size()) {//if i-1 exists (ie not at the first letter).
                    String elementoS1Future = arrayLargo.get(i+1);
                    String elementoS2Future = arrayCorto.get(i+1);
                    if (elementoS1Future.equalsIgnoreCase(elementoS2)
                            &amp;&amp; elementoS1.equalsIgnoreCase(elementoS2Future)) {
                        //switching letters, the score sould be increased by 1 (only 1 error
                        score = score+1;
                        i=i+1;// so it doesnt remove the next character.
                        switched = true;//it is a switching error.
                    }
                }
                if (!switched) {
                    //Remove and Repeat (R&amp;R)
                    arrayLargo.remove(i);                       
                    indice = i;
                    i=i-1;//despues de esto no se puede volver a llamar al indice! por puede votar error
                }
            }
            if (arrayLargo.size() == arrayCorto.size()) {
                break;
            }
        }
        if (arrayLargo.size() == arrayCorto.size()) {//does conventional same size score detection.
            for (int i=indice; i &lt; charactersString1.size() &amp;&amp; i &lt; charactersString2.size() ; i++) {
                String elementoS1 = arrayLargo.get(i);
                String elementoS2 = arrayCorto.get(i);
                if (elementoS1.equalsIgnoreCase(elementoS2)) {
                    score=score+1;
                }else{//if the elements are different.
                    if (0&lt;i) {//if i-1 exists (ie not at the first letter).
                        String elementoS1Past = charactersString1.get(i-1);
                        String elementoS2Past = charactersString2.get(i-1);
                        if (elementoS1Past.equalsIgnoreCase(elementoS2)
                                &amp;&amp; elementoS1.equalsIgnoreCase(elementoS2Past)) {
                            //switching letters, the score sould be increased by 1 (only 1 error
                            score = score+1;
                        }

                    }
                }
            }
        }
        int normalize;
        if (charactersString2.size() &lt;= charactersString1.size()) {
            normalize = charactersString1.size();
        }else{
            normalize = charactersString2.size();
        }
        score = score/normalize;//normalize
    }
    return score;
}
</code></pre>
"
21156020,"<p>Yes option 2 is most widely used; although it has a severe problem: if you have a typo in the declaration of your parameter - that might go unnoticed, like:</p>

<pre><code>class Whatever { 
  String val;
  Whatever(String va1) { this.val = val; }
  void printMe() { System.out.println(val.toString()); }
  public static void main(String[] args) {
    new Whatever(""Hello"").printMe();
  }
}
</code></pre>

<p>This code compiles fine; and it takes you a second to understand what is wrong in there. If you are in doubt; just print it out; take it to your coworkers and ask them what will happen if this class is compiled and executed. My guess: 75%+ will <strong>not</strong> realize that a NullPointerException will be thrown. And if you turn to a font that ""looks the same"" for val and va1; then nobody will notice from reading ...</p>

<p>Yes, nowadays you might see a warning about that, or some code checking tool tells you that this happened; and of course, your unit tests should find it immediately.</p>

<p>But: if you avoid this pattern, and use prefixes or ""thatString"" you will never hit this problem in the first place. Thus I really don't understand why it is so commonly used.</p>

<p>So, we sat down in our team and when putting together our coding style guide we said: never use option 2.</p>
"
682001,"<p>Here's some test code which shows that <strong>the object is null until the constructor has finished running</strong>:</p>

<pre><code>public class Test {

  private static SlowlyConstructed slowlyConstructed = null;

  public static void main(String[] args) {
    Thread constructor = new Thread() {
      public void run() {
        Test.slowlyConstructed = new SlowlyConstructed();
      }
    };
    Thread checker = new Thread() {
      public void run() {
        for(int i = 0; i &lt; 10; i++) {
          System.out.println(Test.slowlyConstructed);
          try { Thread.sleep(1000); }
          catch(Exception e) {}
        }
      }
    };

    checker.start();
    constructor.start();
  }

  private static class SlowlyConstructed {
    public String s1 = ""s1 is unset"";
    public String s2 = ""s2 is unset"";

    public SlowlyConstructed() {
      System.out.println(""Slow constructor has started"");
      s1 = ""s1 is set"";
      try { Thread.sleep(5000); }
      catch (Exception e) {}
      s2 = ""s2 is set"";
      System.out.println(""Slow constructor has finished"");
    }

    public String toString() {
      return s1 + "", "" + s2;
    }
  }
}
</code></pre>

<p>Output:</p>

<pre>
null
Slow constructor has started
null
null
null
null
null
Slow constructor has finished
s1 is set, s2 is set
s1 is set, s2 is set
s1 is set, s2 is set
s1 is set, s2 is set
</pre>
"
699449,"<p>The parameter T in this case becomes useless as far as Bar is concerned, since it will be erased to Object at compile time. So you could as well ""save yourself the trouble"", and do the erasure early:</p>

<pre><code>public class Bar {

    private Foo&lt;Object&gt; foo;
    private Object t;

  ... 
}
</code></pre>
"
22690307,"<p>i think that is the solution</p>

<pre><code>ArrayList&lt;table&gt; libel = new ArrayList&lt;table&gt;();
try {
SessionFactory sf = new Configuration().configure().buildSessionFactory();
Session s = sf.openSession();
s.beginTransaction();

String hql = ""FROM table "";

org.hibernate.Query query = s.createQuery(hql);
libel= (ArrayList&lt;table&gt;) query.list();
Iterator it = libel.iterator();
while(it.hasNext()) {
table cat = (table) it.next();

cat.getLibCat();//table colonm getter


combobox.addItem(cat.getLibCat());
}
s.getTransaction().commit();
s.close();
sf.close();
} catch (Exception e) {
System.out.println(""Exception in getSelectedData::""+e.getMessage());
</code></pre>
"
22820555,"<p>Try this code:</p>

<pre><code>BigDecimal decimal = new BigDecimal(""100.25"");

BigDecimal decimal2 = new BigDecimal(""1000.70"");

BigDecimal decimal3 = new BigDecimal(""10000.00"");

DecimalFormat format = new DecimalFormat(""###,###,###,###,###.##"");

format.setDecimalSeparatorAlwaysShown(true);

format.setMinimumFractionDigits(2);

System.out.println(format.format(decimal));

System.out.println(format.format(decimal2));

System.out.println(format.format(decimal3));
</code></pre>

<p>Result: </p>

<pre><code>100.25

1,000.70

10,000.00
</code></pre>
"
728814,"<p>Ref; ""<em>My benchmarks so far show Java and C are about on par with each other</em>""</p>

<p>Then your benchmarks are severely flawed...</p>

<p>C will ALWAYS be orders of magnitudes faster then both C# and Java unless you do something seriously wrong...!</p>

<p>PS!
Notice that this is not an attempt to try to bully neither C# nor Java, I like both Java and C#, and there are other reasons why you would for many problems choose either Java or C# instead of C. But neither Java nor C# would in a correct written tests NEVER be able to perform with the same speed as C...</p>

<p><em>Edited because of the sheer number of comments arguing against my rhetoric</em></p>

<p>Compare these two buggers...</p>

<p>C#</p>

<pre><code>public class MyClass
{
   public int x;

   public static void Main()
   {
      MyClass[] y = new MyClass[1000000];
      for( int idx=0; idx &lt; 1000000; idx++)
      {
          y[idx] = new MyClass();
          y[idx].x = idx;
      }
   }
}
</code></pre>

<p>against this one (C)</p>

<pre><code>struct MyClass
{
   int x;
}

void Main()
{
   MyClass y[1000000];
   for( int idx = 0; idx &lt; 1000000; idx++)
   {
      y[idx].x = idx;
   }
}
</code></pre>

<p>The C# version first of all needs to store its array on the heap. The C version stores the array on the stack. To store stuff on the stack is merely changing the value of an integer value while to store stuff on the heap means finding a big enough chunk of memory and potentially means traversing the memory for a pretty long time.</p>

<p>Now mostly C# and Java allocates huge chunks of memory which they keep on spending till it's out which makes this logic execute faster. But even then to compare this against changing the value of an integer is like an F16 against an oil tanker speedwise...</p>

<p>Second of all in the C version since all those objects are already on the stack we don't need to explicitly create new objects within the loop. Yet again for C# this is a ""look for available memory operation"" while the C version is a ZIP (<em>do nothing operation</em>)</p>

<p>Third of all is the fact that the C version will automatically delete all these objects when they run out of scope. Yet again this is an operation which <em>ONLY CHANGES THE VALUE OF AN INTEGER VALUE</em>. Which would on most CPU architectures take between 1 and 3 CPU cycles. The C# version doesn't do that, but when the Garbage Collector kicks in and needs to collect those items my guess is that we're talking about <em>MILLIONS</em> of CPU cycles...</p>

<p>Also the C version will instantly become x86 code (on an x86 CPU) while the C# version would first become IL code. Then later when executed it would have to be JIT compiled, which probably alone takes orders of magnitudes longer time then only executing the C version.</p>

<p>Now some wise guy could probably execute the above code and measure CPU cycles. However that's basically no point at all in doing because mathematically it's proven that the Managed Version would probably take several million times the number of CPU cycles as the C version. So my guess is that we're now talking about 5-8 orders of magnitudes slower in this example. And sure, this is a ""rigged test"" in that I ""<em>looked for something to prove my point</em>"", however I challenge those that commented badly against me on this post to create a sample which does NOT execute faster in C and which also doesn't use constructs which you normally never would use in C due to ""better alternatives"" existing.</p>

<p>Note that C# and Java are GREAT languages. I prefer them over C <em>ANY TIME OF THE DAY</em>. But NOT because they're FASTER. Because they are NOT. They are <em>ALWAYS</em> slower then C and C++. Unless you've coded blindfolded in C or C++...</p>

<p>Edit;</p>

<p>C# of course have the <em>struct</em> keyword, which would seriously change the speed for the above C# version, if we changed the C# class to a value type by using the keyword <em>struct</em> instead of <em>class</em>. The struct keyword means that C# would store new objects of the given type on the stack - which for the above sample would increase the speed seriously. Still the above sample happens to also feature an array of these objects.</p>

<p>Even though if we went through and optimized the C# version like this, we would still end up with something several orders of magnitudes slower then the C version...</p>

<p>A <em>good</em> written piece of C code will <em>ALWAYS</em> be faster then C#, Java, Python and <em>whatever-managed-language-you-choose</em>...</p>

<p>As I said, I love C# and most of the work I do today is C# and not C. However I don't use C# because it's faster then C. I use C# because I don't need the speed gain C gives me for most of my problems.</p>

<p>Both C# and Java is though <em>ridiculously</em> slower then C, and C++ for that matter...</p>
"
731383,"<p>You most likely will want to use the FileInputStream class:</p>

<pre><code>int character;
StringBuffer buffer = new StringBuffer("""");
FileInputStream inputStream = new FileInputStream(new File(""/home/jessy/file.txt""));

while( (character = inputStream.read()) != -1)
        buffer.append((char) character);

inputStream.close();
System.out.println(buffer);
</code></pre>

<p>You will also want to catch some of the exceptions thrown by the read() method and FileInputStream constructor, but those are implementation details specific to your project.</p>
"
25690667,"<p>an alternative could be (for numbers!!!) </p>

<ol>
<li>multiply the Array by -1</li>
<li>sort</li>
<li>multiply once again with -1</li>
</ol>

<p>Literally spoken:</p>

<pre><code>array = -Arrays.sort(-array)
</code></pre>
"
26421198,"<p>I want to complement polygenelubricants answer:</p>

<p>I personally prefer equals(). But it lake the type compatibility check. Which I think is an important limitation.</p>

<p>To have type compatibility check at compilation time, declare and use a custom function in your enum.</p>

<pre><code>public boolean isEquals(enumVariable) // compare constant from left
public static boolean areEqual(enumVariable, enumVariable2) // compare two variable
</code></pre>

<p>With this, you got all the advantage of both solution: NPE protection, easy to read code and type compatibility check at compilation time.</p>

<p>I also recommend to add an UNDEFINED value for enum.</p>
"
26893749,"<p>if C object having null value then following statement used to compare null value:</p>

<pre><code>if (c.toString() == null) {

    System.out.println(""hello execute statement"");

}
</code></pre>
"
828278,"<p>Don't refactor just for the sake of it!</p>

<p>The only part where it's possible:</p>

<pre><code>idx_ &lt;  super.size() &amp;&amp; idx_ &gt;= 0
</code></pre>

<p>Would likely be a waste of time (stepping into the new ""isValidIndex(int)"" method might inflict a performance penalty versus the unmodified code if you do it many, many times).</p>
"
29871787,"<pre><code>new File(""/path/to/file"").exists(); 
</code></pre>

<p>will do the trick</p>
"
30028195,"<p>I'm using Windows 8.1 Pro. You can run ""As Administrator"" the CMD. After that, simply, find your jar file and execute it, like that:</p>

<pre><code>C:\yourFile.jar [enter]
</code></pre>
"
873423,"<p>I think this is pretty language-agnostic. Is this homework? It sounds like homework, so I won't give you an example, but I would use 3 <code>while</code> loops (although you could just as easily use <code>for</code> loops, I simply prefer using <code>while</code>s).</p>
"
892441,"<p>It is possible to factor out code like that in Java, although Java's syntax remains verbose</p>

<pre><code>private static final Cache&lt;Input, Output&gt; fooCache = Caches.newInstance(
    new Factory&lt;Input, Output&gt;() { public Output create(Input input) {
        return ... some code ...;
    }}
);
public static Output getFoo(Input input) {
    return fooCache.get(input);
}
</code></pre>

<p>With better syntactical support for anonymous inner classes, that could become, say:</p>

<pre><code>private static final Cache&lt;Input, Output&gt; fooCache =
    (Input input) (... some code ...);
public static Output getFoo(Input input) {
    return fooCache.get(input);
}
</code></pre>

<p>This is one thing that AOP solution can do, at the expense of having to deal with a bit of magic.</p>
"
892496,"<p><a href=""http://stackoverflow.com/questions/633508/two-argument-memoization"">This question/answer</a> addresses Memoization in C#. It doesn't cache the results, but could be easily changed to make the map static with a ReaderWriterLock.</p>

<p>Here's a sample from the <a href=""http://blogs.msdn.com/wesdyer/archive/2007/01/26/function-memoization.aspx"" rel=""nofollow"">link given</a>:</p>

<pre><code>public static Func&lt;A, R&gt; Memoize&lt;A, R&gt;(this Func&lt;A, R&gt; f)
{
  var map = new Dictionary&lt;A, R&gt;();
  return a =&gt;
    {
      R value;
      if (map.TryGetValue(a, out value))
        return value;
      value = f(a);
      map.Add(a, value);
      return value;
    };
}
</code></pre>
"
950434,"<pre><code>String s = ""prefix/dir1/dir2/dir3/dir4""

String parts[] = s.split(""/"");

System.out.println(s[0]); // ""prefix""
System.out.println(s[1]); // ""dir1""
...
</code></pre>
"
986607,"<p>If your input is structured, you can have a look at the JavaCC compiler. It generates a java class reading your input. It would look like this:</p>

<pre><code>TOKEN { &lt;CAT: ""cat""&gt; , &lt;DOG:""gog""&gt; }

input: (cat() | dog())*


cat: &lt;CAT&gt;
   {
   animals.add(new Animal(""Cat""));
   }

dog: &lt;DOG&gt;
   {
   animals.add(new Animal(""Dog""));
   }
</code></pre>
"
1052285,"<p>I am not sure what's the purpose of SlotValue in your program but it seems that you are not using their full power. You can invoke methods on enum instances or query their state. Thus you translate a switch on enum value into method invocation/state querying, as show below.</p>

<p>Side note: Once you get used to this kind of thinking (which is quite different from the thinking induced by C's enums) you realize that there's much less need for ""magic numbers"" in your code. Instead of specifying an value and then giving it some meaning you just specify the enum constant and invoke methods on it. Specifcially, my feeling is that there's no real need for associating each of your enum instances with a value (empty is 0, start is 1, etc.). </p>

<p>Anyway, here's the code:</p>

<pre><code>public class MazeNode
{
   public enum SlotValue
   {
       empty(0),
       start(1),
       wall(2),
       visited(3),
       end(9);

       private int m_representation;

       SlotValue(int representation)
       {
           m_representation = representation;
       }

       public int getRepresentation()
       {
           return m_representation;
       }

       private SlotValue next = null;

       static
       {
          empty.next = start;
          end.next = end;
       }
   }


   private SlotValue m_mazeNodeSlotValue;

   public MazeNode(SlotValue s)
   {
       m_mazeNodeSlotValue = s;
   }

   public MazeNode(int s)
   {
       m_mazeNodeSlotValue = SlotValue.values()[s].next;
   }

   public SlotValue getSlotValue()
   {
       return m_mazeNodeSlotValue;
   }
}
</code></pre>
"
723623,"<p>You may try </p>

<ul>
<li><p>Reflection based invocation or Code generation or the old preprocessing technique or</p></li>
<li><p>Strategy pattern to encapsulate what varies.</p></li>
</ul>

<pre><code>class ThirdPartyApi {
     void foo(){}  // available in all versions
     void bar(){}  // available only in new version
}

ThirdPartyApiV1 extends ThirdPartyApi {
     void foo() {
        thirdpartyV1Object.foo();
     }
}

ThirdPartyApiV2 extends ThirdPartyApi {
     void foo() {
        thirdpartyV2Object.foo();
     }
     void bar() {
        thirdpartyV2Object.bar();
     }
}

</code></pre>

<p>Use a DependencyInjection to inject the correct version of ThridPartyApi implementation. 
Otherwise use a ThirdPartyApiFactory to create the appropriate instance based on a configuration or system property value.</p>
"
756521,"<p>0.1 is NOT a binary representation of 0.5</p>

<p>Java will represent 0.5 using IEEE 754, as specified on the <a href=""http://java.sun.com/docs/books/jls/second%5Fedition/html/typesValues.doc.html#9208"" rel=""nofollow"">Java Language Specification</a>. <code>BigInteger.valueOf(Double.doubleToRawLongBits(0.5)).toByteArray()</code> will give you a byte per byte representation of 0.5 as Java does internally.</p>
"
804007,"<p>As you see, if a class tries to implement <code>Cloneable</code> and you want a <em>deep</em> clone, then all of your constituent objects needs to be immutable, primitive, or need to also be Cloneable.</p>

<p>Often, a better and easier approach is to create a copy constructor.</p>

<pre><code>public class Scope&lt;C extends Comparable&lt;C&gt;&gt; implements Comparable&lt;Scope&lt;C&gt;&gt;, Serializable {
    private C starts;
    private C ends;
    public Scope(final Scope original) {
       starts = new C(original.starts);
       ends = new C(original.ends);
       // initialize all my other fields from ""original""
    }
}
</code></pre>

<p>and of course you need a copy constructor on <code>C</code> that is capable of handling polymorphism.</p>

<p>If you have no access or ability to modify the source to <code>C</code>, then any method of copying, no matter what the method, will be very difficult and potentially impossible.  For example, it is not possible to make a copy of an <code>enum</code> instance.</p>
"
815425,"<p>Try:</p>

<pre><code>Runtime.getRuntime().exec(""'C:\Documents and Settings\Administratore\Desktop\gradpro\test1\s1.wav'"") ;
</code></pre>

<p>Note the extra single quotations.  I'm not even sure if your method will work, but give that a go. </p>
"
841170,"<p>Set it up so MyDialog(false, false, .....) is the expected default behaviour. (ie: The most common case should take all false.  You may need to reverse the semantics of the flags.)</p>

<p>Now, define constants:</p>

<pre><code>OPTION1 = 1
OPTION2 = 2
OPTION3 = 4
OPTION4 = 8
...
</code></pre>

<p>Change the method to take an int options parameter</p>

<pre><code>public void MyDialog(int options) ...
</code></pre>

<p>Now call it:  </p>

<pre><code>MyDialog(OPTION1 | OPTION3)  // enable Opt1, opt2)
</code></pre>

<p>inside the method:</p>

<pre><code>if (options &amp; OPTION1) // use Option 1 config.
</code></pre>

<p>etc.</p>
"
841232,"<p>If the GUI <strong>depends on the state</strong> of the app ( where one state leads to another )  You can take a look at the <a href=""http://en.wikipedia.org/wiki/State%5Fpattern"" rel=""nofollow"">State</a> pattern.  Where each new state will be handled by a different object and you can code whether the flags should go or no. </p>

<p>ie.</p>

<pre><code>abstract class State { 
      public abstract boolean [] getFlags();
      public abstract State next();
 }
 class InitialState extends State  { 
      public boolean [] getFlags() {
          return new boolean [] { true, true, false, false, false };
      }
      public State next() { return new MediumState(); }
 }     
 class MediumState extends State { 
     public boolean [] getFlags() { 
         return new boolean[] { false, false, true, true, false };
     }
     public State next() { return new FinalState(); }
 }
 class Final extends State { 
     public boolean [] getFlags() { 
         return new boolean[]{false, false, false, false, true };
     }
     public State next() { return null;}
  }
</code></pre>

<p>And the show your dialog using this states</p>

<pre><code>new MyDialog(showOptionsTable, new InitialState() );
</code></pre>

<p>....</p>

<p>When the state of the application changes, you change the State object.</p>

<pre><code>public void actionPerfomed( ActionEvent e ) { 
    this.state = state.next();
    repaint();
 }
</code></pre>

<p>To paint the sections of your dialog you query the state:</p>

<pre><code>  if( state.getFlags()[SECURITY] ) { 
      /// show security stuff
  } if ( state.getFlags()[VIEW_ONLY] ) { 
      // enable/disable stuff 
  } ....
</code></pre>

<p>You can go a step further ant let the State define what is presented. </p>

<pre><code>abstract class State { 
      public abstract JComponent getComponent();
      public abstract State next();
 }
</code></pre>

<p>So each state shows a different section:</p>

<pre><code> Dialog.this.setContentPane( state.getComponent() );
</code></pre>
"
841450,"<p>Coding conversions are to improve readability.  You don't have to use letters. Java allows $ symbol for example.</p>

<pre><code>public final static Color $$ = COLOR.WHITE;
public final static Color $_ = COLOR.BLACK;
</code></pre>

<p>You could number your variables too, but that doesn't mean its a good idea. ;)</p>
"
841660,"<p>I prefer flagged enums to a settings class if the parameters are all going to be boolean. If you can't guarantee that in the future though it would be better safe than sorry though. Here's another implementation for flags:</p>

<pre><code>[Flags]
public enum LayoutParams
{  
    OptionsTable = 1,  
    FooInput = 2,  
    BarInput = 4,  
    SuperUser = 8,
}

public MyDialog(LayoutParams layoutParams)
{
    if (layoutParams &amp; LayoutParams.OptionsTable)
    { /* ... Do Stuff ... */ }
}

public static MyDialog CreateBasic()
{
    return new MyDialog(LayoutParams.OptionsTable | LayoutParams.BarInput);
}
</code></pre>
"
841925,"<p>Depending on just how different your display is going to be, you might consider subclassing your display class (i.e. <code>MyDialogSuperUser</code> or somesuch).  You need to consider just how orthogonal the inputs to your dialog class are and how to express that orthogonality.</p>
"
842016,"<p>I have a favorite way to handle this, but it's not valid for all use cases.  If the booleans are not entirely independent (say there are some invalid combinations of booleans, or combinations of booleans are reached through identifiably scenarios.)  I create an enum for the state and then define a constructor that holds onto the flags:</p>

<pre><code>public enum status {
    PENDING(false,false),
    DRAFT(true,false),
    POSTED(false,true),
    ;
    public boolean isSent;
    public boolean isReceived;
    status(boolean isSent, boolean isReceived) {
        this.isSent = isSent;
        this.isReceived = isReceived;
    }
}
</code></pre>

<p>The advantage to a piece of code like this is that you can construct your enum constants relatively tersely, but still allow code to only care about one particular aspect of state.  For example:</p>

<pre><code>//I want to know specifically what the state is
if (article.state == status.PENDING)
// Do something

//I really only care about whether or not it's been sent
if (article.state.isSent)
// Do something

//I want to do something specific for all possible states
switch(article.state)
// A string of case statements
</code></pre>

<p>Another plus is that illegal states are never reached if you define your enum well:</p>

<pre><code>if (article.state.isReceived &amp;&amp; !article.state.isSent) {
// This block can never execute ever.
}
</code></pre>

<p>Granted, it's not all the time that there's a logical relationship among booleans, but I do recommend mapping them out.  If a subset of booleans have logical relationships, it might be worth breaking those off into an enum.</p>
"
891834,"<pre><code>public abstract class Parent {

    private Parent peer;

    public Parent(Parent peer) {
        this.peer = peer;
    }

    public Parent(String someString) {
    }

}

public class Child1 extends parent {
    public Child1() {
        super(new Child1())
    }
}

public class Child2 extends parent {
    public Child2() {
        super(new Child2())
    }
}
</code></pre>

<p>Here's the simplest way I can think of. You could probably do it in the parent class using some of the java reflection API though (so ask the 'this' reference what class it is and construct a new class of that type. It may not work depending on how java constructors work though. In C++, the 'this' pointer in a constructor is of the same type as the constructors class)</p>
"
1293551,"<p>Why dont you combine the following and use it to interpolate, that way circumventing may be difficult.</p>

<pre><code>public class OpertingSystemInfo 
{
    public static void main(String[] args)
    {
        String nameOS = ""os.name"";        
        String versionOS = ""os.version"";        
        String architectureOS = ""os.arch"";
    System.out.println(""\n    The information about OS"");
        System.out.println(""\nName of the OS: "" + 
System.getProperty(nameOS));
        System.out.println(""Version of the OS: "" + 
System.getProperty(versionOS));
        System.out.println(""Architecture of THe OS: "" + 
System.getProperty(architectureOS));
    }
}
</code></pre>
"
912923,"<p>Just remove the <code>final</code>s. <code>Final</code> is not essential for an immutable object.</p>
"
1333657,"<pre><code>Vector&lt;Integer&gt; v = new Vector&lt;Integer&gt;(); 
v.setElementAt( arr[x][y], arr[x][y] );
</code></pre>
"
940792,"<pre><code>int i = mylist
  .OfType&lt;int&gt;()
  .Aggregate( (soFar, next) =&gt; soFar*10 + next);
</code></pre>

<p>Well, that would work in C# anyway.</p>
"
1333662,"<p>EDIT: While answering this question, I did not know that J2ME does not support Generics. Thanks to SO for teaching me that :-)</p>

<p>EDIT 2: My solution is <strong>wrong</strong> since J2ME does not support Generics. </p>

<p>If you have used Generics (JDK 1.5 onwards), you could do it simpler! </p>

<p>If I assume the declaration to be thus,</p>

<pre><code>Vector&lt;Integer&gt; v = new Vector&lt;Integer&gt;();
</code></pre>

<p>then</p>

<pre><code>v.setElementAt(new Integer(((Integer)(v.elementAt(arr[x][y]))).intValue()+i), arr[x][y]);
</code></pre>

<p>becomes</p>

<pre><code>v.setElementAt(new Integer(v.elementAt(arr[x][y]).intValue()+i), arr[x][y]);
</code></pre>
"
950382,"<p>The following code checks the machineType field in any windows executable to determine if it is 32 or 64 bit:</p>

<pre><code>public class ExeDetect
{
  public static void main(String[] args) throws Exception {
    File x64 = new File(""C:/Program Files/Java/jre1.6.0_04/bin/java.exe"");
    File x86 = new File(""C:/Program Files (x86)/Java/jre1.6.0/bin/java.exe"");
    System.out.println(is64Bit(x64));
    System.out.println(is64Bit(x86));
  }

  public static boolean is64Bit(File exe) throws IOException {
    InputStream is = new FileInputStream(exe);
    int magic = is.read() | is.read() &lt;&lt; 8;
    if(magic != 0x5A4D) 
        throw new IOException(""Invalid Exe"");
    for(int i = 0; i &lt; 58; i++) is.read(); // skip until pe offset
    int address = is.read() | is.read() &lt;&lt; 8 | 
         is.read() &lt;&lt; 16 | is.read() &lt;&lt; 24;
    for(int i = 0; i &lt; address - 60; i++) is.read(); // skip until pe header+4
    int machineType = is.read() | is.read() &lt;&lt; 8;
    return machineType == 0x8664;
  }
}
</code></pre>

<p>Note that the code has been compacted for brevity...</p>
"
1379224,"<p>Did you try <code>""\\d""</code> and <code>""\\w""</code>?</p>

<p>-edit-
Lol I posted the right answer and get down voted and then I notice that stackoverflow escapes backslashes so my answer appeared wrong :)</p>
"
1379227,"<p>I think you need to add the two escaped shortcuts into character classes.  Try this:  <code>""[\d]{4}[\w]{3}(0[1-9]|[12][0-9]|3[01])([01][0-9]|2[0-3])([0-5][0-9]){2}""</code></p>

<p>--Good Luck.</p>
"
1421227,"<p>I would have a setS(String s) method that correctly sets the x int. Use that is your constructor. If you don't want s or x to be publicly settable, make the setS method private/protected/default.</p>

<pre><code>class Foo {
    int x;
    String s;
    private setS(String s) { this.s=s;this.x=s.length();}

    Foo(String s) {
            setS(s);
    }
}
</code></pre>

<p>Another solution (which seems to more closely match what you are trying to do) is to eliminate the x int. Provide:</p>

<pre><code>int getX() { return s.length(); }
</code></pre>

<p>instead of an x member.</p>

<p>If x is really a surrogate for a far more complex Object try:</p>

<pre><code>class Foo {
    private Object complex;
    private String s;
    Foo(String s){ this.s = s;}
    Object getComplex() {
        if (complex == null) {
            *complex=new Complex(s);
        }
        return complex;
    }
}
</code></pre>

<p>*May need to add synchronized or double checked locking here for thread safety.</p>
"
1453675,"<p><code>a</code> is an instance of A. You call the constructor B(). But it is still a <code>A</code> class.
That is why i equals 10;
The override from the method will be succeded.</p>

<p>Note a class starts not with </p>

<pre><code>public class A()
</code></pre>

<p>but with;</p>

<pre><code>public class A { ... }
</code></pre>
"
1505328,"<p>Enum class requires a parameterized type, E, which is the subclass of Enum.</p>

<p>The type info, E, is needed for methods like compareTo(E o), which requires type info during class declaration (e.g.  Comparable). </p>

<p>Java compiler automatically pass in type info when you create enum class, so you don't see it when you declare </p>

<pre><code>enum MyType {...}
</code></pre>

<p>There are things that I don't like how generic is used.  For example, why do we need to verbosely pass the class type to the interface when the interface only requires the class info?  we can't have a default, or compiler is not smart enough nowadays?</p>

<p>e.g. </p>

<pre><code>class String implements Comparable&lt;String&gt;
</code></pre>
"
1505376,"<p>This class is not an enumerator type. It is just a complex generic regular class. It is hard to tell (without see the whole code) why it is design like this. But I'll guess it may have anything to do with the concept of self type when you want to have a method returning the current type always.</p>

<pre><code>
public abstract class Enum&lt;E extends Enum&lt;E&gt;&gt; {
    E getMe() { return (E)this; }
}
public class E1 extends Enum&lt;E1&gt; {
    void doE2_only() {}
    void doE2() {
        // This line is to prove that Javac will see this.getMe() as a function of E1
        this.getMe().doE2_only();
    }
}
public class E2 extends Enum&lt;E2&gt; {
    void doE2_only() {}
    void doE2() {
        // This line is to prove that Javac will see this.getMe() as a function of E2
        this.getMe().doE2_only();
    }
}
</code></pre>

<p>Which again, has nothing to do with enumerator types.</p>

<p>Just a thougth;</p>
"
1505386,"<p>All the enum you create in your code will be created by a final class extending the Enum class.</p>

<pre><code>public enum MyEnum { XYZ }
</code></pre>

<p>will become</p>

<pre><code>public final class MyEnum extends Enum&lt;MyEnum&gt;
</code></pre>

<p>Or something like that (not sure if XYZ become an instance or a class extending it - also I think it is not <em>really</em> final, but rather the compiler will not let you extend an enum) ... Anyway, as such Enum is not really useful, because you cannot (should not) really ""do"" anything with it yourself. </p>

<p>It is still indirectly useful to read its javadoc/code to better understand what you can(not) do with you enum.</p>
"
1051062,"<p>Singleton is, of course, an ""anti-pattern"" (assuming a definition of a static with variable state).</p>

<p>If you want a fixed set of immutable value objects, then enums are the way to go. For a large, possibly open-ended set of values, you can use a Repository of some form - usually based on a <code>Map</code> implementation. Of course, when you are dealing with statics be careful with threading (either synchronise sufficiently widely or use a <code>ConcurrentMap</code> either checking that another thread hasn't beaten you or use some form of futures).</p>
"
1053844,"<p>Looks like you want to use the <a href=""http://java.sun.com/j2se/1.4.2/docs/api/java/util/HashSet.html"" rel=""nofollow"">HashSet</a> class. This should give you <code>O(1)</code> lookup time, which should give very efficient comparison if you get your loops right. (I'm not discussing the algorithm here, but rather simply suggesting a data structure in case it helps.)</p>
"
1053874,"<p>Lets assume you have a class <code>NumberSet</code> which implements your unordered set (and can enumerate <code>int</code>s to get the numbers). You then need the following data structures and algorithm:</p>

<ul>
<li><code>Map&lt;int, Set&lt;NumberSet&gt;&gt; numberSets</code></li>
<li><code>Map&lt;Pair&lt;NumberSet, NumberSet&gt;, int&gt; matchCount</code></li>
<li><code>Pair&lt;X,Y&gt;</code> is a key object which returns the same hashcode and equality for each instance with the same X and Y (no matter if they are swapped)</li>
</ul>

<p>Now for each set to be added/compared do the following (pseudocode!!!):</p>

<pre><code>for (int number: setToAdd) {
   Set&lt;NumberSet&gt; numbers = numberSets.get(number);
   if (numbers == null) {
      numbers = new HashSet&lt;NumberSet&gt;();
      numberSets.put(number, numbers);
   } else {
      for (NumberSet numberSet: numbers) {
         Pair&lt;NumberSet, NumberSet&gt; pairKey = new Pair&lt;NumberSet, NumberSet&gt;(numberSet, setToAdd);
         matchCount.put(pairKey, matchCount.get(pairKey)+1); // make sure to handle null as 0 here in real code ;)
      }
   }
   numbers.add(number);
}
</code></pre>

<p>At any time you can go through the pairs and each which has a count of 5 or greater shows a duplicate.</p>

<p><strong>Note:</strong> removing the sets may be a bad idea, because if A is considered a duplicate of B, and B a duplicate of C, so C doesn't have to be a duplicate of A. So if you remove B, you'd not remove C, and the order in which you add your sets would become important.</p>
"
275787,"<p>I don't know Java too well, but if you can't find a Split method that does that, I suggest you just make your own.</p>

<pre><code>string[] mySplit(string s,string delimiter)
{
    string[] result = s.Split(delimiter);
    for(int i=0;i&lt;result.Length-1;i++)
    {
    	result[i] += delimiter; //this one would add the delimiter to each items end except the last item, 
    				//you can modify it however you want
    }
}
string[] res = mySplit(myString,myDelimiter);
</code></pre>

<p>Its not too elegant, but it'll do.</p>
"
1097098,"<p>One option might be to use StringBuilder:</p>

<pre><code>public static String byteListToString(List&lt;Byte&gt; l) {
    if (l == null) {
        return """" ;
    }
    StringBuilder sb = new StringBuilder(l.size());

    for (Byte current : l) {
        sb.append((char)current);
    }

    return sb.toString();
}
</code></pre>

<p>Or, if you need character conversion</p>

<pre><code>public static String byteListToString(List&lt;Byte&gt; l) {
    if (l == null) {
        return """" ;
    }
    ByteArrayOutputStream bout = new ByteArrayOutputStream(l.size());

    for (Byte current : l) {
        bout.write(current);
    }

    return bout.toString(""UTF-8"");
}
</code></pre>

<p>If you are aggregating bytes, try ByteArrayOutputStream in the first place instead of List of bytes. Note: Watch out for the UnsupportedEncodingException - you'll need to try-catch it somewhere.</p>
"
736762,"<p>I think there is a faster way:</p>

<pre><code>void quickSort(int numbers[], int array_size)
{
  q_sort(numbers, 0, array_size - 1);
}


void q_sort(int numbers[], int left, int right)
{
  int pivot, l_hold, r_hold;

  l_hold = left;
  r_hold = right;
  pivot = numbers[left];
  while (left &lt; right)
  {
    while ((numbers[right] &gt;= pivot) &amp;&amp; (left &lt; right))
      right--;
    if (left != right)
    {
      numbers[left] = numbers[right];
      left++;
    }
    while ((numbers[left] &lt;= pivot) &amp;&amp; (left &lt; right))
      left++;
    if (left != right)
    {
      numbers[right] = numbers[left];
      right--;
    }
  }
  numbers[left] = pivot;
  pivot = left;
  left = l_hold;
  right = r_hold;
  if (left &lt; pivot)
    q_sort(numbers, left, pivot-1);
  if (right &gt; pivot)
    q_sort(numbers, pivot+1, right);
}
</code></pre>
"
769050,"<p>Here, your problem is good-old Dependency Injection (aka Inversion of Control). Your goal should be to inject your implementation of <code>SomeClass</code> instead of monkeypatching it. And yes, this approach requires some changes to your existing design but for the right reasons (name your favorite design principle here) - especially the same object should not be responsible for both creating and using other objects. </p>

<p>I assume the way you're using <code>SomeClass</code> looks somewhat like this:</p>

<pre><code>public class OtherClass {
  public void doEverything() {
    SomeClass sc = SomeClass.geInstance();
    Object o = sc.doSomething();

    // some more stuff here...
  }
}
</code></pre>

<p>Instead, what you should do is first create your class that implements the same interface or extends <code>SomeClass</code> and then pass that instance to <code>doEverything()</code> so your class becomes agnostic to implementation of <code>SomeClass</code>. In this case the code that calls <code>doEverything</code> is responsible for passing in the correct implementation - whether be the actual <code>SomeClass</code> or your monkeypatched <code>MySomeClass</code>. </p>

<pre><code>public class MySomeClass() extends SomeClass {
  public Object doSomething() {
    // your monkeypatched implementation goes here
  }
}

public class OtherClass {
  public void doEveryting(SomeClass sc) {
    Object o = sc.doSomething();

    // some more stuff here...
  }
}
</code></pre>
"
769519,"<pre><code>public static void myFun(Collection&lt;MyClass&gt; collection) {
    for (MyClass mc : collection) {
        // Stuff is processed here
    }
}
</code></pre>
"
1676141,"<p>BufferedReader has <code>read(char[] cbuf, int off, int len)</code> can't you use that, convert chars to bytes and wrap it with ByteArrayInputStream?</p>

<p>EDIT: why would someone downvote that? Give a comment please. This works perfectly fine:</p>

<pre><code>    ByteArrayOutputStream bos = new ByteArrayOutputStream();

    try {
        bos.write(""TEST1\n"".getBytes());
        bos.write(""10\n"".getBytes());
        for (int i = 0; i &lt; 10; i++)
            bos.write(i);
        bos.write(""TEST2\n"".getBytes());
        bos.write(""1\n"".getBytes());
        bos.write(25);

        ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
        BufferedReader br = new BufferedReader(new InputStreamReader(bis));

        while (br.ready()) {
            String s = br.readLine();
            String num = br.readLine();
            int len = Integer.valueOf(num);
            System.out.println(s + "", reading "" + len + "" bytes"");
            char[] cbuf = new char[len];
            br.read(cbuf);
            byte[] bbuf = new byte[len];
            for (int i = 0; i &lt; len; i++)
                bbuf[i] = (byte) cbuf[i];
            for (byte b: bbuf)
                System.out.print(b + "" "");
            System.out.println();
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
</code></pre>

<p>Output: </p>

<pre><code>TEST1, reading 10 bytes
0 1 2 3 4 5 6 7 8 9 
TEST2, reading 1 bytes
25
</code></pre>
"
829848,"<p>Connect to your database using your appropriate db client (Query Browser, MS SQL Managment Studio, etc) to verify whether or not the tables do, in fact, exist.</p>

<p>You may also want to insert a breakpoint in your code so that you can see exactly what the database looks like at the moment before it's throwing this error.</p>

<p>Try setting the hibernate.hbm2ddl.auto value to ""create"" as below, and also change the setting so that it prints out the SQL so you can see what it's attempting:</p>

<pre><code>&lt;props&gt;
  &lt;!-- some possible values: create, create-drop, update --&gt;
  &lt;prop key=""hibernate.hbm2ddl.auto""&gt;update&lt;/prop&gt;
  &lt;prop key=""hibernate.show_sql""&gt;true&lt;/prop&gt;
  ....
&lt;props&gt;
</code></pre>

<p>Let me know what you see in your db.</p>
"
763313,"<p>If I understand your question correctly, you're trying to change the heap size at <em>runtime</em>. I don't see any reason why this should be possible. Set the heap size at <em>startup</em> using the <code>-Xmx</code> JVM option. I also advise you to set the <code>-Xms</code> option only if you absolutely need to. This option sets the initial amount of head memory that is allocated for the JVM. </p>

<p>You should know how your application behaves in terms of memory. Set the the value of <code>-Xmx</code> wisely. If your app is some kind of a server app you can set a higher value, otherwise compromise your choice with other possible apps running in client machines and of course available memory.</p>
"
886542,"<p>it depends. if you mean from the function you put above, simply replace:</p>

<pre><code>domainDocuments[count] = new DocumentSummary(dtoDocuments[count], dateFormat);
</code></pre>

<p>with:</p>

<pre><code>if (!string.IsNullOrEmpty(dtoDocuments[count].displayOnAccessIndicator))
    domainDocuments[count] = new DocumentSummary(dtoDocuments[count], dateFormat);
</code></pre>
"
792425,"<p>I think it is not mandatory that Java make any construct similar to anything else, even C++. Anything adopted must be so because the developers accept it. Besides, arguments like ""they made it similar to something else"" do not explain why they don't just make an instance method version, they do this with primitive wrappers (in addition to the instance toString() method, they have the static version).</p>

<p>This is what I think:</p>

<p>On a normal case, both forms are equivalent, but suppose that we have something like:</p>

<pre><code>String invalidFormat = ""%invalid""; // or something else that is invalid
</code></pre>

<p>and then we call:</p>

<pre><code>String.format(invalidFormat, anything);
// ""anything"" is indeed anything....
</code></pre>

<p>the invalid become the argument  and Java clarify this by throwing an instance of IllegalArgumentException (even in the case of Formatter, there are many kinds).</p>

<p>However, in something like:</p>

<pre><code>invalidFormat.format(anything);
</code></pre>

<p>the invalid one is no longer the argument. The problem now lies with the instance it is called on and so is probaby better described as an ""invalid state"" (not Java's ""IllegalStateException"", which has a completely different usage). But because Strings are immutable, this so called ""state"" will never change, so it will always remain invalid as a format, even though it is a valid simple string.</p>

<p>Compare this with, say, java.lang.Long. Both versions of toString will never throw any exception, so they are both equivalent.</p>
"
1313408,"<p>You would like to take a look at <a href=""http://java.sun.com/docs/books/tutorial/uiswing/components/formattedtextfield.html"" rel=""nofollow"">JFormattedTextField</a></p>

<blockquote>
  <p><em>Formatted text fields provide a way for developers to specify the valid set of characters that can be typed in a text field</em></p>
</blockquote>

<p>This is a subclass of JTextField, so you can use it like this:</p>

<pre><code>JTextField textField = new JFormattedTextField(NumberFormat.getInstance());
</code></pre>
"
811359,"<p>Hmmm.  One solution would be to make it into a java bean and use <code>XMLEncoder</code>/<code>XMLDecoder</code>.  This is a solution I've used in the past to save and load classes.</p>
"
905987,"<p>List is an interface, LinkedList is a concrete implementation of that interface.
Much of the time an implicit cast will work, assign a LinkedList to a List, or pass it to a function expecting a List and it should just `work'.</p>

<p>An explicit cast can also be done if necessary.</p>

<pre><code>//This is valid
List&lt;Customer&gt; myList = new LinkedList&lt;Customer&gt;();

//Also Valid
List&lt;Customer&gt; myList = (List&lt;Customer&gt;) new LinkedList&lt;Customer&gt;();
</code></pre>
"
831820,"<p>A clean way to do this would be to have lifecycle listeners configured in <code>web.xml</code>.  These can set global flags if you want.  For example, you could define a <a href=""http://java.sun.com/products/servlet/2.3/javadoc/javax/servlet/ServletContextListener.html"" rel=""nofollow"">ServletContextListener</a> in your <code>web.xml</code> and in the <code>contextInitialized</code> method, set a global flag that you're running inside a container.  If the global flag is not set, then you are not running inside a container.</p>
"
1786096,"<p>Why not just:</p>

<pre><code>public String readLine(BufferedReader pReader) {
    try {
        return pReader.readLine();
    } catch(IOException IOE) {
        /* Not a very good practice but let say ""We don't care!"" */
        // Return null if the line is not there (like there was no 4 lines in the file)
        return null;
    }
}

public void importContacts() {
    try {
        BufferedReader infoReader = new BufferedReader(new FileReader(""../files/example.txt""));
        txtName   .setText(readLine(infoReader));
        txtPhone  .setText(readLine(infoReader));
        txtMobile .setText(readLine(infoReader));
        txtAddress.setText(readLine(infoReader));
    } catch (IOException ioe) {
        JOptionPane.showMessageDialog(null, ioe.getMessage());
    }
}
</code></pre>

<p>Hope this helps.</p>
"
995303,"<p>I dont know windows very well, but I suggest you omit the ""cmd"" bit of the command. cmd.exe is the windows terminal. Just a guess. Look up the other exec() methods, there is one which takes the command executable to run, and the arguments. On UNIX at least, you can't normally do anything a shell doesn't support (like piping the output to a file) since those are shell features and not done by the called program. Could be why you find if you remove the cmd prefix some things don't work.</p>

<p>try just:</p>

<p><code>Process proc = Runtime.getRuntime().exec(""somebat.bat"");</code></p>
"
873805,"<p>Let's not forget the good old-fashioned</p>

<pre><code> for s in strArray do
     print s
     print "" ""
</code></pre>
"
884383,"<p>Sun's JavaDocs include <code>RuntimeException</code>s in their documentation, as shown by InputStream's <a href=""http://java.sun.com/javase/6/docs/api/java/io/InputStream.html#read%28byte%5B%5D,%20int,%20int%29"" rel=""nofollow"">read(byte[], int, int)</a> method; documented as throwing NullPointerException and IndexOutOfBoundsException.</p>

<p>FilterOutputStream's <a href=""http://java.sun.com/javase/6/docs/api/java/io/FilterOutputStream.html#flush%28%29"" rel=""nofollow"">flush()</a> is only documented as throwing IOException, thus it doesn't actually throw any <code>RuntimeException</code>s.  Any that could be thrown would most likely be wrapped in an <a href=""http://java.sun.com/javase/6/docs/api/java/io/IOException.html"" rel=""nofollow""><code>IIOException</code></a>.</p>

<p>It could still throw an <a href=""http://java.sun.com/javase/6/docs/api/java/lang/Error.html"" rel=""nofollow""><code>Error</code></a>, but there's not much you can do about those; Sun recommends that you don't try to catch them.</p>
"
1034747,"<p>Try Regex!</p>

<pre><code>java.lang.String

boolean matches(String regex)
</code></pre>
"
1874715,"<p>You can run a single test class, but not a single method within a test class.   You use the simple name of the class not the fully-qualified name of the class.   So, if you have a test in ""org.sonatype.test.MyTest"" and that is the only test you want to run, your command line would look like this:</p>

<pre><code>mvn test -Dtest=MyTest
</code></pre>
"
1493173,"<pre><code>myMaps = new HashMap&lt;String, Integer&gt;[10]();
</code></pre>

<p><strong>So that's Wrong</strong></p>

<p>Why not make a List of Maps instead of trying to make an array?</p>

<pre><code>List&lt;Map&lt;String, Integer&gt;&gt; mymaps = new ArrayList&lt;Map&lt;String, Integer&gt;&gt;(count);
</code></pre>
"
1549726,"<blockquote>
  <p>I could just do (value / (Integer.MAX_VALUE / 255)) but that will cause many low values to be zero. </p>
</blockquote>

<p>One approach you could take is to use the modulo operator (<code>r = value%256;</code>).  <strike>Although this wouldn't ensure that <code>Integer.MAX_VALUE</code> turns out as 255,</strike> it would guarantee a number between 0 and 255.  It would also allow for low numbers to be distributed across the 0-255 range.</p>

<p>EDIT:</p>

<p>Funnily, as I test this, <code>Integer.MAX_VALUE % 256</code> does result in <code>255</code>  (I had originally mistakenly tested against <code>%255</code>, which yielded the wrong results).  This seems like a pretty straight forward solution. </p>
"
1125312,"<p>Wiring up your beans like this</p>

<pre><code>HelloWorld helloWorld = new HelloWorld();
helloWorld.setMessage(""HelloWorld"");
helloWorld.display();
</code></pre>

<p>Might make sense when you have a small number of beans in your environment.</p>

<p>But what if you have a more complicated environment in which you have dozens or hundreds of beans in Spring? My current application has around 205 beans mapped in about four different XML files. Wiring these up in code would be a nightmare.</p>
"
1920314,"<p>Here is a great write up with some examples. <a href=""http://javadude.com/articles/passbyvalue.htm"" rel=""nofollow"">http://javadude.com/articles/passbyvalue.htm</a></p>

<p>Here is my simple take on the issue. Java is always a pass-by-value language. It helps to think of it as a pass-by-reference language when talking about objects. BUT this is not entirely true. What it is doing is passing the value of the memory address.</p>

<p>EDIT: Thanks for the down votes. Maybe you should have read the article first. Since no one has a will take the liberty to give an example:</p>

<pre><code>public class Dog {

    public String name;

    public Dog(String name) {
        this.name = name;
    }

    public static void main(String []args) {

        Dog newDog = new Dog(""Max"");
        newDog.test(newDog);
        System.out.println(newDog.name);

    }

    public void test(Dog dog) {
        dog = new Dog(""Gotcha"");
    }

}
</code></pre>

<p>So what does the above output to the console? Now if you guys screaming pass-by-reference were correct it would print ""Gotcha"" but it doesn't it prints ""Max"". But wait, that is exactly like pass-by-value behaviour. But why? Because in Java Objects are not passed by reference. A correct statement would be Object references are passed by value.</p>
"
1062114,"<pre><code>public class Test
{
  public static void main(String args[]) {

    long value1 = System.currentTimeMillis();
    for(long i=0;i&lt;100000000;i++)
    {
        ""abcd"".indexOf(""a"");
    }
    long value2 = System.currentTimeMillis();
    System.out.println(value2-value1);


    value1 = System.currentTimeMillis();
    for(long i=0;i&lt;100000000;i++)
    {
        ""abcd"".startsWith(""a"");
    }
    value2 = System.currentTimeMillis();
    System.out.println(value2-value1);
  }
}
</code></pre>

<p>Tested it with this piece of code and perf for startsWith seems to be better, for obvious reason that it doesn't have to traverse through string. But in best case scenario both should perform close while in a worst case scenario startsWith will always perform better than indexOf</p>
"
1602368,"<p>I think it is the best solution:</p>

<pre><code>JTextField textField = new JFormattedTextField(new MaskFormatter(""###"")); //
</code></pre>
"
1068434,"<p>You could create a class that <strong>implements</strong> <code>Map&lt;K,V&gt;</code>, and internally delegate to a container map:</p>

<pre><code>class CustomerConnections implements Map&lt;String,LastConnection&gt; {
    private Map&lt;String, LastConnection&gt; customerConnections;

    @Override
    public LastConnection get(Object srvUrl) { 
        return customerConnections.get(srvUrl);
    }
    // all other needed operations;
}
</code></pre>

<p>The nice thing with this approach is that you can pass around a <code>Map</code> which has a standard, well-defined contract, but you avoid extending library classes, which is often frowned upon.</p>

<p><strong>EDIT</strong> : As pointed out below, this does have the downside of requiring you to implement a lot of methods that do nothing short of delegate to the underlying collection</p>
"
1111928,"<p>Should I understand you are going to use multithread on that array?... </p>

<p>If you are not, then you don't have to worry about the synchronization. </p>

<p>I would:</p>

<pre><code>	List&lt;List&lt;String&gt;&gt; listOfLists = new ArrayList&lt;List&lt;String&gt;&gt;();

	List&lt;String&gt; firstVector = new ArrayList&lt;String&gt;();

	firstVector.add( ""one"" );
	firstVector.add( ""two"" );

	listOfLists.add(  firstVector );

    System.out.println( listOfLists.get(0).get(0) == ""one"" );
    System.out.println( listOfLists.get(0).get(1) == ""two"" );
</code></pre>

<p>Prints true, true</p>
"
1282874,"<p>What you've done kind of looks fine to me here's how I'd modify it:</p>

<pre><code>final AtomicReference&lt;String&gt; resultXml = new AtomicReference&lt;String&gt;();

RegexpThread rt = new RegexpThread() {
  public void run() {
    method2(m, urlCopy, document, resultXml);
  }

};

rt.start();

try {
    rt.join(6 * 1000);
} catch (InterruptedException e) {
    return ""y"";
}

if(resultXml.get() == null) {
    rt.interupt();
    return ""g"";
}

resultXml.append(resultXml.get());

return resultXml.toString();
</code></pre>
"
1683194,"<blockquote>
  <p>So I improved compare()...</p>
</blockquote>

<p>sure you did.</p>

<p>first, the Comparator interface doesn't specify what happens with nulls.  if your null checking if statement works for your use case, that's great, but the general solution is throwing an npe.</p>

<p>as to cleaner...  why final?  why all the catch/throws?  why use compareTo for a primitive wrapper?</p>

<pre><code>class NumericComparator implements Comparator&lt;String&gt; {
 public int compare(String s1, String s2) throws NullPointerException, NumberFormatException {

  double test = Double.parseDouble(s1) - Double.parseDouble(s2);

  int retVal = 0;
  if (test &lt; 0) retVal = -1;
  else if (test &gt; 0) retVal = 1;

  return retVal;  
 }
}
</code></pre>

<p>seems you might find it clearer renaming <em>test</em> to <em>t1</em> and <em>retVal</em> to <em>q</em>.</p>

<p>as to repeating the pattern...  eh.  you might be able to use generics with reflection to invoke appropriate <em>parseX</em> methods.  seems like that'd not be worth it though.  </p>
"
1325453,"<p>If no exceptions were thrown (I'm assuming you would have noticed that) <code>renameTo()</code> only returns true or false to indicate whether the rename succeeded or not and doesn't give any additional information. </p>

<p>Since it's Windows, a failure most likely indicates the the file is currently in use. This would happen because some other process has it open. More likely though, your process either isn't finished writing it or you forgot to close the file after you were done writing it.</p>

<p>It is also possible that you passed in an invalid path, or the gave a non-existent path to the <code>File</code> constructor.</p>

<p><code>renameTo()</code> will only throw exceptions if there is a security violation (<code>SecurityException</code>) or if you pass in a <code>null</code> for the file to rename.</p>
"
1696849,"<p>I think you can also do something like.</p>

<pre><code>public long[] parseString(String input)
{
            //1. Split with comma separated
            int nLength = input.Split(new char[] { ',' }).Length;
            long[] arList = new long[nLength];

            for (int i = 0; i &lt; nLength; i++)
            {
                arList[i] = long.Parse(input.Split(new char[] { ',' })[i].ToString());
            }

            return arList;
}
</code></pre>

<p>Usage:</p>

<pre><code>long[] l = parseString(""10, 30, 40, 50"");
</code></pre>
"
1354055,"<p>Eliminate the bitshifting and its intricacies and use a <a href=""http://en.wikipedia.org/wiki/Lookup%5Ftable"" rel=""nofollow"">LUT</a> for the right <code>and</code> operand.</p>
"
1360174,"<p>By the way, it seems as if you did it the hard way in Perl</p>

<p>This does the trick in Perl:</p>

<pre><code>my @files = glob(""*.html"")
# Or, if you prefer:
my @files = &lt;*.html&gt;
</code></pre>
"
1386159,"<p>You may just be using the wrong tool for the job:</p>

<pre><code>perl -ne ""print if m|&lt;p&gt;| .. m|&lt;/p&gt;|"" infile.txt &gt;outfile.txt
</code></pre>
"
1261278,"<p>(sorry, this is C#. I didn't see that the question was for Java.)</p>

<pre><code>public string[] GetValues&lt;T&gt;()
{
    return Enum.GetNames(typeof(T));
}
</code></pre>

<p>For Java, of course, all enum types still inherit from java.util.Enum, so you can write:</p>

<pre><code>public string[] getValues&lt;T extends Enum&lt;T&gt;&gt;()
{
    // use reflection on T.class
}
</code></pre>

<p>Since java.util.Enum doesn't actually implement values(), I think that reflection is the only way to go.</p>
"
1766947,"<p>Could AnotherObject have a member or property that has a type of SomeObject?  That would be another way to handle this too.</p>

<p>So, if there was a ""SomeObjectMember"" member of the AnotherObject class:</p>

<pre><code>xRef.SomeObjectMember = aRef;
</code></pre>
"
1277112,"<p>Nope. <br/> &lt;? extends C&gt; is not the same as &lt;? extends Object&gt; <br/>
If that were the case, it would lead also the the (unstated) assumption - C extends Object, and lead to say ...</p>

<p><code></p>

<p>class C{ public void doSomethingMEaningful(); };</p>

<p>List&lt; ? extends C > allAtSea = new ArrayList&lt;...>(); 
List&lt; ? extends Object > allObjects = new ArrayList&lt;...>();
allObjects.add(new Integer(88) );
...</p>

<p>allAtSea.addAll(allObjects);
...</p>

<p>allAtSea.get(...).doSomethingMeaningful(...);
// Uh-oh.. this finds the Integer 88</p>

<p></code><br/></p>

<p>The <a href=""http://www.parashift.com/c++-faq-lite/proper-inheritance.html"" rel=""nofollow"">C++ FAQ</a> provides a lucid example for this at 21.3</p>
"
1791707,"<p>If the exception being thrown is always going to be of a specific type, like OracleException, you can catch just that exception.</p>

<p>For example:</p>

<pre><code>try {

    ...

} catch(OracleException oe) {

    ...

}
</code></pre>

<p>This would only apply if there are specific Oracle exceptions being thrown. I don't know much about Oracle, so before attempting this you will probably want to find out if that's what's happening.</p>
"
2088435,"<p>Hand made for the first option: </p>

<pre><code>public class Rep {
    public static void main( String [] args ) {
       System.out.println( trimChar( '\\' , ""\\\\\\joe\\jill\\\\\\\\"" )  ) ;
       System.out.println( trimChar( '\\' , ""joe\\jill"" )  ) ;
    }
    private static String trimChar( char toTrim, String inString ) { 
        int from = 0;
        int to = inString.length();

        for( int i = 0 ; i &lt; inString.length() ; i++ ) {
            if( inString.charAt( i ) != toTrim) {
                from = i;
                break;
            }
        }
        for( int i = inString.length()-1 ; i &gt;= 0 ; i-- ){ 
            if( inString.charAt( i ) != toTrim ){
                to = i;
                break;
            }
        }
        return inString.substring( from , to );
    }
}
</code></pre>

<p>Prints</p>

<p><code>joe\jil</code></p>

<p><code>joe\jil</code></p>
"
1803804,"<p>It's not fancy, but </p>

<pre><code>resourceIds.removeAll(null);
</code></pre>

<p>will remove all the nulls from the collection. Depending on the size of the collection, it maybe quicker than using predicates and other higher level constructs.</p>

<p>Edit: Answer updated from remove() to removeAll(), as suggested by Kevin.</p>
"
1815667,"<p>Wrap the map in a <code>Collections.synchronizedMap()</code>. If you need to call additional methods, then <code>synchronize</code> on the map that you got back from this call, and invoke the original method on the original map (<a href=""http://java.sun.com/j2se/1.5.0/docs/api/java/util/Collections.html#synchronizedMap%28java.util.Map%29"" rel=""nofollow"">see the javadocs for an example</a>). The same applies when you iterate over the keys, etc.</p>
"
1830008,"<p>i have found that for-loops with a counter should <em>only</em> go from zero and up to some limit.</p>

<pre><code>for(int i = 0; i &lt; MAX; i++) {
....
}
</code></pre>

<p>This is so well established that you can expect that anybody who sees this immediately understand what is going on.  This also means that any DEVIATION from that form, by counting backwards or starting at one or stepping by three, makes it hard to understand because you need to recognize it is dfifferent, parse it and understand it.  This includes all your examples.</p>

<p>I would suggest writing it clearly:</p>

<pre><code>for(int i = 0; i &lt; MAX; i++) {
  indexFromEnd = (MAX - 1) - i;
....
 }
</code></pre>
"
2106359,"<p>I agree, Constructors are created assuming there will be instances. If you have lot of common code you can think of creating a Constructor but it is much better to put it in a <code>init()</code> method.</p>
"
1492248,"<p>Set the min, max and ""normal"" width to 0:</p>

<pre><code>jTable.getColumn(""ABC"").setWidth(0);
jTable.getColumn(""ABC"").setMinWidth(0);
jTable.getColumn(""ABC"").setMaxWidth(0);
</code></pre>

<p>The second approach is to extend <code>TableColumnModel</code> and override all the methods to create the illusion (for the JTable) that your model doesn't have those two columns.</p>

<p>So when you hide a column, you must return one less when the table asks for the number of columns and when it asks for the column X, you may have to add +1 to the column index (depending on whether it is to the left or right of the hidden column), etc.</p>

<p>Let your new table model forward all method calls (with the corrected indexes, etc) to the actual column model and use the new table model in the JTable.</p>
"
1492254,"<p>You could create a subclass of the model, and override <code>TableModel.getColumnCount</code> as follows:</p>

<pre><code>int getColumnCount() {
    return super.getColumnCount()-2;
}
</code></pre>

<p>The last two columns would then not be displayed in the <code>JTable</code>.</p>
"
1832448,"<p>If you have a list use a ListIterator:</p>

<p>Following example based on <a href=""http://www.java-samples.com/showtutorial.php?tutorialid=235"" rel=""nofollow"">http://www.java-samples.com/showtutorial.php?tutorialid=235</a></p>

<pre><code>class ListIter {
    public static void main(String args[]) {
    	// create an array list
    	ArrayList al = new ArrayList();
    	// add elements to the array list
    	al.add(""A"");
    	al.add(""B"");
    	al.add(""C"");
    	al.add(""D"");
    	al.add(""E"");
    	al.add(""F"");
    	// use ListIterator to display contents of al backwards
    	ListIterator litr = al.listIterator(al.size());
    	while (litr.hasPrevious()) {

    		Object element = litr.previous();
    		System.out.print(element + "" "");

    	}
    	System.out.println();
    }
}
</code></pre>
"
1834800,"<p>as far I know, given an enum named <code>Operation</code> you will get additional class files, excluding the obvious <code>Operation.class</code>, and one per enum value, if you are using <code>abstract method</code> like this one:</p>

<pre><code>enum Operation {

   ADD {
      double op(double a, double b) { 
          return a + b;
      }
   },

   SUB {
      double op(double a, double b) { 
          return a - b;
      }
   };

   abstract double op(double a, double b);
}
</code></pre>
"
1861805,"<pre><code>days = (date2.getTime() - date1.getTime())/86400000L
</code></pre>
"
1523844,"<p><code>tr</code> is a pretty simple way to replace a newline:</p>

<pre><code>cat addresses.xml | tr -d '\n'
</code></pre>

<p>Googling for ""shell replace newline"" will yield plenty of other options too.</p>
"
1524042,"<p>The regular expression</p>

<pre><code>(?&lt;=&gt;)\r?\n[ \t]*(?!&lt;address)
</code></pre>

<p>will match a CRLF + spaces/tags between tags unless followed by <code>&lt;address&gt;</code>. Although I usually would advise against regular expressions and for a parser, in this case it looks like this gets the job done a lot easier.</p>
"
1516308,"<p>java.util.Arrays has an 'asList' method. Together with the java.util.List/ArrayList API this gives you all you need:;</p>

<pre><code>private static String[] join(String[] array1, String[] array2) {

    List&lt;String&gt; list = new ArrayList&lt;String&gt;(Arrays.asList(array1));
    list.addAll(Arrays.asList(array2));
    return list.toArray(new String[0]);
}
</code></pre>
"
1591784,"<p>It's too bad Python 3.1 lost the ipaddr lib.</p>

<p>It's still available as a third-party library: <a href=""http://code.google.com/p/ipaddr-py/"" rel=""nofollow"">py-ipaddr</a> available on <a href=""http://pypi.python.org/pypi/ipaddr"" rel=""nofollow"">PyPI</a>.</p>

<h2>Compression</h2>

<pre><code>&gt;&gt;&gt; ipaddr.IPv6Address('0:0::0:1').compressed
'::1'
</code></pre>

<h2>IPv4 mapping</h2>

<pre><code>&gt;&gt;&gt; ipaddr.IPv6Address('::ffff:123.45.67.89').ipv4_mapped
IPv4Address('123.45.67.89')
</code></pre>

<h2>CIDR</h2>

<pre><code>&gt;&gt;&gt; ipaddr.IPv6Network('::ffff:123.45.67.89/128')
IPv6Network('::ffff:7b2d:4359/128')
</code></pre>
"
1965168,"<p>Yes, we can serialize the static variables. But we can write our own <code>writeObject()</code> and <code>readObject()</code>. I think this can solve the problem.</p>
"
1563025,"<p>If I'm reading this right...</p>

<pre><code>public class Frexp {
  public static void main (String[] args)
  {
    double param, result;
    int n;

    param = 8.0;
    n = Math.getExponent(param);
    //result = ??

    System.out.printf (""%f * 2^%d = %f\n"", result, n, param);
  }
}
</code></pre>

<p>Unfortunately, there doesn't appear to be a built-in method to get the mantissa without converting it to a BigDecimal first (or just doing the division: <code>result = param / Math.pow(2,n)</code>.</p>

<p>Strangely enough, <code>scalb</code> does the exact opposite: take a mantissa and exponent and generate a new float from it.</p>
"
1621453,"<p>looking at this from a sane perspective, if you assume that the statement</p>

<p><code>if(n != n)</code></p>

<p>is atomic (which I think is reasonable, but i dont know for sure), then the assertion exception could never be thrown.</p>
"
2002872,"<p>I apologize for using the term override incorrectly and inconsistent with my description.  My description describes the scenario.  The following code extends Jon Skeet's example to portray my scenario:</p>

<pre><code>class Base {
   public void callFoo() {
     foo();
   }
   private void foo() {
   }
}

class Child extends Base {
    private void foo() {
    }
}
</code></pre>

<p>Usage is like the following:</p>

<pre><code>Child c = new Child();
c.callFoo();
</code></pre>

<p>The issue I experienced is that the parent foo() method was being called even though, as the code shows, I was calling callFoo() on the child instance variable.  I thought I was defining a new private method foo() in Child() which the inherited callFoo() method would call, but I think some of what kdgregory has said may apply to my scenario - possibly due to the way the derived class constructor is calling super(), or perhaps not.</p>

<p>There was no compiler warning in Eclipse and the code did compile.  The result was unexpected.</p>
"
1642172,"<p>I would use a <code>StringBuffer</code> to implement this feature. <code>String</code> is immutable so everytime you concat two <code>String</code>s, a new object is created.</p>

<p>More efficient is the use of <code>StringBuffer</code>:</p>

<pre><code>String[] list = new String[] {""abc"",""def"",""ghi"",""jkl""};
StringBuffer str = new StringBuffer();
for (String s : list) {
   str.append(s);
   str.append("","");
}
str.deleteCharAt(str.length());
System.out.println(str); //automatically invokes StringBuffer.toString();
</code></pre>
"
1642193,"<pre><code>for (int i = 0; i &lt; list.length-1; i++) {
    str = str + list[i];
    str = str + "","";    
}
str = str + list[list.length-1] 
</code></pre>
"
1636851,"<p>Reads and writes to <code>int</code> variables are already atomic, so there is no need to synchronize the getter and setter (see <a href=""http://java.sun.com/docs/books/tutorial/essential/concurrency/atomic.html"" rel=""nofollow"">http://java.sun.com/docs/books/tutorial/essential/concurrency/atomic.html</a>).</p>

<p>Likewise, you don't need to synchronize <code>equals</code> here. While you could prevent another thread from changing one of the <code>i</code> values during comparison, that thread would simply block until the <code>equals</code> method completes and change it immediately afterwards.</p>
"
2012886,"<p>Map your IP to  network drive and try   let us say the drive letter is X,</p>

<p>then code changes to <code>File f = new File(""x:\\home\\renjith\\picture.jpg"");</code> </p>

<p>Infact your file is already loaded in object <code>f</code> , try priting the value of the path <code>f.getAbsolutePath()</code> to console  and see.. Actual error is with <code>ImageIO</code></p>
"
1649466,"<p>It's wrong because you're accessing a private member (you declared <code>private int yearOfBirth</code>) of another object although the class type is the same. You should use the public getter you defined instead: <code>yearOfBirth = other.getYearOfBirth()</code></p>
"
1649470,"<p><code>yearofBirth</code> is a private int.  Therefore the call to <code>other.yearOfBirth</code> would presumably fail...</p>
"
2340839,"<p>You can use getline for reading a string from a stream, using the specified delimiter:</p>

<pre><code>istream&amp; getline ( istream&amp; is, string&amp; str, char delim );
</code></pre>

<p>(defined in the  header)</p>
"
2057025,"<p>Actually you may simulate this behavior in Java.</p>

<p><strong>WARNING: ugly solution below</strong></p>

<p>You can write a method in an utility class like the code below:</p>

<pre><code>public Object getProperty(String property, Object obj) {
  if (obj != null &amp;&amp; property != null) {
       Field field = obj.getClass().getDeclaredField(property);
       field.setAccessible(true);
       try {
          return field.get(obj);
       } catch (Exception ex) {
          return null;
       }
  }
  return null;
}
</code></pre>

<p>You may actually declare it as a static method and then just import this method into your classes which will need this behavior.</p>

<p>By the way, Groovy support this feature.</p>
"
2061641,"<p>I can't think of any specific cases where omitting the parens would actually cause any ambiguity, but there is probably a corner case somewhere.</p>

<p>It might be related to locally declared variables (as in <code>if (bool b = foo())...</code> where without the parentheses, it'd be harder to determine if <code>bool</code> is a type declaration or the the entire condition. In the latter case, <code>b</code> would then be the first token of the if-statements body, rather than part of the condition.</p>
"
2061654,"<p><strike>I think you are confusing ""brackets"" with ""parenthesis""</p>

<p>This is possible in  C:</p>

<pre><code>void doSomething(){}
void doSomethingElse(){}

void main() {
    int val = 0;
    if( val ) 
        doSomething();
    else
        doSomethingElse();
}
</code></pre>

<p></strike></p>

<p>Not all ""C"" languages force the parethesis usage and and leave braces as optional.   Go ( Issue) programming language does exactly the <a href=""http://stackoverflow.com/questions/1712172/whats-your-take-on-the-programming-language-go/1716703#1716703"">opposite</a>. </p>

<p>The correct way to write that same sentence in Issue9 would be:</p>

<pre><code>if val {
    doSomething();
} else {
    doSomethingElse();
}
</code></pre>

<p>That way the following is not valid:</p>

<pre><code>if x * x * b = NULL; 
</code></pre>

<p>It should be one of:</p>

<pre><code>if x*x {
    *b=NULL;
}
</code></pre>

<p>or
   if x {
       *x*b=NULL;
   }</p>

<p>Here the braces remove the ambiguity created by the lack of parenthesis. </p>
"
2061663,"<p>I can give at least one example why in C there are paranthesis around conditions, </p>

<p>For example consider the following</p>

<pre><code>while(1) do_something();
</code></pre>

<p>The above will call do_something() for ever in an infinite loop</p>

<p>The reason the parenthis are required is because the following would be ambiguous</p>

<p><code>while 1 ; do_something();</code> 
does that mean, evaluate do_something and do nothing in the while loop? or does it mean the same as the code sample above?</p>

<p>I guess that showes one way why in the C syntax parenthis are required around condition evaluations, and by extending the same syntax (for the sake of consitency) it is extended to the if statements.</p>

<p>Discalaimer: I could be completely wrong and the reason behind having the pranthesis could be completely different, but at least I've shown one example of how it can be useful</p>
"
1671400,"<p>You could do this:</p>

<pre><code>String strz[] = strs.toArray(String[strs.size()]);
String theFirstOne = strz[0];
</code></pre>

<p>The javadoc for Collection gives the following caveat wrt ordering of the elements of the array:</p>

<blockquote>
  <p>If this collection makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.</p>
</blockquote>
"
1689528,"<p>IMO the best option is to get to have 
<code>public interface Mapper extends Cloneable {
public Object clone();
}</code></p>

<p>And have that method call <code>super.clone()</code> and perform deep cloning if relevant (only the implementation class knows about that, in principle).</p>

<p>Resorting to reflectivity will probably hit performance and make extension design a bit more (too?) complex. Another option here would be to provide with an abstract class that features the copy constructor instead of an interface, but that has obvious limitations that could be a show stopper.</p>
"
2103652,"<p>Not the same. When you are writing <code>(a &gt; b) ? a : b</code> you don't have an extra function call, so it will be faster. It's the equivalent of inlining in C++.
But this will not make any difference in real life. <code>Math.max(a,b)</code> is more readable so I would use it.</p>
"
1735859,"<p>To get the high byte, shift right by 8 bits then mask off the top bytes. Similarly, to get the low byte just mask off the top bytes.</p>

<pre><code>data[0] = (width &gt;&gt; 8) &amp; 0xff;
data[1] = width &amp; 0xff;
</code></pre>
"
2434077,"<pre><code>Abc&lt;String&gt; abcInstance = new Abc&lt;String&gt; ();
</code></pre>

<p>..for example</p>
"
1741203,"<p>This will be the easiest one :)</p>

<pre><code>String char_group = ""abcdefghijklmnopqrstuvwxyz"";
String digit_group = ""123456789"";

// first choose a len of pwd
Random ran = new Random();
int pwd_len = ran.nextInt(50); //50 is the max length of password,say
// check that pwd_len is not less than 6
// do the check here

// finally create the password..
StringBuffer pwd = new StringBuffer();
Random RNG = new Random();
for (int i = 0; i &lt; pwd_len ; i++) {
    int randomNum = RNG.nextInt(100);
    char c = '';
    // Here 25% is the ratio of mixing digits
    // in the password, you can change 4 to any
    // other value to change the depth of mix
    // or you can even make it random. 
    if (randomNum % 4 == 0) {
        c = digit_group[randomNum  % digit_group.length];
    } else {
        c = char_group[randomNum  % char_group.length];
    }
    pwd.append(c);
}
return pwd.toString();
</code></pre>
"
1820963,"<p>This hack works:</p>

<pre><code>String x = ""s"" + //Formatter Hack
    ""a"" + //
    ""c"" + //
    ""d"";
</code></pre>

<p>I would suggest not to use the formatter. <strong>Bad code should look bad not artificially good.</strong> Good code takes time. You cannot cheat on quality. Formatting is part of source code quality.</p>
"
1824242,"<p>The warnings say that <em>IColumn</em> interface and <em>PropertyColumn</em> class are parameterized types, so you just need to define type parameters for them.</p>

<p>Consider the following example:</p>

<pre><code>List&lt;Set&gt; list = new ArrayList&lt;Set&gt;();
</code></pre>

<p><em>List</em> and <em>ArrayList</em> are parameterized types and their type parameters are defined. However, <em>Set</em> is parameterized type as well but it's raw version is used as a type parameter, hence, compiler generates a warning at that case.</p>

<p>We can fix our example by explicitly specifying all type arguments, e.g.</p>

<pre><code>List&lt;Set&lt;Integer&gt;&gt; list1 = new ArrayList&lt;Set&lt;Integer&gt;&gt;();
List&lt;Set&lt;String&gt;&gt; list1 = new ArrayList&lt;Set&lt;String&gt;&gt;();
</code></pre>

<p>You need to do the same thing for your generic classes and interfaces.</p>
"
2132389,"<p>what ever values you use in equals to determine if two objects are the same, are the the values that you need to use to create a hash code.</p>

<pre><code>public boolean equals(Object o) {

    boolean result = false;

    if(o instanceof CategoryEnum) {

        CategoryEnum ce = (CategoryEnum) o;
        result = ce.toString().equals(name);

    }       
    return result;

}


public int hashCode()
{
  int hash = 6;
  hash += 32 * name.hashCode();
  return hash;
}   
</code></pre>
"
2132536,"<p>I think what you want to do is have it scroll down when you add stuff to your messageList, rather then on adjustment.  So your code could look like this: </p>

<pre><code>Adjustable sb = messageScrollList.getVerticalScrollBar()
boolean onBottom = sb.getValue() == sb.getMaximum();
//
// add your message to the JList.
//
if(onBottom)  sb.setValue(sb.getMaximum());
</code></pre>

<p>Otherwise you would need to tell if the adjustment was caused by a model change, or by the mouse, and looking through the API docs I'm not sure if there's a way to do that easily. Although you could see if the <a href=""http://java.sun.com/javase/6/docs/api/java/awt/event/AdjustmentEvent.html#getAdjustmentType%28%29"" rel=""nofollow""><code>AdjustmentEvent.getAdjustmentType()</code></a> returns different values in those cases, if that's true then you could just have an if statement in your anonymous inner class.</p>

<p>Another thing you could try would be to have a boolean variable somewhere that gets set when you add something to the list. Then, in your handler you check to see if the variable is set. If so, you do the adjustment (and unset the variable) otherwise, you ignore it.   That way, there will be only one scroll-down per item being added to the list.</p>
"
2132761,"<p>equals()and hashcode(),They have a lot of different places.
equals(),if we don't Override it from Object,it represent  that whether two variables are pointing to the same object heap?</p>

<pre><code>public  Class Student(){
  private int id;
  private  name;
  public Student(int id,String name){
  this.name=name;
  this.id=id; 
}

public void main(String[] args){
  Student A=new Student(20,'Lily');
  Student B=new Student(20,'Lily');
  boolean flag=A.equals(B)//flag=flase;
/*
 *Although they attribute the same, but they are two different objects, they point to     different memory
 */


@Override
public boolean equals(Object obj) {


  if (obj == null) {
    return false;
  }
  if (this == obj) {
    return true;
  }

  if (this.getClass() != obj.getClass()) {
    return false;
  }
  Student s=(Student)obj;
  return new Integer(this.id).equals(new Integer(s.id))&amp;&amp;this.name.equals(s.name);
  }

/**
  *Sometimes even though we Override  the equals, but we still can not determine whether   the *two objects the same,
  *In the collection object, such as HashSet, this time we have to Override the hashoCode ()
  */

public int hashCode(){
  return id + name.hashCode() ;
}
</code></pre>
"
1780454,"<p>One common way to do this in C is to use a <code>union</code>. It could look like</p>

<pre><code>union u_intstr {
  char fourChars[4];
  int  singleInt;
};
</code></pre>

<p>Set the chars into the union as</p>

<pre><code>union u_intstr myIntStr;
myIntStr.fourChars[0] = ch1;
myIntStr.fourChars[1] = ch2;
myIntStr.fourChars[2] = ch3;
myIntStr.fourChars[3] = ch4;
</code></pre>

<p>and then access the int as</p>

<pre><code>printf(""%d\n"", myIntStr.singleInt);
</code></pre>

<p><strong>Edit</strong></p>

<p>In your case for 16 ints the union could be extended to look like</p>

<pre><code>union u_my16ints {
  char str[16*sizeof(int)];
  int  ints[16];
};
</code></pre>
"
1780646,"<p>This is what I come up with</p>

<pre><code>int len = strlen(str);
int count = (len + sizeof(int))/sizeof(int);
int *ptr = (int *)calloc(count, sizeof(int));
memcpy((void *)ptr, (void *)str, count*sizeof(int));
</code></pre>

<p>Due to the use of calloc(), the resulting buffer has at least one NULL, maybe more to pad the last integer. This is not portable because the integers are in native byte order.</p>
"
1928747,"<p>There's really nothing wrong with the first piece of code; you're overthinking things, IMO.</p>

<p>Here's another way that, while verbose, is easy to understand.</p>

<pre><code>static void usage() {
    System.err.println(""Usage: blah blah blah blah"");
    System.exit(-1);
}

// ...

if (args == null || args.length &lt; 2)
    usage();
if (args[0].equals(args[1]))
    usage()
</code></pre>
"
2221792,"<p>Because C allows one to do :</p>

<pre><code>if (x) { // As opposed to java where you need to do if (x == something)
   // your code
}
</code></pre>

<p>As you can see above flexibility gives rise to ambiguity as others have shown.</p>
"
1856579,"<p>You can use the os.arch property in system properties to find out.</p>

<pre><code>Properties pr = System.getProperties();
System.out.println(pr.getProperty(""os.arch""));
</code></pre>

<p>If you are on 32 bit, it should show i386 or something</p>
"
3650614,"<pre><code>public class HexadecimalToBinaryAndLong{
  public static void main(String[] args) throws IOException{
    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    System.out.println(""Enter the hexa value!"");
    String hex = bf.readLine();
    int i = Integer.parseInt(hex);               //hex to decimal
    String by = Integer.toBinaryString(i);       //decimal to binary
    System.out.println(""This is Binary: "" + by);
    }
}
</code></pre>
"
2254841,"<p>Try this...</p>

<pre><code>&lt;c:if test=""${bean.name1 ne bean.name2}""&gt;
     fields that are supposed to appear _only_ when name1 is different from name2
&lt;/c:if&gt;
</code></pre>

<p>ne = not equal</p>

<p>Also </p>

<p># should be $</p>
"
1957689,"<p>This may work try</p>

<pre><code>
public static String intToIp(int i) {
        return ((i >> 24 ) & 0xFF) + ""."" +
               ((i >> 16 ) & 0xFF) + ""."" +
               ((i >>  8 ) & 0xFF) + ""."" +
               ( i        & 0xFF);
    }
</code>
</pre>
"
1892103,"<p>you could use a </p>

<pre><code> long startTime = System.currentTimeMillis();
</code></pre>

<p>at the beggining</p>

<p>and</p>

<pre><code> long endTime = System.currentTimeMillis();
</code></pre>

<p>and finally to get the result</p>

<pre><code> long result = endTime - startTime; //Note, part might be backwards, I don't
                                    //Remember
</code></pre>
"
2268796,"<p><code>HashMap</code> for local variables or method parameters because they are thread safe.</p>
"
2268994,"<p>Or you can done it by the hand, using only only java by</p>

<pre><code>List triple = new ArrayList(3);    
for (String word: inputFileWords) {
  if (triple.size == 3) {
      resultFile.println(StringUtils.join("" "", triple));
      triple.remove(0);
  }
  triple.add(line);
}
</code></pre>

<p>then sort this file and sum all duplicate lines (manually or from some command line utility), it will be fast as possible.</p>
"
1919986,"<p>You could try using StringBuilder.append() if you think that will make your code look cleaner:</p>

<pre><code>return new StringBuilder()
   .append(""("").append(topTwenty).append("")"")
   .toString();
</code></pre>
"
4827496,"<p><code>Thread.Sleep()</code> has a slightly larger overhead because it creates a system that includes some kind of timer that will wake the process. (Depends on implementation basically)<br>
Bottom line it will call a <code>Yield()</code> in the end.</p>

<p><code>Thread.Yield()</code> Will just give-up the thread's turn, and gain it in the next round.</p>

<p><code>Thread.Sleep(0)</code> might have an optimization to just call yield. (Again, implementation) </p>
"
2026490,"<p>Well, the simplest, most brain-dead way to do this is simply to include your SQL as a string in your code. </p>

<p>Something like </p>

<pre><code>   Statement s = new Statement(""Select * from wherever"");
</code></pre>

<p>That may not be very sophisticated, but it works.  The downside is that the compiler can't check your SQL syntax.  Slightly better solution is <a href=""http://java.sun.com/docs/books/tutorial/jdbc/basics/prepared.html"" rel=""nofollow"">Prepaired Statements</a> where you specify a parametic template.  So you can do stuff like: </p>

<pre><code>PreparedStatement s = connection.prepareStatement(""Select * from wherever where state = ?"");
</code></pre>

<p>That way, your JDBC connection <i>should</i> throw an exception as soon as you create the prepared statement at run time. So if the code works the first time, it should always work. </p>

<p>Then in your code later when you want to change the parameter you do: </p>

<pre><code>s.setString(1, ""CA"");
</code></pre>

<p>Microsoft has an embedded query language for .net called <a href=""http://msdn.microsoft.com/en-us/netframework/aa904594.aspx"" rel=""nofollow"">LINQ</a>. For databases you use <a href=""http://msdn.microsoft.com/en-us/library/bb425822.aspx"" rel=""nofollow"">LINQ to SQL</a> which lets you embed queries right in your code. </p>
"
1935523,"<p>Note that the drawbacks listed do not hold for <code>static</code> inner classes as they do not have implicit access to their enclosing class (or object really.)</p>

<p>So if this rule is going to help up in your company, it might be an idea to get static inner classes excempted as they offer a way for encapsulation which is useful in many cases.</p>

<p>@Tom, quoting the <a href=""http://java.sun.com/docs/books/jls/third_edition/html/classes.html"" rel=""nofollow"">Java language specification</a>, ""Member classes may be <strong>static</strong>, in which case they have <strong>no access</strong> to the instance variables of the surrounding class""</p>
"
6030133,"<p>The <code>javac</code> option <code>-Xlint:unchecked</code> does do the trick: it disables the warnings, see <a href=""http://download.oracle.com/javase/1,5.0/docs/tooldocs/windows/javac.html"" rel=""nofollow"">the javac manual</a> for details</p>
"
2060758,"<p>An indirect answer: XML typically represents data, not instructions. So it is probably more useful to map parser handling onto fields. This is what JAXB does. I suggest using JAXB or similar.</p>

<p>Unless you have a huge amount to do, I would strongly advise against reflection in a statically typed language. A string of <code>} else if (tag.equals(""blah"")) {</code> (or with interning, <code>} else if (tag == ""blah"") {</code> isn't going to kill you. You can even map strings onto their enum namesakes, but that is a little reflectiony. Switch-on-string should be with us in JDK7.</p>
"
1976825,"<p>created a method to do it.</p>

<pre><code>public double roundDouble(double d, int places) {
    return Math.round(d * Math.pow(10, (double) places)) / Math.pow(10, (double)places);
}
</code></pre>
"
2397072,"<pre><code>dummyInt = dummyInt + 1;
</code></pre>

<p>This statement is actually 3 separate operations:</p>

<ol>
<li>Read the value of dummyInt</li>
<li>Add 1</li>
<li>Write the value back to dummyInt</li>
</ol>

<p>So yes you do need to synchronize this. It is possible for one thread to read the value, then another thread does all three operations, and when the first thread finishes the value is only increased by 1 (I hope this makes sense :P).<code>dummyBoolean</code> is similar. You read it in the if statement and the write the new value.</p>

<p>EDIT</p>

<p>Sorry for not reading the question correctly. 
According to the javadoc this shouldn't need sync.</p>
"
2007923,"<p>basically you just need ot use the iterator:</p>

<pre><code>void print(collection c) 
{ 
    for (object tmp:c.iterator()) 
    { 
        System.out.println(tmp); 
    } 
} 
</code></pre>
"
2011719,"<p><strong>There is no exe for Java and It doesn't make sense to create one.</strong></p>

<p>Your installation program should provide <strong>a shortcut</strong> to start the program.
The shortcut can have the command line.</p>

<pre><code>java -classpath myprogram.jar de.vogella.eclipse.ide.first.MyFirstClass
</code></pre>

<p>For you, you can also create a batch file but there will be a CLI windows.</p>

<pre><code>@echo off
set d=%~dp0
java -classpath myprogram.jar de.vogella.eclipse.ide.first.MyFirstClass
</code></pre>

<p>As you can see, Windows has some lack of coherence but you still can install another Operating System instead.</p>
"
2106720,"<p>Tom has the right idea, but you need to use BigDecimal methods, since you ostensibly are using BigDecimal because your values are not amenable to a primitive datatype.  Something like:</p>

<pre><code>BigDecimal num = new BigDecimal(0.23);
BigDecimal twenty = new BigDecimal(20);
//Might want to use RoundingMode.UP instead,
//depending on desired behavior for negative values of num.
BigDecimal numTimesTwenty = num.multiply(twenty, new MathContext(0, RoundingMode.CEILING)); 
BigDecimal numRoundedUpToNearestFiveCents
  = numTimesTwenty.divide(twenty, new MathContext(2, RoundingMode.UNNECESSARY));
</code></pre>
"
8710093,"<p>One other solution can be: </p>

<pre><code>public int longToInt(Long longVariable)
{
    try { 
            return Integer.valueOf(longVariable.toString()); 
        } catch(IllegalArgumentException e) { 
               Log.e(e.printstackstrace()); 
        }
}
</code></pre>

<p>I have tried this for cases where the client is doing a POST and the server DB understands only Integers while the client has a Long. </p>
"
8880773,"<ul>
<li><code>public</code> means you can access the class from anywhere in the class/object or outside of the package or class</li>
<li><code>static</code> means constant in which block of statement used only 1 time</li>
<li><code>void</code> means no return type</li>
</ul>
"
2027121,"<p>When Java was invented, it came without iterators and collections utilities. The idea just wasn't there, yet. The only thing you had was <code>Enumeration</code> which felt clumsy, especially without the utility functions.</p>

<p>With Java 1.2, iterators and collections were added. That was a great improvement but from todays point of view, it leaves a lot of room for improvement.</p>

<p>To fill the gap, look at <a href=""http://groovy.codehaus.org/"" rel=""nofollow"">Groovy</a> which has <a href=""http://groovy.codehaus.org/JN1015-Collections"" rel=""nofollow"">excellent support for collections</a> at the language level or use helper frameworks like <a href=""http://commons.apache.org/collections/"" rel=""nofollow"">commons collections</a>.</p>

<p>[EDIT] If the code uses <code>ArrayList</code>, then traversing the list is pretty cheap (as is insertion and deleting, surprisingly; todays computers are really fast at copying memory around).</p>
"
9124315,"<p>You cannot use <code>-cp</code> with <em>Javac</em>. You have to use <code>-classpath</code> instead (assuming the other settings are correct).</p>
"
2027228,"<p>I would not use <code>Date</code> but timestamps, using <code>-1</code> for never and <code>0</code> for immediately;</p>

<pre><code>public static final long IMMEDIATE = 0;
public static final long NEVER = -1L;
private long expires = NEVER;
</code></pre>

<p>interpretation of the attribute should be in a getter, like:</p>

<pre><code>public boolean isExpired() {

    return (NEVER == expires) ? false : (expires &lt; System.currentTimeMillies());
}
</code></pre>

<p>Deletion follows the same pattern.</p>

<p><strong>Update</strong> I know that 0 and -1 are valid timestamps, but as expiration and deletion of files and other resources rarely (never say never :-)) happen in 1970 or before, it is a useful constant, imho.</p>
"
2044114,"<p>Try :</p>

<pre><code>int i = 1;
System.out.println(i++);
System.out.println(i++);
System.out.println(i++);
....
</code></pre>
"
9645870,"<p>The only way to make it works in ALL circumstances is the following setting:</p>

<pre><code>setBorder (BorderFactory.createLineBorder (new Color (0, 0, 0, 0), 2));
</code></pre>

<p>otherwise (when you have null background of the parent container) you will see the ""I"" cursor remaining forever at the left edge of your JTextField. (Simply make some tests for different border thickness and observe quite strange way the JTextField places the cursor when you activate it first time.)</p>

<p>Alternatively you can set:</p>

<pre><code>setBorder (BorderFactory.createLineBorder (getBackground (), 2));
</code></pre>

<p>but you will obtain the field opticaly larger by 2 pixels in all four directions. If you don't specify the border thickness, you will see the cursor BETWEEN this border and the field remaining forever.</p>
"
2110749,"<p>You asked for drawbacks as well, here's one.</p>

<p>Generic programming in C++ can yield some pretty ""space-age"" code which can be very verbose and difficult to read &amp; comprehend by humans.  That is, humans other than the one who designed it.  As such, it can be challenging to maintain and to use.  Code that is difficult to maintain or use has a big strike against it.  One place where I have found this to be particularly true is in the use of <a href=""http://en.wikipedia.org/wiki/Policy-based_design"" rel=""nofollow"">policy classes</a>.</p>

<p>Here's an example.  Some time ago, I wrote a policy-based resource manager.  Kind of like a smart pointer, but generic enough to be used for any kind of resource, not just memory.  Things like mutexes, GDI (Windows) resources, etc.  The motivation behind writing this was two fold.  One, I just wanted to write it :) but two, I wanted to create a repository of code that could be generally useful to manage resources of all kinds.  In order for it to be generally useful, people would have to want to use it.</p>

<p>So let me ask you, would you want to use this?</p>

<pre><code>    /*** COPY POLICIES ***/
    class SimpleCopyPolicy
    {
    public:
        template&lt;class Resource&gt; Resource copy(const Resource&amp; rhs) const { Resource ret = rhs; return ret; }
    protected:
        ~SimpleCopyPolicy(){};
    };

    class DuplicateHandleCopyPolicy
    {
        public:
            HANDLE sourceProcess, targetProcess;
            DWORD access, options;
            BOOL inherit;

            DuplicateHandleCopyPolicy(HANDLE sourceProcess_=GetCurrentProcess(), HANDLE targetProcess_=GetCurrentProcess(), DWORD access_=0, BOOL inherit_=FALSE,DWORD options_=DUPLICATE_SAME_ACCESS)
            : sourceProcess(sourceProcess_), targetProcess(targetProcess_), access(access_), inherit(inherit_), options(options_) {}

            template&lt;class Resource&gt; Resource copy(const Resource &amp; rhs) const
            {
                Resource ret;
#               if defined(VERBOSE_STLEXT_DEBUG) &amp; defined(MHDAPI)
                if( !verify( DuplicateHandle(sourceProcess, rhs, targetProcess, &amp;ret, access, inherit, options) ))
                {
                    DWORD err = GetLastError();
                    mhd::WarningMessage(""DuplicateHandleCopyPolicy::copy()"", ""Error %d Copying Handle %X : '%s'"",
                    err, rhs, stdextras::strprintwinerr(err).c_str() );
                }
                else
                    mhd::OutputMessage(""Duplicated %X to %X"", rhs, ret);
#               else
                DuplicateHandle(sourceProcess, rhs, targetProcess, &amp;ret, access, inherit, options);
#               endif
                return ret;
            }

        protected:
            ~DuplicateHandleCopyPolicy(){};
    };

    /*** RELEASE POLICIES ***/
    class KernelReleasePolicy
    {
    public:
        template&lt;class Handle&gt; bool release(Handle&amp; h)
        {
#           if defined(VERBOSE_STLEXT_DEBUG) &amp; defined(MHDAPI)
            OutputMessage(""Closing %X"", h);
#           endif
            return 0 != CloseHandle(h);
        }
    };
    class CritsecReleasePolicy
    {
    public:
        template&lt;class Handle&gt; bool release(Handle&amp; h)
        {
            DeleteCriticalSection(&amp;h);
            return true;
        }
    protected:
        ~CritsecReleasePolicy() {};
    };
    class GDIReleasePolicy
    {
    public:
        template&lt;class Handle&gt; bool release(Handle h) { return 0 != DeleteObject(h); }
    protected:
        ~GDIReleasePolicy(){};
    };
    class LibraryReleasePolicy
    {
    public:
        template&lt;class Handle&gt; bool release(Handle h) { return 0 != FreeLibrary(h); }
    protected:
        ~LibraryReleasePolicy(){};
    };
#   ifdef WINSOCK_VERSION
    class SocketReleasePolicy
    {
    public:
        template&lt;class Handle&gt; bool release(Handle h) { return 0 != closesocket(h); }
    protected:
        ~SocketReleasePolicy(){};
    };
#   endif

    class DestroyWindowPolicy
    {
    public:
        template&lt;class Handle&gt; bool release(Handle h) { return 0 != DestroyWindow(h); }
    protected:
        ~DestroyWindowPolicy() {};
    };

    /*** LOCKING POLICIES ***/
    class WFSOPolicy    // Wait For Single Object
    {
    public:
        WFSOPolicy(DWORD timeout_=INFINITE) : timeout(timeout_) {};

        template&lt;class Handle&gt; bool wait(Handle&amp; h) const
        {
#           if defined(VERBOSE_STLEXT_DEBUG) &amp; defined(MHDAPI)
            DWORD ret = ::WaitForSingleObject(h,timeout);
            if( !verify( WAIT_OBJECT_0 == ret ))
            {
                DWORD err = GetLastError();
#               ifdef UNICODE
                mhd::WarningMessage(""WFSOPolicy"", ""Error %d Waiting for object %X [Timeout %s] : '%S'"",
                    err, h, INFINITE==timeout?""INFINITE"":std::formatstr(""%d ms"", timeout).c_str(),
                    stdextras::strprintwinerr(err).c_str() );
#               else
                mhd::WarningMessage(""WFSOPolicy"", ""Error %d Waiting for object %X [Timeout %s] : '%s'"",
                    err, h, INFINITE==timeout?""INFINITE"":std::formatstr(""%d ms"", timeout).c_str(),
                    stdextras::strprintwinerr(err).c_str() );
#               endif
                return false;
            }
            return true;
#           else
            return WAIT_OBJECT_0 == ::WaitForSingleObject(h,timeout);
#           endif
        }

        DWORD timeout;
    };


    /*** LOCK/UNLOCK POLICIES ***/
    class CritsecLockPolicy  // CRITICAL_SECTION lock/unlock policies
    {
    public:
        template&lt;class Handle&gt; bool lock(Handle&amp; h)
        {
            EnterCriticalSection(const_cast&lt;CRITICAL_SECTION*&gt;(&amp;h));
            return true;
        }
        template&lt;class Handle&gt; bool unlock(Handle&amp; h) 
        {
            LeaveCriticalSection(&amp;h);
            return true;
        }
    };

    template&lt;DWORD waitTimeout = INFINITE&gt;
    class MutexLockPolicy : public WFSOPolicy
    {
    public:
        MutexLockPolicy() : WFSOPolicy(waitTimeout) {};
        template&lt;class Handle&gt; bool lock(Handle&amp; h) const
        {
            return wait(h);
        }
        template&lt;class Handle&gt; bool unlock(Handle&amp; h) const 
        {
            return 0 != ReleaseMutex(h);
        }
    };

    class PlaceboLockPolicy // this lock policy doesnt actually do anything!  useful for debugging &amp; experimentation
    {
    public:
        PlaceboLockPolicy() {};
        template&lt;class Handle&gt; bool lock(Handle&amp;) const
        {
            return true;
        }
        template&lt;class Handle&gt; bool unlock(Handle&amp;) const
        {
            return true;
        }
    };


    template&lt;class Resource, typename ReleasePolicy, typename CopyPolicy = SimpleCopyPolicy&gt;
    class simple_auto_resource : public ReleasePolicy, public CopyPolicy
    {
    public:
        typedef simple_auto_resource&lt;Resource,ReleasePolicy,CopyPolicy&gt; base_type;

        simple_auto_resource() : res(0) {}
        simple_auto_resource(const Resource &amp; r) : res(copy(r)) {}
        ~simple_auto_resource() { if(res) release(res); }

        void clear() { if(res) release(res); res = 0; }

        Resource&amp; get() { return res; }
        const Resource&amp; get() const { return res; }

        Resource detach() { Resource ret = res; res = 0; return ret; }

        operator const Resource&amp;() const { return get(); }
        operator Resource&amp;() { return get(); }

        base_type&amp; operator=(const Resource&amp; rhs) { clear(); res = copy(rhs); return * this; }

        template&lt;class Comp&gt; bool operator==(const Comp&amp; rhs) const { return res == (Resource)rhs; }
        template&lt;class Comp&gt; bool operator!=(const Comp&amp; rhs) const { return res != (Resource)rhs; }
        template&lt;class Comp&gt; bool operator&lt;(const Comp&amp; rhs) const { return res &lt; (Resource)rhs; }
    private:
        Resource res;
    };

    typedef simple_auto_resource&lt;HBRUSH,GDIReleasePolicy&gt; auto_brush;
    typedef simple_auto_resource&lt;HINSTANCE, LibraryReleasePolicy&gt; auto_lib;
    typedef simple_auto_resource&lt;CRITICAL_SECTION, CritsecReleasePolicy&gt; auto_critsec;
    typedef simple_auto_resource&lt;HWND,DestroyWindowPolicy&gt; auto_destroy_hwnd;
    typedef simple_auto_resource&lt;HANDLE,KernelReleasePolicy,DuplicateHandleCopyPolicy&gt; auto_kernelobj;  
#   ifdef WINSOCK_VERSION
    typedef simple_auto_resource&lt;SOCKET,SocketReleasePolicy&gt; auto_socket;
#   endif

    typedef auto_kernelobj auto_mutex;
    typedef auto_kernelobj auto_event;
    typedef auto_kernelobj auto_filehandle;
    typedef simple_auto_resource&lt;HANDLE,KernelReleasePolicy&gt; auto_localkernelobj;   
    typedef simple_auto_resource&lt;HANDLE,KernelReleasePolicy&gt; auto_localmutex;   
    typedef simple_auto_resource&lt;HANDLE,KernelReleasePolicy&gt; auto_localevent;   
    typedef simple_auto_resource&lt;HANDLE,KernelReleasePolicy&gt; auto_thread;   
    typedef simple_auto_resource&lt;HMODULE,KernelReleasePolicy&gt; auto_hmodule;
</code></pre>

<p>If your answer is 'no, way too complicated,' that's precisely my point.</p>
"
12521287,"<p><code>if (10 &lt; x || x &lt; 20)</code></p>

<p>This statement will evaluate true for numbers between 10 and 20.
This is a rough equivalent to <code>10 &lt; x &lt; 20</code></p>
"
13715422,"<p>c / c ++ (long * long):</p>

<pre><code>const int64_ w = (int64_) a * (int64_) b;    
if ((long) (w &gt;&gt; sizeof(long) * 8) != (long) w &gt;&gt; (sizeof(long) * 8 - 1))
    // overflow
</code></pre>

<p>java (int * int, sorry I didn't find int64 in java):</p>

<pre><code>const long w = (long) a * (long) b;    
int bits = 32; // int is 32bits in java    
if ( (int) (w &gt;&gt; bits) ！= (int) (w &gt;&gt; (bits - 1))) {
   // overflow
}
</code></pre>

<p>1.save the result in large type (int*int put the result to long, long*long put to int64)</p>

<p>2.cmp  result >> bits and result >> (bits - 1) </p>
"
2177751,"<p>In your case it has to be non static unless you change signature to <code>public static Point add(Point point1, Point point2)</code>.</p>

<p><strong>EDIT</strong> : I got down voted. That's fine. I was not trying to give trivial suggestion like putting static in front method. In this case, an instance method is better, but there is really not singe answer. It just depends on your preference.</p>
"
2183255,"<pre><code>integer &amp; 0xFF
</code></pre>

<p>for the first byte</p>

<pre><code>(integer &gt;&gt; 8) &amp; 0xFF
</code></pre>

<p>for the second and loop etc., writing into a preallocated byte array. A bit messy, unfortunately.</p>
"
3324793,"<p>RMI bidirectional:</p>

<p><strong>SERVER:</strong></p>

<pre><code>import java.io.IOException;
import java.rmi.Naming;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;

public class RMISERVER {

   public RMISERVER() throws IOException {

       Thread t;
        try {
            t = new Prou_run();
            t.start();
        } catch (RemoteException ex) {
            Logger.getLogger(RMISERVER.class.getName()).log(Level.SEVERE, null, ex);
        }

   }


   public static void main(String args[]) throws IOException {
     new RMISERVER();
   }
}


import java.io.File;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.rmi.Naming;
import java.rmi.Remote;
import java.rmi.registry.Registry;
import java.rmi.server.RMIClientSocketFactory;
import java.rmi.server.RMIServerSocketFactory;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.tree.DefaultMutableTreeNode;

//extends java.rmi.server.UnicastRemoteObject
public class Prou_run extends Thread implements Runnable{

            New_Object  root = null,root2=null,root3=null,root4=null,root5;
              New_Object new_root=null;
            Object xt = null, xt2=null , xt3=null;
            Registry r1,r2;
            RMIClientSocketFactory csf,csf2;
            RMIServerSocketFactory ssf,sf2;


            new_Patryk npal;

 public Prou_run() throws java.rmi.RemoteException, IOException
 {
         if (System.getSecurityManager() == null) {
            System.setSecurityManager(new SecurityManager());
                  }

//            csf = new RMIClientSocketFactory() {
//
//                public Socket createSocket(String host, int port) throws IOException {
//                    return new Socket(""rmi://localhost/getchil"",1080);
//                }
//            };
//            csf2 = new RMIClientSocketFactory() {
//
//                public Socket createSocket(String host, int port) throws IOException {
//                   return new Socket(""rmi://localhost/getchild"",1081);
//                }
//            };
//            ssf=new RMIServerSocketFactory() {
//
//                public ServerSocket createServerSocket(int port) throws IOException {
//                    return new ServerSocket(1099);
//                }
//            };// ssf.createServerSocket(1099);
//              sf2=new RMIServerSocketFactory() {
//
//                public ServerSocket createServerSocket(int port) throws IOException {
//                   return new ServerSocket(1098);
//                }
//            };//sf2.createServerSocket(1098);
       try {
         r1=java.rmi.registry.LocateRegistry.createRegistry(1098);
                 r2=java.rmi.registry.LocateRegistry.createRegistry(1099);//, csf2, ssf);
                 java.rmi.registry.LocateRegistry.createRegistry(1097);
                 java.rmi.registry.LocateRegistry.createRegistry(1095);
                 java.rmi.registry.LocateRegistry.createRegistry(1096);
         System.out.println(""RMI registry ready."");
      } catch (Exception e) {
         System.out.println(""Exception starting RMI registry:"");
         e.printStackTrace();
      }
        this.xt = null;this.xt2 = null;this.xt3 = null;
        npal = new new_Patryk();
        System.out.println(""sdmmmfxxxxxxxx"");

   }






    public void run() {

//while(true){

      try{

//             root =  new_root;
//             xt=npal.getChild((File)new_root.getob(), (int)new_root.geti());
             New_ObjectIMPL sl = new New_ObjectIMPL();
             sl.i=354;
                System.out.println(""sdmmmf2"");
                //r2
             Naming.rebind(""rmi://localhost:1099/getchild"",(New_Object) sl);
                System.out.println(""sdmmmf3"");

         }catch (Exception e) {
       System.out.println(""Trouble: "" + e);
     }

        while(new_root==null){
            try{
                 //System.out.println(""sdmmmf1""   +   new_root.geti());
         new_root = (New_Object) Naming.lookup(""rmi://localhost:1080/getchil"");
         System.out.println(""sdmmmf1""   +   new_root.geti());
            }catch (Exception e) {
       System.out.println(""Trouble: "" + e);
     }
        }
    }

}

























/**
 *
 * @author austinchuma
 */
public interface New_Object extends java.rmi.Remote {

     public int geti() throws java.rmi.RemoteException;

     public Object getob() throws java.rmi.RemoteException;

     public Object getobchild() throws java.rmi.RemoteException;

      public boolean getbbol() throws java.rmi.RemoteException;

       public byte[] getb() throws java.rmi.RemoteException;



}





public class New_ObjectIMPL extends java.rmi.server.UnicastRemoteObject implements New_Object

{
   Object ob = null,obchild = null;
    int  i=0;
    boolean bol = false;
    byte[] b = null;

    public New_ObjectIMPL() throws RemoteException{
        ob = null;obchild = null;
        i=0;
        bol = false;
        b = null;
    }

    public int geti() throws RemoteException {
       return i;
           }

    public Object getob() throws RemoteException {

       return ob;
    }

    public Object getobchild() throws RemoteException {
       return obchild;
    }

    public boolean getbbol() throws RemoteException {
      return bol;
    }

    public byte[] getb() throws RemoteException {

        return b;

    }


}
</code></pre>
"
2188988,"<blockquote>
  <p>I am using a different plugin to jar my files. What is the best way to avoid the maven-jar plugin from executing?</p>
</blockquote>

<p>First, the <code>jar:jar</code> goal is <a href=""http://e.org/guides/introduction/introduction-to-the-lifecycle.html#Built-in_Lifecycle_Bindings"" rel=""nofollow"">bound by default</a> on the <code>package</code> phase for a project with a packaging of type <code>jar</code>. Second, there is no way to unbind a plugin bound to a phase. So, if you are using another plugin(?), either accept to produce 2 JARs or change the packaging (but I don't think this will work well).</p>
"
2279866,"<blockquote>
  <p>In my experience, cases where a try-catch-finally would be appropriate, i.e., where the block in which I want to catch some particular exception is exactly the same block in which I use some disposable resource, are extremely rare. Yet, the language designers of C#, VB and Java seem to consider this to be a highly common scenario; the VB designers even think about adding catch to using.</p>
</blockquote>

<p>you:</p>

<pre><code>try {
   //use resource
} catch (FirstException e) {
   // dispose resource
   // log first exception
} catch (SecondException e) {
   // dispose resource
   // log first exception
} catch (ThirdException e) {
   // dispose resource
   // log first exception
}
</code></pre>

<p>me:</p>

<pre><code>try {
  //use resource
} catch (FirstException e) {
  // log first exception
} catch (SecondException e) {
  // log first exception
} catch (ThirdException e) {
  // log first exception
} finally {
  // dispose resource
}
</code></pre>

<p>feel defference?)</p>
"
15967320,"<p>For creating your own exception you need to extend the Exception class. Once you have extended this class you can raise your exception independent of their type (checked or unchecked exception)</p>

<p>Example:</p>

<pre><code>class MyException extends Exception {
    public MyException(final String message) {
        super(message);
    }
}

public class aa {
    public static void main(String arg[]) {
        int x;
        x = Integer.parseInt(arg[0]);
        try {
            if (x == 0) {
                throw new MyException(""User Exception"");
            }
        } catch (MyException ee) {
            System.out.println(ee.getMessage());
        }

    }
}
</code></pre>
"
16371753,"<p>I got this error just after updating the jar files and that gave me an error that my class is converted to <code>java.lang.Object</code>. Some of the imports are not resolved properly even if it is imported at the top. Some post I read said it is because of the bug in Eclipse IDE. Rebuilding the project always worked for me. </p>

<p>Solution:</p>

<p>1.Do a maven clean and install by right clicking your project</p>

<p>2.Clean and Rebuild the project in Eclipse.</p>
"
4407228,"<p>You can process any number of threads; there is no limit. I ran the following code while watching a movie and using NetBeans, and it worked properly/without halting the machine. I think you can keep even more threads than this program does.</p>

<pre><code>class A extends Thread {
    public void run() {
        System.out.println(""**************started***************"");
        for(double i = 0.0; i &lt; 500000000000000000.0; i++) {
            System.gc();
            System.out.println(Thread.currentThread().getName());
        }
        System.out.println(""************************finished********************************"");
    }
}

public class Manager {
    public static void main(String[] args) {
        for(double j = 0.0; j &lt; 50000000000.0; j++) {
            A a = new A();
            a.start();
        }
    }
}
</code></pre>
"
17828692,"<p>You can also do this with the ol' good method :</p>

<pre><code>String inputLine = ""test123"";
String translatedString = null;
char[] stringArray = inputLine.toCharArray();
for(int i=0;i&lt;stringArray.length;i++){
      translatedString += Integer.toBinaryString((int) stringArray[i]);
}
</code></pre>
"
2335858,"<p>FYI the password 'apps_ro' encrypts as:</p>

<pre><code>     &lt;StringRefAddr addrType=""password""&gt;
        &lt;Contents&gt;051DC8A88C574538CC4AEE32D326E9480659C06CEC271EA6D7&lt;/Contents&gt;
     &lt;/StringRefAddr&gt;
</code></pre>
"
6867396,"<p>Why not make it explicit?</p>

<p>I'm for adding it in - not everyone ""implicitly"" knows that every Java class implicitly extends <code>Object</code>.  By writing it explicitly they don't have to guess.</p>
"
7315168,"<p>you can use this code.. this will help you...</p>

<p>//main class</p>

<pre><code>public class Main {
public static void main(String[] args){

    CKL ckl = new CKL();
    String equation = ""2*2+12-6/5"";
    String ans = equation;
    StringTokenizer sto = new StringTokenizer(equation,""0123456789"");
    StringBuffer buf = new StringBuffer();
    while(sto.hasMoreTokens()){
        buf.append(sto.nextToken());
    }
    String opCheck = buf.toString();
    if(opCheck.contains(""/"")){
        ckl.resultDiv(equation);
        ans = ckl.resultFinal;
    }
    if(ans.contains(""*"")){
        ckl.resultMul(ans);
        ans = ckl.resultFinal;
    }
    if(ans.contains(""-"")){
        ckl.resultMin(ans);
        ans = ckl.resultFinal;
    }
    if(ans.contains(""+"")){
        ckl.resultPlu(ans);
        ans = ckl.resultFinal;
    }
    else ans=equation;
    System.out.println(ans);
}
</code></pre>

<p>}</p>

<p>// another evaluating class</p>

<pre><code>public class CKL {
public String resultFinal;
public void resultDiv(String string){
    StringTokenizer stkn = new StringTokenizer(string, ""+-*/"");
    int length = 0;
    while(stkn.hasMoreTokens()){
        stkn.nextToken();
        length++;
    }
    if(length==1){           
    }
    else{
        int[] numbersList = new int[length];
        StringTokenizer noToken = new StringTokenizer(string, ""-/*+"");
        int i=0;
        while(noToken.hasMoreTokens()){
            numbersList[i] = Integer.parseInt(noToken.nextToken());
            i++;
        }

        StringBuffer noop = new StringBuffer();
        StringTokenizer noOp = new StringTokenizer(string, ""[0123456789]"");
        while(noOp.hasMoreTokens()){
            noop.append(noOp.nextToken());
        }
        for(int k=0;k&lt;1;k++){
            int divIndexFind = string.indexOf(""/"");
            if(divIndexFind!=-1){
                int indexOp = noop.indexOf(""/"");
                int temp = numbersList[indexOp++]/numbersList[indexOp];
                indexOp--;
                int firstLength = String.valueOf(numbersList[indexOp++]).length();
                int secondLength = String.valueOf(numbersList[indexOp]).length();
                StringBuffer b = new StringBuffer();
                b.append(string);
                b.replace(divIndexFind-firstLength,divIndexFind+secondLength+1, String.valueOf(temp));
                String finalNewString = """";
                finalNewString = b.toString();
                resultFinal = finalNewString;
                resultDiv(finalNewString);
            }
        }
    }
}
public void resultMul(String string){
    StringTokenizer stkn = new StringTokenizer(string, ""+-*/"");
    int length = 0;
    while(stkn.hasMoreTokens()){
        stkn.nextToken();
        length++;
    }
    if(length==1){
    }
    else{
        int[] numbersList = new int[length];
        StringTokenizer noToken = new StringTokenizer(string, ""-/*+"");
        int i=0;
        while(noToken.hasMoreTokens()){
            numbersList[i] = Integer.parseInt(noToken.nextToken());
            i++;
        }
        StringBuffer noop = new StringBuffer();
        StringTokenizer noOp = new StringTokenizer(string, ""[0123456789]"");
        while(noOp.hasMoreTokens()){
            noop.append(noOp.nextToken());
        }
        for(int k=0;k&lt;1;k++){
            int divIndexFind = string.indexOf(""*"");
            if(divIndexFind!=-1){
                int indexOp = noop.indexOf(""*"");
                int temp = numbersList[indexOp++]*numbersList[indexOp];
                indexOp--;
                int firstLength = String.valueOf(numbersList[indexOp++]).length();
                int secondLength = String.valueOf(numbersList[indexOp]).length();
                StringBuffer b = new StringBuffer();
                b.append(string);
                b.replace(divIndexFind-firstLength,divIndexFind+secondLength+1, String.valueOf(temp));
                String finalNewString = """";
                finalNewString = b.toString();
                resultFinal = finalNewString;
                resultMul(finalNewString);
            }
        }
    }
}
public void resultPlu(String string){
    StringTokenizer stkn = new StringTokenizer(string, ""+-*/"");
    int length = 0;
    while(stkn.hasMoreTokens()){
        stkn.nextToken();
        length++;
    }
    if(length==1){
    }
    else{
        int[] numbersList = new int[length];
        StringTokenizer noToken = new StringTokenizer(string, ""-/*+"");
        int i=0;
        while(noToken.hasMoreTokens()){
            numbersList[i] = Integer.parseInt(noToken.nextToken());
            i++;
        }

        StringBuffer noop = new StringBuffer();
        StringTokenizer noOp = new StringTokenizer(string, ""[0123456789]"");
        while(noOp.hasMoreTokens()){
            noop.append(noOp.nextToken());
        }
        for(int k=0;k&lt;1;k++){
            int divIndexFind = string.indexOf(""+"");
            if(divIndexFind!=-1){
                int indexOp = noop.indexOf(""+"");
                int temp = numbersList[indexOp++]+numbersList[indexOp];
                indexOp--;
                int firstLength = String.valueOf(numbersList[indexOp++]).length();
                int secondLength = String.valueOf(numbersList[indexOp]).length();
                StringBuffer b = new StringBuffer();
                b.append(string);
                b.replace(divIndexFind-firstLength,divIndexFind+secondLength+1, String.valueOf(temp));
                String finalNewString = """";
                finalNewString = b.toString();
                resultFinal = finalNewString;
                resultPlu(finalNewString);
            }
        }
    }
}
public void resultMin(String string){
    StringTokenizer stkn = new StringTokenizer(string, ""+-*/"");
    int length = 0;
    while(stkn.hasMoreTokens()){
        stkn.nextToken();
        length++;
    }
    if(length==1){
    }
    else{
        int[] numbersList = new int[length];
        StringTokenizer noToken = new StringTokenizer(string, ""-/*+"");
        int i=0;
        while(noToken.hasMoreTokens()){
            numbersList[i] = Integer.parseInt(noToken.nextToken());
            i++;
        }

        StringBuffer noop = new StringBuffer();
        StringTokenizer noOp = new StringTokenizer(string, ""[0123456789]"");
        while(noOp.hasMoreTokens()){
            noop.append(noOp.nextToken());
        }
        for(int k=0;k&lt;1;k++){
            int divIndexFind = string.indexOf(""-"");
            if(divIndexFind!=-1){
                int indexOp = noop.indexOf(""-"");
                int temp = numbersList[indexOp++]-numbersList[indexOp];
                indexOp--;
                int firstLength = String.valueOf(numbersList[indexOp++]).length();
                int secondLength = String.valueOf(numbersList[indexOp]).length();
                StringBuffer b = new StringBuffer();
                b.append(string);
                b.replace(divIndexFind-firstLength,divIndexFind+secondLength+1, String.valueOf(temp));
                String finalNewString = """";
                finalNewString = b.toString();
                resultFinal = finalNewString;
                resultMin(finalNewString);
            }
        }
    }
}
</code></pre>

<p>}</p>
"
2405065,"<p>Of course you can. If you don't provide, Java usually create and <code>Anonymous Inner Constructor</code> for you. </p>

<p>This is very evident when creating a getter and setter bean where there is no constructor but there exists an anonymous constructor.</p>

<p>For more information, visit the (former Sun) Oracle Site here: <a href=""http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#252986"" rel=""nofollow"">http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#252986</a></p>
"
2451962,"<p>This sample Java program connects to MySQL database using JDBC, executes a query and retrieves and prints the value of the database field.</p>

<p>This same sample code can be used to connect to any type of database, all you need to do is change the connection url (dbUrl in the sample). For this code to work properly, you will need to download the mysql driver for JDBC in other words Java Connectors from mysql.com site.</p>

<p>If after downloading the URL it still doesn't work then it is probably due to the classpath. You will have to add the driver jar file in the classpath.</p>

<pre><code>import java.sql.*;
import javax.sql.*;

public class jdbcdemo{

public static void main(String args[]){
String dbtime;
String dbUrl = ""jdbc:mysql://your.database.domain/yourDBname"";
String dbClass = ""com.mysql.jdbc.Driver"";
String query = ""Select * FROM users"";

try {

Class.forName(""com.mysql.jdbc.Driver"");
Connection con = DriverManager.getConnection (dbUrl);
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery(query);

while (rs.next()) {
dbtime = rs.getString(1);
System.out.println(dbtime);
} //end while

con.close();
} //end try

catch(ClassNotFoundException e) {
e.printStackTrace();
}

catch(SQLException e) {
e.printStackTrace();
}

}  //end main

}  //end class
</code></pre>
"
2410348,"<p>I've never actually used this, but try <code>view.getClass().getGenericSuperclass()</code></p>
"
2419466,"<p>there is nothing wrong with the code you pasted, however you can use a non static inner class to make things (arguably) cleaner:</p>

<pre><code>public class ClassA {
    private boolean ClassAattr = false;

    public ClassA() {    
        ClassAHandler handler = new ClassAHandler();
    }

    class ClassAHandler extends GeneralHandler {

        // magically sees the instantiating ClassA members and methods
    }
}
</code></pre>
"
25402898,"<p>@Dougnukem answer helped me a lot. I have taken the Groovy approach (suing groovy 2.3.3)</p>

<p>I did some changes on Dougnukem code.
This will work with java 7 and will print two attributes to stdout evet 10 sec.</p>

<pre><code>        package com.my.company.jmx
        import groovy.util.GroovyMBean;
        import javax.management.remote.JMXServiceURL
        import javax.management.remote.JMXConnectorFactory
        import java.lang.management.*

            class Monitor {
                static main(args) {
                    def serverUrl = 'service:jmx:rmi:///jndi/rmi://localhost:5019/jmxrmi'
                    String beanName = ""Catalina:type=DataSource,class=javax.sql.DataSource,name=\""jdbc/CommonDB\""""
                    println  ""numIdle,numActive""

                    while(1){
                        def server = JMXConnectorFactory.connect(new JMXServiceURL(serverUrl))
                       //make sure to reconnect in case the jvm was restrated 
                        server.connect()
                        GroovyMBean mbean = new GroovyMBean(server.MBeanServerConnection, beanName)
                        println  ""${mbean.numIdle},${mbean.numActive}""
                        server.close()
                        sleep(10000)
                    }

                }
            }
</code></pre>

<p>Compile this code into a jar using maven-compiler-plugin so you will not require groovy installation only the groovy-all.jar 
Below is the relevant plugin definition and dependency.</p>

<pre><code>&lt;plugins&gt;
    &lt;plugin&gt;
        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
        &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
        &lt;configuration&gt;
            &lt;compilerId&gt;groovy-eclipse-compiler&lt;/compilerId&gt;
            &lt;source&gt;1.7&lt;/source&gt;
            &lt;target&gt;1.7&lt;/target&gt;
        &lt;/configuration&gt;
        &lt;dependencies&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.codehaus.groovy&lt;/groupId&gt;
                &lt;artifactId&gt;groovy-eclipse-compiler&lt;/artifactId&gt;
                &lt;version&gt;2.8.0-01&lt;/version&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.codehaus.groovy&lt;/groupId&gt;
                &lt;artifactId&gt;groovy-eclipse-batch&lt;/artifactId&gt;
                &lt;version&gt;2.3.4-01&lt;/version&gt;
            &lt;/dependency&gt;
        &lt;/dependencies&gt;
    &lt;/plugin&gt;
    &lt;plugins&gt;
        &lt;dependencies&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.codehaus.groovy&lt;/groupId&gt;
                &lt;artifactId&gt;groovy-all&lt;/artifactId&gt;
            &lt;/dependency&gt;
        &lt;/dependencies&gt;
</code></pre>

<p>Wrap it with a bat or a shell and it will print the data to stdout.</p>
"
26194665,"<pre><code>public String join(String[] str, String separator){
    String retval = """";
    for (String s: str){ retval+= separator + s;}
    return retval.replaceFirst(separator, """");
}
</code></pre>
"
26309490,"<p>As many others have answered: Java doesn't support user-defined operator overloading.</p>

<p>Maybe this is off-topic, but I want to comment on some things I read in some answers.</p>

<p><strong>About readability.</strong><br>
Compare:</p>

<ol>
<li>c = a + b </li>
<li>c = a.add(b)</li>
</ol>

<p>Look again!<br>
<strong>Which one is more readable?</strong></p>

<p>A programming language that allows the creation of user-defined types, should allow them to act in the same way as the built-in types (or primitive types).</p>

<p>So Java breaks a fundamental principle of Generic Programming:<br>
<strong><em>We should be able to interchange objects of built-in types with objects of user-defined types.</em></strong><br>
(You may be wondering: ""Did he say 'objects of built-in'?"". Yes, <a href=""http://componentsprogramming.com/writing-min-function-part1/#Ref5"" rel=""nofollow"" title=""object practical definition"">see here</a>.)</p>

<p><strong>About String concatenation:</strong></p>

<p>Mathematicians use the symnol + for commutative operations on sets.<br>
So we can be sure that a + b = b + a.<br>
String concatenation (in most programming languages) doesn't respect this common mathematical notation.</p>

<blockquote>
<pre><code>a := ""hello"";
b := ""world"";
c := (a + b = b + a);
</code></pre>
</blockquote>

<p>or in Java:</p>

<blockquote>
<pre><code>String a = ""hello"";
String b = ""world"";
boolean c = (a + b).equals(b + a);
</code></pre>
</blockquote>

<p>Extra:<br>
Notice how in Java equality and identity are confused. 
The == (equality) symbol means:<br>
a. Equality for primitive types<br>
b. Identity-check for user-defined types, therefore, we are forced to use the <em>function</em> equals() for equality.<br>
But... What has this to do with  operator overloading?<br>
If language allows operator overloading the user could give the proper meaning to the equality operator.</p>
"
2682715,"<p>Perhaps this is a bit simplistic, but have you tried adding it to your Model? I.e., include the Model in your method's arguments, then add the BindingResult to it, which is then available in your view.</p>

<pre><code>model.addAttribute(""binding"",binding);
</code></pre>

<p>I think you may have to use a forward rather than a redirect (in my head I can't remember if a redirect loses the session or not &mdash; I could be wrong about this as I don't have any documentation handy, i.e., if you're not getting the BindingResult after adding it to the Model, try using a forward instead to confirm this).</p>
"
3129155,"<p>JavaAssist is a class library to manipulate your Java Byte Code without touching the source. Let's take an example of measuring
time taken to execute a method.</p>

<pre><code>public class Subject {
    /**
     * Timetaken for start &amp; end of the method
     * 
     * @throws InterruptedException
     */
    public void method2() throws InterruptedException {
        // Some business logic :)
        Thread.sleep(2000);
    }
}
</code></pre>

<p>To measure time taken for executing <code>subject.method2()</code>, you could enhance the <code>Subject.methods()</code> by adding code start and end of the method as shown.</p>

<pre><code>public class JavaAssist {
    public static void main(String[] args) {
        timeTaken();
    }

    public static void timeTaken() {
        try {
            ClassPool p = ClassPool.getDefault();
            CtClass cc = p.get(""Subject"");
            CtMethod meth2 = cc.getDeclaredMethod(""method2"");
            meth2.insertBefore(""System.out.println(\"" Start : \""+new java.util.Date());"");
            meth2.insertAfter(""System.out.println(\"" End : \""+new java.util.Date());"");
            // cc.writeFile(""."");
            Class c = cc.toClass();
            Subject s = (Subject) c.newInstance();
            s.method2();
            cc.detach();
        } catch (Exception e) {
            // suppressed
        }
    }
}
</code></pre>

<p>Output:
Start : Wed May 26 17:24:18 EDT 2010
End : Wed May 26 17:24:20 EDT 2010</p>

<p>Reference
<a href=""http://www.csg.is.titech.ac.jp/~chiba/javassist/tutorial/tutorial.html#read"" rel=""nofollow"">http://www.csg.is.titech.ac.jp/~chiba/javassist/tutorial/tutorial.html#read</a></p>

<p><a href=""http://www.csg.is.titech.ac.jp/~chiba/javassist/html/"" rel=""nofollow"">http://www.csg.is.titech.ac.jp/~chiba/javassist/html/</a></p>

<p>Origin Post from:
<a href=""http://www.senthilb.com/2010/05/javaassist-byte-code-enhancement.html"" rel=""nofollow"">http://www.senthilb.com/2010/05/javaassist-byte-code-enhancement.html</a></p>
"
27479250,"<p>whats up with the hassle if you can just do this </p>

<pre><code>word = (String) word.subSequence(0, word.length() -1);
</code></pre>

<p>this returns new String without the last part of a String.</p>
"
10772986,"<pre><code>public abstract class Parent implements Clonable {
  private Object peer;

  // Example 1 
  public Parent() {
    try {
      peer = this.clone();
    } catch (CloneNotSupportedException e) {
      e.printStackTrace();
    }
  }

  // Example 2
  public Parent(String name) {
    try {
      peer = this.getClass().getConstructor(String.class).newInstance(name);
    } catch (Exception e) {
      e.printStackTrace();
    }
  }

} 

public &lt;T extends Parent&gt; T getPeer() {
 return (T)peer;
}

public class Child01 extends Parent { }

public class Child02 extends Parent { }
</code></pre>
"
3629844,"<p>You don't need array's. You can do that with recursion.<br>
Try this:</p>

<pre><code>public class TestFile {
    /**
     * @param args
     */
    public static void main(String[] args) throws Exception {
        TestFile f = new TestFile();
        f.print(100);
    }

    public void print(int x) {
        if (x &gt; 0) {
            System.out.println(x);
            x--;
            print(x);
        }
    }
}
</code></pre>
"
4130466,"<pre><code> system(""seq 1 100"");
</code></pre>

<p>in  C will give the desired result. Find the equivalent Java call to run a shell command.</p>
"
29768363,"<pre><code>DateFormat formatter=new SimpleDateFormat(""dd-MM-yyyy"");; 
Date date =(Date)formatter.parse(""12-01-1990"");     //birthDate is a String, in format dd-MM-yyyy

Calendar birthDate = Calendar.getInstance();
birthDate.setTime(date);

Calendar sysDate = Calendar.getInstance();
sysDate.setTime(new Date());

int ageDiff = sysDate.get(Calendar.YEAR) - birthDate.get(Calendar.YEAR);

System.out.println(ageDiff); 
</code></pre>
"
3491716,"<p>If you have d1 and d2 as your dates, the best solution is probably the following:</p>

<pre><code>int days1 = d1.getTime()/(60*60*24*1000);//find the number of days since the epoch.
int days2 = d2.getTime()/(60*60*24*1000);
</code></pre>

<p>then just say</p>

<pre><code>days2-days1
</code></pre>

<p>or whatever</p>
"
3589554,"<pre><code>int x;
public static void main(String args[]){
    E a = new E();
    System.out.println(a.hashcode());
    E b = new E();
    System.out.println(b.hashcode());
}

public int hashcode(){
    return x*17;
}
</code></pre>
"
3661670,"<p>There is no such a function, but you could create something like the following, and invoke it whenever you need to. </p>

<pre><code>import java.util.Arrays;
import java.util.List;

public class FoldTest {
    public static void main( String [] args ) {
        List&lt;String&gt; list = Arrays.asList(""a"",""b"",""c"");
        String s = fold( list, "","");
        System.out.println( s );
    }
    private static String fold( List&lt;String&gt; l, String with  ) {
        StringBuilder sb = new StringBuilder();
        for( String s: l ) {
            sb.append( s ); 
            sb.append( with );
        }
        return sb.deleteCharAt(sb.length() -1 ).toString();

    }
}
</code></pre>
"
5358428,"<p>Does Clojure count because it runs on the JVM?</p>

<pre><code>(range 1 101)
</code></pre>

<p>or:</p>

<pre><code>(take 100 (iterate inc 1))
</code></pre>

<p>Both work directly at the REPL (which includes an implied print).</p>
"
14025119,"<pre><code>textfield.addKeyListener(new KeyAdapter()
{
      public void keyTyped(KeyEvent ke)
{


    char c = ke.getKeyChar();
    if((!(Character.isDigit(c))) &amp;&amp; // Only digits
    (c ! '\b') ) // For backspace
    {
         ke.consume();
    }
 }

public void keyReleased(KeyEvent e){}
public void keyPressed(KeyEvent e){}
}); 
</code></pre>
"
4057903,"<pre><code>public class Products {
private Brands brand;
...
}
public class Brands {
private long id;
...
}
...

DetachedCriteria dc=DetachedCriteria.forClass(Products.class, ""prod"");

dc.add(Restrictions.ge(""prod.brand.id"", Long.parseLong(""12345"")));
</code></pre>
"
14378516,"<p>There is some option to achieve the same, Follow the below points.</p>

<p>1) Open Macro explorer:</p>

<p>2) Create new macro:</p>

<p>3) Name it ""OutlineRegions"" (Or whatever you want)</p>

<p>4) Right Click on the ""OutlineRegions"" (Showing on Macro Explorer) select the ""Edit"" option and paste the following VB code into it:</p>

<pre><code>    Imports System
Imports EnvDTE
Imports EnvDTE80
Imports EnvDTE90
Imports EnvDTE90a
Imports EnvDTE100
Imports System.Diagnostics
Imports System.Collections

Public Module OutlineRegions

    Sub OutlineRegions()
        Dim selection As EnvDTE.TextSelection = DTE.ActiveDocument.Selection

        Const REGION_START As String = ""//#region""
        Const REGION_END As String = ""//#endregion""

        selection.SelectAll()
        Dim text As String = selection.Text
        selection.StartOfDocument(True)

        Dim startIndex As Integer
        Dim endIndex As Integer
        Dim lastIndex As Integer = 0
        Dim startRegions As Stack = New Stack()

        Do
            startIndex = text.IndexOf(REGION_START, lastIndex)
            endIndex = text.IndexOf(REGION_END, lastIndex)

            If startIndex = -1 AndAlso endIndex = -1 Then
                Exit Do
            End If

            If startIndex &lt;&gt; -1 AndAlso startIndex &lt; endIndex Then
                startRegions.Push(startIndex)
                lastIndex = startIndex + 1
            Else
                ' Outline region ...
                selection.MoveToLineAndOffset(CalcLineNumber(text, CInt(startRegions.Pop())), 1)
                selection.MoveToLineAndOffset(CalcLineNumber(text, endIndex) + 1, 1, True)
                selection.OutlineSection()

                lastIndex = endIndex + 1
            End If
        Loop

        selection.StartOfDocument()
    End Sub

    Private Function CalcLineNumber(ByVal text As String, ByVal index As Integer)
        Dim lineNumber As Integer = 1
        Dim i As Integer = 0

        While i &lt; index
            If text.Chars(i) = vbCr Then
                lineNumber += 1
                i += 1
            End If

            i += 1
        End While

        Return lineNumber
    End Function
End Module
</code></pre>

<p>5) Save the macro and close the editor.</p>

<p>6) Now let's assign shortcut to the macro. Go to Tools->Options->Environment->Keyboard and search for your macro in ""show commands containing"" textbox (Type: Macro into the text box, it will suggest the macros name, choose yours one.)</p>

<p>7) now in textbox under the ""Press shortcut keys"" you can enter the desired shortcut. I use Ctrl+M+N.</p>

<p>Use: </p>

<pre><code>return
{
//Properties
//#region
Name:null,
Address:null
//#endregion
}
</code></pre>

<p>8) Press the saved shortcut key</p>

<p>See below result: </p>

<p><img src=""http://i.stack.imgur.com/c8gtK.png"" alt=""enter image description here""></p>
"
6646353,"<pre><code>class Widen {
    private static widen(long k) {
        System.out.println(""Converted to long: "" + k);
    }
    private static widen(int ... k) {
        System.out.println(""Converted to varargs: "" + k);
    }
    private static widen(Integer k) {
        System.out.println(""Converted to Integer: "" + k);
    }
    public static void main(String ... args) {
        int value = 3;
        widen(value);  // Output: Converted to long: 3
    }
} 
</code></pre>

<p>to solve above mind this:</p>

<p>widening beats boxing, boxing beats  varargs</p>

<p>the out put will be 
<strong><em>Converted to long:3</em></strong></p>
"
6858099,"<p>I had the same problem but got fixed</p>

<p>i dont know exactly how this problem gonna fix </p>

<p>Just try, It might be helpful</p>

<p>add this code at the top of ur code</p>

<pre><code>import com.MyFirstApp.activities.R;
</code></pre>

<p>here <code>com.MyFirstApp.activties</code> is my component name replace it with your component name</p>
"
16541089,"<p>Here a answer for nested class (static inner):
In my case i need to acquire the type by its fully qualified name</p>

<pre><code>Class.forName(somePackage.innerClass$outerClass).getConstructor().newInstance();
</code></pre>

<p>the '<strong>$</strong>' is crucial!</p>

<p>with a dot you'll get ClassNotFoundException for class ""package.innerClass.outerClass"". The exception is missleading :-(.</p>
"
5643353,"<p>Come on guys.. its not that hard.   Im using string comparison.. but you can just compare the object type if you want.</p>

<pre><code>public static &lt;T extends Enum&lt;T&gt;&gt; Map&lt;T, String&gt;  Initialize_Map(Class&lt;T&gt; enumClass) {
  Map&lt;T, String&gt; map = new HashMap&lt;T, String&gt;();
  for (T val : enumClass.getEnumConstants()) {
    map.put(val, val.toString() + (val.toString().equals(""ENUM_ELMT"") ? "" (appended)"" : """"));
  }
  return map;       
}
</code></pre>
"
7985834,"<p>you can apply the same logic as the SimpleDateFormat solution without relying on SimpleDateFormat</p>

<pre><code>date1.getFullYear()*10000 + date1.getMonth()*100 + date1.getDate() == 
date2.getFullYear()*10000 + date2.getMonth()*100 + date2.getDate()
</code></pre>
"
17228316,"<p>sorry but judging from your examples and your question you actually have problems understanding java persistence. Database-entities are self-managed via getters and setters - these can do any validation you would like them to have. If you really set attributes without them, you're missing core concepts of object-oriented development AND persistence -- managed entities in particular.
Methinks you need to re-engineer your project, having problems like these are a sure sign of fundamental design flaws ... just giving some advice here - and thats the solution :</p>

<pre><code>@Column(name=""doubleColumn""}
private Double doubleColumn = Double.NaN  //yes, this is intentional. Verily.

public void setDouble(Double d)
{
    if(d.isNan || d.isInfinite()
    {
       //do something nice here
    }
    else
       this.doubleColumn = d;
}
public Double getDouble()
{
   return !this.doubleColumn.isNaN() &amp;&amp; !this.doubleColumn.isInfinite() ? this.doubleColumn : new Double();
}
</code></pre>

<p>.... its that easy.</p>
"
17230677,"<p>The one of easiest ways:</p>

<pre><code>public String reverse(String post)
{       
    String backward = """";
    for(int i = post.length()-1; i &gt;= 0; i--) {
        backward = backward + post.substring(i, i+1);
    }        
    return backward;
} 
</code></pre>
"
8324073,"<p>I tried this for the delicious api and it worked like a charm</p>

<pre><code>import urllib2,base64
req=urllib2.Request(""https://api.del.icio.us/v1/posts/update"")
username=""Replace with your Username""
password=""Replace with your password""
base64string = base64.encodestring('%s:%s' % (username, password)).replace('\n', '')
req.add_header(""Authorization"", ""Basic %s"" % base64string) 
response=urllib2.urlopen(req)
print response.read()
</code></pre>
"
17473895,"<p>This reverses the words in the given string. Words are assumed to be separated by a single space. Reversal is done in place (in the character buffer).</p>

<pre><code>public static String reversePhrases(String s)
{
    char[] buf = s.toCharArray();
    int len = buf.length;
    int start = 0;
    for (int i = 0; i &lt; len; i++) {
        if (buf[i] == ' ' || i == (len-1)) {
            if (i == (len-1)) {
                i = len;
            }
            int end = (start + i)/2;
            for (int j = start; j &lt; end; j++) {
                char c = buf[j];
                int pos = (start + i) - j - 1;
                buf[j] = buf[pos];
                buf[pos] = c;
            }
            start = i + 1;    
        }
    }
    return new String(buf);
}
</code></pre>
"
6043581,"<p>In Java there is no Access Specifiers. In Java sun Microsoft give Modifiers.</p>

<p>According to Sun Microsoft there are lot of Modifiers are there</p>

<ul>
<li><code>private</code></li>
<li><code>protected</code></li>
<li><code>public</code></li>
<li><code>static</code></li>
<li><code>final</code></li>
<li><code>abstract</code></li>
<li><code>synchronized</code></li>
<li><code>transient</code></li>
<li><code>volatile</code></li>
<li><code>strictfp</code></li>
<li>etc</li>
</ul>

<p>Some people are believe <code>private</code>, <code>public</code>, <code>protected</code> are Access specifiers. But According to Sun Microsoft there are called Modifiers. </p>
"
17912384,"<p>Easy way:</p>

<pre><code>String reverseString(String string)
{
    String newString = """";
    for(int x = string.length() - 1; x &gt; -1; x ++)
        newString += string.charAt(x);
    return newString;
}
</code></pre>
"
18610749,"<p>I hope this will be useful for someone.</p>

<pre><code>public class ReverseString {

public static void main(String[] args) {
    String a=""abrakadabra"";
    String b=reverse(a);
    System.out.print(b);
}
    public static String reverse(String b){
        String j="""";
        int a=b.length();           
        for (int x=a;x&gt;0;x--){          
        j=j+b.substring(x-1,x);}

        return j;
    }
}
</code></pre>
"
19353548,"<p>You could store by creating an object that hold a string value number to store in an array list.
by example: <code>BigInt objt = new BigInt(""999999999999999999999999999999999999999999999999999"");</code></p>

<p>objt is created by the constructor of BigInt class. Inside the class look like.</p>

<pre><code>BigInt{

ArrayList&lt;Integer&gt; myNumber = new ArrayList &lt;Integer&gt;();        

public BigInt(){}

public BigInt(String number){ for(int i; i&lt;number.length; i++){ myNumber.add(number.indexOf(i)); } }

}
</code></pre>
"
10138421,"<p>This worked <strong>for me</strong>:</p>

<pre><code>&lt;bean id=""mailSender"" class=""org.springframework.mail.javamail.JavaMailSenderImpl""&gt;
    &lt;property name=""host"" value=""smtp.gmail.com"" /&gt;
    &lt;property name=""port"" value=""465"" /&gt;
    &lt;property name=""protocol"" value=""smtps"" /&gt;
    &lt;property name=""username"" value=""my_email@domain.tld"" /&gt;
    &lt;property name=""password"" value=""my_password"" /&gt;
    &lt;property name=""javaMailProperties""&gt;
    &lt;props&gt;
        &lt;prop key=""mail.smtps.auth""&gt;true&lt;/prop&gt;
    &lt;/props&gt;
    &lt;/property&gt;
&lt;/bean&gt;
</code></pre>

<p>See Google support for further information: <a href=""http://support.google.com/mail/bin/answer.py?hl=en&amp;answer=78799"" rel=""nofollow"">http://support.google.com/mail/bin/answer.py?hl=en&amp;answer=78799</a></p>
"
10201737,"<pre><code>public class Sample {
    public static void main(String[] args) {    
        String desktopPath =System.getProperty(""user.home"") + ""\\""+""Desktop"";
        String s = ""\"""" + desktopPath.replace(""\\"",""\\\\"") + ""\\\\"" +""satis"" + ""\"""";
        System.out.print(s);
        File f = new File(s);
        boolean mkdir = f.mkdir();
        System.out.println(mkdir);
    }
}
</code></pre>
"
20341442,"<p>if its to reverse each letter than this for loop works nicely:</p>

<pre><code>for(int i = 0; i &lt; input.length(); i++){
    output = output + input.substring((input.length()-i)-1, input.length()-i);
}
</code></pre>
"
7702135,"<pre><code>import java.io.*;
public class Upch2
{
   BufferedReader br= new BufferedReader( new InputStreamReader(System.in));
   public void main()throws IOException
    { 
        System.out.println(""Pl. Enter A Line"");
        String s=br.readLine();
        String s1="" "";
        s="" ""+s;
        int len=s.length();
        s= s.toLowerCase();
        for(int j=1;j&lt;len;j++)
         {
           char  ch=s.charAt(j);

           if(s.charAt(j-1)!=' ')
           {
             ch=Character.toLowerCase((s.charAt(j)));
           }
           else
           {
             ch=Character.toUpperCase((s.charAt(j)));
            }
            s1=s1+ch;
          }
     System.out.println("" ""+s1);
  }
}
</code></pre>
"
20720973,"<pre><code>import java.util.Scanner;

public class TestDemo {
    public static void main(String[] args) {
        boolean flag = true;
        Scanner sc = new Scanner(System.in);
        System.out.println(""Enter the String:"");
        String str = sc.nextLine();

        for (int i = 0; i &lt; str.length(); i++) {
            if(str.charAt(i) &gt; 48 &amp;&amp; str.charAt(i) &lt; 58) {
                flag = false;
                break;
            }
        }

        if(flag == true) {
            System.out.println(""String is a valid String."");
        } else {
            System.out.println(""String contains number."");
        }
    }
}
</code></pre>
"
20812845,"<p>As noted above the row height needs to be calculated but the current solution could be improved. In fact, it wasn't working for me. <code>jtxt.getColumns()</code> was returning zero causing a divide by zero. Here's some code I think is cleaner:</p>

<pre><code>// set the width on the jTextArea causing a calc of preferred height
jtxt.setSize(table.getWidth(), Short.MAX_VALUE);
int prefH = jtxt.getPreferredSize().height;
table.setRowHeight(row, prefH);
</code></pre>
"
11767850,"<p>Add Maven dependency :</p>

<pre><code>&lt;dependency&gt;
  &lt;groupId&gt;org.geotoolkit&lt;/groupId&gt;
  &lt;artifactId&gt;geotk-coverageio&lt;/artifactId&gt;
  &lt;version&gt;3.17&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p>Code example :</p>

<pre><code>import org.geotoolkit.image.io.plugin.RawTiffImageReader;

IIORegistry registry = IIORegistry.getDefaultInstance();   
registry.registerServiceProvider(new RawTiffImageReader.Spi());            

String[] a = ImageIO.getReaderFileSuffixes();    
for (int i=0; i&lt;a.length; i++) {
 System.out.println(a[i]);
}   

BufferedImage image = ImageIO.read(new File(""C:\\mypic.tiff""));

ImageIO.write(image, ""jpg"",new File(""C:\\out.jpg""));
ImageIO.write(image, ""gif"",new File(""C:\\out.gif""));
ImageIO.write(image, ""png"",new File(""C:\\out.png""));
ImageIO.write(image, ""tif"",new File(""C:\\out.tiff""));
</code></pre>
"
21227967,"<p>I think that the reason behind using PrintWriter is already mentioned above but one of the important reason is you an pass a file object directly to the PrintWriter constructor which makes it easy to use it.</p>

<pre><code>File file=new File(“newfile.txt”);
PrintWriter pw=new PrintWriter(file);
</code></pre>
"
12020618,"<p>I have tried them all: they don't help. The BEST way ever is to make a new table model without the column you want to delete. This is how you do it:</p>

<pre><code>table = (DefaultTableModel) &lt;table name&gt;.getModel();
DefaultTableModel table1 = new DefaultTableModel();
Vector v = table.getDataVector();
Vector v1 = newvector(v,&lt;column index you want to delete&gt;);

Vector newvector(Vector v,int j){
    Vector v1= new Vector();
    try{
        Vector v2;
        Object[] o = v.toArray();
        int i =0;
        while(i&lt;o.length){
            v2 = (Vector) o[i];
            v2.remove(j);
            v1.add(v2);
            i++;
        }
    }
    catch(Exception e){
        JOptionPane.showMessageDialog(null,""Error in newvector \n""+e);
    }
    return v1;
}

Vector getColumnIdentifiers(int i) {
    Vector columnIdentifiers = new Vector();
    int j=0;
    while(j&lt;i){
        columnIdentifiers.add((""c""+(j+1)));
        j++;
    }
    return columnIdentifiers;
}
table1.setDataVector(v1,getColumnIdentifiers((&lt;column count&gt;-1)));
&lt;table name&gt;.setModel(table1);
</code></pre>
"
8770322,"<p>There is a workaround if it helps your cause. </p>

<pre><code>      @ModelAttribute(""users"")
      public Collection&lt;String&gt; getUsers(){
           return this.users;
      }
</code></pre>

<p>Here you have made it return Collection of String. Make it a Collection of User (it may be a class wrapping string representing a user, or a class with a bunch of data regarding a user). The problem happens with strings only. If the returned Collection contains any other object, this never happens. However, this is just a workaround, and may be, not required at all. Just my two cents. Just make it like -</p>

<pre><code>      @ModelAttribute(""users"")
      public Collection&lt;User&gt; getUsers(){
           return this.users;
      }
</code></pre>
"
8774716,"<p>My annotation lib for implementing <code>Comparable</code> and <code>Comparator</code>:</p>

<pre><code>public class Person implements Comparable&lt;Person&gt; {         
    private String firstName;  
    private String lastName;         
    private int age;         
    private char gentle;         

    @Override         
    @CompaProperties({ @CompaProperty(property = ""lastName""),              
        @CompaProperty(property = ""age"",  order = Order.DSC) })           
    public int compareTo(Person person) {                 
        return Compamatic.doComparasion(this, person);         
    }  
}
</code></pre>

<p>Click the link to see more examples.
<a href=""http://code.google.com/p/compamatic/wiki/CompamaticByExamples"" rel=""nofollow"">http://code.google.com/p/compamatic/wiki/CompamaticByExamples</a></p>
"
22044043,"<p>Have you tried the <a href=""https://github.com/tzinfo/tzinfo"" rel=""nofollow"">TZInfo</a> gem?</p>

<p>You can get the timezones of a country this way:</p>

<pre><code>&gt;&gt; TZInfo::Country.get(""DE"").zone_identifiers
=&gt; [""Europe/Berlin"", ""Europe/Busingen""]
&gt;&gt; TZInfo::Country.get(""CN"").zone_identifiers
=&gt; [""Asia/Shanghai"", ""Asia/Harbin"", ""Asia/Chongqing"", ""Asia/Urumqi"", ""Asia/Kashgar""]
&gt;&gt; TZInfo::Country.get(""US"").zone_identifiers
=&gt; [""America/New_York"", ""America/Detroit"", ""America/Kentucky/Louisville"",   ""America/Kentucky/Monticello"", ""America/Indiana/Indianapolis"", ""America/Indiana/Vincennes"", ""America/Indiana/Winamac"", ""America/Indiana/Marengo"", ""America/Indiana/Petersburg"", ""America/Indiana/Vevay"", ""America/Chicago"", ""America/Indiana/Tell_City"", ""America/Indiana/Knox"", ""America/Menominee"", ""America/North_Dakota/Center"", ""America/North_Dakota/New_Salem"", ""America/North_Dakota/Beulah"", ""America/Denver"", ""America/Boise"", ""America/Phoenix"", ""America/Los_Angeles"", ""America/Anchorage"", ""America/Juneau"", ""America/Sitka"", ""America/Yakutat"", ""America/Nome"", ""America/Adak"", ""America/Metlakatla"", ""Pacific/Honolulu""]
</code></pre>
"
22222700,"<p>Use the below piece of code to get the domain name.</p>

<pre><code>&lt;cfoutput&gt;#cgi.server_name#&lt;/cfoutput&gt;
</code></pre>

<p>Hoping this is what you are expecting.</p>
"
9537902,"<pre><code>$ javaws

Usage:   javaws [-run-options] &lt;jnlp file&gt;
         javaws [-control-options]

control-options:
  -about                Shows a sample application.
  -viewer               Shows the trusted certificate viewer.

run-options:
  -arg arg              Adds an application argument before launching.
  -param name=value     Adds an applet parameter before launching.
  -property name=value  Sets a system property before launching.
  -update seconds       Update check if seconds since last checked.
  -license              Display the GPL license and exit.
  -verbose              Enable verbose output.
  -nosecurity           Disables the secure runtime environment.
  -noupdate             Disables checking for updates.
  -headless             Disables download window, other UIs.
  -strict               Enables strict checking of JNLP file format.
  -Xnofork              Do not create another JVM.
  -Xclearcache          Clean the JNLP application cache.
  -help                 Print this message and exit.
</code></pre>
"
13462778,"<p>Your question:
I think that wastes 4 byte (on 32-bit machines) for the size of the entry itself.</p>

<p>Just one Object variable is created for the entire datastructure of hashset and doing that would save yourself from re-writing the entire hashMap kind of code again.</p>

<p><code>private static final Object PRESENT = new Object();</code></p>

<p>All the keys are having one value i.e PRESENT object. </p>
"
13596599,"<p>A more general answer would be to import <code>java.util.Date</code>, then when you need to set a <code>timestamp</code> equal to the current date, simply set it equal to <code>new Date()</code>.</p>
"
13700659,"<pre><code>/*
Using Throwable we can trap any know error in JAVA..
*/
public class TestRecur {
    private int i = 0;


    public static void main(String[] args) {
        try {
            new TestRecur().show();
        } catch (Throwable err) {
            System.err.println(""Error..."");
        }
    }

    private void show() {
        System.out.println(""I = "" + i++);
        show();
    }
}
</code></pre>

<p>//however u may have a look at the link : <a href=""http://marxsoftware.blogspot.in/2009/07/diagnosing-and-resolving.html"" rel=""nofollow"">http://marxsoftware.blogspot.in/2009/07/diagnosing-and-resolving.html</a> to 
// understand the code snipets which may raise error</p>
"
10388275,"<p>Probably you are missing a forward slash (<code>/</code>) after update and before question mark.</p>

<p>Current query: </p>

<pre><code>http://localhost:8983/solr/update?stream.body=&lt;delete&gt;&lt;query&gt;*:*&lt;/query&gt;&lt;/delete&gt;&amp;commit=true
</code></pre>

<p>Revised query: </p>

<pre><code>http://localhost:8983/solr/update/?stream.body=&lt;delete&gt;&lt;query&gt;*:*&lt;/query&gt;&lt;/delete&gt;&amp;commit=true
</code></pre>
"
10465844,"<p>This Solution for me, work's very good:</p>

<pre><code>try {           
                // Getting The Array ""Courses"" from json1 &amp; json2   
                Courses1 =json1.getJSONArray(TAG_COURSES1);
                Courses2 = json2.getJSONArray(TAG_COURSES);

                //LOOP FOR JSON1
                for(int i = 0; i &lt; Courses1.length(); i++){
                    //LOOP FOR JSON2
                    for(int ii = 0; ii &lt; Courses2.length(); ii++){
                        JSONObject courses1 = Courses1.getJSONObject(i);
                        JSONObject courses2 = Courses2.getJSONObject(ii);

                        // Storing each json1 item in variable
                        int courseID1 = courses1.getInt(TAG_COURSEID1);
                        Log.e(""COURSEID2:"", Integer.toString(courseID1));
                        String Rating1 = courses1.getString(TAG_RATING1);
                        int Status1 = courses1.getInt(TAG_STATUS1);
                        Log.e(""Status1:"", Integer.toString(Status1));      //Put the actual value for Status1 in log.             

                        // Storing each json2 item in variable
                        int courseID2 = courses2.getInt(TAG_COURSEID);
                        Log.e(""COURSEID2:"", Integer.toString(courseID));   //Put the actual value for CourseID in log
                        String Title2 = courses2.getString(TAG_TITLE);                      
                        String instructor2 = courses2.getString(TAG_INSTRUCTOR);
                        String length2 = courses2.getString(TAG_LENGTH);
                        String rating2 = courses2.getString(TAG_RATING);
                        String subject2 = courses2.getString(TAG_SUBJECT);
                        String description2 = courses2.getString(TAG_DESCRIPTION);

                        //Status1 = 5 from json1; Incomplete, Status1 =-1 Complete 
                        if(Status1 == 5 &amp;&amp; courseID2 == courseID1){                                  

                        // creating new HashMap
                        HashMap&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();         
                        //Storing the elements if condition is true.
                        map.put(TAG_COURSEID, Integer.toString(courseID2)); //pend for compare
                        map.put(TAG_TITLE, Title2);
                        map.put(TAG_INSTRUCTOR, instructor2);
                        map.put(TAG_LENGTH, length2);
                        map.put(TAG_RATING, rating2);
                        map.put(TAG_SUBJECT, subject2); //show it
                        map.put(TAG_DESCRIPTION, description2);

                        //adding HashList to ArrayList
                        contactList.add(map);
                        }//if
                    }//for2 (json2)
                } //for1 (json1)                
            }//Try
</code></pre>

<p>Hope this help others.</p>
"
24057535,"<p>check this</p>

<pre><code>   String[] VALUES = new String[] {""AB"",""BC"",""CD"",""AE""};
   String s;

   for(int i=0; i&lt; VALUES.length ; i++)
      {

         if ( VALUES[i].equals(s) )
          { 
           // do your stuff
           } 
        else{    
           //do your stuff
            }
       } 
</code></pre>

<p>Thank You</p>
"
14998346,"<pre><code>public class nub
 {

 static int i=1;

 public static void main(String...a)
  {

    if(i&lt;=1000)//suppose my range is 10000
    {
        System.out.println(i);
        i++;
        main();
    }

  }

}    
</code></pre>
"
24661960,"<p>My situation was a bit different. </p>

<ul>
<li><code>JAVA_HOME</code> was set properly to point to 1.7</li>
<li>Other Maven projects were working/building fine with 1.7 features.</li>
<li><code>PATH</code> was set properly.</li>
<li>Everything was up-to-date.</li>
</ul>

<p>Still my simple new Maven project was not working. What I noticed was the difference in the logs when I ran <code>mvn clean install</code>. For my older Maven projects, it showed </p>

<pre><code>[INFO] --- maven-compiler-plugin:2.3.2:compile (default-compile) @ oldProject---
</code></pre>

<p>But for my new project it showed:</p>

<pre><code>[INFO] --- maven-compiler-plugin:2.0.2:compile (default-compile) @ newProject ---
</code></pre>

<p>So, I looked at the <code>POM.xml</code> and noticed this thing in the old project's POM:</p>

<pre><code>&lt;build&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
            &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
            &lt;version&gt;2.3.2&lt;/version&gt;
            &lt;configuration&gt;
                &lt;source&gt;1.7&lt;/source&gt;
                &lt;target&gt;1.7&lt;/target&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;
    &lt;/plugins&gt;
&lt;/build&gt;
</code></pre>

<p>Basically, this plugin tells which compiler version to use for compilation. Just added it to the new project's <code>POM.xml</code> and things worked. </p>

<p>Hope it is useful to someone.</p>
"
11237837,"<p>Try this code...</p>

<pre><code>    &lt;dependency&gt;
        &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
        &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;
        &lt;version&gt;3.0-alpha-1&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre>
"
15748444,"<p>Late model JAVA has optimizations for + with constant strings, employs a StringBuffer behind the scenes, so you do not want to clutter your code with it.</p>

<p>It points to a JAVA oversight, that it does not resemble ANSI C in the automatic concatenation of double quoted strings with only white space between them, e.g.:</p>

<pre><code>const char usage = ""\n""
""Usage: xxxx &lt;options&gt;\n""
""\n""
""Removes your options as designated by the required parameter &lt;options&gt;,\n""
""which must be one of the following strings:\n""
""  love\n""
""  sex\n""
""  drugs\n""
""  rockandroll\n""
""\n"" ;
</code></pre>

<p>I would love to have a multi-line character array constant where embedded linefeeds are honored, so I can present the block without any clutter, e.g.:</p>

<pre><code>String Query = ""
SELECT
    some_column,
    another column
  FROM
      one_table a
    JOIN
      another_table b
    ON    a.id = b.id
      AND a.role_code = b.role_code
  WHERE a.dept = 'sales'
    AND b.sales_quote &gt; 1000
  Order BY 1, 2
"" ;
</code></pre>

<p>To get this, one needs to beat on the JAVA gods.</p>
"
15840607,"<p>You can use AOP and a <a href=""http://www.jcabi.com/jcabi-aspects/apidocs-0.7.16/com/jcabi/aspects/Timeable.html"" rel=""nofollow""><code>@Timeable</code></a> annotation from <a href=""http://www.jcabi.com/jcabi-aspects/annotation-timeable.html"" rel=""nofollow"">jcabi-aspects</a> (I'm a developer):</p>

<pre><code>@Timeable(limit = 1, unit = TimeUnit.SECONDS)
String yourMethod() {
  // execution as usual
}
</code></pre>

<p>Make sure that you somewhere in your method you check for <code>Thread#isInterrupted()</code>:</p>

<pre><code>if (Thread.currentThread.isInterrupted()) {
  throw new IllegalStateException(""time out"");
}
</code></pre>

<p>When time limit is reached your thread will get <code>isInterrupted()</code> flag set to <code>true</code> and it's your job to handle this situation correctly and to stop execution.</p>
"
16154981,"<pre><code>public class Run3 
{
    public static void number(int i)
    {
    if(i==100)
    {
    return; 
    }
    else
    {
        i++;
        System.out.println(i);
        number(i);
    }
    }
public static void main(String[] args)
{
number(0);

}
}
</code></pre>
"
12054493,"<pre><code> import java.util.UUID;

 public class IdGenerator {
    public static int generateUniqueId() {      
        UUID idOne = UUID.randomUUID();
        String str=""""+idOne;        
        int uid=str.hashCode();
        String filterStr=""""+uid;
        str=filterStr.replaceAll(""-"", """");
        return Integer.parseInt(str);
    }

    // XXX: replace with java.util.UUID

    public static void main(String[] args) {
        for (int i = 0; i &lt; 5; i++) {
            System.out.println(generateUniqueId());
            //generateUniqueId();
        }
    }

}
</code></pre>

<p>Hope this helps you.</p>
"
17126115,"<p>You can use the <code>Enum::valueOf()</code> function as suggested by Gareth Davis &amp; Brad Mace above, but make sure you handle the <code>IllegalArgumentException</code> that would be thrown if the string used is not present in the enum.</p>
"
17309209,"<p>Base Function Courtesy : @wrygiel. </p>

<p>This function can convert ISO8601 format to Java Date which can handle the offset values. As per the <a href=""http://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC"" rel=""nofollow"">definition of ISO 8601</a> the offset can be mentioned in different formats.</p>

<pre><code>±[hh]:[mm]
±[hh][mm]
±[hh]

Eg:  ""18:30Z"", ""22:30+04"", ""1130-0700"", and ""15:00-03:30"" all mean the same time. - 06:30PM UTC
</code></pre>

<p>This class has static methods to convert </p>

<ul>
<li>ISO8601 string to Date(Local TimeZone) object</li>
<li>Date to ISO8601 string</li>
<li>Daylight Saving is automatically calc</li>
</ul>

<p>Sample ISO8601 Strings</p>

<pre><code>/*       ""2013-06-25T14:00:00Z"";
         ""2013-06-25T140000Z"";
         ""2013-06-25T14:00:00+04"";
         ""2013-06-25T14:00:00+0400"";
         ""2013-06-25T140000+0400"";
         ""2013-06-25T14:00:00-04"";
         ""2013-06-25T14:00:00-0400"";
         ""2013-06-25T140000-0400"";*/


public class ISO8601DateFormatter {

private static final DateFormat DATE_FORMAT_1 = new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ssZ"");
private static final DateFormat DATE_FORMAT_2 = new SimpleDateFormat(""yyyy-MM-dd'T'HHmmssZ"");
private static final String UTC_PLUS = ""+"";
private static final String UTC_MINUS = ""-"";

public static Date toDate(String iso8601string) throws ParseException {
    iso8601string = iso8601string.trim();
    if(iso8601string.toUpperCase().indexOf(""Z"")&gt;0){
        iso8601string = iso8601string.toUpperCase().replace(""Z"", ""+0000"");
    }else if(((iso8601string.indexOf(UTC_PLUS))&gt;0)){
        iso8601string = replaceColon(iso8601string, iso8601string.indexOf(UTC_PLUS));
        iso8601string = appendZeros(iso8601string, iso8601string.indexOf(UTC_PLUS), UTC_PLUS);
    }else if(((iso8601string.indexOf(UTC_MINUS))&gt;0)){
        iso8601string = replaceColon(iso8601string, iso8601string.indexOf(UTC_MINUS));
        iso8601string = appendZeros(iso8601string, iso8601string.indexOf(UTC_MINUS), UTC_MINUS);
    }

    Date date = null;
    if(iso8601string.contains("":""))
        date = DATE_FORMAT_1.parse(iso8601string);
    else{
        date = DATE_FORMAT_2.parse(iso8601string);
    }
    return date;
}

public static String toISO8601String(Date date){
    return DATE_FORMAT_1.format(date);
}

private static String replaceColon(String sourceStr, int offsetIndex){
    if(sourceStr.substring(offsetIndex).contains("":""))
        return sourceStr.substring(0, offsetIndex) + sourceStr.substring(offsetIndex).replace("":"", """");
    return sourceStr;
}

private static String appendZeros(String sourceStr, int offsetIndex, String offsetChar){
    if((sourceStr.length()-1)-sourceStr.indexOf(offsetChar,offsetIndex)&lt;=2)
        return sourceStr + ""00"";
    return sourceStr;
}
</code></pre>

<p>}</p>
"
13050922,"<p>You can do so by overriding hashcode as given below:</p>

<pre><code>public class Test  
{  
    static int a=0;  

    @Override  
    public int hashCode()  
    {  
        a++;  
        return a;  
    }

    public static void main(String[] args)
    {
        Set&lt;Test&gt; s=new HashSet&lt;Test&gt;();
        Test t1=new Test();
        Test t2=t1;
        s.add(t1);
        s.add(t2);
        System.out.println(s);
        System.out.println(""--Done--"");
    }
}
</code></pre>
"
13629643,"<pre><code>public class SET { 

    public static void main(String[] args) { 
        Set set=new HashSet(); 
        set.add(new AB(10, ""pawan@email"")); 
        set.add(new AB(10, ""pawan@email"")); 
        set.add(new AB(10, ""pawan@email"")); 
        Iterator it=set.iterator(); 
        while(it.hasNext()){ 
            Object o=it.next(); 
            System.out.println(o);
        }
    }
} 

public class AB{ 

    int id;
    String email;

    public AB() { 
        System.out.println(""DC"");
    } 

    AB(int id,String email){ 
        this.id=id;
        this.email=email;
    } 

    @Override public String toString() { 
        // TODO Auto-generated method stub return """"+id+""\t""+email;}
    }
}
</code></pre>
"
27564498,"<pre><code>public static int calc(String string){
    int result=0; 
    String numbers=""0123456789"";
    String operations=""+-/*"";
    for (int i=0;i&lt;string.length();i++){
        if (numbers.contains(string.charAt(i)+"""")){
            result=result*10+(Integer.parseInt(string.charAt(i)+""""));
            }
        else {
            if (string.charAt(i)=='+'){ result+=calc(string.substring(i+1));}
            if (string.charAt(i)=='-'){ result-=calc(string.substring(i+1));}
            if (string.charAt(i)=='*'){ result*=calc(string.substring(i+1));}
            if (string.charAt(i)=='/'){ try{result/=calc(string.substring(i+1));}
                catch (ArithmeticException e){
                    System.err.println(""You cannot devide by Zero!"");}
            }  
            break;
        }        
    }
    return result;
}
</code></pre>
"
17764558,"<p>By the way, you can try to use this function to be sure (for not too much number of decimal digits) that your number will be reformatted to keep only the decimals you need.</p>

<p><a href=""http://pastebin.com/CACER0xK"" rel=""nofollow"">http://pastebin.com/CACER0xK</a></p>

<p><code>n</code> is you number with lots of decimals (e.g. <code>Math.PI</code>),
<code>numberOfDecimals</code> is the maximum number of decimals you need (e.g. 2 for 3.14 or 3 for 3.151).</p>

<p>By theory, putting a negative value to <code>numberOfDecmals</code>, it will cut off the lower integer digits of the number too. E.g putting <code>n=1588.22</code> and <code>numberOfDecimals=-2</code>, the function will return <code>1500.0</code>.</p>

<p>Let me know if it is something wrong.</p>
"
14415778,"<p>I would suggest the use of <code>System.currentTimeMillis()</code>. It returns the amount of milliseconds elapsed since the UNIX epoch.</p>
"
18423505,"<p>I'm no expert, but I do believe that the <code>null</code> equivalent for an int is <code>0</code>.</p>

<p>For example, if you make an <code>int[]</code>, each slot contains <code>0</code> as opposed to <code>null</code>, unless you set it to something else.</p>

<p>In some situations, this may be of use.</p>
"
18571503,"<pre><code>public class Test {

static int x = 0;
public static void main(String[] args) {

    printTo100();

}
public static void printTo100(){
    if(x&lt;=100)
    {
    System.out.println(x+"""");
    x++;
    printTo100();
    }

}

}
</code></pre>
"
19978362,"<pre><code>JTextArea jTextArea=new JTextArea();
JScrollPane jScrollPane=new JScrollPane();
jScrollPane.setViewport(jTextArea);
</code></pre>

<p>you can use them to solve peoblem .</p>
"
15559135,"<p>I do it this way using a StringBuilder:</p>

<pre><code>public static String join(String[] source, String delimiter) {
    if ((null == source) || (source.length &lt; 1)) {
        return """";
    }

    StringBuilder stringbuilder = new StringBuilder();
    for (String s : source) {
        stringbuilder.append(s + delimiter);
    }
    return stringbuilder.toString();
} // join((String[], String)
</code></pre>
"
15902842,"<blockquote>
  <p>There is simple shorthand technique I use most of the times..</p>
</blockquote>

<pre><code>String op = new String;
for (int i : is) 
{
    op += candidatesArr[i-1]+"","";
}
op = op.substring(0, op.length()-1);
</code></pre>
"
20578314,"<p>This seemed to work best for me:</p>

<pre><code>public static Date fromISO8601_( String string ) {

    try {
            return new SimpleDateFormat ( ""yyyy-MM-dd'T'HH:mm:ssXXX"").parse ( string );
    } catch ( ParseException e ) {
        return Exceptions.handle (Date.class, ""Not a valid ISO8601"", e);
    }


}
</code></pre>

<p>I needed to convert to/fro JavaScript date strings to Java. I found the above works with the recommendation. There were some examples using SimpleDateFormat that were close but they did not seem to be the subset as recommended by: </p>

<p><a href=""http://www.w3.org/TR/NOTE-datetime"" rel=""nofollow"">http://www.w3.org/TR/NOTE-datetime</a></p>

<p>and supported by PLIST and JavaScript Strings and such which is what I needed.</p>

<p>This seems to be the most common form of ISO8601 string out there, and a good subset. </p>

<p>The examples they give are:</p>

<pre><code>1994-11-05T08:15:30-05:00 corresponds 
November 5, 1994, 8:15:30 am, US Eastern Standard Time.

 1994-11-05T13:15:30Z corresponds to the same instant.
</code></pre>

<p>I also have a fast version:</p>

<pre><code>final static int SHORT_ISO_8601_TIME_LENGTH =  ""1994-11-05T08:15:30Z"".length ();
                                            // 01234567890123456789012
final static int LONG_ISO_8601_TIME_LENGTH = ""1994-11-05T08:15:30-05:00"".length ();


public static Date fromISO8601( String string ) {
    if (isISO8601 ( string )) {
        char [] charArray = Reflection.toCharArray ( string );//uses unsafe or string.toCharArray if unsafe is not available
        int year = CharScanner.parseIntFromTo ( charArray, 0, 4 );
        int month = CharScanner.parseIntFromTo ( charArray, 5, 7 );
        int day = CharScanner.parseIntFromTo ( charArray, 8, 10 );
        int hour = CharScanner.parseIntFromTo ( charArray, 11, 13 );

        int minute = CharScanner.parseIntFromTo ( charArray, 14, 16 );

        int second = CharScanner.parseIntFromTo ( charArray, 17, 19 );

        TimeZone tz ;

         if (charArray[19] == 'Z') {

             tz = TimeZone.getTimeZone ( ""GMT"" );
         } else {

             StringBuilder builder = new StringBuilder ( 9 );
             builder.append ( ""GMT"" );
             builder.append( charArray, 19, LONG_ISO_8601_TIME_LENGTH - 19);
             String tzStr = builder.toString ();
             tz = TimeZone.getTimeZone ( tzStr ) ;

         }
         return toDate ( tz, year, month, day, hour, minute, second );

    }   else {
        return null;
    }

}
</code></pre>

<p>...</p>

<pre><code>public static int parseIntFromTo ( char[] digitChars, int offset, int to ) {
    int num = digitChars[ offset ] - '0';
    if ( ++offset &lt; to ) {
        num = ( num * 10 ) + ( digitChars[ offset ] - '0' );
        if ( ++offset &lt; to ) {
            num = ( num * 10 ) + ( digitChars[ offset ] - '0' );
            if ( ++offset &lt; to ) {
                num = ( num * 10 ) + ( digitChars[ offset ] - '0' );
                if ( ++offset &lt; to ) {
                    num = ( num * 10 ) + ( digitChars[ offset ] - '0' );
                    if ( ++offset &lt; to ) {
                        num = ( num * 10 ) + ( digitChars[ offset ] - '0' );
                        if ( ++offset &lt; to ) {
                            num = ( num * 10 ) + ( digitChars[ offset ] - '0' );
                            if ( ++offset &lt; to ) {
                                num = ( num * 10 ) + ( digitChars[ offset ] - '0' );
                                if ( ++offset &lt; to ) {
                                    num = ( num * 10 ) + ( digitChars[ offset ] - '0' );
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return num;
}


public static boolean isISO8601( String string ) {
      boolean valid = true;

      if (string.length () == SHORT_ISO_8601_TIME_LENGTH) {
          valid &amp;=  (string.charAt ( 19 )  == 'Z');

      } else if (string.length () == LONG_ISO_8601_TIME_LENGTH) {
          valid &amp;=  (string.charAt ( 19 )  == '-' || string.charAt ( 19 )  == '+');
          valid &amp;=  (string.charAt ( 22 )  == ':');

      } else {
          return false;
      }

    //  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
    // ""1 9 9 4 - 1 1 - 0 5 T 0 8 : 1 5 : 3 0 - 0 5 : 0 0

    valid &amp;=  (string.charAt ( 4 )  == '-') &amp;&amp;
                (string.charAt ( 7 )  == '-') &amp;&amp;
                (string.charAt ( 10 ) == 'T') &amp;&amp;
                (string.charAt ( 13 ) == ':') &amp;&amp;
                (string.charAt ( 16 ) == ':');

    return valid;
}
</code></pre>

<p>I have not benchmarked it, but I am guess it will be pretty fast. It seems to work. :)</p>

<pre><code>@Test
public void testIsoShortDate() {
    String test =  ""1994-11-05T08:15:30Z"";

    Date date = Dates.fromISO8601 ( test );
    Date date2 = Dates.fromISO8601_ ( test );

    assertEquals(date2.toString (), date.toString ());

    puts (date);
}

@Test
public void testIsoLongDate() {
    String test =  ""1994-11-05T08:11:22-05:00"";

    Date date = Dates.fromISO8601 ( test );
    Date date2 = Dates.fromISO8601_ ( test );

    assertEquals(date2.toString (), date.toString ());

    puts (date);
}
</code></pre>
"
17260213,"<p>Second answer above is the most simple one.</p>

<pre><code>int n = Integer.parseInt(System.console().readLine());
</code></pre>

<p>The question is ""How to read from standard input"".</p>

<p>A console is a device typically associated to the keyboard and display from which a program is launched.</p>

<p>You may wish to test if no Java console device is available, e.g. Java VM not started from a command line or  the standard input and output streams are redirected.</p>

<pre><code>Console cons;
if ((cons = System.console()) == null) {
    System.err.println(""Unable to obtain console"");
    ...
}
</code></pre>

<p>Using console is a simple way to input numbers. Combined with parseInt()/Double() etc.</p>

<pre><code>s = cons.readLine(""Enter a int: "");
int i = Integer.parseInt(s);    

s = cons.readLine(""Enter a double: "");
double d = Double.parseDouble(s);
</code></pre>
"
17558659,"<pre><code>public synchronized void start() {
    var = true;
    thread.start();
}
</code></pre>

<p>Keyword thread. Basically, this allows not threads to overlap and stuff. So no problems will occur.</p>
"
17878706,"<p>For IntelliJ i do like:</p>

<pre><code>        public void ________________INIT__________________() {};
</code></pre>

<p>looking pretty in file structure!</p>
"
18368153,"<p>You can easily write one yourself.</p>

<p>given:</p>

<pre><code>int array[]={1,2};
</code></pre>

<p>you do:</p>

<pre><code>int temp=array[0];
array[0]=array[1];
array[1]=temp;
</code></pre>

<p>And you're done. <strong>3 lines of code.</strong></p>
"
21980321,"<p>Simplest solution is to find out machine name, since this name is only variable changing in path to Desktop folder. So if you can find this, you have found path to Desktop. Following code should do the trick - it did for me :)</p>

<pre><code>String machine_name = InetAddress.getLocalHost().getHostName();
String path_to_desktop = ""C:/Documents and Settings/""+machine_name+""/Desktop/"";
</code></pre>
"
22350055,"<pre><code>Iterator&lt;Map.Entry&lt;String,String&gt;&gt; iterator = map.entrySet().iterator();
while (iterator.hasNext()) {
    Map.Entry&lt;String,String&gt; entry = iterator.next();
    if (entry.getValue().equals(value_you_look_for)) {
        String key_you_look_for = entry.getKey();
}
} 
</code></pre>
"
19960327,"<p>try this</p>

<pre><code>int column = 3;
double result = array[][column];
</code></pre>

<p>Good Luck</p>
"
23956619,"<pre><code>int[] arr = {10,2,3,4,5,2,3,23,109,209};
int[] temparr = new int[arr.length];
int i;
for(i=0;i&lt;arr.length;i++)
{
    temparr[i] = arr[arr.length-i-1];
    //System.out.println(arr[i]);
}
</code></pre>
"
21380694,"<p>There are 2 major reasons why virtual by default is so much better than non-virtual.</p>

<ol>
<li>The main principles about usefulness of OOP is <strong>Liskov substitution principle</strong>, <strong>polymorphism</strong> and <strong>late binding</strong> . I use strategy pattern all the time and for that I want my methods to be virtual. If you are fan of Open/closed principle you should like Java philosophy more. You should be able to change behavior without changing your source code. You can do that with dependency injection and virtual methods.</li>
<li>If you call a non-virtual method then you want to know from your code which class method you are calling. The flaw of .net is that you cannot know that from your code.</li>
<li>Another benefit of virtual-only method is that it is much easier to test your code because you can make Mocks of your (or 3rd party) classes. Testing with Mockito is really easy in Java.</li>
</ol>

<h2>Example</h2>

<p>In Java if you define ClassB as</p>

<pre><code>public class ClassB extends ClassA {
    @Override 
    public void run() {
    }
}
</code></pre>

<p>and object</p>

<pre><code>ClassA obj=new ClassB();
</code></pre>

<p>If you call obj.run() how will you know if that code is following the rules of polymorphic open/close principle or it will code method related to ClassA? In Java you will know that there is always polymorphism. It is easier to make mocks and it is easier to extend classes and follow Liskov substitution principle.</p>

<p>On the other hand static methods are bounded to a class so if you want to call a method that is related to ClassA you can define that method like this:</p>

<pre><code>public static run(ClassA obj)
</code></pre>

<p>and you can call it with</p>

<pre><code>ClassB obj=new ClassB();
ClassA.run(obj);
</code></pre>

<p>and from the code you will know that the method you are calling is defined in ClassA and not in ClassB. Also in that case you will not have the overhead of virtual methods. (Note that JIT will also reduce the overhead of virtual methods in many cases).</p>

<p>For C#, if the reason to make the method non-virtual is to be able to define it in a subclass but not involve polymorphism, you're probably subclassing for no real reason.</p>

<p>If it's for design, I'd suggest making the class sealed (final in java) instead of individual methods if possible.</p>

<p>Jon Skeet said that in C# the classes should be sealed by default because methods are non-virtual by default as well. Joshua Bloch said that you should design for inheritance or forbid it (make classes final). C# designers chose a hybrid approach which is non-consistent.</p>
"
24583788,"<p><code>java.io.Console</code> is used to take and read input from the user at runtime and output are displayed after processing the input from user.</p>

<p>For more and detailed information visit <a href=""https://www.examsmyantra.com/article/58/java/java-io---console-input-and-output"" rel=""nofollow"">https://www.examsmyantra.com/article/58/java/java-io---console-input-and-output</a></p>
"
21704099,"<p>Try this:</p>

<pre><code>public static boolean jsonsEqual(Object obj1, Object obj2) throws JSONException

    {
        if (!obj1.getClass().equals(obj2.getClass()))
        {
            return false;
        }

        if (obj1 instanceof JSONObject)
        {
            JSONObject jsonObj1 = (JSONObject) obj1;

            JSONObject jsonObj2 = (JSONObject) obj2;

            String[] names = JSONObject.getNames(jsonObj1);
            String[] names2 = JSONObject.getNames(jsonObj1);
            if (names.length != names2.length)
            {
                return false;
            }

            for (String fieldName:names)
            {
                Object obj1FieldValue = jsonObj1.get(fieldName);

                Object obj2FieldValue = jsonObj2.get(fieldName);

                if (!jsonsEqual(obj1FieldValue, obj2FieldValue))
                {
                    return false;
                }
            }
        }
        else if (obj1 instanceof JSONArray)
        {
            JSONArray obj1Array = (JSONArray) obj1;
            JSONArray obj2Array = (JSONArray) obj2;

            if (obj1Array.length() != obj2Array.length())
            {
                return false;
            }

            for (int i = 0; i &lt; obj1Array.length(); i++)
            {
                boolean matchFound = false;

                for (int j = 0; j &lt; obj2Array.length(); j++)
                {
                    if (jsonsEqual(obj1Array.get(i), obj2Array.get(j)))
                    {
                        matchFound = true;
                        break;
                    }
                }

                if (!matchFound)
                {
                    return false;
                }
            }
        }
        else
        {
            if (!obj1.equals(obj2))
            {
                return false;
            }
        }

        return true;
    }
</code></pre>
"
21719733,"<p>Simple!!!</p>

<pre><code>public class A{
private String a;
private String b;
//getter and setter are here
}
</code></pre>

<hr>

<pre><code>public class B extends A{
public B(String a, String b){ //constructor
super(a,b)//from here you got access with private variable of class A
}
}
</code></pre>

<p>thanks</p>
"
22021725,"<pre><code>public class Swap1 {
    public static void main(String[] args){
        int x =7;
        int y = 3;

        swap(x,y);

        System.out.println(""x = "" + x);
        System.out.println(""y = "" + y);
    }

    public static void swap(int x, int y) {
        int temp = x;
        x = y;
        y = temp;
    }
}
</code></pre>
"
22070630,"<pre><code>  public InetAddress intToInetAddress(Integer value) throws UnknownHostException
  {
    ByteBuffer buffer = ByteBuffer.allocate(32);
    buffer.putInt(value);
    buffer.position(0);
    byte[] bytes = new byte[4];
    buffer.get(bytes);
    return InetAddress.getByAddress(bytes);
  }
</code></pre>
"
25137609,"<p><strong>Enter the Number, and Create an arraylist, and the while loop will give add all number of digits into the array list then  we can take out the size of array, which will be the length of the integer value you entered....</strong></p>

<pre><code>ArrayList&lt;Integer&gt; a=new ArrayList&lt;&gt;();

   while(number &gt; 0) 
   { 
     remainder = num % 10; 

       a.add(remainder);
      number = number / 10; 
   } 

int m=a.size();
</code></pre>
"
27523495,"<p>Use this instead</p>

<p><code>JTextArea textArea = new JTextArea();
         DefaultCaret caret = (DefaultCaret)textArea.getCaret();
         caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);<br>
         scrollPane = new JScrollPane();
         scrollPane.add(textArea);
         scrollPane.setViewportView(textArea);</code>   </p>
"
25006986,"<p>We use clazz because class is a type header. For example, you use class here:</p>

<pre><code>public class HelloWorld {
</code></pre>

<p>and here:</p>

<pre><code>Object.class.getName();
</code></pre>

<p>So unfortunately, we have to use alternate names such as clazz.</p>
"
26472691,"<p>Unique at any time:</p>

<pre><code>int uniqueId = (int) (System.currentTimeMillis() &amp; 0xfffffff);
</code></pre>
"
29030350,"<p>Your slash is not correct. You should use it like this. </p>

<pre><code>      try{
            String sys = System.getProperty(""user.home"");

            String fileurl = sys+ ""\\Desktop\\new"";
            File newfile = new File(fileurl);
            newfile.mkdir();

            }catch(Exception ioe){
             // Handle the error
                System.out.println(""Error"");
            }
</code></pre>
"
30205793,"<pre><code>public int getDepthHelper( TreeNode&lt; T &gt; node ) { 
    int treeHeightLeft; 
    int treeHeightRight; 
    //get height of left subtree 
    if( node.leftNode == null ) 
        treeHeightLeft = 1; 
    else { 
        treeHeightLeft = getDepthHelper( node.leftNode) + 1; 
    } 

    //get height of right subtree 
    if( node.rightNode == null ) 
        treeHeightRight = 1; 
    else { 
        treeHeightRight = getDepthHelper( node.rightNode) + 1; 
    } 
    return Math.max(treeHeightLeft, treeHeightRight); 
}
</code></pre>
"
1812062,"<p>You can use the <code>Synchronized</code> keyword which will use to run one thread completely</p>

<p>example</p>

<pre><code>public synchronized void run() //which thread to run completely
{
}
</code></pre>
"
1842239,"<p>The method that contains the code</p>

<pre><code>while (true) {    
 int totalFoos = getTotalFoos();    
 int barredFoos = getBarredFoos();    
 if (totalFoos == getTotalFoos()) {        
  int nonBarredFoos = totalFoos - barredFoos;        
  break;    
 }
</code></pre>

<p>}</p>

<p>Should be synchronized</p>

<pre><code>private synchronized void getFoos()
</code></pre>
"
1879314,"<p>I agree with Anon, and in the case where I always want to instantiate the singleton I would use</p>

<pre><code>public class SingletonObject
{
public static SingletonObject REF = new SingletonObject();

private SingletonObject()
{
    // no code req'd
}
</code></pre>

<p>}</p>
"
1917406,"<p>I'd make a WidgetCollection class with an abstract Widget inner class.</p>

<p>You can extend the WidgetCollection.Widget class for each of your types of Widget.</p>

<p>No static methods necessary.</p>

<p>Example (not compiled or tested):</p>

<pre><code>class WidgetCollection&lt;W extends Widget&gt; {
    Set&lt;W&gt; widgets = new HashSet&lt;W&gt;();

    Set&lt;W&gt; getAll() {
        return widgets;
    }

    abstract class Widget {

       Widget() {
           widgets.add(this);
       }

       abstract String getName();
    }

    public static void main(String[] args) {
         WidgetCollection&lt;AWidget&gt; aWidgets = new WidgetCollection&lt;AWidget&gt;();
         a.new AWidget();

         Set&lt;AWidget&gt; widgets = aWidgets.getAll();
    }
}

class AWidget extends Widget {
    String getName() {
        return ""AWidget"";
    }
}
</code></pre>
"
2017371,"<p>You can start <code>counter</code> from <code>Integer.MAX_VALUE</code> and go down. You can stop at <code>Zero</code> or go upto <code>-Integer.MAX_VALUE</code>. </p>
"
2081921,"<p>Use anonymous classes of type <code>Callable</code> (which, in contrast to <code>Runnable</code>, can return values) and execute them using an <code>Executor</code>. If the logic to retrieve informationA and informationB is very similar, you may of course refactor that and use a single, parameterizes inner class of Callables.</p>

<p>I'm not sure if Callable and Executor are part of J2ME spec though. In standard Java, i'd go for a <code>Proxy</code> approach anyway and encapsulate the external resource as interface.</p>

<pre><code>public class AsyncMethodsTest {

    public class OnlineResourceAdapter {

        private final ExecutorService executor = Executors.newFixedThreadPool(2);

        public String getInformationOfTypeA() throws InterruptedException, ExecutionException,
                TimeoutException {
            Callable&lt;String&gt; callable = new Callable&lt;String&gt;() {
                @Override
                public String call() throws Exception {
                    // Connect to external resource
                    Thread.sleep(500);
                    return ""A"";
                }

            };
            Future&lt;String&gt; submit = executor.submit(callable);
            return submit.get(1000, TimeUnit.MILLISECONDS);
        }

        public String getInformationOfTypeB() throws InterruptedException, ExecutionException,
                TimeoutException {
            Callable&lt;String&gt; callable = new Callable&lt;String&gt;() {
                @Override
                public String call() throws Exception {
                    // Connect to external resource
                    Thread.sleep(1500);
                    return ""B"";
                }

            };
            Future&lt;String&gt; submit = executor.submit(callable);
            return submit.get(1000, TimeUnit.MILLISECONDS);
        }

    }

    @Test
    public void testMethodCalls() throws Exception {
        OnlineResourceAdapter adapter = new OnlineResourceAdapter();
        assertNotNull(adapter.getInformationOfTypeA());
        assertNotNull(adapter.getInformationOfTypeB());
    }
}
</code></pre>
"
2103213,"<p>Switch has two relevant disadvantages:</p>

<ul>
<li>it is limited to primitive types and enums</li>
<li>you have to remember ""break"", what could lead to not so obvious bugs</li>
</ul>

<p>Often switch is a sign for poor OO design, because you'd better use polymorphism.</p>

<p>The only possible advantage of switch is, that it is more readable. But is</p>

<pre><code>switch (i) {
  case 1:
    // do something
    break;
  case 2:
    // do something
    break;
}
</code></pre>

<p>more readable than this:</p>

<pre><code>if (i == 1)
  //do something
else if (i == 2)
  // do something else
</code></pre>

<p>I'd say: no! And you wouldn't have the disadvantages of switch.</p>

<p>My suggestion: Try to avoid switch.</p>
"
2198983,"<p>If you want to check what will do some method, you can use <a href=""http://beanshell.org/"" rel=""nofollow"">BeanShell</a>. It is a scripting language designed to be as close to Java as possible. Generally speaking it is interpreted Java with some relaxations. Another option of this kind is <a href=""http://groovy.codehaus.org/"" rel=""nofollow"">Groovy</a> language. Both these scripting languages provide convenient Read-Eval-Print loop know from interpreted languages. So you can run console and just type:</p>

<pre><code>""     content     "".trim();
</code></pre>

<p>You'll see <code>""content""</code> as a result after pressing <code>Enter</code> (or <code>Ctrl+R</code> in Groovy console).</p>
"
2218197,"<p>The not requiring a prototype before using the function caused horrible problems.  It would allow you do such bad things as:</p>

<pre><code>malloc(""foo"");
</code></pre>

<p>if the compiler does not have a declaration, it doesn't know that this is a bad way to call it.</p>

<p>As for requiring a prototype even when you see the definition before using it, that is not a requirement of the C++ spec.  gcc has an option (<code>-Wmissing-prototypes</code>) that enables that behavior but you can turn it off.</p>
"
2262817,"<p>Since it is a read only method. You should synchronize the <code>set</code> method.</p>

<p><strong>EDIT</strong> : I see why the get method needs to be synchronized as well. Good job explaining Phil Ross.</p>
"
2454417,"<p>There are some subtle ways to that (each of those being subjects to discussions)</p>

<ul>
<li>Make all your application's Exception <code>RuntimeException</code> subclasses. This way, there is no try/catch in your application, and you can easily see (at the thread level) what problème broke the thread. Unfortunatly, this has no effect on the developper that wrote this code block precisely to get rid of an exception he didn't bother to manage.</li>
<li>Use <a href=""http://checkstyle.sourceforge.net/"" rel=""nofollow"">Checkstyle</a>, or an other static code checker, to ensure no empty catch block exists in your application. Unfortunatly, this do not works when no continous integration process exists in your team (since errors notification won't go to the developper responsible for them).</li>
<li>Provide default catch template code with a sensible value (like a <code>logger.log(Level.WARN, ""something went wrong here"", e)</code>) allowing user to not have to worry about exception management, however having a reasoably good code.</li>
</ul>
"
2476495,"<p>don't know about spring, but if you want to have some control on creating new instances, you should make  constructor private, and create <code>public static YourClass getInstance()</code> method inside your class which will handle checks and return new instance of that object. You can then create new class with constructor whichi will call getInstance().. and hand that class to Spring. Soon you will discover places where you had that 'illegal' calls outside spring... </p>
"
2500579,"<pre><code>public class Base
{
   public object BaseMethod()
   { 
      return new String(""From Base"");
   }

}

public class Child extends Base
 {
   public object BaseMethod
   {
      return new String(""From Child.BaseMethod (overridden)"");
   }

   public object ChildMethod
   {
      return new String(""From Child.ChildMethod"");
   }
}

public class Test
{
   public static void main(String[] args)
   {
       Base base = new ChildMethod();
       System.out.println(base.BaseMethod()); //prints ""From Child.BaseMethod (overridden)""

       System.out.println(base.ChildMethod()); //Will not compile as ChildMethod as reference is of type Base, and ChildMethod is not specified.

       Child child = (Child) base; //But I can cast it.
       System.out.println(child.ChildMethod()); // This will work.
   }
}
</code></pre>
"
2537730,"<blockquote>
  <p>What I want is that, someFunction() be
  called once every 10 seconds.</p>
</blockquote>

<p>Then why do you call <code>Thread.sleep()</code> with 1000 as parameter? That's in milliseconds, so you're explicitly saying ""wait 1 second"".</p>
"
2543521,"<p>This is one way to sorting.</p>

<pre><code>package com.java;


import java.util.ArrayList;

import java.util.Collections;


public class b{

public static void main(String[] args) {
//create an ArrayList object

ArrayList arrayList = new ArrayList();


//Add elements to Arraylist

arrayList.add(""9"");
arrayList.add(""3"");
arrayList.add(""5"");
arrayList.add(""2"");
arrayList.add(""4"");

Collections.sort(arrayList);


//display elements of ArrayList

System.out.println(""ArrayList elements after sorting in ascending order : "");

for(int i=0; i&lt;arrayList.size(); i++)

System.out.println(arrayList.get(i));



}

}
</code></pre>
"
2559169,"<pre><code>public class TEST
{
  public static void main(String arg[]){
    bool exitFinally  = false;
    try
    {
      System.out.println(""execute try"");
      //what should I write hear that finally does not run.
    }
    catch (Exception e){
      System.out.println(e);
    }
    finally{

        if(exitFinally)
            return;

      System.out.println(""execute finally"");
    }
  }
}
</code></pre>
"
2559172,"<p>Put the code in finally into an if.</p>

<pre><code>public class TEST
{
  public static void main(String arg[]){
    boolean b = true;
    try
    {
      System.out.println(""execute try"");
      if (something()) b = false;
    }
    catch (Exception e){
      System.out.println(e);
    }
    finally{
      if (b){
        System.out.println(""execute finally"");
      }
    }
  }
}
</code></pre>
"
2559173,"<p>Use boolean flag:</p>

<pre><code>public class TEST
{
    public static void main(String arg[]){
        boolean success=false;
        try
        {
            System.out.println(""execute try"");
            //what should I write hear that finally does not run.
            success=true;
        }
        catch (Exception e){
            System.out.println(e);
        }
        finally{
            if (!success)
            {
                System.out.println(""execute finally"");
            }
        }
    }
}
</code></pre>
"
2574740,"<p>May be you would like to try this solution:</p>

<p>class MyDialog {</p>

<pre><code>private static String[] returnValues = new String[10]
private static MyDialog dialog;

private MyDialog() {
  initDialog()
}

private void closeDialog()
{
     dispose();
}

private initDialog()
{

 //....
 btnOk = new JButton(""OK"");
  jTextField1 = new JTextField();
  ...
  jTextField10 = new JTextField();
  ...
  ActionListener btnOK_click = new ActionListener() {

        public void actionPerformed(ActionEvent e)
        {
            returnValues[0] = jTextField1.getText();
            ...
            returnValues[9] = jTextField10.getText();
            closeDialog();  
        }
  }
  btnOk.addActionListener(btnOk_click);
}

public static String[] showMyDialog() {
    dialog = new MyDialog();
    dialog.setVisible(true);
    return returnValues;
}
</code></pre>

<p>}</p>
"
2587523,"<blockquote>
  <p>Is there any reason why Java could not
  do this automatically i.e. switch to
  BigInteger if an int was too small?</p>
</blockquote>

<p>This is one of the advantage of <strong>dynamic typing</strong>, but Java is <strong>statically typed</strong> and prevents this.</p>

<p>In a dynamically type language when two <code>Integer</code> which are summed together would produce an overflow, the system is free to return, say, a <code>Long</code>. Because dynamically typed language rely on duck typing, it's fine. The same can not happen in a statically typed language; it would break the type system. </p>

<p><strong>EDIT</strong></p>

<p>Given that my answer and comment was not clear, here I try to provide more details why I think that static typing is the <em>main</em> issue:</p>

<p>1) the very fact that we speak of primitive type <em>is</em> a static typing issue; we wouldn't care in a dynamically type language.</p>

<p>2) with primitive types, the result of the overflow can not be converted to another type than an <code>int</code> because it would not be correct w.r.t static typing</p>

<pre><code>   int i = Integer.MAX_VALUE + 1; // -2147483648
</code></pre>

<p>3) with reference types, it's the same except that we have autoboxing. Still, the addition could not return, say, a <code>BigInteger</code> because it would not match the static type sytem (A <code>BigInteger</code> can not be casted to <code>Integer</code>).</p>

<pre><code>  Integer j = new Integer( Integer.MAX_VALUE ) + 1; // -2147483648
</code></pre>

<p>4) what could be done is to subclass, say, <code>Number</code> and implement at type <code>UnboundedNumeric</code> that optimizes the representation internally (representation independence).</p>

<pre><code> UnboundedNum k = new UnboundedNum( Integer.MAX_VALUE ).add( 1 ); // 2147483648
</code></pre>

<p>Still, it's not really the answer to the original question.</p>

<p>5) with dynamic typing, something like </p>

<pre><code>var d = new Integer( Integer.MAX_VALUE ) + 1; // 2147483648
</code></pre>

<p>would return a <code>Long</code> which is ok.</p>
"
2631699,"<p>I don't know about blackberry, but generally, exceptions have a stacktrace, where line numbers are shown:</p>

<pre><code>java.lang.NullPointerException
    at your.packege.ClassName.methodName(ClassName.java:169)
</code></pre>

<p>So obtain the stacktrace and see. The stacktrace is obtained either by </p>

<pre><code>try {..} catch (Exception ex) {..}
</code></pre>

<p>or by letting it bubble up to a place where it is printed to the standard output.</p>

<p>Also, each exception has <code>getStackTrace()</code> method, which returns each line of the stack-trace as a <code>StackTraceElement</code></p>
"
2631705,"<p>You should be able to look at the exception's stack trace.</p>

<p>You can print this to a console doing something like this:</p>

<pre><code>try {
    // Code that throws an exception
} catch (Exception e) {
    e.printStackTrace();
}
</code></pre>

<p>Note: This should NEVER appear in production code!</p>
"
3064461,"<p><code>new HashSet&lt;Object&gt;(Arrays.asList(Object[] a));</code></p>

<p>But I think this would be more efficient:</p>

<pre><code>final Set s = new HashSet&lt;Object&gt;();
for (Object o : a) { s.add(o); }
</code></pre>
"
3214522,"<p>you cannot call</p>

<pre><code>number.equals(number2);
</code></pre>

<p>because, if number is a Double and number2 is an Integer, they will not be of the same class and you will get an exception telling you of that fact. </p>

<p>You could write a comparison class yourself that accepts Number objects, but you will have to take into account the different subclasses of Number</p>
"
3521482,"<p>You could check whether it implements the <code>Cloneable</code> interface and if it does then use the clone method.</p>

<p>And <a href=""http://www.idevelopment.info/data/Programming/java/object_oriented_techniques/CloningExample.java"" rel=""nofollow"">here</a> is and example on how to implement it yourself.</p>
"
3521498,"<p>As others have said: Clonable is broken and you should consider other options such as copy constructors. Having said that, here is a solution that should work if you really must use clone():</p>

<pre><code>Object clone = null;
if(anObj instanceof Clonable) {
    Method cloneMethod = anObj.getClass().getMethod(""clone"");
    /*
     * TODO: Handle the case where an object is cloneable but 
     * does not have a public clone() method.
     */
    clone = cloneMethod.invoke(anObj);
} else {
    throw new RuntimeException(""can't clone object"");
}
</code></pre>

<p>Or you could use reflection to clone the object field by field, if it does not implement clone()... Get all fields, copy the values to the new object. But this is tricky, if the object has no no-arg constructor.</p>
"
3521751,"<pre><code>interface PublicCloneable extends Cloneable{
    public Object clone();
}

class MyObject implements PublicCloneable {
    public Object clone() {
        return super.clone();
    }
}

class MainObject {
    public static void main(String[] params) {
        Object m = new MyObject();

        if (m instanceof PublicCloneable) {
            Object c = m.clone();
        }
    }
}
</code></pre>
"
3544530,"<p>Not that elegant, but I think in most similar case, that's what we can do:</p>

<pre><code>static &lt;T extends Number&gt; T zeroIfNull(T value, Class&lt;T&gt; clazz) {...}
</code></pre>

<p>and when used:</p>

<pre><code>BigDecimal v = zeroIfNull(orignalVal, BigDecimal.class);
</code></pre>
"
3544623,"<pre><code>import java . math . * ;

class Numbers
{
    public static &lt; T extends Number &gt; T zeroIfNull ( T number , Class&lt;T&gt; clazz ) throws IllegalArgumentException
    {
    if ( clazz == Integer . class )
        {
        return zeroIfNull ( number , clazz , 0 ) ;
        }
    else if ( clazz == Double . class )
        {
        return zeroIfNull ( number , clazz , 0 ) ;
        }
    else if ( clazz == BigInteger . class )
        {
        return zeroIfNull ( number , clazz , BigInteger . ZERO ) ;
        }
    // add a whole bunch more if statements
    throw new IllegalArgumentException ( ""Unexpected Number Class "" + clazz . getName ( ) + "" with possibly undefined zero value."" ) ;
    }

    private static &lt; T extends Number &gt; T zeroIfNull ( T number , Class&lt;T&gt; clazz , Object zero )
    {
    if ( number == null )
        {
        return ( clazz . cast ( zero ) ) ;
        }
    else
        {
        return ( number ) ;
        }
    }
}
</code></pre>
"
3544891,"<p>The following is an improvement on my first answer.</p>

<pre><code>import java . math . * ;
import java . util . * ;

class Numbers
{
    private static final Map&lt;Class&lt;? extends Number&gt;,Object&gt; zeroes = new HashMap&lt;Class&lt;? extends Number&gt;,Object&gt; ( ) ;

    static
    {
         zeroes . put ( Integer . class , new Integer ( 0 ) ) ;
         zeroes . put ( Double . class , new Double ( 0.0 ) ) ;
         zeroes . put ( BigInteger . class , BigInteger . ZERO ) ;
         // fill it up with all supported classes
    }

    public static &lt; T extends Number &gt; T zeroIfNull ( T number , Class&lt;T&gt; clazz ) throws IllegalArgumentException
    {
    if ( number == null ) // return zero (if we know what zero is)
        {
        if ( zeroes . containsKey ( clazz ) )
            {
            return ( clazz . cast ( zeroes . get ( clazz ) ) ) ;
            }
        throw new IllegalArgumentException ( ""Unexpected Number Class "" + clazz . getName ( ) + "" with undefined zero value."" ) ;
        }
    return number ;
    }
}
</code></pre>
"
3598507,"<p>Obviously my question is not clear.</p>

<p>I have many unit tests and all methods are throwing same exception with different error message. ""SomeException"" is exception I must catch and read error message from it.</p>

<p>What I want to achive is to write one method which will be common to all unit tests and where I could print error message.</p>

<p>Now unit tests looks like this</p>

<pre><code> public void test_something()
    {     
        try
        {
            assertTrue(bw.doSomething(""test""));
        }
        catch (SomeException e)
        {
            fail(""exception = "" + e.getReason());
        }
    }

public void test_something1()
    {
        IBroadworks bw = getSomehting1();
        try
        {
            assertTrue(bw.doSomething1(""test1""));
        }
        catch (SomeException e)
        {
            fail(""exception = "" + e.getReason());
        }
    }
...
</code></pre>

<p>So below code is repeating in all unit tests and that is not ok.</p>

<pre><code>...
try{
assertTrue(condition);
}

catch (SomeException e)
        {
            fail(""exception = "" + e.getReason());
        }
...
</code></pre>
"
3932405,"<p>According to the <a href=""http://docs.jboss.org/hibernate/core/3.3/reference/en/html/performance.html"" rel=""nofollow"">hibernate docs</a>, you should be able to disable lazy property loading by setting the <code>lazy</code> attribute on your particular property mappings: </p>

<pre><code>&lt;class name=""Document""&gt;
  &lt;id name=""id""&gt;
    &lt;generator class=""native""/&gt;
  &lt;/id&gt;
  &lt;property length=""50"" name=""name"" not-null=""true""/&gt;
  &lt;property lazy=""false"" length=""200"" name=""summary"" not-null=""true""/&gt;
  &lt;property lazy=""false"" length=""2000"" name=""text"" not-null=""true""/&gt;
&lt;/class&gt;
</code></pre>
"
3981932,"<h2>Elegant? Use an atomic variable</h2>

<pre><code>final AtomicReference&lt;String&gt; host = new AtomicReference&lt;String&gt;();
SwingUtilities.invokeAndWait(new Runnable() {
    public void run() {
        host.set(JOptionPane.showInputDialog(""Enter host name: ""));
    }
});
openConnection(host.get());
</code></pre>
"
3981944,"<h2>Hack: Use an array</h2>

<pre><code>final String[] host = new String[1];
SwingUtilities.invokeAndWait(new Runnable() {
    public void run() {
        host[0] = JOptionPane.showInputDialog(""Enter host name: "");
    }
});
openConnection(host[0]); //maybe not guaranteed to be visible by the memory model?
</code></pre>
"
4000354,"<p>I would also go with the object answer by Ed.C, but this seems to work:</p>

<pre><code>@SuppressWarnings(""unchecked"")
protected Vector&lt;Person&gt;[][][] position = new Vector[10][10][10];
</code></pre>

<p>ie, you skip the diamond on the right.</p>
"
4153756,"<p>what i understand that you wana eleminate this u can do some thing like </p>

<pre><code>string myString = ""hello example &gt;&gt; hai man"";
string mySecondString = mystring.Replace(""hai man"", """"); 
</code></pre>

<p>You will get only <code>hello example &gt;&gt;</code></p>
"
4280370,"<p>No it won't work, as explained in the other posts. But you could do </p>

<pre><code>if (turtles.get(h).getX() - turtles.get(g).getX() + 450 == 0) 
</code></pre>
"
4383839,"<p>A <code>foreach</code> also notifies you if the collection you're enumerating through changes (i.e. you HAD 7 items in your collection...until another operation on a separate thread removed one and now you only have 6 @_@)</p>
"
4386286,"<p>Just wanted to add that whoever thinks that foreach gets translated into for and therefore has no performance difference is dead wrong. There are many things that happen under the hood, i.e. the enumeration of the object type which is NOT in a simple for loop. It looks more like an iterator loop:</p>

<pre><code>Iterator iter = o.getIterator();
while (iter.hasNext()){
     obj value = iter.next();
     ...do something
}
</code></pre>

<p>which is significantly different than a simple for loop. If you dont understand why, then lookup vtables. Furthermore, who knows whats in the hasNext function? For all we know it could be:</p>

<pre><code>while (!haveiwastedtheprogramstimeenough){
}
now advance
</code></pre>

<p>Exageration aside, there are function of unknown implementation and efficiency being called. Since compilers dont optimize accross function boundaries, there is NO optimization happening here, just your simple vtable lookup and function call. This is not just theory, in practice, i have seen significant speedups by switching from foreach to for on the standard C# ArrayList. To be fair, it was an arraylist with about 30,000 items, but still.</p>
"
4406870,"<p>Your code is correct. If <code>someMethod1()</code> method does not declare any other Exceptions, they are RuntimeExceptions and you are supposed to catch <code>RuntimeException</code>.</p>
"
4557372,"<p><code>/etc/init.d/networking restart</code></p>
"
4744861,"<p>foreach is order of magnitude slower for implementation heavy collection. </p>

<p>I have proof. These are my findings</p>

<p>I used the following simple profiler to test their performance</p>

<pre><code>static void Main(string[] args)
{
    DateTime start = DateTime.Now;
    List&lt;string&gt; names = new List&lt;string&gt;();
    Enumerable.Range(1, 1000).ToList().ForEach(c =&gt; names.Add(""Name  = "" + c.ToString()));
    for (int i = 0; i &lt; 100; i++)
    {
        //For the for loop. Uncomment the other when you want to profile foreach loop
        //and comment this one
        //for (int j = 0; j &lt; names.Count; j++)
          //  Console.WriteLine(names[j]);
        //for the foreach loop
        foreach (string n in names)
        {
            Console.WriteLine(n);
        }
    }
    DateTime end = DateTime.Now;
    Console.WriteLine(""Time taken = "" + end.Subtract(start).TotalMilliseconds + "" milli seconds"");
</code></pre>

<p>And I got the following results</p>

<p><strong>Time taken = 11320.73 milli seconds (for loop)</strong></p>

<p><strong>Time taken = 11742.3296 milli seconds (foreach loop)</strong></p>
"
4762435,"<p>One thing you can do is use a Debug flag to change this as you like:</p>

<pre><code>public String toString(boolean debug) {
    if (debug) return debugStringVersion;
    else return humanVersion;
}

public String toString() {
    return toString(Util.DEBUG);
}
</code></pre>

<p>Of course this assumes that you have a utility class suet up with a debug flag in it.</p>
"
4936857,"<p><code>enum</code> are pretty powerful in Java. You could easily add a <code>contains</code> method to your enum (as you would add a method to a class):</p>

<pre><code>enum choices {
  a1, a2, b1, b2;

  public boolean contains(String s)
  {
      if (s.equals(""a1"") || s.equals(""a2"") || s.equals(""b1"") || s.equals(""b2"")) 
         return true;
      return false;
  } 

};
</code></pre>
"
4943378,"<p>You can query to the database and retrieve all data into a RESULTSET and use the following code to start off a root element.</p>

<pre><code>DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
Document document  = documentBuilder.newDocument();

Element Element_root  = document.createElement(""rootElement""); 
</code></pre>

<p>Thereafter you can add on as many as child elements using </p>

<pre><code>Element Element_childnode      = document.createElement(""childnode"");//create child node                
Element_childnode.appendChild(document.createTextNode(""Enter the value of text here""));//add data to child node
Element_root.appendChild(Element_childnode);//close the child node
</code></pre>

<p><strong>Do not forget to close the opened node close the root at the end WITHOUT FAIL</strong> </p>

<p>Use this to close root.</p>

<pre><code>document.appendChild(Element_causelist);
</code></pre>

<p>At the end if you have a XSD validate it your xml against it.....googling the validation online will provide good results....  <a href=""http://tools.decisionsoft.com/schemaValidate/"" rel=""nofollow"">http://tools.decisionsoft.com/schemaValidate/</a> </p>

<p>NOTE : <strong>TIME !!! It will take time when data is huge nos...
But I think this is one and the most easiest way of doing it....Taking in consideration the data, I think one should run the program during down time when there is less traffic....</strong></p>

<p>Hope this helps....Good Luck Gauls....</p>
"
5499592,"<p>I don't know about the runtime disadvantages about the following but you could run a regexp match on your string to make sure it is a number before trying to parse it, thus</p>

<pre><code>cost.matches(""-?\\d+\\.?\\d+"")
</code></pre>

<p>for a float</p>

<p>and </p>

<pre><code>cost.matches(""-?\\d+"")
</code></pre>

<p>for an integer</p>

<p><strong>EDIT</strong></p>

<p>please notices @Voo's comment about max int</p>
"
5499650,"<p>That depends on your environment. JSF for example would take the burden of manually checking and converting Strings &lt;-> Numbers from you, Bean Validation is another option.</p>

<p>What you can do <strong>immediately</strong> in the snippet you provide:</p>

<ol>
<li>Extract method <code>getAsInt(String param)</code>, in it:</li>
<li>Use <code>String.isEmpty()</code> (Since <a href=""http://download.oracle.com/javase/6/docs/api/java/lang/String.html#isEmpty%28%29"" rel=""nofollow"">Java 6</a>), </li>
<li>surround with <code>try / catch</code></li>
</ol>

<p>What you <strong>should definitely think</strong> about if you happen to write a lot of code like this:</p>

<pre><code>public void myBusinessMethod(@ValidNumber String numberInput) {
// ...    
}
</code></pre>

<p>(This would be interceptor-based).</p>

<p>Last but not least: Save the work and try to switch to a framework which gives you support for these common tasks...</p>
"
5554232,"<p>Replace <code>new List&lt;MyClass&gt;(){}.getClass()</code> with <code>List.class</code></p>
"
5592189,"<p>Even simpler:</p>

<pre><code>""test/"" + ""."" + ""/go""
</code></pre>
"
5617049,"<p>You can give below code a try,</p>

<pre><code>public void multiArrayCopy(int[][] source,int[][] destination){
destination=source.clone();}
</code></pre>

<p>Hope it works.</p>
"
5783937,"<p>As for most cases: it depends.</p>

<p>If your object is rather complex (takes a lot of time to instatiate) put can be expressed in a string, it makes sense to create and load them through a static factory method.</p>

<p>This also makes sense if some representations of the object are used more often than others (in your case maybe Point(0,0,0))</p>

<p>e.g</p>

<pre><code>private static final HashMap&lt;String, Point&gt; hash = new HashMap&lt;String, Point&gt;();

public static Point createPoint(int x, int y, int z) {
 String key = getKey(x,y,z);
 Point created = hash.get(key)
 if (created == null) {
  created = new Point(x,y,z);
  hash.put(key,created);
 }
 return created;
}

private static String createKey(int x, int y, int z) {
 StringBuffer buffer = new StringBuffer();
 buffer.append(""x:"");
 buffer.append(x);
 buffer.append(""y:"");
 buffer.append(y);
 buffer.append(""z:"");
 buffer.append(z);
 return buffer.toString()
}
</code></pre>
"
5887686,"<p>Use <code>String.split(yourdata, ',')</code> and you will get a <code>String[]</code>. Then, perform <code>String.split(String[i],""="")</code>, on each entry to separate property and values.</p>

<p>Ideally, you should move this data in a <code>Properties</code> object instance. You can then save/load it from XML easily. It has useful methods.</p>

<p><strong>REM:</strong> I am assuming that you are savvy enough to understand that this solution won't work if values contain the separator (i.e., the comma) in them...</p>
"
5937422,"<p>It isn't entirely clear what you are asking, but perhaps you want to define a mapping between strings and constants, like this:</p>

<pre><code>enum Type { FIRST, SECOND, THIRD };
Map&lt;String, Type&gt; mapping = new HashSet&lt;String, Type&gt;(){{
    put(""ONE"", Type.FIRST);
    put(""TWO"", Type.FIRST);
    //...
    put(""NINE"", Type.THIRD);
}};

public Type getTypeFromString(String s) {
    return mapping.get(s);
}
</code></pre>
"
6070291,"<pre><code>String s="""";
for (int i = 0; i &lt; mac.length; i++) { 
  s += String.format(""%02X%s"", mac[i], (i &lt; mac.length - 1) ? ""-"" : """");
}
</code></pre>
"
6176259,"<p>I think we can use the following code to compare Long Value,</p>

<pre><code>Collections.sort(longValueList,new LongComparator());
</code></pre>

<h2>LongComparator.java</h2>

<pre><code>public class LongComparator implements Comparator {



    @Override
    public int compare(Object obj1, Object obj2) {


        return (obj1.toString()).compareTo(obj2.toString());
    }

}
</code></pre>

<p>Thanks
Deepak</p>
"
6510818,"<pre><code>var startDate = ""06/27/2007"";
startDate = new Date(startDate);

console.log(startDate);
</code></pre>
"
7183775,"<p>Looks like <code>PAYPALISTHEFASTERSAFERWAYTOSENDMONEY</code> is the input and </p>

<pre><code>P A Y P A L
F E R W A I
A M O N Y S
S D Y E T T
R N E S O H
E T S A F E
</code></pre>

<p>is the output to me..</p>

<p>Even though the question was not clearly stating to provide an algorithm initially. Here is pseudo code for the recursive solution:</p>

<pre><code>convert(input):
  spiral(out[][],input,0,0,sqrt(input.len))
  return out.toString()

spiral(out[][],input,ix,iy,size)
  if size&gt;0
    //calculate the frame coords with starting indices ix,iy &amp; size of the frame
    place first 4*(size-1) chars on a frame on the ´out´ matrix
    //recursive call to create inner frame
    spiral(out,input.remainingString(),ix+1,iy+1,size-2)
  else return
</code></pre>

<p>and implementation in java:</p>

<pre><code>public class PayPal {

    private enum Dir {

        RIGHT, DOWN, LEFT, UP;
    }

    public String convert(String input) {
        double dRoot = Math.sqrt(input.length());
        int root;
        if (Double.compare(dRoot, (int) dRoot) == 0) {
            root = (int) dRoot;
        } else {
            root = (int) dRoot + 1;
        }

        char[][] out = new char[root][root];

        spiral(out, 0, 0, root, input);
        StringBuilder sb = new StringBuilder();

        for (char[] line : out) {
            sb.append(line);
        }

        return sb.toString();
    }

    private void spiral(char[][] out, int i, int j, int size, String input) {
        Dir direction = Dir.RIGHT;

        if (size &gt; 0) {
            if (size == 1) {
                out[i][j] = input.charAt(0);
            } else {
                for (int k = 0; k &lt; 4 * (size - 1); k++) {
                    int di = (k != 0 &amp;&amp; k % (size - 1) == 0 ? size - 1 : k % (size - 1));
                    switch (direction) {
                        case RIGHT:
                            out[i][j + di] = input.charAt(k);
                            break;
                        case DOWN:
                            out[i + di][j + size - 1] = input.charAt(k);
                            break;
                        case LEFT:
                            out[i + size - 1][j + size - 1 - di] = input.charAt(k);
                            break;
                        case UP:
                            out[i + size - 1 - di][j] = input.charAt(k);
                            break;
                    }
                    if (k != 0 &amp;&amp; (k % (size - 1) == 0)) //Change direction
                    {
                        direction = Dir.values()[direction.ordinal() + 1];
                    }
                }
            }
            spiral(out, i + 1, j + 1, size - 2, input.substring(4 * (size - 1)));
        } else {
            return;
        }
    }
}
</code></pre>
"
2119126,"<p>I saw many times the word <code>Clazz</code> used in the code to avoid the reserved word. Does that help?</p>
"
7665711,"<p><a href=""http://stackoverflow.com/a/4837230"">Daniel's answer</a> was good except I had to change this code...</p>

<pre><code>    SchemeRegistry registry = new SchemeRegistry();
    registry.register(new Scheme(""http"", PlainSocketFactory.getSocketFactory(), 80));
    registry.register(new Scheme(""https"", sf, 443));

    ClientConnectionManager ccm = new ThreadSafeClientConnManager(params, registry);
</code></pre>

<p>to this code...</p>

<pre><code>    ClientConnectionManager ccm = new ThreadSafeClientConnManager(params, registry);
    SchemeRegistry registry = ccm.getShemeRegistry()
    registry.register(new Scheme(""http"", PlainSocketFactory.getSocketFactory(), 80));
    registry.register(new Scheme(""https"", sf, 443));
</code></pre>

<p>to get it to work.</p>
"
2201755,"<p>Why do you care? Nobody calls the main method by hand. It is internal to Java.</p>

<p>EDIT : I guess it doesn't matter now as you can define main method as :</p>

<pre><code>public static void main(String... args);
</code></pre>

<p>My point is still valid as no one calls main explicitly.</p>
"
2255532,"<p>There's no shortcut for doing this in Java like the example you gave in Python.</p>

<p>You'd have to do this:</p>

<pre><code>for (;i &gt; 0; i--) {
    somenum = somenum + ""0"";
}
</code></pre>
"
7943068,"<p><code>StringUtils#split</code> is faster than <code>String#split</code>.</p>

<p><code>String#equals</code> is faster than <code>StringUtils#equals</code>.</p>
"
2278709,"<p>I think an answer to the original question is that both languages are Object-oriented by definition. So, objects are first-class citizens i.e. everything is an object.</p>

<p>That's how the language was designed, how it's intended to be used and how the compiler figures out how to link parts of code to create a program.</p>

<p><code>static</code> helps make our lives easier, but sometimes we have to pay for that. for example, when you wish you could override a static method.</p>
"
8095141,"<p>Your problem is that you're reading the values out of the same array you're modifying.</p>

<pre><code>public static void reverse(int[] originalArray) {
    int[] newArray = new int[originalArray.length];

    for (int i = 0; i &lt; originalArray.length; i++) {
        newArray[i] = originalArray[originalArray.length - i - 1];
    }
}
</code></pre>
"
2346842,"<p>By inheriting you are actually creating common type for several classes  . Here you have a common animal type . you are using it by creating an array in type of Animal and keeping values of similar types(inherited types dog, cat ,etc..).</p>

<p>Eg:</p>

<pre><code> dim animalobj as new List(Animal)
  animalobj(0)=new dog()
   animalobj(1)=new Cat()
</code></pre>

<p>.......</p>

<p>Got it?</p>
"
2349676,"<p>Instead of breaking you <em>could</em> raise an exception and catch it outside the loop. I forget the syntax in Java but Python would be something like this:</p>

<pre><code>broken = False

try:
    for i in list:
        if i.condition == True:
            raise Exception
except Exception:
    # you know something has broken the flow
    broken = True
</code></pre>

<p>Although what if the last item broke? Technically speaking every item was inspected.</p>
"
8233928,"<p>It seems to me we need to take another look at the layers.
(I hope someone corrects me if I get this wrong.)</p>

<ol>
<li><strong>Front End/UI</strong></li>
<li><strong>Business</strong></li>
<li><strong>Service/DAO</strong></li>
</ol>

<p>So for the case of Generating a Report, THe layers break down like so. </p>

<ol>
<li><strong>Front End/UI</strong><br>
<ul>
<li>will have a UI with a button ""Get Some Report"" </li>
<li>the button will then call the Business layer that knows what the report is about.</li>
<li>The data returned by the report generator is given any final formatting before being returned to the user.</li>
</ul></li>
<li><strong>Business</strong>
<ul>
<li><code>MyReportGenerator.GenerateReportData()</code> or similar will be called</li>
</ul></li>
<li><strong>Service/DAO</strong>
<ul>
<li>inside of the report generator DAOs will be used. <code>DAOLocator.GetDAO(Entity.class)</code>; or similar factory type methods would be used to get the DAOs. the returned DAOs will extend a <a href=""http://www.ibm.com/developerworks/library/j-genericdao/"" rel=""nofollow"">Common DAO interface</a> </li>
</ul></li>
</ol>
"
8581541,"<p>Use <code>countDistinct</code> instead of <code>count</code>.</p>
"
8706263,"<p>please search and change this line in all files.:</p>

<pre><code>&lt;equals arg1=""1.5"" arg2=""${ant.java.version}""/&gt;
</code></pre>

<p>for</p>

<pre><code>&lt;equals arg1=""1.5"" arg2=""1.5""/&gt;
</code></pre>
"
8751585,"<p>Maybe some like this:</p>

<pre><code>public class JdbcActorDao implements ActorDao {
private SimpleJdbcTemplate simpleJdbcTemplate;
private SimpleJdbcInsert insertActor;

public void setDataSource(DataSource dataSource) {
    this.simpleJdbcTemplate = new SimpleJdbcTemplate(dataSource);
    this.insertActor =
            new SimpleJdbcInsert(dataSource)
                    .withTableName(""t_actor"")
                    .usingGeneratedKeyColumns(""id"");
}

public void add(Actor actor) {
    Map&lt;String, Object&gt; parameters = new HashMap&lt;String, Object&gt;(2);
    parameters.put(""first_name"", actor.getFirstName());
    parameters.put(""last_name"", actor.getLastName());
    Number newId = insertActor.executeAndReturnKey(parameters);
    actor.setId(newId.longValue());
}

//  ... additional methods
}
</code></pre>
"
9164217,"<p>this way I found worked:</p>

<pre><code>public String convertToString(char[] array, int length)
{
String char_string;
String return_string="""";
int i;

   for(i=0;i&lt;length;i++)
   {
       char_string=Character.toString(array[i]);
       return_string=return_string.concat(char_string);
   }
   return return_string;
}
</code></pre>
"
9957300,"<p>I did this in C if anyone cares.  It assumes ASCII values and uses the characters ordinal value:</p>

<pre><code>bool is_permutation(const char *a, const char *b)
{                                                
    if (a == NULL || b == NULL)              
            return false;                    

    if (strlen(a) != strlen(b))              
            return false;                    

    int sum_a = 0, sum_b = 0;                

    while (*a != '\0')                       
            sum_a += (int)*a++;              

    while (*b != '\0')                       
            sum_b += (int)*b++;              

    return (sum_a == sum_b);                 
}                                                
</code></pre>
"
9989772,"<p>how about this? </p>

<pre><code>public String fillSpaces(int len) {
    /* the spaces string should contain spaces exceeding the max needed */  
    String spaces = ""                                                   "";
    return spaces.substring(0,len);
}
</code></pre>

<p>EDIT: I've written a simple code to test the concept and here what i found. </p>

<p>Method 1: adding single space in a loop:</p>

<pre><code>  public String execLoopSingleSpace(int len){
    StringBuilder sb = new StringBuilder();

    for(int i=0; i &lt; len; i++) {
        sb.append(' ');
    }

    return sb.toString();
  }
</code></pre>

<p>Method 2: append 100 spaces and loop, then substring:</p>

<pre><code>  public String execLoopHundredSpaces(int len){
    StringBuilder sb = new StringBuilder(""          "")
            .append(""          "").append(""          "").append(""          "")
            .append(""          "").append(""          "").append(""          "")
            .append(""          "").append(""          "").append(""          "");

    for (int i=0; i &lt; len/100 ; i++) {
        sb.append(""          "")
            .append(""          "").append(""          "").append(""          "")
            .append(""          "").append(""          "").append(""          "")
            .append(""          "").append(""          "").append(""          "");
    }

    return sb.toString().substring(0,len);
  }
</code></pre>

<p>The result I get creating 12,345,678 spaces:</p>

<pre><code>C:\docs\Projects&gt; java FillSpace 12345678
method 1: append single spaces for 12345678 times. Time taken is **234ms**. Length of String is 12345678
method 2: append 100 spaces for 123456 times. Time taken is **141ms**. Length of String is 12345678
Process java exited with code 0
</code></pre>

<p>and for 10,000,000 spaces:</p>

<pre><code>C:\docs\Projects&gt; java FillSpace 10000000
method 1: append single spaces for 10000000 times. Time taken is **157ms**. Length of String is 10000000
method 2: append 100 spaces for 100000 times. Time taken is **109ms**. Length of String is 10000000
Process java exited with code 0
</code></pre>

<p>combining direct allocation and iteration always takes less time, on average 60ms less when creating huge spaces. For smaller sizes, both results are negligible. </p>

<p>But please continue to comment :-)</p>
"
10103106,"<p>With <code>System.getProperty(""user.dir"")</code> you get the <strong>""Base of non-absolute paths""</strong> look at</p>

<p><a href=""http://developer.android.com/reference/java/lang/System.html#getProperty%28java.lang.String%29"" rel=""nofollow"">Java Library Description</a></p>
"
10595901,"<p>i think its really easy way :p which we cant do in C but can do in java</p>

<pre><code>package javaapplication21;

import java.util.Scanner;
public class JavaApplication21 {
    public static void main(String[] args) {
       int a;
       Scanner obj=new Scanner(System.in);
       System.out.print(""Enter array size="");
       a=obj.nextInt();
       int b[]=new int[a];
       for(int i=0;i&lt;b.length;i++){
          System.out.println(b[i]+i);
       }
   }
}
</code></pre>
"
10632053,"<p>have you looked into the decorator pattern in java you pass a button into a method which decorates it depending on whether the button is the current active one, for example if it hovered over.</p>

<pre><code>public Jbutton decorateButton(JButton b, boolean isHoveredOver){
    if(isHoveredOver)
        b.setBackground(getContentPane().getBackground().GREEN);
    return b;
}
</code></pre>

<p>you call this method from the MouseEvent or ActionEvent methods and just issue a repaint() after. put all your buttons into an array or vector and loop through it passing each one in to the decorateButton method and give the initail boolean value of false then on event set it to true. 
This way the initial value is default and the button is then decorated upon action the buttons will appear to be acting as part of a group</p>
"
10821438,"<p>To start off:</p>

<pre><code>String path = null;
FileChooser fc=new FileChooser(path);
fc.showOpenDialog(null);
</code></pre>

<p>Then in another class:</p>

<pre><code>public FileChooser(){
    this(null);
}

public  FileChooser(String path) {
    super(path);
    try {
        UIManager.setLookAndFeel(""com.sun.java.swing.plaf.windows.WindowsLookAndFeel"");
        SwingUtilities.updateComponentTreeUI(this);
        this.pack();
    } catch (Exception ex) {
        Logger.getLogger(FileChooser.class.getName()).log(Level.SEVERE, null, ex);
    }

    JFileChooser chooser = new JFileChooser();
}

private void pack() {
    try{
    }catch(UnsupportedOperationException eu){
    };
}
</code></pre>
"
10899588,"<pre><code>BigDecimal d = new BigDecimal(""59.0000"");
String d1 = new DecimalFormat().format(d);
System.out.println(""d1 is "" + d1);
</code></pre>
"
10956330,"<pre><code>yourMethod(int a){..} // example
//..................
boolean b = true;    //&lt;-  input
yourMethod(b?1:0);   //output -&gt; yourmethod(1)
</code></pre>
"
10960078,"<p>Yes you can. The jvm is smart enough to know which one to load as it looks at the method declaration that matches your main method and is logical. The parts of the main method declaration make perfect sense when you think like the 'jvm' and picture what the main method does (starts the application):</p>

<ul>
<li><code>public</code>, because this method must be accessible by the jvm (not written by you).</li>
<li><code>static</code>, implying this method can be accessed without having an object (because it's representation never changes), but here the logic is easily understood if you think like the jvm again; ""I don't have any objects to create (instantiate) objects, so I need a static method to start the application as there simply isn't any logical way to get an instance specific method up yet as I don't have anything up yet to create objects"".</li>
<li><code>void</code> This method can't logically return anything because there is nothing up yet to return anything to. It is the start point of the application.</li>
<li><code>main</code> I am the main method as without me you won't have an application.</li>
<li><code>String[] args</code> Send me data you may feel useful for my start up.</li>
</ul>
"
11036803,"<p>If you want to compare two Maps then, below code may help you</p>

<pre><code>(new TreeMap&lt;String, Object&gt;(map1).toString().hashCode()) == new TreeMap&lt;String, Object&gt;(map2).toString().hashCode()
</code></pre>
"
2623578,"<p>import java.util.Scanner;</p>

<p>class Example{</p>

<p>//Checks to see if a string is consider an integer.</p>

<pre><code>public static boolean isInteger(String s){

    if(s.isEmpty())return false;

    for (int i = 0; i &lt;s.length();++i){

        char c = s.charAt(i);

        if(!Character.isDigit(c) &amp;&amp; c !='-')

            return false;
    }

    return true;
}

//Get integer. Prints out a prompt and checks if the input is an integer, if not it will keep asking.

public static int getInteger(String prompt){
    Scanner input = new Scanner(System.in);
    String in = """";
    System.out.println(prompt);
    in = input.nextLine();
    while(!isInteger(in)){
        System.out.println(prompt);
        in = input.nextLine();
    }
    return Integer.parseInt(in);
}

public static void main(String[] args){
    int [] a = new int[6];
    for (int i = 0; i &lt; a.length;++i){
        int tmp = getInteger(""Enter integer for array_""+i+"": "");//Force to read an int using the methods above.
        a[i] = tmp;
    }

}
</code></pre>

<p>}</p>
"
2625587,"<p><strong>Critical</strong></p>

<ul>
<li>Clean text editor ( Textmate, gVim ) </li>
<li>JDK ( java, javac, javap etc. ) </li>
<li>A webbrowser to read the javadocs</li>
</ul>

<p><strong>Non-critical</strong></p>

<p>All those you mention but <code>s/Eclipse/IntelliJ Idea/g</code> </p>
"
2627050,"<pre><code>   Random randomGenerator = new Random();

   int i = randomGenerator.nextInt(256);
   System.out.println((char)i);
</code></pre>

<p>Should take care of what you want, assuming you consider '0,'1','2'.. as characters.</p>
"
11980986,"<p>Hi you can use the following method to generate 10 digit random number</p>

<pre><code>private static int getRndNumber() {
    Random random=new Random();
    int randomNumber=0;
    boolean loop=true;
    while(loop) {
        randomNumber=random.nextInt();
        if(Integer.toString(randomNumber).length()==10 &amp;&amp; !Integer.toString(randomNumber).startsWith(""-"")) {
            loop=false;
        }
        }
    return randomNumber;
}
</code></pre>
"
12077554,"<p>this will work</p>

<pre><code>   String myName=""domanokz"";
   String p=myName.replace(myName.charAt(4),'x');
   System.out.println(p);
</code></pre>

<p>Output : domaxokz</p>
"
2682067,"<pre><code>ArrayList al = new ArrayList();
al.Add(array1);
al.Add(array2);
al.Add(array3);
</code></pre>

<p>that's probably your best bet, or you will run into ArrayIndexOutOfBound-style problems. You'll probably run into this way too</p>
"
2682156,"<pre><code>    String[] arr0 = [""a1"", ""a2""];
    String[] arr1 = [""b1"", ""b2"", ""b3"", ""b4""];
    String[] arr2 = [""c1""];
    int length = arr0.length + arr1.length + arr2.length;
    int max = Math.max(arr0.length, Math.max(arr1.length, arr2.length));
    int index = 0;
    String[] result = new String[length];
    for (int i=0; i&lt;max; i++){
        if (i&lt;arr0.length)
           result[index++] = arr0[i];
        if (i&lt;arr1.length)
           result[index++] = arr1[i];
        if (i&lt;arr2.length)
           result[index++] = arr2[i];
    }
</code></pre>
"
12632217,"<p><code>@override</code> means you are borrowing methods from available class and are not defined by the programmer.</p>
"
12713298,"<pre><code>// Convert millis to seconds. This can be simplified a bit,
// but I left it in this form for clarity.
long m = System.currentTimeMillis(); // that's our input
int s = Math.max(.18*(Math.toRadians(m)/Math.PI),Math.pow(Math.E, Math.log(m)-Math.log(1000)));
System.out.println( ""seconds: s"" );
</code></pre>
"
2722028,"<blockquote>
  <p>Strings are more commonly concatenated
   with the + operator, as in 
  <code>""Hello,"" + "" world"" + ""!""</code></p>
</blockquote>

<p><a href=""http://java.sun.com/docs/books/tutorial/java/data/strings.html"" rel=""nofollow"">Source</a></p>
"
13749133,"<p>try this ;)</p>

<pre><code>Long a = 100;    
int ai = Integer.parseInt(a.toString());
</code></pre>
"
13763377,"<p><code>static int</code>, which can be accessed directly without using objects.
<code>int</code>, which cannot be accessed directly without using objects.  </p>
"
13911751,"<pre><code>Calendar cal2 = Calendar.getInstance();
cal2.add(Calendar.YEAR, -1);
Date dt2 = new Date(cal2.getTimeInMillis());
System.out.println(dt2);
</code></pre>
"
2768985,"<p>I'm not aware of that sort of counterpart to <code>substring()</code>, but it's not really necessary. You can't efficiently find the last index with a given value using <code>indexOf()</code>, so <code>lastIndexOf()</code> is necessary. To get what you're trying to do with <code>lastSubstring()</code>, you can efficiently use <code>substring()</code>.</p>

<pre><code>String str = ""aaple"";
str.substring(str.length() - 2, str.length() - 1).equals(""e"");
</code></pre>

<p>So, there's not really any need for <code>lastSubstring()</code>.</p>
"
2768999,"<pre><code>public string LastSubString(this string str) {
    return str.Reverse().Substring(0,1);
}
</code></pre>
"
13930892,"<pre><code>String formattedStr=unformattedStr;
formattedStr=formattedStr.trim().replaceAll(""\\s+"", "" "");
</code></pre>
"
13972677,"<p>This is how I solved this problem.
I had in my application google maps too, and I change: </p>

<pre><code>c:\users\manuel\.Android\debug.keystore
</code></pre>

<p>with new created key (new key didn't work) and error was:</p>

<pre><code>Failed to find style 'mapViewStyle' in current theme
</code></pre>

<p>after returning old key everithing worked fine.
I really hate developing for android it's mess comparing to Visual studio development.
this problem cost me 4h ...</p>

<p>To re-create debug.keystore use this <a href=""http://stackoverflow.com/questions/2194808/debug-certificate-expired-error-in-eclipse-android-plugins/2196397#2196397"">&quot;Debug certificate expired&quot; error in Eclipse Android plugins</a></p>
"
2787795,"<p>Second is better for speed.</p>

<p>Reason is that in the first case, the scope of <code>j</code> is limited to the inner <code>for</code> loop.</p>

<p>As such, the moment, the inner loop is completed, the memory for <code>j</code> is de-allocated, and again allocated for the next iteration of the outer loop.</p>

<p>Because the memory allocation and deallocation take some time, even though it's on stack, the performance of the first one is slower.</p>
"
14210792,"<p>Add an event for <code>KeyPressed</code>.</p>

<pre><code>private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {
  if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
      // Enter was pressed. Your code goes here.
   }
} 
</code></pre>
"
2791843,"<p>Run JavaLint - I suspect it will tell you that</p>

<pre><code>System.out.println(text.toLowerCase());
</code></pre>

<p>in the first example is unreachable.  Since it is unreachable, I'm guessing FindBug doesn't care that it could cause a NullPointerException</p>
"
14313391,"<pre><code>public String getDaySuffix(int inDay)
{
  String s = String.valueOf(inDay);

  if (s.endsWith(""1""))
  {
    return ""st"";
  }
  else if (s.endsWith(""2""))
  {
    return ""nd"";
  }
  else if (s.endsWith(""3""))
  {
    return ""rd"";
  }
  else
  {
    return ""th"";
  }
}
</code></pre>
"
14737639,"<p>Yet another solution similar to the ""prefix"" solution above avoids multiple prefix assignments in the loop. i.e. Just in case the optimizer does not unroll the first loop iteration.</p>

<pre><code>    StringBuilder sb = new StringBuilder();
    boolean firstEntry = true;
    for (String serverId : serverIds) {
      if (firstEntry)
        firstEntry = false;
      else
        sb.append("","");      
      sb.append(serverId);
    }
</code></pre>
"
14855225,"<pre><code>value = (int)(value * 100 + 0.5) / 100.0;
</code></pre>
"
15193006,"<p>In java ,there is a rigorous way to convert a long to int</p>

<p>not only lnog can convert into int,any type of class extends Number can convert to other Number type in general,here I will show you how to convert a long to int,other type vice versa.</p>

<pre><code>Long l = 1234567L;
int i = org.springframework.util.NumberUtils.convertNumberToTargetClass(l, Integer.class);
</code></pre>

<p><img src=""http://i.stack.imgur.com/BElEq.jpg"" alt=""convert long to int""></p>
"
15555013,"<p>A simple method like below can also be used</p>

<pre><code>public static String padString(String str, int leng,char chr) {
        for (int i = str.length(); i &lt;= leng; i++)
            str += chr;
        return str;
    }
</code></pre>
"
2920060,"<p>Here is some trick how to find out is some file (not mandatory property file) exists in class path </p>

<pre><code>public class FileUtil {
    public static boolean isFileExists(String fileName){
         return null != FileUtil.class.getResourceAsStream(fileName);
    }
}
</code></pre>

<p>Sure it not always works as long it depends on class loading aspects</p>
"
16204945,"<p>work with all https</p>

<pre><code>httpClient = new DefaultHttpClient();

SSLContext ctx = SSLContext.getInstance(""TLS"");
X509TrustManager tm = new X509TrustManager() {
    public void checkClientTrusted(X509Certificate[] xcs, String string) throws CertificateException { }

    public void checkServerTrusted(X509Certificate[] xcs, String string) throws CertificateException { }

    public X509Certificate[] getAcceptedIssuers() {
        return null;
    }
};

ctx.init(null, new TrustManager[]{tm}, null);
SSLSocketFactory ssf = new SSLSocketFactory(ctx, SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);

httpClient.getConnectionManager().getSchemeRegistry().register(new Scheme(""https"", 443, ssf));
</code></pre>
"
16299809,"<p>you can just add 
""<code>&lt;packaging&gt;pom&lt;/packaging&gt;</code>"" 
in your pom.xml and then you should be able to add modules.</p>
"
16318447,"<pre><code>public void keyReleased(KeyEvent e)
{
    int key=e.getKeyCode();
    if(e.getSource()==textField)
    {
        if(key==KeyEvent.VK_ENTER)
        { 
            Toolkit.getDefaultToolkit().beep();
            textField_1.requestFocusInWindow();                     
        }
    }
</code></pre>

<p>To write logic for 'Enter press' in <code>JTextField</code>, it is better to keep logic inside the <code>keyReleased()</code> block instead of <code>keyTyped()</code> &amp; <code>keyPressed()</code>.</p>
"
16494334,"<p>If i is your primitive int, you can write just below</p>

<pre><code>String a = """" + i;
</code></pre>

<p>That's it. </p>
"
16690791,"<pre><code> import java.util.*;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.text.*;

public class EPOCH {


public static void main(String[] args) throws InterruptedException {

try {

InputStreamReader isr = new InputStreamReader(System.in);
System.out.print(""pelase enter Epoch tme stamp : "");
BufferedReader br = new BufferedReader(isr);
String s=br.readLine();
long l=Long.parseLong(s); 
l=l*1000;  

Date date = new Date(l);

 DateFormat format = new SimpleDateFormat(""dd/MM/yyyy HH:mm:ss"");
 format.setTimeZone(TimeZone.getTimeZone(""Etc/UTC""));
 String formatted = format.format(date);
  System.out.println(formatted);
  format.setTimeZone(TimeZone.getTimeZone(""IST""));

formatted = format.format(date);
Calendar c=Calendar.getInstance();
c.setTime(format.parse(formatted));
formatted = format.format(c.getTime());  
System.out.println(formatted);
}
catch (Exception e) {
e.printStackTrace();
}}}
</code></pre>
"
17212074,"<p>You can use:</p>

<pre><code>string finalString=sb.Remove(sb.Length - 1, 1).ToString();
</code></pre>
"
17526301,"<p>Simply use this - </p>

<pre><code>public DefaultHttpClient wrapClient(HttpClient base) {
    try {
        SSLContext ctx = SSLContext.getInstance(""TLS"");
        X509TrustManager tm = new X509TrustManager() {
        public void checkClientTrusted(X509Certificate[] xcs, String string) throws CertificateException { }

        public void checkServerTrusted(X509Certificate[] xcs, String string) throws CertificateException { }

        public X509Certificate[] getAcceptedIssuers() {
            return null;
        }
    };
    ctx.init(null, new TrustManager[]{tm}, null);
    SSLSocketFactory ssf = new SSLSocketFactory(ctx);
    ssf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
    ClientConnectionManager ccm = base.getConnectionManager();
    SchemeRegistry sr = ccm.getSchemeRegistry();
    sr.register(new Scheme(""https"", ssf, 443));
    return new DefaultHttpClient(ccm, base.getParams());
} catch (Exception ex) {
    return null;
}
}
</code></pre>
"
18567391,"<p>Another simple example:</p>

<pre><code>public static void listFilesInDirectory(String pathString) {
  // A local class (a class defined inside a block, here a method).
  class MyFilter implements FileFilter {
    @Override
    public boolean accept(File file) {
      return !file.isHidden() &amp;&amp; file.getName().endsWith("".txt"");
    }
  }

  File directory = new File(pathString);
  File[] files = directory.listFiles(new MyFilter());

  for (File fileLoop : files) {
    System.out.println(fileLoop.getName());
  }
}

// Call it
listFilesInDirectory(""C:\\Users\\John\\Documents\\zTemp"");

// Output
Cool.txt
RedditKinsey.txt
...
</code></pre>
"
18848086,"<p>There a many answers above but I wasn't able to get any of them working correctly (with my limited time), so for anyone else in the same situation you can try the code below which worked perfectly for my java testing purposes:</p>

<pre><code>    public static HttpClient wrapClient(HttpClient base) {
    try {
        SSLContext ctx = SSLContext.getInstance(""TLS"");
        X509TrustManager tm = new X509TrustManager() {
            public void checkClientTrusted(X509Certificate[] xcs, String string) throws CertificateException { }

            public void checkServerTrusted(X509Certificate[] xcs, String string) throws CertificateException { }

            public X509Certificate[] getAcceptedIssuers() {
                return null;
            }
        };
        ctx.init(null, new TrustManager[]{tm}, null);
        SSLSocketFactory ssf = new SSLSocketFactory(ctx);
        ssf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
        ClientConnectionManager ccm = base.getConnectionManager();
        SchemeRegistry sr = ccm.getSchemeRegistry();
        sr.register(new Scheme(""https"", ssf, 443));
        return new DefaultHttpClient(ccm, base.getParams());
    } catch (Exception ex) {
        return null;
    }
}
</code></pre>

<p>and call like:</p>

<pre><code>DefaultHttpClient baseClient = new DefaultHttpClient();
HttpClient httpClient = wrapClient(baseClient );
</code></pre>

<p>Reference: <a href=""http://tech.chitgoks.com/2011/04/24/how-to-avoid-javax-net-ssl-sslpeerunverifiedexception-peer-not-authenticated-problem-using-apache-httpclient/"" rel=""nofollow"">http://tech.chitgoks.com/2011/04/24/how-to-avoid-javax-net-ssl-sslpeerunverifiedexception-peer-not-authenticated-problem-using-apache-httpclient/</a></p>
"
19584424,"<pre><code>Long l = 100;
int i = Math.round(l);
</code></pre>
"
19796131,"<p>Calculations with short type are exteremly expensive.</p>

<p>Take the following useless loop for example:</p>

<pre><code>short t=0;
//int t=0;
//long t=0;
for(many many times...)
{
  t+=1;
  t-=1;
}
</code></pre>

<p>if t is a short it will take literally 1000s of times longer than if it's an int or a long.</p>

<p>checked on 64 bit jvms versions 6/7 on linux</p>
"
19965920,"<p>this is a server problem, you maybe set the read_buffer_size on your my.cnf, too high like 4M, 16M, or so.</p>

<pre><code>read_buffer_size=32M (too high)
</code></pre>

<p>delete that line or put a value like 4k,16k or 32k.</p>

<pre><code> read_buffer_size=16k
</code></pre>
"
19994183,"<pre><code>public boolean newEquals(String str1, String str2)
{
    int len = str1.length();
int len1 = str2.length();
if(len==len1)
{
    for(int i=0,j=0;i&lt;str1.length();i++,j++)
    {
        if(str1.charAt(i)!=str2.charAt(j))
        return false;
    }`enter code here`
}
return true;
}
</code></pre>
"
20559454,"<p>Cemeron, 
Neat code there!</p>

<p>I came across an interesting situation where our customer had given the <strong>IV</strong> the same as the <strong>key</strong>. </p>

<p>After trying out various combinations where I was getting bad padding exception, the solution that worked was</p>

<pre><code>byte[] iv=new byte[8]; // assuming RC2
System.arraycopy(key.getBytes(), 0, iv, 0, key.getBytes().length &gt; iv.length ? key.getBytes().length);

// Now decrypt and hopefully this should work
</code></pre>
"
21008496,"<p>If you look at HashMap.get(key) method you will see a use of</p>

<p>Entry entry = <strong>getEntry</strong>(key);</p>

<p>Why is <strong>getEntry</strong>(key) method private?? It returns key and value for desired search. I will use this method by brute force, but it is ugly solution...</p>

<p>Implementation of method in HashMap follows</p>

<pre><code>/**
 * Returns the entry associated with the specified key in the
 * HashMap.  Returns null if the HashMap contains no mapping
 * for the key.
 */
final Entry&lt;K,V&gt; getEntry(Object key) {
    int hash = (key == null) ? 0 : hash(key);
    for (Entry&lt;K,V&gt; e = table[indexFor(hash, table.length)];
         e != null;
         e = e.next) {
        Object k;
        if (e.hash == hash &amp;&amp;
            ((k = e.key) == key || (key != null &amp;&amp; key.equals(k))))
            return e;
    }
    return null;
}
</code></pre>
"
21214143,"<p>My reputation is less then required to comment, but I think that <strong>chaiyachaiya's</strong> and <strong>Pablo Santa Cruz</strong> answers are completely wrong. 
Firstly, Enum overwrites hashcode with <code>==</code> operator, as it's instances are guaranteed to be singletons and so it doesn't compare logical equality of operands. That's why if we use <code>MyEnum.values()</code> and check with <code>contains()</code>, we will always get <code>false</code>.
Secondly, <code>MyEnum.values().toString()</code> will call <code>toString()</code> on the <code>MyEnum</code> class object, rather then on instances of the <code>MyEnum</code> class (if you override this method in the class of cause). 
So, what will you get with <code>Lists.newArrayList(MyEnum.values().toString()).contains(myString)</code>?</p>
"
22374659,"<p>Assuming that, Firebug is installed. Your objective is to run Firebug. Firebug can be run/execute by pressing F12 key. So Firebug can be run by following command of Selenium WebDriver with Java:</p>

<pre><code>Actions action = new Actions(driver);
action.sendKeys(Keys.F12).build().perform();
</code></pre>
"
23198224,"<pre><code>public class FindDuplicate {

public static void main(String[] args) {

    // assume the array is sorted, otherwise first we have to sort it.
    // time efficiency is o(n)
    int elementData[] = new int[] { 1, 2, 3, 3, 4, 5, 6, 8, 8 };
    int count = 1;
    int element1;
    int element2;

    for (int i = 0; i &lt; elementData.length - 1; i++) {
        element1 = elementData[i];
        element2 = elementData[count];
        count++;
        if (element1 == element2) {
            System.out.println(element2);
        }
    }

}
</code></pre>

<p>}</p>
"
3205139,"<p>Did you try</p>

<p><code>Integer.valueOf(5)</code> to pass 5 along as an Integer instead of an int?</p>
"
23663258,"<p>In activity B you at the following function:</p>

<pre><code>  protected String getStringExtra(Bundle savedInstanceState, String id) {
    String l;
    l = (savedInstanceState == null) ? null : (String) savedInstanceState
            .getSerializable(id);
    if (l == null) {
        Bundle extras = getIntent().getExtras();
        l = extras != null ? extras.getString(id) : null;
    }
    return l;
}
</code></pre>

<p>You are using it in the following way in activity B:</p>

<pre><code>public void onCreate(Bundle savedInstanceState) {
   super.onCreate(savedInstanceState); 
   String MANEUVER_ID  = getStringExtra(savedInstanceState, ""selection"");      
}
</code></pre>
"
23843692,"<p>i've been searching the same solution which you seem to be looking for, and i resolved it in this way. if you occur mousePressed Event you can terminate it also reuse it, but it need to be initialized, as you can see below.</p>

<pre><code>class MouseHandler extends MouseAdapter{
    public void mousePressed(MouseEvent e) {            
        if(th.isAlive()){
            th.interrupt();
            th = new Thread();
        }
        else{
            th.start();
        }
    }

}
</code></pre>
"
24438150,"<p>Move to first of next month and subtract a day.</p>

<pre><code>Calendar  cal=Calendar.getInstance();
cal.add(Calendar.MONTH,1);
cal.set(Calendar.DAY_OF_MONTH,1);
cal.add(Calendar.DATE, -1);
</code></pre>
"
25529684,"<p>Generally we want to add images, txt, doc and etc files inside our Java project and specific folder such as /images.
I found in search that in JAVA, we can get path from Root to folder which we specify as,</p>

<pre><code>String myStorageFolder= ""/images""; // this is folder name in where I want to store files.

String getImageFolderPath= request.getServletContext().getRealPath(myStorageFolder);
</code></pre>

<p>Here, request is object of HttpServletRequest. It will get the whole path from Root to /images folder. You will get output like,</p>

<blockquote>
  <p>C:\Users\STARK\Workspaces\MyEclipse.metadata.me_tcat7\webapps\JavaProject\images</p>
</blockquote>
"
25794164,"<p>Just use subtrings, and the contains method to find out.</p>

<pre><code>package nmelssx;
import java.util.Arrays;

public class Nmelssx {

    public static void main (String args[])
    {
        String text = ""004-034556"";
        String text1 = text.substring(0,3);
        String text2 = text.substring(5,10);

        if (text.contains(""-"")) {
            System.out.println(""It contains the -"");
        }
        else {
            System.out.println(""It doesn't contain the -"");
        }
    }
}
</code></pre>
"
3384337,"<p>Since a <code>Dividend</code> is being returned, users will probably know it is a new <code>Dividend</code> instance. Even then, you might reconsider the name.</p>
"
26675697,"<pre><code>import java.util.HashSet;

public class SplitString {
    public static void main(String[] args) {
        String st = new String(""New Delhi-Chennai-New York-Bangalore-Chennai-New Delhi-Chennai-New York"");
        StringBuffer stb = new StringBuffer();

        HashSet&lt;String&gt; hashset = new HashSet&lt;String&gt;();
        for (String a : st.split(""-""))
            hashset.add(a);

        Object[] str = (Object[]) hashset.toArray();

        for (int i = 0; i &lt; str.length; i++) {
            stb.append(str[i]);

            if (i &lt; str.length - 1)
                stb.append(""-"");

        }

        System.out.println(stb);
    }
}
</code></pre>
"
26894692,"<p>If your main concern is faster computation I think writing this code in C is a better option. You also mentioned that your file is 5-6 GB in size. Therefore, using C will make a good difference. Reading line by line data in C is simple. It is like this: </p>

<pre><code>#include &lt;stdio.h&gt;

int main(void)
{
    char string[80];

    freopen(""A.txt"",""r"",stdin);



    while(gets(string))
    {
        puts(string);
    }

    return 0;
}
</code></pre>

<p>Then it will display the content of your file line by line at console. </p>
"
27520417,"<p>Just use <code>event.getSource()</code> frim within <code>actionPerformed</code></p>

<p>Cast it to the component </p>

<p>for Ex, if you need combobox</p>

<pre><code>JComboBox comboBox = (JComboBox) event.getSource();
JTextField txtField = (JTextField) event.getSource();
</code></pre>

<p>use appropriate api to get the value,</p>

<p>for Ex.</p>

<pre><code>Object selected = comboBox.getSelectedItem();  etc.
</code></pre>
"
27831435,"<pre><code>import java.util.Scanner;

public class userinput {
    public static void main(String[] args) {        
        Scanner input = new Scanner(System.in);

        System.out.print(""Name : "");
        String name = input.next();
        System.out.print(""Last Name : "");
        String lname = input.next();
        System.out.print(""Age : "");
        byte age = input.nextByte();

        System.out.println("" "" );
        System.out.println("" "" );

        System.out.println(""Firt Name: "" + name);
        System.out.println(""Last Name: "" + lname);
        System.out.println(""      Age: "" + age);
    }
}
</code></pre>
"
28528293,"<p>Many of the examples here will not work for 11, 12, 13. This is more generic and will work for all case.</p>

<pre><code>switch (date) {
                case 1:
                case 21:
                case 31:
                    return """" + date + ""st"";

                case 2:
                case 22:
                    return """" + date + ""nd"";

                case 3:
                case 23:
                    return """" + date + ""rd"";

                default:
                    return """" + date + ""th"";
}
</code></pre>
"
28766182,"<p>You can use <code>java.util.concurrent.atomic.AtomicInteger</code>.</p>
"
3553985,"<p>use <code>Calendar.get(Calendar.MINUTE)</code> and write some code to do the rounding.</p>
"
29050938,"<p>Just use this code:</p>

<pre><code>SwingUtilities.getRootPane(myButton).setDefaultButton(myButton);
</code></pre>
"
29137704,"<pre><code>Date d = new Date(i * 1000 + TimeZone.getDefault().getRawOffset());
</code></pre>
"
29193817,"<pre><code>class ex1 {    
    public static void main(String args[]){
        int a, b, c;
        a = Integer.parseInt(args[0]);
        b = Integer.parseInt(args[1]);
        c = a + b;
        System.out.println(""c = "" + c);
    }
}
// Output  
javac ex1.java
java ex1 10 20 
c = 30
</code></pre>
"
29362618,"<pre><code>import java.util.*;

public class RemoveDuplicateWord {

    public static void main(String[] args) {
        String str = ""Hai hello Hai how hello are how you"";
        removeDupWord(str);
    }

    public static void removeDupWord(String input) {
        List&lt;String&gt; list = Arrays.asList(input.split("" ""));
        LinkedHashSet&lt;String&gt; lhs = new LinkedHashSet&lt;String&gt;(list);
        for(String s : lhs) {
            System.out.print(s+"" "");
        }                   
    }
}
</code></pre>
"
29369534,"<pre><code>public class Match {
 void comp(String s1, String s2) {
    char[] charArray1 = s1.toCharArray();
    char[] charArray2 = s2.toCharArray();

    int length1 = charArray1.length;        

    int length2 = charArray2.length;       
    int flag = 0;

    if (length1 == length2) {
        for (int i = 0; i &lt;= length1 - 1; i++) {
            if (charArray1[i] == charArray2[i]) {
                System.out.println(""index are matched:"" + "" "" + charArray1[i] + "" "" + ""in index-"" + i);

            } else {
                flag = 1;
                System.out.println(""index are not matched:"" + "" "" + charArray1[i] + "" "" + ""in index-"" + i);
                System.out.println(""index are not matched:"" + "" "" + charArray2[i] + "" "" + ""in index-"" + i);                    
            }
        }
    } else {
        System.out.println(""Your string are not matched by length"");
    }
    if (flag == 0) {
        System.out.println(""Your string  matched with other String"");
    } else {
        System.out.println(""Your string are not matched"");
    }
}
public static void main(String[] args) {
    java.util.Scanner sc = new java.util.Scanner(System.in);
    System.out.println(""Enter the 1st String:"");
    String s1 = sc.nextLine();
    System.out.println(""Enter the 2nd string"");
    String s2 = sc.nextLine();
    Match m = new Match();
    m.comp(s1, s2);
}
}
</code></pre>
"
29894791,"<p><code>ArithmeticUtils.factorial</code> is apparently deprecated now. Please try  <code>CombinatoricsUtils.binomialCoefficientDouble(n,r)</code></p>
"
3658197,"<p><code>d += Double.MIN_VALUE</code></p>

<p>(or <code>-=</code> if you want to take away)</p>
"
3658243,"<p>Use Double.MIN_VALUE. </p>

<p>The javadoc for it:</p>

<p><code>A constant holding the smallest positive nonzero value of type double, 2-1074. It is equal to the hexadecimal floating-point literal 0x0.0000000000001P-1022 and also equal to Double.longBitsToDouble(0x1L).</code></p>
"
3694204,"<p>I can't  cite a reference, but by design the <code>List</code> and <code>Set</code> implementations of the <code>Collection</code> interface are basically extendable <code>Array</code>s. As <code>Collections</code> by default offer methods to dynamically <em>add</em> and <em>remove</em> elements at any point -- which <code>Array</code>s don't -- insertion order might not be preserved. 
Thus, as there are more methods for content manipulation, there is a need for special implementations that do preserve order.</p>

<p>Another point is performance, as the most well performing <code>Collection</code> might not be that, which preserves its insertion order. I'm however not sure, how exactly <code>Collections</code> manage their content for performance increases.</p>

<p>So, in short, the two major reasons I can think of why there are order-preserving <code>Collection</code> implementations are:</p>

<ol>
<li>Class architecture</li>
<li>Performance</li>
</ol>
"
3788486,"<p>Here is another way to solve the problem:</p>

<pre><code>/**
 * Last item of haystack can be minimum integer (Integer.MIN_VALUE) 
 * to check later whether a match was found or not
 */
public static int siz(int needle,int haystack[],int pos){
  return (needle&gt;haystack[pos])? ++pos: siz(needle,haystack,++pos);
}
</code></pre>

<p>Example usage:</p>

<pre><code>int arr[] = {145,117,68,51,22,10,Integer.MIN_VALUE};
int size = siz(118,arr,0);

//Check if the item was found
if(arr.length!=size){
  //success
}else{
  //handle error
}
</code></pre>
"
3791181,"<p>I don't know about in Java, but in C++ (although yes this test would be silly to do at the start of a function) later on it may make sense as it is possible that an object can delete itself halfway through its own code and then continue running that code. For example, the following compiles with no errors under gcc 3.4.4 but if run will crash with a NULL access error due to 'this' becoming a NULL pointer.</p>

<pre><code>void foo::bar()
{
    delete this;
    this-&gt;some_function();
}
</code></pre>
"
4149553,"<p>The simplest way is:</p>

<pre><code>String someNum = ""123000"";
System.out.println(someNum);
</code></pre>
"
4155336,"<pre><code>Type genericType = lst.getType();

if(genericType instanceof ParameterizedType){
    ParameterizedType aType = (ParameterizedType) genericType;
    Type[] fieldArgTypes = aType.getActualTypeArguments();
    for(Type fieldArgType : fieldArgTypes){
        Class fieldArgClass = (Class) fieldArgType;
        System.out.println(""fieldArgClass = "" + fieldArgClass);
    }
}
</code></pre>
"
4196253,"<p>Here's what you can do for say yyyy-mm-dd comparison:</p>

<pre><code>GregorianCalendar gc= new GregorianCalendar();
gc.setTimeInMillis(System.currentTimeMillis());
gc.roll(GregorianCalendar.DAY_OF_MONTH, true);

Date d1 = new Date();
Date d2 = gc.getTime();

SimpleDateFormat sf= new SimpleDateFormat(""yyyy-MM-dd"");

if(sf.format(d2).hashCode() &lt; sf.format(d1).hashCode())
{
    System.out.println(""date 2 is less than date 1"");
}
else
{
    System.out.println(""date 2 is equal or greater than date 1"");
}
</code></pre>
"
4225827,"<p>If you want to access an application on the same server instance, just omit the server part of the URL. Some examples what you can achieve. The current document is at <code>http://example.com:8080/app2/doc.html</code></p>

<ul>
<li><code>xxx.html</code> becomes <code>http://example.com:8080/app2/xxx.html</code></li>
<li><code>../xxx.html</code> becomes <code>http://example.com:8080/xxx.html</code></li>
<li><code>../xxx.html</code> becomes <code>http://example.com:8080/xxx.html</code></li>
<li><code>../foo/xxx.html</code> becomes <code>http://example.com:8080/foo/xxx.html</code></li>
<li><code>../../xxx.html</code> becomes <code>http://example.com:8080/xxx.html</code> (there is no way to go beyond the root)</li>
<li><code>/xxx.html</code> becomes <code>http://example.com:8080/xxx.html</code> <strong>This is probably what you look for.</strong></li>
<li><code>//other.com/xxx.html</code> becomes <code>http://example.com:8080/xxx.html</code> Useful if you want to keep ""https:""</li>
</ul>
"
4291337,"<p>You are always passing an array <em>by reference</em> in java. The only objects not passed by reference (but passed by value) are the primitives, <code>int, long, boolean, double, float</code> etc. Everything else is an object and passed by reference. So your code will work fine.</p>

<p><strong>Edit:</strong> I humbly admit my foolish mistake. You are always passing <em>by value</em> in java. But objects are always passed with <em>reference as value</em>.</p>
"
4441123,"<pre><code>int theArray[] = new int[20];
System.out.println(theArray.length);
</code></pre>
"
4448934,"<p>It's faster to create a method for this rather than using regular expression</p>

<pre><code>/**
 * This method takes String as parameter
 * and checks if it is null or empty.
 * 
 * @param value - The value that will get checked. 
 * Returns the value of """".equals(value). 
 * This is also trimmed, so that ""     "" returns true
 * @return - true if object is null or empty
 */
public static boolean empty(String value) {
    if(value == null)
        return true;

    return """".equals(value.trim());
}
</code></pre>
"
4609540,"<pre><code>Button button = new Button(this);
Button = (Button) findViewById(R.id.button01);
</code></pre>

<p>Use <code>Button.setHeight()</code> or <code>Button.setWeight()</code> and set a value.</p>
"
4671260,"<pre><code>for(int aValue : aList) {
    if (aValue != aList.Count - 1)
    {
          tmpString += aValue + "","";
    }
    else
    {
          tmpString += aValue + "")"";
    }
}
</code></pre>

<p>Perhaps?</p>
"
4745447,"<p>No my friend</p>

<pre><code>    Jsp and Php Are two different thigs 
</code></pre>

<p>for creating webapplication sercurea and not accessable from out side world 
we have to put our jsp in </p>

<p>TOMCAT/PROJECT/WEB-INF/JSP</p>

<p>here WEB-INF<br>
and MATA-INF 
folder is protect by defaluts so if you want to open your application
like</p>

<p><a href=""http://localhost:8080/PROJECT/one.jsp"" rel=""nofollow"">http://localhost:8080/PROJECT/one.jsp</a>
then it will give you 404 error</p>

<p>so you need controller servlet to run your Jsp file
So It different Then writing php application and diployment </p>
"
4895267,"<p>(The question in its current form is a little confusing - my answer is assuming that the question is about finding two numbers in an array that sum to a given value)</p>

<p>Since the given array is unsorted, I am assuming that we are not allowed to sort the array (i.e. the given order of the array cannot be changed).</p>

<p>The simplest solution IMHO is to iterate over each number <code>x</code> and check if <code>I-x</code> occurs anywhere in the arrays. This is essentially what your O(n^2) solution is doing.</p>

<p>This can be brought down to O(n) or O(nlogn) by making the search faster using some sort of fast set data structure. Basically, as we iterate over the array, we query to see if <code>I-x</code> occurs in the set. </p>

<p>Code (in Python):</p>

<pre><code>l=[1,2,3,4,5,6,7,8,9]
seen=set()

I=11
for item in l:
        if I-item in seen:
                print ""(%d,%d)""%(item,I-item)
        seen.add(item)
</code></pre>

<p>The complexity of the solution depends on the insert/lookup complexity of the <code>set</code> data structure that you use. A hashtable based implementation has a O(1) complexity so it gives you a O(n) algorithm, while a tree based <code>set</code> results in a O(nlogn) algorithm.</p>

<p>Edit:</p>

<p>The equivalent data structure to Python's <code>set</code> would be <code>stl::set</code> in C++ and <code>TreeSet</code>/<code>HashSet</code> in Java. The line <code>I-x in seen</code> would translate to <code>seen.contains(I-x)</code> in Java and <code>seen.find(I-x)==seen.end()</code> in C++.</p>
"
4951336,"<p>I think nanda was the correct answer.</p>

<pre><code>List&lt;T&gt; toRemove = new LinkedList&lt;T&gt;();
for (T t : masterList) {
  if (t.shouldRemove()) {
    toRemove.add(t);
  }
}

masterList.removeAll(toRemove);
</code></pre>
"
5009987,"<p>This may be not optimal, but relatively easy ;)</p>

<pre><code>String testString = ""Hello World."";

testString = testString.replace('o', '\u0001');
testString = testString.replace('e', 'o');
testString = testString.replace('\u0001', 'e');
</code></pre>

<p>The idea is to take a character that you are sure is not used in string and use it as temporary replace.</p>
"
5065184,"<p><strong>EDITED:</strong>
Because contents is mixed:</p>

<pre><code>private void setSomething(final List someListOfObjects)
{
   for(Object n : someListOfObjects){
     if(n instanceof Double) {}
     else if(n instanceof Long) {}
     ...
   }
}
</code></pre>
"
5134587,"<p>You can't ""convert"" a 1D array to a 2D array, but an array can be multi-dimensionnal when you declare it.</p>

<pre><code>int myArray2d[][] = new int[10][3]
</code></pre>
"
5284286,"<p>I think in Java your best shot is to get the <a href=""http://ss64.com/nt/tasklist.html"" rel=""nofollow"">tasklist</a> before and after spawning your child process. Make a diff and get your PID.</p>

<p>you can get the Tasklist by issuing a <code>Runtime.getRuntime.exec(""tasklist"");</code><br>
Notice that tasklist.exe is not included with Windows XP Home edition, but still you can download it.</p>
"
5304999,"<p>Here's what I would try (I have not tested this method):</p>

<pre><code>&lt;modifier&gt; Account(Object arg) {
    if (!super.getClass().isAssignableFrom(this.getClass())) {
        throw new AssertionError(""This constructor is only available to super classes."");
    } else {
        // Continue...
    }
}
</code></pre>
"
5359198,"<p>Here's a class that extract data rows and columns from database.</p>

<p>Look at <strong>table = new JTable(rows(), columns());</strong></p>

<pre><code>import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.print.PrinterException;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import com.swtdesigner.SwingResourceManager;
import java.util.*;
import java.sql.*;
import javax.swing.*;
public class listing extends JDialog {


private JTable table;
public static Vector rows() {

    Vector data = new Vector();
    String sql= null;
    Connection C;


        try {

            DriverManager.registerDriver(new oracle.jdbc.OracleDriver());
            C = (Connection) DriverManager.getConnection(""jdbc:oracle:thin:@localhost:1521:XE"",
                    ""system"", ""manager"");

            Statement stmt = C.createStatement();
            ResultSet rset = stmt.executeQuery(""SELECT * FROM site "");
            ResultSetMetaData md = rset.getMetaData();
            int columns = md.getColumnCount();



            while (rset.next()) {
                Vector row = new Vector(columns);

                for (int i = 1; i &lt;= columns; i++) {
                    row.addElement(rset.getObject(i));
                }

                data.addElement(row);

            }

            rset.close();
            stmt.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
            System.out.println(e.getStackTrace());
        }

        //System.out.println(""lignes :  ""+data);
        return data;
}


   public static Vector columns()
    {   Connection c ;
        Vector cols = new Vector ();
        String sql2=null;
        try { 
            DriverManager.registerDriver(new oracle.jdbc.OracleDriver());
            c = DriverManager.getConnection(""jdbc:oracle:thin:@localhost:1521:XE"",
                    ""system"", ""manager"");

            sql2 = ""select * from SITE"";

            Statement stmt = c.createStatement();
            ResultSet rs = stmt.executeQuery(sql2);
            ResultSetMetaData md = rs.getMetaData();
            int columns = md.getColumnCount();

              //récupération des noms des colonnes dans la table site

            for (int i = 1; i &lt;= columns; i++) {
            cols.addElement(md.getColumnName(i));
            }
           } catch (Exception e) {
            System.out.println(e.getMessage());
            System.out.println(e.getStackTrace());
        }
        //System.out.println(""colonnes ::: ""+cols);
        return cols;
    }

public static void main(String args[]) {
    try {
        listing dialog = new listing();
        dialog.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                System.exit(0);
            }
        });
        dialog.setVisible(true);
    } catch (Exception e) {
        e.printStackTrace();
    }
}


public listing() {
    super();
    getContentPane().setLayout(null);
    setTitle(""Listing de la table \""SITE\"""");
    setBounds(100, 100, 500, 363);
    setResizable(false);

    final JLabel laTablesiteLabel = new JLabel();
    laTablesiteLabel.setText(""La table \""SITE\"" contient . . . "");
    laTablesiteLabel.setBounds(10, 34, 274, 16);
    getContentPane().add(laTablesiteLabel);

    final JLabel label = new JLabel();
    label.setIcon(SwingResourceManager.getIcon(listing.class, ""/pictures/130.png""));
    label.setBounds(402, 18, 49, 48);
    getContentPane().add(label);

    final JButton okButton = new JButton();
    okButton.addActionListener(new ActionListener() {
        public void actionPerformed(final ActionEvent arg0) {
            dispose();
            setVisible(false);
        }


    });
    okButton.setIcon(SwingResourceManager.getIcon(listing.class, ""/pictures/33-32x32.png""));
    okButton.setText(""Ok"");
    okButton.setBounds(10, 291, 148, 32);
    getContentPane().add(okButton);

    final JButton refeshButton_1 = new JButton();
    refeshButton_1.setIcon(SwingResourceManager.getIcon(listing.class, ""/pictures/48-32x32.png""));
    refeshButton_1.setText(""Actualiser"");
    refeshButton_1.setBounds(171, 291, 148, 32);
    getContentPane().add(refeshButton_1);

    final JScrollPane scrollPane = new JScrollPane();
    scrollPane.setBounds(10, 85, 474, 187);
    getContentPane().add(scrollPane);

    table = new JTable(rows(), columns()); // chargement de JTable 
    scrollPane.setViewportView(table);

    final JButton printButton_1_1 = new JButton();
    printButton_1_1.addActionListener(new ActionListener() {
        public void actionPerformed(final ActionEvent arg0) {
            try {
                table.print();
            } catch (PrinterException e) {

                e.printStackTrace();
            }
        }
    });
    printButton_1_1.setIcon(SwingResourceManager.getIcon(listing.class, ""/pictures/Printer_h.png""));
    printButton_1_1.setText(""Imprimer"");
    printButton_1_1.setBounds(336, 291, 148, 32);
    getContentPane().add(printButton_1_1);




    }

}
</code></pre>
"
5554779,"<p>Don't attempt to access a member of a data structure past the length of the data structure.</p>

<p>Example:</p>

<pre><code>final List&lt;String&gt; whatever = new ArrayList&lt;String&gt;();
whatever.add(""Yup"");
whatever.get(1); // OH NOES!
</code></pre>
"
5635805,"<p>For very rare cases it may be useful or necessary to implement <code>finalize</code> for freeing allocated resources. This method is always called when an instance is destroyed finally.</p>

<p>May be helpful if you work with native code and need to free allocated resources in the native code area.</p>

<p>But use it with care, because implementing <code>finally</code> will slow down the garbage collector dramatically and kill performance.</p>
"
5782715,"<p>You can wrap one block into another block:</p>

<pre><code>try{
  Connection c = ...
    try{
      statement = c.prepareStatement(...);
      try{
        rs = statement.execute(...);
      }finally{
        rs.close();
      }
    }finally{
      statement.close()
    }
  }finally{
    c.close();
  }
}catch(SQLException e){}
</code></pre>

<p>Use the lowermost catch-block for everything that might crop up</p>
"
6162656,"<p>You can do that using the <code>SimpleDateFormat</code> class.</p>

<pre><code>SimpleDateFormat formatter=new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"");

String dates=formatter.format(mydate);
//mydate is your date object
</code></pre>
"
6213234,"<p>Try to parse the strings in int.</p>

<pre><code>Integer.parseInt(One).intValue() == Integer.parseInt(two).intValue()
</code></pre>

<p>I'm not sure what you're trying to do but my guess is that you'd better to use arrays.</p>
"
6213588,"<p>I think it's because interfaces can't be instantiated, so all variables are declared as <code>static</code>.
Use of the <code>final</code> keyword means it doesn't have a body.             </p>
"
6238287,"<p>If you are sure there is no side effect, simply use threading. Of course you can use threading when there IS side effect. But in that case you will need to use some locking and synchronization mechanisms.</p>

<p>A very simple thread sample from Bruce Eckel's excellent book, Thinking in Java:</p>

<pre><code>public class SimpleThread extends Thread {
  private int countDown = 5;
  private static int threadCount = 0;
  public SimpleThread() {
    super("""" + ++threadCount); // Store the thread name
    start();
  }
  public String toString() {
    return ""#"" + getName() + "": "" + countDown;
  }
  public void run() {
    while(true) {
      System.out.println(this);
      if(--countDown == 0) return;
    }
  }
  public static void main(String[] args) {
    for(int i = 0; i &lt; 5; i++)
      new SimpleThread();
  }
} ///:~
</code></pre>
"
6512073,"<p>No. Since ""String"" is not a primative type using == simply compares the address of the object and not the contents itself. By executing:</p>

<pre><code>String a = ""ABCD"";
String b = ""ABCD"";

if (a == b)
</code></pre>

<p>You would get false because although string a &amp; string b are the same their representations in memory are different. </p>

<p>The .equals() method is used to compare Strings (also, Objects) within Java as it compares the contents of the Object.</p>
"
6625710,"<p>The example above showing the import with ...sun.com/jsp/jstl/format is incorrect (meaning it didn't work for me).</p>

<p>Instead try the below -this import statement is valid</p>

<pre><code>&lt;%@ taglib uri=""http://java.sun.com/jstl/core"" prefix=""c"" %&gt;&lt;%@ taglib uri=""http://java.sun.com/jstl/core-rt"" prefix=""c-rt"" %&gt;&lt;%@ taglib uri=""http://java.sun.com/jstl/fmt"" prefix=""fmt"" %&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Format Date&lt;/title&gt;
  &lt;/head&gt;

  &lt;body&gt;
    &lt;c-rt:set var=""now"" value=""&lt;%=new java.util.Date()%&gt;"" /&gt;

    &lt;table border=""1"" cellpadding=""0"" cellspacing=""0""
    style=""border-collapse: collapse"" bordercolor=""#111111""
    width=""63%"" id=""AutoNumber2""&gt;
      &lt;tr&gt;
        &lt;td width=""100%"" colspan=""2"" bgcolor=""#0000FF""&gt;
          &lt;p align=""center""&gt;
            &lt;b&gt;
              &lt;font color=""#FFFFFF"" size=""4""&gt;Formatting: 
              &lt;fmt:formatDate value=""${now}"" type=""both""
              timeStyle=""long"" dateStyle=""long"" /&gt;
              &lt;/font&gt;
            &lt;/b&gt;
          &lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
</code></pre>
"
6737667,"<p>First of all, why not just let your unit tests touch the file system? Usually, reading small local test-specific files in a few tests adds no perceptible delay to the test run.</p>

<p>But if you really don't want to touch the file system, then simply mock it. For example, the following <a href=""http://code.google.com/p/jmockit"" rel=""nofollow"">JMockit</a>-based test should work:</p>

<pre><code>@Test
public void someTest()
{
    new Expectations() {
        @Mocked Files files;
        @Input  List&lt;String&gt; lines = asList(""Line 1"", ""Another line"", ""..."");
    };

    // Called from code under test:
    List&lt;String&gt; lines = Files.readLines(someFile, charSet);
    // These ""lines"" will be the same as the ""@Input"" lines.

    // asserts...
}
</code></pre>
"
2216884,"<p>The above advices should do the job, but I would recommend you to use:</p>

<pre><code>public String translate(boolean trueOrFalse)
{
    return String.valueOf(trueOrFalse);
}
</code></pre>

<p>because later you can easily convert that back:</p>

<pre><code>public boolean translateBack(String translation)
{
    return Boolean.parseBoolean(translation);
}
</code></pre>

<p>but the translation string will be ""true"" of ""false"" :)</p>
"
2216909,"<pre><code>String yesNo(boolean b) {
    String[] s = {""yes"", ""no""};
    return b ? s[0] : s[1];
}
</code></pre>

<p>EDITED with correct return</p>
"
2236652,"<p>Strings are immutable, so actully you can't change the String afterwards (you can only make the variable that held the String object point to a different String object).</p>

<p>However, that is not the reason why you can bind any variable to a <code>final</code> parameter. All the compiler checks is that the parameter is not reassigned <em>within</em> the method. This is good for documentation purposes, arguably good style, and may even help optimize the byte code for speed (although this seems not to do very much in practice). </p>

<p>But even if you do reassign a parameter within a method, the caller doesn't notice that, because java does all parameter passing by value. After the sequence</p>

<pre><code>  a = someObject();
  process(a);
</code></pre>

<p>the fields of a may have changed, but a is still the same object it was before. In pass-by-reference languages this may not be true.</p>
"
2243491,"<p>You can define a static block in the class</p>

<pre><code>class X {
 static {
  System.out.println(""class X has been loaded"");
 }
 ...
}
</code></pre>

<p>that will be called once when the class object is loaded.</p>

<p>If you cannot edit the code, and you have a JRE 6, you might try the <a href=""http://java.sun.com/javase/6/docs/technotes/tools/share/jmap.html"" rel=""nofollow"">jmap</a> tool</p>

<pre><code>jmap -histo &lt;pid&gt;
</code></pre>

<p>it will print a histogram of your heap, including all loaded classes.</p>

<p>Using <code>jps</code> you can find out the pid </p>
"
2295999,"<p><code>null</code>, <code>true</code> and <code>false</code>. They are arguably keywords, but when you get down to it, they're constants evaluating to 0x00, 0x01 and 0x00 respectively.</p>
"
2296168,"<p>Why not just change your code to get a doubles decimal places?</p>

<pre><code>public static int getNumberOfDecimalPlace(double value) {
    //For whole numbers like 0
    if (Math.round(value) == value) return 0;
    final String s = Double.toString(value);
    System.out.println(s);
    final int index = s.indexOf('.');
    if (index &lt; 0) {
       return 0;
    }
    return s.length() - 1 - index;
}
</code></pre>
"
2296457,"<p>Michael Borgwardt answer is the correct one. As soon as you use any double or float, your values are already corrupted.</p>

<p>To provide a code example:</p>

<pre><code>System.out.println(""0 = "" + BigDecimalUtil.getNumberOfDecimalPlace(""0"")); // 0
System.out.println(""1.0 = "" + BigDecimalUtil.getNumberOfDecimalPlace(""1.0"")); // 0
System.out.println(""1.01 = "" + BigDecimalUtil.getNumberOfDecimalPlace(new BigDecimal(""1.01""))); // 2
System.out.println(""1.012 = "" + BigDecimalUtil.getNumberOfDecimalPlace(new BigDecimal(""1.012""))); // 3
System.out.println(""0.01 = "" + BigDecimalUtil.getNumberOfDecimalPlace(""0.01"")); // 2
System.out.println(""0.012 = "" + BigDecimalUtil.getNumberOfDecimalPlace(""0.012"")); // 3
System.out.println(""0.00000000000000000012 = "" + BigDecimalUtil.getNumberOfDecimalPlace(""0.00000000000000000012"")); // 20
</code></pre>

<p>And an overloaded version of getNumberOfDecimalPlace so you could use it with BigDecimal or String:</p>

<pre><code>public static int getNumberOfDecimalPlace(String value) {
    final int index = value.indexOf('.');
    if (index &lt; 0) {
        return 0;
    }
    return value.length() - 1 - index;
}

public static int getNumberOfDecimalPlace(BigDecimal value) {
    return getNumberOfDecimalPlace(value.toPlainString());
}
</code></pre>
"
7093352,"<p>C++ is old and it's built upon C, which is even older. In C++, a class is really a C-style <code>struct</code> with a pointer to a vtable, containing pointers to the starting address of each function in the class.</p>

<p>What you put in your header file is the definition of the class, ie the struct. What you put in our implementation are the function to which the vtable will point. This is why you need to include the definition (the ""header"") of a class in another file to be able to use it. This is also why you normally put the definition of a class in a separate file (.hpp). You strictly don't have to, but it would be difficult to use that class in other classes if you don't. But you could as well put all your code in just one, big text-file.</p>

<p>The C++ compiler will process each file independently, expanding all #include macros to include their definitions in each .cpp file. It will also translate all function-calls to the vtable notation, ie</p>

<p>someInstance->someMethod() becomes (someInstance->VTABLE[0]), assuming someMethod() is the first one declared in the definition of someIntance's class.</p>

<p>The compiler then creates the object files (so called translation units) and lays the resulting maching code of all the functions implemented in all .cpp files in a memory layout, with relocation tables for all pointers in all vtables. The linker later replaces resolves the symbols in the relocation table to the actual memory address of the functions.</p>

<p>Long story short, C++ looks the way it does for legacy purposes (and the fact the C is not object oriented). Java is object oriented from the get go, meaning that interfaces are something you MAY use, as opposed to C++ where class definitions is something you MUST have (struct and vtable, remember) and something you MUST include, one way or another, in every .cpp file where you want to use that class.</p>
"
2314147,"<p>As per you comments. </p>

<p>Call <code>start</code> not <code>run</code> as mmyers points, using the former is the correct. </p>

<p>So it should be:</p>

<pre><code>Thread t = new Thread( this.table ); // or new Thread( this )

t.start(); // call start on the read 
</code></pre>

<p>and not </p>

<pre><code>this.table.run();
</code></pre>

<p>or </p>

<pre><code>t.run();
</code></pre>
"
7192642,"<p>Taking a slightly different tack, once you have identified the correct area of memory to overwrite, you might want to do it more than once:</p>

<pre><code>zerorize(SecretKey key)
{
    byte[] rawKey = key.getEncoded();
    Arrays.fill(rawKey, (byte) 0xFF);
    Arrays.fill(rawKey, (byte) 0xAA);
    Arrays.fill(rawKey, (byte) 0x55);
    Arrays.fill(rawKey, (byte) 0x00);
}
</code></pre>
"
2377510,"<p>You can use <a href=""http://commons.apache.org/lang/api-release/org/apache/commons/lang/text/StrTokenizer.html"" rel=""nofollow"">Strtokenizer</a> from Commons Lang and specify multiple delimiters to split on:</p>

<p>There are a number of built in types that is supports via <a href=""http://commons.apache.org/lang/api-release/org/apache/commons/lang/text/StrMatcher.html"" rel=""nofollow"">StrMatcher</a>.</p>

<pre><code>StrTokenizer(char[] input, StrMatcher delim) 
</code></pre>

<p>e.g. </p>

<pre><code>StrMatcher delims = StrMatcher.charSetMatcher(new char[] {' ', ',', '\n'});
StrTokenizer str = new StrTokenizer(match.toString(), delims);
while (str.hasNext()) {
    System.out.println(""Token:["" + str.nextToken() + ""]"");
}
</code></pre>

<p>will give (from the example above):</p>

<pre><code>Token:[3/3/2010]
Token:[11:00:46]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:04:04]
Token:[AM]
Token:[2]
Token:[YaserAlNaqeb]
Token:[BASEMENT-OUT]
Token:[3/3/2010]
Token:[11:04:06]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:04:18]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:14:32]
Token:[AM]
Token:[4]
Token:[Dhileep]
Token:[BASEMENT-OUT]
Token:[3/3/2010]
Token:[11:14:34]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:14:41]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:15:33]
Token:[AM]
Token:[4]
Token:[Dhileep]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:15:42]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:15:42]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:30:22]
Token:[AM]
Token:[34]
Token:[KumarRaju]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:31:28]
Token:[AM]
Token:[39]
Token:[Eldrin]
Token:[BASEMENT-OUT]
Token:[3/3/2010]
Token:[11:31:31]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:31:39]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:32:38]
Token:[AM]
Token:[39]
Token:[Eldrin]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:32:47]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:32:47]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:33:26]
Token:[AM]
Token:[34]
Token:[KumarRaju]
Token:[BASEMENT-OUT]
Token:[3/3/2010]
Token:[11:33:28]
Token:[AM]
Token:[BASEMENT-IN]
</code></pre>
"
2382247,"<p>The ternary operator has to return the same type from the ""then"" or ""else"" clause.  If you can deal with <code>Double</code> instead of <code>double</code>, then you could try</p>

<pre><code>Object o = (myValue != null ? someDouble : someString);
writeToCell(2, 4, o);
</code></pre>

<p>and change the <code>writeToCell</code> method to accept arguments <code>(int, int, Object)</code>.</p>
"
7259786,"<p>Don't live fanatically with the conventions that SUN have med up, do whats feel right to you and your team.</p>

<p><strike>
For example this is how eclipse do it, breaking the convention. Try adding <code>implements Serializable</code> and eclipse will ask to generate this line for you.</strike></p>

<p>Update: There were special cases that was excluded didn't know that. I however withholds to do what you and your team seems fit.</p>
"
2387228,"<pre><code>IF MENU == NULL THEN 
    MENU = POPUPMENU 
ELSE 
   MENU=MENU
</code></pre>
"
7415134,"<p>One way is to pass an output object to your method, for example in the form of an arraylist, so it will be something like: </p>

<pre><code>public static ArrayList&lt;String&gt; multipleReturnMethod(ArrayList&lt;String&gt; output) {

 String a = ""a"";
 String b = ""b"";

 output.add(a);
 output.add(b);
 return output; //not really necessary
}
</code></pre>

<p>Of course output has to be created outside your method.</p>
"
7428069,"<p>You can do:</p>

<pre><code>Client lock = yourClient;
synchronized (lock) {

}
</code></pre>

<p>Obtain the lock on the client same reference.</p>
"
7543075,"<pre><code>public class Node
{
     public int n;     // value
     public Node next; // pointer to next node
}

Node[] n = new Node[length];

for (int i=0; i&lt;n.length; i++)
{
    Node tmp = n[i];
    n[i] = n[i+1];
    n[i+1] = tmp;
    n[i+1].next = n[i].next; 
    n[i].next = tmp;
}
</code></pre>
"
2493755,"<p>Have you tried this ?</p>

<pre><code>// Test if both arrays are of the same type
if (array1.class.getComponentType.equals(array2.class.getComponentTYpe)) {
    // Polymorphism FTW !
    return Arrays.equals(array1, array2);
}
</code></pre>
"
7569656,"<p>From the JRE documentation: <a href=""http://download.oracle.com/javase/6/docs/api/java/lang/String.html#getChars%28int,%20int,%20char%5b%5d,%20int%29"" rel=""nofollow""><code>getChars</code></a></p>
"
2516785,"<p>Setting <code>stuff</code> to <code>null</code> is surely necessary, but it wouldn't be sufficient without forcing garbage collection. I suppose the <code>runExecutable</code> function would wait before the execution finishes, so I'd run <code>System.gc()</code> in a different thread so the garbage collection happened while waiting.</p>
"
2559825,"<p>RegEx should work, something like <code>([A-Z]{1})</code>. This will capture all Capital Letters, after that you could replace them with <code>\1</code> or how ever you can refer to RegEx Groups in Java.</p>
"
2579706,"<p>I don't think there is a out-of-the-box way to do it.</p>

<p>You could use an <strong>observer pattern</strong> that notifies the treeset whenever you change a value inside an element, then it removes and re-inserts it.</p>

<p>In this way you can implicitly keep the list sorted without caring of doing it by hand.. of course this approach will need to extend <code>TreeSet</code> by modifying the behaviour of insertion (setting the observed/notify mechanics on the just added item)</p>
"
7899535,"<pre><code>output = (condition1) ? ""Condition1 is true"" : ((condition2) ?
      ""Condition2 is true"" : ( (condition3) ? 
      ""Condition3 is true"" : "" all Condition are false""));
</code></pre>
"
2606546,"<p>You do have the ability to control object destruction in Java. It simply uses a different idiom:</p>

<pre><code>Connection conn = null;
try {
  conn = ...
  // do stuff
} finally {
  try { conn.close(); } catch (Exception e) { }
}
</code></pre>

<p>You could point out at this point that this isn't object destruction and that you could, for example, pass that object to something else and still have a reference to it. You are right on both counts. It is simply as close as Java (and most managed platforms) get.</p>

<p>But no Java does not, as you say, have a destructor mechanism as in C++. Some people mistake finalizers for this. They are <em>not</em> destructors and it is dangerous to use them as such.</p>

<p>Memory management for a programmer is hard. You can easily leak memory, particularly when doing multithreaded programming (also hard). Experience has shown that the cost of GC, while real and sometimes substantial, is well and truly justified in productivity increases and bug incidences in the vast majority of cases, which is why the vast majority of platforms now are ""managed"" (meaning they use garbage collection).</p>
"
2670483,"<pre><code>  public int[] reverse3(int[] nums) {
  int[] values = new int[nums.length];
  for(int i=0; i&lt;nums.length; i++) {
   values[nums.length  - (i + 1)]=nums[i];
  }
  return values;
  }
</code></pre>
"
2670521,"<p>In your code, for each value of i, you are setting target array elements at i to value in ""nums"" at j. That is how you end up with same value for all the elements at the end of all iterations.
First of all, very bad logic to have two loops for a simple swap algorithm such as :</p>

<pre><code>public static void reverse(int[] b) {
   int left  = 0;          // index of leftmost element
   int right = b.length-1; // index of rightmost element

   while (left &lt; right) {
      // exchange the left and right elements
      int temp = b[left]; 
      b[left]  = b[right]; 
      b[right] = temp;

      // move the bounds toward the center
      left++;
      right--;
   }
}//endmethod reverse
</code></pre>

<p>or simplified:</p>

<pre><code>for (int left=0, int right=b.length-1; left&lt;right; left++, right--) {
    // exchange the first and last
    int temp = b[left]; b[left]  = b[right]; b[right] = temp;
}
</code></pre>

<p>Why go through all this pain, why dont you trust Java's built-in APIs and do something like</p>

<pre><code>public static Object[] reverse(Object[] array)
{
List&lt;Object&gt; list = Arrays.asList(array);
Collections.reverse(list);
return list.toArray();
}
</code></pre>
"
8161100,"<p>You can not randomly print from multiple threads and expect <em>any</em> order. </p>

<p>If you need output in an ordered fashion then you're going to have to either synchronize the threads (thus defeating the purpose of having multiple threads) or have the threads pass back the information to output back to the main thread so it can handle ordering and outputting it.</p>

<p><strong>Edit:</strong> Because I'm bored.</p>

<p>If you're trying to parallelize some work via threads then output the results, you need to have the threads communicate the product of their work back to the main thread and have it do the output. One approach to this is to use queues (this is simple example that relies on the thread order - you may need to get all the results and correlate/sort/etc):</p>

<pre><code>public class Worker implements Runnable
{

    private ConcurrentLinkedQueue&lt;Integer&gt; outputQueue;

    public Worker(ConcurrentLinkedQueue&lt;Integer&gt; outputQueue)
    {
        this.outputQueue = outputQueue;
    }

    @Override
    public void run()
    {

       // Do whatever it is you're doing
       ...
       // place result on queue
       outputQueue.add(result);

    }

} 

public class Main
{

    static void main(String[] args)
    {

        ArrayList&lt;ConcurrentLinkedQueue&lt;Integer&gt;&gt; myQueues =
            new ArrayList&lt;ConcurrentLinkedQueue&lt;Integer&gt;&gt;();

        Thread[] myThreads = new Thread[numThreads];

        // Create queue, create thread with Worker(queue),  
        // start thread
        for (int i = 0; i &lt; numThreads; i++)
        {
            ConcurrentLinkedQueue&lt;Integer&gt; queue =
                new ConcurrentLinkedQueue&lt;Integer&gt;();

            myQueues.add(queue);           

            myThreads[i] = new Thread(new Worker(queue)).start();

        }

        // Wait for all threads to finish, print their results
        for (int i = 0; i &lt; numThreads; i++)
        {
            join(myThreads[i]);

            // Get the queue for the thread we just joined, 
            // pull off each result and output
            Integer j;
            while ((j = myQueues.get(i).poll()) != null)
            {
                System.out.println(j);
            }

        }
    }
}
</code></pre>

<p>This is off the top of my head, but that's the general approach</p>
"
8163479,"<p>You can maintain a list of acceptable Mime Types and then get Mime Type of file you are reading. If it matches good to go.</p>

<pre><code>import javax.activation.MimetypesFileTypeMap;
import java.io.File;

class GetMimeType {
  public static void main(String args[]) {
    File f = new File(""gumby.gif"");
    System.out.println(""Mime Type of "" + f.getName() + "" is "" +
                         new MimetypesFileTypeMap().getContentType(f));
    // expected output :
    // ""Mime Type of gumby.gif is image/gif""
  }
}
</code></pre>

<p><a href=""http://www.rgagnon.com/javadetails/java-0487.html"" rel=""nofollow"">http://www.rgagnon.com/javadetails/java-0487.html</a></p>
"
2717218,"<p>I think this should work... untested off the top of my head.</p>

<pre><code>public void printTriangle(int count)
{    
    if (count == 0) return;
    printTriangle(count - 1);
    for (int x = 1; x &lt;= count; x++) { 
        System.out.print(""*""); 
    }
    System.out.print(""\n""); 
}
</code></pre>
"
2717249,"<p>So, you need to create a small block. What information does that block need? Just the maximum. But the recursion needs to know what line its on... you end up with a constructor like:</p>

<pre><code>public void printTriangle (int current, int max)
</code></pre>

<p>Now, use that to put the rest of the recursion together:</p>

<pre><code>public void printTriangle (int current, int max)
{ 
    if (current &lt;= max) 
    { 
         // Draw the line of stars...
         for (int x=0; x&lt;current; x++)
         {
             System.out.print(""*"")
         }
         // add a newline
         System.out.print(""\n""); 

         // Do it again for the next line, but make it 1-bigger
         printTriangle(current + 1, max);
    } 
} 
</code></pre>

<p>Now, all you have to do, is initiate it:</p>

<pre><code>printTriangle(1, 5);
</code></pre>
"
8373803,"<p>If the <code>return</code> inside <code>if</code> and <code>for</code> are not executed we still need to return a value. So a <code>return</code> statement is required.</p>

<p>Looking at the code we see that either the return in the <code>if</code> or the <code>for</code> will be hit, but this cannot be inferred by the compiler.</p>
"
2777909,"<p>Lets use an example:</p>

<pre><code>int guess = 20;
int min = guess - 5 = 15;
int max = guess + 5 = 25;
</code></pre>

<p>therefore</p>

<pre><code>min &lt; guess &lt; max
</code></pre>

<p>Why?</p>

<p>Because you're comparing guess to its self! I think you need to have the actual answer, not the guess</p>
"
2777922,"<p>I can't put the full thing in a comment, so here's what your code should be:</p>

<pre><code>    public static void giveHint (int guess, int actual) {
    int min = actual - 5;
    int max = actual + 5;
    if ((guess &gt; min) &amp;&amp; (guess &lt; max)) {
        System.out.println(""Hot.."");
    } else {
        System.out.println(""Cold.."");
    }
</code></pre>
"
2806144,"<p>You could also use singleton design pattern:</p>

<pre><code>public interface SingletonFactoryFunctor {
   /**
    * @return An instance of the Singleton.
    */
   public Singleton makeInstance();
}
</code></pre>
"
8545663,"<p>Like this:</p>

<pre><code>public class TestCountArray {

    public static Map&lt;Integer, Integer&gt; countElementOcurrences(int[] array) {

        Map&lt;Integer, Integer&gt; countMap = new HashMap&lt;Integer, Integer&gt;();

        for (int element : array) {
            Integer count = countMap.get(element);
            count = (count == null) ? 1 : count + 1;
            countMap.put(element, count);
        }

        return countMap;
    }

    public static Integer mostOcurrencesElement(int[] array) {
        Map&lt;Integer, Integer&gt; countMap = countElementOcurrences(array);

        int maxCount = 0;
        Integer element = null;
        for (Integer e : countMap.keySet()) {
            if (countMap.get(e) &gt; maxCount) {
                element = e;
                maxCount = countMap.get(e);
            }
        }

        return element;

    }

    public static void main(String[] args) {

        int[] a = new int[] {1,2,3,4,5,6,7,7,7,7}; 

        System.out.println (mostOcurrencesElement(a));

    }

}
</code></pre>
"
2867413,"<p>Here is my Code:</p>

<pre><code>public void setPartner(Person partner) {
    if (this.partner != null)
       this.partner.partner = null;
    this.partner = partner;
    if (partner.partner != null)
       partner.partner.partner = null;
    partner.partner = this;
}
</code></pre>
"
8712151,"<p>Maybe you could try specifying an index of the form</p>

<pre><code>        ""Foobar"".startsWith(""bar"", 3) 
</code></pre>

<p>which returns true. After checking your typos of course.</p>
"
8714011,"<p>No both are not Equals.</p>

<pre><code>list [abc,null]
</code></pre>

<p>Another list stored</p>

<pre><code>list [abc]
</code></pre>

<p>so both are not equal</p>
"
8726530,"<p>Ofcourse this is possible, You can simply use file io features of Java, following steps are required:-</p>

<ol>
<li>Create a File Object
2.Create an object of FileInputStream (though there are ways which use other Classes)</li>
<li>Wrap this object in a Buffer object or  simply inside a <code>java.util.Scanner</code>.</li>
<li>use specific write functions of the object created in previous step.</li>
</ol>

<p>Note that your object must implement <code>Serializable</code> interface. <a href=""http://www.mkyong.com/java/how-to-write-an-object-to-file-in-java/"" rel=""nofollow"">See following link</a>, </p>
"
10373712,"<pre><code>public class OccurenceOfWords {
 public static void main(String args[]){    
   String file = ""c:\\customer1.txt"";
   TreeMap &lt;String ,Integer&gt; index = new TreeMap();

    String []list = null;
      try(    FileReader fr = new FileReader(file);//using arm jdk 7.0 feature
                BufferedReader br = new BufferedReader(fr))
        {
            String line = br.readLine();
            while(line!= null){
                list = line.split(""[ \n\t\r:;',.(){}]"");
                for(int i = 0 ; i &lt; list.length;i++)
                {
                  String word = list[i].toLowerCase();  
                    if(word.length() != 0)
                    {
                        if(index.get(word)== null)
                        { index.put(word,1);
                         }
                        else    
                        {
                            int occur = index.get(word).intValue();
                            occur++;
                            index.put(word, occur);
                        }
                        line = br.readLine();
                    }  
                }
         }}
                         catch(Exception ex){
                       System.out.println(ex.getMessage());
                       }
                    for(String item : index.keySet()){
                        int repeats = index.get(item).intValue();
                       System.out.printf(""\n%10s\t%d"",item,repeats);
                 }   
             }               
  }
</code></pre>
"
10925597,"<p>The following code shows that it is possible:  </p>

<pre><code>class OverridenStaticMeth {   

static void printValue() {   
System.out.println(""Overriden Meth"");   
}   

}   

public class OverrideStaticMeth extends OverridenStaticMeth {   

static void printValue() {   
System.out.println(""Overriding Meth"");   
}   

public static void main(String[] args) {   
OverridenStaticMeth osm = new OverrideStaticMeth();   
osm.printValue();   

System.out.println(""now, from main"");
printValue();

}   

} 
</code></pre>
"
11227109,"<p>Reason : ""Don't know why there is no descendingIterator with ArrayList...""</p>

<p>Since array list doesnot keep the list in the same order as data has been added to list. So, never use Arraylist .</p>

<p>Linked list will keep the data in same order of ADD to list.</p>

<p>So , above in my example, i used ArrayList() in order to make user to twist their mind and make them to workout something from their side.</p>

<p>Instead of this</p>

<pre><code>List&lt;String&gt; list = new ArrayList&lt;String&gt;();
</code></pre>

<p>USE:</p>

<pre><code>List&lt;String&gt; list = new LinkedList&lt;String&gt;();

list.add(""ravi"");

list.add(""kant"");

list.add(""soni"");

// Iterate to disply : result will be as ---     ravi kant soni

for (String name : list) {
  ...
}

//Now call this method

Collections.reverse(list);

// iterate and print index wise : result will be as ---     soni kant ravi

for (String name : list) {
  ...
}
</code></pre>
"
11325546,"<p>You can use <code>str = str.replace(""X"", """");</code> as mentioned before and you will be fine. For your information <code>''</code> is not an empty (or a valid) character but <code>'\0'</code> is. </p>

<p>So you could use <code>str = str.replace('X', '\0');</code> instead.</p>
"
3251989,"<p><a href=""http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/lang/Class.html#forName%28java.lang.String%29"" rel=""nofollow"">Class.forName(String name)</a></p>

<blockquote>
  <p><em>Returns the Class object associated with the class [...] the given string name</em></p>
</blockquote>

<p>That means, that, it would return ( or attempt ) to return the class <code>com.mysql.jdbc.Driver</code> </p>

<p>Later <a href=""http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/lang/Class.html#newInstance%28%29"" rel=""nofollow"">Class.newInstace()</a></p>

<blockquote>
  <p><em>Creates a new instance of the class represented by this [...] object</em></p>
</blockquote>

<p>So, what that line does, is to create dynamically a  mysql Driver instance.</p>

<p>This:</p>

<pre><code>Class.forName (""com.mysql.jdbc.Driver"").newInstance ();
</code></pre>

<p>Would be equivalent to: </p>

<pre><code>import java.sql.Driver;
.... 
Driver driver = new com.mysql.jdbc.Driver()
</code></pre>

<p>By the way according to <a href=""http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/sql/DriverManager.html"" rel=""nofollow"">DriverManager</a>  doc, you don't have to use it anymore:</p>

<blockquote>
  <p><em>Applications no longer need to explictly load JDBC drivers using Class.forName()</em></p>
</blockquote>

<p>It use to be needed to load the driver, but now the DriverManager uses other strategy. </p>

<p>Finally, read the:</p>

<blockquote>
  <p><em><strong>NOTE:</strong> The DataSource interface, new in the JDBC 2.0 API, provides another way to connect to a data source. The use of a DataSource object is the preferred means of connecting to a data source.</em> </p>
</blockquote>
"
11883746,"<p>use character-set ""<code>ISO-8859-1</code>"" for URLEncoder</p>
"
12543988,"<p>You can make use of the following code. To add JTable to JPanel.</p>

<pre><code>JPanel panel = new JPanel();
this.setContentPane(panel);
panel.setLayout(null);
String data[][] = {{""1."", ""ABC""}, {""2."", ""DEF""}, {""3."", ""GHI"" }};
String col[] = {""Sr. No"", ""Name""};
JTable table = new JTable(data,col);
table.setBounds(100, 100, 100, 80);
panel.add(table);
setVisible(true);
setSize(300,300);
</code></pre>
"
3340643,"<p>Placement of <code>try-catch-finally</code> does <em>not</em> affect the performance in any way you should worry about. However, it <em>does affect the control flow</em> and what you would want to/can do in <code>try</code> and <code>finally</code> blocks.</p>
"
3346790,"<p>If <code>foo()</code> doesn't have anything to do with Object <code>A</code> then why is the method in there? </p>

<p>Static methods should still be relevant. If there isn't anything going on then why have you written a method that has no association with it?</p>
"
13370775,"<p>Abandoning streams will cause idle TCP connections. The response stream should be read completely. Another thing I overlooked initially, and have seen overlooked in most answers on this topic is forgetting to deal with the error stream in case of exceptions. Code similar to this fixed one of my apps that wasn't releasing resources properly:</p>

<pre><code>HttpURLConnection connection = (HttpURLConnection)new URL(uri).openConnection();
InputStream stream = null;
BufferedReader reader = null;
try {
        stream = connection.getInputStream();
        reader = new BufferedReader(new InputStreamReader(stream, Charset.forName(""UTF-8"")));

        // do work on part of the input stream

} catch (IOException e) {

    // read the error stream
    InputStream es = connection.getErrorStream();
    if (es != null) {
        BufferedReader esReader = null;
        esReader = new BufferedReader(new InputStreamReader(es, Charset.forName(""UTF-8"")));
        while (esReader.ready() &amp;&amp; esReader.readLine() != null) {
        }
        if (esReader != null)
            esReader.close();
    }

    // do something with the IOException
} finally {

    // finish reading the input stream if it was not read completely in the try block, then close
    if (reader != null) {
        while (reader.readLine() != null) {
        }
        reader.close();
    }

    // Not sure if this is necessary, closing the buffered reader may close the input stream?
    if (stream != null) {
        stream.close();
    }

    // disconnect
    if (connection != null) {
        connection.disconnect();
    }
}
</code></pre>

<p>The buffered reader isn't strictly necessary, I chose it because my use case required reading one line at a time.</p>

<p>See also: <a href=""http://docs.oracle.com/javase/1.5.0/docs/guide/net/http-keepalive.html"" rel=""nofollow"">http://docs.oracle.com/javase/1.5.0/docs/guide/net/http-keepalive.html</a></p>
"
13478017,"<pre><code>            if (v &lt;= 10)
                return size;
            else {
                size = 1;

                if (v &gt; 145)
                    return size;
                else if (v &gt; 117)
                    return ++size;
                else if (v &gt; 68)
                    return (size+2);
                else if (v &gt; 51)
                    return (size+3);
                else if (v &gt; 22)
                    return (size+4);
                else if (v &gt; 10)
                    return (size+5);
            }
</code></pre>

<p>This will execute the necessary if statements only.</p>
"
13637063,"<p>Yet another variation (less pronounced than the answer by <a href=""http://stackoverflow.com/a/3902142/544463"">George</a>)</p>

<pre><code>  //int v = 9;
  int[] arr = {145, 117, 68, 51, 22, 10};
  int size = 7; for(;7 - size &lt; arr.length &amp;&amp; v - arr[size - 2] &gt; 0; size--) {};
  return size;
</code></pre>
"
3396561,"<p>You could check for the whitespace like this:</p>

<pre><code>if (character.equals(' ')){ // }
</code></pre>
"
13665519,"<p>A single line can do the job I think. </p>

<pre><code>Math.pow(bigInt.doubleValue(), (1/n));
</code></pre>
"
3426684,"<p>Oops, read your question better:</p>

<p>You can init an array like so</p>

<pre><code>int[] arr = new int[] {UN, UN, UN, UN, UN};
</code></pre>

<p>But ofcourse, if you don't know the size at compile time, then you have to do the for loop. The second technique is not possible.</p>
"
3426691,"<pre><code>int arr[] = { 0, 0, 0, 0, 0 };
</code></pre>
"
14125113,"<p>I Hope this code can help others. Tested working fine. Thanks to above member to clarify it.</p>

<pre><code>/**
 * Get the free disk available space in boolean to download requested file 
 * 
 * @return boolean value according to size availability
 */

protected static boolean isMemorySizeAvailableAndroid(long download_bytes, boolean isExternalMemory) {
    boolean isMemoryAvailable = false;
    long freeSpace = 0;

    // if isExternalMemory get true to calculate external SD card available size
    if(isExternalMemory){
        try {
            StatFs stat = new StatFs(Environment.getExternalStorageDirectory().getPath());
            freeSpace = (long) stat.getAvailableBlocks() * (long) stat.getBlockSize();
            if(freeSpace &gt; download_bytes){
                isMemoryAvailable = true;
            }else{
                isMemoryAvailable = false;
            }
        } catch (Exception e) {e.printStackTrace(); isMemoryAvailable = false;}
    }else{
        // find phone available size
        try {
            StatFs stat = new StatFs(Environment.getDataDirectory().getPath());
            freeSpace = (long) stat.getAvailableBlocks() * (long) stat.getBlockSize();
            if(freeSpace &gt; download_bytes){
                isMemoryAvailable = true;
            }else{
                isMemoryAvailable = false;
            }
        } catch (Exception e) {e.printStackTrace(); isMemoryAvailable = false;}
    }

    return isMemoryAvailable;
}
</code></pre>
"
14155716,"<pre><code>public String TotalExtMemory()
{
    StatFs statFs = new StatFs(Environment.getExternalStorageDirectory().getAbsolutePath());   
    int Total = (statFs.getBlockCount() * statFs.getBlockSize()) / 1048576;

    String strI = Integer.toString(Total);
    return strI;
}

public String FreeExtMemory()
{
    StatFs statFs = new StatFs(Environment.getExternalStorageDirectory().getAbsolutePath());
    int Free  = (statFs.getAvailableBlocks() * statFs.getBlockSize()) / 1048576;
    String strI = Integer.toString(Free);
    return strI;
}

public String BusyExtMemory()
{
    StatFs statFs = new StatFs(Environment.getExternalStorageDirectory().getAbsolutePath());   
    int Total = (statFs.getBlockCount() * statFs.getBlockSize()) / 1048576;
    int Free  = (statFs.getAvailableBlocks() * statFs.getBlockSize()) / 1048576;
    int Busy  = Total - Free;
    String strI = Integer.toString(Busy);
    return strI;
}
</code></pre>
"
14419212,"<p>I use interface constants when dealing with shared constants between classes.</p>

<pre><code>public interface TestConstants
{
    String RootLevelConstant1 = ""RootLevelConstant1"";

    interface SubGroup1
    {
        String SubGroupConstant1 = ""SubGroup1Constant1"";
        String SubGroupConstant2 = ""SubGroup1Constant2"";
    }

    interface SubGroup2
    {
        String SubGroupConstant1 = ""SubGroup2Constant1"";
        String SubGroupConstant2 = ""SubGroup2Constant2"";
    }
}
</code></pre>

<p>The grouping is a huge asset, especially with a large set of constants.  </p>

<p>To use, you simply chain them together:</p>

<pre><code>System.out.println(TestConstants.SubGroup1.SubGroupConstant1);
System.out.println(TestConstants.SubGroup2.SubGroupConstant1);
System.out.println(TestConstants.RootLevelConstant1);
</code></pre>
"
14478989,"<pre><code>int n1 = 12; // you can make the user insert n1,n2 using Scanner or JOptionPane
int n2 = 26;
int gcd = 1;
int k = 1;

while ((k &lt;= n1) &amp;&amp; (k &lt;= n2)) {
    if ((n1 % k == 0) &amp;&amp; (n2 % k == 0)) {
        gcd = k;
    }
    k++;
}

System.out.print(""The Greatest Common divisor of The Two numbers IS :   "" + gcd);
</code></pre>
"
14577274,"<p>I encountered the same problem and came up with the following solution (it should implement the Set interface but not all methods are here)</p>

<pre><code>public class MySet&lt;T&gt; implements Set&lt;T&gt;{

    private HashMap&lt;T,T&gt; items = new HashMap&lt;T,T&gt;();


    public boolean contains(Object item) 
    {
        return items.containsKey(item);
    }

    public boolean add(T item) 
    {
        if (items.containsKey(item))
            return false;
        else
        {
            items.put(item, item);
            return true;
        }
    }

    public T get(T item) 
    {
        return items.get(item);
    }
}
</code></pre>
"
14727937,"<p>Try</p>

<pre><code>private void inText_UserIDKeyReleased( java.awt.event.KeyEvent evt ) {
    String UsrID=inText_UserID.getText().toUpperCase();
    inText_UserID.setText( UsrID );
}
</code></pre>
"
15040515,"<pre><code>public  String compareDate( PaymentTxnRequest request ) throws ParseException { 
        Date debitDate= request.getPaymentTxn().getCrValDt();
        Date now = new Date();
        String response="""";
        SimpleDateFormat sdfDate = new SimpleDateFormat(""dd/MM/yyyy"");
        String strCurrDate = sdfDate.format(now);
        String strDebitDate = sdfDate.format(debitDate);
        System.out.println(""Current Date: "" + strCurrDate);
        Date currentDate =  new SimpleDateFormat(""dd/MM/yyyy"").parse(strCurrDate);
        Date txnDate =  new SimpleDateFormat(""dd/MM/yyyy"").parse(strDebitDate);
        System.out.println(""C -&gt; ""+currentDate);
        System.out.println(""C -&gt; ""+txnDate); 
         if (txnDate!=null){
         if (currentDate.equals(txnDate))
         {
             System.out.println(""Valid Txn"");
             response=""valid"";
         }
         if (currentDate.after(txnDate))
         {
            System.out.println(""--&gt; Not  Valid TXN Past"");   
            response=""notValid"";
         }
        if (currentDateenter code here.before(txnDate)){
            System.out.println(""Future Valid TXn"");
             response=""future"";
        }
     }
        return response;
    }
</code></pre>
"
15697578,"<p>Try this one out</p>

<pre><code>public void getObjectList(){
        System.out.println(""Listing objects"");
        ObjectListing objectListing = s3.listObjects(new ListObjectsRequest()
                .withBucketName(bucketName)
                .withPrefix(""ads""));
        for (S3ObjectSummary objectSummary : objectListing.getObjectSummaries()) {
            System.out.println("" - "" + objectSummary.getKey() + ""  "" +
                               ""(size = "" + objectSummary.getSize() + "")"");
        }
    }
</code></pre>

<p>You can all the objects within the bucket with specific prefix. </p>
"
15866250,"<p>you can write a generic method as (its too late but below code will help you/others)</p>

<pre><code>public static FileInputStream getFile(File fileImport) throws IOException {
      FileInputStream fileStream = null;
    try {
        PrintWriter writer = new PrintWriter(fileImport);
        writer.print(StringUtils.EMPTY);
        fileStream = new FileInputStream(fileImport);
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            writer.close();
        }
         return fileStream;
}
</code></pre>
"
16108688,"<p>I am re-editing this answer to complete the proposed example and correct some typo.  </p>

<pre><code>import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import java.util.HashMap;
import java.util.Map;

@SuppressWarnings(""unchecked"")
public class Main {

    public static void main(String[] args) throws ParseException {

        //containing valid json
        String myDataToParse = ""{\n"" +
            ""   \""pageInfo\"": {\n"" +
            ""         \""pageName\"": \""abc\"",\n"" +
            ""         \""pagePic\"": \""http://example.com/content.jpg\""\n"" +
            ""    }\n"" +
            ""    \""posts\"": [\n"" +
            ""         {\n"" +
            ""              \""post_id\"": \""123456789012_123456789012\"",\n"" +
            ""              \""actor_id\"": \""1234567890\"",\n"" +
            ""              \""picOfPersonWhoPosted\"": \""http://example.com/photo.jpg\"",\n"" +
            ""              \""nameOfPersonWhoPosted\"": \""Jane Doe\"",\n"" +
            ""              \""message\"": \""Sounds cool. Can't wait to see it!\"",\n"" +
            ""              \""likesCount\"": \""2\"",\n"" +
            ""              \""comments\"": [],\n"" +
            ""              \""timeOfPost\"": \""1234567890\""\n"" +
            ""         }\n"" +
            ""    ]\n"" +
            ""}"";


        JSONParser JSON = new JSONParser();

        Map&lt;String, Object&gt; dataParsed = (HashMap&lt;String, Object&gt;)JSON.parse(myDataToParse);

        System.out.println(dataParsed.get(""pageInfo""));
        System.out.println(dataParsed.get(""posts""));


    }
</code></pre>

<p>}</p>
"
16454176,"<p>If no zero argument constructor of an object  it will also create an object and it will not throw any exception, please find the below code snippets. </p>

<pre><code>try {
    Class o = Class.forName(""com.myCompany.MyClass"");

    Constructor m = o.getConstructor(Integer.class,String.class);
    m.newInstance(new Integer(0),new String(""""));

} catch (ClassNotFoundException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
} catch (InstantiationException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
} catch (IllegalAccessException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
} catch (SecurityException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
} catch (NoSuchMethodException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
} catch (IllegalArgumentException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
} catch (InvocationTargetException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
}
</code></pre>
"
3688595,"<p>You can also use the binary form of negation as shown here.</p>

<pre><code>if ((v == true) &amp;&amp; !(v = false)) {
    v != true;   /* negate with true if true. */
} else {
    v =! false;  /* negate with false if false. */
}
</code></pre>
"
16881666,"<p>you can check if the array is initialized and its legnth greater than zero</p>

<pre><code>if(nameOfYourArray != null &amp;&amp; nameOfYourArray.length &gt; 0){

      // Your code here
}
</code></pre>
"
16977575,"<p>The following dependencies in the pom.xml seem to resolve the issue:</p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.web&lt;/groupId&gt;
    &lt;artifactId&gt;javax.servlet.jsp.jstl&lt;/artifactId&gt;
    &lt;version&gt;1.2.1&lt;/version&gt;
    &lt;scope&gt;provided&lt;/scope&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;javax.servlet.jsp.jstl&lt;/groupId&gt;
    &lt;artifactId&gt;javax.servlet.jsp.jstl-api&lt;/artifactId&gt;
    &lt;version&gt;1.2.1&lt;/version&gt;
    &lt;scope&gt;provided&lt;/scope&gt;
&lt;/dependency&gt;
</code></pre>

<p>That was a strange combination - two different  groupIds - but it does work :). My expectation was to see the same group ID for both jars. I managed to redeploy without a problem to Tomcat 7.</p>

<p>Also, if you see ""Unkown tag 
"
17675210,"<p>If you want to escape <code>'</code> or <code>""</code> in your string, you can use the following code:</p>

<pre><code>String text = ...

text = text.replaceAll(""('|\"")"", ""\\\\$1"");
</code></pre>
"
17854119,"<p>I have just faced this problem, and the solution is that the property ""mail.smtp.user"" should be your email (not username).</p>

<p>The example for gmail user:</p>

<pre><code>properties.put(""mail.smtp.starttls.enable"", ""true"");
properties.put(""mail.smtp.host"", host);
properties.put(""mail.smtp.user"", from);
properties.put(""mail.smtp.password"", pass);
properties.put(""mail.smtp.port"", ""587"");
properties.put(""mail.smtp.auth"", ""true"");
</code></pre>
"
17926622,"<p>In this section, you access the elements from outside of the loop:</p>

<pre><code>for(int i=0; i&lt;list.size; i++)
{

}
</code></pre>

<p>In this case the For loop of condition is completed, and again you retrieve the value from list by using <code>i++</code>: Such that you get the <code>ArrayindexOutOfBoundexception</code>.</p>

<p>It would be better to go with a ForEach loop - where all these issues will be take care of:</p>

<pre><code>for(String str : list)
{
}
</code></pre>
"
3833080,"<p>Iterators were created to step through all the objects in a collection one at a time, using data backed by said collection.</p>

<p><code>Iterator&lt;T&gt;</code> is almost always implemented using a private inner class that may use state that is part of the outer class.  Thus, you can't really modify an <code>Iterator</code>'s behavior without writing your own <code>Collection</code> (or whatever) as well.</p>

<p>Copying the Iterator could cause a host of new problems, such as falling out of sync with the backing collection.</p>
"
18290704,"<pre><code>    public class ArrayLimitedQueue&lt;E&gt; extends ArrayDeque&lt;E&gt; {

    private int limit;

    public ArrayLimitedQueue(int limit) {
        super(limit + 1);
        this.limit = limit;
    }

    @Override
    public boolean add(E o) {
        boolean added = super.add(o);
        while (added &amp;&amp; size() &gt; limit) {
            super.remove();
        }
        return added;
    }

    @Override
    public void addLast(E e) {
        super.addLast(e);
        while (size() &gt; limit) {
            super.removeLast();
        }
    }

    @Override
    public boolean offerLast(E e) {
        boolean added = super.offerLast(e);
        while (added &amp;&amp; size() &gt; limit) {
            super.pollLast();
        }
        return added;
    }
}
</code></pre>
"
18846486,"<p>If you only want to use JLabel than you can try this approach,</p>

<p>just display the number of characters you want to display on label using substring method.</p>

<pre><code>public void setLabel(String label){
    String dispLabel=label.substring(0, numOfCharacter);
    labelComponent.setText(dispLabel);
}
</code></pre>
"
3995650,"<pre><code>static boolean isNegative(double v) {
  return new Double(v).toString().startsWith(""-"");
}
</code></pre>
"
18919071,"<p>There are two answers here that are mostly correct with regard to how to solve this problem when using Maven when dealing with this issue. However, both are not 100% complete.</p>

<p><strong>Using Exclusions per <a href=""http://stackoverflow.com/a/10674054/123378"">@Tom Hunter's answer</a></strong></p>

<p>This answer works. However, there will still be log messages from Tomcat regarding duplicate TLD definitions. This is because both the jstl and jstl-impl artifacts include the TLD definitions. To remove those messages, I think a better Maven setup is this:</p>

<pre class=""lang-xml prettyprint-override""><code>&lt;dependency&gt;
    &lt;version&gt;1.2&lt;/version&gt;
    &lt;scope&gt;runtime&lt;/scope&gt;
    &lt;groupId&gt;javax.servlet.jsp.jstl&lt;/groupId&gt;
    &lt;artifactId&gt;jstl-api&lt;/artifactId&gt;
    &lt;exclusions&gt;
        &lt;exclusion&gt;
            &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;
            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
        &lt;/exclusion&gt;
        &lt;exclusion&gt;
            &lt;artifactId&gt;jsp-api&lt;/artifactId&gt;
            &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;
        &lt;/exclusion&gt;
    &lt;/exclusions&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.web&lt;/groupId&gt;
    &lt;artifactId&gt;jstl-impl&lt;/artifactId&gt;
    &lt;version&gt;1.2&lt;/version&gt;
    &lt;scope&gt;runtime&lt;/scope&gt;
    &lt;exclusions&gt;
        &lt;exclusion&gt;
            &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;
            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
        &lt;/exclusion&gt;
        &lt;exclusion&gt;
            &lt;artifactId&gt;jsp-api&lt;/artifactId&gt;
            &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;
        &lt;/exclusion&gt;
        &lt;exclusion&gt;
            &lt;artifactId&gt;jstl-api&lt;/artifactId&gt;
            &lt;groupId&gt;javax.servlet.jsp.jstl&lt;/groupId&gt;
        &lt;/exclusion&gt;
    &lt;/exclusions&gt;
&lt;/dependency&gt;
</code></pre>

<p>This includes only the jstl api classes with the necessary exclusions to avoid the problems explained in the rest of that answer.</p>

<p><strong>Using newer POM versions per <a href=""http://stackoverflow.com/a/16977575/123378"">@George's answer</a></strong></p>

<p>It took me a while to realize it, but there are newer versions of the JSTL pom's available. It's really confusing because these newer packages use similar, but slightly different naming conventions.  These newer versions mark the javax.servlet, javax.jsp, etc dependencies as provided scope so that they do not need to be excluded.  The 1.2.1 version depends on a 1.2.1 version of the jstl-api. And so this <em>would</em> work as well as above answer:</p>

<pre class=""lang-xml prettyprint-override""><code>&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.web&lt;/groupId&gt;
    &lt;artifactId&gt;javax.servlet.jsp.jstl&lt;/artifactId&gt;
    &lt;version&gt;1.2.1&lt;/version&gt;
    &lt;scope&gt;runtime&lt;/scope&gt;
&lt;/dependency&gt;
</code></pre>

<p>This differs slightly from George's answer because I changed scope to runtime.  George specified scope as provided. With a provided scope, the jars would have to be copied manually in to the Tomcat lib directory, or some other dependency would have to included the necessary implementation.</p>

<p><em><strong>However,</em></strong> I could not find the 1.2.1 version of the impl in maven central, jboss repo, or any other repos. I ended up going around in circles and finally just used a local file based repo to store the jar.  The dependency and jar are described here: </p>

<ul>
<li><a href=""http://mvnrepository.com/artifact/org.glassfish.web/javax.servlet.jsp.jstl/1.2.1"" rel=""nofollow"">http://mvnrepository.com/artifact/org.glassfish.web/javax.servlet.jsp.jstl/1.2.1</a></li>
</ul>
"
19426420,"<p><strong>ARM - Automatic Resource Management(Introduced since Java 7)</strong></p>

<p>Take a very simple example</p>

<pre><code>static String readFirstLineFromFileWithFinallyBlock(String path)
                                                     throws IOException {
    BufferedReader br = new BufferedReader(new FileReader(path));
    try {
        return br.readLine();
    } finally {
        if (br != null) br.close();
    }
}
</code></pre>

<p>Now if <code>readLine()</code> function throws Exception and then even <code>close()</code> function [in finally block] throws exception then the later is given more priority and is thrown back to the calling function. In this case the <code>Exception thrown by the readLine() method is ignored/suppressed</code>. You can chain the  causing exception in your exception and rethrow your exception from finally block.</p>

<p>Since <code>java 7</code> functionality has been provided to retrieve suppressed Exceptions. You can call <code>public final java.lang.Throwable[] getSuppressed()</code> function on the catched throwable object to view the suppressed Exceptions.</p>

<p>For Eg.</p>

<pre><code>static String readFirstLineFromFileWithFinallyBlock(String path)
        throws Exception {
    try (BufferedReader br = new BufferedReader(new FileReader(path));) {
        return br.readLine();
    }
}
</code></pre>

<p>Now if <code>br.readLine();</code> line throws <code>Exception1</code> and then lets say <code>Exception2</code> is thrown while closing the resource [Imagine this happening in an implicit finally block that try-with-resource statement creates] then Exception1 suppresses Exception2.</p>

<p>Few points to note here - </p>

<ol>
<li>If try-with-resource block throws exception i.e while resource instantiation then try block will not execute and the same exception will be thrown.</li>
<li>If instantiation of resource is successful, try block throws an exception and exception is thrown while closing the resource then the exception thrown while closing resource is suppressed by the exception thrown from try block.</li>
<li>If you provide explicit finally block and exception is thrown from that block it will suppress all other exception. (This explicit finally block executes after resources are closed)</li>
</ol>

<p>I have compiled most of the possible scenarios with code snippets and output in following post. </p>

<p><a href=""http://opensourceforgeeks.blogspot.in/2014/12/suppressed-exceptions-in-java-7.html"" rel=""nofollow"">Suppressed exceptions in java 7</a></p>

<p>Hope that helps.</p>
"
4061990,"<p>yup! <code>setLength(0)</code> is a great idea! that's what its for. anything quicker would be to discard the <code>stringBuffer</code> &amp; make a new one. its faster, can't say anything about it being memory efficient :)</p>
"
19833609,"<p>If you add a folder to build path you can retrieve the images either in eclipse and when you exported it in jar file, just remember to <strong>don't</strong> reference the image with the path like <code>img/myImage.gif</code> but only <code>myImage.gif</code> !</p>
"
4125796,"<pre><code>Cat cat;

for (cat : myCats) {
  feedDryFood(cat);
}

alsoFeedTuna(cat);
</code></pre>
"
20035532,"<p>The % going to give us the gcd Between two numbers, it means:-
% or mod of big_number/small_number are =gcd,
and we write it on java like this  <code>big_number % small_number</code>.</p>

<p>EX1: for two integers</p>

<pre><code>  public static int gcd(int x1,int x2)
    {
        if(x1&gt;x2)
        {
           if(x2!=0)
           {
               if(x1%x2==0)     
                   return x2;
                   return x1%x2;
                   }
           return x1;
           }
          else if(x1!=0)
          {
              if(x2%x1==0)
                  return x1;
                  return x2%x1;
                  }
        return x2;
        } 
</code></pre>

<p>EX2: for three integers</p>

<pre><code>public static int gcd(int x1,int x2,int x3)
{

    int m,t;
    if(x1&gt;x2)
        t=x1;
    t=x2;
    if(t&gt;x3)
        m=t;
    m=x3;
    for(int i=m;i&gt;=1;i--)
    {
        if(x1%i==0 &amp;&amp; x2%i==0 &amp;&amp; x3%i==0)
        {
            return i;
        }
    }
    return 1;
}
</code></pre>
"
20797290,"<p>among the power of Maven we find the POM file wich we will add the list of dependency like the code bellow. then open <strong>POM.XML</strong> file, and add:</p>

<pre><code>&lt;dependency&gt;
&lt;groupId&gt;jstl&lt;/groupId&gt;
&lt;artifactId&gt;jstl&lt;/artifactId&gt;
&lt;version&gt;[version of JSTL you want to add][1]&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p>i hope this help you :)</p>
"
21123156,"<pre><code>static Object jsonParser(String jsonStr, String key) throws JSONException {
    int i = 0;
    Object temp = null;
    Object json = new JSONObject(jsonStr);
    String[] keys = key.split(""[.]"");
    while (i &lt; keys.length) {

        if (json instanceof JSONArray) {
            int index = Integer.parseInt(keys[i]);
            temp = ((JSONArray) json).get(index);
        } else if (json instanceof JSONObject) {
            temp = ((JSONObject) json).get(keys[i]);
        }
        json = temp;
        i++;
    }
    return temp;
}
</code></pre>
"
4324644,"<p>I dont think there is a method call you could use. Try it like this</p>

<pre><code>List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
  for (int index = 0; index &lt; array.length; index++)
  {
    list.add(array[index]);
  }
</code></pre>
"
22305276,"<p>I will propose even shorter and simplest answer to the problem and it contains 2 lines of code in the method (<code>import java.util.Arrays</code> is required):</p>

<pre><code>    public static int secMax(int[] num){
    Arrays.sort(num);
    temp = num[num.length-2];

    return temp;
}
</code></pre>
"
4397748,"<p>just create an enum xDD</p>

<blockquote>
<pre><code>public enum EnumName
{
  Foo(),Bar();
} 

switch (baz)
{
   case : EnumName.Foo
    code
    break;
}
</code></pre>
</blockquote>
"
22717353,"<p>Easy solution: Use singleton instance. It will allow overrides and inheritance. </p>

<p>In my system, I have SingletonsRegistry class, which returns instance for passed Class. If instance is not found, it is created.</p>

<p>Haxe language class:</p>

<pre><code>package rflib.common.utils;
import haxe.ds.ObjectMap;



class SingletonsRegistry
{
  public static var instances:Map&lt;Class&lt;Dynamic&gt;, Dynamic&gt;;

  static function __init__()
  {
    StaticsInitializer.addCallback(SingletonsRegistry, function()
    {
      instances = null;
    });

  } 

  public static function getInstance(cls:Class&lt;Dynamic&gt;, ?args:Array&lt;Dynamic&gt;)
  {
    if (instances == null) {
      instances = untyped new ObjectMap&lt;Dynamic, Dynamic&gt;();      
    }

    if (!instances.exists(cls)) 
    {
      if (args == null) args = [];
      instances.set(cls, Type.createInstance(cls, args));
    }

    return instances.get(cls);
  }


  public static function validate(inst:Dynamic, cls:Class&lt;Dynamic&gt;)
  {
    if (instances == null) return;

    var inst2 = instances[cls];
    if (inst2 != null &amp;&amp; inst != inst2) throw ""Can\'t create multiple instances of "" + Type.getClassName(cls) + "" - it's singleton!"";
  }

}
</code></pre>
"
23027019,"<p>They are all wrong I just wrote this in about 10 seconds.
With this I managed to just call the object.getQuestion(""linenumber"") in the main method to return whatever line I want.</p>

<pre><code>public class Questions {

File file = new File(""Question2Files/triviagame1.txt"");

public Questions() {

}

public String getQuestion(int numLine) throws IOException {
    BufferedReader br = new BufferedReader(new FileReader(file));
    String line = """";
    for(int i = 0; i &lt; numLine; i++) {
        line = br.readLine();
    }
    return line; }}
</code></pre>
"
23037591,"<p>To add to Jeremiah Willcock's answer, if you want the value of the power of 2 itself, then you will want:</p>

<pre><code>(int) Math.pow(2, (a == 0) ? 0 : 32 - Integer.numberOfLeadingZeros(numWorkers));
</code></pre>
"
4555733,"<p>Here's how:</p>

<pre><code>import java.io.BufferedReader;
import java.io.FileReader;
import java.io.File;
import java.io.FileWriter;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;

public class FileUtil {


  public void removeLineFromFile(String file, String lineToRemove) {

    try {

      File inFile = new File(file);

      if (!inFile.isFile()) {
        System.out.println(""Parameter is not an existing file"");
        return;
      }

      // Construct the new file that will later be renamed
      // to the original filename. 
      File tempFile = new File(inFile.getAbsolutePath() + "".tmp"");

      BufferedReader br = new BufferedReader(new FileReader(file));
      PrintWriter pw = new PrintWriter(new FileWriter(tempFile));

      String line = null;

      //Read from the original file and write to the new 
      //unless content matches data to be removed.
      while ((line = br.readLine()) != null) {

        if (!line.trim().equals(lineToRemove)) {

          pw.println(line);
          pw.flush();
        }
      }
      pw.close();
      br.close();

      //Delete the original file
      if (!inFile.delete()) {
        System.out.println(""Could not delete file"");
        return;
      } 

      //Rename the new file to the filename the original file had.
      if (!tempFile.renameTo(inFile))
        System.out.println(""Could not rename file"");

    }
    catch (FileNotFoundException ex) {
      ex.printStackTrace();
    }
    catch (IOException ex) {
      ex.printStackTrace();
    }
  }

  public static void main(String[] args) {
    FileUtil util = new FileUtil();
    util.removeLineFromFile(""test.txt"", ""bbbbb"");
  }
}
</code></pre>
"
23151044,"<p>Update the empty password in the table mysql.user of mysql</p>

<pre><code>use mysql;
select host,user,password from mysql.user;
update mysql.user set password = PASSWORD('123456') where password = '';
flush privileges;
</code></pre>
"
23392365,"<pre><code>while(!flights.isEmptry) {
  System.out.println(flights.removeFirst());
}
</code></pre>
"
24608180,"<p>Because XWPFRun.addPicture does not work (it damage xdoc file) i manage to picture like this:</p>

<pre><code>    private void addPicture(final String fileName, final int id, int width, int height, final XWPFRun run)
{
    FileInputStream fileInputStream = null;

    try
    {
        fileInputStream = new FileInputStream(""/home/maq/ebworkspace/TeamForge_Tools/"" + fileName);
        final String blipId = run.getDocument().addPictureData(fileInputStream, Document.PICTURE_TYPE_JPEG);

        final int EMU = 9525;
        width *= EMU;
        height *= EMU;
        //String blipId = getAllPictures().get(id).getPackageRelationship().getId();

        final CTInline inline = run.getCTR().addNewDrawing().addNewInline();

        final String picXml = """" + ""&lt;a:graphic xmlns:a=\""http://schemas.openxmlformats.org/drawingml/2006/main\""&gt;""
                + ""   &lt;a:graphicData uri=\""http://schemas.openxmlformats.org/drawingml/2006/picture\""&gt;"" + ""      &lt;pic:pic xmlns:pic=\""http://schemas.openxmlformats.org/drawingml/2006/picture\""&gt;""
                + ""         &lt;pic:nvPicPr&gt;"" + ""            &lt;pic:cNvPr id=\""""
                + id
                + ""\"" name=\""Generated\""/&gt;""
                + ""            &lt;pic:cNvPicPr/&gt;""
                + ""         &lt;/pic:nvPicPr&gt;""
                + ""         &lt;pic:blipFill&gt;""
                + ""            &lt;a:blip r:embed=\""""
                + blipId
                + ""\"" xmlns:r=\""http://schemas.openxmlformats.org/officeDocument/2006/relationships\""/&gt;""
                + ""            &lt;a:stretch&gt;""
                + ""               &lt;a:fillRect/&gt;""
                + ""            &lt;/a:stretch&gt;""
                + ""         &lt;/pic:blipFill&gt;""
                + ""         &lt;pic:spPr&gt;""
                + ""            &lt;a:xfrm&gt;""
                + ""               &lt;a:off x=\""0\"" y=\""0\""/&gt;""
                + ""               &lt;a:ext cx=\""""
                + width
                + ""\"" cy=\""""
                + height
                + ""\""/&gt;""
                + ""            &lt;/a:xfrm&gt;""
                + ""            &lt;a:prstGeom prst=\""rect\""&gt;""
                + ""               &lt;a:avLst/&gt;""
                + ""            &lt;/a:prstGeom&gt;""
                + ""         &lt;/pic:spPr&gt;""
                + ""      &lt;/pic:pic&gt;"" + ""   &lt;/a:graphicData&gt;"" + ""&lt;/a:graphic&gt;"";

        //CTGraphicalObjectData graphicData = inline.addNewGraphic().addNewGraphicData();
        XmlToken xmlToken = null;
        xmlToken = XmlToken.Factory.parse(picXml);
        inline.set(xmlToken);
        //graphicData.set(xmlToken);

        inline.setDistT(0);
        inline.setDistB(0);
        inline.setDistL(0);
        inline.setDistR(0);

        final CTPositiveSize2D extent = inline.addNewExtent();
        extent.setCx(width);
        extent.setCy(height);

        final CTNonVisualDrawingProps docPr = inline.addNewDocPr();
        docPr.setId(id);
        docPr.setName(""Picture "" + id);
        docPr.setDescr(""Generated"");
    }
    catch (final Exception e)
    {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    finally
    {
        //close streams 
        if (fileInputStream != null)
        {
            try
            {
                fileInputStream.close();
            }
            catch (final IOException ioEx)
            {
                //can be ignored
            }
        }
    }

}
</code></pre>

<p>And running example: </p>

<pre><code> addPicture(filePath, xdoc.getNextPicNameNumber(Document.PICTURE_TYPE_JPEG), 100, 50, xRun);
</code></pre>
"
24866099,"<pre><code>public static void main(String[] args) {
String str=""Prashant"";
int len=str.length();
char []c=new char[len];
for(int j=len-1,i=0;j&gt;=0 ;j--,i++){
    c[i]=str.charAt(j);
}
str=String.copyValueOf(c);
System.out.println(str);
}
</code></pre>
"
24994223,"<pre><code>JPanel panel = new JPanel();
JTable table = new JTable(rowData, colData);
JScrollPane scrollPane = new JScrollPane(table);
panel.add(scrollPane, BorderLayout.CENTER);
panel.setSize(800, 150);
panel.add(table);
panel.setLocationRelativeTo(null);
panel.setVisible(true);
</code></pre>

<p>Hope this helps.</p>
"
25548949,"<p>The simple way to parse string to integer is using the <code>parseInt()</code> function as shown below:</p>

<pre><code>int nb = Integer.parseInt(""1234"");
</code></pre>

<p><a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html"" rel=""nofollow"">For references please check this link</a></p>
"
26173996,"<pre><code>public static void main(String[] args) {
    System.out.println(""Integer Value :"" +convertIntToString(new int[]{3,4,5}));
}

public static String convertIntToString(int intArray[]) {
    List&lt;Integer&gt; listInteger = new ArrayList&lt;Integer&gt;();

    for (int i = 0; i &lt; intArray.length; i++) {
        listInteger.add(intArray[i]);
    }

    Object o = listInteger;

    return String.valueOf(o).replace(""["", """").trim().replaceAll("", "","""").trim().replaceAll(""\\]"","""").trim();
}
</code></pre>
"
26222666,"<p>""Java SE8 for Programmers"" claims that the <em>Java</em> will cope with either. (pp. 480, last paragraph).
The example claims that:  </p>

<pre><code>c:\Program Files\Java\jdk1.6.0_11\demo/jfc
</code></pre>

<p>will parse just fine.  Take note of the last (Unix-style) separator.  </p>

<p>It's tacky, and probably error-prone, but it is what they (Deitel and Deitel) claim.  </p>

<p>I think the confusion for people, rather than Java, is reason enough not to use this (mis?)feature.</p>
"
26438735,"<p>try this </p>

<pre><code>public boolean isPrebuiltTestButtonVisible() {
    try {

        if (preBuiltTestButton.isEnabled()) {

            return true;

        } else {

            return false;
        }

    } catch (Exception e) {

        e.printStackTrace();
        return false;
    }
}
</code></pre>
"
4962346,"<pre><code>String str= 21*90'89;
String part= str.split(""[*|']"");
System.out.println(part[0] +""""+part[1]);
</code></pre>
"
4964217,"<p>@dontocsata
you can go back to your teacher and school him a little :)</p>

<p>few notes from the real world and regardless what you see or be told. 
Please NOTE, the words below are regarding this particular case in the exact order shown.</p>

<p>The following 2 variable will reside on the same cache line under virtually any know architecture.</p>

<pre><code>private static boolean ready;  
private static int number;  
</code></pre>

<p><code>Thread.exit</code> (main thread) is guaranteed to exit and <code>exit</code> is guaranteed to cause a memory fence, due to the thread group thread removal (and many other issues). (it's a synchronized call, and I see no single way to be implemented w/o the sync part since the ThreadGroup must terminate as well if no daemon threads are left, etc).</p>

<p>The started thread <code>ReaderThread</code> is going to keep the process alive since it is not a daemon one! 
Thus <code>ready</code> and <code>number</code> will be flushed together (or the number before if a context switch occurs) and there is no real reason for reordering in this case at least I can't even think of one. 
You will need something truly weird to see anything but <code>42</code>. Again I do presume both static variables will be in the same cache line. I just can't imagine a cache line 4 bytes long OR a JVM that will not assign them in a continuous area (cache line).</p>
"
5007032,"<p>I don't think that would compile. A method cannot have two return types (<code>&lt;T&gt;</code> and <code>boolean</code>) at the same time.</p>
"
27377041,"<p>Isn't it just: <code>System.out.println(Array.length);</code>? Because this is what it seems like you are looking for.</p>
"
27616331,"<pre><code>           import java.io.*;

                   class unique
                  {
                           public static int[] ascii(String s)
                           {
                                    int length=s.length();
                                    int asci[] = new int[length];
                                    for(int i=0;i&lt;length;i++)
                                    {
                                              asci[i]=(int)s.charAt(i);
                                     }
                              return asci;
                            }
                            public static int[] sort(int a[],int l)
                           {
                                       int j=1,temp;
                                       while(j&lt;=l-1)
                                       {
                                                 temp = a[j];
                                                  int k=j-1;
                                                  while(k&gt;=0 &amp;&amp; temp&lt;a[k])
                                                 {
                                                           a[k+1]= a[k];
                                                           k--;
                                                 }
                                                a[k+1]=temp;
                                                j++;
                                       } 
                           return a;
                    }
              public static boolean compare(int a[])
            { 
                     int length=a.length;
                     int diff[] = new int[length-1];
                     boolean flag=true;
                     for(int i=0;i&lt;diff.length;i++)
                    {
                             diff[i]=a[i]-a[i+1];
                             if(diff[i]==0)
                             {
                                        flag=false;
                                        break;
                             }
                             else
                             {
                                      flag=true;
                             }
                     }
                     return flag;
                }
                public static void main(String[] args)         throws IOException 
               {
                 BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
                 String str = null;
                 boolean result = true;
                 System.out.println(""Enter your String....."");
                 str = br.readLine();
                 str = str.toLowerCase();
                 int asc[]=ascii(str);
                 int len = asc.length;
                 int comp[]=sort(asc,len);
                 if(result==compare(comp))
                 {
                     System.out.println(""The Given String is Unique"");
                 }
                 else
                {
                        System.out.println(""The Given String is not Unique"");
                 }
              }
</code></pre>

<p>}</p>
"
28041437,"<pre><code>&lt;%@page import=""java.text.SimpleDateFormat""%&gt;
&lt;%@page import=""java.util.Date""%&gt;
&lt;%@page import=""java.util.Locale""%&gt;

&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Date Format&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;%
String stringDate = ""Fri May 13 2011 19:59:09 GMT 0530"";
Date stringDate1 = new SimpleDateFormat(""EEE MMM dd yyyy HH:mm:ss Z"", Locale.ENGLISH).parse(stringDate);
String stringDate2 = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"").format(stringDate1);

out.println(stringDate2);
%&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
"
28134393,"<p>This is the simplest solution to limit the number of digits after decimal point to two.</p>

<pre><code>myeditText2 = (EditText) findViewById(R.id.editText2);  
myeditText2.setInputType(3);
</code></pre>

<p>Hope this helps!</p>
"
5121267,"<p>do not <code>synchronized(thread)</code>, don't do it, do not <code>synchronized(thread)</code>.. repat: no <code>synchronized(thread)</code> :)</p>

<p>And if you need to wait for the thread 'b' to finish, use b.join(), now your code is free to hang in b.wait()</p>

<p>--</p>

<p>Hopefully the source below can grant you an insight while sync(thread)/notify() I consider bad practice. (cut-cut)</p>

<p>Enjoy</p>

<hr>

<p><strong>To proceeed below you make sure you have accepted Oracle's License aggreement, found there:</strong>
<a href=""https://cds.sun.com/is-bin/INTERSHOP.enfinity/WFS/CDS-CDS_Developer-Site/en_US/-/USD/ViewLicense-Start?LicenseUUID=7HeJ_hCwhb4AAAEtmC8ADqmR&amp;ProductUUID=pGqJ_hCwj_AAAAEtB8oADqmS&amp;cnum=&amp;evsref=&amp;sln="" rel=""nofollow"">https://cds.sun.com/is-bin/INTERSHOP.enfinity/WFS/CDS-CDS_Developer-Site/en_US/-/USD/ViewLicense-Start?LicenseUUID=7HeJ_hCwhb4AAAEtmC8ADqmR&amp;ProductUUID=pGqJ_hCwj_AAAAEtB8oADqmS&amp;cnum=&amp;evsref=&amp;sln=</a></p>

<p>Java sources (incl), called in init(), effectively called by any java c-tor, since java 1.5</p>

<pre><code>private static **synchronized int** nextThreadNum() {
return threadInitNumber++;
}
</code></pre>

<p>//join (the method w/ nanos only increase millis by one, if nanos>500000, millis==0 and nanos>0</p>

<pre><code>public final **synchronized** void join(long millis) 
throws InterruptedException {
long base = System.currentTimeMillis();
long now = 0;

if (millis &lt; 0) {
        throw new IllegalArgumentException(""timeout value is negative"");
}

if (millis == 0) {
    while (isAlive()) {
    wait(0);
    }
} else {
    while (isAlive()) {
    long delay = millis - now;
    if (delay &lt;= 0) {
        break;
    }
    wait(delay);
    now = System.currentTimeMillis() - base;
    }
}
}


public **synchronized** void start() {
    /**
 * This method is not invoked for the main method thread or ""system""
 * group threads created/set up by the VM. Any new functionality added 
 * to this method in the future may have to also be added to the VM.
 *
 * A zero status value corresponds to state ""NEW"".
     */
    if (threadStatus != 0)
        throw new IllegalThreadStateException();
    group.add(this);
    start0();
    if (stopBeforeStart) {
    stop0(throwableFromStop);
}
}
</code></pre>

<p>//stop1 is called after stop ensures proper priviledges</p>

<pre><code>private final **synchronized** void stop1(Throwable th) {
SecurityManager security = System.getSecurityManager();
if (security != null) {
    checkAccess();
    if ((this != Thread.currentThread()) ||
    (!(th instanceof ThreadDeath))) {
    security.checkPermission(SecurityConstants.STOP_THREAD_PERMISSION);
    }
}
    // A zero status value corresponds to ""NEW""
if (threadStatus != 0) {
    resume(); // Wake up thread if it was suspended; no-op otherwise
    stop0(th);
} else {

        // Must do the null arg check that the VM would do with stop0
    if (th == null) {
    throw new NullPointerException();
    }

        // Remember this stop attempt for if/when start is used
    stopBeforeStart = true;
    throwableFromStop = th;
    }
}
</code></pre>
"
28592434,"<pre><code>Integer.parseInt(someNumberString); 
</code></pre>

<p>or</p>

<pre><code>someNumberString.toInt(); 
</code></pre>

<p>works</p>
"
5121354,"<p><code>Constructor</code> has to be created on a as needed basis. A default <code>Constructor</code> is always provided by the compiler if no other <code>Constructor</code> is created.</p>
"
28781730,"<p>The best method i use</p>

<pre><code>int totalCost = 0;
for (int i = 0; i &lt; cost.length; i++)
  totalCost += cost[i];
}
</code></pre>
"
5223440,"<p>This is at the following <a href=""http://download.oracle.com/javase/tutorial/essential/regex/pattern.html"" rel=""nofollow"">Java Tutorials</a></p>

<pre><code>import java.util.regex.Pattern;
import java.util.regex.Matcher;

public class SplitDemo2 {

    private static final String REGEX = ""\\d"";
    private static final String INPUT = ""one9two4three7four1five"";

    public static void main(String[] args) {
        Pattern p = Pattern.compile(REGEX);
        String[] items = p.split(INPUT);
        for(String s : items) {
            System.out.println(s);
        }
    }
}

OUTPUT:

one
two
three
four
five
</code></pre>

<p>The regex for whitespace is \s</p>

<p>Hope that helps.</p>
"
5223721,"<p>try this code :</p>

<pre><code>         JSch jsch=new JSch();

         System.out.println(""Getting session"");
         Session session=jsch.getSession(""root"",""10.0.0.0"",22);

          System.out.println(""session is ::::""+session.getHost());
          // username and password will be given via UserInfo interface.
          UserInfo ui = new MyUserInfo(""Lab@123"", null);
          //UserInfo ui = new MyUserInfo(password, null);
          session.setUserInfo(ui);
          session.setPassword(""Lab@123"");
          Properties config = new java.util.Properties();
          config.put(""StrictHostKeyChecking"", ""no"");
          session.setConfig(config);
          session.connect(40000);


              Channel channel=session.openChannel(""exec""); 
              ((ChannelExec)channel).setCommand(""ls"");

              channel.connect();
              channel.run();

              // get I/O streams for remote scp
              OutputStream out=channel.getOutputStream();
              InputStream in=channel.getInputStream(); 


          String output="""";
          while (channel.isClosed()!=true) {

              try {
                output+=streamToString(in);

            } catch (Exception e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }

        }

            System.out.println(""Output is :::""+output);
            channel.disconnect();
            session.disconnect();
    }

    public static String streamToString(InputStream input)throws Exception 
    { String output = """"; while(input.available()&gt;0) { output += ((char)(input.read())); } return output; }



    public static OutputStream stringToStream(String charset) throws IOException{

        byte[] bytes = charset.getBytes();
        /*ByteArrayInputStream bais = new ByteArrayInputStream(bytes);
        InputStreamReader isr = new InputStreamReader(bais);*/
        InputStream is = null;
        OutputStream os = null;
        try {
            is = new ByteArrayInputStream(charset.getBytes(""UTF-8""));
        } catch (UnsupportedEncodingException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        //byte[] buf = new byte[1024];
        int numRead;

          while ( (numRead = is.read(bytes) ) &gt;= 0) {
              os.write(bytes, 0, numRead);
          }        
        return os;      
</code></pre>
"
29201883,"<pre><code>/apps/jboss-eap-6.2/bin/standalone.sh -version
</code></pre>

<p>Sample output:</p>

<pre><code>=========================================================================

  JBoss Bootstrap Environment

  JBOSS_HOME: /apps/jboss-eap-6.2

  JAVA: /apps/jdks/jdk_1.7/bin/java

  JAVA_OPTS:  -server -XX:+UseCompressedOops -Xms1303m -Xmx1303m -XX:MaxPermSize=256m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true

=========================================================================

21:07:20,380 INFO  [org.jboss.modules] (main) JBoss Modules version 1.3.3.Final-redhat-1
21:07:22,206 INFO  [stdout] (main) JBoss EAP 6.2.2.GA (AS 7.3.2.Final-redhat-2)
</code></pre>
"
29953679,"<p>For my simple main program the file solution was perfect. No messing around with ports not knowing if they are available or not etc.</p>

<pre><code>        File stopFile = new File(""stop"");
        if (stopFile.exists()) {
            stopFile.delete();
            // perhaps set a volatile boolean to false to stop other
            // threads
            System.exit(0);
        }
</code></pre>

<p>to terminate the application I called this .bat file:</p>

<pre><code>mkdir stop
</code></pre>
"
5499842,"<pre><code>if(string != null)
</code></pre>

<p>or</p>

<pre><code>if(string.length() == 0)
</code></pre>

<p>or</p>

<pre><code>if(("""").equals(string))
</code></pre>
"
5499871,"<p>u can try this</p>

<pre><code>if(string != null)
</code></pre>
"
5545630,"<pre><code>//Do you think I'm sexy?
if(list1.length == list2.length){
    for (int i = 0; i &lt; list1.length; ++i) {
        doStuff(list1[i]);
        doStuff(list2[i]);
    }
}
</code></pre>
"
5562107,"<p>When you use curly braces to enclose a block of code, you don't need semicolon:</p>

<pre><code>namespace Some
{
  void fun(int i)
  { 
    while(i != 0)
    {
      cout&lt;&lt;""i = ""&lt;&lt;i&lt;&lt;endl;
      i --;
    }  // semicolon not needed
  }  // semicolon not needed
} // semicolon not needed
</code></pre>

<p>In other cases, you need semicolon (like initialization, declaration etc.):</p>

<pre><code>struct A {
// ... declare members
}; // declaration; put semicolon
int a[] = {0, 1, 2};  // initialization; put semicolon
</code></pre>
"
5588517,"<p>You can write</p>

<pre><code>error();
return;
</code></pre>

<p>But you may reconsider your approach. This may not be a very object oriented one.</p>
"
5604520,"<p>You can also use string.substring and get the required output as</p>

<pre><code>string a =s.substring(0,8)
</code></pre>

<p>Like this u can assign for the one you want</p>
"
5616101,"<pre><code>public static int toInt( byte[] bytes ) {
int result = 0;
for (int i=0; i&lt;3; i++) {
  result = ( result &lt;&lt; 8 ) - Byte.MIN_VALUE + (int) bytes[i];
}
return result;
}
</code></pre>
"
5634985,"<p>Maybe it is this what you want:</p>

<pre><code>// Store them into the 16 bit datatype.
char c1_8bit = 'a';
char c2_8bit = 'h';
char two_chars = (c1_8bit &lt;&lt; 8) + c2_8bit;

// extract them
char c1_8bit = two_chars &gt;&gt; 8;
char c2_8bit = two_chars &amp; 0xFF;
</code></pre>

<p>Of course this trick only works with ASCII chars (chars in the range [0-255]). Why? 
Because you want to store your chars this way:<br>
<code>xxxx xxxx  yyyy yyyy</code> with <code>x</code> is char 1 and <code>y</code> is char 2. So this means you have only 8 bit per char. And what is the biggest integer you can make with 8 bit? Answer: 255</p>

<p><code>255</code> = <code>0000 0000 1111 1111</code> (8 bit). And when you are using a char > 255, then you will have this:<br>
<code>256</code> = <code>0000 0001 0000 0000</code> (more than 8 bit), which doesn't fit in the 8 bit you provide for 1 char.</p>

<p>Plus: Keep in mind Java is a language, developed by clever people. They knew what they where doing. <em>Thrust the Java API</em> </p>
"
5702051,"<p>I am trying to get this feature into official SLF4J API. Please support/vote/contribute: <a href=""https://issues.jboss.org/browse/JBLOGGING-62"" rel=""nofollow"">https://issues.jboss.org/browse/JBLOGGING-62</a></p>

<p>(this feature is already implemented by JBoss Logging + Seam Solder, see <a href=""http://docs.jboss.org/seam/3/latest/reference/en-US/html/solder-logging.html"" rel=""nofollow"">http://docs.jboss.org/seam/3/latest/reference/en-US/html/solder-logging.html</a>)</p>

<blockquote>
  <p>11.4. Native logger API</p>
  
  <p>You can also inject a ""plain old"" Logger (from the JBoss Logging API):</p>

<pre><code>import javax.inject.Inject;
import org.jboss.logging.Logger;

public class LogService {

    @Inject
    private Logger log;

    public void logMessage() {
        log.info(""Hey sysadmins!"");
    }

}
</code></pre>
  
  <p>Log messages created from this Logger will have a category (logger name) equal to the fully-qualified class name of the bean implementation class. You can specify a category explicitly using an annotation.</p>

<pre><code>@Inject @Category(""billing"")
private Logger log;
</code></pre>
  
  <p>You can also specify a category using a reference to a type:</p>

<pre><code>@Inject @TypedCategory(BillingService.class)
private Logger log;
</code></pre>
</blockquote>

<p>Sorry for not providing a relevant answer.</p>
"
5864926,"<ol>
<li><p>First convert the byte array to String.</p></li>
<li><p>Then convert the String to integer.</p></li>
</ol>

<p>Example:</p>

<pre><code> byte[] MyByteArray;

 String Str = new String(MyByteArray);

 int Value = Integer.parseInt(Str);
</code></pre>

<p>Enjoy :)</p>
"
5920920,"<p>I will assume that your ""popular"" JARs are well-known open-source projects. This means that they're available in the Maven central repository.</p>

<p>While I believe that using Maven is the <em>best</em> answer to this question, you can also hack something using Ant's <code>&lt;get&gt;</code> task. For example, to download the JUnit JAR (may have typos):</p>

<pre><code>&lt;property name=""dependency.dir"" value=""${basedir}/dependencies""/&gt;

&lt;property name=""junit.jar"" value=""junit-4.8.2.jar""/&gt;
&lt;property name=""junit.url"" value=""http://search.maven.org/remotecontent?filepath=junit/junit/4.8.2/${junit.jar}""/&gt;

&lt;target name=""download.dependencies""&gt;
    &lt;mkdir dir=""${dependency.dir}/&gt;
    &lt;get url=""${junit.url}"" dest=""${dependency.dir}/${junit.jar}""/&gt;
&lt;/target&gt;
</code></pre>

<p>Of course, if you do this then you'll have to carefully configure your build scripts so that you don't do the download with every run. And you'll increase load on the Maven Central repository.</p>
"
5922507,"<p>Soo... seems I have to answer the question myself. Passing the original classpath to the javac task can be achieved with this:</p>

<pre><code>&lt;!-- load environment into the env property --&gt;
&lt;property environment=""env"" /&gt;

&lt;javac srcdir=""${src}"" destdir=""${obj}""
    includes=""**/*.java""
    excludes=""**/package-info.java **/deprecated/*.java""
    includeAntRuntime=""no"" includeJavaRuntime=""no""
    debug=""true"" debuglevel=""source,lines""
&gt;
    &lt;!-- add -classpath option manually --&gt;
    &lt;compilerarg value=""-classpath"" /&gt;
    &lt;compilerarg value=""${env.CLASSPATH}"" /&gt;
    &lt;compilerarg value=""-Xlint""/&gt;
&lt;/javac&gt;
</code></pre>

<p>That does the trick at least so far that the javac task now gets passed the correct classpath. Yet it will still not work, javac now spits these complaints:</p>

<pre><code>[javac] warning: [path] bad path element ""D:\local\lib\java\*"": no such file or directory
[javac] warning: [path] bad path element ""C:\lib\java\*"": no such file or directory
[javac] warning: [path] bad path element ""C:\lib\java\db\*"": no such file or directory
</code></pre>

<p>This is a straight lie, these paths do very much exist. I use them all the time, and if I manually craft an equivalent javac invocation at the shell, it works like a charm. I suspect ant's javac doesn't resolve the jar files in those directories. I have to examine that.</p>

<p><strong>UPDATE</strong></p>

<p>It is indeed as I suspected, the wildcard is not resolved to the individual present jar files by the javac task. I managed to do the resolving manually, and now it works as it should. And that resolving was in fact a struggle on its own. So I'll leave the solution here for those poor souls fighting the same stupidity, hopefully before they ask people that have nothing else to do than bullshitting around (yes Anon, talking about you).</p>

<p>Turns out, ant lacks the most basic functionality that you would expect from a build tool. Also turns out that I'm not the first one to notice that. While solutions are rare, there <em>is</em> a very good post about <a href=""http://weblogs.java.net/blog/emcmanus/archive/2010/09/20/using-javascript-make-apache-ant-less-painful"" rel=""nofollow"">Using JavaScript to make Apache Ant less painful</a>, which really saved my day. Yes, ant can indeed be scripted, which seems not to be widely known, although it is <a href=""http://ant.apache.org/manual/Tasks/script.html"" rel=""nofollow"">not kept secret</a>. You can safely assume, that Javascript is already available without installing additional libraries if you run ant on Java 6.</p>

<p>Soo... down to business. Here is the thing:</p>

<pre><code>&lt;target name=""expand_classpath""&gt;
    &lt;script language=""javascript""&gt;&lt;![CDATA[
        // the original classpath
        var ocp = java.lang.System.getenv(""CLASSPATH"");
        //  ... split in parts
        var ocp_parts = ocp.split(project.getProperty(""path.separator""));

        // where our individual jar filenames go,
        //  together with pure directories from ocp_parts
        var expanded_parts = [ ];

        for each (var part in ocp_parts) {
            if (part.endsWith('*')) {
                var dir = part.substring(0, part.length() - 1);
                var f = new java.io.File(dir);

                // don't know how to construct a java.io.FilenameFilter,
                //  therefore filter the filenames manually
                for each (var file in f.listFiles())
                    if (file.getPath().endsWith('.jar'))
                        expanded_parts.push(file.getPath());
            } else
                expanded_parts.push(part);
        }

        var expanded = expanded_parts.join(project.getProperty(""path.separator""));
        project.setProperty(""classpath.expanded"", expanded);
    ]]&gt;&lt;/script&gt;

    &lt;!-- &lt;echo message=""classpath.expanded = ${classpath.expanded}"" /&gt; --&gt;
&lt;/target&gt;

&lt;target name=""build"" depends=""expand_classpath""&gt;
    &lt;mkdir dir=""${obj}"" /&gt;

    &lt;javac srcdir=""${src}"" destdir=""${obj}""
        classpath=""${classpath.expanded}""
        includes=""**/*.java""
        excludes=""**/package-info.java **/deprecated/*.java""
        includeAntRuntime=""no"" includeJavaRuntime=""no""
        debug=""true"" debuglevel=""source,lines""
    &gt;
        &lt;compilerarg value=""-Xlint""/&gt;
        &lt;compilerarg value=""-Xlint:-fallthrough""/&gt;
    &lt;/javac&gt;
&lt;/target&gt;
</code></pre>
"
5981297,"<p>Use <a href=""http://download.oracle.com/javase/1,5.0/docs/api/java/math/BigDecimal.html#multiply%28java.math.BigDecimal%29"" rel=""nofollow"">BigDecimal multiply</a> method instead like this to safeguard against <strong>potential overlow issues</strong> while handling large double numbers:</p>

<pre><code>BigDecimal temp = (new BigDecimal(fileSize)).multiply(new BigDecimal(c12));
</code></pre>
"
6137786,"<p>You should use SwingUtilities class</p>

<p>see</p>

<p><a href=""http://www.java2s.com/Code/Java/Threads/InvokeExampleSwingandthread.htm"" rel=""nofollow"">http://www.java2s.com/Code/Java/Threads/InvokeExampleSwingandthread.htm</a></p>

<pre><code>    // Report the result using invokeLater().
    SwingUtilities.invokeLater(new Runnable() {
      public void run() {
        resultLabel.setText(""Ready"");
        setEnabled(true);
      }
    });
  }
};
</code></pre>
"
6279877,"<p>If you do not specify ali as an ArrayList(Integer) but just as a general ArrayList, the compiler has no idea of knowing what's inside it! It will just treat everything as a general Object. However, at the moment you try to cast it to a string (which you're doing wrong anyhow, doing (String) is always bad) it will fail, because only at that time it will look what kind of object the 'Object' actually is. It's like doing:</p>

<pre><code>   Object o = new String("""");
   int i = (String)o;
</code></pre>

<p>The compiler will accept this; at runtime the cast will fail!</p>

<p>As a sidenote, this casting process also makes a general ArrayList much slower than a arraylist that has it's contenttype defined. Not to mention that it's much better programming to define what's in an ArrayList.</p>
"
6356361,"<p><a href=""http://download.oracle.com/javase/6/docs/api/java/lang/Process.html#destroy%28%29"" rel=""nofollow"">From the API doc</a>:</p>

<blockquote>
<pre><code>public abstract void destroy()
</code></pre>
  
  <p>Kills the subprocess. The subprocess represented by this Process
  object is forcibly terminated.</p>
</blockquote>

<p>I'd be interested to learn how you managed to miss that method when looking at the API.</p>
"
6597384,"<p>Make your string the result of a hash operation. For example, using your random strings as input:</p>

<pre><code>String input1 = ""Vg78KY"";
String output1 = String.valueOf(input1.hashCode());

String input2 = ""Vg78KZ"";
String output2 = String.valueOf(input2.hashCode());
</code></pre>

<p>output1 and output2 will be completely different.</p>
"
6734598,"<p>Use Regular Expressions (regex[p]) module of your favourite language, construct a Matcher for the pattern <code>\d+\.\d+</code>, apply the matcher for the input string and you get the matching substrings as capture groups.</p>
"
6790020,"<p>Another solution : </p>

<pre><code>    public static void giveHint (int actual, int guess) {
         if(Math.abs(actual - guess) &lt;= 5) {
             System.out.println(""Hot"");
             return;
         }

         System.out.println(""Cold"");
    }
</code></pre>
"
6925296,"<p>I think best way is to use a factory method to create B objects from A objects.</p>

<pre><code>class BFactory
{
    public static B createB(A a)
    {
     B b = new B();
     copy(a,b);

     return b;
    }

    private static &lt;X,Y&gt; void copy(X src,Y dest) throws Exception
    {
        List&lt;Field&gt; aFields = getAllFields(src.getClass());
        List&lt;Field&gt; bFields = getAllFields(dest.getClass());

        for (Field aField : aFields) {
            aField.setAccessible(true);
            for (Field bField : bFields) {
                bField.setAccessible(true);
                if (aField.getName().equals(bField.getName()))
                {
                    bField.set(dest, aField.get(src));
                }
            }
        }
    }

    private static List&lt;Field&gt; getAllFields(Class type)
    {
        ArrayList&lt;Field&gt; allFields = new ArrayList&lt;Field&gt;();
        while (type != Object.class)
        {
            Collections.addAll(allFields, type.getDeclaredFields());
            type = type.getSuperclass();
        }
        return allFields;
    }
}
</code></pre>
"
6927959,"<p>Here they are used for grouping. What's inside one of those expression if of type Float, so you can apply the method <code>floatValue()</code> to the whole content of the parenthesis.</p>

<p>They could be removed here as there is no ambiguity. They would have been mandatory with an expression using another operator of higher preseance order. But according <a href=""http://www.java-tips.org/java-se-tips/java.lang/what-is-java-operator-precedence.html"" rel=""nofollow"">to the docs</a>, there is no such operator, the dot/projector has highest priority. So they are really useless here.</p>

<p>Regards,
 Stéphane</p>
"
7314372,"<p>actually it is really easy to justify ""sync or not to sync""</p>

<p>if your method invocation can <strong>mutate</strong> the internal state of your object, then ""sync"" otherwise no need </p>

<p>simple example </p>

<pre><code>public class Counter {

  private int count = 0; 

  public void incr() {
    count++;
  }

  public int getCount() {
    return count;
  }
}
</code></pre>

<p>in the example above, incr() needs to be synced, since it will change the val of count, while getCount() synchronization is not necessary </p>

<p>however there is another corner case, if the count is java.lang.Long, Double, Object then you need to declare as </p>

<pre><code>private volatile long count = 0;
</code></pre>

<p>to make sure the ref update is atomic </p>

<p>basically that's what you need to think about 99% of time when dealing with multithreading </p>
"
7376202,"<p>The add method takes individual values, not arrays. You can combine List's <a href=""http://download.oracle.com/javase/7/docs/api/java/util/List.html#addAll%28java.util.Collection%29"" rel=""nofollow"">addAll</a> and Arrays' <a href=""http://download.oracle.com/javase/7/docs/api/java/util/Arrays.html#asList%28T...%29"" rel=""nofollow"">asList</a> method (if you want to stick with an ArrayList):</p>

<pre><code>al.addAll(Arrays.asList(Global.Arrayweight));
al.addAll(Arrays.asList(Global.Arraypulse));
</code></pre>
"
8394301,"<p>Abstract methods must be overriden by any subclass that will not be abstract.</p>

<p>So, for example you define an abstract class Log and you force the subclasses to override that method:</p>

<pre><code>public abstract class Log{
  public void logError(String msg){
    this.log(msg,1)
  }
  public void logSuccess(String msg){
    this.log(msg,2)
  }
  public abstract void log(String msg,int level){}
}

public class ConsoleLog{
  public void log(String msg,int level){
    if(level=1){
       System.err.println(msg)
    }else{
       System.out.println(msg)
    }
  }
}
</code></pre>
"
8413003,"<p>Here is the solution:</p>

<pre><code>public class ArrayFilter {

    private static int[][] arr = new int[][] { {1, 2, 3}, {1, 2, 3}, {4, 5, 6}};

    private static void printOddEvens(int[][] matrix) {
        for (int row = 0; row &lt; matrix.length; row++) {
            for (int col = 0; col &lt; matrix[row].length; col++) {
                // rowIndex + value is only even when both are odd or both are even
                // the modulo (%) operator returns the remainder of the division
                if ((row + matrix[row][col]) % 2 == 0) {
                    System.out.print(matrix[row][col] + "" "");
                }
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {
        printOddEvens(arr);
    }
}
</code></pre>

<p>One less future competitor for my job I guess (-;</p>
"
8656188,"<p>There is no need to do the reader loop yourself. The JsonTokener has this built in. E.g.</p>

<pre><code>ttpResponse response; // some response object
BufferedReader reader = new BufferedReader(new    
JSONTokener tokener = new JSONTokener(reader);
JSONArray finalResult = new JSONArray(tokener);
</code></pre>
"
8896984,"<p>To get the contents of an element in JavaScript:</p>

<pre><code>var el = document.getElementById('hiddenDivHL');
var contents = el.innerHTML;
alert(""Found "" + contents.length + "" characters of content."");
</code></pre>

<p>See <a href=""http://jsfiddle.net/zymsys/JzVFe/"" rel=""nofollow"">your example on jsfiddle</a>.</p>

<p>I think the confusion is due to the fact that your question is tagged JavaScript, but the code you posted is Java.  They are different languages, and JavaScript people will only be confused by that parser.  I haven't used Java in years so I can't really help you there.</p>
"
8923703,"<p>Please use the following query.</p>

<pre><code>Select * from maxID order by myId desc limit 1,1;
</code></pre>
"
8925171,"<p>Use constructor <code>ArrayList(int initialCapacity)</code>. This way you can set an initial capacity.</p>
"
8992248,"<p>The below should work for you assuming <strong>Strings</strong> is the array that you are searching within:</p>

<pre><code>Arrays.binarySearch(Strings,""mykeytosearch"",mysearchComparator);
</code></pre>

<p>where mykeytosearch is the string that you want to test for existence within the array.
mysearchComparator - is a comparator that would be used to compare strings.</p>

<p>Refer to <a href=""http://docs.oracle.com/javase/6/docs/api/java/util/Arrays.html#binarySearch%28T%5B%5D,%20T,%20java.util.Comparator%29"" rel=""nofollow"">Arrays.binarySearch</a> for more information.</p>
"
9042028,"<p>Yes, overriding the base class method to create and accommodate new functionality in the derived class is what defines the subtype - polymorphic feature. </p>

<pre><code>class A{methodA...}
class B extends A{methodA...}
A a=new B;
a.methodA(); &lt;&lt;&lt;&lt; this should call B's methodA
</code></pre>
"
9083625,"<p>From <a href=""http://docs.oracle.com/javase/1.4.2/docs/api/java/sql/ResultSetMetaData.html"" rel=""nofollow"">http://docs.oracle.com/javase/1.4.2/docs/api/java/sql/ResultSetMetaData.html</a></p>

<pre><code> ResultSet rs = stmt.executeQuery(""SELECT a, b, c FROM TABLE2"");
 ResultSetMetaData rsmd = rs.getMetaData();
 int numberOfColumns = rsmd.getColumnCount();
</code></pre>

<p>A ResultSet contains metadata which gives the number of rows.</p>
"
9084290,"<p>Its better to build the tree first and then display since this can accomodate any changes later. You can create a Node object like</p>

<pre><code>class Node{
  // level deep of this node, can use to format the display like
  // 4 level deep will have four leading spaces
  private int level;
  // the actual text
  private String text;
  // Parent Node for this, can be null if this is the root node, set this when creating
  private Node parent;
  // children of this Node
  private List&lt;Node&gt; children; 
  // Getters and setters for the above properties....
}
</code></pre>
"
9117929,"<pre><code>if( value | 0x40 ) return 7;
else if( value | 0x20 ) return 6;
else if( value | 0x10 ) return 5;
else if( value | 0x8 ) return 4;
else if( value | 0x4 ) return 3;
else if( value | 0x2 ) return 2;
else if( value | 0x1 ) return 1;
</code></pre>
"
9118396,"<p>Just to add another approach</p>

<pre><code>public static int mostSignificantBit(int b) {
    for (int i = 1 &lt;&lt; 30, j = 0; i &gt; 0; i /= 2, j++) {
           if ((b &amp; i) &gt; 0) {
            return 31-j;
        }
    }
    return -1;
}
</code></pre>
"
10101353,"<pre><code>java.lang.Enum said clearly:
 /**
 * Returns the name of this enum constant, exactly as declared in its
 * enum declaration.
 * 
 * &lt;b&gt;Most programmers should use the {@link #toString} method in
 * preference to this one, as the toString method may return
 * a more user-friendly name.&lt;/b&gt;  This method is designed primarily for
 * use in specialized situations where correctness depends on getting the
 * exact name, which will not vary from release to release.
 *
 * @return the name of this enum constant
 */
 public final String name()
</code></pre>

<p>just like the loft say ,you can use ""name"" method to get the name.
also you can use toString() method.</p>

<p>of course it is just name of this enum constant.</p>
"
10199757,"<p>You could also use the toArray(T[] contents) variant of the toArray() method.  Create an empty array of ints of the same size as the HashSet, and then pass it to the toArray() method:</p>

<pre><code>int[] myarray = new int[hashset.size()];
doSomething(hashset.toArray(myarray));
</code></pre>
"
10693861,"<p>This code I programmed is much faster for very large files:</p>

<pre><code>public String readDoc(File f) {
    String text = """";
    int read, N = 1024 * 1024;
    char[] buffer = new char[N];

    try {
        FileReader fr = new FileReader(f);
        BufferedReader br = new BufferedReader(fr);

        while(true) {
            read = br.read(buffer, 0, N);
            text += new String(buffer, 0, read);

            if(read &lt; N) {
                break;
            }
        }
    } catch(Exception ex) {
        ex.printStackTrace();
    }

    return text;
}
</code></pre>
"
11735209,"<p>The execution flow not shown - may be the 3rd code:</p>

<pre><code>while(c&lt;5){
    Thread.sleep(delay);                
    protocol.onSending(3,prm.PARAMETER_DRIVE_MODE.ordinal(),dataToRead,dataToRead.length);//read drive mode
    System.out.println(Helper.paramDriveMod+""  drive mode is ..........in wile loop"");//here it shows null value  ""
</code></pre>

<p>is executed before the second code </p>

<pre><code>switch(ms)
{
    case READ_PARAMETER_VALUE:  // read parameter values
        switch(prm){
            case PARAMETER_DRIVE_MODE:  // paramet drive mode
                Helper.paramDriveMod =(Integer.toString(((USB_RXBuffer[4]&lt;&lt; 8)&amp;0xff00)));
</code></pre>
"
12826550,"<pre><code>if(antennaHeight.compareTo(Double.valueOf(0))&gt;=0)
</code></pre>

<p>In the above code,
<code>antennaHeight.compareTo(Double.valueOf(0))</code>  --- this 'll return int, comparing this with 0 gives the solution.</p>
"
13208462,"<p>You could check if the internet is on</p>

<pre><code>public class ConnectionDetector {

private Context _context;

public ConnectionDetector(Context context){
    this._context = context;
}

public boolean isConnectingToInternet(){
    ConnectivityManager connectivity = (ConnectivityManager) _context.getSystemService(Context.CONNECTIVITY_SERVICE);
      if (connectivity != null)
      {
          NetworkInfo[] info = connectivity.getAllNetworkInfo();
          if (info != null)
              for (int i = 0; i &lt; info.length; i++)
                  if (info[i].getState() == NetworkInfo.State.CONNECTED)
                  {
                      return true;
                  }

      }
      return false;
}
</code></pre>

<p>}</p>
"
13518283,"<p>This will solve purpose in fast and simple code.
It gives result in <code>O(n)</code>.</p>

<pre><code>void removeduplicate(char *str)
{
    int checker = 0;
    int cnt = 0;
    for(int i = 0; i &lt; strlen(str); i++)
    {
        int val = *(str + i) - (int)'a';
        if ((checker &amp; (1 &lt;&lt; val)) &gt; 0) continue;
        else {
            *(str + cnt) = *(str + i);
            cnt++;
        }
        checker |= (1 &lt;&lt; val);
    }
    *(str+cnt) = '\0';
}
</code></pre>
"
15193070,"<p>In java ,there is a rigorous way to convert a long to int</p>

<p>not only lnog can convert into int,any type of class extends Number can convert to other Number type in general,here I will show you how to convert a long to int,other type vice versa.</p>

<pre><code>Long l = 1234567L;
int i = org.springframework.util.NumberUtils.convertNumberToTargetClass(l, Integer.class);
</code></pre>
"
15819247,"<pre><code>package p;

import java.sql.Connection;

public final class ProtectedTest {
    String currentUser;
    Connection con = null;

    protected Object ProtectedMethod(){
        return new Object();
    }
    public ProtectedTest(){
    }
    public ProtectedTest(String currentUser){
        this.currentUser = currentUser;
    }
}
</code></pre>

<hr>

<pre><code>package p;

public class CallProtectedTest {
    public void CallProtectedTestMethod() {
        System.out.println(""CallProtectedTestMethod called :::::::::::::::::"");
        ProtectedTest p = new ProtectedTest();
        Object obj = p.ProtectedMethod();
        System.out.println(""obj &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;""+obj);
    }
}
</code></pre>

<hr>

<pre><code>package p1;

import p.CallProtectedTest;

public class CallProtectedTestFromp2 {
    public void CallProtectedTestFromp2Method(){
        CallProtectedTest cpt = new CallProtectedTest();
        cpt.CallProtectedTestMethod();
    }

    public static void main(String[] args) {
        CallProtectedTestFromp2 cptf2 = new CallProtectedTestFromp2();
        cptf2.CallProtectedTestFromp2Method();
    }
}
</code></pre>
"
16011142,"<p>Create this <code>class</code>: </p>

<pre><code>public class StdOutErrLog {

private static final Logger logger = Logger.getLogger(StdOutErrLog.class);

public static void tieSystemOutAndErrToLog() {
    System.setOut(createLoggingProxy(System.out));
    System.setErr(createLoggingProxy(System.err));
}

public static PrintStream createLoggingProxy(final PrintStream realPrintStream) {
    return new PrintStream(realPrintStream) {
        public void print(final String string) {
            logger.info(string);
        }
        public void println(final String string) {
            logger.info(string);
        }
    };
}
}
</code></pre>

<p>Call this in your code</p>

<pre><code>StdOutErrLog.tieSystemOutAndErrToLog();
</code></pre>
"
16048274,"<p>Try <strong>LinkedHashMap</strong>, sample:</p>

<pre><code>Map&lt;String,String&gt; map = new LinkedHashMap&lt;String,String&gt;();    
map.put('1','linked');map.put('1','hash');    
map.put('2','map');map.put('3','java');.. 
</code></pre>

<p>output:   </p>

<blockquote>
  <p>keys: 1,1,2,3</p>
  
  <p>values: linked,hash, map, java</p>
</blockquote>
"
16308564,"<pre><code>for (int i = 0; i &lt; s.length(); i++)
    if (s.charAt(i) == ' ') {
        your code....
    }
</code></pre>
"
16414602,"<pre><code>mysz = mysz.replace("" "","""");
</code></pre>

<p>First with space, second without space. </p>

<p>Then it is done. </p>
"
16834636,"<p>The code you want is</p>

<pre><code>str.replaceAll(""\\s"","""");
</code></pre>

<p>This will remove all the white spaces.</p>
"
16849815,"<blockquote>
<pre><code>if (v &lt; 0) System.out.println(""negative""); else System.out.println(""positive"");
</code></pre>
</blockquote>
"
17160489,"<p>Simple codes and test output:</p>

<pre><code>class NextPalin
{
public static void main( String[] args )
{
    try {
        int[] a = {2, 23, 88, 234, 432, 464, 7887, 7657, 34567, 99874, 7779222, 2569981, 3346990, 229999, 2299999 };
        for( int i=0; i&lt;a.length; i++)
        {
            int add = findNextPalin(a[i]);
            System.out.println( a[i] + ""  +  ""  + add +  ""  = ""  + (a[i]+add)  );
        }
    }
    catch( Exception e ){}
}

static int findNextPalin( int a ) throws Exception
{
    if( a &lt; 0 ) throw new Exception();
    if( a &lt; 10 ) return a;

    int count = 0, reverse = 0, temp = a;
    while( temp &gt; 0 ){
        reverse = reverse*10 + temp%10;
        count++;
        temp /= 10;
    }

    //compare 'half' value
    int halfcount = count/2;
    int base = (int)Math.pow(10, halfcount );
    int reverseHalfValue = reverse % base;
    int currentHalfValue = a % base;

    if( reverseHalfValue == currentHalfValue ) return 0;
    if( reverseHalfValue &gt; currentHalfValue )  return  (reverseHalfValue - currentHalfValue);

    if(  (((a-currentHalfValue)/base)%10) == 9 ){
        //cases like 12945 or 1995
        int newValue = a-currentHalfValue + base*10;
        int diff = findNextPalin(newValue);
        return base*10 - currentHalfValue + diff;
    }
    else{
        return (base - currentHalfValue + reverseHalfValue );
    }
}
}

$ java NextPalin
2  +  2  = 4
23  +  9  = 32
88  +  0  = 88
234  +  8  = 242
432  +  2  = 434
464  +  0  = 464
7887  +  0  = 7887
7657  +  10  = 7667
34567  +  76  = 34643
99874  +  25  = 99899
7779222  +  555  = 7779777
2569981  +  9771  = 2579752
3346990  +  443  = 3347433
229999  +  9933  = 239932
2299999  +  9033  = 2309032
</code></pre>
"
17362683,"<pre><code>int[] arr= new int[]{-5,-5,-6,-6,-6};
Set&lt;Integer&gt; newSet = new HashSet&lt;Integer&gt;();
for(int i=0;i&lt;arr.length;i++)
  newSet.add(Math.abs(arr[i]));    

System.out.println(newSet.size());
</code></pre>
"
17581092,"<p>One that I use often:</p>

<pre><code> Integer.parseInt(""1234"");
</code></pre>

<p>Point is, there are plenty of ways to do this, all equally valid. As to which is most optimum/efficient, you'd have to ask someone else.</p>
"
17940873,"<pre><code>class Fordemo
{


public static void main(String args[])
{

int k,x=0;

for(k=1;k&lt;=10;k++)
{

x=k*2;

System.out.println(""multiple of 2 is ""+x);

}}}
</code></pre>
"
17983769,"<p>hey I think that you just copy your compiled class files and copy the jre folder and make the following as the content of the batch file and save all together any windows machine and just double click</p>

<pre><code>@echo
setpath d:\jre
d:
cd myprogfolder
java myprogram
</code></pre>
"
18231457,"<p>worked for me with this code. May be its for Java 1.7</p>

<pre><code>    TrustManager[] trustAllCerts = new TrustManager[]{new X509TrustManager() {

        @Override
        public X509Certificate[] getAcceptedIssuers() {
            // TODO Auto-generated method stub
            return null;
        }

        @Override
        public void checkServerTrusted(X509Certificate[] arg0, String arg1)
                throws CertificateException {
            // TODO Auto-generated method stub

        }

        @Override
        public void checkClientTrusted(X509Certificate[] arg0, String arg1)
                throws CertificateException {
            // TODO Auto-generated method stub

        }
    }};

    // Install the all-trusting trust manager
    try {
        SSLContext sc = SSLContext.getInstance(""TLS"");
        sc.init(null, trustAllCerts, new SecureRandom());
        HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());
    } catch (Exception e) {
        ;
    }
</code></pre>
"
18981016,"<p>In Java, you can use char value with "":</p>

<pre><code>char quotes ='""';

String =""""+quotes+""ROM""+""""+quotes+"""";
</code></pre>
"
19238577,"<p>I did it this way. it's easy :)</p>

<pre><code>Date d1 = jDateChooserFrom.getDate();
Date d2 = jDateChooserTo.getDate();

Calendar day1 = Calendar.getInstance();
day1.setTime(d1);

Calendar day2 = Calendar.getInstance();
day2.setTime(d2);

int from = day1.get(Calendar.DAY_OF_YEAR);
int to = day2.get(Calendar.DAY_OF_YEAR);

int difference = to-from;
</code></pre>
"
19419132,"<p>You should covert String to float. It is working.</p>

<pre><code>float result = 0;
 if (TextUtils.isEmpty(et.getText().toString()) {
  return;
}

result = Float.parseFloat(et.getText().toString());

tv.setText(result); 
</code></pre>
"
19627286,"<p>This is the method which i used to convert the integer to string.Correct me if i did wrong.</p>

<pre><code>/**
 * @param a
 * @return
 */
private String convertToString(int a) {

    int c;
    char m;
    StringBuilder ans = new StringBuilder();
    // convert the String to int
    while (a &gt; 0) {
        c = a % 10;
        a = a / 10;
        m = (char) ('0' + c);
        ans.append(m);
    }
    return ans.reverse().toString();
}
</code></pre>
"
19995823,"<p>In my case problem was resolved by clicking <code>Remove All Breakpoints</code>  </p>
"
20045785,"<p>A more groovyesque approach would be to use <strong>inject</strong> in combination with <strong>metaClass</strong>:</p>

<p>I would to love to say:</p>

<pre><code>String myInput=""This string is FORBIDDEN""
myInput.containsAny([""FORBIDDEN"",""NOT_ALLOWED""]) //=&gt;true
</code></pre>

<p>And the method would be:</p>

<pre><code>myInput.metaClass.containsAny={List&lt;String&gt; notAllowedTerms-&gt;
   notAllowedTerms?.inject(false,{found,term-&gt;found || delegate.contains(term)})
}
</code></pre>

<p>If you need <strong>containsAny</strong> to be present for any future String variable then add the method to the class instead of the object:</p>

<pre><code>String.metaClass.containsAny={notAllowedTerms-&gt;
   notAllowedTerms?.inject(false,{found,term-&gt;found || delegate.contains(term)})
}
</code></pre>
"
20463245,"<p>How about this way, where :</p>

<pre><code>String a[] = new String[]{""Hello"",""Hi"",""faridi"",""yello"",""this works""};
String c[] = new String[]{""yello"",""tis works""};

String b[] = a;

for (int i = 0; i &lt; b.length; i++) {

    System.out.println(b[i]);

    } 

b = c;
for (int i = 0; i &lt; b.length; i++) {

    System.out.println(b[i]);

    }



}
</code></pre>

<p>The first printf loop will give you the following:</p>

<pre><code>Hello
Hi
faridi
yello
this works
</code></pre>

<p>The second one will give you:</p>

<pre><code>yello
this works
</code></pre>
"
21015884,"<p>check this at my blog hope this going to help <a href=""http://codeheaven.wordpress.com/"" rel=""nofollow"">http://codeheaven.wordpress.com/</a></p>

<p><strong>Here is the code from above link:</strong></p>

<pre><code>public class ArrayReversing {
public static void main(String a[]){
int arr[]={ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8  };
int temp;
int as = arr.length;
int k = as – 1;

System.out.println(“Array Before Reversing”);
printArray(arr);//method used to print array on screen

ArrayReverse://using loops with title
for(int i = 0; i &lt; arr.length/2 ; i++){
temp = arr[k];// swaping
arr[k] = arr[i];
arr[i] = temp;

k–;
}
System.out.println(“Array After Reversing”);
printArray(arr); // calling the method printArray to print the elements of array
}

static void printArray(int ar[]){
PrintArray:
for(int l:ar)
System.out.println(l);
}

}
</code></pre>

<p><strong>Output:</strong></p>

<pre><code>Array Before Reversing
1
2
3
4
5
6
7
8
Array After Reversing
8
7
6
5
4
3
2
1
</code></pre>
"
21273086,"<p>I would recommend Datastax java driver for Cassandra <a href=""http://www.datastax.com"" rel=""nofollow"">http://www.datastax.com</a>.</p>

<p>For JPA like support try my mapping tool.
<a href=""https://github.com/valchkou/cassandra-driver-mapping"" rel=""nofollow"">https://github.com/valchkou/cassandra-driver-mapping</a></p>

<p>Annotation driven.<br>
No mapping files, no scripts, no configuration files.<br>
No need for DDL scripts.<br>
Schema automatically synchronized with the entity definition.</p>

<p>Usage sample:</p>

<pre><code>   Entity entity = new Entity();
   mappingSession.save(entity);
   entity = mappingSession.get(Entity.class, id);
   mappingSession.delete(entity); 
</code></pre>

<p>available on maven central</p>

<pre><code>   &lt;dependency&gt;
      &lt;groupId&gt;com.valchkou.datastax&lt;/groupId&gt;
      &lt;artifactId&gt;cassandra-driver-mapping&lt;/artifactId&gt;          
    &lt;/dependency&gt;
</code></pre>
"
21631441,"<p>There are two ways to do it..Say <strong>String==null</strong> or <strong>string.equals()</strong>..</p>

<pre><code>public class IfElse {

    public int ifElseTesting(String a){
        //return null;
        return (a== null)? 0: a.length();
    }

}

public class ShortCutifElseTesting {

    public static void main(String[] args) {

        Scanner scanner=new Scanner(System.in);
        System.out.println(""enter the string please:"");
        String a=scanner.nextLine();
        /*
        if (a.equals(null)){
            System.out.println(""you are not correct"");
        }
        else if(a.equals(""bangladesh"")){
            System.out.println(""you are right"");
        }
        else
            System.out.println(""succesful tested"");

        */
        IfElse ie=new IfElse();
        int result=ie.ifElseTesting(a);
        System.out.println(result);

    }

}
</code></pre>

<p>Check this example..Here is an another example of shortcut version of If Else..</p>
"
22415544,"<p>You can make your pattern case insensitive by doing:</p>

<pre><code>Pattern p = Pattern.compile(""[a-z]+"", Pattern.CASE_INSENSITIVE);
</code></pre>
"
24096843,"<pre><code>        String expression = ""^[a-zA-Z]*$"";
        CharSequence inputStr = str;
        Pattern pattern = Pattern.compile(expression);
        Matcher matcher = pattern.matcher(inputStr);
        if(matcher.matches())
        {
              //if pattern matches 
        }
        else
        {
             //if pattern does not matches
        }
</code></pre>
"
24369473,"<p>I don't think Java returns 51 in this case. I am running Java 8 on a Mac and I get:</p>

<pre><code>-13 % 64 = -13
</code></pre>

<p>Program:</p>

<pre><code>public class Test {
    public static void main(String[] args) {
        int i = -13;
        int j = 64;
        System.out.println(i % j);
    }
}
</code></pre>
"
25400408,"<blockquote>
  <p>This class is for simple Indian price formatter</p>
</blockquote>

<pre><code>public class Test {

public static void main (String a[]){
    System.out.println(priceFormatter(""10023""));    
}
/**
 * This method is to convert the price into Indian price
 * separator format
 * @param inputPrice
 * @return
 */
public static String priceFormatter(String inputPrice){
    try {
        if(!isNumeric(inputPrice)){
            return inputPrice;
        }
        // to check if the number is a decimal number
        String newPrice = """",afterDecimal = """";
        if(inputPrice.indexOf('.') != -1){
            newPrice = inputPrice.substring(0,inputPrice.lastIndexOf('.'));
            afterDecimal = inputPrice.substring(inputPrice.lastIndexOf('.'));
        }else{
            newPrice = inputPrice;
        }
        int length = newPrice.length();
        if (length &lt; 4) {
            return inputPrice;
        }
        // to check whether the length of the number is even or odd
        boolean isEven = false;
        if (length % 2 == 0) {
            isEven = true;
        }
        // to calculate the comma index
        char ch[] = new char[length + (length / 2 - 1)];
        if (isEven) {
            for (int i = 0, j = 0; i &lt; length; i++) {
                ch[j++] = inputPrice.charAt(i);
                if (i % 2 == 0 &amp;&amp; i &lt; (length - 3)) {
                    ch[j++] = ',';
                }
            }
        } else {
            for (int i = 0, j = 0; i &lt; length; i++) {
                ch[j++] = inputPrice.charAt(i);
                if (i % 2 == 1 &amp;&amp; i &lt; (length - 3)) {
                    ch[j++] = ',';
                }
            }
        }
        // conditional return based on decimal number check
        return afterDecimal.length() &gt; 0 ? String.valueOf(ch) + afterDecimal : String.valueOf(ch);

    } catch(NumberFormatException ex){
        ex.printStackTrace();
        return inputPrice;
    }
      catch (Exception e) {
        e.printStackTrace();
        return inputPrice;
    }
}

}
</code></pre>
"
25477918,"<pre><code>// you can also use imports, for example:
import java.util.*;

// you can use System.out.println for debugging purposes, e.g.
// System.out.println(""this is a debug message"");

    class Solution {
        public int solution(int[] A) {
            // write your code in Java SE 8
            Set&lt;Integer&gt; s = new HashSet&lt;Integer&gt;(); 
            int index = 0;
            for (int i = 0; i &lt; A.length; i++) {
                if (!s.contains(A[i])) {
                    s.add(A[i]);
                    index = i;
                }
            }
            return index;
        }
    }
</code></pre>
"
25920877,"<blockquote>
  <p>public String removeDuplicateChar(String data){  </p>

<pre><code>  String rs="""";
   for(char a:data.toCharArray()){
       if(!rs.contains(""""+a)){
          rs+=a;
       }
   }
   return rs;        
</code></pre>
  
  <p>}</p>
</blockquote>
"
26322334,"<pre><code>class Node
{
  int data;
     Node link;

     public Node()
     {
         data=0;
         link=null;
        }

     Node ptr,start,temp;

    void create()throws  IOException
     {
         int n;
         BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
         System.out.println(""Enter first data"");
         this.data=Integer.parseInt(br.readLine());
         ptr=this;
         start=ptr;
         char ins ='y';
         do
         {
             System.out.println(""Wanna Insert another node???"");
             ins=(char)br.read();
             br.read();
             if(ins=='y')
             {
                 temp=new Node();
                 System.out.println(""Enter next data"");
                 temp.data=Integer.parseInt(br.readLine());
                 temp.link=null;
                 ptr.link=temp;
                 temp=null;
                 ptr=ptr.link;
                }
            }while(ins=='y');
        }

public static void main(String args[])throws IOException
     {
       Node first= new Node();
       first.create();
}
}
</code></pre>
"
26728125,"<p>It could be a simple jar problem. may be you are using a old <code>mysql-connector-java-XXX-bin.jar</code> which is not supported by your current mysql version. i used   <code>mysql-connector-java-5.1.18-bin.jar</code> as i am using <code>mysql 5.5</code> and this problem is resolved for me.</p>
"
26998530,"<p>The OP did not state what real-world problem he/she was trying to solve.  There may be another approach that will successfully solve the issue.</p>

<p>I came across a similar problem when I was trying to find matches in a case independent manner.  I used <code>toUpperCase()</code> to try to normalize the strings before comparison using <code>String.indexOf()</code>, and found problems with this character.</p>

<p>I found no locales in which <code>toUpperCase()</code> of the ß character resulted in anything but SS (although admittedly I did not try all possible locales).</p>

<p>My solution was to use <code>String.toLowerCase()</code> for the matching.  In my data set, there were no incidents where doing that would change the number of characters.</p>

<p>EDIT TO ADD - A code sample (as requested):</p>

<pre><code>String[] matches = ""SS,ss,ß"".split("","");
System.out.printf(""%12s %5s %5s %5s\n"", "" "", matches[0], matches[1], matches[2]);
String g = ""Großenhain"";
for (String g1 : new String[]{g, g.toUpperCase(), g.toLowerCase(), g.toUpperCase().toLowerCase()})
{
    System.out.printf(""%12s"", g1);
    for (String match : matches)
        System.out.printf("" %5d"", g1.indexOf(match));
    System.out.println();
}
</code></pre>

<p>(I threw in the toUpperCase().toLowerCase() just for fun, not as a possible solution.)</p>

<p>Output:</p>

<pre><code>                SS    ss     ß
  Großenhain    -1    -1     3
 GROSSENHAIN     3    -1    -1
  großenhain    -1    -1     3
 grossenhain    -1     3    -1
</code></pre>
"
27046307,"<p>it works for me !!</p>

<p>in mysql table</p>

<pre><code>DATETIME
</code></pre>

<p>in entity:</p>

<pre><code>private Date startDate;
</code></pre>

<p>in process:</p>

<pre><code>objectEntity.setStartDate(new Date());
</code></pre>

<p>in preparedStatement:</p>

<pre><code>pstm.setDate(9, new java.sql.Date(objEntity.getStartDate().getTime()));
</code></pre>
"
27524459,"<p>you can use DateUtils class in org.apache.commons.lang3.time package</p>

<pre><code>int addMinuteTime = 5;
Date targetTime = new Date(); //now
targetTime = DateUtils.addMinutes(targetTime, addMinuteTime); //add minute
</code></pre>
"
27563905,"<p>you can use OR concatenation</p>

<pre><code>switch(var)
{
  case 1 || 2 :   expression; break;
  case 3 :   expression; break;
  case 4 :   expression; break;

}  
</code></pre>
"
28141764,"<p>You can't <em>possibly</em> copy an iterator - it's basically meaningless. For some, this is obvious from the Iterator interface, but let's demonstrate it with a concrete example. In fact, let's demonstrate with an example about <em>concrete</em>.</p>

<p><img src=""http://i.stack.imgur.com/iV0Hn.jpg"" alt=""bar with pieces of concrete""></p>

<p>This is a picture of a concrete iterator over a bar of concrete. Iteration in our case means applying the crow bar to break a piece off of the bar. Now, note that:</p>

<ul>
<li>The bar is not a collection of pieces (though some of it has faults): We're creating pieces as we iterate.</li>
<li>The result of an iteration via the iterator (of <code>next()</code>) can never be the result of another iteration of the bar. The result has been removed from it.</li>
<li>The iteration may produce a different piece depending on the weather, on the amount of force you apply, or maybe on some kind of thermal noise (think: randomness).</li>
<li>The result of an iteration via the iterator (of <code>next()</code>) can never be the result of another iteration of the bar - as the probability space of exact iteration result is continuous, and no specific resulting piece has a non-zero probability measure.</li>
</ul>

<p>Any of the above should convince you not to try to ""copy the iterator"", that's silly...</p>
"
28843134,"<p>Don't touch the hibernate part. The model objects have the same structure as entity, so modify model and not in Entity. Do the changes in child model as below.</p>

<pre><code>@JsonIgnore
private ParentModel parentModel;
</code></pre>

<p>So after successful insertion the data retrieved won't be recursive.</p>

<p>It worked for me.</p>
"
29511857,"<pre><code>public class Student implements Comparable&lt;Student&gt;{

    public String studentName;

    public Student(String name,DayInWeek weekDay){
        this.studentName = name;
        this.studentDays = weekDay;
    }

    public enum DayInWeek {
        SATURDAY,SUNDAY, MONDAY,TUESDAY, WEDNESDAY,THURSHDAY,FRIDAY
    }
    public DayInWeek studentDays;

    @Override
    public int compareTo(Student s1) {
        if(s1.studentDays.ordinal() &lt; this.studentDays.ordinal())
            return 1;
        else if(s1.studentDays.ordinal() &gt; this.studentDays.ordinal())
            return -1;
        else
            return 1;
    }
}
</code></pre>
"
29812052,"<pre><code>public static StringBuffer removeDuplicateCharsInPlace(StringBuffer sb)
{   
    if (sb==null|| sb.equals(""""))
        return new StringBuffer(""String empty or null."");

    if(sb.length()==1)
        return sb;

    // iterate through the entire string
    for (int i=0;i&lt;sb.length();i++)
    {   
        //Save one character as string
        String subString = sb.substring(i, i+1);

        // Find the first index of the selected character
        int startIndex = sb.indexOf(subString);
        int nextIndex;

        do
        {   //find the next index of the selected character
            nextIndex = sb.indexOf(subString, startIndex + 1);

            // If found, delete the character
            if(nextIndex!=-1)
                sb.deleteCharAt(nextIndex);

            // Set the next start of the index to the last found index - 1 (minus one because a character has been deleted)
            startIndex=nextIndex-1;

        }while(nextIndex!=-1);  // Keep repeating until we keep finding repeated characters' indexes
    }
    return sb;
}
</code></pre>
"
29917397,"<p>OracleXETNSListener  - this service has to be started if it was disabled.</p>

<pre><code>run -&gt; services.msc 
</code></pre>

<p>and  look out for that services</p>
"
30000144,"<pre><code>import java.net.*;

public class demo{

  public static void main(){

       String Data = ""data=Hello+World!"";
       URL url = new URL(""http://localhost:8084/WebListenerServer/webListener"");
       HttpURLConnection con = (HttpURLConnection) url.openConnection();
       con.setRequestMethod(""POST"");
       con.setDoOutput(true);
       con.getOutputStream().write(Data.getBytes(""UTF-8""));
       con.getInputStream();

    }

}
</code></pre>
"
30354388,"<p>Another way to control headers and allow Spring to do the serialization is like this:</p>

<pre><code>@RequestMapping(method=RequestMethod.GET, value=""foo/bar"")
public ResponseEntity&lt;Bar&gt; fooBar() {
    Bar bar = barService.getBar();

    HttpHeaders headers = new HttpHeaders();
    headers.setContentType(MediaType.APPLICATION_JSON);
    headers.add(""Some-Custom-Header-Key"", ""12345"");
    return headers;

    return new ResponseEntity&lt;Bar&gt;(bar, headers, HttpStatus.OK);
}
</code></pre>
"
2471102,"<p><code>Collection</code> and <code>List</code> are interfaces. You can take any Implementation of the <code>List</code> interface: <code>ArrayList LinkedList</code> and just cast it back to a <code>Collection</code> because it is at the Top</p>

<p>Example below shows casting from <code>ArrayList</code></p>

<pre><code>public static void main (String args[]) {
    Collection c = getCollection();
    List myList = (ArrayList) c;
}

public static Collection getCollection()
{
    Collection c = new ArrayList();
    c.add(""Apple"");
    c.add(""Oranges"");
    return c;
}
</code></pre>
"
2572355,"<p>Because if <code>B extends C</code>, then B might have stuff that isn't in C (like instance variables you initialize in the constructor that are not in new C())</p>
"
2582042,"<p>Using wonderful classes in Collections framework is the better than using arrays.
But in case your question is from a ""quizzing"" perspective, here is what you should do.
Create your own resize method such as:</p>

<pre><code>  int[] oldArray = {1,2,3};

  int oldSize = java.lang.reflect.Array.getLength(oldArray);
  Class elementType = oldArray.getClass().getComponentType();
  Object newArray = java.lang.reflect.Array.newInstance(
         elementType,newSize);
  int preserveLength = Math.min(oldSize,newSize);
  if (preserveLength &gt; 0)
      System.arraycopy (oldArray,0,newArray,0,preserveLength);

  oldArray = newArray;
</code></pre>
"
2678791,"<p>Using getters and setters is the way to go.</p>

<ul>
<li>It's commonly accepted practise</li>
</ul>

<p>So other programmers are more likely to understand your code.</p>

<ul>
<li>It gives the class author options in the future</li>
</ul>

<p>Say you want to prevent someone setting a to null. Expose the member and you can never do it.</p>

<p>As for whether to use <code>this</code> - I try to use <code>this</code> consistently to make it very clear to anyone else which are instance members and which are local variables at any point - also helps avoid accidental shadowing, but I think this is less important and more a style thing. </p>

<p>Also - <code>this.a</code> is an instance member (one per instance) not a class member (one-per-class, would be static). Another reason to use <code>this</code> to be clear.</p>
"
2678829,"<p>I would go with</p>

<pre><code>System.out.println(getA());
</code></pre>

<p>and</p>

<pre><code>setA(b + c);
</code></pre>

<p>for the simple reason that if you wanted to generally change the way an attribute is accessed or enforce any constraints as to what you could set a variable to, you can just change the getA or setA methods.</p>

<p>I don't like using this unless I need to explicitly distinguish between variables of the same name.</p>
"
2678862,"<p>Solution 2 or 3 are best practice as they provide encapsulation to the field.  For example, what if the field <code>'a'</code> is a user's postcode and your application has a new requirement to always return the postcode as uppercase.  With solutions 2 or 3 this becomes trivial.  E.g.</p>

<pre><code>private String postcode;
public String getPostcode()
{
   return postcode;
}
</code></pre>

<p>becomes</p>

<pre><code>private String postcode;
public String getPostcode()
{
   return postcode != null? postcode.toUppercase() : null;
}
</code></pre>

<p>and you will only have made the change in one place instead of anywhere where the field is accessed.  The addition of <code>this</code> is purely up to your own personal style or project standards.  Personally, I don't like it as it is unnecessary and just gets in the way of readability, but for others it makes the owner of method/field clearer.</p>
"
2679112,"<p><strong>Using <code>setA(b + c)</code> is silly.</strong></p>

<p>Getters and setters are part of the <em>interface</em>. Methods already have full access to the state. Be frank about it.</p>

<p><strong>If you're worried that you might break an invariant then your class is too complex for you.</strong> (Admit it and refactor.)</p>
"
2724796,"<p>You could try using <code>screen</code> (Launch screen, then launch the java program, then close[not quit] the screen)</p>
"
2735532,"<p>For starters, I don't think Hibernate can map a <code>List&lt;String&gt;</code>. However, it can map a list of other entities.</p>

<p>So if your code was something like this:</p>

<pre><code>@Entity
public class Foobar {

    private List&lt;EntityObject&gt; uuids;
    ...
}
</code></pre>

<p>And the <code>EntityObject</code> has a <code>String</code>-property called <code>str</code>, the criteria could look like this:</p>

<pre><code>List&lt;Foobar&gt; returns = (List&lt;Foobar&gt;) session
                .createCriteria.(Foobar.class, ""foobars"")
                .createAlias(""foobars.uuids"", ""uuids"")
                  .add(Restrictions.like(""uuids.str"", ""%abc123%""))
                .list();
</code></pre>
"
2742134,"<p>There is a wrongly typed question
java -Xms128m -Xms256m myapp.jar  </p>

<p>this is supposed to be 
java -Xms128m <strong>-Xmx256m</strong> myapp.jar  </p>

<p>Then the following line explains your query</p>

<p>The heap size may be configured with the following VM options:</p>

<pre><code>* -Xmx&lt;size&gt; - to set the maximum Java heap size
* -Xms&lt;size&gt; - to set the initial Java heap size
</code></pre>

<p>Which settings will apply for JVM Minimum memory (Xms option) : 128m or 256m ?
256 Mb would be your maximum Memory 
128 Mb would be initial set Memory.</p>

<p>Along with this, if you want to determine programmatically you can use the following Sample code</p>

<pre><code> Runtime runtime = Runtime.getRuntime();

    NumberFormat format = NumberFormat.getInstance();

    StringBuilder sb = new StringBuilder();
    long maxMemory = runtime.maxMemory();
    long allocatedMemory = runtime.totalMemory();
    long freeMemory = runtime.freeMemory();
</code></pre>
"
2780103,"<p>JSONObject typically uses <code>HashMap</code> internally to store the data. So, you can use it as Map in your code. </p>

<p>Example,</p>

<pre><code>JSONObject obj = JSONObject.fromObject(strRepresentation);
Iterator i = obj.entrySet().iterator();
while (i.hasNext()) {
   Map.Entry e = (Map.Entry)i.next();
   System.out.println(""Key: "" + e.getKey());
   System.out.println(""Value: "" + e.getValue());
}
</code></pre>
"
2889606,"<p>You are passing <code>Country.class</code> which is a <code>Class</code> object. How is it a <code>Model</code> object?</p>
"
3092079,"<p>Use this</p>

<pre><code>int targetNumber = (int) (Math.round(Math.random()* 10))
</code></pre>
"
3171626,"<p>I would propose to wrap a private method and use function object pattern:</p>

<p>Interface for function object:</p>

<pre><code>interface Filter&lt;T&gt;{
    boolean eligible(T t);
}
</code></pre>

<p>Count higher wrapper method to show the idea:</p>

<pre><code>public int countHigher(final SomeObject a) 
{ 
 return coun(a, new Filter&lt;SomeObject&gt;()
           {   
                 public boolean eligible(SomeObject b){
                      return a.compareTo(b) == -1;
                 }
           }); 
} 
</code></pre>

<p>private helper method that counts eligible objects</p>

<pre><code>private int coun(SomeObject a, Filter&lt;SomeObject&gt; filter){ 
     //...
}
</code></pre>
"
3513536,"<p>You have to ""wire"" (or ""inject"") the exception handler in your spring beans. I'm not sure which of your Spring bean actually needs the exception handler. </p>

<p>Personally, I use <code>default-autowire=""byName""</code>, which cause my exceptionHandler to be wired in my Controller class automatically. Your approach actually use manual wiring. So you need to find out which bean should actually use the exception handler. Have you tried (just on top of my head):</p>

<pre><code>&lt;bean class=""org.springframework.ws.server.endpoint.adapter.MarshallingMethodEndpointAdapter""&gt;
    &lt;constructor-arg ref=""marshaller""/&gt;
    &lt;property name=""exceptionHandler"" ref=""exceptionHandler"" /&gt;
&lt;/bean&gt;
</code></pre>

<p>Or you could just add the autowired mechanism of Spring and let it wire the beans automatically. :)</p>
"
3515656,"<p>Your question is too vague without sample code. There is no <code>finally</code> in C++. </p>

<p><strong>EDIT</strong>  In general, you don't want to use <code>exceptions</code> as a means to control the flow. <code>Exceptions</code> are supposed to be used only for exceptional (unexpected situations) cases.</p>
"
3813736,"<p>Define a Java <a href=""http://cupi2.uniandes.edu.co/site/images/recursos/javadoc/j2se/1.5.0/docs/api/java/awt/geom/Line2D.html"" rel=""nofollow"">Line2D</a>, and then use <code>yourLine2D.contains(double x, double y)</code>.</p>
"
4051942,"<p>It isn't pretty, but it works. If you have access apache commons i would suggest that use that</p>

<pre><code>if (val.length() &lt; 8) {
  for (int i = 0; i &lt; val - 8; i++) {
    val = ""0"" + val;
  }
}
</code></pre>
"
4356923,"<p>Since the only way to do this is to keep a set value for each word, you'd be using arrays, or some other form of data storage. </p>

<p>Here is an example where you just keep the words, and their corresponding values in two arrays (note, they must be in the same order, so the first word corresponds with the first number, etc). </p>

<pre><code>public static String[] words = {""cat"",""dog"",""banana""};
public static int[] value = {3,4,5};
public static void main(String[] args){
    if(valOf(""Cat"") &gt; valOf(""Dog"")){
        System.out.print(""Cat is greater than Dog"");
    }
    else{
        System.out.print(""Cat is not greater than Dog"");
    }
}
public static int valOf(String str){
    for(int x=0;x&lt;words.length;x++){
        if(str.equalsIgnoreCase(words[x])){
            return value[x];
        }
    }
    return -1;
}
</code></pre>
"
4415839,"<pre><code>if(hm.put(""John"",""1"") != null)
{
  // ""John"" was already a key in the map.  The sole value for this key is now ""1"".
}
</code></pre>
"
4415873,"<pre><code>List&lt;Object&gt; yourElements = new ... // 10000000
for(Object O : yourElements) {
 if(myMap.get(O.key)==null) {
    myMap.put(O.key,O);
 }
}
</code></pre>
"
4469173,"<p>This syntax is not allowed in java</p>

<pre><code>memory + turn = memory+turn + count;
</code></pre>
"
4964798,"<p>nothing is wrong</p>

<pre><code>String int2string(int i)

User findUser4Id(long id)

void startHibern8();
</code></pre>

<p>wow! this website doesn't like these method names! I got captchaed!</p>
"
4994116,"<p>As JB nizet suggested I am wondering if the answer might be something such as a single query, possibly with a temporary table, or anonymous intermediate table (I don't know what google supports to this end) using a group by (thus eliminating extra transfer of data and the need for Java to do the processing). I am thinking something along the lines of</p>

<pre><code>CREATE TEMPORARY TABLE temp1 AS
SELECT * FROM car_journey
WHERE start_date &gt; ? AND
end_date &lt; ?

SELECT car_id, journey_id
FROM temp1 t1, (
  SELECT car_id, MIN(start_date)
  FROM temp1
  GROUP BY car_id 
) t2
WHERE t1.car_id = t2.car_id AND
t1.start_date = t2.start_date
</code></pre>

<p>With the temporary table you can greatly reduce the time for the secondary query, since theoretically the data will be much smaller than the full table.</p>

<p>Finally, again not knowing what google supports, I would ask if you have indices defined on the appropriate columns, which may help speed up the query.</p>
"
5020101,"<p>Yes, as others have said, initialize inFile to null</p>

<p>However, you will also need to check that inFile actually points a valid file and is not NULL when you get to your loop 
e.g.</p>

<pre><code>while(inFile!=null &amp;&amp; inFile.hasNext()) {
}
</code></pre>

<p>Otherwise, you perhaps want to place the whole try-catch in a different loop to make the user select another file? Or just exit the program if the file is invalid? The missing element to the question is how you wish to handle invalid files. Does the program exit or re-prompt the user?</p>
"
5377209,"<p>Interface members are always modified/implemented outside itself (in a class or struct), hence they are implicitly public and no access modifiers are allowed with it.
Even the members of interface are publicly implemented.
However if you wish to make a member private in a class that is providing its implementation then you need to implement the interface explicitly.</p>

<pre><code>interface IMyIF {
int MyMeth(int x);
}
//then it is legal to implement IMyIF as shown here:
class MyClass : IMyIF {
int IMyIF.MyMeth(int x) {
return x / 3;
}
}
</code></pre>

<p>an explicit implementation gives you a way to implement an interface method so that it is not a public member of the class that provides the implementation.</p>
"
5464656,"<p>You could just keep a reference to the latest entity in  a separate table (with one row). Something like:</p>

<pre><code>@Entity
public class CurrentElement {

    @OneToOne        
    private Element currentVersion;

    public static Element getCurrentVersion(EntityManager em) {
         return em.createQuery(""select x from Element x "").getSingleResult().currentVersion;
    }

    public static void setCurrentVersion(EntityManager em, Element newVersion) {
         em.remove(getCurrentVersion(em));
         CurrentElement ce = new CurrentElement();
         ce.currentVersion = newVersion;
         em.persist(ce);
    }
}
</code></pre>
"
6082778,"<p>I did it like this in my Jtable its autorefreshing after 300 ms;</p>

<pre><code>DefaultTableModel tableModel = new DefaultTableModel(){
public boolean isCellEditable(int nRow, int nCol) {
                return false;
            }
};
JTable table = new JTable();

Timer t = new Timer(300, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                addColumns();
                remakeData(set);
                table.setModel(model);
            }
        });
        t.start();

private void addColumns() {
        model.setColumnCount(0);
        model.addColumn(""NAME"");
            model.addColumn(""EMAIL"");} 

 private void remakeData(CollectionType&lt; Objects &gt; name) {
    model.setRowCount(0);
    for (CollectionType Objects : name){
    String n = Object.getName();
    String e = Object.getEmail();
    model.insertRow(model.getRowCount(),new Object[] { n,e });
    }}
</code></pre>

<p>I doubt it will do good with large number of objects like over 500, only other way is to implement TableModelListener in your class, but i did not understand how to use it well. look at <a href=""http://download.oracle.com/javase/tutorial/uiswing/components/table.html#modelchange"" rel=""nofollow"">http://download.oracle.com/javase/tutorial/uiswing/components/table.html#modelchange</a></p>
"
6151557,"<p>best u move the init into the enum, just like:</p>

<pre><code>public enum Example{ 
  value1(1), 
  value2(2), 
  value3(66);

  private final int internalValue;

  Example(int value){ 
       this.internalValue = value; 
  }

  public int getInternalValue(){ 
       return this.internalValue; 
  }
}
</code></pre>

<p>Although this is really simple example, you can add any code to the constructor later on and have more complex decisions based on the actual object itself.</p>
"
6274355,"<p>This is the interface for the character in the game which interact with each other.</p>

<pre><code>public interface Character{ ... }
</code></pre>

<p>This is the interface if the character is able to attack or not.</p>

<pre><code>public interface Fightable{
    public void attack(Character character);
}
</code></pre>

<p>These are the two classes in your game which implements both the interfaces.</p>

<pre><code>public class Hero implements Character, Fightable
{
    // heros version of implemented method

    public int attack(Character character)
    {
        // idealy when hero attacks, the health value will be reduced by 15 of what it is.
        character.setHealth(-15);
    }
}

public class Villon implements Character, Fightable
{
    // rival version of implemented method
    public int attack(Character character)
    {
        // idealy when rival attacks, the health value will be reduced by 15 of what it is.
        character.setHealth(- 15);
    }
}
</code></pre>
"
6306123,"<pre><code>public static void main(String[] args) 
{
    int n = 10;
    int k = 1;
    boolean breakOuter = false;
    for (int i = 1; i &lt;= n; i++) 
    {
    for (int j = 1; j &lt;= i; j++)
    {
        System.out.print("" "" + k);
        if (n==k)
        {
        breakOuter = true;
        break;
        }
        k++;
    }
    if(breakOuter) break;
    System.out.println(""\n"");
    }
}
</code></pre>
"
6350401,"<p>Quick way of renaming. But its not removing the "",""</p>

<pre><code>   private void convertFile(String fileold) {
                    int len = fileold.length();
                    int newlen = len - 4;
                    String Subvalue = fileold.substring(0, newlen);
                    String str2 = Subvalue + "".xls"";
                    File oldfile = new File(fileold);
                    File newfile = new File(str2);
                    oldfile.renameTo(newfile);
   }
</code></pre>
"
6447067,"<p>The <code>==</code> operator checks if both sides refer to the same object. Two strings that have the same contents don't (usually) refer to the same object, see below.</p>

<pre><code>String s = """";
String t = """";
if (s == t){
  //false! s and t refer to different objects
}
if (s.equals(t) &amp;&amp; t.equals(s)){ //these two are equivalent
  //true!
}
s = t;
if (s == t){
  //now they refer to the same object, so true!
}
</code></pre>
"
6661062,"<p>Because there are so few values in the array, just <em>count</em> how many of each type there are and use that to repopulate your array. We also make use of the fact that the values are consecutive from 0 up - making it match the typical java int loop.</p>

<p>The whole sorting algorithm requires only three lines of code:</p>

<pre><code>public static void main(String[] args)
{
    int[] array = { 2, 0, 1, 2, 1, 2, 1, 0, 2, 0 };

    // Line 1: Define some space to hold the totals
    int[] counts = new int[3]; // To store the (3) different totals

    // Line 2: Get the total of each type
    for (int i : array) counts[i]++;

    // Line 3: Write the appropriate number of each type consecutively back into the array:
    for (int i = 0, start = 0; i &lt; counts.length; start += counts[i++]) Arrays.fill(array, start, start + counts[i], i);

    System.out.println(Arrays.toString(array));
}
</code></pre>

<p>Output:</p>

<pre><code>[0, 0, 0, 1, 1, 1, 2, 2, 2, 2]
</code></pre>

<p>At no time did we refer to <code>array.length</code>, no care how long the array was. It iterated through the array touching each element just once, making this algorithm O(n) as required.</p>
"
6777565,"<p>Obviously you need to use <strong>EDT</strong> if you need to update the UI after finishing the checkMails() method.</p>

<p>And you are looking for <strong>asynchronous</strong> (other one is synchronous) way.</p>

<p>Certainly you are looking for <a href=""http://download.oracle.com/javase/6/docs/api/javax/swing/SwingUtilities.html#invokeLater%28java.lang.Runnable%29"" rel=""nofollow"">SwingUtilities.html#invokeLater(java.lang.Runnable)</a></p>

<p>According to my knowledge, this is the correct way to do background task for Swing.</p>

<pre><code>Runnable checkMail = new Runnable() {
    public void run() {
        while(true) {
            checkMails();
            Thread.sleep(120000); //but this is very naive approach to use sleep, consider using timer ;)
        }
    }
};

SwingUtilities.invokeLater(checkMail);
</code></pre>

<blockquote>
  <p>invokeLater(Runnable doRun): Causes doRun.run() to be executed asynchronously on the AWT event dispatching thread.</p>
</blockquote>

<p>and</p>

<blockquote>
  <p>invokeAndWait(Runnable doRun): Causes doRun.run() to be executed synchronously on the AWT event dispatching thread.</p>
</blockquote>
"
6807841,"<p>The <code>toString</code> method is inherited by every Class in Java, from <code>java.lang.Object</code>. I don't see how you can avoid not implementing (actually overriding) <code>Object.toString</code>. Also, methods are defined for each class, and not for each object.</p>

<p>You could use a inheritance hierarchy to solve this, by having your classes inherit from a common class that overrides the default <code>toString</code> implementation. This implementation may use reflection to reflect on the fields of the class (not the parent class, but actually the class for the current object), and generate the string.</p>

<p>You can also investigate the use of bytecode weaving if you do not want to override the method at all. Personally, I do not think that the effort invested in bytecode weaving is not worth it, especially when you could have overridden <code>toString</code>.</p>
"
7096030,"<p>String sqlQuery = ""select name from tbl where id in"" + sqlFormatedList(list);</p>

<pre><code>private String sqlFormatedList(List&lt;Integer&gt; list){
 StringBuilder sb = new StringBuilder();
 sb.append(""("");
 for (Integer i : list){
   sb.append(i+"","");
 }
 sb.deleteCharAt(sb.length() -1);
 sb.append("")"");
 return sb.toString();
}
</code></pre>
"
7191232,"<p>not that I actually suggest doing this, but sth like this...</p>

<pre><code>find . -empty -type f
</code></pre>

<p>...will be hard to beat with java. You could conceivably loop outside your jvm, find non empty files with a shell script and read the list from java.</p>
"
7463508,"<p>Can you remove the headers element in @RequestMapping and try.. </p>

<p>Like </p>

<pre>
<code>
@RequestMapping(value=""/getTemperature/{id}"", method = RequestMethod.GET)
</code>
</pre>

<p>I guess spring does an 'contains check' rather than exact match for accept headers. But still, worth a try to remove the headers element and check.</p>
"
7694002,"<pre><code>str = ""25"";
int i = Integer.valueOf(str).intValue();
</code></pre>

<p>or</p>

<pre><code>int i = Integer.parseInt(str);
</code></pre>
"
8026396,"<p>Have you tried to set the <code>timezone</code> and <code>locate</code> attribute?
Otherwise, you can create a converter object that converts the date.
This is a tutorial to create a custom converter: <a href=""http://www.roseindia.net/jsf/customconverter.shtml"" rel=""nofollow"">http://www.roseindia.net/jsf/customconverter.shtml</a></p>
"
8149687,"<pre><code>int[] combinedArrays = new int[one.length + two.length];
int index = 0;
for (int i : one) {
    combinedArarys[index] = one[i];
    index++;
}

for (int i : two) {
    two[index] = two[i];
    index++;
}
</code></pre>
"
8271365,"<p>Sometimes it's useful to store default value in map as a value of <code>Null</code> key. I don't know other cases. But it's legal so why you shouldn't if it can make some profit?</p>
"
8422432,"<pre><code>public int[][] tiles, temp;

// Add values to tiles, wherever you end up doing that, then:
System.arraycopy(tiles, 0, temp, 0, tiles.length);

for(int row = 0; row &lt; tiles.length; row++) // Loop over rows
  for(int col = 0; col &lt; tiles[row].length; col++) // Loop over columns
    tiles[col][row] = temp[row][col]; // Rotate
</code></pre>

<p>That should do it for you.</p>
"
8469690,"<p>I suspect they're looking for something like the following:</p>

<pre><code>import java.util.*;
public class Tester
{
    public static void main(String args[])
    {
        String ss[] = {""Bill"", ""Mary"", ""Lee"", ""Agnes"", ""Alfred"", ""Thomas"", ""Alvin"", ""Bernard"", ""Ezra"", ""Herman""};
        Arrays.sort(ss);
        int length = ss.length;
        for(int i = 0; i &lt; length ; i++)
            System.out.println(ss[i]+""\t""+ss[length-1-i]);
    }
}
</code></pre>
"
8755109,"<p>In general it is a bad practice to concenate Strings with <code>+</code> ant with <code>concat()</code>. If you want to create String use the <code>StringBuilder</code> instead. <a href=""http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/StringBuilder.html"" rel=""nofollow"">http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/StringBuilder.html</a></p>
"
8769555,"<p>It seems that SimpleDateFormat interprets the last part as an integer, and not as decimal part. The obvious solution is to make sure there are always three digits at the end, and right pad with 0 if not.</p>

<p>Then use the pattern <code>yyyy-MM-dd HH:mm:ss.SSS</code> to parse it.</p>
"
8794984,"<p>You're looking for <a href=""http://www.regular-expressions.info/charclass.html"" rel=""nofollow"">character classes</a>.</p>

<ul>
<li>Big letter: [A-Z]</li>
<li>Small letter: [a-z]</li>
<li>Digit: [0-9] or \d</li>
<li>Special character: [^A-Za-z0-9]  (That is, not any of the others, where <code>^</code> negates the class)</li>
</ul>

<hr>

<p>If you want to test for 'this' or 'that', you can combine those ranges.  For example, Big or Small letters would be <code>[A-Za-z]</code>.</p>
"
8800904,"<p><code>\w</code>: is used for matching alpha-numeric (alphabets can be either big or small) <br/>
<code>\W</code>: is used for matching special characters</p>

<p>I think this RegEx will be helpful for you:</p>

<pre><code>[\w|\W]+
</code></pre>

<p>Here's a good <a href=""http://gskinner.com/RegExr/"" rel=""nofollow"">RegEx Simulator</a>, you can use it for building your own RegEx.</p>
"
8830909,"<p>this is mostly used in Java beans like below.</p>

<p><code>public Class MyBean{</code></p>

<p><code>private int var1;</code></p>

<p><code>public void setVar1(int pVar1){</code></p>

<p><code>this.var1=pvar1;</code></p>

<p><code>}</code></p>

<p><code>public int getVar1(){</code></p>

<p>return var1;`</p>

<p><code>}</code></p>

<p><code>}</code></p>

<p>benefits are as below</p>

<p><strong>1.</strong> with this we can achieve <strong>Encapsulation</strong></p>

<p><strong>2.</strong> it is called as <strong>DTO (Data Transfer Object)</strong> design pattern.
it is used to transfer data from one layer to another layer in MVC based applications.
like u can get user entered data from form (by using getters) and u can use the same data to insert into database(by using setter) and vice verca.
latest frameworks (SPring )providing it as inbuilt functionality.</p>
"
8975602,"<p>If all values you will add are pointers, you can use a void pointer:</p>

<pre><code>std::vector&lt;void *&gt; myVector;
</code></pre>
"
9081591,"<p>you can use the <code>char</code> datatype instead of <code>String</code> for <code>x</code> to get your work done if the symbols are single character</p>

<p><code>(x == '$') &amp;&amp; (row &lt;= 10)</code></p>
"
9081729,"<p>I think all the above answers are jumping to conclusion, yes I agree with most of them but your problem is that you dont know what x is.</p>

<p>You need to log it out but try adding a line </p>

<pre><code>System.out.println(x);

You will see what is being compared. 

A test shows what you have could work;


import org.junit.Test;
import static org.junit.Assert.assertTrue;

public class BooleanLogicTest {

@Test
public void testLogical() {
  String x = "" "";
  boolean result = x == "" "";
  assertTrue(""Could be true"", result);
}

@Test
public void testCompare() {
  String x = "" "";
  boolean result = "" "".equals(x);
  assertTrue(""Could be true"", result);
}

@Test
public void testLogicalX() {
  String x = ""*"";
  boolean result = x == ""*"";
  assertTrue(""Could be true"", result);
} 

@Test
public void testCompareX() {
  String x = ""*"";
  boolean result = ""*"".equals(x);
  assertTrue(""Could be true"", result);
  System.out.println(x);
}
</code></pre>

<p>}</p>
"
9211220,"<p>You could also use </p>

<pre><code>if(inputStr.indexOf(""Positive"") &gt; 0){
   //Word is found
}
</code></pre>
"
9276552,"<p>It is not possible to specify ""some object which has a method called <code>void generate()</code>"" in Java in the way that you have in mind.</p>

<p>In principle you could do this with reflection: you just pass in an <code>Object</code> and at runtime you check if there is a <code>void generate()</code> method that you can call. This means however that you are throwing away the type safety that the compiler provides; I don't recommend using this solution.</p>

<pre><code>public void run(Object obj) throws NoSuchMethodException, IllegalAccessException, InvocationTargetException {
    Method m = obj.getClass().getMethod(""generate"");
    m.invoke(obj);
}
</code></pre>
"
9414007,"<p>Well I am no Java programmer (although I do use C++ which is similar in script), but could you do this with a boolean value named ""DEBUG_MODE"" in your main class and pass it to other classes as an argument? I would say use a macro but I don't think Java supports this.</p>

<pre><code>class Program
{    
    bool DUBUG_MODE = true;
    public static void main (String args[]) //Please excuse any poor coding here. Again, I am not used to Java.
    {
        //Your code here.
        if(DEBUG_MODE) throw e;

    }
}
</code></pre>

<p>I hope I was able to help. In C++ I would do this with a macro but it doesn't sound like you have those at your disposal. Also I am assuming that you are okay with having this notion of a debug option in your program that is not necessarily related to the compiler. If you wanted certain things to be ""activated"" while your compiler was in debug mode, that might be a bit more complicated.</p>
"
9497566,"<pre><code>Map&lt;String, List&gt; mainMap = new HashMap&lt;String, List&gt;();

for(int i=0; i&lt;something.size(); i++){
  Set set = getSet(...); //return different result each time
  mainMap.put(differentKeyName, new ArrayList(set));
}
</code></pre>
"
9514664,"<p>1) Start using coding formats. Its advisable to use <strong>objStudent</strong> rather than some 'st'.</p>

<p>2) There is no use of creating <strong>int sidevalue</strong>. Directly use a switch case as give below:</p>

<pre><code>switch(Integer.parseInt(attribute.getValue()))
{
  case 1:
    ----
.
.
.
</code></pre>

<p>and so on...</p>

<pre><code>}
</code></pre>
"
9605353,"<p>Here is an alternative. What it does is: Get which week you want (n), and the other parameters, and return the date of the day in that week. Since Calendar gives the date of the previous month (for example 29th of February instead of 7th of March, since the 1st week of March collides with last week of Feb), the function computes the 2nd week if the date goes beyond 7 or multiples of it for each week thereof. Hope that helps.</p>

<pre><code>public static int getNthWeekDay (int n, int day, int month, int year) {
    Calendar calendar = Calendar.getInstance();

    calendar.set(Calendar.DAY_OF_WEEK, day);
    calendar.set(Calendar.MONTH, month);
    calendar.set(Calendar.WEEK_OF_MONTH,n);
    calendar.set(Calendar.YEAR, year);
    if (calendar.get(Calendar.DATE) &gt; n * 7) {
        calendar.set(Calendar.DAY_OF_WEEK,day);
        calendar.set(Calendar.MONTH, month);
        calendar.set(Calendar.WEEK_OF_MONTH,day+1);

    }
    return calendar.get(Calendar.DATE);
}
</code></pre>
"
9941889,"<p>Continuing @gonadarian's answer, it seems <code>Eclipse</code> uses port <code>127.0.0.1</code> for debug purposes. This port is also called <code>localhost</code>. The way this error can be removed is by ensuring that there are no processes or services running on the above ports. The way to do this, on Linux is:  </p>

<ol>
<li><p>As <code>root</code>, enter the command:<br>
<code>netstat -tulpn | grep 127.0.0.1</code>  </p></li>
<li><p>If there are processes running on the above port, it will show up in the format:<br>
<code>process_id/process name</code>.  </p></li>
<li><p>Kill the above processes like so: <code>kill -KILL process_id</code>  </p></li>
<li><p>Restart the computer for these changes to take effect. The error should no longer occur.</p></li>
</ol>
"
10316110,"<p>The comparator should actualy return 0 only when the two references refer to the same object, like this:</p>

<pre><code>public int compare(String s1,String s2) {
   if (s1!=s2) { 
      int result = s1.compareTo(s2);
      if (result == 0) {
          return -1;
      } else {
          return result;
      }
   } else {
      return 0;
   } 
}
</code></pre>
"
10772702,"<p>A good developer will always try to avoid a <code>NullPointerException</code>, hence the best answer would be to use <code>""Something"".equals(myInput)</code>.</p>
"
11170379,"<p>My suggestion is to check length of the file. <code>if file.length() returns 0</code> that means file doesn't exist.</p>
"
11587694,"<p>Try this</p>

<pre><code>           JComboBox CB = new JComboBox();
           CB.setPreferredSize(new Dimension(int, int)); 
           p.add(CB);// which p is a JPanel
</code></pre>
"
12181889,"<p>Alternatively you could make the class static, so that all your global variables are static by default without repetition of the static keyword.</p>

<pre><code>static class Global {

    public int globalStuff = 0;

}
</code></pre>
"
12860891,"<p>Follow below stepts that will resolve problem for sure.</p>

<p>1) Install latest version of jdk</p>

<p>2) Open eclipse.ini file in editplus (search for that file in eclipse folder)</p>

<p>3) write first two lines like below with your java path and your java version</p>

<pre><code>-vm
C:\Program Files\Java\jdk1.6.0_12\bin\javaw.exe

after writing that two lines your eclipse.ini files looks like this

-vm

C:\Program Files\Java\jdk1.6.0_12\bin\javaw.exe

-startup
plugins/org.eclipse.equinox.launcher_1.1.0.v20100507.jar
--launcher.library
plugins/org.eclipse.equinox.launcher.win32.win32.x86_1.1.0.v20100503
-product
.
.
.
.
.
</code></pre>
"
13953187,"<p>No need to do anything just chnage in POM file like below</p>

<pre><code>&lt;configuration&gt;
    &lt;maxmemory&gt;1024M&lt;/maxmemory&gt;
&lt;/configuration&gt;
</code></pre>
"
14151509,"<p>Here is a very simple Java program that will run out of space</p>

<pre><code>public class OutOfMemory {

    public static void main(String[] arg) {

        List&lt;Long&gt; mem = new LinkedList&lt;Long&gt;();
        while (true) {
            mem.add(new Long(Long.MAX_VALUE));
        }
    }
}
</code></pre>
"
14283644,"<p>I had to do this for a class assignment and disliked the answers here. They were either overly complex, or too simple and inefficient. I like having a happy medium, so I threw this together:</p>

<pre><code>public static int[] exercise6(int[] array) {
    int del = 0;
    for( int i = 0; i &lt; array.length - (1 + del); ++i ) {
        for( int j = array.length - (1 + del); j &gt; i; --j ) {
            if( array[i] == array[j]) {
                for( int k = j; k &lt; array.length - (1 + del); ++k ) {
                    array[k] = array[k + 1];
                }
                array[array.length - 1] = 0;
                del++;
            }
        }
    }
    return Arrays.copyOfRange(array, 0, array.length - del);
</code></pre>

<p>If you don't need to truncate the array itself you can always just return array instead.</p>
"
14884481,"<p>chubbsondubs came closest to giving a correct answer to this question</p>

<p>What he missed is that his algorithm is incorrect because it contains two tests, when only one is needed. The correct code requires only 3 statements and is as follows:</p>

<pre><code>   public boolean zLibaryContains( String title ) {
       books[bookCount] = title;
       int xBook = 0;
       while( true )
           if( books[xBook].getTitle().equals( title ) )
               return xBook != bookCount;
           else xBook++;              
   }
</code></pre>

<p>Noticeably smaller and faster than all other solutions. Simplify, simplify, simplify.</p>

<p>Object-oriented code is a crutch to support poor designs that would otherwise be too complex to understand. The goal is write code that is so easy to understand and maintain that OO is unnecessary and would make the program <em>worse</em>. When your program can be improved by adding OO, it means you are doing something wrong to begin with.</p>
"
15089100,"<p>In case you are attempting to have your app behave differently depending on the orientation check out another question like this related to Android orientation that I answered <a href=""http://stackoverflow.com/questions/9566633/how-to-use-onconfigurationchanged-and-newconfig-orientation-configuration-o/15085272#15085272"">here</a>.</p>

<p>It utilises <a href=""http://vapor-api.com"" rel=""nofollow"">Vapor API</a>, a new jQuery style framework I recently released for Android which is designed to simplify app dev.</p>

<p>In the examples I show how you can listen out for global callbacks related to the orientation of a device, and have your app execute custom code depending on the current orientation of the user's device. For example:</p>

<pre><code>$.hook(""orientationLandscape"").hookIn(
     new $$hookee&lt;Activity&gt;(this){

         @Override
         public void call(String hookName, VaporBundle args){
             // landscape code here
         }

     });

$.hook(""orientationPortrait"").hookIn(
     new $$hookee&lt;Activity&gt;(this){

         @Override
         public void call(String hookName, VaporBundle args){
             // portrait code here
         }

     });
</code></pre>

<p>You can also combine things like hook listeners using <a href=""http://vapor-api.com/core/vaporx"" rel=""nofollow"">VaporX</a> too, which is basically jQuery style selectors for Android dev.</p>

<p>Hope it helps someone!</p>
"
16801226,"<p>I was getting the same error on my ubuntu machine because of a mishap with the /etc/hosts file. I had commented out the mapping of localhost to 127.0.0.1, and to complicate matters further there was a swap file hanging around.</p>

<p>This was the first line of my /etc/hosts:</p>

<pre><code>127.0.0.1       #localhost
</code></pre>

<p>Deleting the # fixed the problem, whereas rebooting understandably had not.</p>
"
17681135,"<p>I've reached to a pretty nice precision just dealing with cents.</p>

<p>Here is the class:</p>

<pre><code>public class Money implements Comparable&lt;Money&gt; {

private static Locale CURRENT_LOCALE = new Locale(""pt"", ""br"");

private Long amount = 0L;

public Money() { }

public Money(long cents) {
    super();
    this.setAmount(cents);
}

public Money(float cents) {
    super();
    this.setAmount(cents);
}

public Money(double cents) {
    super();
    this.setAmount(cents);
}

public void setAmount(Long cents) {
    this.amount = cents;
}

public void setAmount(Float amount) {
    this.amount = new Long(Math.round(amount * 100));
}

public void setAmount(Double amount) {
    this.amount = Math.round(amount * 100);
}

public Double amount() {
    return ((double) this.amount/100);
}

public Money add(Money portion) {
    if (amount != null) {
        this.amount += portion.amount;
    }
    return this;
}

public Money subtract(Money portion) {
    if (amount != null) {
        this.amount -= portion.amount;
    }
    return this;
}

public Money multiplyBy(double times) {
    this.amount = Math.round(this.amount * times);
    return this;
}

public Money divideBy(double divisor) {
    this.amount = Math.round(this.amount / divisor);
    return this;
}

@Override
public String toString() {
    return NumberFormat.getCurrencyInstance(currentLocale()).format(amount());
}

@Override
public int compareTo(Money value) {
    return (int) (amount - value.amount);
}

protected static void currentLocale(Locale locale) {
    CURRENT_LOCALE = locale;
}

protected static Locale currentLocale() {
    return CURRENT_LOCALE;
}
</code></pre>

<p>}</p>
"
17847296,"<p>To define Global Variable you can make use of static Keyword</p>

<pre><code>public final class Tools {
  public static int a;
  public static int b;
}
</code></pre>

<p>now you can access a and b from anywhere by calling</p>

<pre><code>Tools.a;
Tools.b;
</code></pre>

<p>Yoy are right...specially in J2ME...
  You can avoid NullPointerException by putting inside your MidLet constructor
(proggy initialization) this line of code:</p>

<pre><code>new Tools();
</code></pre>

<p>This ensures that Tools will be allocated before any instruction
that uses it.</p>

<p>That's it!</p>
"
18269098,"<pre><code>Class ArrayList&lt;E&gt;
</code></pre>

<p>Syntax</p>

<pre><code>ArrayList&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
</code></pre>

<p>You replace ""Integer"" with the class that the list is of.
An application can increase the capacity of an ArrayList instance before adding a large number of elements using the ensureCapacity operation. This may reduce the amount of incremental reallocation.
E represents an Element, which could be any class.
<code>ensureCapacity</code> is used to ensure that the list has enough capacity to take in the new elements. It's called internally every time you add a new item to the list. As the name suggests, <code>ArrayList</code> uses an Array to store the items. So when the array is initialized, it's given an arbitrary length, say 10. Now once you've added 10 items, if you go to add the 11th item, it'll crash because it exceeds the arrays capacity. Hence, <code>ensureCapacity</code> is called (internally) to ensure that there's enough space. So if you were adding the 11th element, the array size might be, say, doubled, to 20.</p>
"
18332395,"<p>You can also wrap the ""datasource"" bean with the ""IsolationLevelDataSourceAdapter"", by simply doing this:</p>

<pre><code>&lt;bean id=""dataSource"" class=""org.springframework.jdbc.datasource.IsolationLevelDataSourceAdapter""&gt;
    &lt;property name=""isolationLevelName"" value=""ISOLATION_READ_COMMITTED""/&gt;
    &lt;property name=""targetDataSource"" ref=""_dataSource""/&gt;
&lt;/bean&gt;
</code></pre>

<p>where ""_dataSource"" is a ref to an actual datasource.</p>
"
19198018,"<pre><code>private Map&lt;Integer, Integer&gt; getUniqueArray(int[] duplicateArray) {
    Map&lt;Integer, Integer&gt; uniqueMap = new HashMap&lt;&gt;();
    int count = 0;
    for (int element : duplicateArray) {
        count = 0;
        if (uniqueMap.get(element) != null) {
            ++count;
        }
        if (count == 0) {
            uniqueMap.put(element, count);
        }
    }
    return uniqueMap;
}
</code></pre>
"
20304911,"<pre><code>    function shuffle(str) {
      return str.split("""").sort(function () {return Math.random()-0.5}).join("""");
    }
</code></pre>

<p>This is the easiest way to shuffle a string. The function call sorts ascending when positive or descending when negative. The Math.random function yields numbers between 0 and 1 and when 0.5 is subtracted, the result is randomly positive or negative. Thus pairs are randomly put in descending or ascending order. The split function converts a string into an array and the join function puts the final array back into a string.</p>

<p>Hope that helps </p>
"
20716790,"<pre><code>//Just use a List
//create the list
public final List&lt;Object&gt; myObjects;

//instantiate the list
myObjects = new ArrayList&lt;Object&gt;();

//add objects to the list
Object object = myObject;
myObjects.add(object);

//remove the object calling this method if you have more than 1 objects still works with 1
//object too.

private void removeObject(){
int len = myObjects.size();
for(int i = 0;i&lt;len; i++){
Objects object = myObjects.get(i);
myObjects.remove(object);
}
}
</code></pre>
"
21141582,"<pre><code>/**
   *
   * @param values { x0, y0, r0, x1, y1, r1 }
   * @return true if circles is intersected
   */
  public static boolean isCircleIntersect(double... values)
  {
    /* check using mathematical relation: ABS(R0-R1) &lt;= SQRT((x0-x1)^2+(y0-y1)^2) &lt;= (R0+R1) */
    if (values.length == 6)
    {
      /* get values from first circle */
      double x0 = values[0];
      double y0 = values[1];
      double r0 = values[2];
      /* get values from second circle */
      double x1 = values[3];
      double y1 = values[4];
      double r1 = values[5];
      /* returun result */
      return (Math.abs(r0 - r1) &lt;= Math.sqrt(Math.pow((x0 - x1), 2) + Math.pow((y0 - y1), 2)))
              &amp;&amp; (Math.sqrt(Math.pow((x0 - x1), 2) + Math.pow((y0 - y1), 2)) &lt;= (r0 + r1));
    }
    else
    {
      /* return default result */
      return false;
    }
  }
</code></pre>
"
21670770,"<p>byte=<code>8 bit</code></p>

<p>short=<code>2 byte</code>=<code>16 bit</code></p>

<p>int=<code>4 byte</code> =<code>32 bit</code></p>

<p>long    =<code>8 byte</code>    =<code>64 bit</code></p>

<p>float    =<code>4 byte</code>    =<code>32 bit</code></p>

<p>double    =<code>8 byte</code>    =<code>64 bit</code></p>

<p>easy calculation:</p>

<p>2 byte    =<code>1 short</code></p>

<p>2 int    =<code>1 long</code></p>

<p>2 short    =<code>1 int</code></p>

<p>float    =<code>int</code></p>

<p>2 float    =<code>double</code></p>
"
21694732,"<p>This is simple java code for decimal to binary using only primitive type int, hopefully it should help beginners.</p>

<pre><code>import java.io.BufferedReader;
import java.io.InputStreamReader;

public class DtoB {
    public static void main(String[] args) {

        try { // for Exception handling of taking input from user.

            System.out.println(""Please enter a number"");

            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            String input = br.readLine();       
            int x = Integer.parseInt(input);

            int bin = 0;
            int p = 1;
            while (x &gt; 0) {
                int r = x % 2;
                bin = (r * p) + bin;
                x = x / 2;
                p *= 10;
            }
            System.out.println(""Binary of "" + input + "" is = "" + bin);
        } catch (Exception e) {
            System.out.println(""Please enter a valid decimal number."");
            System.exit(1);
            e.printStackTrace();
        }
    }
}
</code></pre>
"
21848714,"<p>Use XPath as bellow</p>

<pre><code>  DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
  DocumentBuilder builder = factory.newDocumentBuilder();
  Document doc = builder.parse(""&lt;Your xml doc uri&gt;"");
  XPathFactory xPathfactory = XPathFactory.newInstance();
  XPath xpath = xPathfactory.newXPath();
  XPathExpression expr = xpath.compile(""//Type[@type_id=\""4218\""]"");
  NodeList nl = (NodeList) expr.evaluate(doc, XPathConstants.NODESET);
</code></pre>
"
22526492,"<pre><code>-Djava.net.preferIPv4Stack=true 
</code></pre>

<p>worked for me on Windows 8 and Eclipse Kepler Service Release 1 version.</p>
"
22613059,"<p>In case of <strong>eclipse</strong>.</p>

<p>Just a hint. Your code could be correct, but your jre configuration not. I ran into the the same error, nothing helped, until i checked the eclipse settings.</p>

<p>Make sure, that you set your execution environment right.</p>

<pre><code>Preferences -&gt; Java -&gt; Installed JREs -&gt; use ""jdk..."" as compatible JRE 
</code></pre>
"
23011640,"<p>In SQL</p>

<pre><code>x in ('Alice', 'Bob', 'Carol')
</code></pre>

<p>In Java:</p>

<pre><code>Arrays.asList(""Alice"", ""Bob"", ""Carol"").contains(x)
</code></pre>
"
23012166,"<p>You could also do something like:</p>

<pre><code>String str = ""a + b - c * d / e &lt; f &gt; g &gt;= h &lt;= i == j"";
String[] arr = str.split(""(?&lt;=\\G(\\w+(?!\\w+)|==|&lt;=|&gt;=|\\+|/|\\*|-|(&lt;|&gt;)(?!=)))\\s*"");
</code></pre>

<p>It handles white spaces and words of variable length and produces the array:</p>

<pre><code>[a, +, b, -, c, *, d, /, e, &lt;, f, &gt;, g, &gt;=, h, &lt;=, i, ==, j]
</code></pre>
"
23497311,"<p>I found a solution for the wiping the console in an Eclipse IDE. It uses the Robot class. Please see code below and caption for explanation:</p>

<pre><code>   import java.awt.AWTException;
   import java.awt.Robot;
   import java.awt.event.KeyEvent;

   public void wipeConsole() throws AWTException{
        Robot robbie = new Robot();
        //shows the Console View
        robbie.keyPress(KeyEvent.VK_ALT);
        robbie.keyPress(KeyEvent.VK_SHIFT);
        robbie.keyPress(KeyEvent.VK_Q);
        robbie.keyRelease(KeyEvent.VK_ALT);
        robbie.keyPress(KeyEvent.VK_SHIFT);
        robbie.keyPress(KeyEvent.VK_Q);
        robbie.keyPress(KeyEvent.VK_C);
        robbie.keyRelease(KeyEvent.VK_C);

        //clears the console
        robbie.keyPress(KeyEvent.VK_SHIFT);
        robbie.keyPress(KeyEvent.VK_F10);
        robbie.keyRelease(KeyEvent.VK_SHIFT);
        robbie.keyRelease(KeyEvent.VK_F10);
        robbie.keyPress(KeyEvent.VK_R);
        robbie.keyRelease(KeyEvent.VK_R);
    }
</code></pre>

<p>Assuming you haven't changed the default hot key settings in Eclipse and import those java classes, this should work. </p>
"
23752305,"<p>you can create a List[] and initialize them by for loop. it compiles without errors:</p>

<pre><code>List&lt;e&gt;[] l;
for(int i = 0; i &lt; l.length; i++){
    l[i] = new ArrayList&lt;e&gt;();
}
</code></pre>

<p>it works with arrayList[] l as well.</p>
"
23759804,"<p>ooxml for dealing the .xlsx files and the ooxml refers to the xml, hence we will be needed to refer the below three dependedncies in the pom.xml for the </p>

<pre><code>&lt;dependency&gt;
   &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;
   &lt;artifactId&gt;poi&lt;/artifactId&gt;
   &lt;version&gt;3.9&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
   &lt;groupId&gt;xml-apis&lt;/groupId&gt;
   &lt;artifactId&gt;xml-apis&lt;/artifactId&gt;
   &lt;version&gt;1.4.01&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
   &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;
   &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;
   &lt;version&gt;3.9&lt;/version&gt;
   &lt;exclusions&gt;
     &lt;exclusion&gt;
       &lt;artifactId&gt;xml-apis&lt;/artifactId&gt;
       &lt;groupId&gt;xml-apis&lt;/groupId&gt;
     &lt;/exclusion&gt;       
   &lt;/exclusions&gt;
&lt;/dependency&gt;
</code></pre>
"
24053197,"<pre><code>import java.io.UnsupportedEncodingException;
import java.net.URISyntaxException;

public class URLDecoding { 

    String decoded = """";

    public String decodeMethod(String url) throws UnsupportedEncodingException
    {
        decoded = java.net.URLDecoder.decode(url, ""UTF-8""); 
        return  decoded;
//""You should use java.net.URI to do this, as the URLDecoder class does x-www-form-urlencoded decoding which is wrong (despite the name, it's for form data).""
    }

    public String getPathMethod(String url) throws URISyntaxException 
    {
        decoded = new java.net.URI(url).getPath();  
        return  decoded; 
    }

    public static void main(String[] args) throws UnsupportedEncodingException, URISyntaxException 
    {
        System.out.println("" Here is your Decoded url with decode method : ""+ new URLDecoding().decodeMethod(""https%3A%2F%2Fmywebsite%2Fdocs%2Fenglish%2Fsite%2Fmybook.do%3Frequest_type"")); 
        System.out.println(""Here is your Decoded url with getPath method : ""+ new URLDecoding().getPathMethod(""https%3A%2F%2Fmywebsite%2Fdocs%2Fenglish%2Fsite%2Fmybook.do%3Frequest"")); 

    } 

}
</code></pre>

<p>You can select your method wisely :) </p>
"
24305274,"<p>I was trying to test an extjs application and after sucessfully setting a testingAuthenticationToken this suddenly stopped working with no obvious cause.</p>

<p>I couldn't get the above answers to work so my solution was to skip out this bit of spring in the test environment. I introduced a seam around spring like this: </p>

<pre><code>public class SpringUserAccessor implements UserAccessor
{
    @Override
    public User getUser()
    {
        SecurityContext context = SecurityContextHolder.getContext();
        Authentication authentication = context.getAuthentication();
        return (User) authentication.getPrincipal();
    }
}
</code></pre>

<p>User is a custom type here.</p>

<p>I'm then wrapping it in a class which just has an option for the test code to switch spring out.</p>

<pre><code>public class CurrentUserAccessor
{
    private static UserAccessor _accessor;

    public CurrentUserAccessor()
    {
        _accessor = new SpringUserAccessor();
    }

    public User getUser()
    {
        return _accessor.getUser();
    }

    public static void UseTestingAccessor(User user)
    {
        _accessor = new TestUserAccessor(user);
    }
}
</code></pre>

<p>The test version just looks like this:</p>

<pre><code>public class TestUserAccessor implements UserAccessor
{
    private static User _user;

    public TestUserAccessor(User user)
    {
        _user = user;
    }

    @Override
    public User getUser()
    {
        return _user;
    }
}
</code></pre>

<p>In the calling code I'm still using a proper user loaded from the database:</p>

<pre><code>    User user = (User) _userService.loadUserByUsername(username);
    CurrentUserAccessor.UseTestingAccessor(user);
</code></pre>

<p>Obviously this wont be suitable if you actually need to use the security but I'm running with a no-security setup for the testing deployment.  I thought someone else might run into a similar situation.  This is a pattern I've used for mocking out static dependencies before.  The other alternative is you can maintain the staticness of the wrapper class but I prefer this one as the dependencies of the code are more explicit since you have to pass CurrentUserAccessor into classes where it is required.</p>
"
24443685,"<pre><code>import java.util.Scanner;

public class SeparatingDigits {

    public static void main( String[] args )
    {

        System.out.print( ""Enter the digit to print separately :- "");
        Scanner scan = new Scanner( System.in );

        int element1 = scan.nextInt();
        int divider;

        if( ( element1 &gt; 9999 ) &amp;&amp; ( element1 &lt;= 99999 ) )
        {
            divider = 10000;
        }
        else if( ( element1 &gt; 999 ) &amp;&amp; ( element1 &lt;= 9999 ) )
        {
            divider = 1000;
        }
        else if ( ( element1 &gt; 99) &amp;&amp; ( element1 &lt;= 999 ) )
        {
            divider = 100;
        }
        else if( ( element1 &gt; 9 ) &amp;&amp; ( element1 &lt;= 99 ) )
        {
            divider = 10;
        }
        else 
        {
            divider = 1;
        }

        quotientFinder( element1, divider );




    }

     public static void quotientFinder( int elementValue, int dividerValue )
     {
         for( int count = 1;  dividerValue != 0; count++)
         {
            int quotientValue = elementValue / dividerValue ;
            elementValue = elementValue % dividerValue ;
            System.out.printf( ""%d  "", quotientValue );

            dividerValue /= 10;

         }
     }
    }
</code></pre>

<p>Without using arrays and Strings . ( digits 1-99999 )</p>

<p>output :</p>

<p>Enter the digit to print separately :- 12345</p>

<p>1  2  3  4  5 </p>
"
26096477,"<p>the other way , here I have used ArrayList and Map, so its not  call json object row by row but after iteration of resultset finished :</p>

<pre><code> List&lt;Map&lt;String, String&gt;&gt; list = new ArrayList&lt;Map&lt;String, String&gt;&gt;();

  ResultSetMetaData rsMetaData = rs.getMetaData();  


      while(rs.next()){

              Map map = new HashMap();
              for (int i = 1; i &lt;= rsMetaData.getColumnCount(); i++) {
                 String key = rsMetaData.getColumnName(i);

                  String value = null;

               if (rsmd.getColumnType(i) == java.sql.Types.VARCHAR) {
                           value = rs.getString(key);
               } else if(rsmd.getColumnType(i)==java.sql.Types.BIGINT)                         
                             value = rs.getLong(key);
               }                  


                    map.put(key, value);
              }
              list.add(map);


    }


     json.put(list);    
</code></pre>
"
26131139,"<p>The class below should do the trick. Just create an instance, call the ""multiply"" method, and provide the source input stream and the amount of duplicates you need.</p>

<p><strong>Important: you must consume all cloned streams simultaneously in separate threads.</strong></p>

<pre><code>package foo.bar;

import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class InputStreamMultiplier {
    protected static final int BUFFER_SIZE = 1024;
    private ExecutorService executorService = Executors.newCachedThreadPool();

    public InputStream[] multiply(final InputStream source, int count) throws IOException {
        PipedInputStream[] ins = new PipedInputStream[count];
        final PipedOutputStream[] outs = new PipedOutputStream[count];

        for (int i = 0; i &lt; count; i++)
        {
            ins[i] = new PipedInputStream();
            outs[i] = new PipedOutputStream(ins[i]);
        }

        executorService.execute(new Runnable() {
            public void run() {
                try {
                    copy(source, outs);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        return ins;
    }

    protected void copy(final InputStream source, final PipedOutputStream[] outs) throws IOException {
        byte[] buffer = new byte[BUFFER_SIZE];
        int n = 0;
        try {
            while (-1 != (n = source.read(buffer))) {
                //write each chunk to all output streams
                for (PipedOutputStream out : outs) {
                    out.write(buffer, 0, n);
                }
            }
        } finally {
            //close all output streams
            for (PipedOutputStream out : outs) {
                try {
                    out.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}
</code></pre>
"
26363839,"<pre><code>/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package evenfibonaccisum;

import java.math.BigInteger;

/**
 *
 * @author blades of Aragon
 */
public class EvenFibonacciSum {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here

        long a=0;
      long b=1;
       long fib=1;
        int i=10;
        long sum=0;
        while(fib&lt;=4000000){
        fib=a+b;
        a=b;
        b=fib;
           if(fib&gt;=4000000){
           break ;
           }
           else{

               if(fib%2==0){

               sum=sum+fib;

               }


           }

        }
         System.out.println(""sum of even Fibonacci ""+sum);  






        }



    }
</code></pre>
"
26727141,"<p>I had this problem too.
My DOCTYPE was:</p>

<pre><code>&lt;!DOCTYPE hibernate-configuration PUBLIC ""-//Hibernate/Hibernate Configuration DTD 3.0//EN"" ""http://hibernate.org/dtd/hibernate-configuration-3.0.dtd""&gt;
</code></pre>

<p>It should be:</p>

<pre><code>&lt;!DOCTYPE hibernate-configuration PUBLIC ""-//Hibernate/Hibernate Configuration DTD 3.0//EN"" ""http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd""&gt;
</code></pre>

<p>Can you see the difference?
The first URI has NOT <code>www</code> and the second URI has <code>www</code></p>

<p>So, the <code>www</code> in the URI must be declared in the configuration file and in all the mapping files.</p>

<p>It is not your case (cause I can see you have the <code>http://www...</code> URI), but it may help somebody.</p>

<p>Regards.</p>
"
27743482,"<p>let 'name' be the name of the file with extension file.</p>

<pre><code>   int len=name.length();
   int i=0;
   String eXt;
   while(i&lt;len){
       if(name.charAt(i)=='.'){               
           eXt=(String) name.subSequence(i, len);
           break;
       }
       i++;
   }
</code></pre>
"
27937737,"<p>The purpose of “final” keyword in JAVA can be defined in three level are Class, Method, variable</p>

<pre><code>Java final variable: If you make any variable as final, you cannot change the value of final variable (It will be constant).

Java final method: If you make any method as final, you cannot override it.

Java final class: If you make any class as final, you cannot extend it.
</code></pre>
"
28941119,"<p>I used Strings and i converted initially the integer to string .Then i used the reverse method!i found the reverse of the number in String and then i converted the string back to integer!!Here is the programm!</p>

<pre><code>importjava.util.*;

public class Panathinaikos{

   public static void my_try()
{
    Scanner input = new Scanner(System.in) ;
    System.out.println(""Enter the number you want to be reversed"" ) ;
    int number = input.nextInt() ;
    String sReverse = Integer.toString(number) ;
    String reverse =new StringBuffer(sReverse).reverse().toString() ;
    int Reversed = Integer.parseInt(reverse) ;
    System.out.print(""The number "" + number+ "" reversed is "" + Reversed) ;
}
</code></pre>

<p>}</p>
"
29776115,"<p>I used this code:</p>

<pre><code>Gson gson = new Gson();
HashMap&lt;String, Object&gt; fields = gson.fromJson(json, HashMap.class);
</code></pre>
"
29895629,"<p>You can use this</p>

<pre><code>(new SelectElement(driver.FindElement(By.Id(""""))).SelectByText("""");
</code></pre>
"
29938300,"<p>Use this method,but be careful to make an object in your main.</p>

<p><code>public static void setName(Object obj){
        Class setClass = obj.getClass();
        String className = setClass.getName();
        System.out.println(className);
    }</code></p>
"
2830735,"<p>You don't have to distribute your source code. You can distribute compiled <code>.class</code> files, which contain human-unreadable bytecode. You can bundle them into <code>.jar</code> files, which are just zip files, and are roughly Java equivalent of native .dll files.</p>

<p>Note taht <code>.class</code> files can be easily decompiled (although decompilers cannot recover 100% of information from sources). To make decompilation more difficult, you can use obfuscator to make sources much less legible.</p>
"
2838015,"<p>Putting some parenthesis might help. Try this:</p>

<pre><code>public String toString() { 
   return ""HouseVo [ "" 
          + (""Name  :  "" + this.name == null ? """" : this.name)
          + (""Address  :  "" + this.address == null ? """" : this.address)
          + ""]""; 
} 
</code></pre>
"
2850241,"<p>I suggest you look for something like this</p>

<pre><code>String s; 
s.split(""\n\r"");
</code></pre>

<p>Look for the instructions here for <a href=""http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html#split%28java.lang.String%29"" rel=""nofollow"">Java's String Split method</a></p>

<p>If you have any problem, post your code</p>
"
3088163,"<p>My first thought was</p>

<pre><code>return (a||b)&amp;&amp;(b||c)
</code></pre>

<p>but for ease of reading I liked the proposed a+b+c>=2 solution that you guys suggested better</p>
"
3203156,"<pre><code>for(;;);
</code></pre>

<p>But it's very unlikely that hanging the thread is what you want.  Instead, you should consider options like joining on the other threads.</p>
"
3320559,"<p>I prefer first one, because <code>String myString = """"</code> will create additional object in the pool</p>
"
3320589,"<pre><code>String mystring = null;
mystring.length() 
// Cause error
</code></pre>

<p>Above will cause error due to null pointer.</p>

<pre><code>string myString = new String();
myString.length()
// will not cause error
</code></pre>

<p>I like to use later, but I think it's personal preference.</p>
"
3324654,"<p>How about this follwing code ,anyways he wants to set something.</p>

<pre><code>String myString = (someCondition)  ? ""something "" : ""else something"";
</code></pre>

<p>or this</p>

<pre><code>String myString = ""else something""; 

if (someCondition)
   myString = ""something"";
</code></pre>

<p>in the above case , if you are 90% sure that someCondition is always true. otherwise unnecessary object creation in declaration.Expecting comments from Gurus.</p>
"
3395982,"<p>Create a static list of possibilities you've already gotten.</p>

<pre><code>static ArrayList&lt;int&gt; listIdontWantAnymore = new ArrayList&lt;int&gt;();

int NextRandomNumber() {
    Random random = new Random();
    int myRandomInt;

    do {
        myRandomInt = random.NextInt(6) + 1;
    } while(listIdontWantAnymore.Contains(myRandomInt));

    listIdontWantAnymore.Add(myRandomInt);

    // now your 'myRandomInt' is what you want it to be.
    return myRandomInt;
}
</code></pre>
"
3490014,"<ul>
<li><p>You class must be named ""thesame"" if you store it in a file called ""thesame.java"", as you have.   Either rename your class to ""thesame"" or change the file to be ""apples.java"".</p></li>
<li><p>You should move the ""[]"" to be before ""args"".  So, <code>String[] args</code>.</p></li>
<li><p>Either select ""apples"" at the bottom of the menu you posted and run it, or right-click on the Java file and make it the default thing to run for this project.  Or launch it by right-clicking on the file and selecting ""run"".</p></li>
</ul>
"
3582872,"<p><code>Serializable</code> is NOT an <code>A</code>, so it throws <code>ClassCastException</code>.</p>
"
3936514,"<p>The <a href=""http://java.sun.com/docs/books/jls/third_edition/html/packages.html"" rel=""nofollow"">Java Language Specification</a> defines a <a href=""http://en.wikipedia.org/wiki/Java_package#Package_naming_conventions"" rel=""nofollow"">package naming convention</a> that says that package names should include a domain name, as it provides a globally-rooted namespace.</p>

<p>The source files need to be in subfolders that match the package name, because the Sun Java compiler, <code>javac</code>, <strike>enforces</strike> strongly encourages it.  Additionally, many other build tools and IDEs also either strongly encourage or require that the source .java files are stored in paths that match the package.</p>
"
4010116,"<p>Many have clarified that point about <code>?</code> but noone has really answered the main question yet, so here it is:</p>

<p>It is possible to call <code>A#foo</code> like this:</p>

<pre><code>((A) new B()).foo(new Object());
</code></pre>

<p>The cast then is done <strong>inside</strong> of <code>foo</code>.</p>
"
4013129,"<p>String d = ""11""</p>

<pre><code>if (d.length() &lt;= 2 &amp;&amp; d.length() &gt;=1) {
try {
 Integer i = Integer.valueOf(d);
   return i &lt;= 99 &amp;&amp; i &gt;= 0
 }
catch (NumberFormatException e)
{
 return false;
}
}
</code></pre>
"
4144315,"<p>You can do a search in Eclipse.</p>

<p>All you need to search for is <code>/*</code> and <code>//</code></p>

<p>However, you will only find the files which contain that expression, and not the actual content which I believe you are after.</p>

<p>However, if you are using <code>Linux</code> you can easily get all the comments with a one liner.</p>
"
4388874,"<p>If you just want to test, if a String contains an integer value only, write a method like this:</p>

<pre><code>public boolean isInteger(String s) {
  boolean result = false;
  try {
    Integer.parseInt(""-1234"");
    result = true;
  } catch (NumberFormatException nfe) {
    // no need to handle the exception
  }
  return result;
}
</code></pre>

<p><code>parseInt</code> will return the <code>int</code> value (-1234 in this example) or throw an exception.</p>
"
4456856,"<p>UPDATED:</p>

<p>I have modified it to work with multiple ocurrences of \n. Note that this may not be very efficient.</p>

<pre><code>public static String replaceBob(String str,int index){
    char arr[] = str.toCharArray();
    for(int i=index; i&lt;arr.length; i++){
        if( arr[i]=='\\' &amp;&amp; i&lt;arr.length &amp;&amp; arr[i+1]=='n' ){
            String temp = str.substring(0, i)+""bob"";
            String temp2 = str.substring(i+2,str.length());
            str = temp + temp2;
            str = replaceBob(str,i+2);
            break;
        }
    }
    return str;
}
</code></pre>

<p>I tried with this and it worked</p>

<pre><code>String x = ""Bob was a bob \\n 123 \\n aaa \\n"";
System.out.println(""result:""+replaceBob(x, 0));
</code></pre>

<p>The first time you call the function use an index of 0.</p>
"
4566731,"<p>The second one is more widely used. Neither is better.</p>

<p>It's the same idea as </p>

<pre><code>if (1 == x)
</code></pre>

<p><strike>but without a specific reason.</strike> but for a different reason. (Null pointer as noted by others).</p>
"
4656444,"<p>You're looking for the (n-1)th smallest number in a list, the algorithm to solve this problem is the <a href=""http://en.wikipedia.org/wiki/Selection_algorithm"" rel=""nofollow""><code>selection algorithm</code></a>. But selection by sorting is good enough for most cases (performance O(n log n)).</p>

<hr>

<p>The following <strong>does not work</strong>. Thanks for reviewing my answer :-)</p>

<pre><code>  // doesn't work in general!!!
  int[] tal = {3, 8, 5, 8, 2, 3, 9, 12, 21};
  int max=tal[0];
  int previous = max;
  for(int i=0;i&lt;tal.length;i++){
      if(tal[i]&gt;max){      // &lt;- fixed the if statement 
          previous = max;
          max=tal[i];
      }
  }
  System.out.println(""Biggest: ""+ max);
  System.out.println(""2nd Biggest: ""+ previous);
</code></pre>

<p><strike>This should give 21 (Biggest) and 12 (next biggest)</strike></p>

<p>(answer according to my understanding of the question ;-) )</p>
"
4656448,"<p>Option 1:</p>

<pre><code>int[] tal = {3, 8, 5, 8, 2, 3, 9, 12, 21};
int nextMax = tal[0];
int max=tal[0];
for(int i=0;i&lt;tal.length;i++){
  if(tal[i]&gt;max){
      nextMax = max;
      max = tal[i];
  }
}
System.out.println(""Biggest: ""+ max);
System.out.println(""Next biggest: "" + nextMax);
</code></pre>

<p>Option 2:
Run a sort function on the array, and print out the first 2 numbers.</p>
"
4671811,"<p>Is something like this what you are looking for?</p>

<pre><code>public static byte[] getBytesFromDataHandler(final DataHandler data) throws IOException {
    final InputStream in = data.getInputStream();
    byte out[] = new byte[0];
    if(in != null) {
        out = new byte[in.available()];
        in.read(out);
    } 
    return out;
}
</code></pre>

<p>UPDATE:</p>

<p>Based on dkarp's comment this is incorrect. According to the docs for <code>InputStream</code>:</p>

<blockquote>
  <p>Returns the number of bytes that can be read (or skipped over) from this input stream without blocking by the next caller of a method for this input stream. The next caller might be the same thread or or another thread.</p>
</blockquote>

<p>It looks like Costi has the correct answer here.</p>
"
4676756,"<ol>
<li>Yes.</li>
<li>Yes.</li>
<li>because a constructor is called by <code>new</code>.  What returns the object is the <code>new</code>, the constructor simply sets up the internal state.</li>
<li>Public.</li>
</ol>
"
4679593,"<p>Well, in most cases, close() doesn't actually throw an IOException. Here's the code for <a href=""http://www.google.com/codesearch/p?hl=en#t4cUIrRdV2U/gnu/mingw/gcc-java-3.4.4-20050522-1-src.tar.gz%7C3YH8A_Grjzg/gcc-3.4.4-20050522-1/libjava/java/io/InputStream.java&amp;q=%22filereader.java%22&amp;d=7&amp;l=86"" rel=""nofollow"">InputStream.java</a>:</p>

<pre><code>  public void close() throws IOException
  {
    // Do nothing
  }
</code></pre>

<p>Errors from closing a network resource should really be of some type of <code>RuntimeException</code>, since you can disconnect a networked resource after the program connects to it.</p>

<p>You can see some example of various implementations of <a href=""http://www.google.com/codesearch/p?hl=en#t4cUIrRdV2U/gnu/mingw/gcc-java-3.4.5-20051220-1-src.tar.gz%7COr8cB4InGpA/gcc-3.4.5-20051220-1/libjava/java/io/PipedReader.java&amp;q=.%2aReader.java"" rel=""nofollow"">Reader</a>/Writer and Streams using Google Code Search. Neither BufferedReader nor PipedReader actually throw an IOException, so I think you're mostly in the safe by not worrying about it. If you're really worried, you can check the implementation of the libraries you're using to see if you ever need to worry about the exception.</p>

<p>Like others mentioned, you can't do much about the IOException other than log it.</p>

<p>After all, <code>try/catch blocks</code> in the <code>finally</code> clause are pretty ugly.</p>

<p><strong>Edit:</strong></p>

<p>Further inspection reveals subclasses of <code>IOException</code> like <code>InterruptedIOException</code>, <code>SyncFailedException</code>, and <code>ObjectStreamException</code>, along with classes that inherit from it. So just catching an <code>IOException</code> would be too general -- you wouldn't know what to do with the information other than logging it because it could be from a whole range of errors.</p>

<p><strong>Edit 2:</strong></p>

<p>Urk, <code>BufferedReader</code> was a bad example, since it takes a <code>Reader</code> as input. I've changed it to <code>InputStream.java</code></p>

<p>However, there's a hierarchy with <code>InputStream</code> &lt;= <code>FilterInputStream</code> &lt;= <code>BufferedInputStream</code> &lt;= <code>InputStreamReader</code> (via inheritance and private instances) that all trickle up to the <code>close()</code> method in <code>InputStream</code>.</p>
"
4776899,"<p>The problem might be your usage of ==, which doesnt quite have the meaning you intend. In java it checks that two objects are the same object, and the color you get from your picture will never be equal to the value recorded in Color.BLACK</p>

<p>What you want to do is check that the color's values are the same, the red, green, blue, and alpha channels.  This is a context dependent equality, which is usually implemented as the .equals() function of an object.</p>

<p>Try this one:</p>

<pre><code>c.equals(Color.BLACK)
</code></pre>

<p>instead of </p>

<pre><code>c == Color.BLACK
</code></pre>
"
4832464,"<p>Have you tried:</p>

<pre><code>public static byte[] toBytes(DataHandler dh) {
    return (byte[]) dh.getContent();
}
</code></pre>
"
5068654,"<p>You should use the Singleton pattern. You create a static instance of SomeObject and work with that instance.</p>

<pre><code>   private static class SingletonHolder { 
     public static final SomeObject INSTANCE = new SomeObject();
   }

   public static SomeObject getInstance() {
     return SingletonHolder.INSTANCE;
   }
</code></pre>

<p>But don't fall in the Singleton trap, limit calls to getInstance()!</p>
"
5220485,"<p>For a set of 8 elements, there are 36 (8 + 7 + ... + 1) distinct pairs (if one ignores the order of elements in the pairs). So <code>diffs</code> may contain <em>up to</em> 36 elements. But apparently, some differences occur multiple times, e.g. 456-345 = 111 and 345-234 = 111. As a set can only contain each value at most once, only the 14 <em>distinct</em> differences remain.</p>
"
5332079,"<p>Something like this:</p>

<pre><code>return new Pair &lt;Integer, Boolean&gt; (newStamina, bear.isAlive());
</code></pre>

<p>Not so good: return 2 ints, one representing the bool: </p>

<pre><code>return new int [] {newStamina, bear.isAlive() ? 1 : 0};
</code></pre>
"
5407433,"<pre><code>penremainder = (penboxes-(int)penboxes );
</code></pre>

<p>This line will always equal zero, you are subtracting penboxes from itself.</p>
"
5455386,"<p>Why not just compare the two?</p>

<pre><code>if(v1 == v2) result = true;
</code></pre>
"
5455388,"<pre><code>if(v1 == v2) 
return true; 
else 
return false;
</code></pre>
"
5455521,"<p>The simple way is,if the two variables are equal then it should be true and if any one is false it is false.
check this one.</p>

<pre><code>if(v1 == v2)
    return true;
else 
    return false;
</code></pre>
"
2762249,"<p>Just because a method can only have <em>one</em> return type doesn't mean that that type can't contain <em>more than one</em> piece of information. The solution to the type of problem you seem to be having is to declare data types which hold multiple pieces of information.</p>

<p>Following the example in the question (""finding the minimum and second minimum values in a huge collection and then manipulating them""):</p>

<pre><code>public class MinimumHolder {
    private int min;
    private int secondMin;
    public MinimumHolder(int min, int secondMin) {
        this.min = min;
        this.secondMin = secondMin;
    }

    //getters...
}

public MinimumHolder findTwoMinimums(Set&lt;Integer&gt; numbers) {
    // ...
    return new MinimumHolder(...);
}

public MinimumHolder manipulateData(MinimumHolder mins) {
    // do stuff with the data, this method could also be
    // declared as void if MinimumHolder was mutable
}
</code></pre>

<p>You could also pretty easily refactor <code>MinimumHolder</code> so that it could hold a variable list of ""minimums"" which were exposed with a <code>getMinimum(int position)</code> if you ever wanted to find more than two minimums.</p>
"
5994853,"<p>Being new to the Struts2 framework, I recently came across the same (or very similar) error.  In my case I was using annotations within the Action class rather than the struts.xml file.</p>

<p>For example</p>

<pre><code>@Action(value=""/jsp/edit-file"",
   results={@Result(name=""success"",location=""/jsp/edit-success.jsp""),
            @Result(name=""failure"",location=""/jsp/edit-failure.jsp"")})
public String execute() { ... }
</code></pre>

<p>However when I changed the action value to include the *.action extension (see below) Struts would throw the ""SEVERE: Exception starting filter struts2"" error noted above.  </p>

<pre><code>@Action(value=""/jsp/edit-file.action"",
   results={@Result(name=""success"",location=""/jsp/edit-success.jsp""),
            @Result(name=""failure"",location=""/jsp/edit-failure.jsp"")})
public String execute() { ... }
</code></pre>

<p>The cause of this error wasn't obvious as it didn't manifest itself immediately.  Looking through the Tomcat localhost..log file I found the stacktrace for the error and was able to remedy the issue.</p>
"
2896136,"<p>Java and C# don't have named parameters so you can't do:</p>

<pre><code>myfunction(param1='Meh', optionalParam=2)
</code></pre>

<p>You have to do:</p>

<pre><code>myfunction('Meh', 2)
</code></pre>

<p>Otherwise</p>

<pre><code>myFunction(2, 'Meh')
</code></pre>

<p>Is ambiguous. How is the compiler supposed to know that you meant 2 to be in the optional parameter set?</p>
"
6374110,"<p>try</p>

<pre><code>String s = ""str?str?argh"";
s.split(""r\?"");
</code></pre>
"
3079910,"<p>Since evaluation order in Java is <a href=""http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#264242"" rel=""nofollow"">defined</a>, we can do this:</p>

<pre><code>public static int countZero(int n) {
    for (int i=1,t=0 ;; i&lt;&lt;=1) {
        if (n==0) return t;
        if (n==(n&amp;=~i)) t++;
    }
}
</code></pre>

<p>Note that this <em>relies</em> on the LHS of an equality being evaluated first; try the same thing in C or C++ and the compiler is free to make you look foolish by setting your printer on fire.</p>
"
6522726,"<p>If you do the second way <code>itemsList.size()</code> has to get calculated every time.</p>

<p>And if <code>itemsList</code> is big, it could take a while</p>
"
3139359,"<p>Try this, it works to me, but I hadn't so many documents...  </p>

<pre><code>File dir = new File(""directory"");
String[] children = dir.list();
if (children == null) {
   //Either dir does not exist or is not a  directory
  System.out.print(""Directory doesn't  exist\n"");
}
else {
  for (int i=0; i&lt;children.length; i++) {   
    // Get filename of file or directory   
    String filename = children[i];  
}
</code></pre>
"
3185638,"<p>According to Dr Heinz Kabutz, he said this in one of his <a href=""http://www.javaspecialists.eu/archive/Issue183.html"" rel=""nofollow"">newsletters</a>.</p>

<p>The old Vector class implements serialization in a naive way. They simply do the default serialization, which writes the entire <code>Object[]</code> as-is into the stream. Thus if we insert a bunch of elements into the List, then clear it, the difference between Vector and ArrayList is enormous.</p>

<pre><code>import java.util.*;
import java.io.*;

public class VectorWritingSize {
  public static void main(String[] args) throws IOException {
    test(new LinkedList&lt;String&gt;());
    test(new ArrayList&lt;String&gt;());
    test(new Vector&lt;String&gt;());
  }

  public static void test(List&lt;String&gt; list) throws IOException {
    insertJunk(list);
    for (int i = 0; i &lt; 10; i++) {
      list.add(""hello world"");
    }
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    ObjectOutputStream out = new ObjectOutputStream(baos);
    out.writeObject(list);
    out.close();
    System.out.println(list.getClass().getSimpleName() +
        "" used "" + baos.toByteArray().length + "" bytes"");
  }

  private static void insertJunk(List&lt;String&gt; list) {
    for(int i = 0; i&lt;1000 * 1000; i++) {
      list.add(""junk"");
    }
    list.clear();
  }
}
</code></pre>

<p>When we run this code, we get the following output: </p>

<pre><code>LinkedList used 107 bytes
ArrayList used 117 bytes
Vector used 1310926 bytes
</code></pre>

<p>Vector can use a staggering amount of bytes when being serialized. The lesson here? <strong>Don't ever use Vector as Lists in objects that are Serializable</strong>. The potential for disaster is too great.</p>
"
6659476,"<p>Storing states and counties in that variable it would be confusing to name it map - call it <code>stateCountyHash</code> or <code>numCountiesByState</code></p>
"
6700426,"<p>Your question is a bit confusing, following code is legal and perhaps doing what you want. The <strong>event should probably keep its type parameter for itself</strong> but if you insist on using it the first example from zacheusz with two type params is the right way. Don't overdo it :)</p>

<pre><code>class BufferedEvent&lt;T&gt;{}

abstract class AbstractEventBuffer&lt;E extends BufferedEvent&gt;{}

class EventBuffer&lt;E extends BufferedEvent&gt; extends AbstractEventBuffer
{
    public static void main (String[] args)
    {
          EventBuffer&lt;BufferedEvent&gt; buffer = new EventBuffer&lt;BufferedEvent&gt;();
    }
}
</code></pre>
"
3235450,"<p>Consider the following method which receives a list of 'intfaces', you don't have to know if you handle clas1 or clas2, you just want to handle something that 'is a' intface. You may add clas3 implement intface later on and it will stil work...</p>

<pre><code>  public void callMethods(List&lt;intface&gt; intfaces){
    for(Interface intface : intfaces) {
      intface.methodOne();
      intface.methodTwo();
    }
  }
</code></pre>
"
6825110,"<p>How about letting the File class do your validation?</p>

<pre><code>public static boolean isValidName(String text) {
    try {
        File file = new File(text);
        return file.getPath().equals(text);
    }
    catch(Exception ex){}
    return false;
}
</code></pre>
"
3276846,"<p>Commons Configuration do manipulate configuration files.</p>

<p>Even it gives an option to save the manipulated properties in a new file also.</p>

<pre><code>PropertiesConfiguration config = new PropertiesConfiguration(""usergui.properties"");
config.setProperty(""colors.background"", ""#000000);
config.save(""usergui.backup.properties);
</code></pre>

<p>Refer following link </p>

<p><a href=""http://commons.apache.org/configuration/userguide/howto_filebased.html#File-based_Configurations"" rel=""nofollow"">http://commons.apache.org/configuration/userguide/howto_filebased.html#File-based_Configurations</a></p>

<p>Even, Apache Ant can also help you in manipulating the existing configuration files using your own PropertyHelper Implementation.</p>

<p><a href=""http://ant.apache.org/manual/properties.html#propertyHelper"" rel=""nofollow"">http://ant.apache.org/manual/properties.html#propertyHelper</a></p>

<blockquote>
  <p><strong>EDITED</strong> after response in comments</p>
</blockquote>

<p>Apache configuration do provide extensibility using bean Factory , you need to create the Apache config file httpd.conf domain class yourself , to make it working.</p>

<p>Defining the Apache modules in java you can have a look at Netloony source , service/apache/modules to have an idea on this. </p>

<p><a href=""http://netloony.sourceforge.net/userguide/intro.html"" rel=""nofollow"">http://netloony.sourceforge.net/userguide/intro.html</a></p>

<p>In netloony the config files values are presented in JTable, you need to use any configuration framework to persist it in file.</p>

<p>Hope this helps, I understand there is nothing out of Box in java presently to read apache conf files. I was trying to give a pointer where you can start with..</p>
"
3318472,"<p>Strings are immutable so You need to do</p>

<pre><code>string = string.replaceAll(""&amp;nbsp;"","""")
</code></pre>
"
3318559,"<p><a href=""http://download.oracle.com/docs/cd/E17476_01/javase/1.5.0/docs/api/java/lang/String.html#replace(char,%20char)"" rel=""nofollow""><code>String.replace(char, char)</code></a> takes <code>char</code> inputs (or <code>CharSequence</code> inputs)</p>

<p><a href=""http://download.oracle.com/docs/cd/E17476_01/javase/1.5.0/docs/api/java/lang/String.html#replaceAll(java.lang.String,%20java.lang.String)"" rel=""nofollow""><code>String.replaceAll(String, String)</code></a> takes <code>String</code> inputs and matches by regular expression.</p>

<p>For example:</p>

<pre><code>String origStr = ""bat"";
String newStr = str.replace('a', 'i');
// Now:
// origStr = ""bat""
// newStr = ""bit""</code></pre>

<p>The key point is that the return value contains the new edited <code>String</code>.  The original <code>String</code> variable that invokes <code>replace()</code>/<code>replaceAll()</code> doesn't have its contents changed.</p>

<p>For example:</p>

<pre><code>String origStr = ""how&amp;nbsp;are&amp;nbsp;you?"";
String newStr = origStr.replaceAll(""&amp;nbsp;"","" "");
String anotherStr = origStr.replaceAll(""&amp;nbsp;"","""");
// origStr = ""how&amp;nbsp;are&amp;nbsp;you?""
// newStr = ""how are you?""
// anotherStr = howareyou?""
</code></pre>
"
3318593,"<p><code>String</code>s in Java are immutable. You have to do:</p>

<pre><code>String newStr = cleaned.replaceAll(""&amp;nbsp;"", """");
</code></pre>
"
7041725,"<p>Yes, you should be able to use generics:</p>

<pre><code>    interface Extractor&lt;T, R&gt; {
        public List&lt;R&gt; extract(T source);
    }

    class BaseExtractor&lt;T&gt; implements Extractor&lt;T, Record&gt;
    {
        public List&lt;Record&gt; extract(T source)
        {
            //do your thing
        }
    }
</code></pre>

<p>Here, you would have to assume that <code>T</code> is a primitive array, as you cannot use primitives in generic definitions.</p>

<p>Or else, you could use the wrapper Objects and do it this way:</p>

<pre><code>    interface Extractor&lt;T, R&gt; {
        public List&lt;R&gt; extract(T[] source);
    }

    class BaseExtractor&lt;T&gt; implements Extractor&lt;T, Record&gt;
    {
        public List&lt;Record&gt; extract(T[] source)
        {
            //do your thing
        }
    }
</code></pre>

<p>In this case, your generic <code>T</code> can be <code>Byte</code>, <code>Integer</code>, etc.</p>
"
3531927,"<pre><code>String test = classProperties.getProperty(""prop_allowed_extensions"", ""txt, jpeg"");
String[] splitString = StringUtils.split(test, ',');
for(String s : splitString) {
    s = StringUtils.trim(s);
}
</code></pre>

<p>would be slightly more elegant, but Java does not support LINQ like .net where you would be able to avoid the explicit loop altogether.</p>
"
7219749,"<pre><code>private void f(Button b, final int a[]) {

    b.addClickHandler(new ClickHandler() {

        @Override
        public void onClick(ClickEvent event) {
            a[0] = a[0] * 5;

        }
    });
}
</code></pre>
"
7291746,"<p>You could use a separate xml file for storing codes as well as their calculation mechanishms.</p>

<p>This will remove the limitation of inablility to add new discount code.</p>

<p><strong>XML File: discounts.xml</strong></p>

<pre><code>&lt;discount-codes&gt;
    &lt;discount-code&gt;
       &lt;code&gt;A&lt;/code&gt;
       &lt;val&gt;0.15&lt;/val&gt;
    &lt;/discount-code&gt;
    &lt;discount-code&gt;
        &lt;code&gt;B&lt;/code&gt;        
        &lt;val&gt;0.95&lt;/val&gt;
    &lt;/discount-code&gt;
&lt;/discount-codes&gt;
</code></pre>

<p>Note: Operation code (What am I intended to do with the values?) is not currently implemented. You can implement the same at your end.</p>

<p>Use an XML parser class:</p>

<p><strong>Class: DiscountModel.java (This class is the model to store the discount codes)</strong></p>

<pre><code>public class DiscountModel {
    char code;
    Double val;

    // Implement getters and setters
}
</code></pre>

<p><strong>Class: DiscountParser.java (This will parse the discounts.xml file and store the codes in a list)</strong></p>

<pre><code>public class DiscountParser {
    List&lt;DiscountModel&gt; discountsList;

    // Getters and Setters for discountsList

    // Parser Code
    public void parseDiscounts() {
         // Code here
    }

    // Add new discount
    public void addDiscount() {
        // Code 
    }

    // Remove discount
    public void removeDiscount () {
       // Code
    }
}
</code></pre>

<p><strong>Class: OrderProcessor.java (This will bring out the discounted value after calculation)</strong></p>

<pre><code>/**
 *  Call this class when calculations need to be done.
 */
public class OrderProcessor {
    // Declare instance of DocumentParser
    DocumentParser dc1;

    // Getter and setter for dc1

    public Double calculateTotalPriceWithDiscountCode(Order order, char discountCode) {
        // Find the corresponding discountcode and 
        // value from the list of values in the 
        // Class DocumentParser          

        // Use the corresponding values to calculate 
        // the discount and return the value
    }
}  
</code></pre>

<p>Whenever a new code is to be added, you can insert the same to the xml file. The same applies if the discount code needs to be removed.</p>

<p>Hope the above helps.</p>
"
7334370,"<p>I'd suggest to throw the exception from the setter method. Is there any special reason why wouldn't it better to do so?</p>

<pre><code>public List&lt;String&gt; getStrings() throws Exception {
    return strings;
}

public void setStrings(List&lt;String&gt; strings) {
    if (strings == null)
        throw new Exception();

    this.strings = strings;
}
</code></pre>

<p>Also, depending on the particular context, wouldn't it be possible to simply pass the <code>List&lt;String&gt; strings</code> directly by the constructor? That way maybe you wouldn't even need a setter method.</p>
"
7479330,"<p>It depends on where you want to print the error message. You can, of course, print from within the <code>totalPay()</code> method itself, but I'm guessing you're asking about changing the ""signature"" of <code>totalPay()</code> so that the code calling it knows an error occurred.</p>

<p>If so, you either do that by returning a special value that means an error occurred or by throwing an <code>Exception</code>. Either way, your calling code will have to check that a successful return occurred before it can print the result.</p>

<p>An example of using a special return value would be a negative number, or a special value like <code>java.lang.Float.NaN</code>.</p>

<p>An example of using an Exception would be:</p>

<pre><code>try {
    System.out.println(foo.totalPay(8.20,47));
}
catch (InvalidTotalPayException e) {
    System.out.println(""Exception: "" + e.toString());
}
</code></pre>
"
7528574,"<p>There may be two situations.</p>

<ol>
<li>No build.xml is present in the current directory</li>
<li>Your ant configuration file has diffrent name.</li>
</ol>

<p>Please see and confim the same.
In the case one you have to find where your build file is located and in the case 2, You will have to run command <code>ant -f &lt;your build file name&gt;</code>. </p>
"
7645148,"<p>How about using java.util.Arrays?</p>

<pre><code>List&lt;String&gt; list = Arrays.asList((String[])jsonArray.toArray())
</code></pre>
"
7740368,"<p>The subclass does inherit, however the superclass accessor methods are not inherently accessible. An easy way to be able to get/set values from the superclass is to setup delegate methods in your subclass. </p>

<p>For example, if the super class has an attribute ""label"", in your sub class you would create a method:</p>

<pre><code>public String getLabel(){
    return super.getLabel();
}

public void setLabel(String label){
    super.setLabel(label);
}
</code></pre>

<p>Most IDEs have ways to generate delegate methods easily without hand coding them all. In Netbeans for example ""alt+insert"" will bring up a code generation options menu in which you can select delegates and then choose which included class or superclass to create delegate methods for.</p>
"
7740427,"<p>There is no constructor that matches the signature of your constructor (look <a href=""http://download.oracle.com/javase/6/docs/api/java/awt/Label.html#Label%28java.lang.String,%20int%29"" rel=""nofollow"">here</a>), so when you call</p>

<p><code>super(shlTictactoe,none)</code></p>

<p>it can't find the appropriate constructor on label.  You need to pass in a String and an int.</p>
"
4024190,"<p>The results of the calculation are defined by the <a href=""http://download.oracle.com/javase/tutorial/java/nutsandbolts/operators.html"" rel=""nofollow"">Operator Order of Precedence</a>. So parentheses have highest precedence here, multiplication and division next highest, and addition and subtraction lowest. Operators with equal precedence are evaluated left to right. So the expression in the question is equivalent to:</p>

<pre><code>    a + (b  * c) / ( d - e ))
</code></pre>

<p>However there is a slight difference between what is normally meant by ""being evaluated first"" and the operator precedence for getting the correct answer. </p>

<p>""d-e"" is not necessarily actually calculated before ""a"" is calculated. This pretty much doesn't make any difference unless one of the 'variables' in the expression is actually a function. <a href=""http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#4779"" rel=""nofollow"">The Java standard does not specify the order of evaluation of components of an expression.</a></p>
"
4024748,"<pre><code>a + b * c / ( d - e )
      1         1
          2
  3
</code></pre>

<p>The whole point of operator precedence is to convert the expression into a syntax tree. Here the <code>*</code> and <code>-</code> are at the same level of the tree. Which one is evaluated first is irrelevant for the result <strike>and not warrantied</strike>.</p>

<p><strong>Edit</strong>: Sorry, I got confused by my C background. As others have pointed out, Java has an ""Evaluate Left-Hand Operand First"" rule. Applying this rule to <code>/</code> tells you that <code>*</code> is evaluated first (your first answer).</p>
"
4115250,"<p>Java has no built in <code>sizeof</code> operator. </p>

<p>You could try and use a serialization method, by serializing an object to memory and getting the size of that data, but that wouldn't necessarily be the size you want.</p>

<p>You could also have a method called <code>sizeOf()</code>, like this:</p>

<pre><code>// returns the size of this object in bytes
int sizeOf()
{
     int size = 0;
     size += name.Length * 2; // each character in name is 2 bytes, no?
     size += 4; // for n, which is 32 bits = 4 bytes
}
</code></pre>

<p>Note that this implementation doesn't include the metadata inside name, only the number of bytes necessary to make the <code>char[]</code> for it.</p>
"
4134174,"<p>You want</p>

<pre><code>round(new MathContext(0));  // or perhaps another math context with rounding mode HALF_UP
</code></pre>
"
8068528,"<p>The best way is not to write any initializing statements. This is because if you write 
<code>int a[]=new int[3]</code> then by default, in Java all the values of array i.e. <code>a[0]</code>, <code>a[1]</code> and <code>a[2]</code> are initialized to <code>0</code>! Regarding the local variable hiding a field, post your entire code for us to come to conclusion.</p>
"
4169616,"<p>My idea is to define a <code>CharConsumer</code> that defines what it means to consume a bunch of characters. Then I wrote a method that takes an arbitrary <code>Reader</code> and reads it until the end. If you want another terminating condition, replace the <code>while (true)</code> with it.</p>

<p>If you need the input to the <code>consume</code> method to be buffered, be sure that you create exactly one <code>BufferedReader</code> and don't use the other reader anymore after that. Otherwise some characters may get lost while reading.</p>

<pre><code>package so4168937;

import java.io.EOFException;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;

public class Main {

  // unused, since the question was initially unclear
  public static void consumeFourInARow(Reader rd, CharConsumer consumer) throws IOException {
    char[] chars = new char[4];
    while (true) {
      for (int i = 0; i &lt; chars.length; i++) {
        int c = rd.read();
        if (c == -1) {
          if (i == 0)
            return;
          throw new EOFException(""Incomplete read after "" + i + "" characters."");
        }
        chars[i] = (char) c;
      }
      consumer.consume(chars);
    }
  }

  public static void consume(Reader rd, CharConsumer consumer) throws IOException {
    char[] chars = new char[4];
    int c;

    for (int i = 0; i &lt; chars.length; i++) {
      if ((c = rd.read()) == -1) {
        return;
      }
      chars[i] = (char) c;
    }
    consumer.consume(chars);

    while ((c = rd.read()) != -1) {
      System.arraycopy(chars, 1, chars, 0, chars.length - 1);
      chars[chars.length - 1] = (char) c;
      consumer.consume(chars);
    }
  }

  interface CharConsumer {
    void consume(char[] chars);
  }

  public static void main(String[] args) throws IOException {
    final StringBuilder sb = new StringBuilder();
    consume(new StringReader(""hi my name is joe...""), new CharConsumer() {
      @Override
      public void consume(char[] chars) {
        sb.append('&lt;');
        sb.append(chars);
        sb.append('&gt;');
      }
    });
    System.out.println(sb.toString());
  }

}
</code></pre>

<p><strong>Update [2010-11-15]:</strong> Replaced the old code with code that implements a simple cyclic buffer, which is apparently what was wanted in the original question.</p>
"
4240175,"<p>I won't give you a direct answer. Have some tests instead. This is a perfect example question for test-driven development...</p>

<p>Given</p>

<pre><code>public List&lt;Character&gt; jumble(String characters) ...
</code></pre>

<p>Implement it such that these tests pass. Do the tests in order, one at a time. Make sure the first tests continue to pass when you do subsequent ones. Refactor as you go</p>

<pre><code>Assert.assertTrue(jumble().isEmpty());
// this first one should have been very easy, just return an empty list
Assert.assertEquals(Arrays.asList(""a""), jumble(""a""));
// this one is easy too, just return the input string in a list and it will work
Assert.assertEquals(Arrays.asList(""ab"", ""ba""), jumble(""ab""));
// now it has started to get a bit harder, return a list with the input string normally and reversed
Assert.assertEquals(Arrays.asList(""abc"", ""acb"", ""bac"", ""bca"", ""cab"", ""cba""), jumble(""abc""));
// with the above you need to start treating the characters separately.
// Try building upon the existing solution so that you break down this problem recursively...
Assert.assertEquals(Arrays.asList(""abb"", ""abb"", ""bab"", ""bba"", ""bab"", ""bba""), jumble(""abb""));
// or, instead of the one above, you might want to test for ...
Assert.assertEquals(Arrays.asList(""abb"", ""bab"", ""bba""), jumble(""abb""));
// depending upon whether one 'b' is the same as another.
// (in which case the return type should probably be Set&lt;Character&gt;, not List&lt;Character&gt;
</code></pre>

<p>If you get these tests to pass, without assuming the length of the input in your algorithm, you should be OK for much larger strings.</p>
"
4278344,"<p>the length of the array is 36. And you use the method <code>r.nextInt(length)</code>
it means that the max value of the random number is 36,from 0 to 35. so at most you can get 8 index 36.</p>
"
8403329,"<p>Now I believe this is a bug.</p>

<p>On Java Spec (5.1.3), it is said that it uses ""rounding towards zero"".</p>

<p><code>Otherwise, if the floating-point number is not an infinity, the floating-point
value is rounded to an integer value V, rounding toward zero using IEEE 754
round-toward-zero mode (§4.2.3).</code></p>

<p>And <strong>round towards zero</strong> (or truncate, or round away from infinity) is just (quoting wiki):</p>

<p><code>q = truncate(y) = sgn(y) * floor(abs(y)) = -sgn(y) * ceiling(-(abs(y))</code></p>

<p>q is the integer part of y, without its fraction digits.</p>
"
4390605,"<p>If this is not a performance issue for you, you can write</p>

<pre><code>public String getFirstName(Person person) {
  try {
     return person.getName().getGivenName();
  } catch (NullPointerException ignored) {
     return null;
  }
} 
</code></pre>
"
8555987,"<p>ie; one can create:</p>

<pre><code>Point pt=new Point();  //point which has x and y as 0
</code></pre>

<p>OR</p>

<pre><code>Point pt=new Point(10,5);  //point which has x=10 and y=5
</code></pre>
"
4594587,"<p>Im not sure about what you want, but...</p>

<p>SimpleDateFormat example:</p>

<pre><code>SimpleDateFormat sdf = new SimpleDateFormat(""MM/dd/yy"");
Date date = sdf.parse(""12/31/10"");
String str = sdf.format(new Date());
</code></pre>
"
8637983,"<p>I read your <a href=""http://stackoverflow.com/questions/8637815/naming-conventions-in-java"">other post</a> and got the impression you are a new java developer, so I found the need to give a running example. 
Simply copy paste this to your IDE and run it. It should run and produce an output which is a proof of concept for you. </p>

<p>The input I am using here is </p>

<pre><code>String[] input = new String[]{ ""1,2,1"" , 
                               ""1,1,2"", 
                               ""1,2,3"",
                               ""1,3,1"",
                               ""1,1,1"",
                               ""1,3,3"",
                               ""1,1,3""};
</code></pre>

<p>And as you can see it has repetitions as you described. 
The output is </p>

<pre><code> The triangle [Triangle{sides=[1, 1, 2]}] already exists!
 The triangle [Triangle{sides=[1, 1, 3]}] already exists!
 triangles = [Triangle{sides=[1, 2, 3]}, 
              Triangle{sides=[1, 1, 3]}, 
              Triangle{sides=[1, 1, 2]}, 
              Triangle{sides=[1, 1, 1]}, 
              Triangle{sides=[1, 3, 3]}]
</code></pre>

<p>As you requested the output is with no repetition. </p>

<pre><code>import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
public class Triangle
{
    private int[]sides;
    public Triangle( int x, int y, int z)
    {
        sides = new int[]{x,y,z};
        Arrays.sort( sides );
    }

    public Triangle( String ... args )
    {
        this( Integer.parseInt( args[0].trim() ), Integer.parseInt( args[1].trim() ), Integer.parseInt( args[2].trim() ));
    }

    @Override
    public boolean equals( Object o )
    {
        if ( this == o ) return true;
        if ( o == null || getClass() != o.getClass() ) return false;

        Triangle triangle = ( Triangle ) o;

        if ( !Arrays.equals( sides, triangle.sides ) ) return false;

        return true;
    }

    @Override
    public int hashCode()
    {
        return sides != null ? Arrays.hashCode( sides ) : 0;
    }

    @Override
    public String toString()
    {
        return ""Triangle{"" +
                       ""sides="" + Arrays.toString( sides ) +
                       '}';
    }

    public static void main( String[] args ) throws IOException
    {

        String[] input = new String[]{ ""1,2,1"" , ""1,1,2"", ""1,2,3"",""1,3,1"",""1,1,1"",""1,3,3"",""1,1,3""};

        Set&lt;Triangle&gt; triangles = new HashSet&lt;Triangle&gt;(  );
        for ( String s : input )
        {
            Triangle triangle = new Triangle( s.split( "","" ) );
        if ( triangles.contains( triangle ))
        {
            System.out.println(""The triangle ["" + triangle + ""] already exists!"");
        }
        triangles.add( triangle );
        }
        System.out.println( ""triangles = "" + triangles );
    }
}
</code></pre>
"
2868389,"<p>You need a semaphore.</p>

<pre><code>class AThread extends Thread {
   Semaphore sem;
   AThread(Semaphore sem) {
     this.sem = sem;
   }
   public void run(){
      while(true){
         Thread.sleep(ONE_MINUTE);
         sem.acquire();
         try {
           //Lots of computation every minute
         } finally {
           sem.release();
         }
      }
   }
}
</code></pre>

<p>When instantiating the AThreads you need to pass the same semaphore instance:</p>

<pre><code>Semaphore sem = new Semaphore(MAX_AVAILABLE, true);
</code></pre>

<p>Edit: Who voted down can please explain why? There is something wrong in my solution?</p>
"
2868643,"<p>You can certainly find some improvement in throughput by reducing the number of threads to what the system can realistically handle.  Are you open to changing the design of the thread a bit?  It'll unburden the scheduler to put the sleeping ones in a queue instead of actually having hundreds of sleeping threads.</p>

<pre><code>class RepeatingWorker implements Runnable {

private ExecutorService executor;
private Date lastRan;

//constructor takes your executor

@Override
public void run() {

  try {
    if (now &gt; lastRan + ONE_MINUTE) {
      //do job
      lastRan = now;
    } else {
      return;
  } finally {
    executor.submit(this);
  }
}
}
</code></pre>

<p>This preserves your core semantic of 'job repeats indefinitely, but waits at least one minute between executions' but now you can tune the thread pool to something the machine can handle and the ones that aren't working are in a queue instead of loitering about in the scheduler as sleeping threads.  There is some wait busy behavior if nobody's actually doing anything, but I am assuming from your post that the entire purpose of the application is to run these threads and it's currently railing your processors.  You may need to tune around that if room has to be made for other things :)</p>
"
4692489,"<p>An obscure solution which might amuse... ;)</p>

<pre><code>Random r = new Random(292012);
for(int i=0;i&lt;9;i++) {
    int n=r.nextnt(4);
    System.out.print(n&lt;1?""\n"":""""+n);
}
</code></pre>
"
4731649,"<p>Use of whitespace in RE is a pain, but I believe they work. The OP's problem can also be solved using StringTokenizer or the split() method. However, to use RE (uncomment the println() to view how the matcher is breaking up the String), here is a sample code:</p>

<pre><code>import java.util.regex.*;

public class Two21WS {
    private String  str = """";
    private Pattern pattern = Pattern.compile (""\\s{2,}"");  // multiple spaces

    public Two21WS (String s) {
            StringBuffer sb = new StringBuffer();
            Matcher matcher = pattern.matcher (s);
            int startNext = 0;
            while (matcher.find (startNext)) {
                    if (startNext == 0)
                            sb.append (s.substring (0, matcher.start()));
                    else
                            sb.append (s.substring (startNext, matcher.start()));
                    sb.append ("" "");
                    startNext = matcher.end();
                    //System.out.println (""Start, end = "" + matcher.start()+"", ""+matcher.end() +
                    //                      "", sb: \"""" + sb.toString() + ""\"""");
            }
            sb.append (s.substring (startNext));
            str = sb.toString();
    }

    public String toString () {
            return str;
    }

    public static void main (String[] args) {
            String tester = "" a    b      cdef     gh  ij   kl"";
            System.out.println (""Initial: \"""" + tester + ""\"""");
            System.out.println (""Two21WS: \"""" + new Two21WS(tester) + ""\"""");
}}
</code></pre>

<p>It produces the following (compile with javac and run at the command prompt):</p>

<p>% java Two21WS
Initial: "" a    b      cdef     gh  ij   kl""
Two21WS: "" a b cdef gh ij kl""</p>
"
8850620,"<p>Because your for loop looses meaning if you're returning true anyway.<br/>
If you want to stop loop use <code>break;</code> instead of first return.</p>
"
4785647,"<pre><code>It is said that we cannot force the garbage collection process in java.
</code></pre>

<p>That is a very popular belief, which is totally wrong.</p>

<p>Several applications do that on a regular basis and some even have shiny buttons you can click that do <strong>really</strong> perform a GC.  In other words: they don't ""hint"" the GC that they'd like the GC to trigger but they do really force a GC.</p>

<p>So that belief is both popular and wrong.  What is less popular is the knowledge as to how you actually trigger such a GC, as shown by the unique (and very vague) answer to my +6 times upvoted question here:</p>

<p><a href=""http://stackoverflow.com/questions/2178296/java-how-do-you-really-force-a-gc-using-jvmtis-forcegargabecollection"">http://stackoverflow.com/questions/2178296/java-how-do-you-really-force-a-gc-using-jvmtis-forcegargabecollection</a></p>
"
8864894,"<p>I had to change what you had:</p>

<pre><code>&lt;systemPath&gt;${java.home}/../lib/tools.jar&lt;/systemPath&gt;
</code></pre>

<p>to the explicit path, using the JDK not the JRE like bmargulies said:</p>

<pre><code> &lt;systemPath&gt;C:/Program Files/Java/jdk1.6.0_24/lib/tools.jar&lt;/systemPath&gt;
</code></pre>

<p>Hope that helps.</p>
"
4816382,"<p>What is the background for this requirement?</p>

<p>If the range of x, y values is unlimited, then there is no way to do this in a unique way (so that you can always reverse the process).</p>

<p>If the range of the numbers is limited, then you could do the following: Suppose that x and y are <code>int</code> values both in the range 0 to 99. Then you calculate the result by: <code>z = 100 * x + y</code>. The reverse would be: <code>x = z / 100</code> and <code>y = z % 100</code>.</p>
"
4844645,"<p>(Repost from your first question. Shameless self-plug)
Don't fiddle around with URLConnection yourself, let <a href=""http://beders.github.com/Resty/"" rel=""nofollow"">Resty</a> handle it.</p>

<p>Here's the code you would need to write (I assume you are getting text back):</p>

<pre><code>import static us.monoid.web.Resty.*;
import us.monoid.web.Resty;  
...    
new Resty().text(TEST_URL, content(""HELLO WORLD"")).toString();
</code></pre>
"
3101223,"<p>I don't know how sophisticated you want this to be, but if you just want to change expressions like ""It's whatever"" to ""Isn't it whatever!"", then this is very simple:</p>

<pre><code>String text = ""It's cold"";
String result = ""Isn't it "" + text.substring(5) + ""!"";
</code></pre>

<p>(Even simpler than polygenelubricant's solution with regular expressions).</p>
"
8962678,"<p>The packaging type is specified by the ""packaging"" tag in the pom.xml (usually placed quite on top of the file, together with the artifact id, version etc of the project.</p>

<p>Try to locate </p>

<pre><code>&lt;packaging&gt;war&lt;/packaging&gt;
</code></pre>

<p>in the pom.xml and change it to</p>

<pre><code>&lt;packaging&gt;jar&lt;/packaging&gt;
</code></pre>
"
3126061,"<p>I know you asked about Java, but here is a solution in PHP as an example:</p>

<pre><code>abstract class Singleton
{
    protected function __construct()
    {
    }

    final public static function getInstance()
    {
        static $instances = array();

        $calledClass = get_called_class();

        if (!isset($instances[$calledClass]))
        {
            $instances[$calledClass] = new $calledClass();
        }

        return $instances[$calledClass];
    }

    final private function __clone()
    {
    }
}
</code></pre>

<p>Then you just write:</p>

<pre><code>class Database extends Singleton {}
</code></pre>
"
3133800,"<p>Try:</p>

<pre><code>boolean isDouble;
try
{
   Double.parseDouble(""1.2"");
   isDouble = true;
}catch(Exception e){
   isDouble = false;
}
</code></pre>

<p>Although it is not generally advisable to use exceptions like conditionals.</p>
"
3133803,"<pre><code>    public boolean isDouble( String input )  
    {  
       try  
       {  
          Double.parseDouble( input );  
          return true;  
       }  
       catch( Exception e)  
       {  
         return false;  
      }  
  }  
</code></pre>
"
9047776,"<p>Running code in JAVA without using predefined function</p>

<pre><code>class sqrt{
    public static void main(String [] args){
        double n=9;
        double x=1;
        double a=n;
        for(int i=0;i&lt;n;i++)
            x=0.5*(x+a/x);
        System.out.println(x);
    }
}
</code></pre>
"
3137987,"<p>You could just use a <code>Map&lt;MobileSuit, Pilot&gt;</code>, where a <code>null</code> value mapped to a <code>MobileSuit</code> indicates no pilot. The <code>Iterator</code> could just be an <code>Iterator&lt;Map.Entry&lt;MobileSuit, Pilot&gt;&gt;</code> retrieved by <code>map.entrySet().iterator()</code>.</p>
"
3137989,"<p>Isn't that enough ?</p>

<pre><code>for(MobileSuit ms : MobileSuits) {
    for(Pilot p : pilots){
        //TODO
    }
}
</code></pre>
"
9076300,"<p>One possible way to think of it, is because of wildcards in Generics.</p>

<p>Imagine if you had, </p>

<pre><code>List&lt;? extends Serializable&gt; list = new ArrayList&lt;&gt; extends Serializable&gt;();
</code></pre>

<p>(Assuming that all the strings are in the <code>list</code>). If the List API had <code>List.lastIndexOf(E e)</code>, then literally, with our example above, this would make it <code>List.lastIndexOf(? extends Serializable)</code> and you couldn't really pass an object other than <code>null</code>.</p>

<p>This is the reason why they put <code>Object</code> as parameter type. One should just implement the object's <code>equals()</code> method correctly for <code>lastIndexOf()</code> search.</p>
"
3159505,"<p>Java is <strong>not</strong> a pass-by-value language. On the contrary - it is a <strong>pass-by-reference</strong> language.  (passing-by-reference does not mean you can change the original ""pointer"" to point elsewhere like C++ allows). 
The only things which are passed by value are primitives (<code>int</code>, <code>long</code>, <code>char</code> etc.)<br>
Object references are always passed by reference - so if your Object is able to support change to its contents (e.g. via getter and setter methods) - it can be changed.  </p>

<p><code>String</code> specifically is immutable - meaning that its contents may never be changed. So for your specific question, if you want the String referred to by the local variable 's' to change you need to provide it with a reference to a new instance of a <code>String</code> object.</p>

<p>Example:</p>

<pre><code>public void one()  
{
    String s = ""one"";
    s = two(); // Here your local variable will point to a new instance of a String with the value ""two""
    System.out.println(s);
}

public String two() 
{
  return ""two"";
}
</code></pre>

<p>If you use objects other than <code>String</code> - you can define setter methods on them that will update their contents for you.</p>
"
9082774,"<p>Instead of doing all of that, just do this:</p>

<pre><code>request.getServerName().toString()
</code></pre>
"
5023561,"<p>one type, with two properties</p>

<pre><code>type Edge
    boolean directed = false;
    number  weight = 1;
</code></pre>
"
9096181,"<pre><code>private final Object startupShutdownMonitor = new Object();

public void refresh() throws BeansException, IllegalStateException {
   synchronized (this.startupShutdownMonitor) {
       // Prepare this context for refreshing.
       prepareRefresh();
   }

}
</code></pre>

<p>This is equivalent to the following</p>

<pre><code>public void refresh() throws BeansException, IllegalStateException {
      //Do something that does not affect the state of the object
      System.out.println(""I am inside the refresh method() and will accquire lock on the object now"");
      prepareRefresh();
}

private synchronized void preparedRefresh() {
    //Do something thread safe here
    //Since the thread here has the monitor it can safely alter the state of the class instance here with causing inconsistensy
}
</code></pre>

<p>Acquiring a lock on the instance object <code>startupShutdownMonitor</code> is same as acquiring a lock on the instance of the class on which refresh method is being called upon.</p>
"
5081858,"<p>Without checking the link posted and assuming that an array list is 3 times slower as you say then the speed difference is likely to vary accross JVMs, several things could influence the speed of getting a value back. The results from that article are likely to vary depending on the control variables in effect when performing the tests. A collection should not be surprisingly a bit slower either considering that various checks are completed before completing the operation. Adding to an arraylist for example calls</p>

<pre><code> public void ensureCapacity(int minCapacity) {
    modCount++;
    int oldCapacity = elementData.length;
    if (minCapacity &gt; oldCapacity) {
        Object oldData[] = elementData;
        int newCapacity = (oldCapacity * 3)/2 + 1;
            if (newCapacity &lt; minCapacity)
        newCapacity = minCapacity;
            // minCapacity is usually close to size, so this is a win:
            elementData = Arrays.copyOf(elementData, newCapacity);
    }
    }
</code></pre>

<p>As that clearly shows there are checks and data is copied and replaced.
So to put it simply there is no one answer, the test conditions are likely to affect the results.</p>
"
3282567,"<p>You could try to execute the <a href=""http://en.wikipedia.org/wiki/Uname"" rel=""nofollow""><code>uname</code></a> command - should be available on all unixoid systems.</p>
"
5123613,"<p>Try using a <code>long</code> which will not overflow in this case (but will for large enough numbers)</p>

<pre><code>System.out.println((long) n1 + n2);
</code></pre>
"
9261249,"<p><strong>EDITED</strong></p>

<p>I recommend forming a priority-queue (heap based), taking Michael's suggestion to it's logical conclusion. <strong>Don't store 10, store n.</strong></p>

<pre><code>PQ a[n];
a.insert(input);
</code></pre>

<p><code>O(log n)</code> FTW</p>
"
9293984,"<p>In general you can just do this:</p>

<pre><code>if (string.indexOf(""substring"") &gt; -1)... //It's there
</code></pre>
"
9293988,"<p>Please try following, </p>

<pre><code>int result = str1.indexOf ( ""not in"" );

if ( result != -1 ) 
{
       // It contains ""not in"" 
}
else if ( result == -1 )
{
     // It does not contain ""not in""
}
</code></pre>
"
3351095,"<p>Actually, the date in database is a string like ""yyyy-mm-dd"".<br /></p>

<p>Why not to try:<br /></p>

<p><code>
String date = ""2010-07-28"";</p>

<p>stmt.executeUpdate(""INSERT INTO MYTABLE(time) "" + s);
</code></p>

<p>It's just for the date which you want.</p>

<p>If you want insert now, use the command like:</p>

<p>INSERT INTO mytable(now());</p>
"
9308425,"<p>If you are using <code>eclispe</code> IDE, you can do it in easy manner.</p>

<p><strong>Steps:</strong></p>

<ol>
<li>select the variable</li>
<li>right click on it</li>
<li>click on refactor</li>
<li>click on rename</li>
</ol>

<p>even in <code>netbeans</code> you can follow same steps.
The IDE finds the reference and usages and replace it all.</p>
"
3398147,"<p>Polymorphism, not conditionals.</p>

<pre><code>class User {
    final Print print;
    User(Print print) {
        this.print = print;
    }
}

interface Print {
    void print();
}

class CanPrint implements Print {
    public void print() { do whatever it takes to print a user }
}

class CannotPrint implements Print {
    public void print() { throw null; }
}
</code></pre>
"
3435591,"<p>Use the <code>Show line numbers</code> feature.</p>
"
9419890,"<pre><code>int lcm(int x,int y){

    int i=1;    

    while(true){

        if(!(x*i)%y)
             return x*i;

        i++;
    }
</code></pre>
"
3491163,"<p><code>A.java</code> cannot contain two classes.</p>
"
9488116,"<p>The eclipse shortcut to run Junit test is <code>Alt+Shift+X, T</code>. 
If its not working just press <code>Alt+shift+X</code> a menu will popup just look for Junit.</p>
"
5497101,"<p>Yes, you need a for loop:</p>

<pre><code>public static int countItems(HashMap&lt;String, ArrayList&lt;Item&gt;&gt; yourMap){
    int counter = 0;
    for(ArrayList&lt;Item&gt;&gt; list: yourMap.values()){
        counter += list.size();
    }
    return counter;
}
</code></pre>
"
9506393,"<p>== operator compares hash codes of objects. That is reason why your method is not ok, you should write it like this :</p>

<pre><code>public boolean equals(Object other){        
     if (other instanceof Fraction){
         return ((Fraction)other).getNum == this.num &amp;&amp; ((Fraction)other).getDen == this.den;
     } else {
         return false;
     }
}
</code></pre>
"
9541091,"<p>For those claiming <code>""""</code> and <code>String.Empty</code> are interchangeable or that <code>""""</code> is better, you are very wrong.</p>

<p>Each time you do something like myVariable = """"; you are creating an instance of an object.
If Java's String object had an EMPTY public constant, there would only be 1 instance of the object """"</p>

<p>E.g: -</p>

<pre><code>String.EMPTY = """"; //Simply demonstrating. I realize this is invalid syntax

myVar0 = String.EMPTY;
myVar1 = String.EMPTY;
myVar2 = String.EMPTY;
myVar3 = String.EMPTY;
myVar4 = String.EMPTY;
myVar5 = String.EMPTY;
myVar6 = String.EMPTY;
myVar7 = String.EMPTY;
myVar8 = String.EMPTY;
myVar9 = String.EMPTY;
</code></pre>

<p>10 (11 including String.EMPTY) Pointers to 1 object</p>

<p>Or: -</p>

<pre><code>myVar0 = """";
myVar1 = """";
myVar2 = """";
myVar3 = """";
myVar4 = """";
myVar5 = """";
myVar6 = """";
myVar7 = """";
myVar8 = """";
myVar9 = """";
</code></pre>

<p>10 pointers to 10 objects</p>

<p>This is inefficient and throughout a large application, can be significant.</p>

<p>Perhaps the Java compiler or run-time is efficient enough to automatically point all instances of """" to the same instance, but it might not and takes additional processing to make that determination.</p>
"
5562579,"<p><code>display</code> is not a static method inside Base. So, you have to first create an instance of Base and then call display.</p>

<pre><code>Base base = new Base();
base.display();
</code></pre>
"
5564366,"<pre><code>int count = 0;
for(char c: str.toCharArray()){
//use some method to check if its digit if yes increment the count
}
</code></pre>

<p><strong>Also see</strong></p>

<ul>
<li><a href=""http://download.oracle.com/javase/6/docs/api/java/lang/Character.html#isDigit%28char%29"" rel=""nofollow"">Javadoc</a></li>
</ul>
"
5564416,"<p>Something like:</p>

<pre><code>using System.Text.RegularExpressions;


            Regex r = new Regex( ""[0-9]"" );
            Console.WriteLine( ""Matches "" + r.Matches(""if string contains 2485083572085748 then"" ).Count );
</code></pre>
"
5591445,"<p>Your classes should inherit this from a common base class.</p>

<p>I'm no Java guru but something like should be possible</p>

<pre><code>public class Vehicle
{
    protected Logger logger = Logger.getLogger(this.getClass());
}

public class Car extends Vehicle
{
}
</code></pre>

<p>That's how it could be done in C# - it's been ages since I last used Java.</p>
"
5751725,"<p>I found the usage of this <code>do { } while();</code> quite <strong>acceptable</strong>. Provided that you should be putting <code>while(0)</code> (and now you can use <code>continue</code> also). Because by any chance if you don't <code>break;</code> the loop will terminate anyway.
Interestingly, I have seen such usage in production code of my previous company which was reviewed by experts.</p>

<p>One might think of using <code>return</code>. But the problem with that approach is destructors. Consider below scenario:</p>

<pre><code>void fun ()
{
  CLASS_a a1, a2, a3, a4;
  CLASS_b b1, b2, b3, b4;

  ...
  return 1;
  ...
  return 2;
  ...
  return 3;
  ...
  return 4;
}
</code></pre>

<p>At every return statement, destructor code for above all objects will be placed. This might increase the code size sometimes unknowingly. Additionally, I find better to have lesser exit points, which makes code better debuggable.</p>

<p><strong>Edit</strong>: Putting <code>continue</code> rather than <code>break</code> is a better idea, since the <code>break</code> will not allow to exit the loop when you are inside a <code>switch()</code> statement.</p>
"
9820829,"<p>Here is the full code for you :</p>

<pre><code>public static void main(String[] args) {
    /* Make list */
    List&lt;String&gt; input = new ArrayList&lt;String&gt;();
    input.add(""12"");
    input.add(""11"");
    input.add(""11"");
    input.add(""12"");
    input.add(""12"");
    input.add(""15"");
    input.add(""12"");
    input.add(""17"");
    input.add(""18"");
    input.add(""11"");

    /*
     * count duplicates
     */
    Map&lt;String, Integer&gt; map = new LinkedHashMap&lt;String, Integer&gt;();
    for (String str : input) {
        if (map.containsKey(str)) {
            Integer prevCount = map.get(str);
            map.put(str, ++prevCount);
        } else {
            map.put(str, 0);
        }
    }

    /*
     * make string to display
     */
    StringBuffer sb = new StringBuffer();
    for (Map.Entry&lt;String, Integer&gt; entry : map.entrySet()) {

        String key = entry.getKey();
        Integer count = entry.getValue();
        if (count == 0) {
            sb.append(key + "", "");
        } else
            sb.append(key + ""("" + count + ""), "");
    }
    String tmp = sb.toString();
    String output = tmp.substring(0, tmp.length() - 2); //remove last "", ""
    System.out.println(""["" + output + ""]"");

}
</code></pre>
"
3728804,"<p>You're running on a 1.4 JVM, correct? It's not a 1.4-compiled class running on a 1.6 JVM? And is there a reason that you can't run the application on a 1.6 JVM, at least in a development environment?</p>

<p>If not, the built-in HProf agent should work, at least to find a memory leak. It will tell you what objects are <a href=""http://java.sun.com/developer/technicalArticles/Programming/HPROF.html"" rel=""nofollow"">live</a> when you kill your program, and where they were allocated. </p>

<p>I'm not 100% certain, but I believe that you need to use the <code>-Xrunhprof</code> invocation option (the linked doc invokes with <code>-agentlib</code>, which I think may have been added in 1.5). Also, I think there was a version of 1.4 that supported the ""modern"" debug interface, so could be used with JConsole.</p>
"
3748554,"<p>Of course, you could for example declare it like this: <code>HashMap&lt;Integer, HashMap&lt;String,Object&gt;&gt;</code> You use the outer hashmap to link your id with your inner HashMap, and in the inner one, you create keys ""info"", ""name"", ""quantity"" and associate values with them.</p>

<p>Of course, you could also use an ArrayList as the outer collection (it could be a better match for your ID: <code>ArrayList&lt;HashMap&lt;String,Object&gt;&gt;</code> that way you have indexed (id based) access to each of your ""info"", ""name"", ""quantity"" hashmap ""records""</p>
"
3748566,"<p>You could have ID as key and a <code>List</code> or <code>Set</code> (<code>Collection</code> in general) of objects as value.</p>
"
5894437,"<p>To download a file I use the following code:</p>

<pre><code>public boolean DownloadFile(String url, File outputFile) 
{
try {
  URL u = new URL(url);
  URLConnection conn = u.openConnection();
  int contentLength = conn.getContentLength();

  DataInputStream stream = new DataInputStream(u.openStream());

  byte[] buffer = new byte[contentLength];
  stream.readFully(buffer);
  stream.close();

  DataOutputStream fos = new DataOutputStream(new FileOutputStream(outputFile));
  fos.write(buffer);
  fos.flush();
  fos.close();
  } 
catch(FileNotFoundException e) 
  {
  return false; 
  } 
catch (IOException e) 
  {
  return false; 
  }

return true;
}
</code></pre>
"
3847776,"<p>Not using Java, but it's not exactly hard to convert from C++
PS. Shame on anyone using string conversion.</p>

<pre><code>bool Contains0InBase10( unsigned int i, unsigned int&amp; next )
{
 unsigned int divisor = 10;
 unsigned int remainder = 0;
 while( divisor &lt;= i )
 {
  unsigned int newRemainder = i%divisor;
  if( newRemainder - remainder == 0)
  {
   // give back information allowing a program to skip closer to the next
   // number that doesn't contain 0
   next = i + (divisor / 10) - remainder;
   return true;
  }
  divisor *= 10;
  remainder = newRemainder;
 }
 return false;
}
</code></pre>
"
10131401,"<p>Extending <a href=""http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ConcurrentLinkedQueue.html"" rel=""nofollow"">ConcurrentLinkedQueue</a>, you can use: </p>

<pre><code>private int capacity;

// proper constructor

public boolean add(E e) {
  synchronized(mutex) {
    if (super.size() == capacity) {
      super.remove(super.element());
    }
  }
  return super.add(e);
}
</code></pre>

<p><strike>However, this puts an overhead to the calls to <code>size()</code> method. On a high frequency requirement, it's better to override methods such as <code>add(E e)</code>.</strike>.</p>

<p><strong>Updated based on the comment</strong>.</p>
"
6174200,"<p>It's because of the backslash. A backslash is used to escape characters. Use</p>

<pre><code>split(""\\"")
</code></pre>

<p>to split by a backslash.</p>
"
6174271,"<p><code>split(""\\"")</code>     A backlash is used to escape.</p>
"
6217687,"<p>One way would be using</p>

<pre><code>try {
    Thread.sleep(20);
} catch(InterruptedException e) {}
</code></pre>

<p>at the end of the main loop. Adjust the number to your needs.</p>
"
6233756,"<p>A polymorphic and OOP approach would be to place the method makeItClimbToATree on the Animal interface:</p>

<pre><code>public interface Animal{    
    public void talk(); 
    public void makeItClimbToATree();  
}
</code></pre>

<p>Then the implementors of Animal would provide the behavior for the method, which for all other than Cat could be to throw an exception. This is polymorphic because you operate on different implementations of Animal through a single method. </p>

<p>The function which uses the instanceOf operator is considered ""bad"" OOP because it requires knowledge of all the implementation types to determine the behavior of the method.</p>
"
4014112,"<p>This is the actual String.hashCode() implementation:</p>

<pre><code>public int hashCode() {
int h = hash;    // hash is a field in String
if (h == 0) {
    int off = offset;
    char val[] = value;
    int len = count;

        for (int i = 0; i &lt; len; i++) {
            h = 31*h + val[off++];
        }
        hash = h;
    }
    return h;
}
</code></pre>

<p>So:</p>

<ol>
<li>Strings are immutable, you can not change it's value. You can only create a new String.</li>
<li>String hashcode gets calculated on first use of String.hashCode(). Later invocations return precalculayed value:</li>
<li><strong>YES, it will be faster.</strong> If you call .hashCode() then subsequent comparisons will be faster for a tiny amount of time of one-time calculating hachcode. The question is if this is substantial. Do your own benchmark. </li>
</ol>
"
6297884,"<p>I actually found the problem - when the bytes are loaded using </p>

<pre><code>try {
   // Read from the InputStream
    bytes = mmInStream.read(buffer);
</code></pre>

<p>they are actually loaded in 2 steps.. While debugging and stepping into the code I found that if first loads 990 bytes and then the remaining bytes.. so when i am back to the UI handler i see only the bytes loaded in the second step..</p>

<p>i wonder if there is a way to force to load all bytes at once</p>
"
4043131,"<pre><code>List &lt;String&gt; list = ...
String[] array = new String[list.size()];
int i=0;
for(String s: list){
  array[i++] = s;
}
</code></pre>
"
2802909,"<p>It is totaly wrong to write Fibonacci with recursive methods!!</p>

<p>It is an old famous example for how a good/bad Algorythm affect any project</p>

<p>if you write Fibonatcci recursive, for calculating <code>120</code> you need 36 year toget the result!!!!!!</p>

<pre><code>public static int Fibonacci(int x)
{  // bad fibonacci recursive code
if (x &lt;= 1)
      return 1;
return Fibonacci(x - 1) + Fibonacci(x - 2);
}
</code></pre>

<p>in dot net 4.0 there is a new type name BigInteger and you can use it to make a better function</p>

<p>using System;
using System.Collections.Generic;
using System.Numerics; //needs a ref. to this assembly</p>

<pre><code>namespace Fibonaci
{
 public class CFibonacci
 {
   public static int Fibonacci(int x)
   {
       if (x &lt;= 1)
           return 1;
       return Fibonacci(x - 1) + Fibonacci(x - 2);
   }

   public static IEnumerable&lt;BigInteger&gt; BigFib(Int64 toNumber)
   {
       BigInteger previous = 0;
       BigInteger current = 1;

       for (Int64 y = 1; y &lt;= toNumber; y++)
       {
           var auxiliar = current;
           current += previous;
           previous = auxiliar;
           yield return current;
       }
   }
 }
}
</code></pre>

<p>and you can use it like</p>

<pre><code>using System;
using System.Linq;

namespace Fibonaci
{
 class Program
 {
   static void Main()
   {
       foreach (var i in CFibonacci.BigFib(10))
       {
           Console.WriteLine(""{0}"", i);
       }

       var num = 12000;
       var fib = CFibonacci.BigFib(num).Last();
       Console.WriteLine(""fib({0})={1}"", num, fib);

       Console.WriteLine(""Press a key..."");
       Console.ReadKey();
   }
 }
}
</code></pre>

<p>and in this case you can calculate <code>12000</code> less than a second. so </p>

<p><strong>Using Recursive methos is not always a good idea</strong></p>

<p>Above code imported from <a href=""http://vahidnasiri.blogspot.com/2010/04/4.html"" rel=""nofollow"">Vahid Nasiri blog whiche wrote in Persian</a></p>
"
10356996,"<pre><code>int number = 0;
try { 
   number = Integer.parseInt(string); 
}
catch(NumberFormatException e) {}
</code></pre>
"
2849509,"<p>The correct answer for Java is use a <a href=""http://java.sun.com/javase/6/docs/api/java/util/Set.html"" rel=""nofollow"">Set</a>. If you already have a <code>List&lt;Customer&gt;</code> and want to de duplicate it</p>

<pre><code>Set&lt;Customer&gt; s = new HashSet&lt;Customer&gt;(listCustomer);
</code></pre>

<p>Otherise just use a <code>Set</code> implemenation <code>HashSet</code>, <code>TreeSet</code> directly and skip the <code>List</code> construction phase.</p>

<p>You will need to override <a href=""http://www.ibm.com/developerworks/java/library/j-jtp05273.html"" rel=""nofollow""><code>hashCode()</code> and <code>equals()</code></a> as well to make sure that the behavior you want actually what you get. <code>equals()</code> can be as simple as comparing unique ids of the objects to as complex as comparing every field. <code>hashCode()</code> can be as simple as returning the <code>hashCode()</code> of the unique id' <code>String</code> representation or the <code>hashCode()</code>.</p>
"
6491527,"<p>You create <code>static final</code> variable to make its value accessible without instantiating an object.
E.G.:</p>

<pre><code>public class MyClass
{
     public static final String endpoint= ""http://localhost:8080/myClass"":
     /* ...*/
}
</code></pre>

<p>Then you can access to the data using this line:</p>

<pre><code>MyClass.endpoint
</code></pre>
"
6546233,"<p>You cannot do this, since it doesn't really make sense. If you hadn't called <code>t.join()</code> then you main thread could be anywhere in the code when the <code>t</code> thread throws an exception.</p>
"
10687425,"<p>Another easy answer:</p>

<pre><code>defaultTableModel.getDataVector().removeAllElements();
</code></pre>
"
4319559,"<p>One option is to use classes like java.lang.Integer, then you're not passing a primitive at all.</p>

<p>On the other hand, you can just use code like:</p>

<pre><code>int a = 5;
a = func(a);
</code></pre>

<p>and have func return the modified value.</p>
"
3013670,"<p>If your method takes more than 4 parameters then you got an ugly API. </p>

<p>Why are all your parameter types Strings. Does it make sense to create classes to represent those String like values, instead of just using String for everthing.</p>

<p>For example use a Name class rather String, so creating a Person might look like this...</p>

<pre><code>Person create( FirstName firstName, LastName lastName, Address address );   
</code></pre>

<p>Often programs use String as a container for all sorts of data, whcih leads to poor programs that rarely validate their data. By creating specialist classes even if they hold a single String property, one can add some validation to the factory and know for sure that its a valid value. Naturally your string containers should also be immutable - getters only no setters.</p>

<p>Take a look at <a href=""http://www.javapuzzlers.com/"" rel=""nofollow"">Java Puzzlers</a> from Josh Bloch to learn more tips and wisdom.</p>
"
4348827,"<p>I'm not sure if this would be faster, but I have a feeling it would be.  </p>

<pre><code>private Map&lt;String, Integer&gt; getTetagramCount( final String text) {

    final List&lt;String&gt; list = new ArrayList&lt;String&gt;();

    for( int i =0; i &lt; text.length() - 4; i++) {
        list.add( text.substring( i, i+4);
    }

    Collections.sort( list);

    Map&lt;String, Integer&gt; map = new HashMap&lt;String, Integer&gt;( list.size());
    String last = null;
    int count = 0;
    for( String tetagram : list) {
        if( tetagram != last &amp;&amp; last != null) {
            map.put( tetagram, count);
            count = 0;
        }
        count++;
        last = tetagram;
    }
    if( tetagram != null) {
        map.put( tetagram, count);
    }
    return map;
}
</code></pre>

<p>Depending on what you are doing with the Map when you are done, you may not need the conversion to a Map at the end.</p>
"
3013738,"<p>Your best bet in Java is to create a simple parameter JavaBean - that is, a plain old Java object (POJO), with getters and setters for each one of the parameters. Then, your method signature could be:</p>

<pre><code>void mymethod (Parameters parametersObject)
</code></pre>

<p>and the Parameters JavaBean would have setParam1(...), setParam2(...), setParam3(...), and so on, and could even do some basic internal validation, provide default values, and so on.</p>

<p>If you do not want to go through with creating the Parameters object, use a Map, but then you would have to do additional checking inside of your method for missing parameters. Also, the keys to the map would have to be well-known - that is, known both outside of the method, as well as inside the method.</p>
"
10934704,"<p>Try this,</p>

<pre><code>ThreadPoolExecutor ex =
    new ThreadPoolExecutor(limit, limit, 20, TimeUnit.SECONDS, q);
for (int i = 0; i &lt; limit; i++) {
  ex.execute(new RunnableObject(i + 1));
}
</code></pre>

<p>Lines to be added</p>

<pre><code>ex.shutdown();
ex.awaitTermination(timeout, unit)
</code></pre>
"
6871557,"<p>This looks like a windows path names problem. Why do yo name your projects A, B, C and dont give them proper names isntead?</p>

<pre><code>&lt;classpathentry combineaccessrules=""false"" kind=""src"" path=""/C""/&gt;
</code></pre>

<p>I would bet that /C is interpreted errornously as a drive letter, hence your problems.</p>
"
11027422,"<p><code>Infinite!!</code> There is no such restriction.</p>
"
4491579,"<p>Try this:</p>

<pre><code>f(x) = log&lt;sub&gt;2&lt;/sub&gt;(x/5) + 6
</code></pre>
"
3188255,"<p>It's a bad habit and there's no reason to do it since the compile will generate the <code>Integer.valueOf()</code> for you.</p>
"
7113328,"<p>If you're sick of messing with java you can just send it to db2 as part of your query:</p>

<pre><code>select date1, date2, days(date1) - days(date2) from table
</code></pre>

<p>will return date1, date2 and the difference in days between the two.</p>
"
7121274,"<p>Interesting never seen that before.  Seems largely a style preference. I suppose one difference is: the static initialisation takes place at VM startup, rather than on first request for an instance, potentially eliminating an issue with concurrent instantiations? (Which can also be handled with <code>synchronized getInstance()</code> method declaration)</p>
"
7174398,"<p>If you are looking for something very very simple try this:</p>

<pre><code>Date date = new Date();
String random = String.valueOf(date.getTime()).substring(6);
</code></pre>

<p>The numbers will never repeat in your near future!</p>
"
11401332,"<p>You said singleton, right ? </p>

<p>which means it should be like this ... </p>

<pre><code>public class A{


Map map;

    A a;

    private A()  {

    }

    synchronized  A getInstance()  {
        if(a!=null)
            return new A();
        else
            return null;
    }

 public getValue(String key){
  return map.get(key);
 }

 public remove(String key){
  synchronized(map){
   map.remove(key);
  }
 }
}
</code></pre>

<p>I hope this will work for both the scenarios which you mentioned above. </p>
"
4699348,"<p>I think it is not important but the most common pronunciations are :</p>

<pre><code>    i'm a jay two ee ee programmer
</code></pre>

<p>and</p>

<pre><code>    i'm a jay two ee programmer
</code></pre>

<p>The main thing is that everyone understands what you mean and the four forms are understandable !</p>
"
7198566,"<p>assuming you are using forward singly linked list your code should look like</p>

<pre><code>while(node)
{
      previous = node
      node = node.next
      // Do what ever you want to do with the nodes
}
</code></pre>
"
7215393,"<p>Start with x = y = z = 0;
At each iteration compute three n's:</p>

<pre><code>nx = 2^(x+1)*3^y*5^z
ny = 2^x*3^(y+1)*5^z
nz = 2^x*3^y*5^(z+1)
</code></pre>

<p>Find the least n among the three:</p>

<pre><code>n = min(nx, ny, nz).
</code></pre>

<p>Increase either x, y, or z:</p>

<pre><code>If n == nx -&gt; x = x + 1
If n == ny -&gt; y = y + 1
If n == nz -&gt; z = z + 1
</code></pre>

<p>Stop after the K-th iteration and return n.</p>
"
7223567,"<p>use </p>

<pre><code>panel.setMaximumSize(new Dimension(200,200));
panel.setResizable(false)
</code></pre>

<p>instead?</p>
"
7223962,"<p>I would achieve this with a <a href=""http://download.oracle.com/javase/tutorial/uiswing/layout/none.html"" rel=""nofollow"">null layout manager</a>. Use some simple math to find the correct coordinate for the <code>JPanel</code> to reside, then set the location.</p>

<pre><code>    JFrame frame = new JFrame();
    frame.setBounds(150, 150, 500, 500);
    frame.setVisible(true);

    Container contentPane = frame.getContentPane();
    contentPane.setLayout(null);

    JPanel panel = new JPanel();
    panel.setPreferredSize(new Dimension(100, 100));
    panel.setBackground(Color.red);
    panel.setSize(panel.getPreferredSize());

    int centerX = (contentPane.getWidth() - panel.getWidth()) / 2;
    int centerY = (contentPane.getHeight() - panel.getHeight()) / 2;
    panel.setLocation(centerX, centerY);

    frame.add(panel);
</code></pre>

<p>However if you resize the <code>JFrame</code> then it's no longer centered, but you can probably create a <code>ComponentListener</code> to deal with that.</p>
"
11543678,"<p>Create a class called Round and try using the method round as <strong>Round.round(targetValue, roundToDecimalPlaces)</strong> in your code</p>

<pre><code>public class Round {

        public static float round(float targetValue, int roundToDecimalPlaces ){

            int valueInTwoDecimalPlaces = (int) (targetValue * Math.pow(10, roundToDecimalPlaces));

            return (float) (valueInTwoDecimalPlaces / Math.pow(10, roundToDecimalPlaces));
        }

    }
</code></pre>
"
11568981,"<p>Use the <code>.contains()</code> method that tells you whether the value exists in the list : <a href=""http://docs.oracle.com/javase/1.4.2/docs/api/java/util/List.html#contains%28java.lang.Object%29"" rel=""nofollow"">http://docs.oracle.com/javase/1.4.2/docs/api/java/util/List.html#contains%28java.lang.Object%29</a></p>

<pre><code>myList.contains(1);
</code></pre>

<p>Note: it uses the <code>.equals()</code> method of the contained object (it might be useful in your future developments).</p>

<p>HIH
M.</p>
"
7321699,"<p>You need:</p>

<pre><code>boolean[][] falseMatrix = new boolean[matrix.length][matrix[0].length];
</code></pre>
"
11569316,"<p>To my astonishment, all the solutions proposed so far are just plain wrong, or contain a subtle bug, or could be more efficient.</p>

<p>Here's a solution that works fast whatever the kind of list is, and even if the list contains null elements:</p>

<pre><code>public boolean listIsFilledWith(List&lt;Integer&gt; integers, int i) {
    Integer value = i; // transform the int into an Integer only once
    for (Integer element : integers) { // iterate using an iterator, to avoid performance problems with linked lists
        if (!value.equals(element)) { // value is not null, but element can be. Don't compare objects with == or !=
            return false; // return early
        }
    }
    return true;
}
</code></pre>
"
11697533,"<p>Maybe this trick gives u an idea</p>

<pre><code>Boolean var= new anonymousClass(){
    private String myVar; //String for example
    @Overriden public Boolean method(int i){
          //use myVar and i
    }
    public String setVar(String var){myVar=var; return this;} //Returns self instane
}.setVar(""Hello"").method(3);
</code></pre>
"
11731791,"<p>Perhaps consider implementing a singleton using an enum:</p>

<pre><code>public enum Singleton {
INSTANCE;

public void doStuff() {
    System.out.println(""Whoopee"");
}
}
</code></pre>

<p>and call it like <code>Singleton.INSTANCE.doStuff()</code></p>

<p>This is recommended in the book Effective Java by Josh Bloch</p>
"
11811543,"<blockquote>
  <p>So I have seen a lot of different coding styles, but I'm only going to
  talk about two big ones. I use a style where I just name everything
  like their class name when used in a general sense, like this:</p>
  
  <p>String str = ""This is some text"";</p>
</blockquote>

<p>That is awful.  Imagine if someone were reading your code, trying to understand what it was doing, and they came across a variable named <code>str</code>.  It doesn't convey any meaning to the person who has to read this code as to your intentions.</p>

<p>Conventions are used by and for people to improve readability, and thus the overall quality of software.  Without a convention, any project that has more than one developer will suffer from varying styles that will only hurt the readability of the code.  If you want to know what professionals do, look around on the internet for various <a href=""http://code.google.com/p/java-coding-standards/wiki/Introduction"" rel=""nofollow"">conventions</a>.</p>
"
5034184,"<blockquote>
  <p>what I don't like is making any sacrifices when it comes to information hiding</p>
</blockquote>

<p>First, work with Python for a few years.</p>

<p><code>private</code> is not particularly helpful.  It makes extension of the class hard and it makes testing hard.</p>

<p>Consider rethinking your position on ""hiding"".</p>
"
11904467,"<p>Maybe you need add</p>

<pre><code>File outputFile = new File(dest+""""+filename);
if(!outputFile.exist())outputFile.createNewFile();
</code></pre>
"
12020605,"<p>Try <code>Integer.parseInt()</code> to do this.....</p>

<pre><code>public boolean chkInt(final int[] array){
    int key = false;

    for (Integer i : array){


          try{

                   Integer.parseInt(i);
                   key = true;
                   return key;

             }catch(NumberFormatException ex){

                   key = false;

                   return key;

              }


     }
}
</code></pre>
"
12108526,"<p>Just define array of buttons like this</p>

<pre><code>JButton[] buttons = new JButton[b.length];
</code></pre>

<p>and</p>

<pre><code>for(int i = 0; i &lt; b.length; i++)
</code></pre>

<p>added type <code>int</code> to variable <code>i</code> in the cycle.</p>

<p>It should fix the problem.</p>
"
7750382,"<p>For that you have to call listener on the app, eg:</p>

<pre><code>onCreate()
{

    button.setOnclickListner(this);
}
</code></pre>

<p>and put action on:</p>

<pre><code>    button.setOnclickListner(this);
   {
         #action
   }
</code></pre>
"
3572629,"<p>HashMap doesn't maintain order what you add, if you want your output be the order what you add, you should use LinkedHashMap, so <code>deterministic</code> means output orderdly what you add in. </p>

<p>Here is example:
1.non-deterministic</p>

<pre><code>    HashMap&lt;String, Integer&gt; map = new HashMap&lt;String,Integer&gt;();
    map.put(""a"",5);
    map.put(""b"",16);
    map.put(""c"",46);
    System.out.println(map); //ouptput:{a=5, c=46, b=16}
</code></pre>

<p>2.deterministic</p>

<pre><code>HashMap&lt;String, Integer&gt; map = new LinkedHashMap&lt;String,Integer&gt;();
            map.put(""a"",5);
            map.put(""b"",16);
            map.put(""c"",46);
            System.out.println(map); //output:{a=5, b=16, c=46}
</code></pre>
"
5269424,"<pre><code>private static List&lt;Type&gt; VALUES= new ArrayList&lt;Type&gt;();
static {
   VALUES.add(TypeA);
   VALUES.add(TypeA);
   VALUES.add(TypeB);
}


public static Type randomType()  {
        //will return A twice as often as B              
        return VALUES.get(RANDOM.nextInt(VALUES.size()));
}
</code></pre>
"
5271942,"<p>Did you try </p>

<pre><code>URL some=Test.class.getClass().getClassLoader().getResource(""org/abc/bm/TestFile.xml"");
File file = new File(some.getFile());
</code></pre>
"
7878996,"<p>You can do this. I had to make a chess game, and I wanted the chess piece piece to always go in the center of a cell which was a JlayeredPane:</p>

<pre><code>private void formMouseReleased(java.awt.event.MouseEvent evt) {
    // TODO add your handling code here:
    if (jl != null)
    {
        jl.setLocation(evt.getX()+10, evt.getY()+10);
        Component com = findComponentAt(evt.getPoint());
        if (com instanceof JPanel)
        {
            // System.out.println(""Yes, it's a jpanel"");
            ((JPanel)com).add(jl);
            ((JPanel)com).validate();
        }
    }
}
</code></pre>
"
12365499,"<p>Try replacing the <code>,</code> and then converting into an Integer/float/double</p>

<pre><code>String mysting=""37,78584"";
String newString=myString.replace("","", """");
int value=Integer.parseInt(newString);
</code></pre>
"
3696463,"<p>The easiest solution for your case - change the first line, let it do just the opposite thing:</p>

<pre><code>String lower = Name.toUpperCase ();
</code></pre>

<p>Of course, it's worth to change its name too.</p>
"
12585811,"<p>None of the given answers remove duplicates from the final result, they just remove the duplication. So if a string is present twice it will still be present in the final result, but just the one time. If thats not required, well yeah I have just wasted five minutes ...</p>

<pre><code> public Map&lt;String, String&gt; countOccurences(List&lt;String&gt; source){
       Map&lt;String, Integer&gt; result =   new HashMap&lt;&gt;(source.size());
        int temp =0;
        for (String value : source) {
            if(result.containsKey(value)){
                temp = result.get(value);
                temp++;
                result.put(value, temp);
                temp = 0;
            }
            else {
                result.put(value, 1);
            }
        }
    }
    public List&lt;String&gt; sublistSingles(Map&lt;String, Integer&gt; results){
        List&lt;String&gt; duplicatesRemoved = new ArrayList&lt;&gt;(results.size());
        for(Map.Entry&lt;String, Integer&gt; result:results.entrySet()){
            if(result.getValue().equals(1)){
              duplicatesRemoved.add(result.getKey());
            }
        }
        return duplicatesRemoved;
    }
</code></pre>
"
12685886,"<p><code>System.exit(0)</code> closes the entire app.
<code>finish()</code> is another snippet that closes the current activity.</p>
"
8294788,"<p>you could do something like this :</p>

<pre><code>Object bar;
if ((bar = getFoo()) != null) {
  return bar;
} else if ((bar = getBoo()) != null) {
  return bar;
} else {
  return getBaz()
}
</code></pre>

<p>this way you only need to call the get methods, but not the has ones</p>

<pre><code>EDIT
</code></pre>

<p>this is the same in a more readable format that also elminates the need to call the has methods</p>

<pre><code>Object bar = getFoo()

if (bar == null) {
  bar = getBoo()
}

if (bar == null) {
  bar = getBaz()
}

return bar;
</code></pre>
"
8321179,"<pre><code>private static final String SOAP_ACTION = ""http://localhost:7675/market_helper/services/insertProduct""; 

SOAP ACTION=NAMESPACE+METHOD NAME;
</code></pre>
"
5571708,"<pre><code>public class PiCalc {
public static void main(String[] args) {

    BigDecimal nm = new BigDecimal(22);
    BigDecimal dn = new BigDecimal(7);
    BigDecimal pi = new BigDecimal(0);

    pi = nm.divide(dn, 50, BigDecimal.ROUND_FLOOR);
    System.out.println(""The value is :"" + pi);
}}
</code></pre>

<p>the output looks like <strong>The value is :3.14285714285714285714285714285714285714285714285714</strong></p>

<p>thank you all for your response.  </p>
"
12794955,"<p>Use String buffer.</p>

<pre><code>  final StringBuffer mText = new StringBuffer(""SHOP MA\n""
        + ""----------------------------\n""
        + ""Pannampitiya\n""
        + ""09-10-2012 harsha  no: 001\n""
        + ""No  Item  Qty  Price  Amount\n""
        + ""1 Bread 1 50.00  50.00\n""
        + ""____________________________\n"");
</code></pre>
"
12839387,"<p>Your <code>try-catch</code> overrides your <code>throws InvalidValueException</code>
You shoud remove your <code>try-catch</code>, or remove your <code>throws InvalidValueException</code>.</p>
"
8396919,"<p>Something along these lines ....</p>

<pre><code>   //default icon, custom title
int n = JOptionPane.showConfirmDialog(null,""Would you like green eggs and ham?"",""An Inane Question"",JOptionPane.YES_NO_OPTION);

String result = ""?"";
switch (n) {
case JOptionPane.YES_OPTION:
  result = ""YES"";
  break;
case JOptionPane.NO_OPTION:
  result = ""NO"";
  break;
default:
  ;
}
System.out.println(""Replace? "" + result);
</code></pre>

<p>you may also want to look at <a href=""http://docs.oracle.com/javase/tutorial/uiswing/examples/components/index.html#DialogDemo"" rel=""nofollow"">DialogDemo</a> </p>
"
8401563,"<p>Yes. </p>

<pre><code>import javax.swing.*
</code></pre>

<p>imports all classes within this package.</p>

<pre><code>import javax.swing.JFrame
</code></pre>

<p>imports only <code>JFrame</code> class.</p>

<p>I would suggest importing concrete classes.
Regards!</p>
"
12965045,"<p>You should replace the <code>[]</code> too!</p>

<p>The example is <code>[hostname]</code> and you sould replace all this with something like this:</p>

<pre><code>jdbc:mysql://localhost:3306/openfire
</code></pre>
"
8482394,"<p>As others have said, you should either implement the <code>clone()</code> method or create a copy constructor.</p>

<p>Whichever solution you choose, you will want to make what is called a ""deep copy"". If the object is simple, than creating a deep copy is simple. If the object is complicated, one trick is to serialize and deserialize the object. This will make a deep copy with a minimum amount of effort.</p>

<p>Whenever I do this I like to use <a href=""http://xstream.codehaus.org/tutorial.html"" rel=""nofollow"">XStream</a> instead of native Java serialization. It serializes an object into XML, including any nested objects and collections, which you can then deserialize for a deep copy. The following code will most likely work for your class with no modifications:</p>

<pre><code>public Claus clone(Claus source) {
      XStream xstream = new XStream();
      String serializedObj = xstream.toXML(source);
      return (Claus) xstream.fromXML(serializedObj);
   }
</code></pre>
"
5766367,"<pre><code>double total = 44;
String total2= new Double(total).toString();
</code></pre>

<p>this code works</p>
"
8491488,"<p>You can do it any of following ways:</p>

<pre><code>public int compareTo(Object o)
{    
    return (field.compareTo(o.field)==1 &amp;&amp; field2.compareTo(o.field2)==0)? 0 : 1; 
} 
</code></pre>

<p>OR</p>

<pre><code>public int compareTo(Object o)
{
    // add various if-else blocks
    // OR
    // call a separate method    
}
</code></pre>
"
13181360,"<p>This oughta do it:</p>

<pre><code>String[] abc = {""A"", ""B"", ""C"", ""D"", ""E"", ""F"", ""G"", ""H"", ""I"", ""J"", ""K"", ""L"", ""M"", ""N"", ""O"", ""P"", ""Q"", ""R"",
            ""S"", ""T"", ""U"", ""V"", ""W"", ""X"", ""Y"", ""Z"", };

for(int i=0; i&lt;abc.length; i++){
 System.out.println(abc[i] + (i+1) + ""\t"");
 if( i % 5 == 0 ){
  System.out.println();
 }
}
</code></pre>
"
8562592,"<p>You would need to call the marker method in the main method ie; something like this:</p>

<pre><code>class testTrick {

    public static void main(String args[]) {
        marker();
    }

    static void marker() {
        System.out.println(""programe executed"");
    }

}
</code></pre>
"
8590324,"<p>Try This,</p>

<pre><code>SimpleDateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ss.SSSSSSSZ"");
        String date=sdf.format (new Date() );
</code></pre>

<p>Its For  ISO 8601 format</p>
"
13378232,"<p>The switch/case statement inside of a for loop is fine, the problem is that switch isn't a function call. Try something like this:</p>

<pre><code>    string obj;
    switch (n){

    case 1 : obj=""thumb""; break;
    case 2 : obj=""show""; break;
    //Etc
    }


    }
    println(""This old man, he played "" + n);
    println(""He played knick-knack on my"" + obj);
    println(""With a knick-knack, paddy-whack,"");
    println(""Give your dog a bone"");
    println(""This old man came roiling home"");
</code></pre>
"
8638688,"<pre><code>String a = ""[ hello, char[]={a,b,c} ... bye ] "";
a.substring(1,23);
System.out.println(a);
</code></pre>

<p>There you go i miss read.</p>
"
4269239,"<p>Instead of iterating over your list with an integer, use the for each construct supported by the Collections interface.</p>

<pre><code>public void listOfExternalPoints(List&lt;Point&gt; list) { 
    for (Point pointListEntry : pointList) { 
        for (Point listEntry : list) { 
            if (pointListEntry == listEntry) { 
                pointList.remove(pointListEntry); 
            } 
        } 
    } 
}
</code></pre>

<p>I haven't debugged this, but it looks right to me.</p>
"
6069807,"<p>Change the code to this and check if that works</p>

<pre><code>x =random.nextInt(fil.size() - 1);
</code></pre>
"
6075467,"<p>You need to know the POJO name. Assuming you have something like <code>pojo.getName()</code>, then it goes like this:</p>

<pre><code>Map&lt;String, Pojo&gt; pojoMap = new HashMap&lt;String, Pojo&gt;();
for (Pojo pojo:pojoList) {
  pojoMap.put(pojo.getName(), pojo);
}
</code></pre>

<p><em>Note</em> that I changed your requirement, I've <em>converted</em> one list of pojos to one map.</p>
"
13584247,"<p>Modify the maximun memory parameter in <em>eclipse.ini</em></p>

<pre><code>-Xmx1024m
</code></pre>

<p>And restart your computer.</p>

<p>It worked for me :)</p>
"
8725848,"<p>append method should be used instead of ""+"".</p>

<p><code>new StringBuilder(""select id1, "").append("" id2 "").append("" from "").append("" table"").toString();</code></p>
"
6093016,"<p>Because in Java, you can call the getClass function on an object to determine its type.</p>

<pre><code>public void myMethod(Object obj) {  
    Class cls = obj.getClass();  
    System.out.println(""The type of the object is: "" + cls.getName());  
}  
</code></pre>

<p>Specifically, you'd want this functionality:</p>

<pre><code>public void myMethod(Object obj) {  
    if (obj instanceof String) {  
        System.out.println(""It's a String"");  
    }  
    else {  
        System.out.println(""It's not a String"");  
    }  
}  
</code></pre>
"
6093032,"<p>Your Python code example is really nonsense.</p>

<p>I can write in Python:</p>

<pre><code>is_integer = lambda x: isinstance(x, int)
print is_integer(2)
print is_integer('foo')
</code></pre>
"
8732690,"<p>Equality checks in Java come in two forms.</p>

<p>The equality operator ""=="" checks to see if two variables refer to the same object. In your case, this test fails because, though their content is the same, you're referring to two different string objects.</p>

<p>The <code>.equals()</code> method is available on every Java object and provides extensible equality checking. In the case of Strings, consider the following:</p>

<pre><code>""+"".equals(""+"") // evaluates to true
</code></pre>

<p>going back to the equality operator:</p>

<pre><code>""+"" == ""+"" // evaluates to false
</code></pre>

<p>See <a href=""http://docs.oracle.com/javase/tutorial/java/nutsandbolts/op2.html"" rel=""nofollow"">this page</a> for more detail.</p>
"
13702461,"<p>""The requirement is that we generate different time values increased by 15 seconds , its not like we need to execute every 15 seconds"" ... so here it is ...</p>

<pre><code>    long start = System.currentTimeMillis();       // now
    long stop = start + 60000;                     // 60 seconds later
    long interval = 15000;                         // 15 second interval
    for (long i = start; i &lt; stop; i+=interval) {
            System.out.println(new Date(i));
    }
</code></pre>
"
6132317,"<p>Something you could do is make a <code>Map&lt;Object, Long&gt;</code> which maps each object to it's memory size.</p>

<p>Then to measure the size of a particular object, you have to do it at instantiation of each object - measure the JVM memory use before (calling <code>Runtime.totalMemory()</code>) and after building the object (calling <code>Runtime.totalMemory()</code>) and take the difference between the two - that is the size of the object in memory. Then add the <code>Object</code> and <code>Long</code> to your map. From there you should be able to loop through all of the keys in the map and find the object using the largest amount of space.</p>

<p>I am not sure there is a way to do it per object after you already have your <code>List&lt;Object&gt;</code>... I hope this is helpful!</p>
"
13786989,"<pre><code>public static void main(String[] args)throws InterruptedException {

    MyRunnable r = new MyRunnable();
    Thread t1 = new Thread(r,""A"");
    Thread t2 = new Thread(r,""B"");
    Thread t3 = new Thread(r,""C"");
    t1.start();
    Thread.sleep(1000);
    t2.start();
    Thread.sleep(1000);
    t3.start();



}
</code></pre>
"
8826414,"<pre><code>for (int j = 0; j &lt;= 10; j++)
{
   for (int i = 0; i &lt;= 10; i++)
   {
      if (((i * i) + (j * j) - (12 * i) - (10 * j) + 36) == 0)
      {
         System.out.println(""("" + i + "", "" + j + "")"");
         return;
      }  
   }  
} 
</code></pre>

<p>It is import to remember the <code>return;</code> part as you would otherwise still search for solutions although you already found one. If you wan't more solutions, then you should should omit the ´return´ statement.</p>
"
4448396,"<pre><code>s1.contains(s2) returns true;
s1.indexOf(s2) returns 0. 
s1.indexOf(""foo"") returns -1
</code></pre>

<p>For more sophisticated cases use class Pattern. </p>
"
14371587,"<p>just:</p>

<pre><code>kill -SIGQUIT &lt;PID&gt;
</code></pre>
"
14538385,"<pre><code> public static int countChars(String input,char find){      
            if(input.indexOf(find) != -1){          
            return  countChars(input.substring(0, input.indexOf(find)), find)+ 
                countChars(input.substring(input.indexOf(find)+1),find) + 1;
            }
            else {
                return 0;
            }

        }
</code></pre>
"
14750414,"<pre><code>Calendar cal = Calendar.getInstance();//getting the instance of the Calendar using the factory method
we have a get() method to get the specified field of the calendar i.e year

int year=cal.get(Calendar.YEAR);//for example we get 2013 here 

cal.set(year, 0, 1); setting the date using the set method that all parameters like year ,month and day
Here we have given the month as 0 i.e Jan as the month start 0 - 11 and day as 1 as the days starts from 1 to30.

Date firstdate=cal.getTime();//here we will get the first day of the year

cal.set(year,11,31);//same way as the above we set the end date of the year

Date lastdate=cal.getTime();//here we will get the first day of the year

System.out.print(""the firstdate and lastdatehere\n"");
</code></pre>
"
9106427,"<pre><code>int N;
function num_paths(intx,int y)
{
    int[][] arr = new int[N][N];
arr[N-1][N-1] = 0;
for(int i =0;i&lt;N;i++)
{
    arr[N-1][i]=1;
    arr[i][N-1]=1;
}
for(int i = N-2;i&gt;=0;i--)
{
    for(int j=N-2;j&gt;=0;j--)
    {
        arr[i][j]= arr[i+1][j]+arr[i][j+1];
    }
}
return arr[0][0];
 }
</code></pre>
"
15136166,"<p>1) enum is a keyword in Object oriented method.</p>

<p>2) It is used to write the code in a Single line, That's it not more than that.</p>

<pre><code>     public class NAME
     {
        public static final String THUNNE = """";
        public static final String SHAATA = """"; 
        public static final String THULLU = """"; 
     }

-------This can be replaced by--------

  enum NAME{THUNNE, SHAATA, THULLU}
</code></pre>

<p>3) Most of the developers do not use enum keyword, it is just a alternative method.. </p>
"
6489427,"<p>In Java, you can't define ""var"" twice.  It will not simply create a new memory location and throw a new instance of ""var"" in there. Our first step has to be fixing your code. Instead, your code will look like this:</p>

<pre><code>  String var = ""Abhi"";
  var = ""Abhishek"";
</code></pre>

<p>Therefore, to answer your first question, yes. ""Abhishek"" will overwrite ""Abhi"". </p>

<p>If you use</p>

<pre><code>String var= new String();
</code></pre>

<p>that means you create a new instance of the class String and you assign it to var. Var becomes a new, empty (I believe), string.</p>
"
6533453,"<p>use <code>final</code> keyword. It is analogue for <code>const</code></p>
"
6546903,"<pre><code>while(true)
{
   if(   )
   {
        break;
   }
   else if()
   {
        break;
   }
   else
   {
        do something;
        break;
   }
}
</code></pre>
"
9206272,"<p><code>==</code> can only be used to compare primitive datatypes. To compare objects you need to use <code>equals</code> method. Using a <code>==</code> operator on objects actually compares there addresses instead of values.</p>
"
9206283,"<p>The reason is that you cannot compare strings in Java using <code>==</code>.</p>

<p>In C++ or C# (or other languages supporting operator redefinition), you can overwrite the <code>==</code> operator to provide that functionality. Java does not support that.</p>
"
9206317,"<p><code>str1.equals(str2)</code> returns <code>true</code> because the <code>equals()</code> function compares the content of the string variables, where as <code>==</code> operator compares the instances. Since <code>str1</code> and <code>str2</code> are two differences of instances of <code>String</code> class, it returns <code>false</code></p>
"
15584751,"<p>Here's my solution, albeit the function names aren't nicely named, just think of them as abstract (not in the Java abstract keyword sense) functions that perform their task.</p>

<pre><code>public int count8(int n) {
    return g(n, 0); 
}

public int g(int n, int prev) {
    int rest = n/10;
    int digit = n % 10;
    if (rest == 0) {
       return h(digit, prev);
    }

    int toAdd = h(digit, prev);
    return toAdd + g(rest, digit);
}


    public int h(int digit, int prev) {
        return prev == 8 &amp;&amp; digit == 8 ? 
                                       2 : digit == 8 ? 
                                                      1 : 0;    
}
</code></pre>
"
9206370,"<p>In Java <code>==</code> operator matches the two objects i.e their address while <code>.equals()</code>  method mathces the values of both objects, thats why you are getting <code>true</code> for <code>equals()</code> and <code>false</code> for <code>==</code> as both are different objects.</p>
"
6553969,"<p>Throws raise an exception. An exception will be passed backward to the function into the stack until it is caught by a catch block, that can handle it. </p>

<p>When throw keyword is put in a method declaration it indicates that a call to that method could generate an exception. For example:</p>

<pre><code>public void methodFoo (int val) throws IllegalArgumentException  {
    if (val &lt;0) throw new IllegalArgumentExecption();
}
</code></pre>

<p>means that the methodFoo can raise an exception of the type IllegalArgumentException.
When you call such a method you typically use the following try/catch block statement:</p>

<pre><code>try{
   methodFoo(int param);

}catch (IllegalArgumentException e){
       //if any method call inside methodFoo will raise such exception the execution flow of the program will be interrupted and the execution restart from the first catch block that intercept that execption
}
</code></pre>

<p>The ""good"" of this approach is that, with such feature, you are not forced to check the return value of a method to be sure that your method call succeded. in C language you usually do something like:</p>

<pre><code>int ret = methodFoo();

if (ret == null){
     //error
}
</code></pre>
"
4801420,"<pre><code>public class ImageButton extends JButton {

    protected ImageButton(){
    }

    @Override
        public void paint(Graphics g) {
        Graphics2D g2 = (Graphics2D) g;
        Image img = Toolkit.getDefaultToolkit().getImage(""water.bmp"");

        g2.drawImage(img, 45, 35, this);
        g2.finalize();
    }
}
</code></pre>

<hr>

<p><strong>OR use this code</strong></p>

<pre><code>class MyButton extends JButton {

    Image image;
    ImageObserver imageObserver;


    MyButtonl(String filename) {
            super();
            ImageIcon icon = new ImageIcon(filename);
            image = icon.getImage();
            imageObserver = icon.getImageObserver();
        }

     public void paint( Graphics g ) {
            super.paint( g );
            g.drawImage(image,  0 , 0 , getWidth() , getHeight() , imageObserver);
        }
    }
</code></pre>
"
9224612,"<p>try with this</p>

<pre><code>String str=s.replaceAll(""[^\\p{Print}]"","""");
System.out.println(str);
</code></pre>
"
6604407,"<h3>EDIT: I believe following reflection based code should satisfy OP's requirements:</h3>

<pre><code>static List&lt;Integer&gt; add2 (List&lt;Integer&gt; lst) throws Exception {
    Class&lt;?&gt; cl = lst.getClass();
    Constructor&lt;?&gt; con = cl.getConstructor(int.class);
    @SuppressWarnings(""unchecked"")
    List&lt;Integer&gt; copy = (List&lt;Integer&gt;) con.newInstance(lst.size());
    for (Integer i : lst)
        copy.add(i.intValue()+2);
    return copy;
}
</code></pre>

<h3>TESTING</h3>

<pre><code>int[] intA = {5, 8, 9, 11};
List&lt;Integer&gt; l = new Vector&lt;Integer&gt;();
for (int i: intA)
    l.add(i);
System.out.println(""original: "" + l.getClass().getCanonicalName() + "", "" + l);
List&lt;Integer&gt; n = add2(l);
System.out.println(""converted: "" + n.getClass().getCanonicalName() + "", "" + n);
</code></pre>

<h3>OUTPUT</h3>

<pre><code>original: java.util.Vector, [5, 8, 9, 11]
converted: java.util.Vector, [7, 10, 11, 13]
</code></pre>
"
16064283,"<p>I hope that it will helpful to you .try this code.</p>

<pre><code>import java.io.*;

class Cast

{

public static void main(String args[]) throws IOException

{

BufferedReader br=new BufferedReader(new InputStreamReader(System.in));

byte a=20;

short s=31468;

int i=12345678;

char c=’c';

float f=3.56f;

//Widening or promotion [java question bank][1]

System.out.println(“a=(short)  “+(short) a);

System.out.println(“a=(int)  “+(int) a);

System.out.println(“a=(long)  “+(long)a);

System.out.println(“a=(float)  “+(float)a);

System.out.println();

System.out.println();

System.out.println(“s=(int) “+(int)s);

System.out.println(“s=(long)  “+(long)s);

System.out.println(“s=(float)  “+(float)s);

System.out.println();

System.out.println();

System.out.println(“i=(long)  “+(long)i);

System.out.println(“i=(float)  “+(float)i);

System.out.println(“i=(double)  “+(double)i);


//Narrowing using [java question bank][2]

System.out.println(“f=(byte)  “+(byte)f);

System.out.println(“f=(short)  “+(short)f);

System.out.println(“f=(char)  “+(char)f);

System.out.println(“f=(long)  “+(long)f);

System.out.println();

System.out.println();

System.out.println(“i=(byte)  “+(byte)i);

System.out.println(“i=(short)  “+(short)i);

System.out.println();

System.out.println();

System.out.println(“s=(byte)  “+(byte)s);


}

}
</code></pre>
"
9270876,"<p>Try this :</p>

<pre><code>public static char[] rotateString(char[] s, int rotateAmount){
    String oldStr=new String(s);
    String newStr=oldStr.substring(oldStr.length()-rotateAmount,oldStr.length())+oldStr.substring(0,oldStr.length()-rotateAmount);
    return newStr.toCharArray();
}
</code></pre>
"
4823578,"<p>Personally I dont think it is useful except for IDE's that do the compile-time error checking, but that is my opinion. Reason: suppose you have</p>

<pre><code>Class A { 
    methodName() { System.out.println (""A""); }
}

class B extends A { 
    methodName() { System.out.println (""B""); }
}
</code></pre>

<p>At runtime, you will probably call B.methodName() - it doesnt matter to B whether B.methodName() overrides the same name of class A(). To class B, it shouldn't even matter if the superclass (A) implements methodName(). What I mean is that inheritance is a one-way street - You cannot un-inherit something by using a @override - all the compiler can check is if there is a method with the same signature in the superclass - which will not be used anyways.</p>

<p>For the other answers, if someone edits A.java to delete or rename methodName() or change its signature, you can still call B.methodName() without a problem, but only if you do not use that @override. I think this is also why it is <strong>not</strong> a part of the Java language.</p>
"
6621043,"<p>If you want to exit from a simple <code>if else</code> statement but still stays within a particular context (not by returning to the calling context), you can just set the block condition to false:</p>

<pre><code>if(condition){
//do stuff
   if(something happens)
        condition = false;
}
</code></pre>

<p>This will guarantee that there is no further execution, the way I think you want it..You can only use break in a <code>loop</code> or <code>switch case</code></p>
"
9299135,"<p>You are parsing with wrong format</p>

<pre><code>new SimpleDateFormat(""MM/dd/yyyy""); 
</code></pre>
"
4871135,"<p>Current working directory is defined differently in different Java implementations For certain prior to Java 7 there was no consistent way to get the working directory. You could work around this by launching Java with <code>-D</code> and defining a variable to hold the info</p>

<p>Something like</p>

<pre><code>java -Dcom.mycompany.workingDir=""%0""
</code></pre>

<p>That's not quite right, but you get the idea. Then <code>System.getProperty(""com.mycompany.workingDir"")</code>...</p>
"
16644082,"<p>If you couldn't find the build.xml file in your project then you have to build it to be able to debug it and get your <strong>.apk</strong>  </p>

<p>you can use this <strong>command-line</strong> to build:</p>

<pre><code>android update project -p ""project full path""
</code></pre>

<p>where ""Project full path"" -- Give your full path of your project location</p>

<p>after this you will find the build.xml then you can debug it.</p>
"
16644531,"<p>Using ant debug after building build.xml file :</p>

<p>in your cmd your root should be your project at first then use the ant debug command
e.g:</p>

<pre><code>c:\testApp&gt;ant debug 
</code></pre>
"
4903637,"<p>I believe a <a href=""http://download.oracle.com/javase/1.5.0/docs/api/java/util/PriorityQueue.html"" rel=""nofollow"">Priority Queue</a> will do the job.</p>

<p>Caveat (from the same doc page):</p>

<blockquote>
  <p>This class and its iterator implement
  all of the <em>optional</em> methods of the
  <code>Collection</code> and Iterator interfaces.
  The <code>Iterator</code> provided in method
  <code>iterator()</code> is not guaranteed to
  traverse the elements of the priority
  queue in any particular order. If you
  need ordered traversal, consider using
  <code>Arrays.sort(pq.toArray())</code>.</p>
</blockquote>
"
16842119,"<p>I know this question is quite old, but since TreeSet implements NavigableSet you have access to the subSet method which runs in constant time.</p>

<pre><code>subSet(k, k + 1).first();
</code></pre>

<p>The first() call takes log(n) time where n is the size of the original set. This does create some unnecessary objects which could be avoided with a more robust implementation of TreeSet, but it avoids using a third party library.</p>
"
17087778,"<p>Try something like this:</p>

<pre><code>    //locations to calculate difference with 
    Location me   = new Location(""""); 
    Location dest = new Location(""""); 

    //set lat and long of comparison obj 
    me.setLatitude(_mLat); 
    me.setLongitude(_mLong); 

    //init to circumference of the Earth 
    float smallest = 40008000.0f; //m 

    //var to hold id of db element we want 
    Integer id = 0; 

    //step through results 
    while(_myCursor.moveToNext()){ 

        //set lat and long of destination obj 
        dest.setLatitude(_myCursor.getFloat(_myCursor.getColumnIndexOrThrow(DataBaseHelper._FIELD_LATITUDE))); 
        dest.setLongitude(_myCursor.getFloat(_myCursor.getColumnIndexOrThrow(DataBaseHelper._FIELD_LONGITUDE))); 

        //grab distance between me and the destination 
        float dist = me.distanceTo(dest); 

        //if this is the smallest dist so far 
        if(dist &lt; smallest){ 
            //store it 
            smallest = dist; 

            //grab it's id 
            id = _myCursor.getInt(_myCursor.getColumnIndexOrThrow(DataBaseHelper._FIELD_ID)); 
        } 
    } 
</code></pre>

<p>After this, id contains the item you want from the database so you can fetch it:</p>

<pre><code>    //now we have traversed all the data, fetch the id of the closest event to us 
    _myCursor = _myDBHelper.fetchID(id); 
    _myCursor.moveToFirst(); 

    //get lat and long of nearest location to user, used to push out to map view 
    _mLatNearest  = _myCursor.getFloat(_myCursor.getColumnIndexOrThrow(DataBaseHelper._FIELD_LATITUDE)); 
    _mLongNearest = _myCursor.getFloat(_myCursor.getColumnIndexOrThrow(DataBaseHelper._FIELD_LONGITUDE)); 
</code></pre>

<p>Hope that helps!</p>
"
17524784,"<p>go to that path ""C:\Program Files (x86)\JetBrains\IntelliJ IDEA 12.1.4\bin\idea.exe.vmoptions""
 and change size to -Xmx512m</p>

<pre><code>  -Xms128m
  -Xmx512m
  -XX:MaxPermSize=250m
  -XX:ReservedCodeCacheSize=64m
  -XX:+UseCodeCacheFlushing
  -ea
  -Dsun.io.useCanonCaches=false
  -Djava.net.preferIPv4Stack=true
</code></pre>

<p>hope its will work</p>
"
17609356,"<p>Add this dependecy in pom.xml file.</p>

<p>In <code>&lt;systemPath&gt;</code> property you have to write your jdk lib path.</p>

<pre><code>&lt;dependency&gt;  
    &lt;groupId&gt;com.sun&lt;/groupId&gt; 
    &lt;artifactId&gt;tools&lt;/artifactId&gt;
    &lt;version&gt;1.4.2&lt;/version&gt;
    &lt;scope&gt;system&lt;/scope&gt;
    &lt;systemPath&gt;C:/Program Files/Java/jdk1.6.0_30/lib/tools.jar&lt;/systemPath&gt;
&lt;/dependency&gt; 
</code></pre>
"
17702969,"<p>Here we are using two new keywords. For every new keyword a new object is generated. </p>

<p>The <code>==</code> method checks for the <code>hashcode</code> of the object, in this case we get <code>false</code> as the answer.</p>
"
6975708,"<p>Using the DataInputStream of the Java SDK can be helpful here. DataInputStream provide such functions as readByte() or readChar(), if that's what needed.
A simple example can be:</p>

<pre><code>DataInputStream dis = new DataInputStream(new FileInputStream(""file.dat"")); 
try {
   while(true) {
      byte b = dis.readByte();
      //Do something with the byte
   } 
} catch (EOFException eofe) {
//Stream Ended
} catch (IOException ioe) {
//Input exception
}
</code></pre>

<p>Hope it helps. You can, of course, read the entire stream to a byte array and iterate through it as well...</p>
"
18462035,"<p>I know the question is solved but what about:</p>

<p><code>BitmapFactory.decodeStream(getResources().openRawResource(getResources().getIdentifier(""bitmapname"", ""drawable"", context.getPackageName())))</code></p>
"
9452569,"<p>Modefiy your <code>onConfigurationChanged</code> method to the following</p>

<pre><code>public void onConfigurationChanged(Configuration newConfig) {
    super.onConfigurationChanged(newConfig);
    // Checks the orientation of the screen
    if (newConfig.orientation == Configuration.ORIENTATION_LANDSCAPE) {
        Toast.makeText(this, ""landscape"", Toast.LENGTH_SHORT).show();
    } else if (newConfig.orientation == Configuration.ORIENTATION_PORTRAIT) {
        Toast.makeText(this, ""portrait"", Toast.LENGTH_SHORT).show();
    }
}
</code></pre>
"
18981872,"<p>I get the same error. Here the problem which leads to this error message:</p>

<p>I create some objects which use the Logger before I configure the log4j:</p>

<pre><code>Logger.getLogger(Lang.class.getName()).debug(""Loading language: "" + filename);
</code></pre>

<p>Solution: 
Configure the log4j at the beginning in the main method:</p>

<pre><code>PropertyConfigurator.configure(xmlLog4JConfigFile); 
// or BasicConfigurator.configure(); if you dont have a config file
</code></pre>
"
19255941,"<pre><code>String[] fmgStrng = aryToSplit.split(""\\\^""); 
</code></pre>
"
19265122,"<p>Duplicate integer remove : this is the perfect answer 
/// Haris  ///</p>

<pre><code>public static void duplicateRemove(int[] arr) {
    int temp = 0;

    for (int i = 0; i &lt; arr.length; i++) {
        for (int j = 0; j &lt; arr.length; j++) {
            if (arr[i] &lt; arr[j]) {
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }

    int count;
    for (int j = 0; j &lt; arr.length;) {
        count = 1;
        for (int i = j + 1; i &lt; arr.length; i++) {
            if (arr[i] == arr[j]) {
                count++;
            } else
                break;

        }
        System.out.println(arr[j] + "" is :  "" + count);
        j += count;
    }

}
</code></pre>
"
5277954,"<p>It's because you're using the <code>new</code> statement to construct the objetcs.</p>

<pre><code>Integer a = Integer.valueOf(10);
Integer b = Integer.valueOf(10);
System.out.println(""a == b: "" + (a == b));
</code></pre>

<p>That will print out <code>true</code>. Weird, but Java.</p>
"
19955758,"<p>You could always use Googles Guava</p>

<pre><code>String text = ""13567"";
CharMatcher charMatcher = CharMatcher.DIGIT;
int output = charMatcher.countIn(text);
</code></pre>
"
20038248,"<p>You have to upgrade android API to level 9, or use <code>String.trim().length()==0</code> or <code>String.equals("""")</code> instead, it should work for your android API level and your JDK version.</p>
"
5392730,"<p>Generate a random number (which is always between 0-1) and multiply by 1000000</p>

<pre><code>Math.round(Math.random()*1000000);
</code></pre>
"
5392765,"<p>Would that work for you?</p>

<pre><code>public class Main {

public static void main(String[] args) {
    Random r = new Random(System.currentTimeMillis());
    System.out.println(r.nextInt(100000) * 0.000001);
}
</code></pre>

<p>}</p>

<p>result e.g. 0.019007</p>
"
20261757,"<pre><code>public class Fibonaci{      

    static void fibonacci() {
        int ptr1 = 1, ptr2 = 1, ptr3 = 0;
        int temp = 0;
        BufferedReader Data=new BufferedReader (new InputStreamReader(System.in));
        try {
            System.out.println(""The Number Value's fib you required ? "");
            ptr3 = Integer.parseInt(Data.readLine());

            System.out.print(ptr1 + "" "" + ptr2 + "" "");
            for (int i = 0; i &lt; ptr3; i++) {
                System.out.print(ptr1 + ptr2 + "" "");
                temp = ptr1;
                ptr1 = ptr2;
                ptr2 = temp + ptr2;
            }
        } catch(IOException err) {
            System.out.println(""Error!"" + err);
        } catch(NumberFormatException err) {
            System.out.println(""Invald Input!"");
        }
    }

    public static void main(String[]args)throws Exception{    
            Fibonaci.fibonacci();
    }   
 }
</code></pre>

<p>You can do like this.   </p>
"
7447837,"<p>Here is  DOM based solution. I have tested this with the xml you provided. This needs to be checked against the actual xml files that you have. </p>

<p>Since this is based on DOM parser, <em>please remember that this will require <strong>a lot of memory</strong> depending upon your xml file size</em>. But its much faster as it's DOM based.</p>

<p>Algorithm :</p>

<ol>
<li>Parse the document</li>
<li>Extract the root element name</li>
<li>Get list he nodes based on the split criteria (using XPath)</li>
<li>For each node, create an empty document with root element name as extracted in step #2</li>
<li>Insert the node in this new document</li>
<li>Check if nodes are to be filtered or not.</li>
<li>If nodes are to be filtered, then check if a specified element is present in the newly created doc.</li>
<li>If node is not present, don't write to the file.</li>
<li>If the nodes are NOT to be filtered at all, don't check for condition in #7, and write the document to the file.</li>
</ol>

<p>This can be run from command prompt as follows </p>

<pre><code>java    XMLSplitter xmlFileLocation  splitElement filter filterElement
</code></pre>

<p>For the xml you mentioned it will  be </p>

<pre><code>java    XMLSplitter input.xml  staff  true nickname
</code></pre>

<p>In case you don't want to filter </p>

<pre><code>java    XMLSplitter input.xml  staff 
</code></pre>

<p>Here is the complete java code:</p>

<p>package com.xml.xpath;</p>

<pre><code>import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringReader;
import java.io.StringWriter;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;

import org.w3c.dom.DOMException;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

public class XMLSplitter {

    DocumentBuilder builder = null;
    XPath xpath = null; 
    Transformer transformer = null;
    String filterElement;
    String splitElement;
    String xmlFileLocation;
    boolean filter = true;


    public static void main(String[] arg) throws Exception{

        XMLSplitter xMLSplitter = null;
        if(arg.length &lt; 4){

            if(arg.length &lt; 2){
                System.out.println(""Insufficient arguments !!!"");
                System.out.println(""Usage: XMLSplitter xmlFileLocation  splitElement filter filterElement "");
                return;
            }else{
                System.out.println(""Filter is off..."");
                xMLSplitter = new XMLSplitter();
                xMLSplitter.init(arg[0],arg[1],false,null);
            }

        }else{
            xMLSplitter = new XMLSplitter();
            xMLSplitter.init(arg[0],arg[1],Boolean.parseBoolean(arg[2]),arg[3]);
        }



        xMLSplitter.start();    

    }

    public void init(String xmlFileLocation, String splitElement, boolean filter, String filterElement ) 
                throws ParserConfigurationException, TransformerConfigurationException{

        //Initialize the Document builder
        System.out.println(""Initializing.."");
        DocumentBuilderFactory domFactory = DocumentBuilderFactory.newInstance();
        domFactory.setNamespaceAware(true);   
        builder = domFactory.newDocumentBuilder();

        //Initialize the transformer
        TransformerFactory transformerFactory = TransformerFactory.newInstance();
        transformer = transformerFactory.newTransformer();
        transformer.setOutputProperty(OutputKeys.METHOD, ""xml"");
        transformer.setOutputProperty(OutputKeys.ENCODING,""UTF-8"");
        transformer.setOutputProperty(""{http://xml.apache.org/xslt}indent-amount"", ""4"");
        transformer.setOutputProperty(OutputKeys.INDENT, ""yes"");

        //Initialize the xpath
        XPathFactory factory = XPathFactory.newInstance();
        xpath = factory.newXPath();

        this.filterElement = filterElement;
        this.splitElement = splitElement;
        this.xmlFileLocation = xmlFileLocation;
        this.filter = filter;


    }   


    public void start() throws Exception{

            //Parser the file 
            System.out.println(""Parsing file."");
            Document doc = builder. parse(xmlFileLocation);

            //Get the root node name
            System.out.println(""Getting root element."");
            XPathExpression rootElementexpr = xpath.compile(""/"");
            Object rootExprResult = rootElementexpr.evaluate(doc, XPathConstants.NODESET);
            NodeList rootNode = (NodeList) rootExprResult;          
            String rootNodeName = rootNode.item(0).getFirstChild().getNodeName();

            //Get the list of split elements
            XPathExpression expr = xpath.compile(""//""+splitElement);
            Object result = expr.evaluate(doc, XPathConstants.NODESET);
            NodeList nodes = (NodeList) result;
            System.out.println(""Total number of split nodes ""+nodes.getLength());
            for (int i = 0; i &lt; nodes.getLength(); i++) {
                //Wrap each node inside root of the parent xml doc
                Node sigleNode = wrappInRootElement(rootNodeName,nodes.item(i));
                //Get the XML string of the fragment
                String xmlFragment = serializeDocument(sigleNode);
                //System.out.println(xmlFragment);
                //Write the xml fragment in file.
                storeInFile(xmlFragment,i);         
            }

    }

    private  Node wrappInRootElement(String rootNodeName, Node fragmentDoc) 
                throws XPathExpressionException, ParserConfigurationException, DOMException, 
                        SAXException, IOException, TransformerException{

        //Create empty doc with just root node
        DOMImplementation domImplementation = builder.getDOMImplementation();
        Document doc = domImplementation.createDocument(null,null,null);
        Element theDoc = doc.createElement(rootNodeName);
        doc.appendChild(theDoc);

        //Insert the fragment inside the root node 
        InputSource inStream = new InputSource();     
        String xmlString = serializeDocument(fragmentDoc);
        inStream.setCharacterStream(new StringReader(xmlString));       
        Document fr = builder.parse(inStream);
        theDoc.appendChild(doc.importNode(fr.getFirstChild(),true));
        return doc;
    }

    private String serializeDocument(Node doc) throws TransformerException, XPathExpressionException{

        if(!serializeThisNode(doc)){
            return null;
        }

        DOMSource domSource = new DOMSource(doc);                
        StringWriter stringWriter = new StringWriter();
        StreamResult streamResult = new StreamResult(stringWriter);
        transformer.transform(domSource, streamResult);
        String xml = stringWriter.toString();
        return xml;

    }

    //Check whether node is to be stored in file or rejected based on input
    private boolean serializeThisNode(Node doc) throws XPathExpressionException{

         if(!filter){
             return true;
         }

         XPathExpression filterElementexpr = xpath.compile(""//""+filterElement);
         Object result = filterElementexpr.evaluate(doc, XPathConstants.NODESET);
         NodeList nodes = (NodeList) result;

         if(nodes.item(0) != null){
             return true;
         }else{
             return false;
         }       
    }

    private void storeInFile(String content, int fileIndex) throws IOException{

        if(content == null || content.length() == 0){
            return;
        }

        String fileName = splitElement+fileIndex+"".xml"";

        File file = new File(fileName);
        if(file.exists()){
            System.out.println("" The file ""+fileName+"" already exists !! cannot create the file with the same name "");
            return;
        }
        FileWriter fileWriter = new FileWriter(file);
        fileWriter.write(content);
        fileWriter.close();
        System.out.println(""Generated file ""+fileName);


    }

}
</code></pre>

<p>Let me know if this works for you or any other help regarding this code.</p>
"
7538440,"<blockquote>
  <p>Is a list passed to a function thread safe in Java?</p>
  
  <p><b>The question:</b> while this function has been called from a thread, <b>IS</b> there a way the list passed to this function can be modified by another thread?</p>
</blockquote>

<p>This is about thread-safety and specifically about the list instance. It depends on the concrete class of the list instance is (it's concurrent and mutability behaviors). If that instance is mutable, it matters on the visibility/exposure of that list.</p>

<p>I've modified your example in hopes of better understanding the question and provide more concrete solutions:</p>

<pre class=""lang-java prettyprint-override""><code>private void method1 {
  final List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
  list.add(Integer.valueOf(1));
  // Add the hypothetical mutator from another Thread
  new Thread(new Runnable(){
    public void run() {
      list.clear(); // if this where to happen between first &amp; second access in getElement an IndexOutOfBoundsException would occur
    }
  }).start();
  Integer someInt = getElement(list);
}

// this is not thread-safe
private Integer getElement(List&lt;Integer&gt; list) {
  int len = list.size(); // first access to list
  int idx = Random.getInt(len);
  Integer retval = list.get(idx); // second access to list
  return retval;
}
</code></pre>

<hr/>

<p>Two ways:</p>

<ol>
<li><i>concurrent</i> instances</li>
<li><i>immutable</i></li>
</ol>

<p><code>concurrent</code> list instances:</p>

<ul>
<li>java.util.concurrent.CopyOnWriteArrayList</li>
<li>java.util.Collections.synchronizedList()</li>
</ul>

<p>Given the above code, here are some options on how to make getElement thread-safe.</p>

<h1><code>immutable</code></h1>

<p><b>Best</b>: make list <code>immutable</code> (so that synchronization not necessary)</p>

<pre class=""lang-java prettyprint-override""><code>final List&lt;Integer&gt; list1 = Arrays.asList(1);

// or Guava's ImmutableList
final List&lt;Integer&gt; list2 = ImmutableList.of(1);

// the reference to the underlying mutable list is now hidden
final List&lt;Integer&gt; list3 = getList();    
private List&lt;Integer&gt; getList() {
  List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
  list.add(1); // mutate the list
  return Collection.unmodifiableList(list);
}
</code></pre>

<p>Con: causes a new problem to solve with the mutator. Understanding the whole problem would be needed to resolve that.</p>

<h1><code>concurrent</code></h1>

<p>1) Defensive copy in getElement() in combination with <code>concurrent</code> instance.</p>

<pre class=""lang-java prettyprint-override""><code>private Integer getElement(Collection&lt;Integer&gt; list) {
   final List&lt;Integer&gt; copy;
   synchronized (list) { // needed if Collections.synchronized*()
     copy = new ArrayList&lt;Integer&gt;(list);
   }
   return copy.get(Random.getInt(list.size()));
}
</code></pre>

<p>Con: performance to copy</p>

<p>2) Rewrite getElement() so that it only uses an iterator with a <code>concurrent</code> instance</p>

<pre class=""lang-java prettyprint-override""><code>// This is just top-of-the-head, 
private &lt;T&gt; T getElement(Iterable&lt;T&gt; list) {
   synchronized(list) { // needed if Collections.synchronized*()
     for(T elem : list) {
       // not even distribution of results, look for better algorithm
       if (Random.nextBoolean()) {
         // this is the one
         return elem;
       }
     }
   }
   return getElement(list); // put in a better fail-safe than this
}
</code></pre>

<p>Con: current implementation does not provide a uniform distribution</p>

<hr/>

<p>There isn't an easy way to solve concurrency.</p>
"
7538716,"<p>As other have explained there is no way (or it is at least very difficult) for <code>getElement</code> to ensure that the <code>List</code> cannot be modified while the method is accessing it. If another <code>Thread</code> modified is to reduce it size less then random int generated on fist line then the second line will throw <code>IndexOutOfBoundsException</code>. </p>

<p>The only option is to ensure that all threads that have access to the List only do synchronized access. That is:</p>

<pre><code>Integer getElement( List&lt;Integer&gt; list ) {
   synchronized(list) {
       int i = Random.getInt( list.size() );
       return list.get( i );
   }
}
// some method that modifies the list
void modify(List&lt;Integer&gt; list ) {
   synchronized(list) {
       ....
   }
}
</code></pre>

<p>Note that even though <code>getElement</code> will succeed there is no guarantee that the element will still exist in the list when the caller uses that element. To ensure that, the callers also need to synchronize:</p>

<pre><code>// Thread 1
synchronized (list) {
    Integer someElement = getElement(list);
    use(someElement);
    // use can be outside the synchronized block if it is ok to use 
    // an element that is no longer in the list
}
//Thread 2
synchronized (list) {
    modify(list); // call some function that modifies the list
}
</code></pre>

<p>A less error-prone approach is to implement a List class that requires it to be locked before it can be accessed. The usage would be as follows:</p>

<pre><code>try {
    list.lock();
    Integer someElement = getElement(list);
    use(someElement);
} finally {
    list.unlock();
}
</code></pre>

<p>This looks somewhat like the previous approach (and will look even more so with <a href=""http://try-with-resources"" rel=""nofollow"">try-with-resources</a>) the difference is that the List methods get/set etc throw an exception if they are being accessed without acquiring a lock. </p>

<p>EDIT: This of course applies only when using <strong>mutable</strong> lists. The scenario is entirely different when using immutable lists, though you will still need some synchronization mechanism if the element need to be in the list when it is used.</p>
"
21886898,"<p>Fibonnaci series is one simple code that shows the power of dynamic programming. All we learnt from school days is to run it via iterative or max recursive code. Recursive code works fine till 20 or so, if you give numbers bigger than that you will see it takes a lot of time to compute... In dynamic programming you can code as follows and it takes secs to compute the answer.</p>

<pre><code>static double fib(int n) {
    if (fib[n] != 0)
        return fib[n];
    if (n == 0)
        return 0;
    else if (n == 1)
        return 1;
    else
        fib[n] = fib(n - 1) + fib(n - 2);
    return (fib(n - 1) + fib(n - 2));
}
</code></pre>

<p>You store values in an array and proceed to fresh computation only when the array cannot provide you the answer.........</p>
"
21900100,"<p>This will show you the tables of the current schema (which you are logged in): </p>

<pre><code>select table_name from user_tables order by table_name;
</code></pre>

<p>This will show you the tables of schema , for which you have select rights at least: </p>

<pre><code>select owner, table_name from all_tables where owner='&lt;owner&gt;' order by owner, table_name;
</code></pre>
"
7597598,"<pre><code>boolean intVal = false;
    for(int i=0;i&lt;str.length;i++) {
            intVal = false;
            try {
                if (Integer.parseInt(str[i]) &gt; 0) {
                    intVal = true;
                }
            } catch (java.lang.NumberFormatException e) {
                intVal = false;
            }
        m.put(str[i], !intVal);
    }
</code></pre>
"
22012227,"<p>Import: </p>

<p><code>org.apache.commons.lang.StringUtils</code></p>

<p>And use:</p>

<pre><code>StringUtils.split(s,""?"");
</code></pre>
"
10174101,"<p>Just remove the <code>final</code> keyword from the declaration and continue your program. As <code>final</code> keyword means the value is unaltered. </p>
"
7742549,"<p>Using Joda:</p>

<pre><code>DateTime input;
DateTime startOfLastWeek = input.minusWeeks(1).minusDays(input.getDayOfWeek()-1);
</code></pre>

<p><strike>DateTime endOfLastWeek = input.minusWeeks(1).plusDays(input.getDayOfWeek()+1);</strike></p>

<pre><code>DateTime endOfLastWeek = startOfLastWeek.plusDays(6);
</code></pre>

<p>EDIT:</p>

<p><a href=""http://stackoverflow.com/questions/1801907/joda-time-first-day-of-week"">Joda does not allow a different first day of the week, but strictly sticks to the ISO standard, which states that a week always starts on Monday</a>. However, if you need to make that configurable, you could pass the desired first day of the week as a parameter. See the above link for some other ideas.</p>

<pre><code>public DateTime getFirstDayOfPreviousWeek(DateTime input)
{
    return getFirstDayOfPreviousWeek(input, DateTimeConstants.MONDAY); 
}

public DateTime getFirstDayOfPreviousWeek(DateTime input, int firstDayOfWeek)
{
    return new DateTime(input.minusWeeks(1).withDayOfWeek(firstDayOfWeek));
}

public DateTime getLastDayOfPreviousWeek(DateTime input)
{
    return getLastDayOfPreviousWeek(input, DateTimeConstants.MONDAY); 
}

public DateTime getLastDayOfPreviousWeek(DateTime input, int firstDayOfWeek)
{
    return new DateTime(getFirstDayOfPreviousWeek(input, firstDayOfWeek).plusDays(6));
}
</code></pre>
"
5819845,"<p>(Best way) <code>string.equals("""")</code></p>

<p>But also,</p>

<pre><code>string.isEmpty()

string.equals(null)
</code></pre>
"
7742678,"<pre><code>Calendar today  = Calendar.getInstance();
Calendar lastWeekSunday =  (today.get(Calendar.DAY_OF_WEEK) == Calendar.SUNDAY) ? today.roll(-7): today.roll(Calendar.DAY_OF_YEAR, Calendar.SUNDAY - today.get(Calendar.DAY_OF_WEEK));
Calendar lastWeekMonday = lastWeekSunday.roll( Calendar.DAY_OF_YEAR, -6 );
</code></pre>
"
23589365,"<pre><code>public class LargestPrimeFactor {
    static boolean isPrime(long n){
        for(long i=2;i&lt;=n/2;i++){
            if(n%i==0){
                return false;                                               
            }
        }
        return true;    
    }

    static long LargestPrimeFact(long n){
        long largestPrime=0;
        for(long i=2;i&lt;Math.sqrt(n)/2;i++){
            if(n%i==0){
                if(isPrime(i)){
                    largestPrime=i;
                }
                }                                       
            }
        return largestPrime;
    }
    public static void main(String args[]) {
        System.out.println (LargestPrimeFact(600851475143L));
    }
}
</code></pre>

<p>Source: 
<a href=""http://crispylogs.com/project-euler-problem-3-solution/"" rel=""nofollow"">http://crispylogs.com/project-euler-problem-3-solution/</a></p>
"
7772999,"<p>I might be wrong, but my feeling is ""no in all cases"". Because your <code>string bar()</code> can be overridden by overloaded by other classes in the same package. <code>final</code> methods are good candidates, but it depends on JIT.</p>

<p>Another interesting note is <a href=""http://stackoverflow.com/questions/6651429/java-optimizations-hotspot-dalvik-optimization-of-final-method-returning-a-con/6651608#6651608"">here</a>.</p>
"
23893451,"<p>Because there a so many ways to achieve the same effect I thought I'd add my solution too :).
I use the following code to retrieve settings from ini-style files:</p>

<pre><code>/**
 * Returns the content of a string or null if there is no actual content. The original string is trimmed so
 * whitespace inside the string counts as content.
 *
 * @param string String to check
 * @return the content or null if there is only whitespace, control characters or no string at all
 */
public static String getContent(String string) {
    if (string != null) {
        string = string.trim();
        if (string.isEmpty() == false) {
            return string;
        }
    }
    return null;
}
</code></pre>

<p>You can use it to test for null or only whitespace strings:</p>

<pre><code>string = Utils.getContent(string);
if (string != null) {
    // String is usable and has actual content!
}
</code></pre>
"
24074505,"<p>Append the following statement to the JDBC-mysql protocol:</p>

<pre><code>?zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true&amp;characterEncoding=UTF-8&amp;characterSetResults=UTF-8
</code></pre>

<p>for example:</p>

<pre><code>jdbc:mysql://localhost/infra?zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true&amp;characterEncoding=UTF-8&amp;characterSetResults=UTF-8
</code></pre>
"
24260918,"<p><strong>you can use ""res.previous()"" as follows, it works..!!</strong></p>

<pre><code>ResulerSet res= getDate();

if(!res.next())
{
System.out.println(""No Data Found."");
}
else
{
    res.previous();
    while(res.next())
    {
      //code to display the data in the table.
    }
}
</code></pre>
"
10452288,"<p>You need know if your page is a postback, <a href=""http://java.sun.com/javaee/javaserverfaces/1.2/docs/api/javax/faces/render/ResponseStateManager.html"" rel=""nofollow"">http://java.sun.com/javaee/javaserverfaces/1.2/docs/api/javax/faces/render/ResponseStateManager.html</a></p>

<p>Something like that</p>

<pre><code>ResponseStateManager rsm = FacesContext.getCurrentInstance().getRenderKit().getResponseStateManager();  

if (!rsm.isPostback(FacesContext.getCurrentInstance())) {  

    //do some stuff  
}  
</code></pre>
"
7958138,"<p>If you want to know things like this you can code small example routines and look at the generated bytecode using the <a href=""http://download.oracle.com/javase/6/docs/technotes/tools/windows/javap.html"" rel=""nofollow"">javap</a> utility.</p>

<blockquote>
  <p>I am conjecturing that the answer could be - no concern: the compiler makes them all equivalent. [...] Normally, I do <code>""""+zebra</code> because I am too lazy to type <code>zebra.toString()</code>.</p>
</blockquote>

<p>Two things: </p>

<p>First: The two options are different. Think about <code>zebra</code> being <code>null</code>. </p>

<p>Second: I'm to lazy to do this <a href=""http://download.oracle.com/javase/6/docs/technotes/tools/windows/javap.html"" rel=""nofollow"">javap</a> stuff for you.</p>
"
25244160,"<p><strong>This one works perfectly!!</strong></p>

<pre><code>public class Puzzle3 {
public static void main(String ar[])
{
    Long i=new Long(""1"");
    Long p=new Long(""600851475143"");
    Long f=new Long(""1"");
    while(p&gt;=i)
    {
        if(p%i==0)
        {
            f=i;
            p=p/i;
            int x=1;
            i=(long)x;
        }
        i=i+2;
    }
    System.out.println(f);
}
</code></pre>

<p>}</p>
"
25278643,"<pre><code>public static void main(String k[])
{  
    System.out.println (""NUMBER OF VALUES =""+k.length);
    int arrymy[]=new int[k.length];
    for (int i = 0; i &lt; k.length; i++)
    {
        int newGues = Integer.parseInt(k[i]);
        arrymy[i] = newGues;
    }
}
</code></pre>
"
6194853,"<p>or </p>

<pre><code>   SimpleDateFormat dateFormat = new SimpleDateFormat(""EEE MMM d');
    dateFormat.format(date);
</code></pre>
"
10625108,"<p>Create a getter/setter for the class Variable and set it yo null to re-instantiate an object
Ex: </p>

<pre><code>//Singleton support ...
private static A singleton = null;
    public static A get() {
        if (singleton == null){
        singleton = new A();
    }
        return singleton;
}
public static A getSingleton() {
    return singleton;
}
public static void setSingleton(A singleton) {
    A.singleton = singleton;
}

//Re instantiate 
public class Test(){
....
....
    A.setSingleton(null);

}
</code></pre>
"
6253289,"<pre><code>    int index = 4;

    ArrayList&lt;String&gt; myObjects = Lists.newArrayList(""a"", ""b"", ""c"", ""d"");
    Object o = index  &lt; myObjects.size() &amp;&amp; index &gt;= 0 ? myObjects.get(index) : null;
    System.out.println(o);
</code></pre>

<p>Lists comes from Guava.</p>
"
6428542,"<p>I don't know why Java is so much faster here.  </p>

<p>I compared it with the built in Arrays.sort() and it was 4x faster again. (It doesn't create any objects).</p>

<p>Usually if there is a test where Java is much faster its because Java is much better at removing code which doesn't do anything. </p>

<p>Perhaps you could use <code>memcpy</code> rather than a loop at the end.</p>
"
6434210,"<pre><code>try{
    methodWhichUsesTheString(a);
}catch (Exception NullPointerException){
    //string a seems to be null
    a = ""Re-assign some desired value that would make things work"" ;
}
</code></pre>
"
10866470,"<p>Try making your manifest something like this. </p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;

&lt;manifest 

    xmlns:android=""http://schemas.android.com/apk/res/android""
    package=""zvjezdan.veselinovic.yahtzee_""
    android:versionCode=""1""
    android:versionName=""1.0"" &gt;

    &lt;uses-sdk 
        android:minSdkVersion=""10"" /&gt;

    &lt;application

        android:icon=""@drawable/ic_launcher""
        android:label=""@string/app_name"" &gt;

        &lt;activity

            android:name="".YahtzeeActivity""
            android:label=""@string/app_name"" &gt;

         &lt;intent-filter&gt;

                &lt;action 
                    android:name=""android.intent.action.MAIN"" /&gt;

                &lt;category 
                    android:name=""android.intent.category.LAUNCHER"" /&gt;

            &lt;/intent-filter&gt;

         &lt;/activity&gt;

        &lt;activity 
             android:name = "".Scoring_Page"" /&gt; 

    &lt;/application&gt;

&lt;/manifest&gt;
</code></pre>

<p>The reason behind this is that:<br>
<code>public class EasterSimonSaysActivity extends SimonSaysActivity {</code></p>

<p>uses another activity. So if you have 2 activities, then you need to add both of them. Granted that you imported them, but your manifest needs to know this too. This is how I ""switched pages"" for my yahtzee project. Which I still need help on. =/</p>
"
27193570,"<pre><code>public class WordReverse {

static StringBuilder sb = new StringBuilder();

public static void main(String[] args) {

    Scanner sc = new Scanner(System.in);
    System.out.println(""Enter the correct Sentence :"");
    String str = sc.nextLine().replaceAll(""\\s+"", "" "");         //remove unwanted space using regex

    int lastIndex = 0, i = 0;

    for (char chars : str.toCharArray()) {
        if (chars != ' ') {
            i++;
        } else {
            myReverse(str.substring(lastIndex, i).toCharArray());
            lastIndex = i + 1;
            i++;
        }
    }
    myReverse(str.substring(lastIndex, i).toCharArray());       //reverse the last word

    System.out.println(sb);
}
public static void myReverse(char c[]) {
    for (int i = (c.length - 1) ; i &gt;= 0 ; i--) {
        sb.append(c[i]);
    }
    sb.append("" "");
} }
</code></pre>
"
6464148,"<p><code>obj1</code> is duplicate of <code>obj2</code> if <code>obj1.equals(obj2)</code> returns true. So as you can see, the definition of equal really depends on the implementation of equals.</p>

<p>You can write a set say, DistincObjectSet where duplicate means <code>obj1==obj2</code></p>

<p>Another example is you can have EmployeeSet where duplicate means obj1.employeeNo == obj2.employeeNo, in this case you should overwrite the equals() method in Employee class to compare the employee numbers. </p>

<p>The design of the Set API says you you attempt to add duplicate element, the add() method should return false instead of throwing Exception.</p>
"
27603966,"<p>As explained earlier there are 2 approaches </p>

<p>First one is to just add this line to your main method:</p>

<pre><code>BasicConfigurator.configure();
</code></pre>

<p>Second approach is to add this standard <strong>log4j.properties</strong> file to your classpath:</p>

<p>While taking second approach you need to make sure you initialize the file properly,
Eg.</p>

<pre><code>Properties props = new Properties();
props.load(new FileInputStream(""log4j property file path""));
props.setProperty(""log4j.appender.File.File"", ""Folder where you want to store log files/"" + ""File Name"");
</code></pre>

<p>Make sure you create required folder to store log files.</p>
"
10918959,"<p>A very good way of doing this apart from using Java 7 is using enums. 
Declare enum as shown below</p>

<p>The above enum has a collection of constants whose values are set to the strings that you expect would be returned from the database. As you can use enums in switch cases the remaining code becomes easy</p>

<pre><code>enum MyEnum
{
    val1(""value &lt; 4""),val2(""4&lt;value&lt;6"");
    private String value;

    private MyEnum(String value)
    {
        this.value = value;
    }
}


public static void chooseStrategy(MyEnum enumVal)
{   
    int value = getValue();
    switch(enumVal)
    {
        case val1:
        if(value &gt; 2){}
        break;
        case val2:
        if(4 &lt; value &amp;&amp; value &lt; 6) {}
        break;
        default:
    }
}

public static void main(String[] args)
{
    String str = ""4&lt;value&lt;6"";
    chooseStrategy(MyEnum.valueOf(str));
}
</code></pre>

<p>All you have to do is pass your string to the enum.valueof method and it will return the appropiate enum which is put in a switch case block to perform conditional operation . In the above code you can pass any string in place of what is passed in this example</p>
"
8331602,"<p>The code is not generally thread safe because there is a gap between the <code>CACHE.containsKey(key)</code> check and the <code>CACHE.putIfAbsent(key, ref)</code> call.  It is possible for two threads to call simultaneously into the method (especially on multi-core/processor systems) and both perform the <code>containsKey()</code> check, then both attempt to do the put and creation operations.  </p>

<p>I would protect that execution of the <code>getSingletonInstnace()</code> method using either a lock or by synchronizing on a monitor of some sort.</p>
"
8332977,"<p>google ""Memoizer"". basically, instead of <code>AtomicReference</code>, use <code>Future</code>.</p>
"
11008126,"<p>Replace  </p>

<pre><code>HashMap record = new HashMap(); 
</code></pre>

<p>with </p>

<pre><code>Map&lt;String,Map&lt;String, Object&gt;&gt; record = new HashMap&lt;String,Map&lt;String, Object&gt;&gt;();
</code></pre>

<p>But, this doesn't make much sense to put different object types as values. If the following line is by mistake, </p>

<pre><code>record.get(""student1"").put(""Scores"", new HashMap());
</code></pre>

<p>then you can simplify the definition also.</p>

<pre><code>Map&lt;String,Map&gt; record = new HashMap&lt;String,Map&gt;();
</code></pre>

<p>Assumption: You are using JDK 1.5+</p>
"
6588161,"<p>I think there's a lot of terminology to unpack here. Java doesn't let you have a raw pointer, only a reference, which has a type. </p>

<p>Anyway, say you have a reference to an instance that you know implements <code>HTTPRequestDelegate</code>. You can cast it, like so:</p>

<pre><code>HTTPRequestDelegate delegate = (HTTPRequestDelegate) ref;
</code></pre>

<p>The bit in the parentheses is the cast. You can now call methods on <code>delegate</code> (pass messages in java speak) to your hearts content as long as they are defined on <code>HTTPRequestDelegate</code>. </p>

<p>The other way Java programmers do duck typing type stuff is refection, but if you know the interface, casing is the way to go. </p>
"
11015091,"<p>You can use the <code>rs.getRow()</code> method.</p>

<pre><code> if(rs.getRow() &gt;= 1){
      //Has at least 1 result
    }
</code></pre>

<p><a href=""http://www.docjar.com/html/api/java/sql/ResultSet.java.html"" rel=""nofollow"">Source:</a></p>

<pre><code>/**
    * Retrieves the current row number.  The first row is number 1, the
    * second number 2, and so on.
    * &lt;p&gt;
    * &lt;strong&gt;Note:&lt;/strong&gt;Support for the &lt;code&gt;getRow&lt;/code&gt; method
    * is optional for &lt;code&gt;ResultSet&lt;/code&gt;s with a result
    * set type of &lt;code&gt;TYPE_FORWARD_ONLY&lt;/code&gt;
    *
    * @return the current row number; &lt;code&gt;0&lt;/code&gt; if there is no current row
    * @exception SQLException if a database access error occurs
    * or this method is called on a closed result set
    * @exception SQLFeatureNotSupportedException if the JDBC driver does not support
    * this method
    * @since 1.2
 */
      int getRow() throws SQLException;
</code></pre>
"
28514175,"<p>Given a file named Me.Jar:</p>

<ol>
<li>Go to cmd</li>
<li>Hit Enter </li>
<li><p>Use the Java <code>jar</code> command -- I am using jdk1.8.0_31 so I would type </p>

<p>C:\Program Files (x86)\Java\jdk1.8.0_31\bin\jar xf me.jar</p></li>
</ol>

<p>That should extract the file to the folder bin. Look for the file .class in my case my Me.jar contains a Valentine.class</p>

<p>Type <code>java Valentine</code> and press Enter and your message file will be opened.</p>
"
28534479,"<pre><code>public class Window{
    public static final int size=3;
    public static void main(String[] args){
       for (int p = 1; p &lt;= 2; p++) {
            for (int i = 1; i &lt;=2; i++) {
                System.out.print(""+"");
                for (int j = 1; j &lt;= size; j++) {
                    System.out.print(""="");
                }
            }
                System.out.print(""+"");
                System.out.println();
            for (int k = 1; k &lt;= size; k++) {
                for (int i = 1; i &lt;= 3; i++) {
                    System.out.print(""|"");
                    for (int j = 1; j &lt;= size; j++) {
                        System.out.print("" "");
                    }
                }
                System.out.println();
            }
        }
        for (int i = 1; i &lt;= 2; i++) {
            System.out.print(""+"");
            for (int j = 1; j &lt;= size; j++) {
                System.out.print(""="");
            }
        }
        System.out.print(""+"");
    }
}
</code></pre>
"
28769613,"<p>I feel the above answers miss a scenario where this error occurs even when your code has a main(). When you are using JNI that uses <a href=""http://docs.oracle.com/javase/tutorial/reflect/"" rel=""nofollow"">Reflection</a> to invoke a method. During runtime if the method is not found, you will get a</p>

<p><code>java.lang.NoSuchMethodError: No virtual method</code></p>
"
29075933,"<pre><code>package com.test;

public class Test {

    public static void main(String[] args) {

        String str = ""TestCode "";
        if (str.indexOf("" "") &gt; -1) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""Noo"");
        }
    }
}
</code></pre>
"
29099496,"<p>I guess this might help.
Although it is not standard but i hope it provides a simpler approach.</p>

<pre><code>public class ThreadDemo
{
    public static void main (String [] args)
    {
        PrintDemo pd=new PrintDemo();     
        MyThread1 mt1 = new MyThread1 (""T1"",pd);
        MyThread2 mt2 = new MyThread2 (""T2"",pd);     
        mt1.start ();
        mt2.start();
    }
}
class PrintDemo {
    private boolean oddFlag=true;
    public synchronized void printOdd(int i,String tName){
        if(oddFlag==false){
            try {
                wait();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }   
        }else{
            System.out.println(""\nThread ""+tName+"" count:""+i);
            oddFlag=false;
            notify();
        }
    }
    public synchronized void printEven(int i,String tName){
        if(oddFlag==true){
            try {
                wait();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }   
        }else{
            System.out.println(""\nThread ""+tName+"" count:""+i);
            oddFlag=true;
            notify();
        }
    }   
}
class MyThread1 extends Thread
{
    private PrintDemo pd;
    private String name;

    MyThread1(String threadName,PrintDemo pd){
        this.name=threadName;
        this.pd=pd;
    }  
    public void run ()  
    {
       for(int i=1;i&lt;=50;i+=2){
            pd.printOdd(i,name);
       }
    }
}
class MyThread2 extends Thread
{
    private PrintDemo pd;
    private String name;    
    MyThread2(String threadName,PrintDemo pd){
        this.name=threadName;
        this.pd=pd;
    }   
    public void run ()
    {
        for(int i=2;i&lt;=50;i+=2){
            pd.printEven(i,name);                   
        }
    }
}
</code></pre>
"
6735389,"<p>You can execute commands without actually hard coding cmd.exe into the code.</p>

<pre><code>public static void main(String[] args) {

      //cmd = the command youw ill be using            
    String cmd = ""ipconfig"";      
    Runtime r = Runtime.getRuntime();      
    Process p;   
    try {       
        p = r.exec(cmd);

    BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));    
    String inputLine;       
    while ((inputLine = in.readLine()) != null) {     
        System.out.println(inputLine);
          }       
    }     


catch (IOException ex) {      
Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);  
             }
       }
</code></pre>
"
29163426,"<pre><code>z=z++;
</code></pre>

<p>This means first assign the value of z (which is in right position) to the z (which in left position), then do the increment in right z (which is of no use).</p>
"
29858068,"<p>There is the function in guava libraries:</p>

<pre><code>LongMath.log2()
</code></pre>

<p>So I suggest to use it.</p>
"
6792167,"<p>primitive types can't be compared to null.</p>

<p>You can test if the number if > 0 to see if a value exists:</p>

<pre><code>if(inv[0] &lt;= 0)
{
    inv[0]=map.getTileId(tileX-1, tileY-1, 0);
}
</code></pre>
"
11535085,"<p>It works if you do it like this</p>

<pre><code>public class StringArray 
{

    /**
     * @param args
     */
    public static void main(String[] args) 
    {
        show(new String[]{""A"", ""B""});
    }
    static void show(String[] s)
    {
        System.out.println(s[0] + s[1]);
    }
}
</code></pre>

<p>because you are actually creating a new array ""object"". The other way, {""A"", ""B""} doesn't mean anything. {""A"", ""B""} isn't an array object, so it won't work. The first way works because you are actually specifying that what is being passed to the function is an array object.</p>
"
8782858,"<p>Changing the relative location of <code>${java.home}/../lib/tools.jar</code> to the absolute path
of <code>C:\Program Files\Java\jdk1.6.0_29\lib\tools.jar</code> works for me.</p>

<p>You should only have to change it in the <code>playn/pom.xml</code>.</p>

<p>Now for the playn-samples, Vladiator is right, that's too many pom files to change. </p>
"
6959998,"<p>I have an idea, you can pack all php data in web services <code>mode(xml)</code> to send to <code>java(axis2)</code> <code>server.bu</code> </p>
"
8822025,"<p>Easiest way is to extract the part where you have the user name correction logic</p>

<pre><code>if (username.length() &lt; 8 ) {
    username = username  + ""random"" ; // add some random string
}
</code></pre>

<p>into a method and test the return value of that method.</p>

<pre><code>public string GetValidUsername(string userName){
    if (username.length() &lt; 8 ) {
        return username  + ""random"" ; // add some random string
    }
    return username;
}
</code></pre>

<p>with this you can pass different types of username and test the behavior of your code. </p>
"
11635217,"<p>worked for me: </p>

<pre><code>#{request.contextPath}
</code></pre>
"
8852321,"<p>here is an outline.</p>

<pre><code>for (i = 1; i &lt; 11; i++) {
   String toPrint = """";
   for (j = 1; j &lt;= i; j++ {
      // create string of asterisks here
   }
   // print a line here
}
</code></pre>

<p>since this is homework, you should do the rest yourself</p>
"
8852331,"<p>use a for loop</p>

<pre><code>for(i=0;i&lt;10;i++){
   for(int j=0;j&lt;i;j++)
      System.out.print(""*"");
   System.out.println();
}
</code></pre>

<p>hope that helps!</p>
"
8852354,"<p>Solution 1:</p>

<pre><code>for(int i=1; i&lt; 10; ++i) {
   for (int j = 0; j&lt;i; ++j) {
     System.out.print(""*"");
   }
   System.out.println("""");
}
</code></pre>

<p>Soulution 2:</p>

<pre><code>String s = ""*"";

for (int i = 1; i&lt; 10; i++) {
   System.out.println(s);
   s = s + ""*"";
}
</code></pre>

<p>Your choice.</p>
"
8897891,"<p>Here is one approach using a <a href=""http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/CountDownLatch.html"" rel=""nofollow""><code>CountDownLatch</code></a> to keep the main-thread waiting:</p>

<pre><code>public static void main(String[] args) {

    // login event
    String event = ""login"";
    System.out.printf(""Handling event: %s %s\n"",event,getCurrentLogin());
    sendMessage(event, getCurrentLogin());

    final CountDownLatch latch = new CountDownLatch(1);

    // logout or shutdown event
    Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {
        @Override
        public void run() {
                String event = ""logout"";
                System.out.printf(""Handling event: %s %s\n"",event,getCurrentLogin());
                sendMessage(event, getCurrentLogin());
                latch.countDown();
        }
    }));

    latch.await();
 }
</code></pre>
"
11726637,"<p>Ensure that you have set permissions for <code>DELETE</code> statements. Certain users will have certain commands disallowed for security purposes.</p>
"
11733574,"<p>If you're trying to remove <a href=""http://www.youtube.com/watch?v="" rel=""nofollow"">http://www.youtube.com/watch?v=</a> from <a href=""http://www.youtube.com/watch?v=_RCIP6OrQrE"" rel=""nofollow"">http://www.youtube.com/watch?v=_RCIP6OrQrE</a> then you can do the following:</p>

<pre><code>String URL = ""http://www.youtube.com/watch?v=_RCIP6OrQrE"";
String v = URL.replace(""http://www.youtube.com/watch?v="", """");
System.out.println(v);

Output: _RCIP6OrQrE
</code></pre>
"
11794865,"<p>Try:</p>

<pre><code>server = new Server();
    SocketConnector connector = new SocketConnector();
    connector.setPort(8080);
    server.setConnectors(new Connector[] { connector });
    WebAppContext context = new WebAppContext();
    context.setServer(server);
    context.setContextPath(""/your-context"");
    context.setWar(""path to war"");
    server.addHandler(context);
    Thread monitor = new MonitorThread();
    monitor.start();
    server.start();
    server.join();
</code></pre>

<p>then somewhere you say:</p>

<pre><code>    server.stop()
</code></pre>

<p>Helpful article:<br>
<a href=""http://www.codeproject.com/Articles/128145/Run-Jetty-Web-Server-Within-Your-Application"" rel=""nofollow"">http://www.codeproject.com/Articles/128145/Run-Jetty-Web-Server-Within-Your-Application</a></p>
"
11807598,"<p>I realise that this doesn't directly answer your question... but starting and stopping a server in <code>@Before</code> and <code>@After</code> methods is inefficient when you have more than one integration test that requires a server to be running, as the server would be restarted for every test.</p>

<p>You may want to consider starting and stopping your server around your entire suite of tests. If you are using Maven for builds, you can do this with the combination of failsafe and Jetty plugins.</p>
"
8939469,"<p>yes you can use jacson to parse it but there is more easy way to do it 
its Jsonme lib ""import org.json.me"" you dont have to add jar file to use it </p>

<pre><code>     JSONObject obj = new JSONObject(""{'var1':'val1','var2':200});
     String var1=obj.getString(""var1"");
     int var2=obj.getInt(""var2"");
</code></pre>

<p>yes its more easy but if your project is complex  i advice you to use jacson lib</p>
"
12091616,"<p>If double backslash looks weird to you, C# also allows <a href=""http://msdn.microsoft.com/en-us/library/aa691090%28v=vs.71%29.aspx"" rel=""nofollow"">verbatim string literals</a> where the escaping is not required.</p>

<pre><code>Console.WriteLine(@""Mango \ Nightangle"");
</code></pre>

<p>Don't you just wish Java had something like this ;-)</p>
"
7637083,"<pre><code>/* File Signature.java created by Daniel Hicks on Mon Jun 11 2001. */
import java.io.*;
import java.util.*;
public class Signature {
    public static void main(String args[]) throws Exception {

    ResourceBundle properties = ResourceBundle.getBundle(""WebSignature"");
    String sigName = properties.getString(""sig.file"");
    String protoName = properties.getString(""proto.file"");
    String sayingsList = properties.getString(""sayings.list"");
    long waitTime = Long.parseLong(properties.getString(""delay.time""));
    int lineLength = Integer.parseInt(properties.getString(""line.length""));
    long notFoundTime = Long.parseLong(properties.getString(""file.not.found.time""));
    int notFoundRetries = Integer.parseInt(properties.getString(""file.not.found.retries""));

    Vector proto = new Vector();

    BufferedReader protoReader = new BufferedReader(new FileReader(protoName));
    String protoLine = protoReader.readLine();
    while (protoLine != null) {
        proto.addElement(protoLine);
        protoLine = protoReader.readLine();
    }
    protoReader.close();

    Vector sayings = new Vector();

    BufferedReader sayingsReader = new BufferedReader(new FileReader(sayingsList));
    String sayingsLine = sayingsReader.readLine();
    while (sayingsLine != null) {
        sayings.addElement(sayingsLine);
        sayingsLine = sayingsReader.readLine();
    }
    sayingsReader.close();

    Random rand = new Random();

    int retryCount = notFoundRetries;  // Require first cycle to work

    while (true) {
        int randVal = rand.nextInt();
        randVal = Math.abs(randVal) % sayings.size();
        try {
        PrintWriter sigWriter = new PrintWriter(new FileWriter(sigName));
        for (int i = 0; i &lt; proto.size(); i++) {
            sigWriter.println(proto.elementAt(i));
        }
        putSaying(sigWriter, (String) (sayings.elementAt(randVal)), lineLength);
        sigWriter.close();
        retryCount = 0;
        }
        // Catch I/O error due to AFS being offline.
        catch (java.io.FileNotFoundException ex) {
        retryCount++;
        if (retryCount &gt; notFoundRetries) {
            throw ex;
        }
        // Sleep for a long time (eg, 30 minutes).
        Thread.sleep(notFoundTime);
        }
        Thread.sleep(waitTime);
    }
    }

    private static void putSaying(PrintWriter sigWriter, String saying, int lineLength) throws Exception {
    saying = saying.trim();
    java.text.BreakIterator lineIterator = java.text.BreakIterator.getLineInstance();
    lineIterator.setText(saying);
    int pos = 0;
    int last = lineIterator.last();
    while (pos &lt; last) {
        int newPos = pos + lineLength;
        if (newPos &gt;= last) {
        newPos = last;
        }
        else {
        newPos = lineIterator.preceding(newPos);
        if (newPos &lt;= pos) {
            newPos = lineIterator.following(pos);
        }
        }
        sigWriter.println(saying.substring(pos, newPos));
        pos = newPos;
        while ((pos &lt; saying.length() - 1) &amp;&amp; Character.isWhitespace(saying.charAt(pos))) {
        pos++;
        }
    }
    }
}
</code></pre>
"
7671115,"<p>or may use webdriver backed selenium -</p>

<pre><code>Selenium selenium = new WebDriverBackedSelenium(driver, baseUrl);
</code></pre>

<p>and do the usual type on upload element</p>
"
9189845,"<p>Copy the <code>List</code> values in a <code>Set</code>. If the lenghts differ, there were duplicates.</p>
"
9231627,"<p>Does it have to be an array? If you use Collections, you can use <code>set1.containsAll(set2);</code></p>
"
9231634,"<p>Just use a second array as your ""check list"" to see missing entries (note this is pseudo code):</p>

<pre><code>function all_in(arraytocheck) {
    array check = {0, 0, 0, 0, 0, 0, 0, 0, 0};

    foreach(element in arraytocheck) {
        if(check[element]) // use this line
            return false;  // and this one, if you don't want to allow entries twice
        check[element] = 1;
    }

    foreach(element in check)
        if(!element)
            return false; // return false if an element is missing
    return true;
}
</code></pre>
"
9231890,"<p>If the size of the array is 9, then you just have to check that every number from 1 to 9 is contained in the array.
One way to do this is :</p>

<pre><code>public boolean check(Integer[] array) {
    List&lt;Integer&gt; list = Arrays.asList(array);
    for (int i = 1; i &lt; 10; i++) {
        if (!list.contains(i)) {
            return false;
        }
    }
    return true;
}
</code></pre>

<p>Another way would be to do this :</p>

<pre><code>public boolean check(Integer[] array) {
    List&lt;Integer&gt; list = Arrays.asList(array);
    return list.containsAll(Arrays.asList(new Integer[]{1, 2, 3, 4, 5, 6, 7, 8, 9}));
}
</code></pre>
"
12382800,"<p>I have read that iterators are very helpful in Swing especially if you iterate through collection in <code>paintComponent(Graphics g)</code> method.</p>

<p>The benefit of iterators is that you can iterate through the same collection from multiple threads and you even remove an element of that collection using the method <code>remove()</code> while the collection is accessed concurrently elsewhere.</p>

<blockquote>
  <p>The behavior of an iterator is unspecified if the underlying
  collection is modified while the iteration is in progress in any way
  other than by calling this method.
  THIS means that if you modify the same collection concurrently then behavior of method remove is not defined. BUT method remove works well EVEN IF you traverse through the same collection concurrently while calling iterator.remove()!!! I have used this in my GUI.</p>
</blockquote>

<p>According to my experience it is necessary to use an iterator in the method <code>paintComponent</code> rather than cycle <code>for</code> or <code>for-each</code>!</p>
"
12423182,"<p>please try the following code.</p>

<pre><code>String className = ""com.android.internal.telephony.gsm.GSMPhone"";
Class classToInvestigate = Class.forName(className);
Object gsmObj = classToInvestigate.newInstance();

Object arglist[] = new Object[3];
arglist[0] = new String(""Phone Number"");
arglist[1] = new String (""16035552412""); // Not a real phone number
arglist[2] = null;

Class[] paramTypes = new Class[3];
paramTypes[0] = String.class;
paramTypes[1] = String.class;
paramTypes[2] = Message.class;

Method setLine1Number = classToInvestigate.getMethod(""setLine1Number"", paramTypes);
boolean accessible = setLine1Number.isAccessible();
setLine1Number.setAccessible(true);

Object TestReturn = setLine1Number.invoke(gsmObj, arglist);
</code></pre>
"
9382403,"<p>So keywords are just character successions and so it appears that you might not want to use  a pattern matcher but instead try java.regex.pattern.</p>

<p>For the regex inject something like:</p>

<pre><code> [0-9]{*}//w[a-bA-B]+ or [0-9]{*}//w[face]++ 
</code></pre>

<p>Here is a a tester <a href=""http://www.zytrax.com/tech/web/regex.htm"" rel=""nofollow"">RegExp</a>.</p>
"
7890930,"<p>It's a method collision with java.awt, you need to reference the package like this:</p>

<pre><code> ObjectUtils.equals(a, b);
</code></pre>
"
7891634,"<p>Actually I think this is more of an Eclipse issue than any other thing. 
If you are using an overloaded version of equals() that receives two arguments, there should be no collision with the default Object.equals().</p>

<p>There are a couple of tricks in Eclipse that you can use to get it to recognize the static import:</p>

<p>1 - Add the static type to Organize Imports
Go to: </p>

<pre><code>Window &gt; Preferences &gt; Java &gt; Code Style &gt; Organize Imports 
</code></pre>

<p>then click on ""New Static"", then ""Types"", then choose your class (in this case org.apache.commons.lang.ObjectUtils)</p>

<p>While still on the Organize Imports panel, deselect the </p>

<pre><code>""Do not create imports for types starting with lowercase letter"" 
</code></pre>

<p>(do not forget this, it's important)</p>

<p>2 - Add the type to Content Assist
Go to: </p>

<pre><code>Window &gt; Preferences &gt; Java &gt; Editor &gt; Content Assist Favorites
</code></pre>

<p>then click on ""New Type"", then choose your class (in this case, again, org.apache.commons.lang.ObjectUtils)</p>

<p>Now with this you should be able to Ctrl+Space anywhere on your method and get the ""equals(Object,Object)"" method as possible content. If you choose that method, Eclipse should automatically insert the static import for equals.</p>
"
8078322,"<p>I tried the following code</p>

<pre><code>    public class Spring3HelloWorldTest {
    public static void main(String[] args) {        
        DefaultListableBeanFactory  beanFactory = new DefaultListableBeanFactory ((BeanFactory) new ClassPathResource(""SpringHelloWorld.xml""));     
        Spring3HelloWorld myBean = (Spring3HelloWorld) beanFactory.getBean(""Spring3HelloWorldBean"");
        myBean.sayHello();
    }
}
</code></pre>

<p>and it works</p>
"
9489335,"<pre><code>****String s1=""Azad""; ----One object will create in String cons. pool

System.out.println(s1);--output--Azad

s1=s1.concat(""Raja"");  Two object will create 1-Raja,2-AzadRaja and address of AzadRaja Store in reference s1 and cancel ref.of Azad object 

System.out.println(s1);  --output AzadRaja****
</code></pre>
"
8122612,"<p>Your code isn't valid. You can't equate <code>&gt;</code> or <code>&lt;</code> directly to strings.</p>

<pre><code>if(string1.length() &gt; string2.length())
{
    // string1 is longer
}
else if(string2.length() &gt; string1.length())
{
    // string2 is longer
}
</code></pre>

<p>Anyway, you can't really write this any shorter, nor should you for readability purposes.</p>
"
12740939,"<p>Something like below ?</p>

<pre><code>int i=1;
        int mul;
        while(true)
        {
            mul = i++;
            if(mul*(ans2)==ans1)
            {
                System.out.println(mul);
                break;
            }
            else if(mul*(ans2)&gt;ans1)
            {
                System.out.println(""Cannot be divided"");
                break;
            }
        }
</code></pre>
"
8128958,"<p>I don't see an open bracket after your ""if"" statement. It should look like this:</p>

<pre><code>public boolean test() {
    if (variable == value) {     
        return true;
    // more code appears here
    }
    return false;
}
</code></pre>

<p>With the additional brackets the ""true"" will only be associated with the IF conditions, and the false will be only if the IF conditions are not satisfied. </p>
"
12782434,"<blockquote>
  <p>is there a way I could adopt the C#'s goto statement in JAVA?</p>
</blockquote>

<p>The goto statement in java is a reserved keyword. However it is not implemented in any way. Probably there were plans to include it in the java engine.</p>

<p>To answer your question. You can used <a href=""http://docs.oracle.com/javase/tutorial/java/nutsandbolts/branch.html"" rel=""nofollow"">labeled break</a>, which works very similarly to goto:</p>

<pre><code>class BreakWithLabelDemo {
    public static void main(String[] args) {

        int[][] arrayOfInts = { 
            { 32, 87, 3, 589 },
            { 12, 1076, 2000, 8 },
            { 622, 127, 77, 955 }
        };
        int searchfor = 12;

        int i;
        int j = 0;
        boolean foundIt = false;

    search:
        for (i = 0; i &lt; arrayOfInts.length; i++) {
            for (j = 0; j &lt; arrayOfInts[i].length;
                 j++) {
                if (arrayOfInts[i][j] == searchfor) {
                    foundIt = true;
                    break search;
                }
            }
        }

        if (foundIt) {
            System.out.println(""Found "" + searchfor +
                               "" at "" + i + "", "" + j);
        } else {
            System.out.println(searchfor +
                               "" not in the array"");
        }
    }
}
</code></pre>

<p>Similar question was aswered <a href=""http://stackoverflow.com/questions/2430782/alternative-to-goto-statement-in-java"">here</a></p>
"
9684415,"<p>Why you cannot remove second K from,</p>

<pre><code>public interface GenericRepository&lt;T extends Identifiable&lt;K&gt;, K&gt; {
</code></pre>

<p>So rather than having it as above, can we have it as </p>

<pre><code>public interface GenericRepository&lt;T extends Identifiable&lt;K&gt;&gt; {
</code></pre>

<p>By this we can do what you want to do.</p>
"
9794404,"<p><code>outputStream.toByteArray()</code> is deprecated, use:</p>

<pre><code>new ByteArrayInputStream(outputStream.getBytes());
</code></pre>
"
9973662,"<p><code>ArrayList.equals()</code> is inherited from <code>java.lang.Object</code> - therefore <code>equals()</code> on ArrayList is independent of the content of the list.</p>

<p>If you want to use an ArrayList as a map key, you will need to override <code>equals()</code> and <code>hashcode()</code> in order to make two arraylists with the same content in the same order return true on a call to <code>equals()</code> and return the same hashcode on a call to <code>hashcode()</code>.</p>

<p>Is there any particular reason you <em>have</em> to use an ArrayList as opposed to say a simple String as the key?</p>

<p>edit: Ignore me, as Joachim Sauer pointed out below, I am so wrong it's not even funny.</p>
"
13090002,"<p>If you don't want to loose presision then you should use <code>multiplication</code></p>

<pre><code>    BigDecimal bigDecimal = new BigDecimal(""100.111"");
    long l = (long) (bigDecimal.doubleValue() * 1000);&lt;--Multiply by 1000 as it
                                                         is miliseconds
    System.out.println(l);
</code></pre>

<p>Output:</p>

<pre><code>100111
</code></pre>
"
10087008,"<p>Just implement some sort of collection in the object that has the other objects
For example in customer you could say:</p>

<pre><code>private List&lt;Job&gt; jobs; 
</code></pre>

<p>then by using getters and setters you can add values jobs to this list.
This is basic OO stuff, I don't think you searched enough on the internet. there is a lot of info available on these subjects.</p>

<p>Btw, you can use all sort of collections (Sets, Lists, Maps)</p>
"
8448912,"<p>To avoid having to change the settings in 2 places and just rely on the global settings this works nicely:</p>

<pre><code>ln -s /etc/maven2/settings.xml ~/.m2/settings.xml
</code></pre>
"
8480387,"<pre><code>boolean answer = false;
String inputAnswer;

inputAnswer = input.getText();
if(inputAnswer == ""yes""){
   answer = true;
}
</code></pre>
"
10175001,"<p>This refers to the current instance of the class, not a particular member.</p>

<p>You want to increment a property (I'm guessing of type long or int), and not the instance of your increment class (should be Increment, by the way).</p>

<p>Something like this would work:</p>

<pre><code>public class increment {

private int innerValue = 0;

int increment() {
    innerValue+=1
    return innerValue; // aka this++
}

public static void main(String[] args) {
    increment a = new increment()
    System.out.println(a.increment());
}
}
</code></pre>
"
13249897,"<p>try using </p>

<pre><code>SpannableStringBuilder test = new SpannableStringBuilder();
test.append(""\n"");
test.append(Html.fromHtml(""&lt;sup&gt;5&lt;/sup&gt;/&lt;sub&gt;9&lt;/sub&gt;""));
test.append(""\n"");
</code></pre>
"
13471636,"<pre><code>System.out.println(Arrays.toString(
    ""Many words//separated.by-different\tcharacters""
        .split(""\\W+"")));
//[Many, words, separated, by, different, characters]
</code></pre>
"
10515818,"<pre><code>public static void main(String[] args) {

    int b,c,total = 15;
    int combos =1;
        for(int d=0;d&lt;total/7;d++)
           {
             b = total - d * 7;
            for (int n = 0; n &lt;= b /6; n++)
        {
                    combos++;

        }

        }

      System.out.print(""TOTAL COMBINATIONS  = ""+combos);
}
</code></pre>
"
13621470,"<p>Firstly, you can't write what you just did. You made a String array, which can only contain Strings. Furthermore the String has to be in markers """" like ""some text here"".</p>

<p>Furthermore, there can only be ONE String at one place in the array like:</p>

<pre><code> newArray[0] = ""Jim"";
newArray[1] = ""Alex"";
</code></pre>

<p>And NOT like:</p>

<pre><code>newArray[0] = Jim;
</code></pre>

<p>And CERTAINLY NOT like:</p>

<pre><code>// Here you're trying to put 2 things in 1 place in the array-index
newArray[0] = Jim, 35;
</code></pre>

<p>If you wan't to combine 2 things, like an name and age you have to use 2D array - or probably better in your case ArrayList.</p>

<p>Make a new class with following object:</p>

<pre><code>  public class Person {

    String name;
    int age;

    public Person(String name, int age) {
    this.name = name;
    this.age = age;
    }
    }
</code></pre>

<p>And afterwards go to your class where you want to use the original array, and write:</p>

<pre><code>ArrayList&lt;Person&gt; someNameOfTheArrayList = new ArrayList&lt;Person&gt;();

someNameOfTheArrayList.add(new Person(""Jim"", 32));
someNameOfTheArrayList.add(new Person(""Alex"", 22));
</code></pre>
"
8738537,"<p>I can't speak to the JDK team's design decisions, but a lot of the clumsy nature of Java generics comes from the fact that generics were a part of Java 5 (1.5 - whatever). There are plenty of methods in the JDK which suffer from the attempt to preserve backwards compatibility with the APIs which pre-dated 1.5.</p>

<p>As for the cumbersome <code>List&lt;String&gt; strings = new ArrayList&lt;String&gt;()</code> syntax, I wager it is to preserve the pedantic nature of the language. Declaration, not inference, is the Java marching order.</p>

<p><code>strings.toArray( new String[0] );</code>? The type cannot be inferred because the Array is itself considered a generic class (<code>Array&lt;String&gt;</code>, if it were exposed).</p>

<p>All in all, Java generics mostly exist to protect you from typing errors at compile-time. You can still shoot yourself in the foot at runtime with a bad declaration, and the syntax is cumbersome. As happens a lot, best practices for generics use are the best you can do.</p>
"
13731170,"<p>It's not possible with parameters of type <code>Class</code>. Instead, your method must accept Parameters of type <code>Type</code> the way GSON does it with the <a href=""http://google-gson.googlecode.com/svn/tags/1.1.1/docs/javadocs/com/google/gson/reflect/TypeToken.html"" rel=""nofollow""><code>TypeToken</code></a> class.</p>
"
13848097,"<p>yeah, their suggestions are completely right. What I suggest you is to write the first check as: </p>

<pre><code>""sort"".equals(command)
</code></pre>

<p>Maybe it does not make sense in this case but in future. Use the static type first so you never need a null check before</p>
"
10785658,"<p>You can save your generated numbers in a Set and use the random number only if it is not in the set </p>

<pre><code>Random r = new Random();
    Set&lt;Integer&gt; generatedNumbers = new HashSet&lt;Integer&gt;();
    for(int i = 1;i&lt;=5;i++)  {
      int rand = r.nextInt(10)
      if (!generatedNumbers.contains(rand)) {
        Log.d(""Ramdom number"", String.valueOf(rand));
        generatedNumbers.add(rand);
      } 
    }  
</code></pre>
"
8880973,"<p>The separation you write about does not exist in Java. You can separate the method definitions (non static ones) to an <code>interface</code>.</p>
"
13939718,"<p>you can declare a subpart of the code to be another part in a for loop, example - </p>

<pre><code>public class (classname) {
    for(int i = 1; i &lt;= 4; i++) {
        for(int j = 1; i &lt;= 4; j++) {
    system.out.println(i + ""*"" + j + ""="" (i*j));
}
</code></pre>

<p>}</p>

<p>it is almost in infinite loop; if you change int to long, and add more variables, you can practically make it last 25 x 10^12 minutes long </p>
"
14180982,"<p>To re-size a button in Applet:</p>

<pre><code>public class Button extends JApplet implements ActionListener {

   private JButton button;

   public void init() {
      Container container = getContentPane();
      container.setLayout(null);
      container.setBackground(Color.white);
      button = new JButton(""Press Me"");
      button.setSize(getWidth()/2,20);
      button.setLocation(getWidth()/2-button.getSize().width/2, getHeight()/2-button.getSize().height/2);
      container.add(button);
      button.addActionListener(this);
   }

   public void actionPerformed(ActionEvent e) {
      int width = (button.getSize().width == getWidth()/2) ? getWidth()/4 : getWidth()/2;
      int height = button.getSize().height;
      button.setSize(width,height);
      button.setLocation(getWidth()/2-width/2, getHeight()/2-height/2);
   }
}
</code></pre>

<p>To re-size a button in JFrame:</p>

<pre><code>public class Button extends JFrame implements ActionListener {
   private JButton button;

   public Button(String title) {
      Container container = getContentPane();
      container.setLayout(null);
      container.setBackground(Color.white);
      setTitle(title);
      setSize(400,400);
      button = new JButton(""Press Me"");
      button.setSize(getWidth()/2,20);
      button.setLocation(getWidth()/2-button.getSize().width/2,
                     getHeight()/2-button.getSize().height/2);
      container.add(button);
      button.addActionListener(this);
    }

   public void actionPerformed(ActionEvent e) {
      int width = (button.getSize().width == getWidth()/2) ? getWidth()/4 : getWidth()/2;
      int height = button.getSize().height;
      button.setSize(width,height);
      button.setLocation(getWidth()/2-width/2, getHeight()/2-height/2);
   }

   public static void main(String[] args) {
      Button button = new Button(""Test"");
      button.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      button.setVisible(true);
   }
}
</code></pre>
"
14444713,"<p>My best solution (so far) for calculating the number of days difference: </p>

<pre><code>//  This assumes that you already have two Date objects: startDate, endDate
//  Also, that you want to ignore any time portions

Calendar startCale=new GregorianCalendar();
Calendar endCal=new GregorianCalendar();

startCal.setTime(startDate);
endCal.setTime(endDate);

endCal.add(Calendar.YEAR,-startCal.get(Calendar.YEAR));
endCal.add(Calendar.MONTH,-startCal.get(Calendar.Month));
endCal.add(Calendar.DATE,-startCal.get(Calendar.DATE));

int daysDifference=endCal.get(Calendar.DAY_OF_YEAR);
</code></pre>

<p>Note, however, that this assumes less than a year's difference!  </p>
"
14464367,"<p>try to use <code>switch case</code> statment.
but normally it's not the prefermance bottleneck.</p>
"
15396772,"<p>Here's one way, which I've had to use once or twice:</p>

<pre><code>public abstract class GenericClass&lt;T&gt;{
    public abstract Class&lt;T&gt; getMyType();
}
</code></pre>

<p>Along with</p>

<pre><code>public class SpecificClass extends GenericClass&lt;String&gt;{

    @Override
    public Class&lt;String&gt; getMyType(){
        return String.class;
    }
}
</code></pre>
"
15741240,"<p>Unfortunately, <code>JSR 308</code> will not add more values than this project local Not Null suggestion here</p>

<p><code>Java 8</code> will not come with a single default annotation or its own <code>Checker</code> framework.
Similar to Find-bugs or <code>JSR 305</code>, this JSR is poorly maintained by a small bunch of mostly academic teams. </p>

<p>No commercial power behind it, thus <code>JSR 308</code> launches <code>EDR 3</code> (Early Draft Review at <code>JCP</code>) NOW, while <code>Java 8</code> is supposed to ship in less than 6 months:-O
Similar to <code>310</code> btw. but unlike <code>308 Oracle</code> has taken charge of that now away from its founders to minimize harm it'll do to the Java Platform.</p>

<p>Every project, vendor and academic class like the ones behind the <code>Checker Framework</code> and <code>JSR 308</code> will create its own proprietary checker annotation.</p>

<p>Making source code incompatible for years to come, until a few popular compromises could be found and maybe added to <code>Java 9</code> or <code>10</code>, or via frameworks like <code>Apache Commons</code> or <code>Google Guava</code>;-)</p>
"
16491769,"<p>This seems to be indeed a bug in XSSFSheet.createRow(int index). As long as the bug is not fixed, using this class as a workaround should do the trick :</p>

<pre><code>import java.util.Iterator;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;

public class PoiHacks
{
    // Fix of XSSFSheet.createRow(int index)
    public static Row createRow(Sheet sheet, int index) {
        Row row = sheet.getRow(index);
        if(row==null) return sheet.createRow(index);

        Iterator it = row.iterator();
        while(it.hasNext()) {
            it.next();
            it.remove();
        }
        return row;
    }
}
</code></pre>

<p>Use :</p>

<pre><code>PoiHacks.createRow(sheet, 0);
</code></pre>
"
16492956,"<p>In python, in case you need to quickly decode one of these.</p>

<pre><code>  def decodeJavaByteArray(byte):
      return byte if byte &gt;= 0 else abs(byte) + 128  
  data = [-47, 1, 16, 84, 2, 101, 110, 83, 111, 109, 101, 32, 78, 70, 67, 32, 68, 97, 116, 97]
  print [chr(decodeJavaByteArray(i)) for i in data]
=&gt; ['\xaf', '\x01', '\x10', 'T', '\x02', 'e', 'n', 'S', 'o', 'm', 'e', ' ', 'N', 'F', 'C', ' ', 'D', 'a', 't', 'a']
</code></pre>

<p>:-D</p>
"
11468087,"<pre><code> private  int maxHeight(BinaryNode&lt;AnyType&gt; n) {
  if (n ! = null) return 0;
  int leftheight = maxHeight(n.left);
   int rightheight = maxHeight(n.right);
  return (leftheight &gt; rightheight) ? leftheight + 1 : rightheight + 1;
}
</code></pre>

<p>So far you have known the 4 cases to count the height</p>

<p>The essence is to continue to go left or right node if the left child or the right child exist.
if exist, return 1.</p>

<p>The counting function goes in the last statement. That is to get the largest height counted.</p>

<p>The main course is to get familiar with recursion and the programming stack  when the method is working. </p>
"
9235536,"<p>This code should handle most inputs, except IP addresses where all groups of digits are in three's (ex: 255.255.255.255 is valid, but not 255.1.255.255). It also doesn't support scientific notation</p>

<p>It will work with most variants of separators ("","", ""."" or space). If more than one separator is detected, the first is assumed to be the thousands separator, with additional checks (validity etc.)</p>

<p><strong>Edit:</strong> prevDigit is used for checking that the number uses thousand separators correctly. If there are more than one group of thousands, all but the first one must be in groups of 3. I modified the code to make it clearer so that ""3"" is not a magic number but a constant.</p>

<p><strong>Edit 2:</strong> I don't mind the down votes much, but can someone explain what the problem is?</p>

<pre><code>/* A number using thousand separator must have
   groups of 3 digits, except the first one.
   Numbers following the decimal separator can
   of course be unlimited. */
private final static int GROUP_SIZE=3;

public static boolean isNumber(String input) {
    boolean inThousandSep = false;
    boolean inDecimalSep = false;
    boolean endsWithDigit = false;
    char thousandSep = '\0';
    int prevDigits = 0;

    for(int i=0; i &lt; input.length(); i++) {
        char c = input.charAt(i);

        switch(c) {
            case ',':
            case '.':
            case ' ':
                endsWithDigit = false;
                if(inDecimalSep)
                    return false;
                else if(inThousandSep) {
                    if(c != thousandSep)
                        inDecimalSep = true;
                    if(prevDigits != GROUP_SIZE)
                        return false; // Invalid use of separator
                }
                else {
                    if(prevDigits &gt; GROUP_SIZE || prevDigits == 0)
                        return false;
                    thousandSep = c;
                    inThousandSep = true;
                }
                prevDigits = 0;
                break;

            default:
                if(Character.isDigit(c)) {
                    prevDigits++;
                    endsWithDigit = true;
                }
                else {
                    return false;
                }
        }
    }
    return endsWithDigit;
}
</code></pre>

<p>Test code:</p>

<pre><code>public static void main(String[] args) {
    System.out.println(isNumber(""100""));               // true
    System.out.println(isNumber(""100.00""));            // true
    System.out.println(isNumber(""1,5""));               // true
    System.out.println(isNumber(""1,000,000.00.""));     // false
    System.out.println(isNumber(""100,00,2""));          // false
    System.out.println(isNumber(""123.123.23.123""));    // false
    System.out.println(isNumber(""123.123.123.123""));   // true       
}
</code></pre>
"
17477723,"<p>If you know how much elements the array has, a simple way is doing this:</p>

<pre><code>String appendedString = """" + array[0] + """" + array[1] + """" + array[2] + """" + array[3]; 
</code></pre>
"
17537328,"<p>//Loop thro' the entire character array and keep 'i' as the basis of your permutation and keep finding the combination like you swap [ab, ba]</p>

<pre><code>public class Permutation {
    //Act as a queue
    private List&lt;Character&gt; list;
    //To remove the duplicates
    private Set&lt;String&gt; set = new HashSet&lt;String&gt;();

    public Permutation(String s) {
        list = new LinkedList&lt;Character&gt;();
        int len = s.length();
        for(int i = 0; i &lt; len; i++) {
            list.add(s.charAt(i));
        }
    }

    public List&lt;String&gt; getStack(Character c, List&lt;Character&gt; list) {
        LinkedList&lt;String&gt; stack = new LinkedList&lt;String&gt;();
        stack.add(""""+c);
        for(Character ch: list) {
            stack.add(""""+ch);
        }

        return stack;
    }

    public String printCombination(String s1, String s2) {
        //S1 will be a single character
        StringBuilder sb = new StringBuilder();
        String[] strArr = s2.split("","");
        for(String s: strArr) {
            sb.append(s).append(s1);
            sb.append("","");
        }       
        for(String s: strArr) {
            sb.append(s1).append(s);
            sb.append("","");
        }

        return sb.toString();
    }

    public void printPerumtation() {
        int cnt = list.size();

        for(int i = 0; i &lt; cnt; i++) {
            Character c = list.get(0);
            list.remove(0);
            List&lt;String&gt; stack = getStack(c, list);

            while(stack.size() &gt; 1) {
                //Remove the top two elements
                String s2 = stack.remove(stack.size() - 1);
                String s1 = stack.remove(stack.size() - 1);
                String comS = printCombination(s1, s2);
                stack.add(comS);
            }

            String[] perms = (stack.remove(0)).split("","");
            for(String perm: perms) {
                set.add(perm);
            }

            list.add(c);
        }

        for(String s: set) {
            System.out.println(s);
        }
    }
}
</code></pre>
"
11687666,"<p>As the other people stated a class implementing the Java Set interface would be more suitable.</p>

<p>However if the use of an ArrayList is a requirement you can use the methods <code>ArrayList&lt;E&gt;.Contains(Object elem)</code> to verify if an object is already included in your ArrayList. But note that items are getting searched with the use of the <code>Object.equals(Object o)</code> method.</p>
"
9410269,"<p>Unfortunately, you'll need a slightly longer syntax:</p>

<pre><code>Amount[COAL.ordinal()] // The amount of coal
Price[IRON.ordinal()]  // The price of iron
</code></pre>

<p>If that is not to your liking, constants may be your only option, i.e.</p>

<pre><code>public class Resource {
    public static final int COAL = 0;
    public static final int IRON = 1;

}
</code></pre>

<p>Hope that helps.</p>
"
9439380,"<p>Here is a Java solution</p>

<pre><code>static int knapsack(int[] values, int[] weights, int W, int[] tab, int i) {
    if(i&gt;=values.length) return 0;
    if(tab[W] != 0) 
        return tab[W];      

    int value1 = knapsack(values, weights, W, tab, i+1);        
    int value2 = 0;
    if(W &gt;= weights[i]) value2 = knapsack(values, weights, W-weights[i], tab, i+1) + values[i];

    return tab[W] = (value1&gt;value2) ? value1 : value2;
}
</code></pre>

<p>Test it by using</p>

<pre><code>public static void main(String[] args) {
    int[] values = new int[] {894, 260, 392, 281, 27};
    int[] weights = new int[] {8, 6, 4, 0, 21};
    int W = 30;
    int[] tab = new int[W+1];
    System.out.println(knapsack(values, weights, W, tab, 0));
}
</code></pre>
"
18814634,"<pre><code>public class test {

public static void main(String[] args) throws Exception, IOException {

    int count=0;
    HashSet&lt;Integer&gt; set1 = new HashSet&lt;Integer&gt;();
    HashMap&lt;Integer, String&gt; ee=new HashMap&lt;Integer,String&gt;();
    BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
    System.out.println(""how many elements u want to store"");
    int n=Integer.parseInt(br.readLine());
    System.out.println(""enter te element u want insert"");
    for(int i=0;i&lt;n;i++)
    {
        boolean x=set1.add(Integer.parseInt(br.readLine()));
        if(x==false)
        {
            count++;
        }
    }
    System.out.println(""no of duplicate elements is   ""+count);
    }
}
</code></pre>
"
11928431,"<p>Use this code:</p>

<pre><code>StringBuilder querySelect = new StringBuilder(""select * from messages "");
StringBuilder queryWhere = new StringBuilder(""where msg_id=?"");

if (fileRSVO.getFileName()!= null){
    queryWhere.append(""and descr LIKE %?% "");
}
querySelect.append(queryWhere);

List&lt;Map&lt;String, Object&gt;&gt; list = getJdbcTemplate().queryForList(querySelect.toString(), params.toArray()); 
...
</code></pre>
"
19199560,"<pre><code>Arrays.fill(arr, new double[4]);
</code></pre>
"
9583200,"<p>Well, you can with a little bit of work like this</p>

<pre><code>    Set&lt;String&gt; s = new HashSet&lt;String&gt;();
    Random r = new Random();
    String res = s.toArray(new String[0])[r.nextInt(s.toArray().length)];
</code></pre>

<p>This grabs a randomly selected object from the set.</p>
"
12015711,"<p>You will need to close the output stream properly within the service to avoid this exception.
If you are using a third party library then make sure that you have set the response header </p>

<pre><code>Content-Type
Content-Length
</code></pre>

<p>If you are using a java service you can get the content-length from method</p>

<pre><code>File.length()
</code></pre>
"
9594745,"<p>The first one is better because the else is not necessary. You never want to include unnecessary part in a design whether it is a java program or a car or something else.</p>

<p>UPDATE:</p>

<p>Necessity does not imply utilitarian in the common sense. If the superfluity is meant for defense in depth or aesthetics, for example, then it's not unnecessary.  Understanding the posted question's example is simplistic, below is an example where the unnecessary else would complicate the design in that an additional return statement is required. </p>

<pre><code>public static int add(int a, int b){
    if(a &gt; 0){
        int c = a+b;
        return c;
    } else if( a&lt;= 0){
        int c = a-(-b);
        return c;
    }
}
</code></pre>

<p>bty: while the example reduces the argument to absurdity, it illustrates the point of unnecessary parts.</p>
"
9594792,"<p>First one is better because it is prettier even better if you could remove multiple exit points i.e. just one <code>return</code> or as little as possible and you can certainly do with one here. </p>

<p>Also please use codereview.stackexchange.com for review type questions.</p>

<pre><code>public boolean test(boolean var){
    boolean flag;
    if (var == true){
        flag = true;
    }
    return flag;
}
</code></pre>
"
19589074,"<p>you may use the following process , i.e. using regex as follows-</p>

<pre><code>String[] splited = result.split(""\\s+"");
String[] splited1 = new String[splited.length];

for (int i = 0; i &lt; splited.length; i++) {
int l = splited[i].length();
result1 = """";
for (int j = 0; j &lt; splited[i].length(); j++) {
String next = splited[i].substring(j, j + 1);

if (j == 0) {
 result1 += next.toUpperCase();
} else {
 result1 += next.toLowerCase();
}
}
splited1[i] = result1;
}
result = """";
for (int i = 0; i &lt; splited1.length; i++) {
result += "" "" + splited1[i];
}
</code></pre>

<p>For more details , please refer to this post -</p>

<p><a href=""http://javacodingtutorial.blogspot.com/2013/10/converting-any-string-to-camel-case.html"" rel=""nofollow"">http://javacodingtutorial.blogspot.com/2013/10/converting-any-string-to-camel-case.html</a></p>
"
9699372,"<p>I think you are missing something. Static methods (like the main method in <code>Testclass1</code> and <code>Testclass2</code>) cannot override subclass methods.</p>
"
12159644,"<p>You declare parent as Parent, so java will provide only methods and attributes of the Parent class. </p>

<pre><code>Child child = new Child();
</code></pre>

<p>should work. Or</p>

<pre><code>Parent child = new Child();
((Child)child).salary = 1;
</code></pre>
"
19681764,"<p>If Any one still looking out for answers </p>

<p>Here is the code posted</p>

<pre><code>    Iterator&lt;Map.Entry&lt;Integer, ArrayList&lt;ShortListedFlats&gt;&gt;&gt; iter = rentShortListedFlats
            .entrySet().iterator();

    while (iter.hasNext()) {
        ArrayList&lt;ShortListedFlats&gt; shortLists = iter.next().getValue();

        counter = counter + shortLists.size();

    }
</code></pre>
"
19756941,"<pre><code>System.err.println(""Someone is Restarting me..."");
setVisible(false);
try {
    Thread.sleep(600);
} catch (InterruptedException e1) {
    e1.printStackTrace();
}
setVisible(true);
</code></pre>

<p>I guess you don't really want to stop the application, but to ""Restart"" it.  For that, you could use this and add your ""Reset"" before the sleep and after the invisible window.</p>
"
12165089,"<pre><code>import java.util.Arrays;

Arrays.sort (int [])
Arrays.sort (String [])
</code></pre>

<p>this will sort array of Strings.</p>
"
19872458,"<p>Just use .intValue()
If your BigInteger is named BigValue2, then it would be BigValue2.intValue()</p>

<p>So to answer your question, it's</p>

<pre><code>BigValue1.pow(BigValue2.intValue())
</code></pre>
"
12223153,"<p>You might use an InputStreamReader and a BufferedReader to get the chars from your InputStream. Check java APIs to see how to read from streams:</p>

<ul>
<li><a href=""http://docs.oracle.com/javase/6/docs/api/java/io/InputStreamReader.html"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/io/InputStreamReader.html</a></li>
<li><a href=""http://docs.oracle.com/javase/6/docs/api/java/io/BufferedReader.html"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/io/BufferedReader.html</a></li>
</ul>

<p>Probably you might want to use the:</p>

<pre><code>BufferedReader br = new BufferedReader(new InputStreamReader(instream);
String line = br.readLine()
</code></pre>

<p>method to get lines from the InputStream.</p>

<p>Finally you could use simple string comparison to compare your uniqueId with the contents of the Stream. </p>
"
12223213,"<p>Why not try something like this?</p>

<pre><code>@Test
public void testStreamBytes()
    throws PersistenceException, IOException, ClassNotFoundException {
  final String uniqueId = ""TestString"";
  final byte[] written = uniqueId.getBytes();
  final byte[] read = new byte[written.length];
  try (final OutputStream outStream = fileService.getOutputStream(uniqueId)) {
    outStream.write(written);
  }
  try (final InputStream inStream = fileService.getInputStream(uniqueId)) {
    int rd = 0;
    final int n = read.length;
    while (rd &lt;= (rd += inStream.read(read, rd, n - rd)))
      ;
  }
  assertEquals(written, read);
}
</code></pre>
"
20115174,"<p>To compare <code>Strings</code> you have to use the <strong>equals</strong> keyword. </p>

<pre><code>if(c.equals(""""))
{
}
</code></pre>
"
9889789,"<p>Incasesensitive search can be achieved by using the sql syntax <code>ucase(FULLNAME)</code> and <code>ucase(a.string)</code> you're transforming both to uppercase before comparing</p>
"
12305098,"<p><strong><code>O(1)</code> Algorithm</strong></p>

<p>Your solution is O(n^2) because of the two nested loops. </p>

<p>The fastest algorithm to do this is <code>O(1)</code> (constant time):</p>

<pre><code>public static int detectDuplicate(String source) {
    boolean[] foundChars = new boolean[Character.MAX_VALUE+1];
    for(int i = 0; i &lt; source.length(); i++) {
        if(i &gt;= Character.MAX_VALUE) return Character.MAX_VALUE;
        char currentChar = source.charAt(i);
        if(foundChars[currentChar]) return i;
        foundChars[currentChar] = true;
    }
    return -1;
}
</code></pre>

<p>However, this is only fast in terms of big oh. </p>
"
20705330,"<p>I had the same error when I upgraded my IntelliJ IDE, it was fixed with the replacement of 1.5 with 1.6 as below.</p>

<pre><code>       &lt;plugin&gt;
            &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
            &lt;configuration&gt;
                &lt;source&gt;1.6&lt;/source&gt;
                &lt;target&gt;1.6&lt;/target&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;
</code></pre>
"
20717297,"<p>just do something like this:</p>

<pre><code>for (AbstractDevice device : mDevicesList){
int curIndex = mDevicesList.indexOf(device));

            }
</code></pre>
"
10030334,"<p>Re-write the MessageBodyWriterJSON with this</p>

<pre><code>import javax.ws.rs.core.MediaType; 
import javax.ws.rs.ext.Provider; 

import org.codehaus.jackson.jaxrs.JacksonJsonProvider; 
import org.codehaus.jackson.map.ObjectMapper; 
import org.codehaus.jackson.map.SerializationConfig; 

@Provider 
public class MessageBodyWriterJSON extends JacksonJsonProvider { 
            public MessageBodyWriterJSON (){ 
            } 

        @Override 
            public ObjectMapper locateMapper(Class&lt;?&gt; type, MediaType mediaType) 
        { 
        ObjectMapper mapper = super.locateMapper(type, mediaType); 
        //DateTime in ISO format ""2012-04-07T17:00:00.000+0000"" instead of 'long' format 
            mapper.configure(SerializationConfig.Feature.WRITE_DATES_AS_TIMESTAMPS, false); 
            return mapper; 
        } 
}
</code></pre>
"
12550849,"<p>Just use the following:</p>

<pre><code>doublevalue+""""; 
</code></pre>

<p>This will work for any data type.</p>

<p><strong>Example:</strong></p>

<pre><code>Double dd=10.09;
String ss=dd+"""";
</code></pre>
"
12562015,"<p><code>toString</code> is overriden by <code>ArrayList</code>, the <code>List</code> implementation returned by <code>Arrays.asList()</code></p>

<p>Here is how the <code>asList</code> method is implemented in the <code>Arrays</code> class.</p>

<pre><code>public static &lt;T&gt; List&lt;T&gt; asList(T... a) {
    return new ArrayList&lt;T&gt;(a);
}
</code></pre>

<p>where <code>ArrayList</code> is an static inner class of <code>Arrays</code>:</p>

<p><code>private static class ArrayList&lt;E&gt; extends AbstractList&lt;E&gt;</code></p>

<p>Ya, well is not directly overriden by <code>ArrayList</code> but by its ancestor <code>AbstractList</code></p>
"
21340066,"<pre><code>package com;
import java.io.File;
public class Delete {
    public static void main(String[] args) {

        String files; 
        File file = new File(""D:\\del\\yc\\gh"");
        File[] listOfFiles = file.listFiles(); 
        for (int i = 0; i &lt; listOfFiles.length; i++) 
        {
            if (listOfFiles[i].isFile()) 
            {
                files = listOfFiles[i].getName();
                System.out.println(files);
                if(!files.equalsIgnoreCase(""Scan.pdf""))
                {
                    boolean issuccess=new File(listOfFiles[i].toString()).delete();
                    System.err.println(""Deletion Success ""+issuccess);
                }
            }
        }
    }
}
</code></pre>

<p>If you want to delete all files remove </p>

<pre><code>if(!files.equalsIgnoreCase(""Scan.pdf""))
</code></pre>

<p>statement it will work.</p>
"
12571586,"<p>use a collections object like <code>ArrayList</code>,</p>

<pre><code>List&lt;Double&gt; doubles = new ArrayList&lt;Double&gt;();
doubles.add(...);
doubles.add(...);
...
Double[] temp = doubles.toArray(new Double[0]);
</code></pre>
"
21435199,"<p>package producer.consumer;</p>

<p>import java.util.ArrayList;
import java.util.List;</p>

<p>public class ThreadInterComm {</p>

<pre><code>public static void main(String args[]) {

    List&lt;Integer&gt; sharedObject = new ArrayList&lt;Integer&gt;(1);
    sharedObject.add(new Integer(0));

    Runnable task = new MyTask(sharedObject);

    Thread t1 = new Thread(task, ""T1"");
    Thread t2 = new Thread(task, ""T2"");
    Thread t3 = new Thread(task, ""T3"");

    t1.start();
    t2.start();
    t3.start();

}
</code></pre>

<p>}</p>

<p>class MyTask implements Runnable {</p>

<pre><code>private final List&lt;Integer&gt; sharedObject;
String name = ""T1"";//Initializing with T1 

public MyTask(List&lt;Integer&gt; sharedObject) {
    this.sharedObject = sharedObject;
}

public void run() {

    synchronized (sharedObject) {
        while (true) {//Or use a counter how many times to do the job
            if (!name.equals(Thread.currentThread().getName())) {
                try {
                    sharedObject.wait();//Let other Threads wait
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
            if (name.equals(Thread.currentThread().getName())) {
                int value = sharedObject.remove(0).intValue();
                sharedObject.add(new Integer(++value));
                System.out.println(Thread.currentThread().getName() + "" : ""
                        + sharedObject.get(0));
                if (Thread.currentThread().getName().equals(""T1"")) {

                    name = ""T2"";// give lock to t2
                } else if (Thread.currentThread().getName().equals(""T2"")) {

                    name = ""T3"";// give lock to t3
                } else if (Thread.currentThread().getName().equals(""T3"")) {

                    name = ""T1"";// give lock to t1
                }
                i--;
                sharedObject.notifyAll();
            }

    }}

}
</code></pre>

<p>}</p>
"
12612296,"<p>You have to cast the strings to integers first, to do math with them afterwards.</p>

<pre><code>int a = Integer.parseInt(a[0]);
int b = Integer.parseInt(a[1]);

int temp = a+b;
</code></pre>
"
21847406,"<pre><code>import java.io.*;
public class Anagram {

public static void main(String[] args) {
      java.util.Scanner sc=new java.util.Scanner(System.in);
            PrintWriter p=new PrintWriter(System.out,true);
            p.println(""Enter Word"");
            String a[],s="""",st;boolean flag=true;
            int in[],n,nf=1,i,j=0,k,m=0;
            char l[];
            st=sc.next();
            p.println(""Anagrams"");
            p.println(""1 . ""+st);
            l=st.toCharArray();
            n=st.length();
            for(i=1;i&lt;=n;i++){
                nf*=i;
            }

            i=1;
            a=new String[nf];
            in=new int[n];
            a[0]=st;
            while(i&lt;nf){
                for(m=0;m&lt;n;m++){
                    in[m]=n;
                }j=0;
                while(j&lt;n){
                    k=(int)(n*Math.random());

                    for(m=0;m&lt;=j;m++){
                        if(k==in[m]){
                            flag=false;
                            break;          
                        }
                    }
                    if(flag==true){
                        in[j++]=k;
                    }flag=true;
                }s="""";
                for(j=0;j&lt;n;j++){
                    s+=l[in[j]];
                }

                //Removing same words
                for(m=0;m&lt;=i;m++){
                        if(s.equalsIgnoreCase(a[m])){
                            flag=false;
                            break;          
                        }
                    }
                    if(flag==true){
                        a[i++]=s;
                        p.println(i+"" . ""+a[i-1]);
                    }flag=true;

            }

    }
}
</code></pre>
"
10198203,"<p>Really funny to see so many answers on such a ""simple"" thing :D
So, I want to add my approach here as well. I usually have my own Utils-Class containing some static methods, like the string-checking-one:</p>

<pre><code>public static boolean isCool(String param) {
    if (param == null) {
        return false;
    }
    if (param.trim().equals("""")) {
        return false;
    }
    return true;
}
</code></pre>
"
12635813,"<p>I think this question has already been resolved somewhere. The ""official"" solution should be :</p>

<pre><code>  public int dominator(int[] A) {
    int N = A.length;

    for(int i = 0; i&lt; N/2+1; i++)
    {
        int count=1;
        for(int j = i+1; j &lt; N; j++)
        {
            if (A[i]==A[j]) {count++; if (count &gt; (N/2)) return i;}
        }
    }

    return -1;
  }
</code></pre>
"
10223807,"<p>Strings are constant; their values cannot be changed after they are created. String buffers support mutable strings. Because String objects are immutable they can be shared. For example:</p>

<pre><code>     String str = ""abc"";
</code></pre>

<p>is equivalent to:</p>

<pre><code>     String str = new String(""abc"");
</code></pre>

<p>You should avoid the second way to declare a string, for reasons explained into other answers</p>
"
10242758,"<p>This one might works for you....</p>

<pre><code>void List&lt;Integer&gt; makeSequence(int begin, int end) {

  AtomicInteger ai=new AtomicInteger(begin);
  List&lt;Integer&gt; ret = new ArrayList(end-begin+1);

  while ( end--&gt;begin) {

    ret.add(ai.getAndIncrement());

  }
  return ret;  
}
</code></pre>
"
10311346,"<p>With version 2.21.0 of selenium-java.jar you can do this;</p>

<pre><code>driver.findElement(By.id(""..."")).isDisplayed()
</code></pre>
"
12679468,"<p>Once you check/adjust, assign <code>current_guy</code> to a final variable:</p>

<pre><code>int current_guy=0;


if (a.equals(""bf""))
    {
        current_guy=1;
    }

final int final_current_guy = current_guy;

guy1.setOnClickListener(new OnClickListener() {

    public void onClick(View v) {

    // TODO Auto-generated method stub
    if (final_current_guy==1) {
        }
    }
</code></pre>

<p>Or use one-line assignment:</p>

<pre><code>final int current_guy = (a.equals(""bf"") ? 1 : 0);
</code></pre>
"
12764168,"<p>How about sorting the array first? You then compare middle and first and last elements of the sorted array to find the dominant element.</p>

<pre><code>public Integer findDominator(int[] arr) {
    int[] arrCopy = arr.clone();

    Arrays.sort(arrCopy);

    int length = arrCopy.length;
    int middleIndx = (length - 1) /2;

    int middleIdxRight;
    int middleIdxLeft = middleIndx;

    if (length % 2 == 0) {
        middleIdxRight = middleIndx+1;
    } else {
        middleIdxRight = middleIndx;
    }

    if (arrCopy[0] == arrCopy[middleIdxRight]) {
        return arrCopy[0];
    }

    if (arrCopy[middleIdxLeft] == arrCopy[length -1]) {
        return arrCopy[middleIdxLeft];
    }

    return null;
}
</code></pre>
"
22552698,"<pre><code>Integer i= Integer.parseInt(text.substring(text.length() - 7));
</code></pre>

<p>This just worked for me. Very simple yet efficient and effective solution....</p>
"
10443844,"<p>Yes, but: you can experience trouble if you use packages like <code>com.sun</code> etc., because they proprietary.<br/>
Moreover, some time ago i stumbled with Object(In|Out)putStream working differentely in Sun JDK and IBM JDK, however, maybe, I did something wrong there, so I am not sure in this.<br/>
Proof: <a href=""http://docs.oracle.com/javase/specs/"" rel=""nofollow"">http://docs.oracle.com/javase/specs/</a>  -  The Java Virtual Machine Specification, Java SE 7 Edition<br/>
Update: Sorry. Indeed, not exactly the same bytecode, but all certified JVMs will understand it and give the same result.</p>
"
10466954,"<p>Given your comments and responses, I will go for the following solution. I think this is the most efficient one:</p>

<pre><code>Public Class MyClass{

       public static void main (String args[]){
         StringBuilder sb = new StringBuilder();

         for(int i=1; i&lt;=100; i++){
           sb.append(FizzOrBuzz(i));
          }
          System.out.println(sb);
       }

       public static String FizzOrBuzz(int num){
            if (num % 15 ==0) {return ""FizzBuzz\n"";}
            else if (num % 3 == 0) {return ""Fizz\n"";}
            else if (num % 5 == 0) {return ""Buzz\n"";}
            else {return Integer.toString(num);}
       }
}
</code></pre>
"
12859585,"<p>Simple, convert to long and subtract:</p>

<pre><code>public long diff(int i1, int i2) {
     return ((long) i1) - i2;
}
</code></pre>

<p>Autoboxing takes care of wrapping/unwrapping as required</p>
"
23285534,"<pre><code>if(!(theList.get(theIndexofObject) == null)){
   do something...
}
else{
   do nothing...
}
</code></pre>

<p>instead of writing this code.Try in the below format,I think you will get answer</p>

<pre><code>if(theList.get(theIndexofObject)!= null)){
   do something...
}
else{
   do nothing...
}
</code></pre>
"
23847580,"<p>I create this Methode and call it by closing the application:</p>

<pre><code>  public void deleteFiles(){

    File f = new File(""log"");
    File[] fileArray = f.listFiles();
    double timenow = System.currentTimeMillis();

    double olderTenDays = timenow - 864000000;// MS for ten days

    for (int i = 0; i &lt; fileArray.length; i++) {

        if(fileArray[i].lastModified()&lt; olderTenDays )
           fileArray[i].delete();
    }
 }
</code></pre>
"
24115954,"<p>You can try something like : </p>

<pre><code>LocalDate fromCustomPattern = LocalDate.parse(""20.01.2014"", DateTimeFormatter.ofPattern(""MM/dd/yy""))
</code></pre>
"
10719109,"<pre><code>Pattern pp = Pattern.compile(""\\d+"");
Matcher m = pp.matcher(""sdfsdf123sdfs3464ew111"");
While(m.find())
{
    System.out.println(m.group());
}
</code></pre>

<hr>

<p>output will be:</p>

<pre><code>123
3464
111
</code></pre>

<p>check out !                     </p>
"
10749199,"<p>You should be able to utilize the <a href=""http://commons.apache.org/lang/api-2.5/org/apache/commons/lang/StringUtils.html"" rel=""nofollow""><code>StringUtils</code></a> class and the <a href=""http://commons.apache.org/lang/api-2.5/org/apache/commons/lang/StringUtils.html#countMatches%28java.lang.String,%20java.lang.String%29"" rel=""nofollow""><code>countMatches()</code></a> method.</p>

<blockquote>
  <p>public static int countMatches(String str,
                                 String sub)</p>

<pre><code>Counts how many times the substring appears in the larger String.
</code></pre>
</blockquote>

<p>Try the following:</p>

<pre><code>int count = StringUtils.countMatches(""a.b.c.d"", ""."");
</code></pre>
"
24794704,"<p>Here’s an example defines a SimpleDateFormat object as a static field. When two or more threads access “someMethod” concurrently with different dates, they can mess with each other’s results.</p>

<pre><code>    public class SimpleDateFormatExample {
         private static final SimpleDateFormat simpleFormat = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss.SSS"");

         public String someMethod(Date date) {
            return simpleFormat.format(date);
         }
    }
</code></pre>

<p>You can create a service like below and use jmeter to simulate concurrent users using the same SimpleDateFormat object formatting different dates and their results will be messed up.</p>

<pre><code>public class FormattedTimeHandler extends AbstractHandler {

private static final String OUTPUT_TIME_FORMAT = ""yyyy-MM-dd HH:mm:ss.SSS"";
private static final String INPUT_TIME_FORMAT = ""yyyy-MM-ddHH:mm:ss"";
private static final SimpleDateFormat simpleFormat = new SimpleDateFormat(OUTPUT_TIME_FORMAT);
// apache commons lang3 FastDateFormat is threadsafe
private static final FastDateFormat fastFormat = FastDateFormat.getInstance(OUTPUT_TIME_FORMAT);

public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response)
        throws IOException, ServletException {

    response.setContentType(""text/html;charset=utf-8"");
    response.setStatus(HttpServletResponse.SC_OK);
    baseRequest.setHandled(true);

    final String inputTime = request.getParameter(""time"");
    Date date = LocalDateTime.parse(inputTime, DateTimeFormat.forPattern(INPUT_TIME_FORMAT)).toDate();

    final String method = request.getParameter(""method"");
    if (""SimpleDateFormat"".equalsIgnoreCase(method)) {
        // use SimpleDateFormat as a static constant field, not thread safe
        response.getWriter().println(simpleFormat.format(date));
    } else if (""FastDateFormat"".equalsIgnoreCase(method)) {
        // use apache commons lang3 FastDateFormat, thread safe
        response.getWriter().println(fastFormat.format(date));
    } else {
        // create new SimpleDateFormat instance when formatting date, thread safe
        response.getWriter().println(new SimpleDateFormat(OUTPUT_TIME_FORMAT).format(date));
    }
}

public static void main(String[] args) throws Exception {
    // embedded jetty configuration, running on port 8090. change it as needed.
    Server server = new Server(8090);
    server.setHandler(new FormattedTimeHandler());

    server.start();
    server.join();
}
</code></pre>

<p>}</p>

<p>The code and jmeter script can be downloaded <a href=""http://www.luyue.org/simpledateformat-thread-safety/"" rel=""nofollow"">here</a> .</p>
"
10990970,"<p>Here is a simple recursive solution in Java but you should avoid using recursion if possible. </p>

<pre><code>public class Knapsack {

    public static void main(String[] args) {
        int[] arr = new int[]{11, 8, 7, 6, 5};
        find(arr,20);
    }

    public static boolean find( int[] arr,int total){
        return find(arr,0,total);
    }

    private static boolean find( int[] arr,int start,  int total){
        if (start == arr.length){
            return false;
        }
        int curr = arr[start];
        if (curr == total){
            System.out.println(curr);
            return true;
        }else if (curr &gt; total || !find(arr,start+1,total-curr)){
            return find(arr,start+1,total);
        }
        System.out.println(curr);
        return true;
    }
}
</code></pre>
"
25327642,"<p>Just in case you use store a variable using the generic type you can easily solve this problem adding a getClassType method as follows:</p>

<pre><code>public class Constant&lt;T&gt; {
  private T value;

  @SuppressWarnings(""unchecked"")
  public Class&lt;T&gt; getClassType () {
    return ((Class&lt;T&gt;) value.getClass());
  }
}
</code></pre>

<p>I use the provided class object later to check if it is an instance of a given class, as follows:</p>

<pre><code>Constant&lt;?&gt; constant = ...;
if (constant.getClassType().equals(Integer.class)) {
    Constant&lt;Integer&gt; integerConstant = (Constant&lt;Integer&gt;)constant;
    Integer value = integerConstant.getValue();
    // ...
}
</code></pre>
"
11011895,"<p>I guess the following also works (at least for MySQL):</p>

<pre><code>SELECT login FROM usertable WHERE lastname=""O'Neil"";
</code></pre>
"
11047951,"<pre><code>public enum body
{
    NO_LEG = 0,         // bit 1
    LEG_ONE = 2,        // bit 2 
    LEG_TWO = 4,        // bit 3 
    NO_ARM = 8,          // bit 4 
    ARM_ONE = 16,  // bit 5 
    ARM_TWO = 32  // bit 6 

}
</code></pre>

<p>use it like this 
   (int)body.LEG_ONE ; /// which returns 2</p>

<p>this is also very fast, and easy readable since it is done on compile time.</p>
"
25787799,"<p>I have a slightly modified version of <a href=""http://stackoverflow.com/users/2182351/mani"">Mani</a>'s.</p>

<pre><code>private static BigDecimal truncateDecimal(final double x, final int numberofDecimals) {
    return new BigDecimal(String.valueOf(x)).setScale(numberofDecimals, BigDecimal.ROUND_DOWN);
}

public static void main(String[] args) {
    System.out.println(truncateDecimal(0, 2));
    System.out.println(truncateDecimal(9.62, 2));
    System.out.println(truncateDecimal(9.621, 2));
    System.out.println(truncateDecimal(9.629, 2));
    System.out.println(truncateDecimal(9.625, 2));
    System.out.println(truncateDecimal(9.999, 2));
    System.out.println(truncateDecimal(3.545555555, 2));

    System.out.println(truncateDecimal(9.0, 2));
    System.out.println(truncateDecimal(-9.62, 2));
    System.out.println(truncateDecimal(-9.621, 2));
    System.out.println(truncateDecimal(-9.629, 2));
    System.out.println(truncateDecimal(-9.625, 2));
    System.out.println(truncateDecimal(-9.999, 2));
    System.out.println(truncateDecimal(-9.0, 2));
    System.out.println(truncateDecimal(-3.545555555, 2));

}
</code></pre>

<p>Output:</p>

<pre><code>0.00
9.62
9.62
9.62
9.62
9.99
9.00
3.54
-9.62
-9.62
-9.62
-9.62
-9.99
-9.00
-3.54
</code></pre>
"
13295135,"<p>Work with an Iterator:</p>

<pre><code>public void getWoodSoldRecently(){
Calendar cal = Calendar.getInstance();
cal.add(Calendar.WEEK_OF_YEAR, -2);
Iterator itr = theTrees.iterator();
boolen b = true;
while (itr.hasNext() &amp;&amp; b == true) {
        if(t.getSimpleDateSold().getTime().after(cal.getTime()) &amp;&amp; t.getHasBeenSold()==true){
            treesSold.add(t);
            System.out.println(t.getTreeId() + "" "" + t.getTreeType());
        }
        else{
            System.out.println(""Nothing sold in the last 2 weeks"");
            b = false;
        }
    }
}
</code></pre>
"
26255124,"<pre><code>int total = (157-1)/32 + 1
</code></pre>

<p>or more general</p>

<pre><code>(a-1)/b +1 
</code></pre>
"
13510338,"<p>You have a risk of <code>NullPointerException</code> if your <code>calculateStr()</code> method returns <em>null</em> and then you try to call a method on str.</p>

<p>More generally, avoid having variables with a <em>null</em> value. It stronger for class attributes, by the way.</p>
"
13544790,"<p>C#</p>

<pre><code>int dominant = 0;
        int repeat = 0;
        int? repeatedNr = null;
        int maxLenght = A.Length;
        int halfLenght = A.Length / 2;
        int[] repeations = new int[A.Length];

        for (int i = 0; i &lt; A.Length; i++)
        {
            repeatedNr = A[i];
            for (int j = 0; j &lt; A.Length; j++)
            {
                if (repeatedNr == A[j])
                {
                    repeations[i]++;
                }
            }
        }
        repeatedNr = null;
        for (int i = 0; i &lt; repeations.Length; i++)
        {
            if (repeations[i] &gt; repeat)
            {
                repeat = repeations[i];
                repeatedNr = A[i];
            }
        }
        if (repeat &gt; halfLenght)
            dominant = int.Parse(repeatedNr.ToString());
</code></pre>
"
11240286,"<p>The methods you can declare as static are the ones that don't require instantiation, such as </p>

<pre><code>public class MyClass
{
    public static string InvertText(string text)
    {
        return text.Invert();
    }
}
</code></pre>

<p>Which you can then in return call out in any other class without instanciating that class.</p>

<pre><code>public class MyClassTwo
{
    public void DoSomething()
    {
        var text = ""hello world"";
        Console.Write(MyClass.InvertText(text));
    }
}
</code></pre>

<p>... But that's something you probably already know. It doesn't give you any real benefits per se, other than making it more clear that the method doesn't use any instance variables.</p>

<p>In other words, you can most safely just turn it off completely. If you know you will never use a method in other classes (in which case it should just be private), you don't need it to be static at all. </p>
"
27061581,"<p>First you need to include the JSTL tags :-</p>

<pre><code>&lt;%@ taglib prefix=""c"" uri=""http://java.sun.com/jsp/jstl/core"" %&gt;
&lt;%@ taglib prefix=""fmt"" uri=""http://java.sun.com/jsp/jstl/fmt"" %&gt; 
</code></pre>

<p>at the start of the page </p>

<p></p>
"
27264279,"<p>It would be helpful.</p>

<pre><code>Random randomGenerator = new Random();
int red = randomGenerator.nextInt(255);
int green = randomGenerator.nextInt(255);
int blue = randomGenerator.nextInt(255); 
Color randomColour = new Color(red,green,blue);
</code></pre>
"
27300165,"<p>This code would help:</p>

<pre><code>int [] a={1,2,3,4,5,6,7};
for(int i=a.length-1;i&gt;=0;i--)
  System.out.println(a[i]);
</code></pre>
"
13736145,"<p>You have to remove ""next"" from the collection after it has been process.
with your code, it is stock at ""next"";
For example: if your ""users.values()"" returns a collection i.e</p>

<p>{{john, 1}, {jen, 2}, {peter, 3}}</p>

<p>Your while loops keeps return true and because it keeps returning ""{john,1}"" which is at the fist index.
and so it is an infinite ""loop"". This is how Iterator works. hasNext() will return true if it has an element at the first index and next() will return that element  that hasNext() confirmed it has.</p>

<p>For your loop to progress i think you have to add a line of code or 2. see below:</p>

<pre><code>     Map&lt;String, String&gt; users = new HashMap&lt;String, String&gt;();
    users.put(""1"", ""John"");
    users.put(""2"", ""peter"");
    users.put(""3"", ""uche"");
     Iterator&lt;String&gt; coll = users.values().iterator();
        while(coll.hasNext()){


       String currentUser = coll.next();
       System.out.print(currentUser);

      //coll.remove(currentUser);
    }
</code></pre>

<p>hope this helps..</p>

<p>My former code might not be the ""right"" way to do it but did the job and did not SKIP any second element @ EJP. thanks any way for putting me straight.. :)</p>
"
27728998,"<p>Simply use this math function </p>

<pre><code>System.out.println(Math.min(a,b,c));
</code></pre>

<p>You will get the answer in single line. </p>
"
27872708,"<pre><code>import java.util.HashSet;
</code></pre>

<p>import java.util.LinkedList;
import java.util.Iterator;</p>

<p>public class DeletDuplicateNodeinLinkList {</p>

<pre><code>public static void main(String[] args) {

    LinkedList&lt;Integer&gt; myLL = new LinkedList&lt;Integer&gt;();

    myLL.add(1231);
    myLL.add(12);
    myLL.add(12313);
    myLL.add(123);
    myLL.add(12313);
    myLL.add(1);
    myLL.add(1243242);
    System.out.println(myLL);

    myLL = deleteDups(myLL);
    System.out.println(myLL);
}

private static LinkedList&lt;Integer&gt; deleteDups(LinkedList&lt;Integer&gt; myLL) {
    // TODO Auto-generated method stub

    HashSet&lt;Integer&gt; myHashSet = new HashSet&lt;Integer&gt;();
    Iterator&lt;Integer&gt; itr;
    itr = myLL.iterator();

    while (itr.hasNext()) {
        if (!myHashSet.add(itr.next())) {
            itr.remove();
        }

    }

    return myLL;
}
</code></pre>

<p>}</p>
"
28917986,"<p>Iterate the <code>ArrayList</code> which contains duplicates and add them to the <code>HashSet</code>. When the add method returns false in the <code>HashSet</code> just log the duplicate to the console. </p>
"
13897660,"<pre><code>public class Main {

public static void main(String[] args) {
    boolean cond = true;
    int nothing = 0;

    for (int i = 0; i &lt; 20; i++) {
        int value = 0;
        long time = System.nanoTime();
        for (int count = 0; count &lt; 10000000; count++) {
            if (cond) {
                value = 1 + 2;
            }
        }

        time = System.nanoTime() - time;
        System.out.println(""1) performance: "" + time);
        nothing = value; // prevent java ignoring value

        value = 0;
        time = System.nanoTime();
        for (int count = 0; count &lt; 10000000; count++) {
            if (cond) {
                value = 1 + 2;
            } else {
                value = 1 + 3;
            }
        }
        time = System.nanoTime() - time;
        System.out.println(""2) performance: "" + time);
        nothing = value; // prevent java ignoring value
    }

    nothing = nothing + 1;
}
}
</code></pre>

<p><strong>This is the result:</strong></p>

<pre><code>1) performance: 1797000
2) performance: 3742000
1) performance: 7290000
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 1000
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 1000
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
</code></pre>
"
28961488,"<pre><code>int i = 10 + + 11 - - 12 + + 13 - - 14 + + 15;

System.out.println(i);
</code></pre>
"
13955675,"<p>Have a private constructor to avoid all these checks.</p>

<pre><code>class Singleton {
    private static final Singleton instance = new Singleton();

    private Singleton() {
    }

    public static final Singleton getInstance() {
        return instance;
    }
}
</code></pre>
"
13985831,"<p>use this simple java code I created some tymz ago, this was for adding positive numbers as well as negative numbers:</p>

<pre><code>class SumDigit
{
public static void main(String args[])
{
int sum, i,a,d;
a = Integer.parseInt(args[0]);
sum = 0;
for(i=1;i&lt; =10;i++)
{
d = a%10;
a = a/10;
sum=sum + d;
} 
System.out.println(""Sum of Digit :""+sum);
}
}
</code></pre>
"
11691919,"<pre><code>   public int[] createArray(int size){return new int[size];}
</code></pre>

<p>Well it's a dumb code. Creates array of size you want. It's not expandable once created. For that you need to expand manually by copying to a larger array when your old array is full. Or better, get it done by a collection called <code>ArrayList</code>, which doubles capacity when reaches to some threshold.</p>

<p>If you implement your own expandable array, it will be same as using ArrayList: <a href=""http://docs.oracle.com/javase/6/docs/api/java/util/ArrayList.html"" rel=""nofollow"">see</a></p>

<blockquote>
  <p>Each ArrayList instance has a capacity. The capacity is the size of the array used to store the elements in the list. It is always at least as large as the list size. As elements are added to an ArrayList, its capacity grows automatically. The details of the growth policy are not specified beyond the fact that adding an element has constant amortized time cost.</p>
</blockquote>
"
11764323,"<p>You can try this method after deserializable value </p>

<pre><code>DecimalFormat dec = new DecimalFormat(""###.##"");

System.out.println(dec.format(value));
</code></pre>
"
30206472,"<p>Here is a small trick with linear search: just pass in the node or its position whose previous node you are searching for:</p>

<pre><code>private MyNode findNode(int pos) {
//node will have pos=pos-1
        pos-- = 1; 
        MyNode prevNode = null;
        int count = 0;  
        MyNode p = first.next;  // first = head node, find it however you want.
//this is for circular linked list, you can use first!=last for singly linked list
        while (p != first) { 
            if (count == pos) {
                prevNode = p;
                break;
            }
            p = p.next;
            count++;
        }
        return prevNode;
    }
</code></pre>
"
14213444,"<p>in addition to Fathah solution you can use this code, also note that because its a memory pointer this solution has no performance issues:</p>

<pre><code>int totalRows = 0;
if(rowSet.last()) {
   totalRows = rowSet.getRow();
}
rowSet.beforeFirst();
</code></pre>
"
14401944,"<p>This is my answer in Java: I store a count in seperate array which counts duplicates of each of the entries of the input array and then keeps a pointer to the array position that has the most duplicates. This is the dominator. </p>

<pre><code>private static void dom(int[] a) {
        int position = 0;
        int max = 0;
        int score = 0;
        int counter = 0;
        int[]result = new int[a.length];

        for(int i = 0; i &lt; a.length; i++){
            score = 0;
            for(int c = 0; c &lt; a.length;c++){

                if(a[i] == a[c] &amp;&amp; c != i ){
                    score = score + 1;
                    result[i] = score; 
                    if(result[i] &gt; position){
                        position = i;
                    }
            }

            }
        }


                 //This is just to facilitate the print function and MAX = the number of times that dominator number was found in the list.

        for(int x = 0 ; x &lt; result.length-1; x++){
            if(result[x] &gt; max){
                max = result[x] + 1;
            }

        }




  System.out.println("" The following number is the dominator "" + a[position] +  "" it appears a total of "" + max);





}
</code></pre>
"
14571369,"<p>The same problem for coins(1,5,10,25,50) has one of below solutions.
The solution should satisfy below equation:
1*a + 5*b + 10*c + 25*d + 50*e == cents</p>

<p>public static void countWaysToProduceGivenAmountOfMoney(int cents) {</p>

<pre><code>    for(int a = 0;a&lt;=cents;a++){
        for(int b = 0;b&lt;=cents/5;b++){
            for(int c = 0;c&lt;=cents/10;c++){
                for(int d = 0;d&lt;=cents/25;d++){
                    for(int e = 0;e&lt;=cents/50;e++){
                        if(1*a + 5*b + 10*c + 25*d + 50*e == cents){
                            System.out.println(""1 cents :""+a+"", 5 cents:""+b+"", 10 cents:""+c);
                        }
                    }
                }
            }
        }
    }
}
</code></pre>

<p>This can be modified for any general solutions.</p>
"
14705779,"<pre><code>package com.appspot.x19290;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

public class UnixCheck {
    public static void main(String[] args) {
        UnixCheck s = UnixCheck.S;
        String isUnix = s.unix ? ""is Unix"" : ""not Unix"";
        try {
            System.out.println(isUnix + "", devnull: "" + s.devnull.getPath());
        } catch (NullPointerException e) {
            System.out.println(isUnix + "", devnull: unknown"");
        }
    }

    public static final UnixCheck S = new UnixCheck();
    public static final UnixCheck TEST = new UnixCheck(true);

    public final boolean unix;
    public final File devnull;

    private UnixCheck() {
        this(false);
    }

    private UnixCheck(boolean testing) {
        String path;
        path = testing ? ""/&lt;dev&gt;/&lt;no&gt;&lt;such&gt;&lt;null&gt;&lt;device&gt;"" : ""/dev/null"";
        File devnull = devnullOrNone(path);
        if (devnull == null) {
            this.unix = false;
            path = testing ? ""&lt;no&gt;&lt;such&gt;&lt;null&gt;&lt;device&gt;"" : ""nul"";
            this.devnull = devnullOrNone(path);
        } else {
            this.unix = true;
            this.devnull = devnull;
        }
    }

    private static File devnullOrNone(String name) {
        File file = new File(name);
        if (file.isFile())
            return null;
        if (file.isDirectory())
            return null;
        try {
            FileInputStream i = new FileInputStream(file);
            try {
                i.read();
            } finally {
                i.close();
            }
        } catch (IOException e) {
            return null;
        }
        return file;
    }
}
</code></pre>
"
11952839,"<p>when you launch your application from the console, you do your java -jar (filename) (args)  so if you were to run a program that reads from a file you would do </p>

<p>If your program was called readFile, after you made an executable version of it (I wouldn't explain how to do that part) you have to lauch the program.</p>

<pre><code>java -jar readFile.jar C:/user/Matt/documents/myText.txt
       ^ launch program       ^ args
</code></pre>

<p>the file location would be the args[] to the program.</p>
"
15015602,"<p>from my limited recall of C</p>

<pre><code>for i = (length( array ) -1 ) to 0
  { print( array( i ) ; i-- }
</code></pre>

<p>NOTE: you are counting ELEMENTS not BYTES
ALSO: you subtract 1 from length because you are counting down to ZERO not 1</p>
"
11989348,"<p>You could always do</p>

<pre><code>if (str == null || str.equals(null))
</code></pre>

<p>This will first check the object reference and then check the object itself providing the reference isnt null.</p>
"
15097024,"<p>Use oracle.jdbc.OracleDriver, not oracle.jdbc.driver.OracleDriver.  You do not need to register it if the driver jar file is in the ""WEB-INF\lib"" directory, if you are using Tomcat.  Save this as test.jsp and put it in your web directory, and redeploy your web app folder in Tomcat manager:</p>

<pre><code>&lt;%@ page import=""java.sql.*"" %&gt;

&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Simple JSP Oracle Test&lt;/TITLE&gt;
&lt;/HEAD&gt;&lt;BODY&gt;
&lt;%
Connection conn = null;
try {
    Class.forName(""oracle.jdbc.OracleDriver"");
    conn = DriverManager.getConnection(""jdbc:oracle:thin:@XXX.XXX.XXX.XXX:XXXX:dbName"", ""user"", ""password"");
    Statement stmt = conn.createStatement();
    out.println(""Connection established!"");
}
catch (Exception ex)
{
    out.println(""Exception: "" + ex.getMessage() + """");

}
finally
{
    if (conn != null) {
        try {
            conn.close();   
        }
        catch (Exception ignored) {
            // ignore
        }
    }
}

%&gt;
</code></pre>
"
15342485,"<p>Better understanding of why this test does not fail can come from understanding of what actually happens when constructor is invoked. Java is a stack-based language. <code>TestClass.f = new TestClass();</code> consists of four action. First <code>new</code> instruction is called, its like malloc in C/C++, it allocates memory and places a reference to it on the top of the stack. Then reference is duplicated for invoking a constructor. Constructor in fact is like any other instance method, its invoked with the duplicated reference. Only after that reference is stored in the method frame or in the instance field and becomes accessible from anywhere else. Before the last step reference to the object is present only on the top of creating thread's stack and no body else can see it. In fact there is no difference what kind of field you are working with, both will be initialized if <code>TestClass.f != null</code>. You can read x and y fields from different objects, but this will not result in <code>y = 0</code>. For more information you should see <a href=""http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.10.2.4"" rel=""nofollow"">JVM Specification</a> and <a href=""http://en.wikipedia.org/wiki/Stack-oriented_programming_language"" rel=""nofollow"">Stack-oriented programming language</a> articles.</p>

<p><strong>UPD</strong>: One important thing I forgot to mention. By java memory there is no way to see partially initialized object. If you do not do self publications inside constructor, sure.</p>

<p><a href=""http://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html#jls-17.5"" rel=""nofollow"">JLS</a>:</p>

<blockquote>
  <p>An object is considered to be completely initialized when its
  constructor finishes. A thread that can only see a reference to an
  object after that object has been completely initialized is guaranteed
  to see the correctly initialized values for that object's final
  fields.</p>
</blockquote>

<p><a href=""http://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html#jls-17.4.5"" rel=""nofollow"">JLS</a>:</p>

<blockquote>
  <p>There is a happens-before edge from the end of a constructor of an
  object to the start of a finalizer for that object.</p>
</blockquote>

<p><a href=""http://jeremymanson.blogspot.ru/2010/01/garbage-collection-references.html"" rel=""nofollow"">Broader explanation of this point of view</a>:</p>

<blockquote>
  <p>It turns out that the end of an object's constructor happens-before
  the execution of its finalize method. In practice, what this means is
  that any writes that occur in the constructor must be finished and
  visible to any reads of the same variable in the finalizer, just as if
  those variables were volatile.</p>
</blockquote>

<p><strong>UPD</strong>: That was the theory, let's turn to practice.</p>

<p>Consider the following code, with simple non-final variables:</p>

<pre><code>public class Test {

    int myVariable1;
    int myVariable2;

    Test() {
        myVariable1 = 32;
        myVariable2 = 64;
    }

    public static void main(String args[]) throws Exception {
        Test t = new Test();
        System.out.println(t.myVariable1 + t.myVariable2);
    }
}
</code></pre>

<p>The following command displays machine instructions generated by java, how to use it you can find in a <a href=""https://wikis.oracle.com/display/HotSpotInternals/PrintAssembly"" rel=""nofollow"">wiki</a>:</p>

<blockquote>
  <p>java.exe -XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly -Xcomp
  -XX:PrintAssemblyOptions=hsdis-print-bytes -XX:CompileCommand=print,*Test.main Test</p>
</blockquote>

<p>It's output:</p>

<pre><code>...
0x0263885d: movl   $0x20,0x8(%eax)    ;...c7400820 000000
                                    ;*putfield myVariable1
                                    ; - Test::&lt;init&gt;@7 (line 12)
                                    ; - Test::main@4 (line 17)
0x02638864: movl   $0x40,0xc(%eax)    ;...c7400c40 000000
                                    ;*putfield myVariable2
                                    ; - Test::&lt;init&gt;@13 (line 13)
                                    ; - Test::main@4 (line 17)
0x0263886b: nopl   0x0(%eax,%eax,1)   ;...0f1f4400 00
...
</code></pre>

<p>Field assignments are followed by <a href=""http://en.wikipedia.org/wiki/NOP"" rel=""nofollow"">NOPL</a> instruction, one of it's purposes is to <a href=""http://programmers.stackexchange.com/a/165269"">prevent instruction reordering</a>.</p>

<p><strong>Why does this happen?</strong> According to specification finalization happens after constructor returns. So GC thread cant see a partially initialized object. On a CPU level GC thread is not distinguished from any other thread. If such guaranties are provided to GC, than they are provided to any other thread. This is the most obvious solution to such restriction.</p>

<p><strong>Results:</strong></p>

<p><strong>1) Constructor is not synchronized, synchronization is done by <a href=""http://www.infoq.com/articles/memory_barriers_jvm_concurrency"" rel=""nofollow"">other instructions</a>.</strong> </p>

<p><strong>2) Assignment to object's reference cant happen before constructor returns.</strong></p>
"
15354657,"<p>What if one changes the scenario into</p>

<pre><code>public class TestClass {

    final int x;
    static TestClass f;

    public TestClass() {
        x = 3;
    }

    int y = 4;

    // etc...

}
</code></pre>

<p>?</p>
"
15403825,"<p>What about you modified the constructor to do this:</p>

<pre><code>public TestClass() {
 Thread.sleep(300);
   x = 3;
   y = 4;
}
</code></pre>

<p>I am not an expert on JLF finals and initializers, but common sense tells me this should delay setting x long enough for writers to register another value?</p>
"
15443164,"<pre><code>import java.util.Scanner;


public class dmar {

public static void main ( String  []  srgs){

    Scanner dmar=new Scanner(System.in);{

        {

System.out.println ( ""inter number of x  plz"") ;

double x=dmar.nextDouble();

System.out.println ( ""inter number of y plz"") ;{


double y=dmar.nextDouble();

System.out.println ( ""inter number of t  plz"") ;
double t=dmar.nextDouble();

System.out.println ( ""inter number of f  plz"") ;
double f=dmar.nextDouble();

{

{
if (x&gt;y);

System.out.println(""x biger than y"");


if (x&gt;t);
System.out.println(""x biger than t"");

 if (x&gt;f);

System.out.println(""x biger than f"");


 if (y&gt;x);
System.out.println(""y biger than x"");



if (y&gt;t);
System.out.println(""y biger than t"");

 if (y&gt;f);
System.out.println(""y biger than f"");

if (t&gt;x&amp;t&gt;f&amp;t&gt;y);
System.out.println(""t biger than x"");

if (t&gt;y);
System.out.println(""t biger than y"");

if (t&gt;f);
System.out.println(""t biger than f"");

 if (f&gt;x);
System.out.println(""f biger than x"");


if (f&gt;y);
System.out.println(""f biger than y"");


         if (f&gt;t);
System.out.println(""f biger than t"");

}
</code></pre>
"
15460131,"<p>What's going on in this thread? Why should that code fail in the first place?</p>

<p>You launch 1000s of threads that will each do the following:</p>

<pre><code>TestClass.f = new TestClass();
</code></pre>

<p>What that does, in order:</p>

<ol>
<li>evaluate <code>TestClass.f</code> to find out its memory location</li>
<li>evaluate <code>new TestClass()</code>: this creates a new instance of TestClass, whose constructor will initialize both <code>x</code> and <code>y</code></li>
<li>assign the right-hand value to the left-hand memory location</li>
</ol>

<p><strong>An assignment is an atomic operation which is always performed after the right-hand value has been generated</strong>. <a href=""http://docs.oracle.com/javase/specs/jls/se5.0/html/expressions.html#15.26.1"" rel=""nofollow"">Here is a citation</a> from the Java language spec (see the first bulleted point) but it really applies to any sane language.</p>

<p>This means that while the <code>TestClass()</code> constructor is taking its time to do its job, and <code>x</code> and <code>y</code> could conceivably still be zero, the reference to the partially initialized <code>TestClass</code> object only lives in that thread's stack, or CPU registers, and has not been written to <code>TestClass.f</code></p>

<p>Therefore <code>TestClass.f</code> will always contain:</p>

<ul>
<li>either <code>null</code>, at the start of your program, before anything else is assigned to it,</li>
<li>or a fully initialized <code>TestClass</code> instance.</li>
</ul>
"
15636782,"<p>Finally Solved. I tried everything to get authenticated at my exchange server, but no success. Use the code below:</p>

<pre><code>Properties props = (Properties)System.getProperties().clone();
props.put(""mail.smtp.host"", host);
props.setProperty(""mail.smtp.port"", ""587"");
props.put(""mail.smtp.auth"", true);

//Bypass the SSL authentication
props.put(""mail.smtp.ssl.enable"", false);
props.put(""mail.smtp.starttls.enable"", false);
</code></pre>
"
12192608,"<p>Try this:</p>

<pre><code>/**
 * @(#)demo1.java
 *
 *
 * @author 
 * @version 1.00 2012/8/30
 */

import java.util.*;

public class demo1 
{
    Scanner s=new Scanner(System.in);

    String str;
    int key;

    void getdata()
    {
        System.out.println (""plase enter a string"");
        str=s.next();
        System.out.println (""plase enter a key"");
        key=s.nextInt();
    }

    void display()
    {
        char a;
        int j;
        for ( int i = 0; i &lt; str.length(); ++i )
        {

            char c = str.charAt( i );
            j = (int) c + key;
            a= (char) j;

            System.out.print(a);  
        }

        public static void main(String[] args)
        {
            demo1 obj=new demo1();
            obj.getdata();
            obj.display();
        }
    }
}
</code></pre>
"
15778990,"<p>You can try:</p>

<pre><code>String beforeAndAfter = ""%"" + yourVariable + ""%"";
</code></pre>
"
12284119,"<pre><code>Class A 
{
 $x;
 function method1()
  {
   $time = microtime(true);
  }
 sleep($time + 30);
 task()//want to run this after (x+30) time
}
</code></pre>
"
16119406,"<p>Try this code. This will remove all the rows from JTable. </p>

<pre><code>DefaultTableModel model=new DefaulTableModel(rows,cols);
JTable table=new JTable(model);
for(int i=0;i&lt;model.getRowCount();i=i+0)
{
 model.removeRow(0);
 revalidate();
 }
</code></pre>
"
12364931,"<p>You should use integers as input if you convert them with:</p>

<pre><code>    String CalculateCheckSum( Integer[] bytes ){
        Integer CheckSum = 0, i = 0;
        for( i = 0; i &lt; bytes.length; i++ ){
            CheckSum += bytes[i];
        }
        return Integer.toHexString(CheckSum);
    }
</code></pre>

<p>this will return the expected 0xCE4 hope this fixed your problem</p>
"
16215574,"<pre><code>import java.util.*;
class Anagrams 
{
    public static void main(String[] args) 
    {
        System.out.println(""Enter the two words"");
        Scanner scan = new Scanner(System.in);
        String word1 = scan.next();
        String word2=scan.next();

        StringBuilder sb1= new StringBuilder(word1);
        StringBuilder sb2= new StringBuilder(word2);
        int count=0;
        System.out.println(""length ! ""+sb1.length());
        System.out.println(""Length ! ""+sb2.length());
        if(sb1.length()==sb2.length()){
            for(int i=0;i&lt;sb1.length();i++){
                for(int k=0;k&lt;sb2.length();k++){
                    if(sb1.charAt(i)==sb2.charAt(k)){
                        sb2.deleteCharAt(k);
                        count++;
                        System.out.println(""Count is ""+count);
                        break;
                    }
                }
            }

            if(count==sb1.length()){

                System.out.println(""Anagrams!"");
            }
            else{
                System.out.println(""Not Anagrams"");
            }
        }
        else{
            System.out.println(""Not equal in length"");
        }
    }
}
</code></pre>
"
16279142,"<p>I opine it may be caused as a result in class/constructor access specifier mismatch. I just resolved a similar issue where the class was declared with a package access specifier but its constructor was declared public.</p>

<p>Simply making the constructor also have a package access specifier resolved the issue. </p>

<pre><code>class Ngram{

    public Ngram(String str, int count){
        ngram = str;
        freq = count;
    }

    String ngram;
    int freq;
}
</code></pre>
"
12541284,"<p>First off, posting the error given by eclipse would be helpful.</p>

<p>But in any case, your syntax errors are stemming from the fact that you aren't defining the datatype of your variables, such as x, z, s, etc.</p>

<p>For example,</p>

<pre><code>int x = a;
int z = b;
</code></pre>

<p>etc.</p>
"
17062396,"<h2>Batch insert using statement</h2>

<pre><code>int a= 100;
            try {
                        for (int i = 0; i &lt; 10; i++) {
                            String insert = ""insert into usermaster""
                                    + ""(""
                                    + ""userid""
                                    + "")""
                                    + ""values(""
                                    + ""'"" + a + ""'""
                                    + "");"";
                            statement.addBatch(insert);
                            System.out.println(insert);
                            a++;
                        }
                      dbConnection.commit();
                    } catch (SQLException e) {
                        System.out.println("" Insert Failed"");
                        System.out.println(e.getMessage());
                    } finally {

                        if (statement != null) {
                            statement.close();
                        }
                        if (dbConnection != null) {
                            dbConnection.close();
                        }
                    }
</code></pre>
"
12753795,"<p>Try this:</p>

<pre><code>Pattern p = Pattern.compile(
    ""^/exec\\?(?:(?:(?!\\1)command=shutdown()|(?!command=)\\w+(?:=[^&amp;]+)?)(?:&amp;|$))+$\\1"");
</code></pre>

<p>Or a little more readably:</p>

<pre><code>^/exec\?
(?:
  (?:
    (?!\1)command=shutdown()
    |
    (?!command=)\w+(?:=[^&amp;]+)?
  )
  (?:&amp;|$)
)+$
\1
</code></pre>

<p>The main body of the regex is an alternation that matches either a shutdown command or a parameter whose name is not <code>command</code>.  If it does match a shutdown command, the empty group in that branch ""captures"" an empty string.  It doesn't need to consume anything, because we're only using it as a checkbox, confirming <em>en passant</em> that one of the parameters was a shutdown command.</p>

<p>The negative lookahead - <code>(?!\1)</code> - prevents it from matching two or more shutdown commands.  I don't know if that's really necessary, but it's a good opportunity to demonstrate (1) how to negate a ""back-assertion"", and (2) that a backreference can appear before the group it refers to in certain circumstances (what's known as a <em>forward reference</em>).</p>

<p>When the whole URL has been consumed, the backreference (<code>\1</code>) acts like a zero-width assertion.  If one of the parameters was <code>command=shutdown</code>, the backreference will succeed.  Otherwise it will fail even though it's only trying to match an empty string,  because the group it refers to didn't participate in the match.</p>

<p>But I have to concur with the other responders: when your regexes get this complicated, you should be thinking seriously about switching to a different approach.</p>

<hr>

<p><strong>EDIT:</strong>  It works for me.  Here's the <strong><a href=""http://ideone.com/tJddy"" rel=""nofollow"">demo</a></strong>.</p>
"
17297970,"<p>another way would be the separate the prime method from from main (based on first solution) note: this is without the text formatting: </p>

<pre><code>public class Primes
{
    public static boolean isPrime (int x)
    {
        for (int i = 2; i &lt;= Math.sqrt (x); i++)
        {
            if (x % i == 0)
            {
                return false;
            }
        }
        return true;
    }

    public static void main (String[] args)
    {
    new Primes().findprimes(100);  // &lt;&lt;--here you can choose whatever k prime
    }

    public void findprimes (int k){
    for (int i = 2, primesfound = 0; primesfound &lt; k+1 ; i++)
    {
        if (isPrime (i))
        {
            primesfound++;
            System.out.print (i + "" "");
        }
    }   
  }
}
</code></pre>
"
17318391,"<pre><code>class Program
{
    static void Main(string[] args)
    {
        int []A= new int[] {3,6,2,6};
        int[] B = new int[A.Length];
        Program obj = new Program();
        obj.ABC(A,B);

    }

    public int ABC(int []A, int []B)
    { 
        int i,j;

        int n= A.Length;
        for (j=0; j&lt;n ;j++)
        {
            int count = 1;
            for (i = 0; i &lt; n; i++)
            {
                if ((A[j]== A[i] &amp;&amp; i!=j))
                {
                    count++;

                }

             }
           int finalCount = count;
            B[j] = finalCount;// to store the no of times a number is repeated 

        }
       // int finalCount = count / 2;
        int finalCount1 = B.Max();// see which number occurred max times
        if (finalCount1 &gt; (n / 2))
        { Console.WriteLine(finalCount1); Console.ReadLine(); }

        else
        { Console.WriteLine(""no number found""); Console.ReadLine(); }
        return -1;
    }
}
</code></pre>
"
12824750,"<p>Use <a href=""http://tinyurl.com/8err8ej"" rel=""nofollow""><code>Collections#sort</code></a> and a <code>Comparator</code>:</p>

<pre><code>List&lt;Item&gt; lstItem = new ArrayList&lt;Item&gt;();
//fill the data...
Comparator&lt;Item&gt; comparator = new Comparator&lt;Item&gt;() {
    public int compareTo(Item i1, Item i2) {
        return i1.count.compareTo(i2.count);
    }
};
Collections.sort(lstItem, comparator);
</code></pre>
"
17637848,"<pre><code>//%%%%%%%%%%%%%%%%%%%%%% HEX to ASCII %%%%%%%%%%%%%%%%%%%%%%
public String convertHexToString(String hex){

 String ascii="""";
 String str;

 // Convert hex string to ""even"" length
 int rmd,length;
 length=hex.length();
 rmd =length % 2;
 if(rmd==1)
 hex = ""0""+hex;

  // split into two characters
  for( int i=0; i&lt;hex.length()-1; i+=2 ){

      //split the hex into pairs
      String pair = hex.substring(i, (i + 2));
      //convert hex to decimal
      int dec = Integer.parseInt(pair, 16);
      str=CheckCode(dec);
      ascii=ascii+"" ""+str;
  }
  return ascii;
}

public String CheckCode(int dec){
  String str;

          //convert the decimal to character
        str = Character.toString((char) dec);

      if(dec&lt;32 || dec&gt;126 &amp;&amp; dec&lt;161)
             str=""n/a"";  
  return str;
}
</code></pre>
"
17667877,"<pre><code>class myFileReaderThatStarts with arguments
{

 class MissingArgumentException extends Exception{      
      MissingArgumentException(String s)
  {
     super(s);
  }

   }    
public static void main(String[] args) throws MissingArgumentException
{
//You can test args array for value 
if(args.length&gt;0)
{
    // do something with args[0]
}
else
{
// default in a path 
// or 
   throw new MissingArgumentException(""You need to start this program with a path"");
}
}
</code></pre>
"
17867504,"<p>An abstract Interface is not as redundant as everyone seems to be saying, in theory at least. </p>

<p>An Interface can be extended, just as a Class can.  If you design an Interface hierarchy for your application you may well have a 'Base' Interface, you extend other Interfaces from but
do not want as an Object in itself.</p>

<p>Example:</p>

<pre><code>public abstract interface MyBaseInterface {
    public String getName();
}

public interface MyBoat extends MyBaseInterface {
    public String getMastSize();
}

public interface MyDog extends MyBaseInterface {
    public long tinsOfFoodPerDay();
}
</code></pre>

<p>You do not want a Class to implement the MyBaseInterface, only the other two, MMyDog and MyBoat, but both interfaces share the MyBaseInterface interface, so have a 'name' property.</p>

<p>I know its kinda academic, but I thought some might find it interesting. :-)</p>

<p>It is really just a 'marker' in this case, to signal to implementors of the interface it
wasn't designed to be implemented on its own.  I should point out a compiler (At least the sun/ora 1.6 I tried it with) compiles a class that implements an abstract interface.</p>
"
18063674,"<p>Casting is necessary to tell that you are calling a child and not a parent method. So it's ever downward. However if the method is already defined in the parent class and overriden in the child class, you don't any cast. Here an example:</p>

<pre><code>class Parent{
   void method(){ System.out.print(""this is the parent""); }
}

class Child extends Parent{
   @override
   void method(){ System.out.print(""this is the child""); }
}
...
Parent o = new Child();
o.method();
((Child)o).method();  
</code></pre>

<p>The two method call will both print : ""this is the child"". </p>
"
12930190,"<p>Use:</p>

<pre><code>cal.add(Calendar.DAY_OF_MONTH, -5)
</code></pre>

<p>EDIT: sorry. <code>DAY_OF_MONTH</code> is a synonym to <code>DATE</code>. Instead of <code>1</code> use <code>Calendar.JANUARY</code>.</p>
"
12930375,"<p>This a segment of code that is working on my pc. first you have to get the calendar instance the perform your calculation.</p>

<pre><code>            Calendar cal = Calendar.getInstance();
     System.out.println(""Today : "" + cal.getTime());
    // Subtract 300 days from the calendar
    cal.add(Calendar.DATE, -300);
    System.out.println(""300 days ago: "" + cal.getTime());
</code></pre>

<p>This is the output that you will get:<br/></p>

<pre><code>    Today : Wed Oct 17 10:41:23 EET 2012
    300 days ago: Thu Dec 22 10:41:23 EET 2011
</code></pre>
"
18391151,"<pre><code>//solve(""5+3""), solve(""10-4"")    
public int solve(String str)
    {
        int len = str.length();
        int i=0;
        String str1 = """", str2 = """";
        char op;
        int num1 = 0, num2 = 0, res=0;
        for(i=0; i&lt;len; i++)
        {
            if(str.charAt(i)=='+' || str.charAt(i)=='-')
                break;
            str1 = str1 + str.charAt(i);
        }

        op = str.charAt(i);
        i++;

        while(i&lt;len)
        {
            str2 = str2 + str.charAt(i);
            i++;
        }
        num1 = Integer.parseInt(str1);
        num2 = Integer.parseInt(str2);

        if(op=='+')
            res = num1+num2;
        else if(op=='-')
            res = num1-num2;

        return res;
    }
</code></pre>
"
18651876,"<p>This is enough:</p>

<pre><code>int[] d = new int[list.size()];

for (int i = 0; i &lt; list.size(); i++) {
    d[i] = list.get(i);
}
</code></pre>
"
18757563,"<p>In Ruby you can do something like</p>

<pre><code>def dominant(a)
  hash = {}
  0.upto(a.length) do |index|
    element = a[index]
    hash[element] = (hash[element] ? hash[element] + 1 : 1)
  end

  res = hash.find{|k,v| v &gt; a.length / 2}.first rescue nil
  res ||= -1
  return res
end
</code></pre>
"
13112409,"<p>This answer is related to <strong>Mountain Lion</strong> and not Lion. I needed to do this for the AWS Command Line Tools. According to <a href=""http://docs.amazonwebservices.com/AWSEC2/latest/UserGuide/SettingUp_CommandLine.html#java-runtime"" rel=""nofollow"">the AWS docs</a>, running <code>which java</code> returns <code>/usr/bin/java</code>.</p>

<p>So, I set <code>JAVA_HOME=/usr</code> in my <code>.bashrc</code>.</p>

<p>Apparently, <code>/usr/bin/java</code> is a symbolic link to <code>/System/Library/Frameworks/JavaVM.framework/Versions/Current/Commands/java</code> which makes it all work.</p>

<p><strong>Update</strong></p>

<p>As mentioned in the comment below, this <code>JAVA_HOME</code> value is not an ideal solution when the <code>JAVA_HOME</code> environment variable is to be used by things other than the AWS Command Line Tools. It works fine for the AWS Command Line Tools, though, as given in their docs.</p>
"
13153772,"<p>the <code>\</code> is not just some character in java.  </p>

<p>it has its significance, some characters when preceeded by <code>\</code> have a special meaning, </p>

<p>refer <a href=""http://docs.oracle.com/javase/tutorial/java/data/characters.html"" rel=""nofollow"">here</a>  section <code>escape sequence</code> for details</p>

<p>Thus if you want to use just <code>\</code> in your code, there is an implementation <code>\\</code> for it. </p>

<p>So replace </p>

<pre><code>path=path.replaceAll(""\"",""/"") 
</code></pre>

<p>with </p>

<pre><code>path=path.replaceAll(""\\"",""/"") 
</code></pre>

<p>And this will fail during execution giving you a <code>PatternSyntaxException</code>, because the first String is a regular expression So based on @jlordo answer , this is the way to go</p>

<pre><code>path = path.replaceAll(""\\\\"", ""/"");
</code></pre>
"
13154663,"<pre><code>   String s=""m/j/""; 
   String strep=""\\\\"";
   String result=s.replaceAll(""/"", strep);
    System.out.println(result);
</code></pre>
"
19414112,"<pre><code>public static void main(String[] args){   
    System.out.println(""=""+evaluate(args[2]));

}
public static String[] symbols = new String[]{""\\-"",""\\+"",""\\/"",""\\*""};

public static Integer evaluate(String exp){
    System.out.print(exp);
    exp = exp.trim(); 
    boolean isint = true;
    for(int i = 0; i&lt;exp.length() &amp;&amp; isint;i++){
        if(exp.charAt(i)&gt;'9' || exp.charAt(i) &lt;'0'){
            isint = false;
        }
    }
    if(isint) return Integer.parseInt(exp);

    for(String symbol:symbols){
        String[] split = exp.split(symbol);
        if(split.length&gt;1){
            int ev = evaluate(split[0]);
            for(int i = 1;i&lt;split.length;i++){
                System.out.print(symbol);
                int val = evaluate(split[i]);
                if(""\\*"".equals(symbol)) ev*=val;
                if(""\\/"".equals(symbol)) ev/=val;
                if(""\\+"".equals(symbol)) ev+=val;
                if(""\\-"".equals(symbol)) ev-=val;
            }
            return ev;
        }
    }
    return null;
}
</code></pre>
"
19614778,"<p>Change <code>/usr/local/Cellar/scala/2.9.2</code> to <code>/usr/local/Cellar/scala/</code> and you are good to go.</p>
"
13251449,"<blockquote>
  <p>should you catch unchecked exceptions?</p>
</blockquote>

<p>Yes and No. Depends on what exception is thrown. </p>

<blockquote>
  <p>Are unchecked exceptions ideally programming errors that you don't check for?</p>
</blockquote>

<p>You can write a <code>catch</code> block to catch unchecked exception but <strong>again depends whether you should</strong>. If you do then it's possible that a bug remain unsolved for a long time and by the time it is discovered it's size is also changed.</p>

<blockquote>
  <p>Should they just bubble up from your application?</p>
</blockquote>

<p>If they occur, try to solve their cause (if it' spossible). Don't <code>catch</code> them always as Hard and Fast rule.</p>
"
13331682,"<p>Java is a case sensitive language, the term <code>Void Class</code> differ from <code>void class</code>, and from <code>Void class</code>, and from <code>void Class</code>. And it was not clear what is asked here until the question is edited several times. The third is correct as well as <code>Class&lt;Void&gt;</code>.</p>

<p>But talking about <em>Void Class</em> without context is absurd, instead use <code>abstract</code>. <code>void</code> is a return type of the method that returns nothing. </p>
"
20694360,"<p>I guess the following solution has O(n) complexity, let me know if someone differs. </p>

<p>import java.util.HashMap;
import java.util.Scanner;</p>

<p>public class Anagrams {</p>

<pre><code>static boolean isAnagram(String word1, String word2)
{
    if(word1.length() != word2.length())
    {
        return false;
    }
    int flag=0;
    HashMap&lt;Character,Integer&gt; table = new HashMap&lt;Character,Integer&gt;();
    for(int i=0; i&lt; word1.length();i++)
    {
        table.put(word1.charAt(i),1);
    }

    for(int i=0; i&lt; word2.length();i++)
    {
        if(table.containsKey(word2.charAt(i)))
        {
            continue;
        }
        else
        {
            flag=1;
            break;
        }   
    }

    if(flag==0)
        return true;
    else
        return false;



}

public static void main(String[] args) {
    System.out.println(""Enter your string"");
    Scanner sc= new Scanner(System.in);
    String word1= sc.nextLine();
    String word2=sc.nextLine();

     boolean result = isAnagram(word1,word2);
     if(result==true)
     System.out.println(""The words are Anagrams"");
     else
         System.out.println(""The words are not Anagrams"");   

}
</code></pre>

<p>}</p>
"
20717454,"<p>Abstract class without abstract method means you can create object of that abstract class.
See my Example.</p>

<pre><code>abstract class Example{
void display(){
 System.out.println(""Hi I am Abstract Class."");
}
}
class ExampleDemo 
{
public static void main(String[] args) 
{
Example ob = new Example(){};
ob.display();
}
}
</code></pre>

<p>If you write one abstract method inside abstract class then it will not compile.
Which means if you create abstract class without  abstract method then you can create Object of that Abstract Class.</p>
"
21327842,"<p>public class NumberToKhmerWords</p>

<p>{</p>

<pre><code>  static public boolean HelperConvertNumberToText(int num, String[] result)

  {

      String [] strones = {

              ""មួយ"", ""ពីរ"", ""បី"", ""បួន"", ""ប្រាំ"", ""ប្រាំមួយ"", ""ប្រាំពីរ"", ""ប្រាំបី"",

              ""ប្រាំបួន"", ""ដប់"", ""ដប់មួយ"", ""ដប់ពីរ"", ""ដប់បី"", ""ដប់បួន"",

              ""ដប់ប្រាំ"", ""ដប់ប្រាំមួយ"", ""ដប់ប្រាំពីរ"", ""ដប់ប្រាំបី"", ""ដប់ប្រាំបួន"",

            };



      String [] strtens = {

          ""ដប់"", ""ម្ភៃ"", ""សាមសឺប"", ""សែសឺប"", ""ហាសឺប"", ""ហុកសឺប"",

          ""ចិតសឺប"", ""ប៉ែតសឺប"", ""កៅសឺប"", ""មួយរយ""

      };



      result[0] = """";

      int single, tens, hundreds;



      if(num &gt; 1000)

          return false;



      hundreds = num / 100;

      num = num - hundreds * 100;

      if( num &lt; 20)

      {

          tens = 0; // special case

          single = num;

      }

      else

      {

          tens = num / 10;

          num = num - tens * 10;

          single = num;

      }



      if(hundreds &gt; 0)

      {

         result[0] += strones[hundreds-1];

         result[0] += ""រយ"";

      }

      if(tens &gt; 0)

      {

         result[0] += strtens[tens - 1];

         result[0] += """";

      }

      if(single &gt; 0)

      {

         result[0] += strones[single - 1];

         result[0] += """";

      }

      return true;

  }



  static public boolean ConvertNumberToText(int num, String[] result)

  {

      String tempString[] = new String[1];

      tempString[0] = """";

      int thousands;

      int temp;

      result[0] = """";

      if(num &lt; 0 || num &gt; 100000)

      {

          System.out.println(num + "" \tNot Supported"");

          return false;

      }



      if( num == 0)

      {

         System.out.println(""សូន្យ"");

         return false;

      }



      if(num &lt; 1000)

      {  

          HelperConvertNumberToText(num, tempString);

          result[0] += tempString[0];

      }

      else

      {

          thousands = num / 1000;

          temp = num - thousands * 1000;

          HelperConvertNumberToText(thousands, tempString);

          result[0] += tempString[0];

          result[0] += ""ពាន់"";             

          HelperConvertNumberToText(temp, tempString);

          result[0] += tempString[0];

      }

      return true;

  }
public static String[] convertToString(double value){
      BigDecimal bd = new BigDecimal(Double.toString(value));
      String [] rawSplit = bd.toPlainString().split(""\\."");
      return rawSplit;
  }
public static String getDoubleToword(double value) {
    String afterPoint = """";
    String strWord = """";
    String[] strArray = new String[1];
    strArray = NumberToKhmerWords.convertToString(value);
    String[] result = new String[1];
    result[0] = """";
    String zero = """";
    if (!strArray[1].equals(""0"")) {
        if (NumberToKhmerWords.ConvertNumberToText(
                Integer.parseInt(strArray[1].substring(0, 2)), result)) {
            if (Integer.parseInt(strArray[1].substring(0, 1)) == 0) {
                zero = ""សូន្យ"";
            }
            afterPoint = ""ក្បៀស​"" + zero + result[0];
        }

    }
    if (NumberToKhmerWords.ConvertNumberToText(Integer.parseInt(strArray[0]),
            result)) {
        strWord = result[0] + afterPoint;
    }
    return strWord;
}
</code></pre>

<p>}</p>

<p>// Convert double to khmer word  EX: NumberToKhmerWords.getDoubleToword(39.07) = សាមសឹបប្រាំបួនក្បៀសសូន្យប្រាំពីរ</p>
"
13500929,"<p>TreeMap because in HashMap size of inner array can only increase </p>

<pre><code>public class Locker&lt;T&gt; {
    private final Object lock = new Object();
    private final Map&lt;T, Value&gt; map = new TreeMap&lt;T, Value&gt;();

    public Value&lt;T&gt; lock(T id) {
        Value r;
        synchronized (lock) {
            if (!map.containsKey(id)) {
                Value value = new Value();
                value.id = id;
                value.count = 0;
                value.lock = new ReentrantLock();
                map.put(id, value);
            }
            r = map.get(id);
            r.count++;
        }
        r.lock.lock();
        return r;
    }

    public void unlock(Value&lt;T&gt; r) {
        r.lock.unlock();
        synchronized (lock) {
            r.count--;
            if (r.count == 0)
                map.remove(r.id);
        }
    }

    public static class Value&lt;T&gt; {

        private Lock lock;
        private long count;
        private T id;
    }
}
</code></pre>
"
22068267,"<p>For reading content of the table from pdf file,you have to do only just convert the pdf file into a text file by using any API(I have use PdfTextExtracter.getTextFromPage() of iText) and then read that txt file by your java program..now after reading it the major task is done.. you have to filter the data of your need. you can do it by continuously using split method of String class until you find record of your intrest.. here is my code by which I have extract part of record by an PDF file and write it into a .CSV file.. Url of PDF file is..<a href=""http://www.cea.nic.in/reports/monthly/generation_rep/actual/jan13/opm_02.pdf"" rel=""nofollow"">http://www.cea.nic.in/reports/monthly/generation_rep/actual/jan13/opm_02.pdf</a></p>

<p>Code:-</p>

<pre><code>public static void genrateCsvMonth_Region(String pdfpath, String csvpath) {
        try {
            String line = null;
            // Appending Header in CSV file...
            BufferedWriter writer1 = new BufferedWriter(new FileWriter(csvpath,
                    true));
            writer1.close();
            // Checking whether file is empty or not..
            BufferedReader br = new BufferedReader(new FileReader(csvpath));

            if ((line = br.readLine()) == null) {
                BufferedWriter writer = new BufferedWriter(new FileWriter(
                        csvpath, true));
                writer.append(""REGION,"");
                writer.append(""YEAR,"");
                writer.append(""MONTH,"");
                writer.append(""THERMAL,"");
                writer.append(""NUCLEAR,"");
                writer.append(""HYDRO,"");
                writer.append(""TOTAL\n"");
                writer.close();
            }
            // Reading the pdf file..
            PdfReader reader = new PdfReader(pdfpath);
            BufferedWriter writer = new BufferedWriter(new FileWriter(csvpath,
                    true));

            // Extracting records from page into String..
            String page = PdfTextExtractor.getTextFromPage(reader, 1);
            // Extracting month and Year from String..
            String period1[] = page.split(""PEROID"");
            String period2[] = period1[0].split("":"");
            String month[] = period2[1].split(""-"");
            String period3[] = month[1].split(""ENERGY"");
            String year[] = period3[0].split(""VIS"");

            // Extracting Northen region
            String northen[] = page.split(""NORTHEN REGION"");
            String nthermal1[] = northen[0].split(""THERMAL"");
            String nthermal2[] = nthermal1[1].split("" "");

            String nnuclear1[] = northen[0].split(""NUCLEAR"");
            String nnuclear2[] = nnuclear1[1].split("" "");

            String nhydro1[] = northen[0].split(""HYDRO"");
            String nhydro2[] = nhydro1[1].split("" "");

            String ntotal1[] = northen[0].split(""TOTAL"");
            String ntotal2[] = ntotal1[1].split("" "");

            // Appending filtered data into CSV file..
            writer.append(""NORTHEN"" + "","");
            writer.append(year[0] + "","");
            writer.append(month[0] + "","");
            writer.append(nthermal2[4] + "","");
            writer.append(nnuclear2[4] + "","");
            writer.append(nhydro2[4] + "","");
            writer.append(ntotal2[4] + ""\n"");

            // Extracting Western region
            String western[] = page.split(""WESTERN"");

            String wthermal1[] = western[1].split(""THERMAL"");
            String wthermal2[] = wthermal1[1].split("" "");

            String wnuclear1[] = western[1].split(""NUCLEAR"");
            String wnuclear2[] = wnuclear1[1].split("" "");

            String whydro1[] = western[1].split(""HYDRO"");
            String whydro2[] = whydro1[1].split("" "");

            String wtotal1[] = western[1].split(""TOTAL"");
            String wtotal2[] = wtotal1[1].split("" "");

            // Appending filtered data into CSV file..
            writer.append(""WESTERN"" + "","");
            writer.append(year[0] + "","");
            writer.append(month[0] + "","");
            writer.append(wthermal2[4] + "","");
            writer.append(wnuclear2[4] + "","");
            writer.append(whydro2[4] + "","");
            writer.append(wtotal2[4] + ""\n"");

            // Extracting Southern Region
            String southern[] = page.split(""SOUTHERN"");

            String sthermal1[] = southern[1].split(""THERMAL"");
            String sthermal2[] = sthermal1[1].split("" "");

            String snuclear1[] = southern[1].split(""NUCLEAR"");
            String snuclear2[] = snuclear1[1].split("" "");

            String shydro1[] = southern[1].split(""HYDRO"");
            String shydro2[] = shydro1[1].split("" "");

            String stotal1[] = southern[1].split(""TOTAL"");
            String stotal2[] = stotal1[1].split("" "");

            // Appending filtered data into CSV file..
            writer.append(""SOUTHERN"" + "","");
            writer.append(year[0] + "","");
            writer.append(month[0] + "","");
            writer.append(sthermal2[4] + "","");
            writer.append(snuclear2[4] + "","");
            writer.append(shydro2[4] + "","");
            writer.append(stotal2[4] + ""\n"");

            // Extracting eastern region
            String eastern[] = page.split(""EASTERN"");

            String ethermal1[] = eastern[1].split(""THERMAL"");
            String ethermal2[] = ethermal1[1].split("" "");

            String ehydro1[] = eastern[1].split(""HYDRO"");
            String ehydro2[] = ehydro1[1].split("" "");

            String etotal1[] = eastern[1].split(""TOTAL"");
            String etotal2[] = etotal1[1].split("" "");
            // Appending filtered data into CSV file..
            writer.append(""EASTERN"" + "","");
            writer.append(year[0] + "","");
            writer.append(month[0] + "","");
            writer.append(ethermal2[4] + "","");
            writer.append("" "" + "","");
            writer.append(ehydro2[4] + "","");
            writer.append(etotal2[4] + ""\n"");

            // Extracting northernEastern region
            String neestern[] = page.split(""NORTH"");

            String nethermal1[] = neestern[2].split(""THERMAL"");
            String nethermal2[] = nethermal1[1].split("" "");

            String nehydro1[] = neestern[2].split(""HYDRO"");
            String nehydro2[] = nehydro1[1].split("" "");

            String netotal1[] = neestern[2].split(""TOTAL"");
            String netotal2[] = netotal1[1].split("" "");

            writer.append(""NORTH EASTERN"" + "","");
            writer.append(year[0] + "","");
            writer.append(month[0] + "","");
            writer.append(nethermal2[4] + "","");
            writer.append("" "" + "","");
            writer.append(nehydro2[4] + "","");
            writer.append(netotal2[4] + ""\n"");
            writer.close();

        } catch (IOException ioe) {
            ioe.printStackTrace();
        }

    }
</code></pre>
"
13716606,"<p>I think you can have a separate global variable to know which one was modified (I think you just need the reference of that string) and use like:</p>

<pre><code>if(r1==null)
    globalR = r1 = [something]    
else if(r2==null)
    globalR = r2 = [something]
else if(r3==null)
    globalR = r3 = [something]
else if(r4==null)
    globalR = r4 = [something]
else if(r5==null)
    globalR = r5 = [something]
</code></pre>

<p>then you can use globalR to handle that string</p>
"
22406864,"<p>The sample code, which is approved as an answer here is correct, but I disagree with it. It does not shows what is happening and I'm going to show you a good example to understand how actually the JVM works:</p>

<pre><code>package test;

    class A {
        A() {
            print();
        }

        void print() {
            System.out.println(""A"");
        }
    }

    class B extends A {
        static int staticVariable2 = 123456;
        static int staticVariable;

        static
        {
            System.out.println(staticVariable2);
            System.out.println(""Static Initialization block"");
            staticVariable = Math.round(3.5f);
        }

        int instanceVariable;

        {
            System.out.println(""Initialization block"");
            instanceVariable = Math.round(3.5f);
            staticVariable = Math.round(3.5f);
        }

        B() {
            System.out.println(""Constructor"");
        }

        public static void main(String[] args) {
            A a = new B();
            a.print();
            System.out.println(""main"");
        }

        void print() {
            System.out.println(instanceVariable);
        }

        static void somethingElse() {
            System.out.println(""Static method"");
        }
    }
</code></pre>

<p>Before to start commenting on the source code, I'll give you a short explanation of static variables of a class:</p>

<p>First thing is that they are called class variables, they belong to the class not to particular instance of the class. All instances of the class share this static(class) variable. Each and every variable has a default value, depending on primitive or reference type. Another thing is when you reassign the static variable in some of the members of the class (initialization blocks, constructors, methods, properties) and doing so you are changing the value of the static variable not for particular instance, you are changing it for all instances. To conclude static part I will say that the static variables of a class are created not when you instantiate for first time the class, they are created when you define your class, they exist in JVM without the need of any instances. Therefor the correct access of static members from external class (class in which they are not defined) is by using the class name following by dot and then the static member, which you want to access (template: <code>&lt;CLASS_NAME&gt;.&lt;STATIC_VARIABLE_NAME&gt;</code>).</p>

<p>Now let's look at the code above:</p>

<p>The entry point is the main method - there are just three lines of code. I want to refer to the example which is currently approved. According to it the first thing which must be printed after printing ""Static Initialization block"" is ""Initialization block"" and here is my disagreement, the non-static initialization block is not called before the constructor, it is called before any initializations of the constructors of the class in which the initialization block is defined. The constructor of the class is the first thing involved when you create an object (instance of the class) and then when you enter the constructor the first part called is either implicit (default) super constructor or explicit super constructor or explicit call to another overloaded constructor (but at some point if there is a chain of overloaded constructors, the last one calls a super constructor, implicitly or explicitly). </p>

<p>There is polymorphic creation of an object, but before to enter the class B and its main method, the JVM initializes all class(static) variables, then goes through the static initialization blocks if any exist and then enters the class B and starts with the execution of the main method. It goes to the constructor of class B then immediately (implicitly) calls constructor of class A, using polymorphism the method(overridden method) called in the body of the constructor of class A is the one which is defined in class B and in this case the variable named instanceVariable is used before reinitialization. After closing the constructor of class be the thread is returned to constructor of class B but it goes first to the non-static initialization block before printing ""Constructor"". For better understanding debug it with some IDE, I prefer Eclipse.</p>
"
22411227,"<p>The above suggestion works, but only if the annotation is used on the getter method. If the annotations is used where the member is declared, nothing will happen.</p>

<pre><code>public String getStringValue(){
     return (this.stringValue == null) ? ""Default"" : stringValue;
}
</code></pre>
"
13764257,"<p>Write your own method</p>

<pre><code>public boolean checkEqual(DateTime first,DateTime second){
     if(first.&lt;getterforyear&gt; == second.&lt;getterforyear&gt; &amp;&amp; first.&lt;getterformonth&gt; == second.&lt;getterformonth&gt; &amp;&amp; first.&lt;getterforday&gt; == second.&lt;getterforday&gt;){
         return true;
  }
 return false;
}
</code></pre>
"
22697547,"<pre><code>SimpleDateFormat format1 = new SimpleDateFormat(""yyyy/MM/dd"");
System.out.println(format1.format(date));
</code></pre>
"
22931446,"<pre><code>public class Class1 {
private String extref=""MY"";

public String getExtref() {
    return extref;
}

public String setExtref(String extref) {
    return this.extref = extref;
}

public static void main(String[] args) {

    Class1 obj=new Class1();
    String value=obj.setExtref(""AFF"");
    int returnedValue=getMethod(value);     
    System.out.println(returnedValue);
}

/**
 * @param value
 * @return
 */
private static int getMethod(String value) {
      HashMap&lt;Integer, String&gt; hashmap1 = new HashMap&lt;Integer, String&gt;();
        hashmap1.put(1,""MY"");
        hashmap1.put(2,""AFF"");

        if (hashmap1.containsValue(value))
        {
            for (Map.Entry&lt;Integer,String&gt; e : hashmap1.entrySet()) {
                Integer key = e.getKey();
                Object value2 = e.getValue();
                if ((value2.toString()).equalsIgnoreCase(value))
                {
                    return key;
                }
            }
        }   
        return 0;

}
}
</code></pre>
"
23473194,"<p>I have used 2 dimensional array...</p>

<pre><code>   import java.util.Scanner;


   public class numberEnglish {
   public static void main(String args[])
        {
    String[ ][ ] aryNumbers = new String[9][4];
    aryNumbers[0][0] = ""one"";
    aryNumbers[0][1] = ""ten"";
    aryNumbers[0][2] = ""one hundred and"";
    aryNumbers[0][3] = ""one thousand"";

    aryNumbers[1][0] = ""two"";
    aryNumbers[1][1] = ""twenty"";
    aryNumbers[1][2] = ""two hundred and"";
    aryNumbers[1][3] = ""two thousand"";

    aryNumbers[2][0] = ""three"";
    aryNumbers[2][1] = ""thirty"";
    aryNumbers[2][2] = ""three hundred and"";
    aryNumbers[2][3] = ""three thousand"";

    aryNumbers[3][0] = ""four"";
    aryNumbers[3][1] = ""fourty"";
    aryNumbers[3][2] = ""four hundred and"";
    aryNumbers[3][3] = ""four thousand"";

    aryNumbers[4][0] = ""five"";
    aryNumbers[4][1] = ""fifty"";
    aryNumbers[4][2] = ""five hundred and"";
    aryNumbers[4][3] = ""five thousand"";

    aryNumbers[5][0] = ""six"";
    aryNumbers[5][1] = ""sixty"";
    aryNumbers[5][2] = ""six hundred and"";
    aryNumbers[5][3] = ""six thousand"";

    aryNumbers[6][0] = ""seven"";
    aryNumbers[6][1] = ""seventy"";
    aryNumbers[6][2] = ""seven hundred and"";
    aryNumbers[6][3] = ""seven thousand"";

    aryNumbers[7][0] = ""eight"";
    aryNumbers[7][1] = ""eighty"";
    aryNumbers[7][2] = ""eight hundred and"";
    aryNumbers[7][3] = ""eight thousand"";

    aryNumbers[8][0] = ""nine"";
    aryNumbers[8][1] = ""ninty"";
    aryNumbers[8][2] = ""nine hundred and"";
    aryNumbers[8][3] = ""nine thousand"";


    //System.out.println(aryNumbers[0] + "" ""+aryNumbers[0] + "" "");

    int number=0;
    Scanner sc = new Scanner(System.in);
    System.out.println("" Enter Number 4 digited number:: "");
    number = sc.nextInt();
    int temp = number;
    int count=1;
    String english="""";
    String tenglish = """";
    if(number == 0)
    {
        System.out.println(""*********"");
        System.out.println(""Zero"");
        System.out.println(""*********"");
        sc.close();
        return;
    }
    while(temp !=0)
    {

        int r = temp%10;
        if(r==0)
        {
            tenglish = "" zero "";
            count++;
        }
        else
        {

            int t1=r-1;
            int t2 = count-1;
            //System.out.println(t1 +"" ""+t2);
            count++;
            tenglish = aryNumbers[t1][t2];

            //System.out.println(aryNumbers[t1][t2]);
        }
        english = tenglish +"" ""+ english;
        temp = temp/10;

    }
    //System.out.println(aryNumbers[0][0]);
    english = english.replace(""ten  zero"", ""ten"");
    english = english.replace(""twenty  zero"", ""twenty"");
    english = english.replace(""thirty  zero"", ""thirty"");
    english = english.replace(""fourty  zero"", ""fourty"");
    english = english.replace(""fifty  zero"", ""fifty"");
    english = english.replace(""sixty  zero"", ""sixty"");
    english = english.replace(""seventy  zero"", ""seventy"");
    english = english.replace(""eighty  zero"", ""eighty"");
    english = english.replace(""ninety  zero"", ""ninety"");

    english = english.replace(""ten one"", ""eleven"");
    english = english.replace(""ten two"", ""twelve"");
    english = english.replace(""ten three"", ""thirteen"");
    english = english.replace(""ten four"", ""fourteen"");
    english = english.replace(""ten five"", ""fifteen"");
    english = english.replace(""ten six"", ""sixteen"");
    english = english.replace(""ten seven"", ""seventeen"");
    english = english.replace(""ten eight"", ""eighteen"");
    english = english.replace(""ten nine"", ""nineteen"");
    english = english.replace("" zero "", """");
    int length = english.length();
    String sub = english.substring(length-6,length-3);
    //System.out.println(length);
    //System.out.println(sub);
    if(sub.equals(""and""))
    {
        //System.out.println(""hello"");
        english=english.substring(0,length-6);
    }
    System.out.println(""********************************************"");
    System.out.println(english);
    System.out.println(""********************************************"");
    sc.close();
}
</code></pre>

<p>}</p>
"
13883935,"<p>I guess you could move the if statements outside the while, like so</p>

<pre><code>if (b1) {
    while (true) {
        doThis();
    }
}
if (b2) {
    while (true) {
        doThat();
    }
}
</code></pre>

<p>But you're really not gaining anything, since you still have to evaluate the condition that makes the while loop repeat, and you have to do THAT twice as often as the original code.</p>
"
23998323,"<p>If you are using groovy, you can simply do:</p>

<pre><code>def lineSeparator = new File('path/to/file').text.contains('\r\n') ? '\r\n' : '\n'
</code></pre>
"
13962925,"<p>You have to append the line seperator / break like this.</p>

<p>Try</p>

<pre><code>String separator = System.getProperty(""line.separator"");
    fos.append(seperator);
</code></pre>
"
24353869,"<p>You probably looking for something like this.</p>

<pre><code>FileInputStream in = new FileInputStream(""inputFile.txt"");
BufferedReader br = new BufferedReader(new InputStreamReader(in));
</code></pre>
"
24420968,"<p>The easiest way to iterare is using for. In a LinkedHashMap it would be like this:</p>

<pre><code>   private static LinkedHashMap&lt;Integer, String&gt; dataBase = new LinkedHashMap&lt;Integer, String&gt;();

   for(Integer key : dataBase.keySet()) {
         String ret = dataBase.get(key);
    }
</code></pre>

<p><a href=""http://tutorials.jenkov.com/java-collections/map.html"" rel=""nofollow"">Source</a></p>
"
24513856,"<pre><code>class Program
{
    static void Main(string[] args)
    {
        String var = """";
        String exp_Str = """";
        for (int i = 1; i &lt; 8; i++)
        {
            for (int j = 1; j &lt; i; j++)
            {
                if (i &gt; j)
                {


                    var = var + j;
                    //Console.WriteLine(j+"""");
                }

            }
            Console.WriteLine(var);
            var = """";

        }

        Console.ReadLine();
    }
}
</code></pre>
"
24778950,"<pre><code>Map&lt;String, List&lt;User&gt;&gt; usersByCountry = new HashMap&lt;String, List&lt;User&gt;&gt;();
for(User user : listOfUsers) {
    List&lt;User&gt; users = usersByCountry.get(user.getCountry());
    if (users == null) {        
        usersByCountry.put(user.getCountry(), users = new ArrayList&lt;User&gt;());
    }
    users.add(user);
}
</code></pre>
"
24841298,"<p>I like the JTextArea approach mentioned above, because it resizes nicely at SOUTH in a BorderLayout panel (as long as the CENTER component can take up the slack if the number of lines in the JTextArea changes).</p>

<p>However, in Nimbus L&amp;F there is a catch in setting the JTextArea's background colour.  It seems that Nimbus uses magic colours (extended class of java.awt.Color) that go transparent in JTextArea. So if you are copying the background colour from a JPanel to the JText area you need to convert the Color to ARGB and back to Color.  The following code works for me in all the L&amp;Fs in my JRE (Nimbus, CDE Motif, Metal, Mac OS X):</p>

<pre><code>    JTextArea ta = new JTextArea(text);
    ta.setEditable(false);
    ta.setLineWrap(true);
    ta.setWrapStyleWord(true);
    JLabel lb = new JLabel();
    Font f = lb.getFont();
    ta.setFont(f.deriveFont(f.getSize2D() * 0.9f));
    ta.setBorder(lb.getBorder());
    ta.setBackground(new Color(lb.getBackground().getRGB(), true));
    ta.setForeground(new Color(lb.getForeground().getRGB(), true));
    ta.setOpaque(lb.isOpaque());
</code></pre>

<p>I made the font a bit smaller.  Of course you can keep JLabel's font size if you want.</p>
"
13984308,"<p>The situation is similar yet different in both languages, C++ or Java.</p>

<p>When the exception is thrown, it propagates back up the stack, looking for a handler. In C++ or Java, it might never find one and thus unwind all the way back to the start and terminate the program. In Java, there is a concept of checked exceptions which enforce that there will be some kind of handling of the exception (if checked). In C++, there is a concept of exception specification, but it is impractical (ill-designed) and should not be used, so, consider all exceptions as ""unchecked"" in C++.  </p>

<p>Whether the exception ends up terminating the program or being caught somewhere far up-stream of where it was thrown, the unwinding process leading up to that is what matters. If it ends up terminating the program, then, of course, there are no memory leaks as the OS reclaims the memory. What you have to worry about is:</p>

<ul>
<li>Memory leaks during unwinding if the exception is eventually handled somewhere upstream; and,</li>
<li>Other kinds of resources that could leak (e.g., pending database operations, network connections, etc.) because they won't be reclaimed / undone by the OS if the program terminates.</li>
</ul>

<p>As the stack unwinding occurs, in C++, the guarantee is, simply put, that every stack-bound object that was fully constructed (including the data members or base class instance of an object being constructed) will be destroyed immediately (i.e., deterministically) in the exact reverse order in which they were created. So, as long as all resources are tied directly to the construction / destruction of objects (also called ""RAII"") there will be no leaks (of memory or other resource) during the unwinding process since every resource successfully acquired will be freed (unless freeing the resource fails during unwinding, which is something you need to handle with care).</p>

<p>In Java, the ""stack"" unwinding occurs in the same fashion, except that instead of immediately destroying the objects, they are marked as discarded (i.e., to be garbage collected), and eventually destroyed at some indeterminate point in the future. This guarantees no memory leaks, as long as the garbage collector stays alive long enough to do its job, which I'm not sure is guaranteed if the program ends up terminating on an unhandled exception (but it doesn't matter at that point). The main problem in Java are the other resources. These resources must be released in the <code>finally</code> blocks. The <code>finally</code> blocks are guaranteed to be executed during the unwinding, but, of course, they must contain code to release the resource allocated in the corresponding <code>try</code> block. As long as the programmer did his job, resources won't leak.</p>

<p>The fact that the exception is thrown from a constructor really doesn't make much of a difference, and the basic rules are just the same basic rules for not leaking resources when exceptions are thrown:</p>

<ul>
<li>In C++, tie every <em>single</em> resource (memory or otherwise) to a <em>single</em> object, and the language guarantees the rest, no leaks. This is the Resource Acquisition Is Initialization (RAII) idiom.</li>
<li>In Java, make sure the write every <em>single</em> non-memory resource acquisition within its own try-block which has its own finally-block that releases that <em>single</em> resource.</li>
</ul>

<p>In both cases, you must release your resources cleanly (no-throw).</p>
"
14039827,"<p>Do you mean you want to check the length like</p>

<pre><code>if (text.length() != 6)
</code></pre>
"
25846201,"<p>keep the roles manager-gui,admin-gui for the user who was configured Jenkins page</p>

<p>example:-</p>

<pre><code> &lt;tomcat-users&gt;

   &lt;user username=""uname"" password=""pword"" roles=""manager-gui,admin-gui""/&gt;

 &lt;/tomcat-users&gt;
</code></pre>
"
26009125,"<p>Before was not possible to see debug tool bar, after </p>

<pre><code> Window-&gt;Reset Perpective
</code></pre>

<p>was possible to show it again</p>
"
14064993,"<p>I think so it is asking for authentication of your username. </p>

<pre><code>session=Session.getInstance(props,
         new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(fromUsername, password);
            }
          });
</code></pre>

<p>And then use above session in your code.</p>

<p>I haven't use the code specified in the google link u mentioned but i use java mail api to send email from my gmail account.Use above code for authentication</p>
"
26671186,"<pre><code>private static void iterateBetweenDates(Date startDate,Date endDate) {
    Calendar startCalemder = Calendar.getInstance();
    startCalemder.setTime(startDate);
    Calendar endCalendar = Calendar.getInstance();
    endCalendar.setTime(endDate);

    for(; startCalemder.compareTo(endCalendar)&lt;=0;
          startCalemder.add(Calendar.DATE, 1)) {
        // write you main logic here
    }

}
</code></pre>
"
26952949,"<p>Look this code.....</p>

<pre><code>public int[] getRandomNonrepeat(int iMin, int iMax){
    int iSize = iMax - iMin + 1;
    int[] random = new int[iSize];
    int iLoopRepetion=0;
    Random rand = new Random();
    for(int i=0;i&lt;iSize;i++){
        random[i]=rand.nextInt(iSize)+1;
        for(iLoopRepetion=0;iLoopRepetion&lt;i;iLoopRepetion++)
            if(random[i]==random[iLoopRepetion])
                break;
        if(iLoopRepetion!=(i)&amp;&amp;iLoopRepetion!=iSize-1)
            i--;
    }
    return random;
}
</code></pre>
"
27065039,"<p>Warning for almost everybody in this thread: here is a sample code where inside the loop can easily be 200 times slower on my computer with java 7 (And the memory consumption is also slightly different). But it is about allocation and not only scope.</p>

<pre class=""lang-java prettyprint-override""><code>public class Test
{
    private final static int STUFF_SIZE = 512;
    private final static long LOOP = 10000000l;

    private static class Foo
    {
        private long[] bigStuff = new long[STUFF_SIZE];

        public Foo(long value)
        {
            setValue(value);
        }

        public void setValue(long value)
        {
            // Putting value in a random place.
            bigStuff[(int) (value % STUFF_SIZE)] = value;
        }

        public long getValue()
        {
            // Retrieving whatever value.
            return bigStuff[STUFF_SIZE / 2];
        }
    }

    public static long test1()
    {
        long total = 0;

        for (long i = 0; i &lt; LOOP; i++)
        {
            Foo foo = new Foo(i);
            total += foo.getValue();
        }

        return total;    
    }

    public static long test2()
    {
        long total = 0;

        Foo foo = new Foo(0);
        for (long i = 0; i &lt; LOOP; i++)
        {
            foo.setValue(i);
            total += foo.getValue();
        }

        return total;
    }

    public static void main(String[] args)
    {
        long start;

        start = System.currentTimeMillis();
        test1();
        System.out.println(System.currentTimeMillis() - start);

        start = System.currentTimeMillis();
        test2();
        System.out.println(System.currentTimeMillis() - start);
    }
}
</code></pre>

<p>Conclusion: depending of the size of the local variable, the difference can be huge, even with not so big variables.</p>

<p>Just to say that sometimes, outside or inside the loop DOES matter.</p>
"
14748429,"<p>try adding these to your props config..</p>

<pre><code>  props.put(""mail.smtp.auth"", true);
  props.put(""mail.smtp.starttls.enable"", true);
</code></pre>
"
27196978,"<p>Well 'Abstract Interface' is a Lexical construct: <a href=""http://en.wikipedia.org/wiki/Lexical_analysis"" rel=""nofollow"">http://en.wikipedia.org/wiki/Lexical_analysis</a>.</p>

<p>It is required by the compiler, you could also write <code>interface</code>. </p>

<p>Well don't get too much into Lexical construct of the language as they might have put it there to resolve some compilation ambiguity which is termed as special cases during compiling process or for some backward compatibility, try to focus on core  Lexical construct.</p>

<p>The essence of `interface is to capture some abstract concept (idea/thought/higher order thinking etc) whose implementation may vary ... that is, there may be multiple implementation.</p>

<p>An Interface is a pure abstract data type that represents the features of the Object it is capturing or representing.</p>

<p>Features can be represented by space or by time. When they are represented by space (memory storage) it means that your concrete class will implement a field and  method/methods that will operate on that field or by time which means that the task of implementing the feature is purely computational (requires more cpu clocks for processing) so you have a trade off between space and time for feature implementation.</p>

<p>If your concrete class does not implement all features it again becomes abstract because you have a implementation of your thought or idea or abstractness but it is not complete , you specify it by <code>abstract</code> class. </p>

<p>A concrete class will be a class/set of classes which  will fully capture the abstractness you are trying to capture class XYZ.</p>

<p>So the Pattern is </p>

<pre><code>Interface---&gt;Abstract class/Abstract classes(depends)--&gt;Concrete class
</code></pre>
"
14768645,"<p>Hi Friend finally i am able to send Message using OAUTH , Posting my OAuth2Authenticator source,</p>

<pre><code>/* Copyright 2012 Google Inc.
*
* Licensed under the Apache License, Version 2.0 (the ""License"");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package com.example;

import com.sun.mail.imap.IMAPStore;
import com.sun.mail.imap.IMAPSSLStore;
import com.sun.mail.smtp.SMTPTransport;

import java.security.Provider;
import java.security.Security;
import java.util.Properties;
import java.util.UUID;
import java.util.logging.Logger;

import javax.mail.Address;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.URLName;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;


/**
* Performs OAuth2 authentication.
*
* &lt;p&gt;Before using this class, you must call {@code initialize} to install the
* OAuth2 SASL provider.
*/
public class OAuth2Authenticator {
 private static final Logger logger =
     Logger.getLogger(OAuth2Authenticator.class.getName());

 public static final class OAuth2Provider extends Provider {
   private static final long serialVersionUID = 1L;

   public OAuth2Provider() {
     super(""Google OAuth2 Provider"", 1.0,
           ""Provides the XOAUTH2 SASL Mechanism"");
     put(""SaslClientFactory.XOAUTH2"",
         ""com.google.code.samples.oauth2.OAuth2SaslClientFactory"");
   }
 }

 /**
  * Installs the OAuth2 SASL provider. This must be called exactly once before
  * calling other methods on this class.
  */
 public static void initialize() {
   Security.addProvider(new OAuth2Provider());
 }

 /**
  * Connects and authenticates to an IMAP server with OAuth2. You must have
  * called {@code initialize}.
  *
  * @param host Hostname of the imap server, for example {@code
  *     imap.googlemail.com}.
  * @param port Port of the imap server, for example 993.
  * @param userEmail Email address of the user to authenticate, for example
  *     {@code oauth@gmail.com}.
  * @param oauthToken The user's OAuth token.
  * @param debug Whether to enable debug logging on the IMAP connection.
  *
  * @return An authenticated IMAPStore that can be used for IMAP operations.
  */
 public static IMAPStore connectToImap(String host,
                                       int port,
                                       String userEmail,
                                       String oauthToken,
                                       boolean debug) throws Exception {
   Properties props = new Properties();
   props.put(""mail.imaps.sasl.enable"", ""true"");
   props.put(""mail.imaps.sasl.mechanisms"", ""XOAUTH2"");
   props.put(OAuth2SaslClientFactory.OAUTH_TOKEN_PROP, oauthToken);
   Session session = Session.getInstance(props);
   session.setDebug(debug);

   final URLName unusedUrlName = null;
   IMAPSSLStore store = new IMAPSSLStore(session, unusedUrlName);
   final String emptyPassword = ""&lt;your_gmail_password&gt;"";
   store.connect(host, port, userEmail, emptyPassword);
   return store;
 }

 /**
  * Connects and authenticates to an SMTP server with OAuth2. You must have
  * called {@code initialize}.
  *
  * @param host Hostname of the smtp server, for example {@code
  *     smtp.googlemail.com}.
  * @param port Port of the smtp server, for example 587.
  * @param userEmail Email address of the user to authenticate, for example
  *     {@code oauth@gmail.com}.
  * @param oauthToken The user's OAuth token.
  * @param debug Whether to enable debug logging on the connection.
  *
  * @return An authenticated SMTPTransport that can be used for SMTP
  *     operations.
  */
 public static SMTPTransport connectToSmtp(String host,
                                           int port,
                                           String userEmail,
                                           String oauthToken,
                                           boolean debug) throws Exception {
   Properties props = new Properties();
   props.put(""mail.smtp.starttls.enable"", ""true"");
   props.put(""mail.smtp.starttls.required"", ""true"");
   props.put(""mail.smtp.sasl.enable"", ""true"");
   props.put(""mail.smtp.sasl.mechanisms"", ""XOAUTH2"");
   props.put(""mail.smtp.auth"",""true"");
   props.put(OAuth2SaslClientFactory.OAUTH_TOKEN_PROP, oauthToken);



   Session session = Session.getInstance(props);
   /*,
           new javax.mail.Authenticator() {
        protected PasswordAuthentication getPasswordAuthentication() {
            return new PasswordAuthentication(""prateek.engineer@gmail.com"", emptyPassword);
        }
      });*/
   session.setDebug(debug);

   final URLName unusedUrlName = null;
   SMTPTransport transport = new SMTPTransport(session, unusedUrlName);
   // If the password is non-null, SMTP tries to do AUTH LOGIN.
   final String emptyPassword = ""&lt;your_gmail_password&gt;"";
   transport.connect(host, port, userEmail, emptyPassword);

   Message message = new MimeMessage(session);
   message.setFrom(new InternetAddress(""&lt;your_gmail_id&gt;""));
   message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(""&lt;recepient_emailid&gt;""));
   message.setSubject(""Test Message"");
   message.setText(""First Message using OAuth Protocol"");
   /*SMTPTransport.send(message);*/

   Address[] add=new InternetAddress[1];
   add[0]= new InternetAddress(""&lt;recepient_emailid&gt;"");
   transport.sendMessage(message, add);

   return transport;
 }

 /**
  * Authenticates to IMAP with parameters passed in on the commandline.
  */
 public static void main(String args[]) throws Exception {
   /*if (args.length != 2) {
     System.err.println(
         ""Usage: OAuth2Authenticator &lt;email&gt; &lt;oauthToken&gt;"");
     return;
   }*/
   String email = ""&lt;your_gmail_id&gt;"";

   String oauthToken = """";


   initialize();

   IMAPStore imapStore = connectToImap(""imap.gmail.com"",
                                       993,
                                       email,
                                       oauthToken,
                                       true);
   System.out.println(""Successfully authenticated to IMAP.\n"");
   SMTPTransport smtpTransport = connectToSmtp(""smtp.gmail.com"",
                                               587,
                                               email,
                                               oauthToken,
                                               true);

   System.out.println(""Successfully authenticated to SMTP."");
 }
}
</code></pre>

<p>add your password and the line u missed because of which u r getting authentication required exception is :::</p>

<pre><code>props.put(""mail.smtp.auth"",""true"");
</code></pre>

<p>in your <strong>connectToSmtp(.... , ...);</strong> method</p>

<p>AND RESPONSE YOU GET IS ::</p>

<pre><code>From: &lt;your_email_id&gt;
To: &lt;recepient_eemail_id&gt;
Subject: Test Message
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

First Message using OAuth Protocol //its message u have 
.
250 2.0.0 OK 1360312537 a1sm52630615pav.2 - gsmtp
Successfully authenticated to SMTP.
</code></pre>
"
15006815,"<p>It may be that you wish to execute a DOS or unix command in the workflow of Java program execution...</p>

<pre><code>String command = ""cmd /c dir /s"";
String homeDir = ""C:\\WINDOWS"";
Process process = Runtime.getRuntime().exec(command + "" "" + homeDir);
</code></pre>

<p>And may be you wish to process the output...</p>

<pre><code>final InputStream in = process.getInputStream();
int ch;
while((ch = in.read()) != -1) {
   System.out.print((char)ch);
}
</code></pre>

<p>Close code with try, catch</p>
"
15170383,"<p>This is how I got the  answer:</p>

<pre><code>def fib():
        x,y = 0,1
        while True:
            yield x
            x,y = y, x+y

def even(seq):
    for number in seq:
        if not number % 2:
            yield number

def under_a_million(seq):
    for number in seq:
        if number &gt; 4000000:
            break
        yield number   

print sum(even(under_a_million(fib())))
</code></pre>

<p>-M1K3</p>
"
15609253,"<p>Redefining and Overriding comes with in the same scenarios. Only difference is that if methods used are Static, its redefining. </p>

<p>ex:</p>

<p><strong>Overriding:</strong></p>

<pre><code>    Class A{
      public void show(){
             SOP(""class a"");
        }
   }

   Class B extends A{
     public void show(){
         SOP(""class B"");
     }
   }
</code></pre>

<p><strong>Redefining:</strong></p>

<pre><code>    Class A{
      public static void show(){
             SOP(""class a"");
        }
   }

   Class B extends A{
     public static void show(){
         SOP(""class B"");
     }
   }
</code></pre>

<p>Note: Static methods looks as if they are over-rided but they are actually redefined.</p>

<ol>
<li>Redefining is with Static Methods. </li>
<li>Static methods are associated with Class and not with Object, so we do not override as per instance for run-time.</li>
<li>In case of static we are just redefining the method.</li>
</ol>
"
15869788,"<p>I've created small Socket Factory class to handle the HTTP CONNECT via socket. The socket then can be used as per-normal provided the proxy supports CONNECT to the destination.</p>

<pre><code>public final class SocketFactory {

    public static Socket GetSocket(String host, String port) throws IOException {

        /*************************
         * Get the jvm arguments
         *************************/

        int proxyPort = Integer.parseInt(System.getProperty(""http.proxyPort""));
        String proxyHost = System.getProperty(""http.proxyHost"");

        // Socket object connecting to proxy
        Socket sock = new Socket(proxyHost, proxyPort);

        /***********************************
         * HTTP CONNECT protocol RFC 2616
         ***********************************/
        String proxyConnect = ""CONNECT "" + host + "":"" + port;

        // Add Proxy Authorization if proxyUser and proxyPass is set
        try {
            String proxyUserPass = String.format(""%s:%s"",
                    System.getProperty(""http.proxyUser""),
                    System.getProperty(""http.proxyPass""));

            proxyConnect.concat("" HTTP/1.0\nProxy-Authorization:Basic ""
                    + Base64.encode(proxyUserPass.getBytes()));
        } catch (Exception e) {
        } finally {
            proxyConnect.concat(""\n\n"");
        }

        sock.getOutputStream().write(proxyConnect.getBytes());
        /***********************************/

        /***************************
         * validate HTTP response.
         ***************************/
        byte[] tmpBuffer = new byte[512];
        InputStream socketInput = sock.getInputStream();

        int len = socketInput.read(tmpBuffer, 0, tmpBuffer.length);

        if (len == 0) {
            throw new SocketException(""Invalid response from proxy"");
        }

        String proxyResponse = new String(tmpBuffer, 0, len, ""UTF-8"");

        // Expecting HTTP/1.x 200 OK
        if (proxyResponse.indexOf(""200"") != -1) {

            // Flush any outstanding message in buffer
            if (socketInput.available() &gt; 0)
                socketInput.skip(socketInput.available());

            // Proxy Connect Successful, return the socket for IO
            return sock;
        } else {
            throw new SocketFactoryException(""Fail to create Socket"",
                    proxyResponse);
        }
    }

    /**
     * Simplest Base64 Encoder adopted from GeorgeK
     * 
     * @see http://stackoverflow.com/questions/469695/decode-base64-data-in-java/4265472#4265472
     */
    private static class Base64 {
        /***********************
         * Base64 character set
         ***********************/
        private final static char[] ALPHABET = ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/""
                .toCharArray();

        /**
         * Translates the specified byte array into Base64 string.
         * 
         * @param buf
         *            the byte array (not null)
         * @return the translated Base64 string (not null)
         */
        public static String encode(byte[] buf) {
            int size = buf.length;
            char[] ar = new char[((size + 2) / 3) * 4];
            int a = 0;
            int i = 0;
            while (i &lt; size) {
                byte b0 = buf[i++];
                byte b1 = (i &lt; size) ? buf[i++] : 0;
                byte b2 = (i &lt; size) ? buf[i++] : 0;

                int mask = 0x3F;
                ar[a++] = ALPHABET[(b0 &gt;&gt; 2) &amp; mask];
                ar[a++] = ALPHABET[((b0 &lt;&lt; 4) | ((b1 &amp; 0xFF) &gt;&gt; 4)) &amp; mask];
                ar[a++] = ALPHABET[((b1 &lt;&lt; 2) | ((b2 &amp; 0xFF) &gt;&gt; 6)) &amp; mask];
                ar[a++] = ALPHABET[b2 &amp; mask];
            }
            switch (size % 3) {
            case 1:
                ar[--a] = '=';
            case 2:
                ar[--a] = '=';
            }
            return new String(ar);
        }
    }
}
</code></pre>

<p><a href=""https://code.google.com/p/java-socket-over-http-proxy-connect/"" rel=""nofollow"">https://code.google.com/p/java-socket-over-http-proxy-connect/</a></p>
"
28738944,"<p>Good answers above explaining the actual question from the OP. </p>

<p>If anyone needs to pass around a number that needs to be globally updated, use the <code>AtomicInteger(</code>) instead of creating the various wrapper classes suggested or relying on 3rd party libs. </p>

<p>The <code>AtomicInteger(</code>) is of course mostly used for thread safe access but if the performance hit is no issue, why not use this built-in class. The added bonus is of course the obvious thread safety.</p>

<pre><code>import java.util.concurrent.atomic.AtomicInteger
</code></pre>
"
16162810,"<pre><code>StringBuffer stringBuffer = new StringBuffer(Double.toString(ratioGrossYield));
int i; // general purpose character index
int exponent;
int decimalPlaces;
if ((i = stringBuffer.indexOf(""E"")) &gt; -1) { // scientific notation...
    // turn scientific notation exponent into an integer
    exponent = Integer.parseInt(stringBuffer.substring(i + 1));
    // truncate the exponent from the StringBuffer
    stringBuffer = stringBuffer.delete(i, stringBuffer.length());
} else { // decimal notation, could be trailing zero
    exponent = 0; // no exponent, so zero
    // point i to trailing zero and truncate it, if there is one
    if (stringBuffer.charAt((i = stringBuffer.length() - 1)) == '0') {
        stringBuffer = stringBuffer.deleteCharAt(i); // delete trailing zero
    }
}
// stringBuffer now contains only significant digits to the
// right of the decimal point, if there are any
decimalPlaces = stringBuffer.length() - 1 - stringBuffer.indexOf(""."") - exponent;
// zero or positive number is decimal places
// negative number is number of zeroes to the left of the decimal point
// between the decimal point and the least significant digit
if (stringBuffer.charAt(stringBuffer.length() - 1) == '0') {

    return decimalPlaces-1;

} else {

    return decimalPlaces;
}
</code></pre>
"
28910210,"<pre><code>String str = ""  Hello there   my name     is   Bill    "";
str = str.trim();
int count = 0;
for(int i = 0; i&lt;str.length(); i++) {
    if(str.charAt(i) == ' ' &amp;&amp; str.charAt(i-1) != ' ') {
        count++;
    }
}

System.out.println(count+1);
</code></pre>
"
16263683,"<p>Xincrol algorithm solves this problem. Explanation + source code:</p>

<p><a href=""http://openpatent.blogspot.co.il/2013/04/xincrol-unique-and-random-number.html"" rel=""nofollow"">http://openpatent.blogspot.co.il/2013/04/xincrol-unique-and-random-number.html</a></p>

<pre><code>/**
 * Xincrol - Unique and Random Number Generator
 * Xincrol.java
 * Purpose: Generating unique random numbers in specified range.
 *
 * @author Tofig Kareemov
 * @version 1.2 2013.04.28
 */
package androphic.estereos.lib.algs;

public class Xincrol {
    // Private Data...
    private int iUniqueSeed = 0;
    private int[] iKey = new int[8];
    private int iSet = 0;
    private int iSystemID = 0;

    // Constructor
    public Xincrol() {
        iSystemID = System.getProperties().toString().hashCode();
        for (int i = 0; i &lt; iKey.length; ++i) {
            iKey[i] = i;
        }
        reset(Integer.MAX_VALUE);
    }

    // .

    // Private Methods...
    private void reset(int iBase) {
        iUniqueSeed = 0;
        iKey[0] ^= iSystemID;
        iKey[1] ^= (int) System.nanoTime();
        iKey[2] ^= (int) (System.nanoTime() &gt;&gt; 32);
        iKey[3] ^= (int) System.currentTimeMillis();
        iKey[4] ^= (int) (System.currentTimeMillis() &gt;&gt; 32);
        iKey[5] ^= 0xa5a5a5a5;
        iKey[6] ^= 0x5a5a5a5a;
        iKey[7] ^= 0xff00ff00;
        int iGlue = iKey[iKey.length - 1];
        int iBaseMask = iBase - 1;
        for (int i1 = 0; i1 &lt; 2; ++i1) {
            for (int i = 0; i &lt; iKey.length; ++i) {
                iGlue = iGlue ^ iKey[i] ^ i;
                if ((iKey[i] &amp; 1) == 0) {
                    iGlue = INC(iGlue, iBaseMask);
                } else {
                    iGlue = DEC(iGlue, iBaseMask);
                }
                if ((iKey[i] &amp; 2) == 0) {
                    iGlue = ROL(iGlue, iBaseMask);
                } else {
                    iGlue = ROR(iGlue, iBaseMask);
                }
                iKey[i] = XOR(iGlue, iKey[i], iBaseMask);
            }
        }
        iSet = iKey[iKey.length - 1] &amp; 3;
    }

    // Set 1 Function
    private int XOR(int iA, int iB, int iBaseMask) {
        return ((iA ^ iB) &amp; iBaseMask);
    }

    private int INC(int iA, int iBaseMask) {
        return ((++iA) &amp; iBaseMask);
    }

    private int ROL(int iA, int iBaseMask) {
        iA &lt;&lt;= 1;
        if (iA &gt; iBaseMask) {
            iA |= 1;
        }
        return (iA &amp; iBaseMask);
    }

    // .

    // Set 2 Functions
    private int DEC(int iA, int iBaseMask) {
        return ((--iA) &amp; iBaseMask);
    }

    private int ROR(int iA, int iBaseMask) {
        if ((iA &amp; 0x00000001) == 1) {
            return ((iA &gt;&gt;&gt; 1) &amp; iBaseMask) | ((iBaseMask + 1) &gt;&gt;&gt; 1);
        } else {
            return ((iA &gt;&gt;&gt; 1) &amp; iBaseMask);
        }
    }

    // .
    // .

    // Public Methods

    public synchronized void randomize(int iRange) {
        int iBase = 1;

        if (iRange &lt;= 0) {
            return;
        }
        for (; iBase &lt; iRange; iBase &lt;&lt;= 1) {
        }
        reset(iBase);
    }

    public int incdec(int iA, int iSet, int iBaseMask) {
        switch (iSet) {
        case 0:
            return INC(iA, iBaseMask);
        case 1:
            return DEC(iA, iBaseMask);
        case 2:
            return INC(iA, iBaseMask);
        case 3:
            return DEC(iA, iBaseMask);
        default:
            return 0;
        }
    }

    public int rolror(int iA, int iSet, int iBaseMask) {
        switch (iSet) {
        case 0:
            return ROL(iA, iBaseMask);
        case 1:
            return ROL(iA, iBaseMask);
        case 2:
            return ROR(iA, iBaseMask);
        case 3:
            return ROR(iA, iBaseMask);
        default:
            return 0;
        }
    }

    public synchronized int next(int iRange) {
        int iResult = iRange;
        int iBase = 1;

        for (; iBase &lt; iRange; iBase &lt;&lt;= 1) {
        }
        if ((iKey == null) || (iUniqueSeed &gt;= iBase)) {
            reset(iBase);
        }
        int iBaseMask = iBase - 1;
        for (int i = 0; (i &lt; iBase) &amp;&amp; (iResult &gt;= iRange); ++i) {
            iUniqueSeed = (++iUniqueSeed) % iBase;
            iResult = iUniqueSeed;
            for (int i1 = 0; i1 &lt; iKey.length; ++i1) {
                iResult = XOR(iResult, iKey[i1], iBaseMask);
                for (int i2 = iKey[i1] | iBase; i2 &gt; 1; i2 &gt;&gt;&gt;= 1) {
                    if ((i2 &amp; 1) == 1) {
                        iResult = incdec(iResult, iSet, iBaseMask);
                    } else {
                        iResult = rolror(iResult, iSet, iBaseMask);
                    }
                }
            }
        }
        return iResult;
    }

    public synchronized int prev(int iRange) {
        int iResult = iRange;
        int iBase = 1;

        if (iRange &lt;= 0) {
            return 0;
        }
        for (; iBase &lt; iRange; iBase &lt;&lt;= 1) {
        }
        if ((iKey == null) || (iUniqueSeed &gt;= iBase)) {
            reset(iBase);
        }
        int iBaseMask = iBase - 1;
        for (int i = 0; (i &lt; iBase) &amp;&amp; (iResult &gt;= iRange); ++i) {
            iUniqueSeed = (--iUniqueSeed) % iBase;
            iResult = iUniqueSeed;
            for (int i1 = 0; i1 &lt; iKey.length; ++i1) {
                iResult = XOR(iResult, iKey[i1], iBaseMask);
                for (int i2 = iKey[i1] | iBase; i2 &gt; 1; i2 &gt;&gt;&gt;= 1) {
                    if ((i2 &amp; 1) == 1) {
                        iResult = incdec(iResult, iSet, iBaseMask);
                    } else {
                        iResult = rolror(iResult, iSet, iBaseMask);
                    }
                }
            }
        }
        return iResult;
    }

    public synchronized int random(int iRange) {
        randomize(iRange);
        return iKey[iKey.length - 1];
    }

    // .

    public static void main(String[] args) {
        Xincrol oXincrol = new Xincrol();
        int iRange = 10;
        int iTries = 100;
        int iValueStringLength = ("""" + (iRange - 1)).length();
        int[] iTest = new int[iRange];
        for (int i1 = 0; i1 &lt; iTries; ++i1) {
            for (int i2 = 0; i2 &lt; iRange; ++i2) {
                // Printing progress
                if (i2 == 0) {
                    System.out.print("""" + (i1 * 100 / iTries) + ""%, "" + i1
                            + "": "");
                }
                // Generating
                iTest[i2] = oXincrol.next(iRange);
                // Printing values
                String s = """" + iTest[i2];
                for (; s.length() &lt; iValueStringLength; s = "" "" + s) {
                }
                System.out.print(s);
                // Printing end of line
                if (i2 == iRange - 1) {
                    System.out.println();
                    // Testing for successful generation
                    boolean bSuccess = false;
                    for (int i3 = 0; i3 &lt; iTest.length; ++i3) {
                        bSuccess = false;
                        for (int i4 = 0; i4 &lt; iTest.length; ++i4) {
                            if (iTest[i4] == i3) {
                                bSuccess = true;
                            }
                        }
                        if (!bSuccess) {
                            System.out.println(""Error!!!"");
                            System.exit(1);
                        }
                    }
                    // Randomizing for the next line
                    System.out.flush();
                    oXincrol.randomize(iRange);
                } else {
                    System.out.print("","");
                }
            }
        }
        System.out.println(""Success!!!"");
    }
}
</code></pre>
"
29903448,"<pre><code>qlist=dao.getdistinctquestion();
            System.out.println(qlist);
            List&lt;QuestionMaster&gt; alist = new ArrayList&lt;QuestionMaster&gt;();
            int i=1, c=0;  String sub="""";
            for( QuestionMaster qq:qlist){
                System.out.println(""element:""+qq.getSubject());
                if(i==1){
                    c=1;   // sub = qq.getSubject();
                }
                else
                if (qq.getSubject().equals(sub)==false){
                    QuestionMaster ss = new QuestionMaster();
                    ss.setSubject(sub);
                    ss.setTag(""""+c);
                    alist.add(ss);
                    c=1;
                }
                else
                    c++;
                sub=qq.getSubject();
                i++;
            }
            QuestionMaster ss = new QuestionMaster();
                ss.setSubject(sub);
                ss.setTag(""""+c);
                alist.add(ss);


            qlist=alist;
</code></pre>

<p>======================================================================</p>

<pre><code>for(Object im:list){
            Object[] a=(Object[]) im;
            System.out.println(""subject =""+a[0]+""total questions =""+a[1]);

        }
</code></pre>
"
30200361,"<p>Check this </p>

<pre><code>public class RandomNumbers {

    public static void main(String[] args) {
        // TODO Auto-generated method stub
        int n = 5;
        int A[] = uniqueRandomArray(n);
        for(int i = 0; i&lt;n; i++){
            System.out.println(A[i]);
        }
    }
    public static int[] uniqueRandomArray(int n){
        int [] A = new int[n];
        for(int i = 0; i&lt; A.length; ){
            if(i == A.length){
                break;
            }
            int b = (int)(Math.random() *n) + 1;
            if(f(A,b) == false){
                A[i++] = b;
            } 
        }
        return A;
    }
    public static boolean f(int[] A, int n){
        for(int i=0; i&lt;A.length; i++){
            if(A[i] == n){
                return true;
            }
        }
        return false;
    }
}
</code></pre>
"
17117620,"<p>Alternatively, if you don't want to deal with threads, try this method:</p>

<pre><code>public static void pause(int seconds){
    Date start = new Date();
    Date end = new Date();
    while(end.getTime() - start.getTime() &lt; seconds * 1000){
        end = new Date();
    }
}
</code></pre>

<p>It starts when you call it, and ends when the number of seconds have passed.</p>
"
30349258,"<pre><code>String value = someMethod();
switch(0) {
default:
    if (""apple"".equals(value)) {
        method1();
        break;
    }
    if (""carrot"".equals(value)) {
        method2();
        break;
    }
    if (""mango"".equals(value)) {
        method3();
        break;
    }
    if (""orance"".equals(value)) {
        method4();
        break;
    }
}
</code></pre>
"
18034702,"<pre><code>public static TreeMap&lt;String, String&gt; sortMap(HashMap&lt;String, String&gt; passedMap, String byParam) {
    if(byParam.trim().toLowerCase().equalsIgnoreCase(""byValue"")) {
        // Altering the (key, value) -&gt; (value, key)
        HashMap&lt;String, String&gt; newMap =  new HashMap&lt;String, String&gt;();
        for (Map.Entry&lt;String, String&gt; entry : passedMap.entrySet()) {
            newMap.put(entry.getValue(), entry.getKey());
        }
        return new TreeMap&lt;String, String&gt;(newMap);
    }
    return new TreeMap&lt;String, String&gt;(passedMap);
}
</code></pre>
"
18278087,"<p>It can be rendered as the following table:</p>

<pre><code>&lt;table class=""machine"" name=""""&gt;
   &lt;tr&gt;
     &lt;th class=""partdescriptor"" colspan=""2""&gt;
     &lt;th class=""part"" colspan=""4""&gt;
   &lt;/tr&gt;
   &lt;tr&gt;
     &lt;td class=""partdescriptor group""&gt;&lt;/td&gt;
     &lt;td class=""partdescriptor"" id=""""&gt;&lt;/td&gt;
     &lt;td class=""part group""&gt;&lt;/td&gt;
     &lt;td class=""part"" id=""""&gt;&lt;/td&gt;
     &lt;td class=""description""&gt;&lt;/td&gt;
     &lt;td class=""compat""&gt;&lt;/td&gt;
    &lt;/tr&gt;
 &lt;/table&gt;
</code></pre>

<p>The markup decomposes into the following JSON object due to the lack of metadata via attributes:</p>

<pre><code>{
    ""objectHTMLTableElement"": [
        {
            ""classname"": ""machine"",
            ""name"": """"
        },
        {
            ""tr"": [
                {
                    ""HTMLTableCellElement"": {""classname"":""partdescriptor"",""colspan"":2}
                },
                {
                    ""HTMLTableCellElement"": {""classname"":""part"",""colspan"":4}
                }
            ]
        },
        {
            ""tr"": [
                {
                    ""HTMLTableCellElement"": {""classname"":""partdescriptor group""}
                },
                {
                    ""HTMLTableCellElement"": {""classname"":""partdescriptor"",""id"":""""}
                },
                {
                    ""HTMLTableCellElement"": {""classname"":""part"",""id"":""""}
                },
                {
                    ""HTMLTableCellElement"": {""classname"":""description""}
                },
                {
                    ""HTMLTableCellElement"": {""classname"":""compat""}
                }
            ]
        }
    ]
}
</code></pre>

<p>Alternatively, Unicode can simplify the mapping:</p>

<pre><code>{""name"":"""",""[{\u0022group\u0022:\u0022\u0022},{\u0022id\u0022:\u0022\u0022}]"":
 [
 {""group"":""""},
 {""id"":""""},
 {""description"":""""},
 {""compat"":""""}
 ]
}
</code></pre>

<p>Which can be stringified:</p>

<pre><code>JSON.stringify({""name"":"""",""[{\u0022group\u0022:\u0022\u0022},{\u0022id\u0022:\u0022\u0022}"":[{""group"":""""},{""id"":""""},{""description"":""""},{""compat"":""""}]})
</code></pre>

<p>to produce:</p>

<pre><code>""{\""name\"":\""\"",\""[{\\\""group\\\"":\\\""\\\""},{\\\""id\\\"":\\\""\\\""}]\"":[{\""group\"":\""\""},{\""id\"":\""\""},{\""description\"":\""\""},{\""compat\"":\""\""}]}""
</code></pre>

<p>which can be parsed:</p>

<pre><code>JSON.parse(""{\""name\"":\""\"",\""[{\\\""group\\\"":\\\""\\\""},{\\\""id\\\"":\\\""\\\""}]\"":[{\""group\"":\""\""},{\""id\"":\""\""},{\""description\"":\""\""},{\""compat\"":\""\""}]}"")
</code></pre>

<p>to produce an object literal:</p>

<pre><code>({name:"""", '[{""group"":""""},{""id"":""""}]':[{group:""""}, {id:""""}, {description:""""}, {compat:""""}]})
</code></pre>
"
18510775,"<p>//in pure c++</p>

<pre><code>int pos = 0;
for ( int i = 0; i &lt; N; ++i ) // N = nth position
{
  pos = STRING.find( delim, pos + size_of_delim );
}
</code></pre>
"
19141103,"<pre><code>import java.util.Arrays;

public class MergeTwoArrays {

    static int[] arr1=new int[]{1,3,4,5,7,7,9,11,13,15,17,19};
    static int[] arr2=new int[]{2,4,6,8,10,12,14,14,16,18,20,22};

    public static void main(String[] args){
        int FirstArrayLocation =0 ;
        int SecondArrayLocation=0;
        int[] mergeArr=new int[arr1.length + arr2.length];

        for ( int i=0; i&lt;= arr1.length + arr2.length; i++){
            if (( FirstArrayLocation &lt; arr1.length ) &amp;&amp; (SecondArrayLocation &lt; arr2.length)){
                if ( arr1[FirstArrayLocation] &lt;= arr2[SecondArrayLocation]){
                    mergeArr[i]=arr1[FirstArrayLocation];
                    FirstArrayLocation++;
                }else{
                    mergeArr[i]=arr2[SecondArrayLocation];
                    SecondArrayLocation++;
                }
            }
            else if(SecondArrayLocation &lt; arr2.length){
                    mergeArr[i]=arr2[SecondArrayLocation];
                    SecondArrayLocation++;
            }else if ( FirstArrayLocation &lt; arr1.length ){
                    mergeArr[i]=arr1[FirstArrayLocation];
                    FirstArrayLocation++;
            }
        }
    }
}
</code></pre>
"
19359847,"<p>I had the same problem. To fix it in Jboss 7 AS, I copy the oracle driver jar file to Jboss module folder. Example: <code>../jboss-as-7.1.1.Final/modules/org/hibernate/main</code>.</p>

<p>You also need to change ""module.xml""</p>

<pre><code>&lt;module xmlns=""urn:jboss:module:1.1"" name=""org.hibernate""&gt;
&lt;resources&gt;
    &lt;resource-root path=""hibernate-core-4.0.1.Final.jar""/&gt;
    &lt;resource-root path=""hibernate-commons-annotations-4.0.1.Final.jar""/&gt;
    &lt;resource-root path=""hibernate-entitymanager-4.0.1.Final.jar""/&gt;
    &lt;resource-root path=""hibernate-infinispan-4.0.1.Final.jar""/&gt;
    &lt;resource-root path=""ojdbc6.jar""/&gt;
&lt;/resources&gt;

&lt;dependencies&gt;
    &lt;module name=""asm.asm""/&gt;
    &lt;module name=""javax.api""/&gt;
    &lt;module name=""javax.persistence.api""/&gt;
    &lt;module name=""javax.transaction.api""/&gt;
    &lt;module name=""javax.validation.api""/&gt;
    &lt;module name=""org.antlr""/&gt;
    &lt;module name=""org.apache.commons.collections""/&gt;
    &lt;module name=""org.dom4j""/&gt;
    &lt;module name=""org.infinispan"" optional=""true""/&gt;
    &lt;module name=""org.javassist""/&gt;
    &lt;module name=""org.jboss.as.jpa.hibernate"" slot=""4"" optional=""true""/&gt;
    &lt;module name=""org.jboss.logging""/&gt;
    &lt;module name=""org.hibernate.envers"" services=""import"" optional=""true""/&gt;
&lt;/dependencies&gt;
</code></pre>

<p></p>
"
19366597,"<p>If you choose to work with Joda DateTime objects on your server and want to serialize to ISO8601 you could use <a href=""https://github.com/FasterXML/jackson-datatype-joda"" rel=""nofollow"">Jackson's JodaModule</a>. You can register a Jersey Provider as follows:</p>

<pre><code>import javax.ws.rs.ext.ContextResolver;
import javax.ws.rs.ext.Provider;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.datatype.joda.JodaModule;

@Provider
public class MyObjectMapperProvider implements ContextResolver&lt;ObjectMapper&gt; {

  final ObjectMapper objectMapper;

  public MyObjectMapperProvider() {
    objectMapper = new ObjectMapper();
    /* Register JodaModule to handle Joda DateTime Objects. */
    objectMapper.registerModule(new JodaModule());
    /* We want dates to be treated as ISO8601 not timestamps. */
    objectMapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);
  }

  @Override
  public ObjectMapper getContext(Class&lt;?&gt; arg0) {
    return objectMapper;
  }
}
</code></pre>

<p>More information available on <a href=""https://jersey.java.net/documentation/latest/user-guide.html#json.jackson"" rel=""nofollow"">Jersey's website</a>.</p>
"
20091021,"<p>this is current directory name    </p>

<pre><code>String path=""/home/prasad/Desktop/folderName"";
File folder = new File(path);
String folderName=folder.getAbsoluteFile().getName();
</code></pre>

<p>this is current directory path</p>

<pre><code>String path=folder.getPath();
</code></pre>
"
20759491,"<p>Try this:</p>

<pre><code>import java.util.Scanner;

    /* Logic: Consider first character in the string and start counting occurrence of        
              this character in the entire string. Now add this character to a empty
              string ""temp"" to keep track of the already counted characters.
              Next start counting from next character and start counting the character        
              only if it is not present in the ""temp"" string( which means only if it is
              not counted already)
public class Counting_Occurences {

    public static void main(String[] args) {


        Scanner input=new Scanner(System.in);
        System.out.println(""Enter String"");
        String str=input.nextLine();

        int count=0;
        String temp=""""; // An empty string to keep track of counted
                                    // characters


        for(int i=0;i&lt;str.length();i++)
        {

            char c=str.charAt(i);  // take one character (c) in string

            for(int j=i;j&lt;str.length();j++)
            {

                char k=str.charAt(j);  
    // take one character (c) and compare with each character (k) in the string
            // also check that character (c) is not already counted.
            // if condition passes then increment the count.
                if(c==k &amp;&amp; temp.indexOf(c)==-1)                                                                          
                {

                    count=count+1;

                }

            }

             if(temp.indexOf(c)==-1)  // if it is not already counted
             {


            temp=temp+c; // append the character to the temp indicating
                                         // that you have already counted it.

System.out.println(""Character   "" + c + ""   occurs   "" + count + ""    times"");
             }  
            // reset the counter for next iteration 
              count=0;

        }


    }


}
</code></pre>
"
21047201,"<p>I think what you are looking for is this:</p>

<p>public class Ques2 {</p>

<pre><code>/**
 * @param args the command line arguments
 */
public static void main(String[] args) throws IOException {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String input = br.readLine().toLowerCase();
    StringBuilder result = new StringBuilder();
    char currentCharacter;
    int count;

    for (int i = 0; i &lt; input.length(); i++) {
        currentCharacter = input.charAt(i);
        count = 1;
        while (i &lt; input.length() - 1 &amp;&amp; input.charAt(i + 1) == currentCharacter) {
            count++;
            i++;
        }
        result.append(currentCharacter);
        result.append(count);
    }

    System.out.println("""" + result);
}
</code></pre>

<p>}</p>
"
21169259,"<p>This is probably the best answer you'll find:</p>

<pre><code>while(True){
    System.out.println(""\""Hello\"""");
}
</code></pre>
"
21256042,"<pre><code>public static void main(String[] args) throws IOException
    {
        //String s1=""parasanna"";
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        System.out.println(""enter string:"");
        String s1 = br.readLine();
        StringBuffer sb=new StringBuffer(s1);

        while(sb.length() != 0)
        {
           char c = sb.charAt(0);
           int cnt = 0;
           for(int i=0; i&lt; sb.length(); i++)
           {
           if(c == sb.charAt(i))
           {
               cnt++;
               sb.deleteCharAt(i);
               i--;
           }

           }

           System.out.println(c + ""     occurance is:"" + cnt);
        }

    }
</code></pre>
"
21586283,"<pre><code>import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map.Entry;

public class CollectionsSort {

    /**
     * @param args
     */`enter code here`
    public static void main(String[] args) {
        // TODO Auto-generated method stub

        CollectionsSort colleciotns = new CollectionsSort();

        List&lt;combine&gt; list = new ArrayList&lt;combine&gt;();
        HashMap&lt;String, Integer&gt; h = new HashMap&lt;String, Integer&gt;();
        h.put(""nayanana"", 10);
        h.put(""lohith"", 5);

        for (Entry&lt;String, Integer&gt; value : h.entrySet()) {
            combine a = colleciotns.new combine(value.getValue(),
                    value.getKey());
            list.add(a);
        }

        Collections.sort(list);
        for (int i = 0; i &lt; list.size(); i++) {
            System.out.println(list.get(i));
        }
    }

    public class combine implements Comparable&lt;combine&gt; {

        public int value;
        public String key;

        public combine(int value, String key) {
            this.value = value;
            this.key = key;
        }

        @Override
        public int compareTo(combine arg0) {
            // TODO Auto-generated method stub
            return this.value &gt; arg0.value ? 1 : this.value &lt; arg0.value ? -1
                    : 0;
        }

        public String toString() {
            return this.value + "" "" + this.key;
        }
    }

}
</code></pre>
"
21659104,"<p>Simple code for reading file in JAVA:</p>

<pre><code>import java.io.*;

class ReadData
{
    public static void main(String args[])
    {
        FileReader fr = new FileReader(new File(""&lt;put your file path here&gt;""));
        while(true)
        {
            int n=fr.read();
            if(n&gt;-1)
            {
                char ch=(char)fr.read();
                System.out.print(ch);
            }
        }
    }
}
</code></pre>
"
22682116,"<p><strong>Service Provider Interface without a provider</strong></p>

<p>Let's see how it would look like without a provider.</p>

<pre><code>//Service interface
public interface Service {
  //Service specific methods here
}

//Class for service registration and access
public class Services {
  private Services(){}

  private static final Map&lt;String, Service&gt; services =
    new ConcurrentHashMap&lt;String, Service&gt;();
  public static final String DEFAULT_SERVICE_NAME = ""&lt;def&gt;"";

  //Registration
  public static void registerDefaultService(Provider p) {
    registerService(DEFAULT_SERVICE_NAME, p);
  }
  public static void registerService(String name, Provider p) {
    services.put(name, p);
  }

  //Access
  public static Service getInstance() {
    return newInstance(DEFAULT_SERVICE_NAME);
  }
  public static Service getInstance(String name) {
     // you get the point..lookup in the map the service by name
     // and return it;
  }
</code></pre>

<p>As you see, it's possible to create a Service Provider Interface without a <em>Provider interface</em>. Callers of <code>#getInstance(..)</code> eventually wouldn't notice a difference.</p>

<p><strong>Then why do we need a provider?</strong></p>

<p>The <code>Provider</code> interface is an <a href=""http://en.wikipedia.org/wiki/Abstract_factory_pattern"" rel=""nofollow"">Abstract Factory</a> and <code>Services#newInstance(String)</code> is a <a href=""http://en.wikipedia.org/wiki/Factory_method_pattern"" rel=""nofollow"">Factory Method</a>. Both design patterns have the advantage that they decouple service implementation from service registration.</p>

<p><a href=""http://en.wikipedia.org/wiki/Single_responsibility_principle"" rel=""nofollow""><strong>Single responsibility principle</strong></a></p>

<p>Instead of implementing the service instantiation in a startup event handler, which registers all services, you create one provider per service. This makes it loosely coupled and easier to refactor, because Service and Service Provider could be put near to each other, for example into another JAR-file.</p>

<p>""Factory methods are common in toolkits and frameworks, where library code needs to create objects of types that may be subclassed by applications using the framework."" <a href=""http://en.wikipedia.org/wiki/Factory_method_pattern"" rel=""nofollow"">[1]</a></p>

<p><strong>Lifetime management</strong>:</p>

<p>You might have realized in the upper code without providers, that we're registering service <em>instances</em> instead of a provider, which could decide to instantiate a new service instance.</p>

<p>This approach has some disadvantages:</p>

<p>1. Service instances have to be created before the first service call. Lazy initialization isn't possible. This will delay startup and bind resources to services which are rarely used or even never.</p>

<p>1b. You ""cannot"" close services after usage, because there is no way to reinstantiate them. (With a provider you could design the <em>service interface</em> in a way that the caller has to call <code>#close()</code>, which informs the provider and the provider decides to keep or finalize the service instance.)</p>

<p>2. All callers will use the same service instance, therefore you have to make sure that it's thread-safe. But making it thread-safe will make it slow. In contrary a provider might choose to create a couple of service instances to reduce retention time.</p>

<p><strong>Conclusion</strong></p>

<p>A provider interface isn't required, but it encapsulates service-specific instantiation logic and optimizes resource allocation.</p>
"
22934933,"<p>add in your pom</p>

<pre><code>    &lt;dependency&gt;
         &lt;groupId&gt;commons-discovery&lt;/groupId&gt;
         &lt;artifactId&gt;commons-discovery&lt;/artifactId&gt;
         &lt;version&gt;0.5&lt;/version&gt;
         &lt;scope&gt;test&lt;/scope&gt; 
    &lt;/dependency&gt;
</code></pre>

<p>Addition to the classPath jar necessary goes</p>
"
24753721,"<p>you can use Jsch library. This is maven dependency</p>

<pre><code>     &lt;dependency&gt;
        &lt;groupId&gt;com.jcraft&lt;/groupId&gt;
        &lt;artifactId&gt;jsch&lt;/artifactId&gt;
        &lt;version&gt;0.1.51&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre>

<p>And this is sample code.</p>

<pre><code>@Test
    public void sftpClientTest() throws JSchException {

        JSch jsch = new JSch();

        Session session = jsch.getSession( ""root"", ""hostname"", 2port );
        java.util.Properties config = new java.util.Properties();
        config.put(""StrictHostKeyChecking"", ""no"");
        config.put(""PreferredAuthentications"",""password"");
        session.setConfig(config);

        session.setPassword( ""1234"" );
        session.connect( 60000 );
        com.jcraft.jsch.Channel channel = session.openChannel(""sftp"");
        ChannelSftp sftp = ( ChannelSftp ) channel;
        sftp.connect( 60000 );
        System.out.println(""bağlantı sağlandı"");
        sftp.disconnect();
        System.out.println(""bağlantı sonlandı"");

    }
</code></pre>
"
24847136,"<pre><code>((JLabel)mTabBOM.getTableHeader().getDefaultRenderer()).setHorizontalAlignment( JLabel.CENTER );
</code></pre>
"
24865738,"<p>add <code>@@XmlRootElement</code> before your class Region</p>
"
24982996,"<p>You can try with bubble sort: Example shown below</p>

<pre><code>int[] numbers = { 4, 7, 20, 2, 56 };
int temp;

for (int i = 0; i &lt; numbers.length; i++)
{
       for(int j = 0; j &lt; numbers.length; j++)
       {
                if(numbers[i] &gt; numbers[j + 1])
                {
                            temp = numbers [j + 1];
                            numbers [j + 1]= numbers [i];
                            numbers [i] = temp;
                }
        }
}

for (int i = 0; i &lt; numbers.length; i++)
{
         System.out.println(numbers[i].toString());
}
</code></pre>
"
25063503,"<p>My solution using a combination of the answers above, 
my goal was to start a .jar file which is named CombatLogReader.jar, along with the game 
Star Trek Online.exe via a command prompt. 
at first i was typeing in Start """" """"C:\Program Files (x86)\Steam\SteamApps\common\Star Trek Online\CombatLogReader\CombatLogReader.jar""  but the file would not start, while researching why i could start the file manualy but not via cmd. my research got me here, </p>

<p>i modified my bat file to point to the java directory </p>

<p>This is how my bat file looks</p>

<pre><code>@echo off
rem Star Trek Online
START """" ""C:\Program Files (x86)\Steam\SteamApps\common\Star Trek Online\Star Trek Online.exe"" 
rem CombatLogReader
CD ""C:\Program Files (x86)\Java\jre7\bin""
javaw.exe -jar ""C:\Program Files (x86)\Steam\SteamApps\common\Star Trek Online\CombatLogReader\CombatLogReader.jar""
exit
</code></pre>

<p>and it works, now every thing i need starts with just one icon 
the command prompt dose stay open untell combatlogreader is clsoed, but it dose not interupt the operation of any thing</p>

<p>Kudo's to everyone, who posted niplets of answers, </p>
"
25171100,"<pre><code>float a[] = {1.0f,3.0f,5.0f,6.0f,7.0f,10.0f,11.0f,3.2f,4.0f};

float first =0.0f;
float second=0.0f;
float third =0.0f;
for (int i=0; i&lt;a.length; i++){
    if(first &lt; a[i]){
        first=a[i];
    }
}
System.out.println(""first largest is ""+first);
for (int j=0; j&lt;a.length; j++){
    if(a[j] &lt;first &amp;&amp; a[j] &gt; second){
        second = a[j];
    }
}
System.out.println(""second largest is ""+second);
for (int k=0;k&lt;a.length; k++){
    if(a[k]&lt;second &amp;&amp; a[k]&gt;third){
        third =a[k];
    }
}
System.out.println(""third largest is ""+third);
</code></pre>
"
26173221,"<pre><code>BufferedReader br = new BufferedReader(new FileReader(file));
String line;
while ((line = br.readLine()) != null) {
// process the line.
}
br.close(); // close bufferreader after use
</code></pre>
"
26425568,"<ul>
<li><code>public</code> : it is a access specifier that means it will be accessed by publically.</li>
<li><code>static</code> : it is access modifier that means when the java program is load then it will create the space in memory automatically.</li>
<li><code>void</code> : it is a return type i.e it does not return any value.</li>
<li><code>main()</code> : it is a method or a function name.</li>
<li><code>string args[]</code> : its a command line argument it is a collection of variables in the string format.</li>
</ul>
"
26901261,"<p>From intelliJ IDEA, simply go to <code>Run</code> -><code>Stop</code>.</p>

<p>This will stop the server as well if you are not able to change the port number</p>
"
27186915,"<p>i have check in java version 1.6.0_32 multiple main method is working but there should one main method like public static void main(String []args) of type signature. Ex is here which i had tested.</p>

<pre><code>public class mainoverload
{
public static void main(String a)
{
    System.out.println(""\nIts ""+a);
}
public static void main(String args[])
{
    System.out.println(""\nIts public static void main\n"");
    mainoverload.main(""Ankit"");
    mainoverload.main(15,23);
    mainoverload.main(15);
}
public static void main(int a)
{
    System.out.println(""\nIts ""+a);
}
public static void main(int a,int b)
{
    System.out.println(""\nIts ""+a+"" ""+b);
}
}    
</code></pre>
"
27435889,"<p>Just use math:</p>

<pre class=""lang-java prettyprint-override""><code>public int invertInt(int arg1) { // Invert negative and positive
    return arg1-arg1*2;
}
</code></pre>

<p>If you need to change specifically:</p>

<pre class=""lang-java prettyprint-override""><code>public int toNegative(int arg1) { // Change to negative
    if (arg1 &gt;= 0) {
        // Its positive so we invert
        return arg1-arg1*2;
    } else {
        return arg1;
    }
}
public int toPositive(int arg1) { // Change to negative
    if (arg1 &lt;= 0) {
        // Its negative so we invert
        return arg1-arg1*2;
    } else {
        return arg1;
    }
}
</code></pre>
"
27760556,"<p><code>System.getProperty(""java.class.path"")</code></p>
"
28390007,"<p>Since you know the chars are lower case, you can subtract the according ASCII value to make them uppercase:</p>

<pre><code>char a = 'a';
a -= 32;
System.out.println(""a is "" + a); //a is A
</code></pre>

<p>Here is an <a href=""https://www.cs.cmu.edu/~pattis/15-1XX/common/handouts/ascii.html"" rel=""nofollow"">ASCII table</a> for reference</p>
"
28935434,"<pre><code>if(str.isEmpty() || str.trim().length() == 0){
   return 0;
}
return (str.trim().split(""\\s+"").length);
</code></pre>
"
28945684,"<p>The solution is actually quite simple (pure, simple Java):</p>

<pre><code>System.out.println("" NZ Local Time: 2011-10-06 03:35:05"");
DateTimeFormatter formatter = DateTimeFormatter.ofPattern(""yyyy-MM-dd HH:mm:ss"");
LocalDateTime localNZ = LocalDateTime.parse(""2011-10-06 03:35:05"",formatter);
ZonedDateTime zonedNZ = ZonedDateTime.of(localNZ,ZoneId.of(""+13:00""));
LocalDateTime localUTC = zonedNZ.withZoneSameInstant(ZoneId.of(""UTC"")).toLocalDateTime();
System.out.println(""UTC Local Time: ""+localUTC.format(formatter));
</code></pre>

<p>OUTPUT IS:</p>

<pre><code> NZ Local Time: 2011-10-06 03:35:05
UTC Local Time: 2011-10-05 14:35:05
</code></pre>
"
29004057,"<p>Try this out:</p>

<pre><code>package mypack;
import java.util.List;

import org.openqa.selenium.By;

import mypackage.WebDriver;

import org.openqa.selenium.firefox.FirefoxDriver;

@SuppressWarnings(""unused"")
public class classnew {

    private static FirefoxDriver driver;

    public static void main(String[] args) {
        //String baseUrl = ""http://newtours.demoaut.com/"";
      FirefoxDriver Firefoxdriver = new FirefoxDriver();

        driver = null;
        driver.get(""http://newtours.demoaut.com"");

        String linkText1 = driver.findElement(By.partialLinkText(""egis"")).getText();
        System.out.println(linkText1);
        String linkText2 = driver.findElement(By.partialLinkText(""EGIS"")).getText();
        System.out.println(linkText1);  
        driver.quit();
    }
}
</code></pre>
"
29217099,"<p>Let me know if this works:</p>

<pre><code>public class prog1 {
    public static void main (String args[]){
        int a[] = {1,22,5,16,7,9,12,16,18,30};

        for(int b=0; b&lt;=a.length;b++){
            for(int c=0; c&lt;=a.length-2;c++){
                if(a[c]&gt;a[c+1]){

                    int temp=0;
                    temp=a[c];

                    a[c]=a[c+1];
                    a[c+1]=temp;
                }
            }

        }
        for(int b=0;b&lt;a.length;b++){
            System.out.println(a[b]);
        }
    }
}
</code></pre>
"
29890463,"<p>Try:</p>

<pre><code>try
{
    int cnt= m.getSmartPhoneCount(""HTC"",true);      
    System.out.println(""total count of HTC=""+cnt);
}  
catch (NoSuchBrandSmartPhoneAvailableException e)
{
    // TODO Auto-generated catch 
    e.printStackTrace();
}
</code></pre>
"
29890601,"<pre><code> SmartPhone[] sp=new SmartPhone[4];
 sp[0]=new SmartPhone(1,""HTC"",""desire"",""black"",20000,10,true,true);
 sp[1]=new SmartPhone(2,""samsung"",""grand"",""black"",5000,10,false,true);
 sp[2]=new SmartPhone(14,""google nexus"",""desire"",""black"",2000,30,true,false);
 sp[3]=new SmartPhone(13,""HTC"",""desire"",""white"",50000,40,false,false);
</code></pre>
"
29890619,"<pre><code>while (itr.hasNext()) {
    Vehicle vc=(Vehicle) itr.next();
    if(vc.getVehicleType().equalsIgnoreCase(s)) {
        count++;
    }
}
</code></pre>
"
30218490,"<p>for mac user .
java 8  should  add</p>

<pre><code>export JAVA_HOME=`/usr/libexec/java_home -v 1.8`
# JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_05.jdk/Contents/Home
</code></pre>

<p>java 6 :</p>

<pre><code>export JAVA_HOME=`/usr/libexec/java_home -v 1.6`
# JAVA_HOME=/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home
</code></pre>

<p>ref :<a href=""http://qiita.com/seri_k/items/e978c1339ce51f13e297"" rel=""nofollow"">http://qiita.com/seri_k/items/e978c1339ce51f13e297</a></p>
"
14624614,"<p>It is indeed safe is <code>UnsafeLazyInitialization.resource</code> is immutable, i.e. the field is declared as final:</p>

<pre><code>private static final Resource resource = new Resource();
</code></pre>

<p>It might also be considered as thread-safe if the <code>Resource</code> class itself is immutable and does not matter which instance you are using. In that case two calls could return different instances of <code>Resource</code> without issue apart from an increased memory consumption depending on the number of threads calling <code>getInstance()</code> at the same time).</p>

<p>It seems far-fetched though and I believe there is a typo, real sentence should be</p>

<blockquote>
  <p>UnsafeLazyInitialization is actually safe if *<em>r</em>*esource is
  immutable.</p>
</blockquote>
"
11306855,"<p>The following will not give you the calling class but the class which contains the code. Maybe it helps:</p>

<pre><code>this.getClass();
</code></pre>
"
9482551,"<p>Write a loop which uses a <code>Iterator.next()</code> 100 times, and then stops.</p>

<p>I was going to say something about <code>NavigableMap</code> and <code>SortedMap</code> - but their interfaces are defined in terms of keys, not indexes. But they may be useful nevertheless, depending on what your actual underlying problem is.</p>
"
14707381,"<p>You have to initate your Array, for example:</p>

<pre><code>int PrimeList[] = new int[3]
</code></pre>
"
14558971,"<p>You could take a look at <a href=""http://www.yourkit.com/"" rel=""nofollow"">Yourkit</a> (commercial software), which can monitor memory, CPU and many more. It has special view that show how much time was spent in methods (for example you can see that 40% of the execution time was spent in method <code>xyz()</code>).</p>
"
14707454,"<p>I think You have not intialize both your variables <code>int Prime;</code> and <code>int PrimeList[];</code></p>

<p>Initialize them as </p>

<pre><code>int Prime = 0;
int PrimeList[] = new PrimeList[10];
</code></pre>
"
14870361,"<pre><code>{   
int LowerLeftSide;
if ((BRICK_WIDTH / 2) == 0) {
     LowerLeftSide = ((getWidth()/2) - (BRICK_WIDTH*(BRICKS_IN_BASE/2)));
} else {
     LowerLeftSide = ((getWidth()/2) - (BRICK_WIDTH*(BRICKS_IN_BASE/2-1)));
}
</code></pre>
"
11340371,"<p>I would ensure the stack is loaded in the order it needs without requiring a swap.
In term of optimising the code, I would suggest you try to produce code as close to what the <code>javac</code> generates as possible as this is what the JVM has been tuned to optimise.</p>

<p>If this is not possible, you can store the value in a local variable, push the <code>ref</code> and reload the value.</p>
"
9515589,"<pre><code>str.split("","");
</code></pre>

<p>then </p>

<pre><code>str.trim()
</code></pre>
"
9515628,"<p>What about the following:</p>

<pre><code>String a = ""abcd,fg;ijkl, cas"";
String[] result = a.split("",[ ]*"");
String expectedResult = result[result.length - 1]);
</code></pre>
"
14712927,"<p><code>UnsafeLazyInitialization.getInstance()</code> <strong>can never return null</strong>.</p>

<p>I'll use @assylias's table.</p>

<pre><code>                              Some Thread
---------------------------------------------------------------------
 10: resource = null; //default value                                  //write
=====================================================================
           Thread 1               |          Thread 2                
----------------------------------+----------------------------------
 11: a = resource;                | 21: x = resource;                  //read
 12: if (a == null)               | 22: if (x == null)               
 13:   resource = new Resource(); | 23:   resource = new Resource();   //write
 14: b = resource;                | 24: y = resource;                  //read
 15: return b;                    | 25: return y;    
</code></pre>

<p>I'll use the line numbers for Thread 1. Thread 1 sees the write on 10 before the read on 11, and the read on line 11 before the read on 14. These are <strong>intra-thread happens-before</strong> relationships and don't say anything about Thread 2. The read on line 14 returns a value defined by the JMM. Depending on the timing, it may be the Resource created on line 13, or it may be <strong>any</strong> value written by Thread 2. But that write has to happen-after the read on line 11. There is only one such write, the unsafe publish on line 23. The write to null on line 10 is not in scope because it happened before line 11 due to <strong>intra</strong>-thread ordering.</p>

<p>It doesn't matter if <code>Resource</code> is immutable or not. Most of the discussion so far has focused on inter-thread action where immutability would be relevant, but the reordering that would allow this method to return null is forbidden by <strong>intra</strong>-thread rules. The relevant section of the spec is <a href=""http://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html#jls-17.4.7"" rel=""nofollow"">JLS 17.4.7</a>.</p>

<blockquote>
  <p>For each thread t, the actions performed by t in A are the same as
  would be generated by that thread in program-order in isolation, with
  each write w writing the value V(w), given that each read r sees the
  value V(W(r)). Values seen by each read are determined by the memory
  model. The program order given must reflect the program order in which
  the actions would be performed according to the intra-thread semantics
  of P.</p>
</blockquote>

<p>This basically means that while reads and writes may be reordered, reads and writes to the <em>same</em> variable have to appear like they happen in order to the Thread that executes the reads and writes.</p>

<p>There's only a single write of null (on line 10). Either Thread can see its own copy of resource or the other Thread's, but it cannot see the earlier write to null <strong>after</strong> it reads either Resource.</p>

<p>As a side note, the initialization to null takes place in a separate thread. The section on Safe Publication in JCIP states:</p>

<blockquote>
  <p>Static initializers are executed by the JVM at class initialization
  time; because of internal synchronization in the JVM, this mechanism
  is guaranteed to safely publish any objects initialized in this way
  <a href=""http://docs.oracle.com/javase/specs/jls/se7/html/jls-12.html#jls-12.4.2"" rel=""nofollow"">[JLS 12.4.2]</a>.</p>
</blockquote>

<p>It may be worth trying to write a test that gets <code>UnsafeLazyInitialization.getInstance()</code> to return null, and that gets some of the proposed equivalent rewrites to return null. You'll see that they're not truly equivalent.</p>

<p><strong>EDIT</strong></p>

<p>Here's an example that separates reads and writes for clarity. Let's say there's a public static variable object.</p>

<pre><code>public static Object object = new Integer(0);
</code></pre>

<p>Thread 1 writes to that object:</p>

<pre><code>object = new Integer(1);
object = new Integer(2);
object = new Integer(3);
</code></pre>

<p>Thread 2 reads that object:</p>

<pre><code>System.out.println(object);
System.out.println(object);
System.out.println(object);
</code></pre>

<p>Without any form of synchronization providing inter-thread happens-before relationships, Thread 2 can print out lots of different things.</p>

<pre><code>1, 2, 3
0, 0, 0
3, 3, 3
1, 1, 3
etc.
</code></pre>

<p>But it cannot print out a decreasing sequence like 3, 2, 1. The intra-thread semantics specified in 17.4.7 severely limit reordering here. If instead of using <code>object</code> three times we changed the example to use three separate static variables, many more outputs would be possible because there would be no restrictions on reordering.</p>
"
11370346,"<pre><code>public class cleardir {
static String userprofile = System.getenv(""USERPROFILE"");
   private static final String FILE_DIR = userprofile+""\\Downloads\\Software_Tokens"";
   private static final String FILE_TEXT_EXT = "".sdtid"";

   public static void run(String args[]) {
    new cleardir().deleteFile(FILE_DIR,FILE_TEXT_EXT);
   }

   public void deleteFile(String folder, String ext){

     GenericExtFilter filter = new GenericExtFilter(ext);
     File dir = new File(folder);
     if (dir.exists()) { 
     //list out all the file name with .txt extension
     String[] list = dir.list(filter);

     if (list.length == 0) return;

     File fileDelete;

     for (String file : list){
    String temp = new StringBuffer(FILE_DIR)
                      .append(File.separator)
                      .append(file).toString();
        fileDelete = new File(temp);
        boolean isdeleted = fileDelete.delete();
        System.out.println(""file : "" + temp + "" is deleted : "" + isdeleted);
     }
   }
   }
   //inner class, generic extension filter 
   public class GenericExtFilter implements FilenameFilter {

       private String ext;

       public GenericExtFilter(String ext) {
         this.ext = ext;             
       }

       public boolean accept(File dir, String name) {
         return (name.endsWith(ext));
       }
    }
}
</code></pre>
"
14598991,"<p>You are copying bytes into char (which use twice the space) and back into bytes again.</p>

<pre><code>InputStream in = context.openFileInput(""data.txt"");
ByteArrayOutputStream bais = new ByteArrayOutputStream();
byte[] bytes = new byte[8192];
for(int len; (lne = in.read(bytes) &gt; 0;)
   bais.write(bytes, 0, len);
in.close();
return bais.toByteArray();
</code></pre>

<p>This will half your memory requirement but it can still mean you run out of memory.  In this case you have to either</p>

<ul>
<li>increase your maximum heap size</li>
<li>process the file progressively instead of all at once</li>
<li>use memory mapped files which allows you to ""load"" a file without using much heap.</li>
</ul>
"
9146276,"<p>As you didn't give us very much information, I'm assuming the language you're writing the code in is C#.
First of all: Prefer System.Collections.Generic.List over an ArrayList.
Secondly: One way would be to loop through every item in the list and check whether it contains ""How"". Another way would be to use LINQ. Here's a quick example that filters out every item which doesn't contain ""How"":</p>

<pre class=""lang-cs prettyprint-override""><code>var list = new List&lt;string&gt;();
list.AddRange(new string[] {
    ""How are you?"",
    ""How you doing?"",
    ""Joe"",
    ""Mike"", });

foreach (string str in list.Where(s =&gt; s.Contains(""How"")))
{
    Console.WriteLine(str);
}
Console.ReadLine();
</code></pre>
"
14599065,"<p>This solution will test the free memory before loading...</p>

<pre><code>File test = new File(""c:/tmp/example.txt"");

    long freeMemory = Runtime.getRuntime().freeMemory();
    if(test.length()&lt;freeMemory) {
        byte[] bytes = new byte[(int) test.length()];
        FileChannel fc = new FileInputStream(test).getChannel();
        MappedByteBuffer mbb = fc.map(FileChannel.MapMode.READ_ONLY, 0, (int) fc.size());

        while(mbb.hasRemaining()) {
            mbb.get(bytes);
        }
        fc.close();
    }
</code></pre>
"
14688848,"<p>I will base my response on the assumption that <strong>id</strong> is an int hence the comparison against 1 is proper and a compilation error is not in place. 
<a href=""http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.21.1"" rel=""nofollow"">==</a> is the equality operator in java as described in section <a href=""http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.21.1"" rel=""nofollow"">15.21.1</a> of the JLS. Being a boolean operator, == will output a <a href=""http://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.2.5"" rel=""nofollow"">boolean</a> value.
<a href=""http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.26.2"" rel=""nofollow"">=</a> is the java's assignment operator, in this particular case it's the <a href=""http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.26.2"" rel=""nofollow"">compound assignment operator</a> having the following syntax:</p>

<blockquote>
  <p>boolean f = (op1 op op2)</p>
</blockquote>

<p>In translation = assigns the output value of the <code>(op1 op op2)</code> operation to the left operand, in this case <strong>f</strong>. </p>

<p>Looking back to your sample, the output of <code>id == 1</code> (true if id has the value 1, false otherwise) is assigned to <strong>retry</strong>. </p>

<p>To conclude in plain english, your sample has the following meaning: <em>Retry as long as id has the value 1</em>. </p>
"
9600000,"<p>Why are you doing this in a try / catch, just use simple if</p>

<pre><code>if ( txtText != null ){
    ...
}
if ( txtLongText != null ){
    ...
} 
</code></pre>
"
9201933,"<p>When you declare your multi dimension array you don't get any objects created in your arrays. You need something like</p>

<pre><code>for(int i = 0; i &lt; dimensions; i++) {
    for(int j = 0; j &lt; dimensions; j++) {
        Board[i][j] = new Tile();
    }
}
</code></pre>
"
9622332,"<p>Yes, you can have 2 or more classes in single Java file.
The only condition is only one class will contain main method with signature(<code>public static void main(String[] args)</code>).
And only one public class will be there. And with that public class name you can save your file - the file name has to match the name of the public class.</p>
"
15009880,"<p>As the first answer, the form would be:</p>

<pre><code>List&lt;Integer&gt; auxList = originalList.subList(0, 3);
for(int i =0; i &lt; 3; i++) {originalList.remove(i);}
originalList.addAll(auxList);
</code></pre>
"
14836227,"<p>Use following code:</p>

<pre><code>SimpleDateFormat df = new SimpleDateFormat(""YYYY-MM-dd"");
Date date = new Date();
System.out.println(df.format(date));
</code></pre>

<p>It should be <code>dd</code> and not <code>DD</code>.</p>
"
15100885,"<p>you can use:</p>

<pre><code>stringToPrint = time.getMonth()+"" ""+time.getDate()+"" ""+time.getYear();
</code></pre>

<p>for more info:
<a href=""http://docs.oracle.com/javase/1.4.2/docs/api/java/util/Date.html"" rel=""nofollow"">http://docs.oracle.com/javase/1.4.2/docs/api/java/util/Date.html</a></p>
"
10007881,"<p>You are using Array of character not String(Although java has create String from Character of array but you should use String).
In String you can use replaceAll method like this - </p>

<pre><code> public class Test {
public void replaseSpaces(str) {
    str = str.replaceAll("" "",""%20"");
    System.out.println(str);
}

public static void main(String[] args) {
    Test tst = new Test();
   String str = ""the dog  "";
   tst.replaseSpaces(str, length);  
}
</code></pre>

<p>}</p>

<p>one more thing you can change Character Array to String and String to Character Array -</p>

<pre><code> char[] ch =str.toCharArray();
 ch.toString();
</code></pre>
"
15105921,"<p>The ++ operator does not exist in Python. Instead you could do:</p>

<pre><code>j += 1
if j == 9:
    return True
</code></pre>
"
15411525,"<p>In my opinion, you should use Pattern object, with a matcher you can extract your parameters. This code can help you :</p>

<pre><code>Pattern p = Pattern.compile(""Logged in as: (.)+ (Administrator)"", Pattern.CASE_INSENSITIVE);
Matcher m = p.matcher(myString);
if (m.find()) {
   return m.group(1);
}

else {
   System.out.println(""Not found !"");
}
</code></pre>

<p>Hope it will help :)</p>
"
11651844,"<p>When you print a integer, besides a string, it just acts like a string. However, if you did:</p>

<pre><code>System.out.println(1+1);
</code></pre>

<p>It would print out 2. This is because the integer is next to another.</p>

<p>If you did:</p>

<pre><code>System.out.println(""Test""+1+1);
</code></pre>

<p>It would print Test2. Because, you look at the addition of numbers first. Hope I helped.</p>
"
10102386,"<p>You can use <code>SwingUtilities.invokelater( ... )</code> to make updates to your UI while you are making some other calculations. In your case </p>

<pre><code>repaint() 
</code></pre>

<p>or even better </p>

<pre><code>revalidate();
repaint();
</code></pre>

<p>should be called inside the <code>invokeLater</code> runnable implementation.</p>
"
15136005,"<p>Maybe <a href=""http://www.mkyong.com/java/how-to-determine-a-prime-number-in-java/"" rel=""nofollow"">this</a> article can help you:</p>

<pre><code>boolean isPrime(int n) {
//check if n is a multiple of 2
if (n%2==0) return false;
//if not, then just check the odds
for(int i=3;i*i&lt;=n;i+=2) {
    if(n%i==0)
        return false;
}
return true;
}
</code></pre>
"
15277535,"<p>The jar was compiled to be <code>1.6</code>  compliant.  That is why you get this error.  Two resolutions:<br>
1) Use Java 1.6  </p>

<p>OR  </p>

<p>2)  Recompile the jar to be compliant for your environment <code>1.7</code></p>
"
15627006,"<pre><code>    import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;

public class JXML {
private DocumentBuilder builder;
private Document doc = null;
private DocumentBuilderFactory factory ;
private XPathExpression expr = null;
private XPathFactory xFactory;
private XPath xpath;
private String xmlFile;
public static ArrayList&lt;String&gt; XMLVALUE ;  


public JXML(String xmlFile){
    this.xmlFile = xmlFile;
}


private void xmlFileSettings(){     
    try {
        factory = DocumentBuilderFactory.newInstance();
        factory.setNamespaceAware(true);
        xFactory = XPathFactory.newInstance();
        xpath = xFactory.newXPath();
        builder = factory.newDocumentBuilder();
        doc = builder.parse(xmlFile);
    }
    catch (Exception e){
        System.out.println(e);
    }       
}



public String[] selectQuery(String query){
    xmlFileSettings();
    ArrayList&lt;String&gt; records = new ArrayList&lt;String&gt;();
    try {
        expr = xpath.compile(query);
        Object result = expr.evaluate(doc, XPathConstants.NODESET);
        NodeList nodes = (NodeList) result;
        for (int i=0; i&lt;nodes.getLength();i++){             
            records.add(nodes.item(i).getNodeValue());
        }
        return records.toArray(new String[records.size()]);
    } 
    catch (Exception e) {
        System.out.println(""There is error in query string"");
        return records.toArray(new String[records.size()]);
    }       
}

public boolean updateQuery(String query,String value){
    xmlFileSettings();
    try{
        NodeList nodes = (NodeList) xpath.evaluate(query, doc, XPathConstants.NODESET);
        for (int idx = 0; idx &lt; nodes.getLength(); idx++) {
          nodes.item(idx).setTextContent(value);
        }
        Transformer xformer = TransformerFactory.newInstance().newTransformer();
        xformer.transform(new DOMSource(doc), new StreamResult(new File(this.xmlFile)));
        return true;
    }catch(Exception e){
        System.out.println(e);
        return false;
    }
}




public static void main(String args[]){
    JXML jxml = new JXML(""c://user.xml"");
    jxml.updateQuery(""//Order/CustomerId/text()"",""222"");
    String result[]=jxml.selectQuery(""//Order/Item/*/text()"");
    for(int i=0;i&lt;result.length;i++){
        System.out.println(result[i]);
    }
}
</code></pre>

<p>}</p>
"
9468286,"<p>First you have to read the file line by line and add each line to a list. Once the file is read completely, you can print each element in the list in reverse order as shown below:</p>

<pre><code>import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;


public class FileReader {

    public static List&lt;String&gt; readFile() throws IOException {
        List&lt;String&gt; fileContents = new ArrayList&lt;String&gt;();
        FileInputStream fileInputStream = new FileInputStream(""C:/Users/compaq/Desktop/file.txt"");
        InputStreamReader inputStreamReader = new InputStreamReader(fileInputStream);
        BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
        String strLine = null;
        while((strLine=bufferedReader.readLine())!=null) {
            fileContents.add(strLine);
        }
        fileInputStream.close();
        return fileContents;
    }

    public static void printFileInReverse(List&lt;String&gt; fileContents, int numberOfLines) {
        int counter = 0;
        for(int i=(fileContents.size()-1);i&gt;=0;i--) {
            if(counter==numberOfLines) { break; }
            System.out.println(fileContents.get(i));
            counter++;
        }
    } 

    public static void main(String[] args) throws IOException {
        List&lt;String&gt; fileContents = new ArrayList&lt;String&gt;();
        fileContents = FileReader.readFile();
        int numberOfLines = 5;// Number of lines that you would like to print from the bottom of your text file.
        FileReader.printFileInReverse(fileContents, numberOfLines);
    }

}
</code></pre>
"
15086669,"<p>There <em>is</em> a way to get the runtime type of the type parameter by using Guava's <code>TypeToken</code> to capture it. The solution's disadvantage is that you have to create an anonymous subclass each time you need an instance of <code>Container</code>.</p>

<pre><code>class Container&lt;T&gt; {

    TypeToken&lt;T&gt; tokenOfContainedType = new TypeToken&lt;T&gt;(getClass()) {};

    public Type getContainedType() {
        return tokenOfContainedType.getType();
    }
}

class TestCase {

    // note that containerTest is not a simple instance of Container,
    // an anonymous subclass is created
    private Container&lt;String&gt; containerTest = new Container&lt;String&gt;() {};

    @Test
    public void test() {
        Assert.assertEquals(String.class, containerTest.getContainedType());
    }
}
</code></pre>

<p>The key of this solution is described in tha JavaDoc of <code>TypeToken</code>'s constructor used in the code above:</p>

<blockquote>
  <p>Clients create an empty anonymous subclass. Doing so embeds the type parameter in the anonymous class's type hierarchy so we can reconstitute it at runtime despite erasure.</p>
</blockquote>
"
11986704,"<pre><code>ArrayList&lt;String&gt; newArrayList = com.google.common.collect.Lists.newArrayList(new String[] { ""A"",""B"",""C""});
</code></pre>
"
9994576,"<p>I have solved my problem as follows:</p>

<p>Disable security manager after WebStart started my application. First line in my <code>main()</code> method:</p>

<pre><code>System.setSecurityManager(null);
</code></pre>

<p>Tell Tomcat to use the default class loader:</p>

<pre><code>context.setLoader(new WebappLoader(getClass().getClassLoader()));
</code></pre>

<p>Now Tomcat runs within WebStart :-D</p>
"
10140617,"<p>import org.junit. * ;</p>

<p>public class JUnitTest {</p>

<pre><code>@Test
public void functionTest() throws TestException {
    try {
        function (-1);
        fail("""");
    } catch (TestException e) {
        if (!e.getMessage().equals(""Integer may not be negative.."")) 
          fail("""");
    }
}
</code></pre>
"
15219986,"<p>Try this way</p>

<pre><code>    Object[] move = { ""Up"", ""Down"" };

.... some code

    move = { ""Up"", ""Down"", ""Left"" };
</code></pre>
"
15447916,"<pre><code>    File[] f= new File[6];

     f[1]= new File(""p1.png"");

     f[2]= new File(""p2.png"");

     f[3]= new File(""p3.png"");

     f[4]= new File(""p4.png"");

     f[5]=new file(""p5.png"");

     for(int i=1;i&lt;5;i++)  
    {   
     compare(f[i],f[i+1]);
    }

    public void compare(File f1,File f2)
    {
     BufferedImage image = ImageIO.read(f1);
     BufferedImage image = ImageIO.read(f2);
 // compare as you like

}
</code></pre>
"
10060194,"<p>You can use the BigDecimal setScale function!<br></p>

<pre><code>BigDecimal db = new BigDecimal(&lt;number&gt;).setScale(120, BigDecimal.ROUND_HALF_UP); (or down)
</code></pre>
"
9567364,"<p>The constructor gets called when a new object is created.</p>

<pre><code>NewObject n = new NewObject();

public class NewObject {
    public NewObject() {
        // do stuff when object created
    }
}
</code></pre>

<p>Hope this helps.</p>
"
15494323,"<pre><code>**if(""A"".equals(package_plan.toUpperCase()) &amp;&amp; getUsageCharge() &gt; 14.95)
        {
            sB = getUsageCharge() - 14.95;
            System.out.println(""You're spending more money than you should. If you switched to Plan B you would save:$"" + sB);
        }
        else if(""A"".equals(package_plan.toUpperCase()) &amp;&amp; getUsageCharge() &gt; 19.95)
        {
            sC = getUsageCharge() - 19.95;
            System.out.println(""You're spending more money than you should. If you switched to Plan C you would save:$"" + sC);
        }
        else if(""B"".equals(package_plan.toUpperCase()) &amp;&amp; hours &lt; 10)
        {
            sA = getUsageCharge() - 9.95;
            System.out.println(""You're spending more money than you should. If you switched to Plan A you would save:$"" + sA);
        }
        else if(""B"".equals(package_plan.toUpperCase()) &amp;&amp; getUsageCharge() &gt; 19.95)
        {
            sC = getUsageCharge() - 19.95;
            System.out.println(""You're spending more money than you should. If you switched to Plan C you would save:$"" + sC);**
        }**
</code></pre>

<p>Did u meant to comment it, if yes do it right. or this is error and unreachable statement according to the code provided.</p>

<p>Comment it with <code>/* your code to comment */</code></p>
"
15830148,"<p>Nothing wrong in this. this keyword refers the current object and it is used to differentiate the local variable and instance variable. The value of local variable can be assigned into instance variable likewise, the vice verse also possible. That means we can assign the value of instance variable into a local variable.</p>

<p>refer the chapter <strong>4.12.3 Kinds of Variables</strong> from <a href=""http://docs.oracle.com/javase/specs/jls/se7/jls7.pdf"" rel=""nofollow"">http://docs.oracle.com/javase/specs/jls/se7/jls7.pdf</a> (page 80). The example also given here. </p>

<pre><code>      **Example 4.12.3-1. Different Kinds of Variables**
      class Point { 
      static int numPoints; // numPoints is a class variable 
      int x, y; // x and y are instance variables 
      int[] w = new int[10]; // w[0] is an array component 
      int setX(int x) { // x is a method parameter 
        int oldx = this.x; // oldx is a local variable 
        this.x = x; 
        return oldx; 
      } 
    }
</code></pre>
"
15404567,"<p>So just print the numbers one by one</p>

<pre><code> @Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    final Random myRandom = new Random();


     Button buttonGenerate = (Button)findViewById(R.id.generateme);
    final TextView textGenerateNumber = (TextView)findViewById(R.id.generatenumber);

    buttonGenerate.setOnClickListener(new OnClickListener(){

             @Override
             public void onClick(View v) {
                 ArrayList&lt;Object&gt; Arry1 = new ArrayList&lt;Object&gt;();
                    for(int i=0;i&lt;1;i++){
                   ArrayList&lt;Integer&gt; Arry = new ArrayList&lt;Integer&gt;();
                   for(int k=0;k&lt;7;k++){
                       textGenerateNumber.setText(myRandom.nextInt(10));
                   }
                       Arry1.add(Arry);
                   }

                       }
                       });  
                    }
                 }
</code></pre>
"
10203561,"<p>For that you need not to go for complete path because</p>

<p>when you are creating file than by default it will create at <code>ROOT</code> of you server</p>

<p>which is <code>C:\glassfish3\glassfish\</code> here.</p>

<p>hope this will help you.</p>
"
15760922,"<pre><code>String str = ""ObjectOne""+""ObjectTwo"";
</code></pre>

<p>3 objects will be created as</p>

<p>1- ""ObjectOne""</p>

<p>2- ""ObjectTwo""</p>

<p>3- ""ObjectOneObjectTwo""</p>

<p>use</p>

<pre><code>StringBuffer tmp = new StringBuffer(""ObjectOne"");
tmp.append(""ObjectTwo"");
str = tmp.toString();
</code></pre>
"
16090467,"<p>You Just Need to Fetch the Values First &amp; then Put the Query :)</p>

<p>String uname = userTextBox.getText();<br>
String pwd = passTextBox.getText();    </p>

<pre><code>try          
    {     

    Class.forName(""sun.jdbc.odbc.JdbcOdbcDriver"");    

    Connection con = DriverManager.getConnection(""jdbc:odbc:ADB"");    

    Statement statement = con.createStatement();     

    statement.executeUpdate(""insert into Login "" + ""values  ('""+uname+""','""+pwd+""')"");     
     }
   catch(Exception e)        
    {      
       System.out.println(e);      
    }    
</code></pre>
"
16107945,"<p>Solution: Only devices without permanent hardware keys have the navigation bar hence you can check for the API version and use hasPermanentMenuKey() to find hardware keys</p>

<pre><code> boolean hasMenuKey = ViewConfiguration.get(context).hasPermanentMenuKey();
</code></pre>
"
10384309,"<p>Try this:</p>

<pre><code>List list = new ArrayList();
list.add(""Apple"");
list.add(""Banana"");

Object[] ol = list.toArray();
</code></pre>
"
15527592,"<p>Java good practices say that, as often as possible, return statements should be unique and written at the end of the method. To control what you return, use a variable. However, for returning from a void method, like the example you use, what I'd do would be perform the check in a middle method used only for such purpose. Anyway, don't take this too serious - keywords like <code>continue</code> should never be used according to Java good practices, but they're there, inside your scope.</p>
"
16121464,"<p>I guess you can do this.</p>

<pre><code>ArrayList&lt;ArrayList&lt;String&gt;&gt; m = new ArrayList&lt;ArrayList&lt;String&gt;&gt;();

m.get(0).add(""A"");    m.get(0).add(""B"");    m.get(0).add(""C"");
m.get(1).add(""D"");    m.get(1).add(""E"");    m.get(1).add(""F"");
m.get(2).add(""G"");    m.get(2).add(""H"");    m.get(2).add(""I"");
</code></pre>
"
15941845,"<p>this is the right code</p>

<pre><code>System.out.print(n + "" "");
xMethod(n-1);
</code></pre>
"
15941869,"<p>this
            xMethod(n-1);
            System.out.print(n + "" "");</p>

<p>should be:</p>

<pre><code>        System.out.print(n + "" "");
        xMethod(n-1);
</code></pre>
"
15571316,"<p>Observe output of following program. <br>
1> See output without clone() method. Remove clone() method from following program. (example of shallow copy)<br>
2> See output with clone() method. (Example Deep copy. See ArrayList object's output)<br></p>

<pre><code>import java.util.ArrayList;
import java.util.List;

public class DeepCopy implements Cloneable {
    private List&lt;String&gt; hobbiesList;
    private int age;
    private String name;
    private float salary;

    public static void main(String[] args) throws CloneNotSupportedException {
        DeepCopy  original = new DeepCopy();
        original.name=""AAA"";
        original.age=20;
        original.salary=10000;
        original.hobbiesList = new ArrayList&lt;String&gt;();
        original.hobbiesList.add(""Cricket"");
        original.hobbiesList.add(""Movies"");
        original.hobbiesList.add(""Guitar"");
        original.hobbiesList.add(""Eating"");

        DeepCopy  cloned = (DeepCopy) original.clone();
        System.out.println(""original:=""+original);
        System.out.println(""cloned  :=""+cloned);
        System.out.println(""After adding two more hobbies in 'original' which untimately reflected in 'cloned'"");
        cloned.name=""BBB"";
        cloned.age=27;
        cloned.salary=18237;
        cloned.hobbiesList.add(""Trecking"");
        System.out.println(""original       :=""+original);
        System.out.println(""cloned  changed:=""+cloned);
    }
    @Override
    protected Object clone() throws CloneNotSupportedException {
        DeepCopy clone = (DeepCopy)super.clone();
        clone.hobbiesList = new ArrayList&lt;String&gt;(clone.hobbiesList);
        return clone;
    }
    @Override
    public String toString() {
        return ""My name is (String)""+name + "" having age (int)""+age+"". I earned (float)""+salary+"" and hobbies are (ArrayList)""+hobbiesList;
    }
}
</code></pre>
"
9867999,"<pre><code>String s = ""The The The The The sdfadsfdas"";

List&lt;String&gt; list = Arrays.asList(s.split("" ""));

Set&lt;String&gt; unique = new HashSet&lt;String&gt;(list);
for (String key : unique) {
    System.out.println(key + "": "" + Collections.frequency(list, key));
}
</code></pre>
"
15540803,"<p>A three-level index where a higher-level key can be used to access all lower level keys and objects will require a three-level map.</p>

<pre><code>class ThreeLevelMap&lt;K1,K2,K3,V&gt;
{
    private Map&lt;K1,Map&lt;K2,Map&lt;K3,V&gt;&gt;&gt; store = new HashMap&lt;K,Map&lt;K2,Map&lt;K3,V&gt;&gt;&gt;();
    ...
    public V put(K1 key1, K2 key2, K3 key3, V value) { ... }
    public V get(K1 key1, K2 key2, K3 key3) { ... }

    public static class TLMEntry&lt;K1,K2,K3,V&gt;
    {
    ...
    }
    public Collection&lt;TLMEntry&lt;K1,K2,K3,V&gt;&gt; get(K1 key1, K2 key2) { ... }
    public Collection&lt;TLMEntry&lt;K1,K2,K3,V&gt;&gt; get(K1 key1) { ... }
}
</code></pre>

<p>This is a basic skeleton but should get you going in the right direction.</p>
"
10613668,"<p>+""sale_Limit )"" - should be space, change to:</p>

<pre><code>+""sale_Limit ) ""
</code></pre>

<p>""values ("" +txtid.getText()+ "",'"" - missing quotes, change to:</p>

<pre><code>""values ('"" +txtid.getText()+ "",'""
</code></pre>
"
15639727,"<p>You get all the integers like this:</p>

<pre><code>String data = ""254980"";
List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
for (int i = 0; i &lt; data.length(); i++) {
    list.add(new Integer(data.substring(i,i+1)));
}
</code></pre>

<p>Test:</p>

<pre><code>for (Integer integer : list) {
    System.out.print(integer);
}
</code></pre>

<p>prints</p>

<pre><code>2 
5 
4 
9 
8 
0
</code></pre>
"
16075991,"<p>Add another loop in your code.
Try this:</p>

<pre><code>public void printSquare(int min, int max) {
        for (int i = min; i &lt;= max; i++) {
            int j = i;
            for (j = i; j &lt;= max; j++) {
                System.out.print(j);
            }
            for (int k = j - i, l = min; k &lt; max; k++, l++) {
                System.out.print(l);
            }

            System.out.println();
        }
}
</code></pre>
"
9967265,"<p>Should be like this I think</p>

<pre><code> try {
                User sessionuser =(User)session.getAttribute(""User"");
                String username = sessionuser.getUsername(),firstname="""",surname="""",password="""";

                if (request.getParameter(""firstname"") == """"){
                    firstname = sessionuser.getFirstname();
                }
                else{firstname = request.getParameter(""firstname"");
                }

                if (request.getParameter(""surname"") == """"){
                    surname = sessionuser.getSurname();
                }
                else{surname = request.getParameter(""surname"");
                }
                password = request.getParameter(""password"");

                User user = new User(username, firstname, surname, password);
                //this.updateUser(user); 
                this.updateUser(username, firstname, surname, password);

                //user.updateUser();

                session.setAttribute(""User"", user);
                request.setAttribute(""u"", user);
                request.getRequestDispatcher(""UpdateUser.jsp"").forward(request,     response);
</code></pre>

<p>You can also use <code>null</code> instead of <code>""""</code></p>
"
15682908,"<pre><code>1.int id = 1;
  boolean retry = id == 1;
</code></pre>

<p>which means <code>retry = true;</code>.</p>

<pre><code>2.int id = 2;
  boolean retry = id == 1;
</code></pre>

<p>which means <code>retry = false;</code>.</p>

<p>Simplification id == 1 can be consider as</p>

<pre><code>if ( id == 1 ){
}
</code></pre>
"
16238309,"<pre><code>return ""AA: "" + rows;   its calling toString method on Row object 
</code></pre>

<p>actually you have to append the  each column val</p>

<p>try</p>

<pre><code>return ""AA: "" +col1 + "" "" + col2 + "" "" + col3;  //typo edited
</code></pre>
"
9985469,"<p>Java is an object oriented language, therefore the answer is ""most definitely!"" you can tell the name of the variable passed as a parameter.  To do so, try this...</p>

<pre><code>class Value&lt;T&gt; extends Object
{
    T value;
    String name;

    public Value(String name, T value)
    {
        this.name = name;
        this.value = value;
    }
}
</code></pre>

<p>Now in your methods, you would accept all parameters as instances of Value, as in the following method which would accept only Values created with classes having Number as a base class (which would be Long, Float, Double, etc)...</p>

<pre><code>public String SomeMethodWantingToKnowParameterNames(Value&lt;? extends Number&gt; parm1)
{
    if (parm1 != null)
    {
        // Do your work with the parameter - it's name can be accessed via parm1.name
        // This is only an example
        // You would probably want to write an accessor for name
        return parm1.name;
    }

    // Return null for null
    return null;
}
</code></pre>

<p>And that is all there is to it!  I use a generic class so that Value can be used to pass in any type - Floats, Longs, Double, BigInteger, String - for example...</p>

<pre><code>Value&lt;Float&gt; vFloat = new Value&lt;Float&gt;(""MyFloat"", 0.0);
</code></pre>

<p>Also, the method above is simply an example - in practice any method accepting a Value could access its name. </p>

<p>Good Luck and may all your code compile flawlessly!</p>

<p>Rodney</p>
"
10002888,"<p>I'm not totally familiar with java, but I know C++ and they're very similar.</p>

<pre><code>double array[] = new double[100];
double value = 150.0;
for (int i = 0; i &lt; 100; i++) {
    array[i] = value+i;
    System.out.println(value+i);
}
</code></pre>

<p>hope that helps.</p>

<p>your problem above was that you started i as 150.0. You need to use a counter variable to increment through your array. You're just printing the 99th element of the array (which you never set) 99 times.</p>
"
16218005,"<p>No, because Java sees the <code>1</code> as an Integer. You will need to convert your number as a String first with <code>Integer.toString(n)</code></p>
"
16336989,"<p>The <a href=""http://docs.oracle.com/javaee/6/api/javax/ws/rs/core/UriBuilder.html"" rel=""nofollow""><code>UriBuilder</code></a> does exactly what you need: </p>

<pre><code>UriBuilder.fromPath(""http://localhost:8080/api/upload/form/{uploadType}/{uploadName}"").build(""foo"", ""bar"");
</code></pre>

<p>Results in:</p>

<pre><code>http://localhost:8080/api/upload/form/foo/bar
</code></pre>
"
16218040,"<p>Try this</p>

<pre><code>List.add(Integer.toString(1));
</code></pre>

<p>You also can try this</p>

<pre><code>List list = new ArrayList&lt;Object&gt;() ;
</code></pre>

<p>If there is no need that the arraylist must be a Arraylist of String</p>
"
10627835,"<p>Yes @Matthew, is much better the best practices using </p>

<pre><code>List&lt;Integer&gt; numbers = new ArrayList&lt;Integer&gt;
</code></pre>

<p>because can you use the methods the ArrayList class and List class. I hope help you.</p>
"
15878115,"<p>You can simply rely on Guava to generate a pretty good hashcode without worrying about how it is computed:</p>

<pre><code>@Override  
public int hashCode()  
{  
  return com.google.common.base.Objects.hashCode(this.from, this.to);  
}  
</code></pre>

<p>EDIT : for a symetric hashcode, just do the following:</p>

<pre><code>@Override  
public int hashCode()  
{  
  return com.google.common.base.Objects.hashCode(Math.max(this.from, this.to),Math.min(this.from, this.to));  
}  
</code></pre>
"
12802382,"<p>checked exception is just a syntax limit</p>

<p>code below from lombok <a href=""http://www.projectlombok.org/"" rel=""nofollow"">http://www.projectlombok.org/</a></p>

<p>you will get</p>

<p>Exception in thread ""main"" java.io.IOException
    at B.main(B.java:19)</p>

<pre><code>public static RuntimeException sneakyThrow(Throwable t) {
    if (t == null) throw new NullPointerException(""t"");
    B.&lt;RuntimeException&gt;sneakyThrow0(t);
    return null;
}

@SuppressWarnings(""unchecked"")
private static &lt;T extends Throwable&gt; void sneakyThrow0(Throwable t) throws T {
    throw (T)t;
}

public static void main(String[] args) {
    throw sneakyThrow(new IOException());
}
</code></pre>
"
15899552,"<p>best way to transfer data are the DTO objects.</p>

<p>these objects only contains the instance variables (with setters and getters) as the data which you want to transfer!</p>

<p>there should be no behaviours in this class</p>

<p>for example if you want to pass a Employee data , do as follows</p>

<pre><code>class EmployeeBean
{
private String name;
private String age;

public void setName(String n)
{
name=n;
}

public String getName()
{
return name;
}


public void setAge(int n)
{
age=n;
}

public int getAge()
{
return age;
}

}
</code></pre>

<p>you can now create the EmployeeBean class, populate data in its instance variables and then pass this object as parameter to the method in the other class where it can be formatted</p>
"
15952803,"<p>Now I have the solution !</p>

<p>First, there were some problems with Unicode, so I have put ISO-8859-1 everywhere. <a href=""http://stackoverflow.com/a/10319155/1824094"">Including in the Base64 encoding and decoding.</a></p>

<p>Then, I have juggled with the variants.</p>

<p>Here is my Java code which works for Blowfish decryption :</p>

<pre><code>String encryptedString = … ;
String decryptedString = null;
SecretKeySpec key = new SecretKeySpec(myKey.getBytes(CHARSET_ISO_8859_1), ""Blowfish"");
Cipher cipher;
try {
    cipher = Cipher.getInstance(""Blowfish/ECB/PKCS5Padding"");
    cipher.init(Cipher.DECRYPT_MODE, key);
    byte[] decrypted = cipher.doFinal(encryptedString.getBytes(CHARSET_ISO_8859_1));
    decryptedString = new String(decrypted, CHARSET_ISO_8859_1);
} [ catch Exceptions … ]
</code></pre>

<p>Note that I have replaced <code>""Blowfish""</code> with <code>""Blowfish/ECB/PKCS5Padding""</code> for getting the <code>Cipher</code> instance, but, if you do the same for the key, it fails.</p>

<p>The key <code>myKey</code> has to be a Latin-1 string of 8 characters. This makes a key of 128 bits. The Blowfish algorithm allows bigger keys, but they fail in Java because of the USA export restriction in the JRE — the USA allow encryption but not stronger than what the <a href=""http://en.wikipedia.org/wiki/NSA"" rel=""nofollow"">NSA</a> can break.</p>

<p>The <code>CHARSET_ISO_8859_1</code> is a constant defined like this :</p>

<pre><code>final Charset CHARSET_ISO_8859_1 = Charset.forName(""ISO-8859-1"");
</code></pre>

<p>And <code>Charset</code> is <code>java.nio.charset.Charset</code>.</p>

<p>Last but not least, I have changed my encryption Java code accordingly.</p>
"
16413164,"<p>You need to return it as an array and initialize it first. </p>

<p>Perhaps this sample static code would give you bit understanding to help you through, please ask if you have further question </p>

<pre><code> static int[] sumOddandEven(int array[]) {
        int temp[] = null;
        Scanner scan = new Scanner(System.in);


        System.out.println(""Enter the first number: "");
        int u1 = scan.nextInt();
        temp[0] = u1;
        System.out.println(""Enter the first number: "");
        int u2 = scan.nextInt();
        temp[1] = u2;
        System.out.println(""Enter the first number: "");
        int u3 = scan.nextInt();
        temp[2] = u3;
        System.out.println(""Enter the first number: "");
        int u4 = scan.nextInt();
        temp[3] = u4;
        System.out.println(""Enter the first number: "");
        int u5 = scan.nextInt();
        temp[4] = u5;
        return temp;

    }
</code></pre>
"
15963067,"<p>Below code should be fine:<P>
<code>List&lt;<code>?</code>> list;</code>   or<P>
<code>List&lt;<code>?</code> extends Object> list;</code><P>
For usage of question mark（?） in java, you can refer to <a href=""http://en.wikipedia.org/wiki/Wildcard_%28Java%29"" rel=""nofollow"">Wildcard (Java)</a>.</p>
"
16229117,"<pre><code>public static void main(String[] args) {

  for(i=0;i &lt;= 10; i++) {
      int s = i*3;
     System.out.println(i + ""-&gt; "" + (s+1) + "","" + (s+2) + "","" + (s+3)):
  }
} 
</code></pre>
"
12895166,"<p>I posted some sample code on <a href=""http://ideone.com/vSdSh"" rel=""nofollow"">ideone</a>.  The basic idea is to create a custom RuntimeException class <code>IOIteratorException</code> that only excepts an IOException as the cause.  Then you can write code like this</p>

<pre><code>try
{
      iterator . next ( ) ;
}
catch ( IOIteratorException cause )
{
      cause . getCause ( ) ; // the compiler knows this is an IOException so you don't need to cast it
}
</code></pre>
"
16627961,"<p>Dog, I have a strong feeling you are leaving out some details that are crucial to the solution.  This often happens on SO because</p>

<ul>
<li>people need to leave out a lot of details to get the question to a reasonable size and scope,</li>
<li>people do not fully understand the problem and the solution (which is why they are asking for help) so they cannot be sure which details are important and which are not, and</li>
<li>the reason the person cannot solve the problem on their own is because they do not understand the importance of this detail, which is the same reason they left it out. </li>
</ul>

<p>I've said in another answer what I would do about ArtistSet.  But keeping the above in mind I will give you another solution to a slightly different problem. Lets say I had code from a bad vendor:</p>



<pre class=""lang-java prettyprint-override""><code>package com.bad;

public interface IAlpha {
    public String getName();
    // Sort Alphabetically by Name
    public int compareTo(IAlpha other);
}
</code></pre>

<p>This is bad because you should declare a function returning a <code>Comparator&lt;IAlpha&gt;</code> to implement the sorting strategy, but whatever. Now I get code from a worse company:</p>

<pre class=""lang-java prettyprint-override""><code>package com.worse;
import com.bad.IAlpha;

// an Alpha ordered by name length
public interface ISybil extends IAlpha, Comparable&lt;IAlpha&gt; {}
</code></pre>

<p>This is worse, because it is totally wrong, in that it overrides behavior incompatibly.  An <code>ISybil</code> orders itself by name length, but an IAlpha orders itself alphabetically, except an <code>ISybil</code> <strong><em>is an</em></strong> <code>IAlpha</code>. They were mislead by the anti-pattern of IAlpha when they could and should have done something like:</p>

<pre class=""lang-java prettyprint-override""><code>public interface ISybil extends IAlpha {
  public Comparator&lt;IAlpha&gt; getLengthComparator();
}
</code></pre>

<p><strong>However</strong>, this situation is still much better than ArtistSet because here the expected behavior is documented.  There is no confusion about what <code>ISybil.compareTo()</code> should do.  So I would create classes as follows.  A Sybil class that implements compareTo() as com.worse expects and delegates everything else:</p>

<pre class=""lang-java prettyprint-override""><code>package com.hack;

import com.bad.IAlpha;
import com.worse.ISybil;

public class Sybil implements ISybil {

    private final Alpha delegate;

    public Sybil(Alpha delegate) { this.delegate = delegate; }
    public Alpha getAlpha() {   return delegate; }
    public String getName() { return delegate.getName(); }
    public int compareTo(IAlpha other) {
        return delegate.getName().length() - other.getName().length();
    }

}
</code></pre>

<p>and an Alpha class that works exactly like com.bad said it should:</p>

<pre class=""lang-java prettyprint-override""><code>package com.hack;
import com.bad.IAlpha;

public class Alpha implements IAlpha {
    private String name;
    private final Sybil sybil;
    public Alpha(String name) { 
        this.name = name;
        this.sybil = new Sybil(this);
    }

    // Sort Alphabetically
    public int compareTo(IAlpha other) {
        return name.compareTo(other.getName());
    }

    public String getName() { return name; }
    public Sybil getSybil() { return sybil; }
}
</code></pre>

<p>Note that I included type conversion methods: Alpha.getSybil() and Sybil.getAlpha().  This is so I could create my own wrappers around any com.worse vendor's methods that take or return Sybils so I can avoid polluting my code or any other vendor's code with com.worse's breakage.  So if com.worse had:</p>

<pre class=""lang-java prettyprint-override""><code>public ISybil breakage(ISybil broken);
</code></pre>

<p>I could write a function</p>

<pre class=""lang-java prettyprint-override""><code>public Alpha safeDelegateBreakage(Alpha alpha) {
  return breakage(alpha.getSybil).getAlpha();
}
</code></pre>

<p>and be done with it, except I would still complain vociferously to com.worse and politely to com.bad. </p>
"
10495916,"<p>If you have: </p>

<pre><code>List&lt;Object&gt; objects
</code></pre>

<p>You can copy this list by:</p>

<pre><code>List&lt;Object&gt; newObjects = new ArrayList&lt;Object&gt;(objects);
</code></pre>

<p>[Update: add real implementation of ArrayList to prove it copied new objects]</p>

<p>Please see real implementation of ArrayList, it copys objects - not contains the references to the same object.</p>

<p><code>public  ArrayList(Collection&lt;? extends E&gt; c) {
         elementData = c.toArray();
         size = elementData.length;
         if (elementData.getClass() != Object[].class)
             elementData = Arrays.copyOf(elementData, size, Object[].class);
}</code></p>

<p><code>public Object[] toArray() {
         return Arrays.copyOf(elementData, size);
}</code></p>
"
16455472,"<p>Just change the line to</p>

<pre><code>str = str.replaceAll(""\\"","".""); 
</code></pre>

<p>Edit : I didnt try it, because the problem here is not whether its a correct regex,but the problem here is that he is not assigning the str to new str value. Anyways regex corrected now.</p>
"
10832375,"<p>First you need to be aware of what types you are assigning to your variables. You should change your code to look like this:</p>

<pre><code>    public class simpleMath
    {


        public static void main(String[] args) 
        {
            double number = 5;
            double answer = half(number);

            System.out.println("" 5 divided by 2 is:""+ answer);

        }

        private static double half(double number) {
             number =  number/2.0;
             return number;
        }

    }
</code></pre>

<p>See how I now use the returned value and how I divide by 2.0? these changes will give you the results you are looking for.</p>
"
16229143,"<p>Change your code like this.</p>

<pre><code>int death = 1;
for (int i = 1; i &lt;= 10; i++) {
System.out.print(i + ""    "");
for (int j = 0; j &lt; 3; j++) {
    System.out.print(death++ +"" "");

    //current += j;
    }
    //death += current;
    System.out.println("""");
}
</code></pre>
"
16229180,"<p>Use a simple counter:</p>

<pre><code>int j = 0;
for (int i = 0; i &lt; 10; i++)
    System.out.println(i + ""    "" + ++j + "" "" + ++j + "" "" + ++j + "" "");
</code></pre>
"
16229181,"<p>Got exact solution for it ...</p>

<pre><code>class Alok{
   public static void main(String[] args){
       int i = 0,j=0;
         for(i=0;i&lt;10;i++){
        System.out.print(""""+i+""-&gt;"");
        for(j=(i*3)+1;j&lt;(i*3)+4;j++){
            System.out.print(""""+j+"" "");
        }System.out.println();
         }
    }
}
</code></pre>
"
16722200,"<p>You can use java reflection.</p>

<p><a href=""http://docs.oracle.com/javase/tutorial/reflect/member/fieldTypes.html"" rel=""nofollow"">Reflection for field</a></p>

<pre><code>       Class&lt;?&gt; c = Class.forName(""YOUR_CLASS_NAME"");
       Field f = c.getField(""FOO"");
       System.out.println(f.getInt());
</code></pre>
"
11397039,"<p>All objects in Java are passed by reference (well, technically, the references to objects are passed by value, which is the cause of the effect in my second paragraph. In my opinion it's easier to think of primitives being passed by value and objects being passed by reference if you're new to Java, though). So if you add something to/remove something from your ArrayList in a method it is passed to, the update will be reflected everywhere else (assuming no multithreading/concurrency issues). However, if you assign a different ArrayList to a member of a class, that new ArrayList will replace the old one, so you'd want to hold a reference to the old one somewhere else if you want to keep using it.</p>

<p>Note, however, that when you pass an ArrayList into a method on its own (and are not referencing it as a member of a class), assigning a new/different ArrayList to that variable will not have an affect outside of the function. So if you pass in an ArrayList as <code>apple</code>, then assign a new ArrayList to <code>apple</code>, you can manipulate that new ArrayList as <code>apple</code>, but the old ArrayList will still be there once the method completes.</p>

<p>There's a bit more to it, but that's the basics.</p>
"
16252270,"<pre><code>public static void main(String arg[])
{
    List&lt;Double&gt; testList=new ArrayList();

   /*Adding The values to the List*/

    testList.add(0.5);
    testList.add(0.2);
    testList.add(0.9);
    testList.add(0.1);
    testList.add(0.1);
    testList.add(0.1);
    testList.add(0.54);
    testList.add(0.71);
    testList.add(0.71);
    testList.add(0.71);
    testList.add(0.92);
    testList.add(0.12);
    testList.add(0.65);
    testList.add(0.34);
    testList.add(0.62);

    /*Declare a new List for storing sorted Results*/

    List&lt;Double&gt; finalList=new ArrayList();


    while(!testList.isEmpty()) //perform operation until all elements are moved to new List
    {
        double rank=0;
        int i=0;
            for(double d: testList)
            {
                if(d&gt;=rank)
                {
                    rank=d;
                }

            }
            finalList.add(rank);

            testList.remove(testList.indexOf(rank));

     }
    for(double d : finalList) {
        System.out.println(d);
    }

}
</code></pre>
"
16145988,"<p>Add 7 by x times. </p>

<pre><code>for(int i=0; i&lt;10; i++)
    result = result+7;
</code></pre>
"
16726642,"<pre><code>if(i % j == 0)
</code></pre>

<p>if I'm doing my math right, this should do the trick ;)</p>
"
16252575,"<p>This is less code; it is not ""efficient"" in CPU use or memory use, but makes the code shorter to write and read.  I assume dice rolls are random regardless of their order.</p>

<pre><code>package example;

public class PlayerCharacter
{

  int strength, dexterity, constitution, intelligence, wisdom, charisma;
  int[] strRolls, dexRolls, conRolls, intRolls, wisRolls, charRolls;

  private int getScore(Dice d, int[] storage)
  {
    for (int i=0; i&lt;storage.length; i++)
    {
      storage[i] = d.getNewRoll();
    }
    int result = 0;
    for (int i=0; i&lt;storage.length; i++) { result += storage[i]; }

  }

  public void generateAbilityScoresMethod1()
  {

    strRolls = new int[3];
    dexRolls = new int[3];
    conRolls = new int[3];
    intRolls = new int[3];
    wisRolls = new int[3];
    charRolls = new int[3];

    for (int i = 0; i &lt; 3; i++)
    {
      strength      = getScore(dice.Dice.D6, strRolls);
      dexterity     = getScore(dice.Dice.D6, dexRolls);
      constitution  = getScore(dice.Dice.D6, conRolls);
      intelligence  = getScore(dice.Dice.D6, intRolls);
      wisdom        = getScore(dice.Dice.D6, wisRolls);
      charisma      = getScore(dice.Dice.D6, charRolls);

    }

  }

  public int getStrength()
  {
    return strength;
  }

  private void printArrayRolls(String label, int[] rolls)
  {
    for (int i=0; i &lt; rolls.length; i++)
    {
      System.out.println(label + "": roll "" + rolls[i]);
    }
  }

  public void printStrRolls()
  {
    printArrayRolls(""Str"", strRolls);
  }

  public int getDexterity()
  {
    return dexterity;
  }

  public void printDexRolls()
  {
    printArrayRolls(""Dex"", dexRolls);
  }

  public int getConsitution()
  {
    return constitution;
  }

  public void printConRolls()
  {
    printArrayRolls(""Con"", conRolls);
  }

  public int getIntelligence()
  {
    return intelligence;
  }

  public void printIntRolls()
  {
    printArrayRolls(""Int"", intRolls);
  }

  public int getWisdom()
  {
    return wisdom;
  }

  public void printWisRolls()
  {
    printArrayRolls(""Wis"", wisRolls);
  }

  public int getCharisma()
  {
    return charisma;
  }

  public void printCharRolls()
  {
    printArrayRolls(""Char"", charRolls);
  }

  public void printAbilities()
  {
    System.out.println(""Str = "" + getStrength());
    System.out.println(""Dex = "" + getDexterity());
    System.out.println(""Con = "" + getConsitution());
    System.out.println(""Int = "" + getIntelligence());
    System.out.println(""Wis = "" + getWisdom());
    System.out.println(""Char = "" + getCharisma());
  }

}
</code></pre>
"
16740128,"<p>define the date as static. <code>static String date;</code> you can't refer non statics from static method main</p>
"
16339571,"<pre><code>       StringBuffer strBuffer = new StringBuffer();
        for(Object o:list){
            strBuffer.append(o);
        }
        double []x = new double[]{strBuffer.toString()};
</code></pre>

<p>I consider this should work</p>
"
16361486,"<p>Not sure if you are just asking about formatting the output in a line or you want some logic change:</p>

<p>For formatting the output in a line here is the updated code:</p>

<pre><code>       public class Factorial {
       public static void main(String args[]) {
            int n, c, fact = 1;  

            for ( c = 1 ; c &lt;= 5 ; c++ ) {
                fact = fact*c;
                System.out.print(fact);
                System.out.print("" "");
            }
        }
}
</code></pre>
"
16412319,"<p>As others point out, a logical and (&amp;&amp;) is probably the best way to consolidate your logic. An &amp;&amp; operation will only evaluate to <code>true</code> if both sides evaluate to <code>true</code>.</p>

<pre><code>if (address != null &amp;&amp; firstName != null &amp;&amp; lastName != null) {
    // Whatever you want to do with that...
} else {
    // Whatever you want to do with bad input
}
</code></pre>

<p>For the sake of diversity, you could also use a try-catch approach. In Java, a NullPointerException will be thrown if you try to call a method on a null value, which you can catch and handle.</p>

<pre><code>try {
    // Whatever you want to do with that...
} catch (NullPointerException npe) {
    // Whatever you want to do with bad input
}
</code></pre>

<p>This approach can be helpful if you've got a really big set of inputs that might be null, although in general I wouldn't advocate it. (The problem with the second approach is that if you call some other method from the <code>try</code> part that triggers a NullPointerException, it will end up in the <code>catch</code> block here, even though it may be totally unrelated to these inputs - i.e. you could make it hard for yourself to spot a bug in a different part of your program.)</p>
"
10752848,"<p>Only <code>SortedSet</code> can do the ordering of the <code>Set</code></p>
"
16909404,"<p><code>double</code> + <code>int</code> == <code>double</code></p>

<pre><code>return 5/2   // returns 2 (not turned into doubles)
return 5.0/2 // returns 2.5 (turned into doubles)
return (int)(5.0/2)  // returns 2 (turned into doubles, then turned into int)
return 5d/2 // returns 2.5 (turned into doubles)
</code></pre>
"
10880182,"<p>remove the <code>v.remove(value)</code> and everything will work as expected</p>

<p><strong>Edit:</strong> sorry, misread the question there</p>

<p>This has nothing to do with threadsafety though. You're not even multithreading so there is no reason Java would throw an exception for this.</p>

<p>If you want exceptions when you are changing the vector make it Unmodifiable</p>
"
16812043,"<p>Readers are usually slow, you should try Stream readers which are fast. And make sure that FIlE opening process is not taking time. If File is opened and stream objects are created and then measure time, then you can figure out exactly it is due to File opening issue or reading the file issue. Make sure that system io load is not high at the time of this operation, otherwise you measurement will go bad.</p>

<pre><code> BufferedInputStream reader=new BufferedInputStream(new FileInputStream(""/home/shantanu/Documents/sample.txt""));
 byte[] line=new byte[1024];
 while(reader.read(line)&gt;0) {
 System.out.println(new String(line));
 }
</code></pre>
"
16650543,"<p>You need to either instantiate a <code>ProDat</code> object in your main method and call <code>produceFile()</code> on that or make the <code>produceFile()</code> method static.</p>
"
16582229,"<p>You could use a regex as an argument to <code>split</code>, like this:</p>

<pre><code>""32x23"".split(""[xX]"");
</code></pre>

<p>Or you could use a <code>StringTokenizer</code> that lets you set its set of delimiters, like this:</p>

<pre><code>StringTokenizer st = new StringTokenizer(""32x23"",""xX"");
//                                          ^^    ^^
//                                       string delimiter
</code></pre>

<p>This has the advantage that if you want to build the list of delimiters programatically, for example for each lowercase letter in the delimiter list add its uppercase corespondent, you can do this and then pass the result to the <code>StringTokenizer</code>.</p>
"
11224345,"<p>Possible if you do something like:</p>

<pre><code>    GroupA groupAobj = new GroupA();
    AbstractGroup abstractObj = (AbstractGroup) groupAobj;
    GroupB groupBobj = (GroupB) abstractObj;
</code></pre>

<p>the code compiles and runs.</p>
"
16667383,"<p>Encapsulation is to restrict the access to the Class's variables and to regularize the way of editing them.</p>

<pre><code>Class Test
{
 public int a;
 public Test()
 {
  a = 0;
 }
 public getA()
 {
  return a;
 }

 public setA(int a)
 {
   this.a = a
 }
}

Class TestMain
{
  main()
 {
   Test t = new Test();
   System.out.println(t.a);   // This prints 0;
   int a = t.getA();
   a = 10;
   System.out.println(t.a);   // This still prints 0;

   t.a = 20;
   System.out.println(t.a);   // This prints 20;
 }
}
</code></pre>

<p>In the above example the programmer may not be intentionally changing the value of <code>t.a</code> but the value changes.</p>

<p>If he really intents to change it, then he should use the setter.</p>

<p>Encapsulation is the feature that java provides which solves certain practical problems and helps in extensibility.</p>

<p>If the Test and TestMain classes are written by same person, there wont't be any confusion.
But practically that is not the case.</p>
"
13288423,"<p>It depends on the rest of the coding guidelines.  I don't see any
problem dropping the braces <em>if</em> the opening brace is always on a line
by itself.  If the opening brace is at the end of the <code>if</code> line,
however, I find it too easy to overlook when adding to the contents.  So 
I'd go for either:</p>

<pre><code>if ( a &gt; 10 ) {
    a = 0;
}
</code></pre>

<p>regardless of the number of lines, or:</p>

<pre><code>if ( a &gt; 10 )
{
    //  several statements...
}
</code></pre>

<p>with:</p>

<pre><code>if ( a &gt; 10 )
    a = 0;
</code></pre>

<p>when there is just one statement.  The important thing, however, is that
all of the code be consistent.  If you're working on an existing code
base which uses several different styles, I'd alway use braces in new
code, since you can't count on the code style to ensure that if they
were there, they'd be in a highly visible location.</p>
"
17196663,"<pre><code>public boolean onCreateOptionsMenu(Menu menu) {
    MenuInflater inflater = getMenuInflater();
    inflater.inflate(R.menu.activity_main, menu);
    return true;
}
</code></pre>

<p>Make sure you have the main.xml file in the res\menu folder</p>

<p>Remove ""import android.R;""</p>
"
16606224,"<p>Reduce the usage of if conditions. It slows down your code. Try to use ternary operators if possible if this affects your speed even though it is not recommended in java 1.5.</p>

<p>Try this solution:</p>

<pre><code>if( (factors==2)&amp;&amp;(primeNum&lt;2000000) )
</code></pre>

<p>instead of repeated if conditions and post any difference.</p>
"
16715153,"<pre><code>long s1 = ((Class)o1).getSize();
</code></pre>

<p>Is where it is complaining.  I think this fixes it:  </p>

<pre><code>if(o1 instanceof Class)  
{  
     long s1 = ((Class)o1).getSize();
}  
</code></pre>

<p>Essentially you have not guaranteed that <code>o1</code> is a <code>Class</code></p>
"
11003991,"<pre><code>String yourString = ""abcdef""
String newString = yourString.replaceAll(""c"" , ""x"");
System.out.println(""This is the replaced String: "" + newString);
</code></pre>

<hr>

<p>This is the replaced String: abxdef</p>
"
11437281,"<p>Create a new <code>int</code> array and copy over the values, casting as needed.</p>

<pre><code>int[] arr = new int[len];

for(int i = 0; i &lt; len; i++)
    arr[i] = (int)buf[i];
</code></pre>
"
11003996,"<p>How about:</p>

<pre><code>String crap = ""crap"";
String replaced = crap.replace(crap.charAt(index), newchar);
</code></pre>

<p>but this will replace all instances of that character</p>
"
13292887,"<p>Are you expecting this kind of arrangment</p>

<pre><code>class class1 {
 int IDNumber = 123;  //same person as class2
 String name = ""John"";
 String company = ""Intel"";
 }

 class class2 { 

 int IDNumber = 123;  //same person as class1
 int income = 500;
 int workYears = 3;
 } 


 public class MyData{
public static void main(String arg[]){
    HashMap&lt;Integer, class1&gt; one = new HashMap&lt;Integer, class1&gt;();
    HashMap&lt;Integer, class2&gt; two = new HashMap&lt;Integer, class2&gt;();
    one.put(1, new class1());
    two.put(2, new class2());

    HashMap&lt;Integer, Object&gt; three = new HashMap&lt;Integer, Object&gt;();
    three.putAll(one);
    three.putAll(two);

    System.out.println(three);
}
 }
</code></pre>
"
17209774,"<pre><code>String[] myArray = {""AAAA"",""BBBB"",""CCCC""};
String[] myNewArray = {""\uAAAA"",""\uBBBB"",""\uCCCC""};
        String we=""\\u"";
        for (int i=0; i&lt;myArray.length; i++) {
    myNewArray[i] = we + myArray[i];

}
</code></pre>
"
11004029,"<p>Try the <code>String.replace(Char oldChar, Char newChar)</code> method or use a <code>StringBuilder</code></p>
"
11820863,"<p>The best debugging solution for me is to place multiple Print statements after each major block of code.</p>

<pre><code>System.out.println(""1"");

//Code1 block

System.out.println(""2"");

//code 2 block

System.out.println(""3"");

//code 3 block

System.out.println(""4"");
</code></pre>

<p>By doing this, you can see which is the last print statement that executes and modify it. the last number that prints and then the catch statement's stack trace should help.</p>
"
11840351,"<p><strike>The reason is that num is copied by-value, not as a reference in the call to <code>recursion( num - 1 );</code></strike></p>

<p>Edit: Yeesh, people are happy to downvote, arent' they? True, reference vs. copy-by value wasn't the correct answer, but in my initial reading of his code example it looked like a misunderstanding of that particular problem. I stand corrected.</p>
"
11840376,"<p>I don't know why you are going through all this to do a function like that? I apologize if I'm not getting your question but here is a good code I would suggest..</p>

<pre><code>public static void main(String[] args){
    countdown(10);
}

public void countdown(int num){

    for(int i = num; i &gt;= 0; i--){
        System.out.println(num);
    }
}
</code></pre>
"
11490366,"<p>From my understanding you want to do this:</p>

<pre><code>input: dog
output: dogdog
--------------
input: racecar
output: racecaracecar
</code></pre>

<p>So this is how i would do that:</p>

<pre><code> public String change(String input)
{
    StringBuilder outputBuilder = new StringBuilder(input);

    int patternLocation = input.length();
    for(int x = 1;x &lt; input.length();x++)
    {
        StringBuilder check = new StringBuilder(input);

        for(int y = 0; y &lt; x;y++)
            check.deleteCharAt(check.length() - 1);

        if(input.endsWith(check.toString()))
        {
            patternLocation = x;
            break;
        }
    }

    outputBuilder.delete(0,  input.length() - patternLocation);

    return outputBuilder.toString();
}
</code></pre>

<p>Hope this helped!</p>
"
16814046,"<p>use this code:</p>

<pre><code>public static void print(Context context) {

    String examplePath = ""file:///sdcard/dcim/Camera/20111210_181524.jpg"";

    Intent sendIntent = new Intent(Intent.ACTION_SEND);
    sendIntent.setType(""image/jpeg"");
    sendIntent.putExtra(Intent.EXTRA_SUBJECT, ""Photo"");
    sendIntent.putExtra(Intent.EXTRA_STREAM, Uri.parse(examplePath));
    sendIntent.putExtra(Intent.EXTRA_TEXT, ""Enjoy the photo"");
    context.startActivity(Intent.createChooser(sendIntent, ""Email:""));
}
</code></pre>
"
17342848,"<p>According to this comment:</p>

<blockquote>
  <p>I want to print the values in the ArrayList a starting from 10 until
  20...and 10 can be anywhere in the list and not the beginning</p>
</blockquote>

<p>interpreted such that the arraylist contains 10 somewhere and possibly 20 somewhere further down the list and all numbers between the first 10 and the first 20 should be printed:</p>

<pre><code>j = 0;
while (j &lt; a.size() &amp;&amp; a.get(j) != 10) j++;
if (j &lt; a.size()) do {
    print (a.get(j)); j++;
} while (j &lt; a.size() &amp;&amp; a.get(j) != 20);
</code></pre>
"
16869014,"<p>Groovy (almost Java):</p>

<pre><code>def letters = ['a', 'e', 'f', 'f', 'g', 'i', 'r', 'q']
def dictionary = ['abacus', 'deltoid', 'gaff', 'giraffe', 'microphone', 'reef', 'qar']
println dictionary
    .findAll{ it.toList().intersect(letters).size() == it.size() }
    .sort{ -it.size() }.head()
</code></pre>

<p>The choice of collection type to hold the dictionary is irrelevant to the algorithm. If you're supposed to implement a trie, that's one thing. Otherwise, just create one from an appropriate library to hold the data. Neither Java nor Groovy has one in its standard library that I'm aware of.</p>
"
17342926,"<p>According to your statement</p>

<p><code>I want to print the values in the ArrayList a starting from 10 until 20...and 10 can be anywhere in the list and not the beginning</code></p>

<p>You can use following code:</p>

<pre><code>for(int j=0; j&lt;a.size(); j++){
   int number = Integer.parseInt(a.get(j).toString());
   if(number&gt;=10 &amp;&amp; number&lt;=20){
     System.out.println(number);
   }
}
</code></pre>
"
16870445,"<p>Disclaimer: this is not a trie solution, but I still think it's an idea worth exploring.</p>

<p>Create some sort of hash function that only accounts for letters in a word and not their order (no collisions should be possible except in the case of permutations).  For example, <code>ABCD</code> and <code>DCBA</code> both generate the same hash (but <code>ABCDD</code> does not).  Generate such a hash table containing every word in the dictionary, using chaining to link collisions (on the other hand, unless you have a strict requirement to find ""all"" longest words and not just one, you can just drop collisions, which are just permutations, and forgo the whole chaining).</p>

<p>Now, if your search set is 4 characters long, for example <code>A, B, C, D</code>,  then as a näive search you check the following hashes to see if they are already contained in the dictionary:</p>

<pre><code>hash(A), hash(B), hash(C), hash(D) // 1-combinations
hash(AB), hash(AC), hash(AD), hash(BC), hash(BD), hash(CD) // 2-combinations
hash(ABC), hash(ABD), hash(ACD), hash(BCD) // 3-combinations
hash(ABCD) // 4-combinations
</code></pre>

<p>If you search the hashes in that order, the last match you find will be the longest one.</p>

<p>This ends up having a run time which is dependent on the length of the search set rather than the length of the dictionary.  If <code>M</code> is the number of characters in the search set, then the number of hash lookups is the sum <code>M choose 1 + M choose 2 + M choose 3 + ... + M choose M</code> which is also the size of the powerset of the search set, so it's <code>O(2^M)</code>.  At first glance this sounds really bad since it's exponential, but to put things in perspective, if your search set is size 10 there will only be around 1000 lookups, which is probably a lot smaller than your dictionary size in a practical real world scenario.  At M = 15 we get 32000 lookups, and really, how many English words are there that are longer than 15 characters?</p>

<p>There are two (alternate) ways I can think of to optimize it though:</p>

<p>1) Search for longer matches first e.g. M-combinations then (M-1)-combinations, etc.  As soon as you find a match, you can stop!  Chances are you will only cover a small fraction of your search space, probably at worst half.</p>

<p>2) Search for shorter matches first (1-combos, 2-combos, etc).  Say you come up with a miss at level 2 (for example, no string in your dictionary is composed only of <code>A</code> and <code>B</code>).  Use an auxiliary data structure (a bitmap perhaps) that allows you to check if any word in the dictionary is even <strong>partially</strong> composed of <code>A</code> and <code>B</code> (in contrast to your primary hash table which checks for <strong>complete</strong> composition).  If you get a miss on the secondary bitmap also, then you know that you can skip all higher level combinations including <code>A</code> and <code>B</code> (i.e. you can skip <code>hash(ABC)</code>, <code>hash(ABD)</code>, and <code>hash(ABCD)</code> because no words contain both <code>A</code> and <code>B</code>).  This leverages the <em>Apriori</em> principle and would drastically reduce the search space as M grows and misses become more frequent.  EDIT: I realize that the details I abstract away relating to the ""auxiliary data structure"" are significant.  As I think more about this idea, I realize it is leaning toward a complete dictionary scan as a subprocedure, which defeats the point of this entire approach.  Still, it seems there should be a way to use the <em>Apriori</em> principle here.</p>
"
11201955,"<p>Well, what I found is as follows,</p>

<p><strong>Return actually returns a value and its gets copied to  <code>String a=obj.go();</code>, before execution goes to Finally</strong>.</p>

<p>Lets verify it by following experiments.</p>

<pre><code>public class Test2 {

   public static void main(String[] args) {
     Test2 obj=new Test2();
     String a=obj.go();

     System.out.print(a);
   } 


   public String go() {
     String q=""hii"";
     try {
        return q;
     }
     finally {
        q=""hello"";
        System.out.println(""finally value of q is ""+q);
     }
}
</code></pre>

<p><strong>the output of the program is</strong></p>

<p><strong>finally value of q is hello</strong></p>

<p><strong>hii</strong></p>

<p>and if we take StringBuffer instead of String as follows,</p>

<pre><code>public class Test2 {

    public static void main(String[] args) {
        // TODO Auto-generated method stub

        Test2 obj=new Test2();
        StringBuffer a=obj.go();

        System.out.print(a);
    }


    public  StringBuffer go(){
        StringBuffer q=new StringBuffer(""hii"");
        try{

            return q;
        }
        finally{

            q.replace(0, q.length(), ""hello"");
            System.out.println(""finally value of q is ""+q);
            /*return q1;*/

        }

    }
}
</code></pre>

<p><strong>The output comesout to be,</strong></p>

<p><strong>finally value of q is hello</strong></p>

<p><strong>hello</strong></p>

<p>and finally if we take int instead of String as follows,</p>

<pre><code>public class Test2 {

    public static void main(String[] args) {
        // TODO Auto-generated method stub

        Test2 obj=new Test2();
        int a=obj.go();

        System.out.print(a);
    }


    public  int go(){
        int q=1;
        try{

            return q;
        }
        finally{

            q=2;
            System.out.println(""finally value of q is ""+q);
            /*return q1;*/

        }

    }
}
</code></pre>

<p><strong>the output is</strong> </p>

<p><strong>finally value of q is 2</strong></p>

<p><strong>1</strong></p>

<pre><code>                              **Ananlysis**
</code></pre>

<p>1.In first case, return copied adress of String in variable <strong>a</strong>, then excecution goes to Finally where String is changed. But since in case of Strings, we can't manipulate any String a new String is constructed. So in variable <strong>a</strong> address of original string is saved, which gets printed.</p>

<p>2.In second case, return copied address of StringBuffer in variable <strong>a</strong>, and in finally this StringBuffer object is manipulated, rather creating new one. so the value which was stored in variable <strong>a</strong> also gets manipulated, that's seen in print statement.</p>

<p>3.In third case,  value of int is copied in variable <strong>a</strong>, before execution goes to finally. and thus <strong>a</strong> gets value of 1. and then in finally we changed value of <strong>q</strong> which doesn't anyway change value of <strong>a</strong>.</p>
"
17368146,"<p>Everyone else has fixed your loop.</p>

<p>To answer the question in the title, the easiest way to break out of a complex loop is to put the complex loop in a method, and use the return statement.</p>

<p>Using your code as an example,</p>

<pre><code>public void someMethod(List&lt;Object&gt; a) {
    for (int j = 0; j &lt; a.size(); j++) {
        if (a.get(j).equals(10)) {
            System.out.println(a.get(j));
        } else {
            do {
                System.out.println(a.get(j));
            } while (a.get(j).equals(20));
            return;
        }
    }
}
</code></pre>
"
17309023,"<p>Here's my version of the solution:</p>

<pre><code>import java.util.ArrayList;

public class Main {

public static void main(String[] args) {

    ArrayList&lt;Integer&gt; randomNumbers = new ArrayList&lt;Integer&gt;();
    ArrayList&lt;Integer&gt; expandingPlace = new ArrayList&lt;Integer&gt;();
    ArrayList&lt;Integer&gt; sequenceOfDuplicates = new ArrayList&lt;Integer&gt;();

    for (int i = 0; i &lt; 100; i++) {
        randomNumbers.add((int) (Math.random() * 10));
        expandingPlace.add(randomNumbers.get(i));
    }

    System.out.println(randomNumbers); // Original list.

    for (int i = 0; i &lt; randomNumbers.size(); i++) {
        if (expandingPlace.get(i) == expandingPlace.get(i + 1)) {
            expandingPlace.add(0);
            sequenceOfDuplicates.add(expandingPlace.get(i)); 
            sequenceOfDuplicates.add(expandingPlace.get(i + 1));
        }
    }

    System.out.println(sequenceOfDuplicates); // What was in duplicate there.

}

}
</code></pre>

<p>It adds numbers from 0 to 9 to a list, and it adds to another list what is in ""duplicate"" (a number followed by the same number). You can use your big list instead of my randomNumbers ArrayList.</p>
"
16882002,"<p>I tried to code this problem in C++  ..where i created my own hash key and go through all the combination with the given characters.</p>

<p>Going through all the combination from these input characters from the largest length to 1</p>

<p>Here is my solution</p>

<pre><code>#include ""iostream""
#include &lt;string&gt;

using namespace std;

int hash_f(string s){
        int key=0;
        for(unsigned int i=0;i&lt;s.size();i++){
           key += s[i];
        }
        return key;
}

class collection{

int key[100];
string str[10000];

public: 
collection(){
    str[hash_f( ""abacus"")] = ""abacus""; 
    str[hash_f( ""deltoid"")] = ""deltoid""; 
    str[hash_f( ""gaff"")] = ""gaff""; 
    str[hash_f( ""giraffe"")] = ""giraffe""; 
    str[hash_f( ""microphone"")] = ""microphone""; 
    str[hash_f( ""reef"")] = ""reef""; 
    str[hash_f( ""qar"")] = ""qar""; 
}

string  find(int _key){
    return str[_key];
}
};

string sub_str(string s,int* indexes,int n ){
    char c[20];
    int i=0;
    for(;i&lt;n;i++){
        c[i] = s[indexes[i]];
    }
    c[i] = 0;
    return string(c);
}

string* combination_m_n(string str , int m,int n , int&amp; num){

    string* result = new string[100];
    int index = 0;

    int * indexes = (int*)malloc(sizeof(int)*n);

    for(int i=0;i&lt;n;i++){
        indexes[i] = i; 
    }

    while(1){
            result[index++] = sub_str(str , indexes,n);
            bool reset = true;
            for(int i=n-1;i&gt;0;i--)
            {
                if( ((i==n-1)&amp;&amp;indexes[i]&lt;m-1) ||  (indexes[i]&lt;indexes[i+1]-1))
                {
                    indexes[i]++;
                    for(int j=i+1;j&lt;n;j++) 
                        indexes[j] = indexes[j-1] + 1;
                    reset = false;
                    break;
                }
            }
            if(reset){
                indexes[0]++;
                if(indexes[0] + n &gt; m) 
                    break;
                for(int i=1;i&lt;n;i++)
                    indexes[i] = indexes[0]+i;
            }
    }
    num = index;
    return result;
}


int main(int argc, char* argv[])
{
    string str = ""aeffgirq"";
    string* r;
    int num;

    collection c;
    for(int i=8;i&gt;0;i--){
        r = combination_m_n(str, str.size(),i ,num);
        for(int i=0;i&lt;num;i++){
            int key = hash_f(r[i]);
             string temp = c.find(key);
            if(  temp != """" ){
                  cout &lt;&lt; temp ;
            }
        }
    }
}
</code></pre>
"
12020052,"<p>I'm not really a java expert, but if you are writing a method to store some sort of state in an object, you should have a private variable in a object and pass a value into the method and store it in the private variable.  You would initialize it with the constructor and have a </p>

<p><code>void fooSetWhatever(int i)
{
     privateInt = i
}</code></p>

<p>and have a </p>

<p><code>int i fooGetWhatever ()
{
   return privateInt;
}</code></p>

<p>if you want to add / subtract the value have</p>

<p><code>void fooAddToWhatever (int i)
{
    privateInt += i;
}</code></p>

<p><code>// can't remember if java likes +=, you could do privateInt = privateInt + i;</code></p>
"
16884514,"<p>I think the above answers missed the key point. We have a space with 27 dimensions, the first one is the length and the others the coordinates of each letter. In that space we have points, which are words. The first coordinate of a word is his length. The other coordinates are, for each letter-dimension is the number of occurrences of that letter in that word. For example the words <em>abacus</em>, <em>deltoid</em>, <em>gaff</em>, <em>giraffe</em>, <em>microphone</em>, <em>reef</em>,  <em>qar</em>, <em>abcdefghijklmnopqrstuvwxyz</em> have coordinates</p>

<pre><code>[3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[6, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0]
[7, 0, 0, 0, 2, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[4, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[7, 1, 0, 0, 0, 1, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[10, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[4, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[26, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
</code></pre>

<p>The good structure for a set with coordinates is a <a href=""https://en.wikipedia.org/wiki/R-tree"" rel=""nofollow"">R-tree</a> or a <a href=""http://en.wikipedia.org/wiki/R%2a_tree"" rel=""nofollow"">R*-Tree</a>. Given your collection [x0, x1, ..., x26], you have to ask all the words that contains at most xi letter, for each letter. Your search is in O(log N), where N is the number of words in your dictionary. However you don't want to look at the biggest word in all the words that match your query. This is why the first dimension is important. </p>

<p>You know that the length of the biggest word is between 0 and X, where X=sum(x_i, i=1..26). You can search iteratively from X to 1, but you can also do a <a href=""http://en.wikipedia.org/wiki/Binary_search_algorithm"" rel=""nofollow"">binary search algorithm</a> for the length of the query. You use the first dimension of your array as the query. You start from a=X to b=X/2. If their is at least a match, you search from a to (a+b)/2, else you search from b to b-(a-b)/2=(3b-a)/2. You do that until you have b-a=1. You now have the biggest length and all the matches with this length.</p>

<p>This algorithm is asymptotically much more efficient than the algorithms above. The time complexity is in O(ln(N)×ln(X)). The implementation depend on the R-tree library you use.</p>
"
11765858,"<p>You could multiply the number by 10, cast it as an integer, and then divide it by 10.0 to get a double with exactly one decimal point.</p>

<pre><code>area = ((int) (area * 10)) / 10.0;
</code></pre>

<p>Instead of casting to an int, you could use <code>Math.floor</code></p>

<pre><code>area = Math.floor(area * 10) / 10.0;
</code></pre>

<p>Now, further arithmetic could make the number have a different number of decimal places.</p>

<p><strong>Edit:</strong></p>

<p>This is assuming the OP wants to keep the return value as a double instead of a String (as other answers have provided).</p>
"
17530027,"<p>If you are using Maven then</p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;commons-lang&lt;/groupId&gt;
    &lt;artifactId&gt;commons-lang&lt;/artifactId&gt;
    &lt;version&gt;2.3&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
"
16914821,"<p>The first thing to note is that you can completely ignore the letter order.</p>

<p><strong>Have a trie (well, sort of a trie) as follows:</strong></p>

<ul>
<li>From the root, have 26 children (maximum), one for each letter.</li>
<li>From each non-root node have children equal to the number of letters greater or equal to the node's letter.</li>
<li>Have each node store all words that can be made using (exactly) the letters in the path from the root.</li>
</ul>

<p><strong>Build the trie like this:</strong></p>

<p>For each word, sort the letters of this word and insert the sorted letters into the trie (by creating a path of these letters from the root), creating all required nodes as you go. And store the word at the final node.</p>

<p><strong>How to do a look-up:</strong></p>

<p>For a given set of letters, lookup all subsets of letter (most of which hopefully won't exist) and output the words at each node encountered.</p>

<p><strong>Complexity:</strong></p>

<p><code>O(k!)</code>, where <code>k</code> is the number of supplied letters. Eek! But luckely the less words there are in the trie, the less of the paths will exist and the less time this will take. And <code>k</code> is <strong>the number of supplied letters</strong> (which should be relatively small), not the number of words in the trie.</p>

<p>Actually it may be more along the lines of <code>O(min(k!,n))</code>, which looks a lot better. Note that if you're given enough letters, you'll have to look up all words, thus you have to do <code>O(n)</code> work in the worst case, so, in terms of the worst case complexity, you can't do much better.</p>

<p><strong>Example:</strong></p>

<p>Input:</p>

<pre><code>aba
b
ad
da
la
ma
</code></pre>

<p>Sorted:</p>

<pre><code>aab
b
ad
ad
al
am
</code></pre>

<p>Trie: (just showing non-null children)</p>

<pre><code>     root
     /  \
    a    b
 /-/|\-\
a b d l m
|
b
</code></pre>

<p>Lookup of <code>adb</code>:</p>

<ul>
<li>From the root...</li>
<li>Go to child <code>a</code>
<ul>
<li>Go to child <code>b</code>
<ul>
<li>No children, return</li>
</ul></li>
<li>Go to child <code>d</code>
<ul>
<li>Output words at node - <code>ad</code> and <code>da</code></li>
<li>No children, return</li>
</ul></li>
<li>All letters processed, return</li>
</ul></li>
<li>Go to child <code>b</code>
<ul>
<li>Output words at node - <code>b</code></li>
<li>Not looking for <code>a</code> child, as only children >= <code>b</code> exists</li>
<li>No <code>d</code> child, return</li>
</ul></li>
<li>No <code>d</code> child, stop</li>
</ul>
"
11855969,"<p>I don't think this is a bad idea.</p>

<p>If they aren't going to change then make sure you mark the fields with the appropriate keywords eg <code>Final</code>.</p>

<p>It also a good idea to make non changing values appear differently.  eg Constants in Java are typically done in all caps.</p>
"
11858911,"<p>I'm pretty sure this should solve your problem:</p>

<pre><code>    int largestNumber = Integer.MIN_VALUE;
    int smallestNumber = Integer.MAX_VALUE; 

    for(int i = 0; i &lt; yourArray.Length; i++)
    {
        if(yourArray[i] &gt; largestNumber)
            largestNumber = yourArray[i];

        if(yourArray[i] &lt; smallestNumber)
            smallestNumber = yourArray[i];

    }

    int biggestDifference = largestNumber - smallestNumber ;
</code></pre>
"
12221664,"<p>Try this:</p>

<pre><code>if (but1 == true &amp;&amp; but2 == true) {
    // do something
}
</code></pre>
"
12221667,"<p>You cannot compare variables with <code>=</code>.  A single equals sign is used for assignment, where <code>==</code> is used for comparison.</p>

<p>In Java, you can do the following:</p>

<pre><code>if (a == true &amp;&amp; b == true)
{
//do code
}
</code></pre>
"
17547868,"<p>Use the event beforeunload with jquery on your page.</p>

<p>The beforeunload event fires whenever the user leaves your page for any reason.</p>

<p>For example, it will be fired if the user submits a form, clicks a link, closes the window (or tab), or goes to a new page using the address bar, search box, or a bookmark.</p>

<p>You could exclude form submissions and hyperlinks (except from other frames) with the following code:</p>

<pre><code>var inFormOrLink = false;
        $(document).on('click','a', function() { inFormOrLink = true; });
        $(document).bind('submit','form', function() { inFormOrLink = true; });

        $(window).on('beforeunload',document, function(eventObject) {
            var returnValue = undefined;
            if (inFormOrLink == false) {
                //do your action

            }

        }); 
</code></pre>

<p><strong>EDIT:</strong> Answer found here: <a href=""http://stackoverflow.com/questions/1631959/browser-window-close-event#1632004"">Browser window close event</a></p>
"
12239489,"<pre><code>private static String findMin(String[] list) {
    String minState = list[0]; 
    for(int i=1; i&lt;list.length; i++){
        String min=list[i];
        minState=(min!=null&amp;&amp;min.compareTo(minState)&lt;0)?min:minState;
    }
    return minState;
}
</code></pre>
"
17584623,"<p>It seems you are using old quick-json parser version. Use the latest version for parsing</p>

<p>quick-json-1.0.2.3.jar</p>

<p>I could see that the json is coming as follows,</p>

<pre><code>// [
{
""id"": ""99624""
,""t"" : ""CSCO""
,""e"" : ""NASDAQ""
,""l"" : ""25.41""
,""l_cur"" : ""25.41""
,""s"": ""2""
,""ltt"":""3:59PM EDT""
,""lt"" : ""Jul 10, 3:59PM EDT""
,""c"" : ""+0.25""
,""cp"" : ""1.01""
,""ccol"" : ""chg""
,""el"": ""25.55""
,""el_cur"": ""25.55""
,""elt"" : ""Jul 10, 7:07PM EDT""
,""ec"" : ""+0.14""
,""ecp"" : ""0.55""
,""eccol"" : ""chg""
,""div"" : ""0.17""
,""yld"" : ""2.68""
}
]
</code></pre>

<p>This is not valid JSON,  it should not be preceded by <code>//</code></p>

<pre><code>// [
</code></pre>

<p>remove <code>//</code> and just use from <code>[</code> till end of the json string</p>

<p>i was able to parse successfully the below json string without <code>//</code></p>

<pre><code>[
{
""id"": ""99624""
,""t"" : ""CSCO""
,""e"" : ""NASDAQ""
,""l"" : ""25.41""
,""l_cur"" : ""25.41""
,""s"": ""2""
,""ltt"":""3:59PM EDT""
,""lt"" : ""Jul 10, 3:59PM EDT""
,""c"" : ""+0.25""
,""cp"" : ""1.01""
,""ccol"" : ""chg""
,""el"": ""25.55""
,""el_cur"": ""25.55""
,""elt"" : ""Jul 10, 7:07PM EDT""
,""ec"" : ""+0.14""
,""ecp"" : ""0.55""
,""eccol"" : ""chg""
,""div"" : ""0.17""
,""yld"" : ""2.68""
}
]
</code></pre>

<p>Below is the output i've got with version <strong>quick-json-1.0.2.3.jar</strong></p>

<pre><code>{root=[{e=NASDAQ, c=+0.25, div=0.17, l=25.41, lt=Jul 10, 3:59PM EDT, ec=+0.14, ltt=3:59PM EDT, elt=Jul 10, 7:07PM EDT, id=99624, yld=2.68, el_cur=25.55, t=CSCO, cp=1.01, s=2, el=25.55, l_cur=25.41, eccol=chg, ccol=chg, ecp=0.55}]}
</code></pre>
"
14009220,"<pre><code>for(int i=0; i&lt;myArray.length; i++)
{
  if(myArray[i] != 0)
  {
    completed = true;break;
  }
}
</code></pre>

<p>Just look for non zero.</p>

<p>OR</p>

<pre><code>for(int i=0; i&lt;myArray.length; i++)
{
  if(myArray[i] == 0)
  {
    completed = false;break;
  }
}
</code></pre>

<p>Just look for zero.</p>
"
14009232,"<p>Alternately, you could do </p>

<pre><code>var completed = true;
for(int i=0; i&lt;myArray.length; i++)
{
   if(myArray[i] == 0)
   {
       completed = false;
   }
}
</code></pre>

<p>Which would do the same. </p>
"
12263835,"<p>NO This is not a singleTon</p>

<pre><code>public class Final_output{
   private static Final_output ourInstance = new Final_output();
   Cafe_factory obj=null;    

   private Final_output() {
     obj = new Cafe_factory();
     obj.getOrder(""French Fries"");
     obj.getOrder(""Biryani"");
     obj.getOrder(""Ice-cream"");
   }

   public Final_output getINstance(){
       return ourInstance;
   }

}
</code></pre>
"
14040467,"<p>Try it : </p>

<pre><code> String example = ""[""41020834846 - Yan Oda 1"";
    String pattern = ""^(\[\"")"";
    example = example.replaceAll(pattern,""""));
</code></pre>
"
11609587,"<p>Well....notify serves purpose of premature notifying to the threads waiting on the locked object. if you don't use Notify ,then certainly when it finishes it releases lock. </p>

<pre><code>So that is equivalent to notify
</code></pre>

<p>no it's not..Consider the situation below.</p>

<pre><code>class Job extends Thread {  
    private Integer number = 0;  
    public void run() {

       synchronized(this) {
       for (int i = 1; i &lt; 1000000; i++) {  
            number++;  
        }  
        notify();     //releases lock here and your main thread continues
        do sumthing...
        do sumthing...
        }  
    }
    public Integer getNumber() {  
        return number;  
    }  
}  
</code></pre>

<p>if you don't use notify() ...lock will be released only after you do all your sumthings..</p>
"
12107908,"<p>If you want to catch more than two numbers like ""1.5.6"" or ""1.5.0"" you can use</p>

<p><code>[0-9](.[0-9])+</code></p>

<p>Or if you only want the first two digits
<code>[0-9].[0-9]</code> , but this will not work on strings like 1.5.0.0, it will catch 1.5 and 0.0.</p>
"
17553484,"<p>Not only is <code>s</code> only visible in the loop in the second but much more importantly, a new <code>s</code> is instantiated every run of the loop.  You may want this, you may not. There will be a performance cost to new instantiations, but it is safer if you want to make sure it is garbage collected once you leave the loop and you don't try to access it elsewhere.</p>
"
14189865,"<p>Actually no String objects will be created just two String literals. 
When Strings are initialized like you have they are literals not objects. If you wanted to create String objects you would do the following</p>

<pre><code>String a = new String(""abcd"");
</code></pre>
"
17261682,"<p><code>public static String setPrecision(String number, int decimal){</code></p>

<pre><code>    double nbr = Double.valueOf(number);
    int integer_Part = (int) nbr;
    double float_Part = nbr - integer_Part;
    int floating_point = (int) (Math.pow(10, decimal) * float_Part);
    String final_nbr = String.valueOf(integer_Part) + ""."" + String.valueOf(floating_point);
    return final_nbr;

}`
</code></pre>
"
14192227,"<p>you can create your variable as you want.</p>

<pre><code>public class MyVariable{
    public byte variable;
    MyVariable(int a){
        variable = new byte[a];
    }
}
</code></pre>
"
12503276,"<p>Get the file input, then split it using a '.' as a delimiter maybe?
to set a delimiter:</p>

<pre><code>Scanner line_scanner = new Scanner(line).useDelimiter(""."");
</code></pre>

<p>read the file URL twice, once for the filename and once for the extension.</p>
"
11805040,"<p>I'm pretty sure you can do this:</p>

<pre><code>public static int numDivisible(int low, int high, int test) {
    return (high-low)/test;
}
</code></pre>

<p>There you go. A constant-time solution. Since you don't need to know exactly <em>which</em> numbers are divisible, you don't need to bother iterating through all of them.</p>

<p><strong>EDIT</strong>: Change this to the following, as per @Chaser324.</p>

<pre><code>public static float numDivisible(float low, float high, float test) {
    return Math.ceil((high-low)/test);
}
</code></pre>

<p><strong>EDIT</strong>: A small typo ie., changed <code>text</code> to <code>test</code></p>
"
11805055,"<p>Rather than iterating over each and every number, you could try</p>

<pre><code>public int test(int floor, int ceil, int n) {
    int a = (floor / n) + 1;
    int counter = 0;
    while (a * n &lt;= ceil) {
        counter++;
        a++;
    }
    return counter;
}
</code></pre>

<p>and only use multiples of the divisor. Now you're not doing repeated division (slow), you're doing repeated multiplication (faster).</p>
"
11805332,"<pre><code>public static int solution(int low,int high, int n) {
    boolean h0=high%n==0;
    boolean l0=low%n==0;

    int k1=l0?low/n:(low+n-low%n)/n;
    int k2=h0?high/n:(high+n-high%n)/n;

    //                 |-----------|
    // ---------------k1----------k2---------------

    if(k2*n&gt;high) k2--;

    return k2-k1+1;

}
</code></pre>
"
12541211,"<pre><code>String s=""ABCD"";
String z=""ABCD"";
</code></pre>

<p>refer to the same Strings in memory pool.
Howewver</p>

<pre><code>String s=new String(""ABCD"");
String z=new String(""ABCD"");
</code></pre>

<p>produce separate memory spaces for the Strings.
So the output is such.
This also answers your first question.</p>
"
12541235,"<p>When we calling the below statements</p>

<pre><code>String s=""ABCD"";
String z=""ABCD"";
</code></pre>

<p>Then it will be checked in string pool and if already exists in pool then address is referenced to the variable.<br>
But when we call <code>new</code> keyword then explicitly saying to create new memory.</p>
"
12541251,"<p>I am not sure about this but i guss in secound example </p>

<pre><code>String s=new String(""ABCD"");
String z=new String(""ABCD"");
</code></pre>

<p>It is declare like an object so when you try to check equality sure will give u <code>false</code>( object can't equal object)</p>
"
17686252,"<pre><code>public String addAnd(String[] s)
{
    String result = """";
    for (int i = 0; i &lt; s.length - 2; i++)
    {
        result += s[i] + "", ""
    }
    result += s[s.length - 2];
    result += ("" &amp; "" + s[s.length - 1]);
    return result;
}
</code></pre>

<p>This should do the trick.</p>
"
18149227,"<p>Split word into characters</p>

<pre><code>String[] parts = string.split("""");
</code></pre>

<p>print characters, one per line</p>

<pre><code>for(String char : parts){
    System.out.println( char );
}
</code></pre>
"
11805351,"<p>Kindly provide comments on algorithm below: Suppose the range is [R1,R2] and number to be divided is n.</p>

<p>Find the smallest number starting from R1 divisible by n.Call it small. </p>

<p>Find the largest number starting from R2 divisible by n. Call it large.</p>

<p>Total numbers that are divisible= (large-small)/n + 1.</p>

<p>Worst case is still O(n) but might be efficient for large difference between R1 and R2.Hopefully I have covered all cases. Kindly suggest.</p>

<pre><code>int numofDivisible(int R1, int R2, int n) {

int small = R1, large= R2;

if ((R1 &gt; R2) || (n==0)) return 0;

if (R1 == R2) {
    if (R1 % n == 0) 
        return 1;
    else 
        return 0;
}

while(small &lt;= R2){

     if(small % n == 0)
         break;

      ++small;
}

if (small &gt; R2)
    return 0;


while (large &gt; small) {

    if (large % n == 0)
       break;

    --large;
}

if (large == small)
   return 1;

return ((large-small)/n + 1);

}
</code></pre>
"
17769293,"<p>Here's a simple way: just comment out the code for <code>setValue</code>. You can uncomment it after testing. Since in many cases like this a mechanism is needed to fake failures, it would be a good idea to  build a general mechanism for all such cases. </p>
"
14323778,"<p>You could disable Auto activation via the check box in</p>

<pre><code>Window -&gt; Preferences -&gt; Java/Editor/Content Assist
</code></pre>

<p>and activate the auto-complete feature on demand. The default hotkey for this is </p>

<p><kbd>CTRL</kbd>+<kbd>Space</kbd></p>
"
18207757,"<pre><code>&lt;script&gt;
    word = ""{\'\i}"";
    a = word.replace(""{"","" """");
    a = a.replace(""}"", """");
    a = a.replace(""'"", """");

&lt;/script&gt;
</code></pre>

<p>Just create another rule with the character you want to replace. 
Not a very good solution but its the most ""clean"".</p>
"
11900207,"<pre><code>    int num=1234;
    String text=""""+num;
    String t1=text.substring(0, 2);
    String t2=text.substring(2, 4);
    int num1=Integer.valueOf(t1);
    int num2=Integer.valueOf(t2);
    System.out.println(num1+"" ""+num2);
</code></pre>
"
12680541,"<p>With <code>String a</code> and <code>String b</code>,</p>

<p>are you doing an <code>a == b</code> instead of <code>a.equals(b)</code> ?</p>
"
18205376,"<p>The arguments passed to the main method are from command line. So they are <code>String</code></p>

<p>main method can also be written like this</p>

<pre><code>public static void main(String... args) {

 }
</code></pre>
"
12511965,"<p>I would remove the string value and the duplicate IE instance, its of no use ...</p>

<pre><code>enum Browser {
    CHROME,
    FIREFOX,
    IE
</code></pre>

<p>If you must have lower case representation just convert from enum name when you need it.</p>
"
18261216,"<p>There is a race condition between the time Runtime.exec kicks off a <strong>new thread</strong> to start a Process and when you tell that process to destroy itself.</p>

<p>I'm on a linux machine so I will use the UNIXProcess.class file to illustrate.</p>

<p><code>Runtime.exec(...)</code> will create  a new <code>ProcessBuilder</code> and start it which on a unix machine creates a new <code>UNIXProcess</code> instance.  In the constructor of <code>UNIXProcess</code> there is this block of code which actually executes the process in a background (forked) thread:</p>

<pre><code>java.security.AccessController.doPrivileged(
            new java.security.PrivilegedAction() {
    public Object run() {
    Thread t = new Thread(""process reaper"") {
        public void run() {
                    try {
                        pid = forkAndExec(prog,
                      argBlock, argc,
                      envBlock, envc,
                      dir,
                      redirectErrorStream,
                      stdin_fd, stdout_fd, stderr_fd);
                    } catch (IOException e) {
                        gate.setException(e); /*remember to rethrow later*/
                        gate.exit();
                        return;
                    }
                    java.security.AccessController.doPrivileged(
                    new java.security.PrivilegedAction() {
                        public Object run() {
                        stdin_stream = new BufferedOutputStream(new
                                                FileOutputStream(stdin_fd));
                        stdout_stream = new BufferedInputStream(new
                                                FileInputStream(stdout_fd));
                        stderr_stream = new FileInputStream(stderr_fd);
                        return null;
                    }
                    });
                    gate.exit(); /* exit from constructor */
        int res = waitForProcessExit(pid);
        synchronized (UNIXProcess.this) {
            hasExited = true;
            exitcode = res;
            UNIXProcess.this.notifyAll();
        }
        }
    };
            t.setDaemon(true);
            t.start();
    return null;
    }
});
</code></pre>

<p>Notice that the background thread sets the field <code>pid</code> which is the UNIX process id.  This will be used by <code>destroy()</code> to tell the OS which process to kill.</p>

<p>Because there is no way to make sure that this background thread has run when <code>destroy()</code> is called, we may try to kill the process before it has run OR we may try to kill the process before pid field has been set;  pid is uninitialized and therefore is 0.  So I think calling destroy too early will do the equivalent of a <code>kill -9 0</code></p>

<p>There is even a comment in the UNIXProcess <code>destroy()</code> that alludes to this but only considers calling destroy after the process has already finished, not before it has started:</p>

<pre><code>// There is a risk that pid will be recycled, causing us to
// kill the wrong process!  So we only terminate processes
// that appear to still be running.  Even with this check,
// there is an unavoidable race condition here, but the window
// is very small, and OSes try hard to not recycle pids too
// soon, so this is quite safe.
</code></pre>

<p>The pid field is not even marked as volatile so we may not even see the most recent value all the time.</p>
"
14382283,"<p>Workaround solution: Use <strong>StringBuilder</strong> instead of <code>String</code>. Of course, <code>StringBuilder</code> cannot be changed reference in the <code>handleEvent</code>, but we could invoke its method.</p>

<pre><code>    final StringBuilder sb = new StringBuilder();

    Listener selection = new Listener() {

        public void handleEvent(Event event) {
        ...
        switch (comboVal) {
             case ""A"": sb.delete(0, sb.length()).append(""a"");
             case ""B"": sb.delete(0, sb.length()).append(""b"");
            ...
        }
       }
    };

...
System.out.println(sb.toString());
</code></pre>

<p>Then you could get String value by <code>StringBuilder.toString();</code></p>

<p><em>EDIT: Please provide the reason voting down this answer.</em></p>
"
18262109,"<p>Its not really good programming practice, but you can create a class with 3 public data members, and have your code look something like this. (Ill call the class ""myclass"")</p>

<pre><code>public a, b, c = null;

//And then your main class would look something like this
if (condition){
  myclass.a=whatever;
}
else if (condition){
  myclass.b=whatever;
}
else if (condition){
  myclass.c=whatever
 }
</code></pre>

<p>Then you would need another control structure that said something along the lines of
if (myclass.datamember!=null) to make sure you have values in the class data members.  Again, this is not good programming practice, but it will work for what you want.</p>
"
12744073,"<pre><code>(x-1, y-1) -&gt; upper left
(x-1, y) -&gt; left
(x-1, y+1) -&gt; lower left
</code></pre>

<hr>

<pre><code>(x, y+1) -&gt; up
(x, y) -&gt; current position
(x, y-1) -&gt; down
</code></pre>

<hr>

<pre><code>(x+1, y+1) -&gt; upper right
(x+1, y) -&gt; right
(x+1, y-1) -&gt; lower right
</code></pre>

<p>You can use this as guide. Now all you need to do is add them in a try catch.</p>

<pre><code> for( int x=0; x&lt;arr.length; x++ ){
  for(int y=0; y&lt;arr[x].length; y++){
  if( arr[x][y] == 8 ){
    try{
      System.out.println(""Upper Left is: "" + arr[x-1][y-1]);
    }catch(ArrayIndexOutOfBoundsException e){
     //do something
    }


    try{
      System.out.println(""Left is: "" + arr[x-1][y]);
    }catch(ArrayIndexOutOfBoundsException e){
     //do something
    }

    //.....and others
   }
  }
</code></pre>
"
18118574,"<p>well the most convenient way to do this is by making the  <code>sppAcronym</code> as private variable and providing public setters and getters for the same , this way u can create an object of the class y.java like </p>

<pre><code>y obj=new y();
</code></pre>

<p>and use the setter and getter in your x.java 
an example can be :-</p>

<p>in y.java</p>

<pre><code>private String sppAcronym;
public void setsppAcronym(String sppAcronym)
{
this.sppAcronym=sppAcronym;
}
public String getsppAcronym()
{
return sppAcronym;
}
</code></pre>

<p>in x.java </p>

<pre><code>y obj=new y();

obj.setsppAcronym(getAcronym);
String sppAcronym=obj.getsppAcronym();
</code></pre>
"
12160130,"<p>One possible reason for this could be <code>click()</code> method is not able to dispatch <code>click</code> event on every element.</p>

<p>Hence, you could explicitly fire <code>click</code> event on the element you are trying to click.</p>
"
17811622,"<p>Isn't</p>

<pre><code>nextIndex() 
</code></pre>

<p>what you are looking for instead of y? 
P.s. using ListIterator</p>

<p>Edited:
this is what I meant in code:</p>

<pre><code>Iterator&lt;E&gt; it = list.iterator();
while (it.hasNext()){
    process(it.next(), it.previousIndex());
}
</code></pre>
"
18461014,"<p>I have made a jar with and keep it on desktop.Then,I double clicked on the jar and it working fine for me.</p>

<p><em>How I and what I have monintored:</em> In my main class, perform some operation and at the end I add on <code>Thread.sleep(25000);</code> to hold the program for few moments. After every double click on the exported jar I found one new <strong>javaw.exe process</strong> added in the system process tree. I have noticed it on Task manager. and after 25000ms respective javaw.exe process ended. As my application does not cointain any GUI that's why I have not seen any GUI changes for the respective process. I'm Confident that if my application have some GUI, I will surely get the respective GUI window on every run.</p>

<p><em>Common mistakes :</em> when we export a project from Eclipse as Runnable JAR file, it is exported with selected Eclipse launch configuration and Eclipse specific launch wrappers. Now if the configuration does not match when you are trying to run it via double-click you will not be able to see the error, If you run it from CMD then surely you will get the error log. </p>

<p><em>To create standard executable JAR file :</em> To create a standard executable JAR file, you can export as <strong>JAR file</strong> and <strong>specify the main class</strong> in last screen of the wizard.</p>

<p>That's working for me fine. I used the same jar from different system and keeping it different location.</p>
"
14428287,"<p>I think it depends on what your constructor is doing.  If your constructor is merely doing raw setting of variables, then I don't think you need to include setters for them.</p>

<p>However, if your constructor code is doing any kind of business logic prior to setting the value of a variable, then I think this warrants creating a setter for at least the variable in question (if not all of them).</p>

<p>For example, if your constructor code does this, then don't include any setters:</p>

<pre><code>public MyClass( String varA, String varB, int varC )
{
  this.varA = varA;
  this.varB = varB;
  this.varC = varC;
}
</code></pre>

<p>But if your code does this, you should include a setter to decouple the logic and make it cleaner:</p>

<pre><code>public MyClass( String varA, String varB, int varC )
{
  if ( varA == null )
  {
    this.varA = '(empty)';
  }
  else
  {
    this.varA = varA;
  }

  this.varB = varB;

  if ( varC &lt; 0 )
  {
    callSomeMethod();
  }

  this.varC = varC;
}
</code></pre>

<p>This kind of logic warrants creating setters.  </p>
"
12174661,"<p>static variable belongs to the class and not to object(instance).
A static variable can be accessed directly by the class name and doesn’t need any object.
it saves space not having to have variables for the same data for each class. </p>

<pre><code>Syntax : &lt;class-name&gt;.&lt;variable-name&gt;

public class AA{

 static int a =10;


}
</code></pre>

<p><strong>You can call</strong></p>

<pre><code>System.out.println(AA.a);
System.out.println(aObject.a);
</code></pre>

<p>There is no differen between two calling but maintain coding convention to keep more readbale </p>
"
13018155,"<p>This will not work <code>java -cp lib\*.jar -jar myproject.jar</code>. You have to put it jar by jar.</p>

<p>So in case of <code>commons-codec-1.3.jar</code>.</p>

<p><code>java -cp lib/commons-codec-1.3.jar;lib/next_jar.jar</code> and so on.</p>

<p>The other solution might be putting all your jars to <code>ext</code> directory of your JRE. This is ok if you are using a standalone JRE. If you are using the same JRE for running more than one application I <b>do not</b> recommend doing it.</p>
"
14465180,"<p>It seems like what you want to do is check the condition and then if it is false wait until timeout.  Then, in the other thread, notifyAll once the operation is complete.</p>

<p><strong>Waiter</strong></p>

<pre><code>syncrhonized(sharedObject){
  if(conditionIsFalse){
       sharedObject.wait(timeout);
       if(conditionIsFalse){ //check if this was woken up by a notify or something else
           //report some error
       }
       else{
           //do stuff when true
       }
  }
  else{
      //do stuff when true
  }
}
</code></pre>

<p><strong>Changer</strong></p>

<pre><code>  syncrhonized(sharedObject){
   //do stuff to change the condition
   sharedObject.notifyAll();
 }
</code></pre>

<p>That should do the trick for you.  You can also do it using a spin lock, but you would need to check the timeout every time you go through the loop.  The code might actually be a bit simpler though.</p>
"
18527080,"<p>Try,</p>

<pre><code>int retval = Double.compare(nextArea, smallestArea);

if(retval &lt; 0)
{
  System.out.println(""smallestArea is greater than nextArea"");
  smallest = next;
}
</code></pre>
"
18229464,"<p>No, you don't need to do that. Because second window is already close, and if you will use method <code>driver.close()</code> it will close your first window and the browser itself(because there is only one tab left in browser window).</p>
"
18231919,"<p>Its depends upon the Window, </p>

<ol>
<li><p>some Window close while click on outside Window content, in that case no need of <code>driver.close()</code> method. </p></li>
<li><p>but for some Window, click on outside the Window content, Window unable to close (i.e. Window gets close after click on close button), in that case need to close such Window using the<code>driver.close()</code> method.</p></li>
</ol>
"
13150182,"<p>psuedo code</p>

<pre><code>function revarray(a[1...n])
  if a.length == 1 or a.length == 0
    do nothing 
  # return a
  else
     swap a[1] and a[n]
     revarray(a[2...n-1])
  # return a (The function will not return anything but the contents of a are changed)
</code></pre>
"
17962884,"<p>That's an unfortunate design decision in Java that primitive types (<code>int</code> is one of them) are treated differently from objects. You cannot use <code>new</code> to create an <code>int</code>; you treat them just like you would in C, for example – just assign a value, no need to construct anything:</p>

<pre><code>int foo = 0;
</code></pre>

<p>Note that you cannot use local variables that haven't been initialised explicitly before.</p>

<p>There are wrapper classes, e.g. <code>Integer</code> that simply wrap primitive types to allow them to be used in contexts where an actual object or class is required (e.g. generics), but in your case that doesn't seem to be necessary.</p>
"
18604189,"<p>You are getting String index out of line because you tried to access characters outside of the string (valid range is from 0 to length-1). And even if you used length-1, your code will not do what you want. What you really need is to have two dummy placeholders (I assume your string will never contain '#' or '$') replacing 'a' and 'e' and then swap 'a' and 'e' with the dummy placeholders. The code follows:</p>

<pre><code>System.out.println(""Write something awesome."");
String input1 = ""I like to eat bananas"";//Keyboard.readString();
System.out.println(""Pick a letter from that awesome sentence."");
char letter1 = 'e';
System.out.println(""Pick another letter from that awesome sentence."");
char letter2 = 'a';

// dummy placeholders
char letter3 = '#';
char letter4 = '$';

String newUserImput = input1.replace (letter1, letter3);
newUserImput = newUserImput.replace (letter2, letter4);
newUserImput = newUserImput.replace (letter3, letter2);
newUserImput = newUserImput.replace (letter4, letter1);

System.out.println(newUserImput);        
</code></pre>
"
14650409,"<p>You are checking <code>i&lt;=n</code>.So when <code>i==n</code>, you will get 0 only and it will return false always.Try <code>i&lt;=(n/2)</code>.No need to check until <code>i&lt;n</code>.</p>
"
13242179,"<p>City17Mogul, </p>

<p>I stopped reading at your main method, because I already found a show-stopper: You're not doing anything at all with <code>args</code> (the command-line arguments passed into the main method)... so your <code>source</code>, <code>uniqueWord</code>, and <code>word</code> variables are ALLWAYS <code>null</code>... and I presume that is the root cause of your <code>NullPointerException</code>'s.</p>

<p>You might also want to google for: How to read a stacktrace... it's a skill new programmers must learn, and the skill is even portable between (almost all) modern languages.</p>

<p>The stacktrace would have told you exactly which line of code the NPE occurs on, and from there it's usually pretty easy to workout which variable(s) is/are null... especially if you use a debugger... just put a breakpoint on the offending line, rerun the program WITH THE SAME INPUTS, and examine the value of all variables on that line... one or more of them must be null.</p>

<p>Cheers. Keith.</p>
"
18747072,"<p><code>Update - this ""solution"" is no longer valid (see my above accepted answer) - keeping this answer because it did help alleviate the problem so long as the side-effects are tolerable.</code></p>

<p>Ok, I may have found a work-around for my case.</p>

<pre><code>props.put(""mail.smtp.ssl.trust"", ""smtp.somecompany.com"");
</code></pre>

<p>I added this to my Session construction, and now it works. This is a work-around, not a fix imho since I still do not know why my Godaddy SSL cert is not default trusted... it is not a self-signed cert. </p>

<p>Anyone please feel free to chime in as I'd really like to understand this problem.</p>
"
18336107,"<pre><code>public static void main(String[] args) {
    // TODO Auto-generated method stub
     String[] stringArrays ={""a"",""s"",""d"",""f"",};
     for (int i = 0; i &lt; stringArrays.length; i++) {
        System.out.println(stringArrays[i]);
    }


}
</code></pre>
"
13370535,"<p>You can try this (to the best of my knowledge, you cannot add primitive types to ArrayList):</p>

<pre><code>ArrayList&lt;Integer&gt; arr = new ArrayList&lt;Integer&gt;();

for(int i = 0; i &lt; someNumber; i++)
{
   arr.add(0);
}
</code></pre>

<p>Remember that when size is 0 because it does not have any default values and the capacity is what you should be looking at (You can set the capacity in the constructor.)</p>
"
18769139,"<p><code>In.available()</code> just tells you that there is no data to be consumed by <code>in.read()</code> without blocking (waiting) at the moment but it does not mean the end of stream. But, they may arrive into your PC at any time, with TCP/IP packet. Normally, you never use <code>in.available()</code>. <code>In.read()</code> suffices everything for the reading the stream entirely. The pattern for reading the input streams is </p>

<pre><code>byte[] buf;
int size;

while ((size = in.read(buf)) != -1)
  process(buf, size);

// end of stream has reached
</code></pre>

<p>This way you will read the stream entirely, until its end. </p>

<p><strong>update</strong> If you want to read multiple files, then chunk you stream into ""packets"" and prefix every one with an integer size. You then read until size bytes is received instead of <code>in.read = -1</code>.</p>

<p><strong>update2</strong> Anyway, never use <code>in.available</code> for demarking between the chunks of data. If you do that, you imply that there is a time delay between incoming data pieces. You can do this only in the real-time systems. But Windows, Java and TCP/IP are all these layers incompatible with real-time.</p>
"
13054937,"<pre><code>For i = 2 to n

   check whether A[i-1] &amp;&amp; A[i] are with diff sign..
   in C++; return  ((A[i-1] ^  A[i]) &lt; 0).  
</code></pre>

<p>Same explained here : <a href=""http://www.youtube.com/watch?v=Z59REm2YKX0"" rel=""nofollow"">http://www.youtube.com/watch?v=Z59REm2YKX0</a></p>

<p><strong>EDIT</strong></p>

<p>If an integer is negative, then the high order bit is 1.  Otherwise, it's 0.  You can check if two integers have different signs by XORing them together.  If the signs are different, then the high order bit of the result will be 1.  If they're the same, then the high order bit will be 0.  Thus,</p>

<p>A XOR B &lt; 0 is equivalent to ""A and B have different signs""</p>

<p><em>Peter Ruderman</em>  </p>
"
18836995,"<p>Dont use == on ""Integers"" you are comparing references.<br>
Either unbox into int or use <code>equals(</code></p>
"
13451342,"<p>Wait a second.. Why u need to parsing that if u have a right value ?
Anyway, i use this :</p>

<pre><code>SimpleDateFormat oFormat = new SimpleDateFormat(""yyyy-MM-dd"");
String sDate = oFormat.format(""24-10-2012"");
</code></pre>

<p>it will appearing date like 2012-10-24. So if u want to parsing to dd-MM-yyyy, u just need change the format to what u want.</p>

<p>NB : Sorry if my english is bad. :D</p>
"
13114080,"<p>Objects.hashCode is meant to be used to generate a hascode using parameter objects. You are using it as part of the hascode calculation.</p>

<p>Try replacing your implementation of hashCode with the following:</p>

<pre><code>public int hashCode()
{
    return Objects.hashCode(this.id, this.name);
}
</code></pre>
"
19023312,"<p>You can initialize array with ArrayList. For example <code>ArrayList a = new ArrayList();</code>. Of course, you must include <code>import java.util.ArrayList</code></p>
"
15015392,"<p>May I suggest a different approach. I don't have JAVA 7 due to MACOSX restriction yet so if there is syntax error , please guide me through. Comments Welcome </p>

<p>This is based on the question I had asked on Stacoverflow error : <a href=""http://stackoverflow.com/questions/10836055/switch-statement-in-java-7"">Switch Statement in Java 7</a></p>

<pre><code> The Java compiler generates generally more efficient bytecode from switch statements that   
 use ""String objects"" than from chained if-then-else statements.
</code></pre>

<p>So , --> Switch Statement would be more efficient than if-else block. The performance with try-catch is debatable</p>

<pre><code>   String str = getMyString(); // only one call

   try {
    switch (str) {
      default:   break;
    }

    } catch(NullpointerException e){

      str="""";//Null means Str is null
    }
</code></pre>
"
12611463,"<p>It's unsafe. There are no additional synchronization in JVM. You can do something like this:</p>

<pre><code>public class Test {
    private final Object lock = new Object();
    public Test() {
        synchronized (lock) {
            // your improper object reference publication
            // long initialization
        }
    }

    public void doSomething() {
        synchronized (lock) {
            // do something
        }
    }
}
</code></pre>
"
18484949,"<p>How about encapsulating it in:</p>

<pre><code>public void myMethod()
{
  ... your code...
}
</code></pre>

<p>and then looping:</p>

<pre><code>while (true)
  myMethod();
</code></pre>

<p>That should do it :)</p>
"
13114221,"<p>You will need to do the unique detection a the time you iterate your list.  Making a new HashSet might not seem the right way to go, but why not try this...  And maybe not use a HashSet to start with...</p>

<pre><code>public class TestIterator {
    public static void main(String[] args) {
        List&lt;String&gt; list = new ArrayList&lt;String&gt;();

        list.add(""1"");
        list.add(""1"");
        list.add(""2"");
        list.add(""3"");

        for (String s : new UniqueIterator&lt;String&gt;(list)) {
            System.out.println(s);
        }
    }
}

public class UniqueIterator&lt;T&gt; implements Iterable&lt;T&gt; {
    private Set&lt;T&gt; hashSet = new HashSet&lt;T&gt;();

    public UniqueIterator(Iterable&lt;T&gt; iterable) {
        for (T t : iterable) {
            hashSet.add(t);
        }
    }

    public Iterator&lt;T&gt; iterator() {
        return hashSet.iterator();
    }
}
</code></pre>
"
13935943,"<p>It will return 0, always, because you are returning an <code>int</code> type. The result of your division will always be some floating point value, so you need to store it as such, and return it.</p>

<pre><code>public class cal {
    public int total = 11;
    public int count = 2508;
    public double calRatio;
    public void caln() {
        calRatio = (double)count / (double)total;
        System.out.print(calRatio);
    }
}
</code></pre>
"
19435468,"<p>You could put yours arrays to <code>java.util.Set</code>, and just to call method <code>contains</code> on each Set. (f.e <code>set.contains(""horse"")</code>); if it contains same string it will return <code>true</code>, otherwise <code>false</code>, then check all results.</p>
"
19435488,"<p><code>Arrays.asList(...).contains(...)</code>. This allows you to convert your array to a list, and simply see if the array contains the element without having to iterate through it. If it does, continue checking the other arrays to see if it is a common element across all of them.</p>
"
18528861,"<p>For strings:</p>

<pre><code>String a=""one""
String b=""two""

a = a + b;
b = a.replace(b, """");
a = a.replace(b,"""");
</code></pre>
"
19091463,"<p>There is nothing wrong with the output. Just check and recheck again. the output will </p>

<pre><code>Inside first method.
Inside third method.
Inside first method.
Inside second method.
Inside first method.
Inside second method.
Inside first method.
Inside third method.
Inside first method.
Inside second method.
Inside first method.
</code></pre>

<p>thanks.</p>
"
15226020,"<p>The pipe character is the equivalent to the logical or in a regex. If you really want to use the pipe character as separator, you need to escape it with a <code>\</code> as in</p>

<p><code>String[] values= input.split(""\|"");</code></p>
"
19508493,"<p>1: Use String.format</p>

<p>2: introduce variable heShe</p>

<pre><code>string describePerson(String name, boolean gender, int age) 
{
    String x = gender ? ""She"" : ""He"";

    return (name + ""is ""+gender+"". "" + x + "" is""+age+ ""years old.);
} 
</code></pre>

<p>3: parameter gender is boolean, better is to make use of an enum</p>
"
18567477,"<p>Change it as</p>

<pre><code>    for(int i = 0; i&lt;width; i++){
        for(int j = 0; j&lt;width; j++){
</code></pre>
"
18591660,"<p>It looks like <code>Maven Builder</code> is getting invoked from Eclipse, which is inturn populating files again. I guess you can try disabling Maven builder and Maven nature for your project in eclipse to see if it solves problem.</p>

<p>To disable Eclipse Maven builder this go to </p>

<pre><code>Eclipse Project Properties -&gt; Builders -&gt; Maven builder
</code></pre>

<p>Disabling eclipse maven nature
<img src=""http://i.stack.imgur.com/qIPu6.png"" alt=""enter image description here""></p>

<p>All I am saying is problem is due to eclipse-maven integration and not maven</p>
"
18795087,"<p>because you treat every case separately without <code>else if</code> ,so if condition is you override value of a if the if condition is true ,your else if is related to the last if statement , not for all .</p>

<p>I suggest  to concatenate every result to variable <code>a</code> like this to see which conditions are valid: </p>

<pre><code>if (cx &gt;= p1x &amp;&amp; cx &lt;= p2x)
    a += ""Circle is inside of Rectangle \n"";
if (cx &gt;= p1x &amp;&amp; cx &lt;= p2x)
    a += ""Circle is inside of Rectangle\n"";
if (cx+r &gt;= p1x &amp;&amp; cx+r &lt;= p2x)
    a += ""Circle is inside of Rectangle\n"";
if (cx-r &gt;= p1x &amp;&amp; cx-r &lt;= p2x)
    a += ""Circle is inside of Rectangle\n"";
if (cy &gt;= p1y &amp;&amp; cy &lt;= p2y)
    a += ""Circle is inside of Rectangle\n"";
if (cy &gt;= p1y &amp;&amp; cy &lt;= p2y)
    a += ""Circle is inside of Rectangle\n"";
if (cy+r &gt;= p1y &amp;&amp; cy+r &lt;= p2y)
    a += ""Circle is inside of Rectangle\n"";
if (cy-r &gt;= p1y &amp;&amp; cy-r &lt;= p2y)
    a += ""Circle is inside of Rectangle\n"";
else
    a += ""Circle is outside of Rectangle\n"";
</code></pre>

<p>Or if that's not what you want add else if to all your if statements like this : </p>

<pre><code>if (cx &gt;= p1x &amp;&amp; cx &lt;= p2x)
    a = ""Circle is inside of Rectangle"";
else if (cx &gt;= p1x &amp;&amp; cx &lt;= p2x)
    a = ""Circle is inside of Rectangle"";
else if (cx+r &gt;= p1x &amp;&amp; cx+r &lt;= p2x)
    a = ""Circle is inside of Rectangle"";
else if (cx-r &gt;= p1x &amp;&amp; cx-r &lt;= p2x)
    a = ""Circle is inside of Rectangle"";
else if (cy &gt;= p1y &amp;&amp; cy &lt;= p2y)
    a = ""Circle is inside of Rectangle"";
else if (cy &gt;= p1y &amp;&amp; cy &lt;= p2y)
    a = ""Circle is inside of Rectangle"";
else if (cy+r &gt;= p1y &amp;&amp; cy+r &lt;= p2y)
    a = ""Circle is inside of Rectangle"";
else if (cy-r &gt;= p1y &amp;&amp; cy-r &lt;= p2y)
    a = ""Circle is inside of Rectangle"";
else
    a = ""Circle is outside of Rectangle"";
</code></pre>
"
19170393,"<p>Try <code>/*string with {}*/ string.trim().equalsIgnoreCase(""{}""))</code>, maybe there is some extra spaces or something</p>
"
18815339,"<blockquote>
  <ol>
  <li>Change variable declaration:</li>
  </ol>
</blockquote>

<pre><code>List&lt;float[][]&gt; array = Collections.synchronizedList(new ArrayList&lt;float[][]&gt;());
</code></pre>

<blockquote>
  <ol>
  <li>Inside the runnable:</li>
  </ol>
</blockquote>

<pre><code>Iterator&lt;float[][]&gt; values = array.iterator();
while (values.hasNext()) {
        float[][] result = values.next();
        //calculating.

        //after calculating remove the items.
        values.remove();
}
</code></pre>
"
15390312,"<p>Better approach is to sort the array first.</p>

<pre><code>Arrays.sort(array);
Arrays.binarySearch(array, value);
</code></pre>

<p>To scan through an unsorted array takes linear time ""O(n)"". You can try this if you don't want to sort the array:</p>

<pre><code>public int find(int[] array, int value) {
        int index = -1;
        for (int i=0; i&lt;array.length; i++) {
            if(array[i] == value) { index = i; }
        }
        return index;            
    }
</code></pre>
"
13577417,"<p>Write another testclass inside that class use a main function. and from that main function test the class.</p>

<p>You need to test your time class? am I right?</p>

<pre><code> public class test
 {
     public static void main(String args[])
     {
        Time t = new Time();

       //now use any method of time class
        //i.e. t.methodname(pram)
     }
 }
</code></pre>
"
18924635,"<p>This is what's wrong with your code.  Fast as possible requires fast coding techniques.  Save the sensor type instead of evaluating it twice.</p>

<pre><code>@Override
    public void onSensorChanged(SensorEvent event) {
        int i = event.sensor.getType();
        if (i == Sensor.TYPE_ACCELEROMETER)
            aValues = (event.values.clone());
        else if (i == Sensor.TYPE_MAGNETIC_FIELD)
            mValues = (event.values.clone());
    }
</code></pre>
"
13580058,"<p>You can also check if your string contains a dot/point : </p>

<pre><code>String var1=""5.5"";

if (var1.contains(""."")){
// it should be a double
}else{
// int
}
</code></pre>
"
13605419,"<pre><code>tiendas = new ArrayList&lt;Tienda&gt;(tiendasList);
</code></pre>

<p>All collection implementations have an overloaded constructor that takes another collection (with the template <code>&lt;T&gt;</code> matching). The new instance is instantiated with the passed collection.</p>
"
18993970,"<p>An empty constructor usually is ""a default""</p>

<pre><code>Person() { 
    // This will cause you to not have any name or age values
}
</code></pre>

<p>So let's assume you want a default Person:</p>

<pre><code>Person() { 
    this(""Steven"",20);
}
</code></pre>

<p>This way you will call the non empty constructor but you will always have the same person</p>
"
19416390,"<p>You can't. Simple as that. You can however measure the time it takes to reach onResume again and if the device was tilted by reading the display configuration.</p>

<p>An interval of 3 seconds is somewhat reasonable, also for slower devices.</p>

<p>Here are the relevant parts that we use:</p>

<pre><code>protected void onCreate() {
  ...
  orientation = getResources().getConfiguration().orientation;
}

protected void onResume() {
  ...
  long time = SystemClock.elapsedRealtime() - pauseTime;
  int o = getResources().getConfiguration().orientation;
  Log.d(TAG, ""pauseTime: "" + pauseTime + "" System: "" + SystemClock.elapsedRealtime() + "" elapsed pause time: "" + time + "" orientation now: "" + o + "" orientation then: "" + orientation);
  if (time &lt; 3000 &amp;&amp; o != orientation) {
    // device was turned
  }
  orientation = o;
}

protected void onPause() {
  ...
  pauseTime = SystemClock.elapsedRealtime();
}

protected void onSaveInstanceState(final Bundle outState) {
  ...
  outState.putLong(PAUSE_TIME, pauseTime);
  outState.putInt(ORIENTATION, orientation);
}

protected void onRestoreInstanceState(final Bundle savedInstanceState) {
  ...
  pauseTime = savedInstanceState.getLong(PAUSE_TIME, -1);
  orientation = savedInstanceState.getInt(ORIENTATION, -1);
}
</code></pre>

<p>The above code is running on about 40k devices and reliably works.</p>
"
19804878,"<p>try this </p>

<pre><code>int pay = 80;
int bonus = 65;
System.out.println(pay+"" ""+ bonus+"" ""+bonus+"" ""+pay);
</code></pre>

<p>Try to study basics of java</p>
"
15607116,"<p>Static variables will have only one instance across different instances.</p>

<p>Here</p>

<p>at first</p>

<p>Z was 2</p>

<p>When you call</p>

<pre><code>public Whatever()
</code></pre>

<p>Z was changed to 6</p>

<p>after that you have changed X</p>

<p>but that had no impact on Z</p>

<p>so the value is 6</p>

<p>Thanks</p>
"
18804725,"<p>I find my solution.
I set <code>android:text=""0""</code> 
and my problem is gone. :))</p>
"
13719662,"<p>This happens because a++ is more like a Method then a realistic Number.</p>

<p>you can splitt them into two seperat lines.</p>

<p>the first one would be </p>

<pre><code>a = a;
return a + 1;
</code></pre>

<p>the seconde one would be</p>

<pre><code>a = a+1;
</code></pre>
"
19426078,"<p>A recursive method would be the easiest for this :</p>

<pre><code>int power(int base, int exp) {
    if (exp != 1) {
        return (base * power(base, exp - 1));
    } else {
        return base;
    }
}
</code></pre>

<p>where <code>base</code> is the number and <code>exp</code> is the exponenet</p>
"
13719668,"<p>When you write <code>a++</code> it means a will increment AFTER the '=' operator has been processed. So </p>

<pre><code>b = a++;
System.out.println(a);
System.out.println(b);
</code></pre>

<p>Should produce on your screen: 11, 10. Because <code>a</code> becomes 11 after b takes the value of 'a'. If you change the <code>a++</code> to <code>++a</code> you force the increment to happen before the '=' is processed so you will be giving b = a + 1 and on your screen you should be having 11,11.</p>
"
18822233,"<pre><code>public static boolean compareFundIds(String requestFundIds, String existingFundIds) {
        boolean isFundsSame = false;
        String[] string1Arry= org.springframework.util.StringUtils.tokenizeToStringArray(requestFundIds, "","");
        String[] string2Arry= org.springframework.util.StringUtils.tokenizeToStringArray(existingFundIds, "","");
        if(string1Arry.length == string2Arry.length){
            Arrays.sort(string1Arry);
            Arrays.sort(string2Arry);
            if(Arrays.equals(string1Arry,string2Arry)){
                isFundsSame = true;
            }
        }
        return isFundsSame;
    }
</code></pre>

<p>Sample <strong>Input String</strong> passed to this method are</p>

<pre><code>String str1= ""11,12"";
String str2= ""12,11"";
</code></pre>
"
14194661,"<p>To make sure that an element is present you can do the following:</p>

<pre><code>driver.findElements(By.id(""id""));
</code></pre>

<p>That will return an array, if that array size is > 0 then the element/s is present.</p>

<p>Also, you need to provide more information, such as language and what have you tried before asking,</p>

<p>Good luck</p>
"
14203686,"<p>I see how you are trying this but possibly a while loop would be easier and then just use string operations to create each line as you want them.</p>

<pre><code>   public static void pyramid(){
        line=1;
        i=1;
        while(line &lt;= 5){
                      System.out.println(""*""*i);
                      i +=2;
                      line +=1;
                     }
    }
</code></pre>

<p>Also I dont know if you mean by ""increase the stars by 3"" do you mean that the number of stars per row would go (1,4,7,10) or accelerate by 3 like num+2, num+5, num+8 like (1,3,8,16).</p>

<p>If you wanted to do it the second way, this should work.</p>

<pre><code>public static void pyramid(){
            line=1;
            i=1;
            a=3;
            while(line &lt;= 5){
                          System.out.println(""*""*i);
                          i += 2+a*(i-1);
                          line +=1;
                         }
        }
</code></pre>
"
15707027,"<p>This is possible, but you will have to introduce to thread. </p>

<p>You application should have two threads <code>main</code> and <code>worker</code>. </p>

<p>The <code>main</code> thread, is your whole program. That during his work start the <code>worker</code>. Worker do the computation, after first part he can set a value that <code>main</code> thread can read and display. </p>
"
14231713,"<p>Just use <code>myList.remove(myObject)</code>.</p>

<p>It uses the equals method of the class. See <a href=""http://docs.oracle.com/javase/6/docs/api/java/util/List.html#remove(java.lang.Object"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/util/List.html#remove(java.lang.Object</a>)</p>

<p>BTW, if you have more complex things to do, you should check out the guava library that has dozen of utility to do that with predicates and so on.</p>
"
19016542,"<p>From ""this is fun"" only ""is"" is replaced. Before and after second ""is"" are 2 "" "" spaces.
Maybe you want:</p>

<pre><code>String str = ""this is fun"";
String str1 = str.replaceAll(""is "", """").trim();
System.out.println(str1);
</code></pre>

<p>Or </p>

<pre><code>String str = ""this is fun"";
String str1 = str.replaceAll("" is"", """").trim();
System.out.println(str1);
</code></pre>

<p>Depends on which output you expect.</p>
"
19173025,"<p>A good way to model this is to create something like a <code>UserData</code> class such that <code>TempUser</code> has-a <code>UserData</code> and <code>PermUser</code> has-a <code>UserData</code>.  You could also make <code>TempUser</code> has-a <code>PermUser</code>, though that's going to be less clear.  If your application needs to use them interchangeably (something you'd get with the inheritance you were using), then both classes can implement an interface that returns the <code>UserData</code> (or in the second option, <code>getPermUser</code>, where <code>PermUser</code> returns itself).  </p>

<p>If you really want to use inheritance, easiest might be to map it using the ""Table per class hierarchy"" and then using straight JDBC to update the discriminator column directly.</p>
"
19042259,"<p>I added a code to set fraction digits to remain same as in <code>decimal1</code></p>

<pre><code> public static void main(String[] args) {
        try {
            DecimalFormat df = new DecimalFormat();
            String decimal1 = ""54.60""; // Decimal is input as a string with a specific number of significant digits.
            //
            int index = decimal1.indexOf(""."");
            int prec = -1;
            if (index != -1) {
                prec = decimal1.substring(index, decimal1.length()).length();
            }
            if (prec&gt;0) {
                df.setMaximumFractionDigits(prec);
                df.setMinimumFractionDigits(prec-1);
            }
            //
            double d = df.parse(decimal1).doubleValue();
            d = d * -1; // Multiply the decimal by -1 (this is why we parsed it, so we could do a calculatin).
            System.out.println(df.format(d)); // I need to print this with the same # of significant digits.
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }
</code></pre>
"
13324826,"<p>How about this?</p>

<pre><code>int getdec(const string&amp; input)
{
  int sum=0; char prev='%';
  for(int i=(input.length()-1); i&gt;=0; i--)
  {
    if(value(input[i])&lt;sum &amp;&amp; (input[i]!=prev))
    {       sum -= value(input[i]);
            prev = input[i];
    }
    else
    {
            sum += value(input[i]);
            prev = input[i];
    }
  }
  return sum;
}
</code></pre>
"
19210203,"<p>Maybe this method would help you for precising double values.</p>

<pre><code>double truncate(double number)
    {
        int integerPart = (int) number;
        double fractionalPart = number - integerPart;
        fractionalPart *= 100;  //It is for upto two decimal values after point.
                                //You can increase the zeros to fulfill your needs.
        int fractPart = (int) fractionalPart;
        fractionalPart = (double) (integerPart) + (double) (fractPart)/100;
        return fractionalPart;
    }
</code></pre>

<p>This method will allow to set the precision level.</p>

<pre><code>double truncate(double number, int precision)
{
    double prec = Math.pow(10, precision);
    int integerPart = (int) number;
    double fractionalPart = number - integerPart;
    fractionalPart *= prec;
    int fractPart = (int) fractionalPart;
    fractionalPart = (double) (integerPart) + (double) (fractPart)/prec;
    return fractionalPart;
}
</code></pre>
"
15840630,"<p>I'm not sure what you're exactly trying to do, but you have two <code>else</code> statements.</p>

<p>Remove the inner <code>if</code> statements, and you're left with this shell:</p>

<pre><code>if(if(tabId.equalsIgnoreCase(""android"")){

} else {

} else {

}
</code></pre>

<p>You can only have one <code>else</code> condition. Here, you have two.</p>
"
20142080,"<p>Actually, you have declared the first <code>i</code> before the <code>for</code> loop and then again you are declaring <code>i</code> inside the <code>for</code> loop.</p>

<p>Just don't declare <code>i</code> twice.</p>
"
19133584,"<p>Use Double, not double.</p>

<pre><code>Double  dValue= someVariable;

if(!dValue.isNaN())
{
 // you code here
}
</code></pre>
"
19227292,"<p>Try this:</p>

<pre><code>public class Storage extends Application
</code></pre>

<p>Application is a class used to share data from Activities</p>
"
19636074,"<p>Like this:</p>

<pre><code>int number;
     do 
      {
         String textinput = JOptionPane.showInputDialog(""give me a number between 0 and 5"");
         number = Integer.parseInt(textinput);
         if ( number &gt; 5 || number  &lt; 0)
         {
             System.out.println(""Please enter number between 0 to 5"");
             return;
         }
          } while (!(number &gt;= 0 &amp;&amp; number &lt;= 5));
}
</code></pre>
"
15900914,"<p><code>String</code> class implements <code>CharSequence</code> and also it extends from <code>Object</code> class. So if somebody is using other type of <code>CharSequence</code> we have to typecast like your first version <code>(String)value</code> <br><em>[ <code>(String)value</code> if it contains <code>String</code> object and <code>(StringBuffer)value</code> for StringBuffer type of object]</em><br>
About <code>toString()</code> we have to override <code>toString()</code> method in our class which will show our object representation in String format as per our requirement. If we don't override then default implementation of <code>toString()</code> from <code>Object</code>class will be inherited and will give the String in hexadecimal representation of the hash code of our object like <code>UserObject@12dacd1</code></p>

<p>Other implementation of <code>CharSequence</code> are <strong>CharBuffer, StringBuffer, StringBuilder</strong></p>

<p>1> <strong>(String)value</strong> means <code>value</code> contains String object. If it doesn't contain <code>String</code> the <code>ClassCastException</code> will be thrown at runtime. Typecasting will throw compile time exception if you typecast with irrelevant type hierarchy. like given below <br></p>

<pre><code>Exception e = new Exception();
String str = (String)e;
</code></pre>

<p>2> Invoking <strong>toString()</strong> means <code>anyobject</code>  is not necessary to be a <code>String</code> object. Proper overriding <code>toString()</code> method in our own class will be helpful for the String representation of our own class and also it will <strong>never</strong> throw any exception exists in the java world because it inherits <code>toString()</code> from object class. So if your override <strong>toString</strong> and you print <code>System.out.println(userObject);</code> then it will not show  hexadecimal representation of the hash code of our object like <code>UserObject@12dacd1</code><br></p>

<pre><code>public class UserObject {
    String name;
    int age;
    @Override
    public String toString() {
        return "" Name=""+name+"" \n age=""+age;
    }

    public static void main(String[] args) {
        UserObject uo = new UserObject();
        uo.name=""AAA"";
        uo.age=18;
        System.out.println(uo); //output will be ""Name=AAA age=18"" instead of ""UserObject@12dacd1""

    }
}
</code></pre>

<p>About new Long(value) and (Long)value.</p>

<p><code>new Long(value)</code> means, you have got value as <code>long/String</code> you want to convert it into wrapper class <code>Long</code> object. So you can use Long(long), Long(String) <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/Long.html#constructor_summary"" rel=""nofollow"">constructor</a> as per the condition.</p>

<p>Long typecasting explanation is  similar to above String typecasting or any typecasting. <code>(Long)value</code>  means when you get the code like below then you can typecast to Long, Integer, Double as well depends on the assigned value at the right side of the equal symbol.</p>

<pre><code>Number i=10L; //java.lang.Number
Long a= (Long)i;
</code></pre>
"
15900917,"<p>Those are all very different. The first one is <code>Type Casting</code>. Let's say that you receive an Object on your method, and you know it's a String, so you want it to be referred to as that type. so you do that</p>

<pre><code>public void method(Object obj){
    String str = (String) obj;
}
</code></pre>

<p>The <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#toString%28%29"" rel=""nofollow"">toString</a> method is one inherited from <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html"" rel=""nofollow"">Object</a> class, that returns to you a <code>String</code> representation of any given <code>Object</code>. </p>

<p>So the difference is, when you do the casting, your object must already be a <code>String</code>, there is no actual conversion. The difference is that you can use a more specific type for your variable,  but when you invoke toString that is not necessary. </p>

<p>Invoking <code>toString</code> may give you a different object than the original one, unless your class is already a <code>String</code>, in that case the same reference is returned.</p>
"
19212494,"<p>The problem is you are setting the direction based on the value of the integer, instead of whether a condition has previously been met.  Try this:</p>

<pre><code>//this bit is in a method which is continiouly called nonstop
    if (forward &amp;&amp; (goalieposx&gt;200)){
        forward=false;
    }

    System.out.println(forward);

    if(forward=true){
        goalieposx++;
        System.out.println(""forward"");
    }
    else if (forward=false){
        goalieposx--;
        System.out.println(""backwards"");
    }

}
</code></pre>
"
19292955,"<p>If speed was a <strong>major</strong> concern you may find something like this quite fast. It beat all comers in <a href=""http://stackoverflow.com/a/19251545/823393"">this</a> post.</p>

<pre><code>int value(String s) {
  // Start at zero so first * 10 has no effect.
  int v = 0;
  // Work from the end of the string backwards.
  for ( int i = s.length() - 1; i &gt;= 0; i-- ) {
    char c = s.charAt(i);
    // Ignore non-digits.
    if ( Character.isDigit(c)) {
      // Mul curent by 10 and add digit value.
      v = (v * 10) + (c - '0');
    }
  }
  return v;
}
</code></pre>
"
20005854,"<pre><code>    private int indexOf(int searchingNum)
    {
         for (int index = 0; index &lt; count; index++){
           if (numberArray[index] == searchingNum)
          return index;
    }
    else return -1;

  }
</code></pre>

<p>change the ""FOR"" brace</p>
"
20313882,"<p>I have been using this solution, it's simple and efficient:</p>

<pre><code>                jtextfield.addKeyListener(new KeyAdapter() {
                public void keyTyped(KeyEvent e) {
                    char vChar = e.getKeyChar();
                    if (!(Character.isDigit(vChar)
                            || (vChar == KeyEvent.VK_BACK_SPACE)
                            || (vChar == KeyEvent.VK_DELETE))) {
                        e.consume();
                    }
                }
            });
</code></pre>
"
14065825,"<p>If they are in a particular folder you can first get the file name and parse it accordingly to get a particular string. Try this one</p>

<p>`</p>

<pre><code>       public void listFilesForFolder(final File folder) {
            for (final File fileEntry : folder.listFiles()) {
                if (fileEntry.isDirectory()) {
                    listFilesForFolder(fileEntry);
                } else {
                    if(fileEntry.getName().contains(""20120614""){
//code to compare the latest date
}

                }
        }
}
</code></pre>

<p><br>
Try this out, I guess this is what you wanted...</p>
"
13603467,"<p>You need exactly the <code>String[] args</code> parameter (it's an array).</p>

<p>The reason is that you need to declare the <code>main()</code> method with a <em>specified signature</em> (and a method signature contains its name, number of its parameters <strong>and</strong> the types of the parameters).</p>

<p>So if you create a function which a different parameter type (String vs. String array), it is not recognized.</p>
"
16302844,"<p>It depends what you mean by better.  An alternative implementation might be as follows:</p>

<pre><code>public static int[] Ranges = new int[] { 5, 10, 15, 20 };

...

int i = 0;
while(i &lt; Ranges.Length)
{
    if (number &gt;= Ranges[i]) return i+1;
    i++;
}
</code></pre>

<p>This allows the ranges to be non-uniform and potentially be specified by a data file.</p>
"
13610419,"<p>This is one of the main issues with primitives. That the range of values is such that <code>null</code> can not be meaningfully represented.<br>
I recommend going to <code>Float</code> or else you would have to define specific range of values and their meaning.<br>
Example: If you <code>-1.0</code> is not a meaningfull number in your domain, you can use that to signify <code>null</code>.<br>
But I highly recommend to switch to object instead of primitives.   </p>

<blockquote>
  <p>The reason why i am not using Float object is to achieve a high memory
  and speed performance.  </p>
</blockquote>

<p>Unless you are doing some really heavy number crunching boxing/autoboxing would not cause any performance issue.<br>
As always, do your measurements and if you find that there is indeed a performance issue then you can drop <code>Float</code> to go with prematives.<br>
Don't optimize too early</p>
"
14754743,"<p><a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/String.html#compareTo(java.lang.String)"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/lang/String.html#compareTo(java.lang.String)</a></p>

<p>There is the compare to which returns an int.  There is also equals which 
returns a boolean.  If you have a string instance it should be able to 
execute. If you pass instance.equals(null) it will return false.  if your 
instance is null then you will get a null pointer.</p>

<pre><code>public class App
{

public static void main( String[] args )
{
    String myString = ""test"";

    if(myString.equals(null))
    {
        System.out.println(""Its NUll"");
    }else
    {
        System.out.println(""Not Equal"");
    }

}

}
</code></pre>
"
20118827,"<p>Use Bitwise AND instead of &amp;&amp;</p>

<pre><code>   if (methodA() &amp; methodB() &amp; methodC()) {code}
</code></pre>
"
20370985,"<p>As a starting point, use <code>int</code> which is probably native to the architecture and you'll avoid possible implicit conversions when comparing <code>i</code> with other bits and pieces. So my bet is that both <code>byte</code> and <code>short</code> will wind up being <em>slower</em>.</p>

<p>A far cuter optimisation would be to use <code>++i</code> rather than <code>i++</code>, as the former will never be slower than the latter. (Conceptually <code>i++</code> has to return a copy even though it will be optimised out by a good java compiler).</p>
"
14106892,"<p>You can declare objects as <code>public static</code> and reference them from another class.  <br/><br/>ActivityA:</p>

<pre><code>public static int testIntegerA = 42;

Intent intentInteger = new Intent(getActivityContext(), ActivityB.class);
intentInteger.putExtra(""INTENT_EXTRA"", testIntegerA);
startActivity(intentInteger);
</code></pre>

<p>ActivityB:</p>

<pre><code>public static int intentInt, staticInt;

staticInt = ActivityA.testIntegerA;
intentInt = getIntent().getExtras().getInt(""INTENT_EXTRA"");
</code></pre>

<p>Now both <code>intentInt</code> and <code>staticInt</code> equal 42;</p>
"
19427224,"<p>Maybe the order of the items list is not fixed (timing dependent?). Your code</p>

<pre><code>if (image != null) {
    break;
}
</code></pre>

<p>quits the loop instead of trying the next parts. In the comments you state <em>we iterate through the files until we can parse one</em>, which should read</p>

<pre><code>if (image != null) {
    continue;
}
</code></pre>

<p>then.</p>
"
19411583,"<p>How about this?</p>

<pre><code>   int numberOfnumbers = 1000;

   List&lt;Integer&gt; numbers = new ArrayList&lt;Integer&gt;();

   for (int i = 0; i &lt; numberOfNumbers; i++) {
       numbers.add(i);
     }

   Collections.shuffle(numbers);
</code></pre>

<p>As many numbers as you want, random and guaranteed not to repeat.  Just take the first 6, or how ever many you need.</p>
"
19491771,"<p>Finally I solved this by adding another pattern. At first I am looking for a string like <code>&lt;input ... name='MD' ... /&gt;</code> by pattern <code>"".*?(&lt;input[^&lt;&gt;]*name=\\\""MD\\\""[^&lt;&gt;]*&gt;).*?""</code> and after that I am looking for a value in result string with pattern <code>"".*?value=\\\""(.*?)\\\""""</code></p>

<p>Thank u everyone for help</p>
"
14188026,"<p>You should rewrite this code </p>

<p>1) 
class Field 
add method getType();</p>

<p>2) code:</p>

<pre><code>public static int getNumberOfOwned(Player owner, String type){
  int count = 0;      
  for (Field f: board.fieldList){
    if (f.getType.equals(type)&amp;&amp; f.getOwnedBy().equesl(owner))
    count++;
  }
  return count;
</code></pre>

<p>}</p>
"
14188032,"<p>Make <code>string getTypeString()</code> a property of Field, and avoid having a bunch of if statements (check <code>type.equals(f.getTypeString())</code>) Make getOwnedBy a property of Field, and don't use a cast. (fields that don't have owners can return null)</p>
"
16491916,"<p>Why are you creating a new class called ArrayList? Surely you want to do something like:</p>

<pre><code>ArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;();
list.add(""Value A"");
list.add(""Value B"");
list.add(""Value C"");
</code></pre>

<p>?</p>
"
20321198,"<pre><code>long x = Long.parseLong(""9876543210123456"");

System.out.println(""Integer: "" + x);
</code></pre>

<p>or else ple use follow line</p>

<pre><code>BigInteger bint = new BigInteger(""9999999999999999"", 16);
</code></pre>

<p>Please try this..Can't avle to convert the more than 13 digits string to int..so,you should convert to long</p>
"
19525465,"<p>Here are the answers for you questions:</p>

<p><strong>1) Could I read somehow 01-Sep-13 as string: ""01-Sep-13"";</strong></p>

<p>Yes you can. You need to set the Cell type to String before reading it. Something like this:</p>

<pre><code>.
.
.
int fcell = row.getFirstCellNum();// first cell number of excel
int lcell = row.getLastCellNum(); //last cell number of excel
while (rows.hasNext()) {
row = (XSSFRow) rows.next();//increment the row iterator
for (int i = fcell; i &lt; lcell; i++) {
    row.getCell(i).setCellType(org.apache.poi.ss.usermodel.Cell.CELL_TYPE_STRING);
    .
    .
    ..//processing
    .
    .
    }
}
</code></pre>

<p><strong>2.)Could I convert Date value to string in case I have different date patterns (ddMMyyyy) and (dd-MMM-yy);</strong></p>

<p>Since the first answer is already giving you the String value.
Still to convert a String value to date you can use SimpleDateFormat as @rgettman and @Keerthi suggested</p>

<p>Hope this will help...:)</p>
"
16492004,"<p>ArrayLists have to be initialized differently to standard arrays.</p>

<p>What you want is something like this:</p>

<pre><code>ArrayList&lt;Object&gt; list = new ArrayList&lt;Object&gt;();
list.add(Object o);
</code></pre>

<p>Remember that nearly everything in Java is an <code>Object</code>.</p>

<p>So you can do:</p>

<pre><code>ArrayList&lt;String&gt;...
ArrayList&lt;Integer&gt;...
</code></pre>

<p>But the most powerful feature of ArrayLists, and the reason I use them, is when you start making your own classes - for instance, in game development, a common class people make is a Sprite -- you could create an ArrayList of all sprites, such as below:</p>

<pre><code>public class Sprite {}....
ArrayList&lt;Sprite&gt; spriteList = new ArrayList&lt;Sprite&gt;();
</code></pre>
"
16494329,"<p>ublic class ArrayList {</p>

<pre><code>public static void main(String[] args) {
    ArrayList list = new ArrayList();
    list.add(""Value A"");
    list.add(""Value B"");
    list.add(""Value C"");
}
</code></pre>

<p>}</p>

<p>your className is ArrayList   try to change the name and import ArrayList Class package</p>
"
19510554,"<p>please try below code</p>

<pre><code>    public static String season(int month, int day) {
if (month &gt; 9 &amp;&amp; month &lt; 12) {
    if (month == 9 &amp;&amp; day &gt;= 16 || month == 12 &amp;&amp; day &lt;= 15 || !(month == 9 || month == 12)) {
        return ""Fall"";
    }
} else if (month &gt; 6 &amp;&amp; month &lt; 9) {
    if (month == 6 &amp;&amp; day &gt;= 16 || month == 9 &amp;&amp; day &lt;= 15 || !(month == 6 || month == 9)) {
        return ""Summer"";
    }
} else if (month &gt; 3 &amp;&amp; month &lt; 6) {
    if (month == 3 &amp;&amp; day &gt;= 16 || month == 6 &amp;&amp; day &lt;= 15 || !(month == 3 || month == 6)) {
        return ""Sprint"";
    }
} else {
    return ""Winter"";
}



 }
</code></pre>
"
14210283,"<p>DO this way</p>

<pre><code>(""String"".replace('t','T').Tostring() ==  (""String"".replace('t','T')).ToString()
</code></pre>

<p>This will solve your problem because the replace statement should be converted to string before eveluation.</p>

<p>You can also user the String.Equals for this or better you use ignore case as you mention in your question.</p>
"
19634192,"<pre><code>String text;
text = ""3.14159265358979323846264338327950288419716939937510582097494459230781640628"";
int index = 0; 
while (index&lt;text.length()) {
    String string = text.substring(index, Math.min(index+10,text.length()));

    //function to process 10 digits. if true break
    if(processDigits(string))
         break;

    index+=10;
}
</code></pre>
"
20753761,"<pre><code>    Map&lt;String, ?&gt; value = null;  // initialize 
    Map&lt;String, Object&gt; val = (Map&lt;String, Object&gt;) value; //cast
</code></pre>
"
14053107,"<pre><code>SimpleDateFormat dateFormat = new SimpleDateFormat(""dd/mm/yyyy hh:mm:ss a"");
</code></pre>

<p>use <code>hh</code> in place of <code>HH</code></p>
"
15304564,"<p><code>&amp;</code> is bitwise AND</p>

<p><code>&amp;&amp;</code> is logical AND. </p>

<p><code>true &amp;&amp; true = true</code>.. </p>

<p><code>&amp;</code> works on numbers, <code>&amp;&amp;</code> works on boolean expressions. </p>

<p><code>0xFE &amp; 0xFF</code> results in <code>0xFE</code>.</p>
"
15304569,"<pre><code>var &amp;= expr
</code></pre>

<p>is equivalent to</p>

<pre><code>var = var &amp; expr
</code></pre>

<p>In other words it does a <em>bitwise</em> or</p>

<pre><code>var = var &amp;&amp; expr
</code></pre>

<p>does a logical or of var and expr</p>
"
16730886,"<p>Create a class which have variables you want to read from json string.And Gson will handle the rest.</p>

<p><a href=""https://code.google.com/p/google-gson/"" rel=""nofollow"">https://code.google.com/p/google-gson/</a></p>

<p>Example usage:</p>

<pre><code>//convert the json string back to object
DataObject obj = gson.fromJson(br, DataObject.class);
</code></pre>
"
15330517,"<p>Poisson Random Generator</p>

<p>Lets say we start with an expected value 'v' of the random numbers. Then to say that a sequence of non negative integers satisfies a Poisson Distribution with expected value v means that over subsequences, the mean(average) of the value will appear 'v'.
Poisson Distribution is part of statistics and the details can be found on wikipedia.
But here the main advantage of using this function are:
1. Only integer values are generated.
2. The mean of those integers will be equal to the value we initially provided.</p>

<p>It is helpful in applications where fractional values don't make sense. Like number of planes arriving on an airport in 1min is 2.5(doesn't make sense) but it implies that in 2 mins 5 plans arrive.</p>

<pre><code>int poissonRandom(double expectedValue) {
  int n = 0; //counter of iteration
  double limit; 
  double x;  //pseudo random number
  limit = exp(-expectedValue);
  x = rand() / INT_MAX; 
  while (x &gt; limit) {
    n++;
    x *= rand() / INT_MAX;
  }
  return n;
}
</code></pre>

<p>The line</p>

<pre><code>rand() / INT_MAX
</code></pre>

<p>should generate a random number between 0 and 1. So we can use time of the system.
Seconds / 60 will serve the purpose.
Which function we should use is totally application dependent.</p>
"
19869385,"<p>I believe you are just looking for an average:</p>

<pre><code>i = (array[0] + array[2] + array[4])/3;
j = (array[1] + array[3] + array[5])/3;
</code></pre>
"
20707670,"<p>It might seem silly , but if u wanna try utility function </p>

<pre><code>System.out.println(Integer.parseInt((Integer.toString(i,2))));
</code></pre>

<p>there must be some  utility method to do it directly, I cant remember.</p>
"
19869440,"<p>You can use an array of 3 Points.  A <a href=""http://docs.oracle.com/javase/7/docs/api/java/awt/Point.html"" rel=""nofollow"">Point</a> is a Java class that holds an x and y value.</p>

<p>Your 3 Points shaded red in the illustration would be:</p>

<pre><code>0, 1
0, 0
1, 0
</code></pre>

<p>Another L shaped set of points would be:</p>

<pre><code>2, 2
3, 2
3, 1
</code></pre>
"
16950303,"<pre><code> int int1    = 3;
 int int2    = 4;
 boolean res = ( (int1 * int2) &gt;= 0) ? true : false;

 System.out.println(res);
</code></pre>
"
19969895,"<p>try this</p>

<pre><code> public static void main(String args[])
  {

       Scanner kb = new Scanner(System.in);
       int salary = 0;
       double federaltax =0;
       double netsalary=0;
       double totaltax = 0;
       double statetax=0;
       int over_100000=0;
       int between50_100000=0;
       int between25_50000=0;
       int below25000=0;
       String stop="""";
       int count=0;
       do
       {
           System.out.println(""Please Input your salary"");
           salary = kb.nextInt();
                            if(salary &gt;= 100000) 
                            {
                                 statetax= salary * .05;
                                 federaltax = salary * .20; 
                                 netsalary = statetax + federaltax;

                            }
                            else
                            {
                                 statetax= salary * .05;
                                 federaltax = salary * .15; 
                                 netsalary = statetax + federaltax;                  

                            }
                            if(salary &gt;= 100000) 
                            {
                             over_100000 =  over_100000 + 1;
                            }
                            else if(salary &gt;= 50000 &amp;&amp; salary &lt;=100000) 
                            {
                             between50_100000 =  between50_100000 + 1;
                            }
                            else if(salary &gt;= 25000 &amp;&amp; salary &lt;=50000) 
                            {
                             between25_50000 =  between25_50000 + 1;
                            }
                            else
                            {
                              below25000 = below25000 + 1;
                            }


           System.out.println(""Federal tax :"" + federaltax);
           System.out.println(""netsalary :"" + netsalary);
           System.out.println(""statetax :"" + statetax);
           System.out.println(""salary :"" + salary);
           System.out.println(""Over 100000: "" + over_100000);
           System.out.println(""Between 50000 and 100000: "" + between50_100000);
           System.out.println(""Between 25000 and 50000: "" +  between25_50000);
           System.out.println(""Below 25000:"" +  below25000);

           System.out.println(""Do you want to continue?""); 
           stop = kb.nextLine();

      }while(stop.equals(""yes""));

   }  
</code></pre>
"
15413464,"<p>You are correct, allocating objects inside a loop is a performance anti-pattern.
instead you can boost the speed of execution and improve memory usage by making use of static class members.</p>

<pre><code>// Number.java
public class Number {  
  private static long n;
 public static void setNumber(long number){
        n = number;
 }
 static boolean isPrime() {
     for(long k = 2; k &lt; n; k++) {
       if(n % k == 0) return false;
     }
     return true;
 }
}
</code></pre>
"
20002020,"<p>No, it's not safe.</p>

<p><code>synchronized</code> means only one thread will enter into a particular function.
But there is a possibilty that one thread is exceuting <code>updateFile()</code> and other is doing <code>removeFile()</code>, then exception will be thrown by the JVM.</p>

<p>So, for avoiding this, put one boolean variable and toggle it when some thread enters into the function.</p>
"
14446533,"<p>The <code>compareTo</code> method knows that trailing zeros do not affect the numeric value represented by a <code>BigDecimal</code>, which is the only aspect <code>compareTo</code> cares about.  By contrast, the <code>equals</code> method generally has no way of knowing what aspects of an object someone cares about, and should thus only return <code>true</code> if two objects are equivalent in <em>every</em> way that a programmer might be interested in.  If <code>x.equals(y)</code> is true, it would be rather surprising for <code>x.toString().equals(y.toString())</code> to yield false.</p>
"
20004603,"<p>This is what you are doing:</p>

<pre><code>(double)totalCost = (double)totalCost + (Item)order.get(count);
</code></pre>

<p>You can't add <code>double</code> to an object.
<br />
Cast <strong>or</strong> Convert the object to <code>double</code> or <code>int</code> and it'll work.</p>
"
14146219,"<p>Marking a field private and not exposing a <code>setter</code> should be sufficient:  </p>

<pre><code>public class Example{ 

private long id=0;  

   public Example(long id)  
   {  
       this.id=id;
   }    

public long getId()  
{  
     return this.id;
}  
</code></pre>

<p>if this is insufficient and you want someone to be able to modify it X times you can do this:    </p>

<pre><code>public class Example  
{  
    ...  
    private final int MAX_CHANGES = 1;  
    private int changes = 0;    

     public void setId(long id) throws Exception {
        validateExample(); 
        changes++; 
        if ( this.id == 0 ) {
            this.id = id;
        } else {
            throw new Exception(""Can't change id once set"");
        }
    }

    private validateExample  
    {  
        if(MAX_CHANGES==change)  
        {  
             throw new IllegalStateException(""Can no longer update this id"");   
        }  
    }  
}  
</code></pre>

<p>This approach is akin to design by contract, wherein you validate the state of the object after a mutator (something that changes the state of the object) is invoked.</p>
"
14146745,"<p>I think the singleton pattern might be something you should look into.  Google around a bit to check if this pattern meets your design goals.</p>

<p>Below is some sudo code on how to make a singleton in Java using enum.  I think this is based off Joshua Bloch's design outlined in Effective Java, either way it's a book worth picking up if you don't have it yet.</p>

<pre><code>public enum JavaObject {
    INSTANCE;

    public void doSomething(){
        System.out.println(""Hello World!"");
    }
}
</code></pre>

<p>Usage:</p>

<pre><code>JavaObject.INSTANCE.doSomething();
</code></pre>
"
17025910,"<pre><code>for(int j = 0; j &lt; listB.size(); j++){
   if (!listA.contains(listB.get(j))
       additionalDataInListB.add(listB.get(j))
}
</code></pre>

<p>Just repeat that with opposite values to fill up the additionalDataInListA object.  This should do the trick :)</p>

<p>EDIT: This will only work if these are the same object.  That may not be the case.  If this is not the case, you should compare one of the traits probably emp_id to see if those are the same.  If they are not the same, add the different one to the new list.</p>
"
21170802,"<p>You can't use a digit as the first letter in <code>variable/method/class names</code>. for more variable naming rules <a href=""http://www.c4learn.com/java/java-variable-naming-rules/"" rel=""nofollow"">Click Here</a><br /></p>

<pre><code>public class ImageComparator implements Comparator&lt;Obj&gt; {
    @Override
    public int compare(obj obj1, obj obj2) {
        return ((obj)obj1).Id - ((obj)obj2).Id;
    }
}
</code></pre>
"
21170861,"<p>You can try:</p>

<pre><code> return v1.Id &lt; v2.Id ? -1 : v1.Id &gt; v2.Id ? 1 : 0;
</code></pre>
"
14560172,"<p>You can save the lines in a list (in my code a arraylist) and ""read"" the lines backwards from the arraylist:</p>

<pre><code>try
    {

        FileInputStream fstream = new FileInputStream(""\\file path"");
        DataInputStream in = new DataInputStream(fstream);
        BufferedReader br = new BufferedReader(new InputStreamReader(in));
        String line = """";
        ArrayList&lt;String&gt; lines = new ArrayList&lt;String&gt;();

        //Read lines and save in ArrayList 
        while (br.ready())
        {
            lines.add(br.readLine());
        }

        //Go backwards through the ArrayList
        for (int i = lines.size(); i &gt;= 0; i--)
        {
            line = lines.get(i);
        }
    }
    catch (Exception e)
    {
        e.printStackTrace();
    }
</code></pre>
"
20207369,"<p>Here is my code to multiply the fraction. More simpl, hopefully will answer your question.</p>

<pre><code>import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;
import java.util.StringTokenizer;

public class javatest3
{
    static int num1 = 0;
    static int num2 = 0;
    static int denom1 = 0;
    static int denom2 = 0;

    public static void main(String[] args)
    {
        javatest3 javatest3 = new javatest3();
        System.out.println(""Enter an expression (or \""quit\""): ""); // prompts
                                                                    // user for
                                                                    // input
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        String[] array = null;
        try {
            array = in.readLine().trim().split("" "");
            /*
             * I get the array[0] and array[2], it because 2/3 * 3/4
             * 2/3 is array[0], * is array[1] and 3/4 is array[2]
             */
            String[] arrayX = array[0].split(""/"");
            String[] arrayY = array[2].split(""/"");
            String result = javatest3.multiplyFaction(
                    Integer.valueOf(arrayX[0]), Integer.valueOf(arrayY[0]),
                    Integer.valueOf(arrayX[1]), Integer.valueOf(arrayY[1]));

            System.out.println(""Result: "" + result);
        }
        catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        // intro();

    }

    private String multiplyFaction(int x1, int y1, int x2, int y2)
    {
        int mf1 = x1 * y1;
        int mf2 = x2 * y2;

        return String.valueOf(mf1) + ""/"" + String.valueOf(mf2);
    }

//  public static void intro()
//  {
//      Scanner input = new Scanner(System.in);
//      String user = input.nextLine();
//      while (!user.equals(""quit"") &amp; input.hasNextLine()) { // processes code
//                                                              // when user
//                                                              // input does
//                                                              // not equal
//                                                              // quit
//          StringTokenizer chunks = new StringTokenizer(user, "" ""); // parses
//                                                                      // by
//                                                                      // white
//                                                                      // space
//          String fraction1 = chunks.nextToken(); // first fraction
//          String operand = chunks.nextToken(); // operator
//          String fraction2 = chunks.nextToken(); // second fraction
//          System.out.println(""Fraction 1: "" + fraction1);
//          System.out.println(""Operation: "" + operand);
//          System.out.println(""Fraction 2: "" + fraction2);
//          System.out.println(""Enter an expression (or \""quit\""): ""); // prompts
//                                                                      // user
//                                                                      // for
//                                                                      // more
//                                                                      // input
//
//          while (user.contains(""*"")) {
//              parse(fraction1);
//              parse(fraction2);
//              System.out.println(""hi"");
//              int num = num1 * num2;
//              int denom = denom1 * denom2;
//              System.out.println(num + ""/"" + denom);
//              user = input.next();
//
//          }
//
//      }
//  }

//  public static void parse(String fraction)
//  {
//      if (fraction.contains(""_"")) {
//          StringTokenizer mixed = new StringTokenizer(fraction, ""_"");
//          int wholeNumber = Integer.parseInt(mixed.nextToken());
//          System.out.println(wholeNumber);
//          String frac = mixed.nextToken();
//          System.out.println(frac);
//          StringTokenizer parseFraction = new StringTokenizer(frac, ""/""); // parses
//                                                                          // by
//                                                                          // forward
//                                                                          // slash
//          int num = Integer.parseInt(parseFraction.nextToken());
//          System.out.println(num);
//          int denom = Integer.parseInt(parseFraction.nextToken());
//          System.out.println(denom);
//
//      }
//      else if (!fraction.contains(""_"") &amp;&amp; fraction.contains(""/"")) {
//          StringTokenizer parseFraction = new StringTokenizer(fraction, ""/""); // parses
//                                                                              // by
//                                                                              // forward
//                                                                              // slash
//          int num = Integer.parseInt(parseFraction.nextToken());
//          System.out.println(num);
//          int denom = Integer.parseInt(parseFraction.nextToken());
//          System.out.println(denom);
//
//      }
//      else {
//          StringTokenizer whiteSpace = new StringTokenizer(fraction, "" "");
//          int num = Integer.parseInt(whiteSpace.nextToken());
//          System.out.println(num);
//      }
//  }
}
</code></pre>
"
17123684,"<p>Because Java uses pass-by-reference. This means that it passes a <strong>copy</strong> of the variable, and not a reference to the ""original"" one.</p>

<p>E.g. in C++, you can do this:</p>

<pre><code>void change_var(int &amp;x)
{
    x = 2;
}

int x = 10;
change_var(x);
std::cout &lt;&lt; x &lt;&lt; std::endl;
</code></pre>

<p>This would print <code>2</code>, since the reference to the variable <code>x</code> is being passed, and <strong>not</strong> a copy.</p>
"
21175351,"<p>You can use the modulo operator <code>%</code>:</p>

<pre><code>if (n % 8 == 0) {
     System.out.println(n);
}
</code></pre>

<p>This means: if the remainder of dividing <code>n</code> by <code>8</code> is equal to <code>0</code>, we should print this number.</p>
"
17123687,"<p>The <code>Long</code> class is immutable, so you can not pass back the value by modifying it in the called function. In your <code>ClassB</code> a copy is created and the original value is never changed.</p>

<p>If you want the caller to see the changed value, you must pass it back as return value.</p>

<p>The same is true for the other primitive wrappers and String.</p>
"
17132583,"<p>Try with keyListener in your textfield</p>

<pre><code>jTextField.addKeyListener(new KeyListener() {

        @Override
        public void keyTyped(KeyEvent e) {
        }

        @Override
        public void keyPressed(KeyEvent e) {
            if (text.getText().length() &gt;= 1) {
                button.setEnabled(true);
            } else {
                button.setEnabled(false);
            }
        }

        @Override
        public void keyReleased(KeyEvent e) {
        }

    });
</code></pre>
"
21212549,"<p>I don't get your question.I think you wanna give an option to the user to giv input from the console application.</p>

<pre><code>package MyExamples;

import java.util.Scanner;

public class GetInputFromUser {
    public static void main(String srgs[])
    {
    int a,b,c;

        Scanner input=new Scanner(System.in);
    System.out.println(""Enter first value ="");
    a=input.nextInt();
    System.out.println(""Enter second value ="");
    b=input.nextInt();

    c=a+b;

    System.out.println(""Output is ""+c);


    }
}
</code></pre>
"
15768668,"<p>finally block's only purpose is to <strong>close the resources</strong> which you have opened inside try block. 
resources could be anything like database connections,File writing/reading  etc:</p>

<pre><code>Connection conn= null;
try {
 conn= get the db conn;
//do some DML/DDL
}
catch(SQLException ex) {

}
finally {
conn.close();
}
</code></pre>
"
14369688,"<p>If the body parts depend upon one another so you can't do as @dicarlo2's answer:</p>

<pre><code>private interface GetObjects {
    List&lt;SomeObject&gt; get();
}

public void method1(int a, int b) {
    impl(a, b, new GetObjects() { public List&lt;SomeObject&gt; get() {
        return service.getListA(c, d);
    }});
}

public void method2(int a, int b) {
    impl(a, b, new GetObjects() { public List&lt;SomeObject&gt; get() {
        return service.getListB(c, d, e);
    }});
}

private void impl(int a, int b, GetObjects getObjects) {
    //body (the same in both of methods)
    List&lt;SomeObject&gt; list = getObjects.get();
    //rest of the body (the same in both of methods)
}
</code></pre>

<p>You can use an enum in place of <code>GetObjects</code> if you are concerned about the <code>new</code>, but don't mind getting the order mixed up, missing out on outer <code>this</code> and don't want to open this up (although it could implement an public interface).</p>

<p>Better syntax coming in Java SE 8, possibly. IIRC, along the lines of:</p>

<pre><code>public void method1(int a, int b) {
    impl(a, b, { -&gt; service.getListA(c, d) });
}
</code></pre>
"
21227709,"<pre><code>private static int recursionTest(int num){
   while(num &lt; 10){
        recursionTest(++num);
        if(num &lt; 10){
            break;
        }
    }
    return num;
}
</code></pre>

<p>Above snippet will iterate while loop 10 times only so it will be fast.</p>
"
21655961,"<p>Well...given that you're guaranteed that the arrays are sorted, what you should check for is:</p>

<ul>
<li>Are the arrays passed in the same length?  If not, fail it immediately.</li>
<li>If they are the same length...
<ul>
<li>For some starting index from 0 to the length...
<ul>
<li>If a value at <code>a[i] != b[i]</code>, fail immediately.</li>
</ul></li>
<li>Nothing seems to have fallen through the traps, so it's passed.</li>
</ul></li>
</ul>
"
21380798,"<pre><code>if (new Long(s1) &gt; new Long(s2))
    // do your thing
</code></pre>

<p>I see no reason for not creating longs for this.</p>

<p>Here's more info: <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/Long.html#Long%28java.lang.String%29"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/lang/Long.html#Long%28java.lang.String%29</a></p>
"
21380935,"<p>Depending on what you need you can check if both strings contains exactly same value with <code>equals</code> method. But if you want to check which string contains bigger value you should convert them to some numeric type like <code>Long</code> or maybe even <code>BigInteger</code> and use more appropriate method like </p>

<pre><code>String s1 = ""1390785186301"";
String s2 = ""1390785191301"";
System.out.println(Long.compare(Long.parseLong(s1), Long.parseLong(s2)));
System.out.println(new BigInteger(s1).compareTo(new BigInteger(s2)));
</code></pre>

<p>output</p>

<pre><code>-1
-1
</code></pre>

<p>Results are </p>

<ul>
<li><code>-1</code> when <code>s1 &lt; s2</code>, </li>
<li><code>0</code> when <code>s1 = s2</code>, </li>
<li><code>1</code> when <code>s1 &gt; s2</code></li>
</ul>
"
17315946,"<p>You can make this method static.</p>

<pre><code>public static void startChronometer(){
        mChronometer.start();
        showElapsedTime();
    } 
</code></pre>

<p>you can call this function in other class as below:</p>

<pre><code>MainActivity.startChronometer();
</code></pre>

<p>OR</p>

<p>You can make an object of the main class in second class like,</p>

<pre><code>MainActivity mActivity = new MainActivity();
mActivity.startChronometer();
</code></pre>
"
20680065,"<p>How about </p>

<pre><code>public class ThreadsManager {
    private final static ThreadsManager instance = new ThreadsManager();
    private static String userName;

public static synchronized ThreadsManager getInstance( String user ) {
    if ( username == null ) { userName = user; }
    return instance;
}
</code></pre>

<p>That would ensure <code>userName</code> is only set the first time.</p>

<p>It is, however, potentially very confusing semantics for a singleton to take a parameter that is ignored on subsequent <code>getInstance()</code>'s - possibly even race-condition-prone, depending on your use-case.</p>

<p>Cheers,</p>
"
15899797,"<p>this might help you</p>

<pre><code>int[] series=new int[100];
</code></pre>

<p>you can add as follows</p>

<pre><code>series[series.lenght-1]=5;
series[series.lenght-1]=6;
series[series.lenght-1]=9;
</code></pre>

<p>and further more.......</p>
"
21422011,"<p>I have written code like this.. 1st i deselected all the values in the multi select box then i selected the values which i want.. It is working properly..</p>

<pre><code>Log.info(""Clicking on Softwarepack dropdown"");
JavascriptExecutor executor31 = (JavascriptExecutor)driver;
executor31.executeScript(""document.getElementById('swpacksId').style.display='block';"");
Select select31 = new Select(driver.findElement(By.id(""swpacksId"")));
select31.deselectAll();
select31.selectByVisibleText(""ADVLEG"");
Thread.sleep(6000);
JavascriptExecutor executor32 = (JavascriptExecutor)driver;
executor32.executeScript(""document.getElementById('swpacksId').style.display='block';"");
Select select32 = new Select(driver.findElement(By.id(""swpacksId"")));
select32.selectByVisibleText(""SIP"");
</code></pre>
"
20720503,"<p>All the code that was showed here is invalid because the user can enter 0 and 0 should be printed out.</p>

<p>The valid code will look the following way</p>

<pre><code>do
{
    System.out.print( number % 10 );
    number = number / 10;
    if ( number != 0 )
        System.out.print( "","" );
} while ( number != 0 );
</code></pre>
"
14606128,"<p>Maybe the <code>java.util.Stack</code> is more useful here. What is the usage of your list?</p>
"
15947421,"<pre><code>String response = ""prd|50126057|12bars|5"";
String[] words = response.split(""|"");
Toast.makeText(mActivity, words[0]+""::""+words[1]+""::""+words[2]+""::""+words[3],Toast.LENGTH_SHORT).show();
</code></pre>

<p>The above code is working nothing wrong in that. Just check messageReceived is being called or not.</p>
"
21478294,"<pre><code>public static string RemoveSpecialCharacters(string input) {
  Regex r = new Regex(""(?:[^a-z0-9 ]|(?&lt;=['\""])s)"", RegexOptions.IgnoreCase | RegexOptions.CultureInvariant | RegexOptions.Compiled);
  return r.Replace(input, String.Empty);
}
</code></pre>
"
15996662,"<p>This is what I came up with:</p>

<pre><code>    public static String interChange(String input){
        if(input.length() % 2 != 0) throw new IllegalArgumentException(""Not supported"");
        int middle = input.length()/2;
        StringBuilder result = new StringBuilder();
        for(int i=middle;i&lt;input.length();++i){
            result.append(""""+input.charAt(i-middle)+input.charAt(i));
         }
         return result.toString();
}
</code></pre>

<p>Upsss! I just noticed that you do not want working code. Sorry</p>
"
17446787,"<p>Normally webapplications are hosted under webapps directory, but its also possible to configure an external directory as a webapplication host directory in tomcat. You can simply set your eclipse workspace project output directory as an application base. This can be done either by using Tomcat's manager application to deploy an application from an external directory or by simply editing server.xml (which is under conf directory) to define your application like below: </p>

<pre><code>....

&lt;Context docBase=""D:\your\eclipse\workspace\project\WebContent"" path=""/projectbaseurl""   reloadable=""true""/&gt;

&lt;/Host&gt;
&lt;/Engine&gt;
&lt;/Service&gt;
&lt;/Server&gt;
</code></pre>
"
21487428,"<p>Edit:: 
Whoops, read too fast, you wanted numbers, not digits. I believe someone has already answered above. I also have answered the question using my original (but incorrect) approach</p>

<p><strong>Previous Answer</strong></p>

<p>Look at Java's <code>isDigit(char c)</code>. It may look something like:</p>

<pre><code>public static void getSum(string a) {
    int sum = 0;
    for(int i = 0; i &lt; a.length(); i++) {
        if(Character.isDigit(a.charAt(i))) {
            sum += Integer.parseInt(a.charAt(i));
        }
    }
    System.out.println(sum);
}
</code></pre>

<p><strong>New answer using an iterative approach</strong></p>

<pre><code>public static void getSum(String a) {
    int sum = 0;
    String num = """";
    for(int i = 0; i &lt; a.length(); i++) {
        if(Character.isDigit(a.charAt(i))) {
            num = num + a.charAt(i);
        } else {
            if(!num.equals("""")) {
                sum = sum + Integer.parseInt(num);
                num = """";
            }
        }
    }
    if(!num.equals("""")) {
        sum = sum + Integer.parseInt(num);
    }
    System.out.println(sum);
}
</code></pre>
"
14832110,"<pre><code>private void tset(){
    int min1; float somefloat;
    try {
        //setting values for min and somefloat
        min1 = 1;
        somefloat = 0.92f;
    while (true){
        //warning: variables min1 and somefloat may not be initialized.
        float value1 = (1023 - min1) * somefloat;
        System.out.println(""Value: "" + value1);
    }
    } catch (Exception ioe) {
        System.err.println(""Read Exception"");
    } 
}
</code></pre>

<p>This may be the code you are looking for...</p>
"
16036931,"<p>The method  <code>Thread.stop()
</code> should not be used. It is deprecated for a reason - 
<a href=""http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Thread.html#stop%28%29"" rel=""nofollow"">deprecation reason</a>. Use <code>volatile boolean</code>flag in the thread to check whether it should stop or not. Set the flag in the main thread when you want to stop it.</p>
"
20982494,"<p>Anonymous classes are useful, but not applicable in most scenarios. This is as true for a <code>Thread</code> class, as for any other type of class.</p>

<p>In cases, for instance, that multiple instantiations of a Thread object are needed and that Thread object also has state (e.g., some calculation results), or communicates with other objects (e.g., via a queue), one has to extend the <code>Thread</code> class, or implementing the <code>Runnable</code> interface and then using a <code>Thread</code> constructor to actually start the thread.</p>

<p>The subject has been discussed extensively, so you can check the answers (and the links) posted to an <a href=""http://stackoverflow.com/questions/15471432/why-implements-runnable-is-preferred-over-extends-thread"">earlier StackOverflow question</a>, or many other similar ones.</p>
"
20607031,"<p>Try this one </p>

<pre><code>TreeMap&lt;String, Integer&gt; Word = new TreeMap&lt;String,Integer&gt;();

while (scanner.hasNext()) {
    String NewWord = scanner.next().toLowerCase();

    if (Word.containsKey(NewWord)) {
        Word.put(NewWord,Word.get(NewWord)+1);
    } else {
        Word.put(NewWord,1);
    }

}
</code></pre>
"
20607095,"<p>Try this out:</p>

<pre><code>        TreeMap&lt;String, Integer&gt; map = new TreeMap&lt;String, Integer&gt;();
        Scanner scanner = null;
        while (scanner.hasNext()) {
            String NewWord = scanner.next().toLowerCase();

            if (map.containsKey(NewWord)) {
                Integer count = map.get(NewWord);
                // Add the element back along with incremented count
                map.put(NewWord, count++); 
            } else {
                map.put(NewWord,1); // Add a new entry
            }

        }
</code></pre>
"
14824253,"<pre><code>DecimanFormat df = new DecimalFormat(""#.#"");
</code></pre>
"
17527626,"<p>Think about it this way:
if you remove below from your code, do you think your class is of any use:</p>

<pre><code>public double add1(double n)
    {
        return number = number +  n;
    }
</code></pre>

<p>As you are doing calculation, but the result of the calculation is never known to the caller of the API:<code>public void add(double n)</code></p>
"
20615054,"<p>This algorithm appears to generate an acceptable solution according to your constraints:</p>

<pre><code>private static class Algorithm implements ItineraryAlgorithm {
    public List&lt;Integer&gt; processItinerary(String[] towns) {

        List&lt;Integer&gt; sequence = new ArrayList&lt;&gt;(towns.length*(towns.length+1));

        for(int idx1 = 0; idx &lt; towns.length; idx1++){
            result.add(idx1);
            for(int idx2 = idx1+1; idx2 &lt; towns.length; idx2++){
                sequence.add(idx2);
                sequence.add(idx1);
            }
        }

        List&lt;Integer&gt; segments = new ArrayList&lt;&gt;(result.length*2-2);
        for(int i: sequence){
            segments.add(i);
            segments.add(i);
        }
        segments.remove(0);
        segments.remove(segments.length-1);

        return segments;
    }
}
</code></pre>
"
14950769,"<p>Modify the while loop as below.  Declare s1 as String s1; one time outside the loop.  To end the loop, simply use ctrl+z.</p>

<pre><code>  while (sc.hasNext())
  {    
    s1 = sc.next();
    System.out.println(s1);
    System.out.print(""Enter your sentence: "");
  }
</code></pre>
"
14968366,"<pre><code>public class TestClassLoaderAccess {
    public static void main(String[] argv) {
        TestClassLoaderAccess me = new TestClassLoaderAccess();
        ClassLoader myLoader = me.getClass().getClassLoader();
        System.out.println(myLoader.getClass().getSuperclass().getName());
        java.net.URLClassLoader myUrlLoader = (java.net.URLClassLoader) myLoader;
        java.net.URL resource = myUrlLoader.findResource(""TestClassLoaderAccess.class"");
        System.out.println(resource.toString());
    }
}
</code></pre>

<p>Running it:</p>

<pre><code>C:\JavaTools&gt;javac TestClassLoaderAccess.java

C:\JavaTools&gt;java TestClassLoaderAccess
java.net.URLClassLoader
file:/C:/JavaTools/TestClassLoaderAccess.class

C:\JavaTools&gt;
</code></pre>

<p>(The first println is just to prove that the class loader is a subclass of URLClassLoader.)</p>
"
22399198,"<p>You can use split() method. Here is an example :</p>

<pre><code>String string = ""your string"";
String[] parts = string.split("" C"");

 for(int i=0; i&lt;parts.length; i++) {
   String[] word = parts[i].split("" "");

    if( i &gt; 0 ) {
          // ignore the rest words because don't starting with C
      System.out.println(""C"" + word[0]); 
    }
else {    // Check 1st excplicitly
          for(int j=0; j&lt;word.length; j++) {

        if ( word[j].startsWith(""c"") || word[j].startsWith(""C""))
              System.out.println(word[j]); 
            }   
        }

     }
</code></pre>

<p>where ""C"" is you letter. Just then loop around the array. For parts[0] you have to check if it starts with ""C"". It was my mistake to start looping from i=1. The correct is from 0.</p>
"
15005054,"<p>In C range for __int32 is –2147483648 to 2147483647. <a href=""http://msdn.microsoft.com/en-us/library/s3f49ktz.aspx"" rel=""nofollow"">See here for full ranges.</a></p>

<pre><code>unsigned short 0 to 65535
signed short –32768 to 32767
unsigned long 0 to 4294967295
signed long –2147483648 to 2147483647
</code></pre>

<p>There are no guarantees that an 'int' will be 32 bits, if you want to use variables of a specific size, particularly when writing code that involves bit manipulations, you should use the 'Standard Integer Types'.</p>

<p>In Java</p>

<p>The int data type is a 32-bit signed two's complement integer. It has a minimum value of -2,147,483,648 and a maximum value of 2,147,483,647 (inclusive).</p>
"
15021090,"<p>You can use <a href=""http://en.wikipedia.org/wiki/Null_Object_pattern"" rel=""nofollow"">NullObject</a> dessign pattern, but thwroing an exception IMHO is the best choice.</p>

<p>To keep in DRY, you should put that throw in <code>findbyIdInitialized</code>. </p>
"
21100619,"<p>It is not a good practice maybe because you are comparing the <code>String s</code> with a String but you are not comparing the value, you are comparing the memory position of the <code>s</code> value.</p>
"
20995311,"<p>Use javascript to print the page from browser, but your phone must be connected to a printer.
Just try this line of code on any button click event.</p>

<pre><code>window.print();
</code></pre>
"
16285732,"<p>The ? non-greedy flag can only be used after a + or *, in your context, it is a 0-or-1 match.</p>

<p>You want </p>

<pre><code>System.out.println(""city,state,country"".replaceAll(""(.*?,)"", """"));
</code></pre>
"
21113479,"<p>The error occurs on line 3</p>

<pre><code>        byt = (byte[]) arrays.get(0) ;
</code></pre>

<p>arrays.get(0) returns a Byte which you then try to cast to a byte[]</p>
"
15074595,"<p>Seems to be very awkward for such a simple task. </p>

<p>Firstly, </p>

<p>Your loops are much too complicated. Try something like this. </p>

<pre><code>public static String lettersOnly(String word) 
{
    int length = word.length();
    StringBuilder end = new StringBuilder(length);
    char x;

    for (int i = (length - 1); i &gt;= 0; i--) {
        x = word.charAt(i);
        if (Character.isLetter(x)) {
            end.append(x);
        }
    }
    return end.toString();
</code></pre>

<p>This is a much more simplistic way of checking if they are anagrams.</p>

<p>You could also create a separate method for all of the printing which would be much easier.</p>

<p>And lastly, just use </p>

<pre><code>    String ltrsOnlyOne = lettersOnly(wordOne);
    String ltrsOnlyTwo = lettersOnly(wordTwo);
</code></pre>

<p>for creating the strings. </p>
"
22816425,"<p>Here is some good information on Upcasting and Down casting. <a href=""http://forum.codecall.net/topic/50451-upcasting-downcasting/"" rel=""nofollow"">http://forum.codecall.net/topic/50451-upcasting-downcasting/</a></p>

<p>Because every Class inherits from Object you can always Upcast to Object and Downcast to some other Type <code>(B)(Object)a</code>.  Not that this is a good idea but it is valid. If you had actually instantiated A you would get a runtime exception <code>java.lang.ClassCastException</code> the same as if you instantiated and instance of <code>I i = new I(){}</code>    </p>

<pre><code>interface I {
}
class A {
}
class B {
}
class Test {
    public static void main(String args[]) {
        A a = null;
        B b = (B)(Object)a;

        I i = null;
        B b1 = (B)i;
    }
}
</code></pre>
"
21113600,"<p>If you tried to put byte-arrays into the ArrayList arrays, then you should correct its declaration to:</p>

<pre><code>ArrayList&lt;Byte[]&gt; arrays = new ArrayList&lt;Byte[]&gt;();
</code></pre>

<p>and fill it with your data.</p>
"
22856168,"<p>Why not doing it straight forward?</p>

<pre><code>public static void main(String[] args) {
    String str = ""abcdef"";
    for (int idx = 0; idx &lt; str.length(); idx++) {
        System.out.printf(""Expected %d, found %d\n"", idx, indexOf(str.charAt(idx), str, 0));
    }
    System.out.printf(""Expected -1, found %d\n"", indexOf(str.charAt(0), null, 0));
}

public static int indexOf(char ch, String str, int index) {
    if (str == null || index &gt;= str.length()) return -1;
    return str.charAt(index) == ch ? index : indexOf(ch, str, ++index);
}
</code></pre>

<p>OUTPUT:</p>

<pre><code>Expected 0, found 0
Expected 1, found 1
Expected 2, found 2
Expected 3, found 3
Expected 4, found 4
Expected 5, found 5
Expected -1, found -1
</code></pre>
"
22856299,"<p>Well if we must use recursion then try this:</p>

<pre><code>class RecursiveFirstIndexOf {

public static void main(String[] args) {
    System.out.println(indexOf('p', ""apple"", 0));
}

static int indexOf(char c, String str, int currentIdx) {

    if (str == null || str.trim().isEmpty()) {
        return -1;
    }

    return str.charAt(0) == c ? currentIdx : indexOf(c, str.substring(1), ++currentIdx);

}}
</code></pre>
"
15294095,"<p>im edited my previous answer </p>

<pre><code>  String s =""stackjomvammssastackvmlmvlrstack"";      
  String pattern = ""stack"";

Matcher m = pattern.matcher(s);
int i=0;
while (m.find())
{    
    System.out.println(m.start());
    System.out.println(m.start()+m.length());
}
</code></pre>
"
22856455,"<p>first of all : <b>Recursion</b> has two pillars, <b>Base Case</b> and <b>General Case</b>.</p>

<p><b>Base Case</b> (the termination point) is the one where <b>Recursion</b> terminates and <b>General Case</b> as the name implies is where the program keeps executing until it finds  <b>Base Case</b> </p>

<p>you may try this example, where <code>count</code> is a global <code>static</code> variable</p>

<pre><code>public static int indexOf(char ch, String str)
{
  // Returns the index of the of the character ch
  if (str == null || str.Equals(""""))     //Base Case
  {
     if (count != 0)
     {
        if(str.Length == 0)
           return -1;  
        return count;
     }
     else
        return -1;          
  }
  else if (ch == str.CharAt(0))          //Base Case  
     return 1 + count; 
  count++;
  return indexOf(ch, str.Substring(1));  //General Case
}
</code></pre>
"
16632989,"<p>In Java you do not pass the actual object nor do you pass the reference to the object. <strong>You pass copy of the reference to that object.</strong> Now when you say</p>

<pre><code>makeNew(N);
</code></pre>

<p>N which is the reference to <code>new Test(5)</code> is not passed but <strong>the copy of it's reference</strong> is passed. In the makeNew() function this copy points to some new object and print the value appropriately but the N will still point to the original object.</p>
"
16656442,"<pre><code>int a[] = {2,1,2,3,4};

int b[] = {0};

for(int i = 0; i &lt; a.size; i++)
{

    if(a[i] == a[i+1])
    {
         //duplicate found
         //copy it to second array
        b[i] = a[i];
    }
}
</code></pre>
"
21320268,"<p>To get a random number in a range, it is best to do the following instructions.</p>

<pre><code> Random rnd = new Random();
 range = (int) (rnd.nextDouble() * (max-min)+ min);
</code></pre>
"
22987704,"<p>That is because you have to create a class that extends <code>GUI</code> or use one already defined, that also extends <code>GUI</code>.</p>

<p>Also u can remove <code>abstract</code> keyword, to use the one you have.</p>
"
18030788,"<p>The default implementation(had it not been overridden) would print the object as something like</p>

<pre><code>Integer i = 95;
System.out.println(i.getClass().getName() + ""@"" + Integer.toHexString(i.hashCode()));
//java.lang.Integer@5f
</code></pre>

<p>In case of an integer, the <code>hashCode</code> value is the same as the underlying value.</p>
"
15364117,"<p>its throwing unrreachable code because compiler knows that when the controll reaches that return statement, then it would return and no more code would be executed.To solve this, what you could do is, either put the return statement in a condition block like i have shown below, but again  this program wont return u the result you wanted. it will return only the year. if you want the entire result ie. number of years + number of weeks + number of  days i would suggest you to make the entire answer to a single string and return.</p>

<pre><code>public double Convertir(double Number) {
        // Number = nombre;
        double annee = 0;
        double semaine = 0;
        double jour = 0;
        while ((Number - 365) &gt;= 0) {
            annee += 1; // this calculates the number of years
        }
        if (annee &gt; 0) {
            return annee;
        }
        double nombreSemaine = Number - (annee * 365);
        while ((nombreSemaine - 7) &gt;= 0) {
            semaine = semaine + 1;
        }// this calculates the number of weeks
        if (semaine &gt; 0)
            return semaine;

        double nombreJour = Number - (annee * 365) - (semaine * 7);
        nombreJour = jour;
        return jour;
    }
</code></pre>
"
21422872,"<pre><code>String name=Vikash
String upperCase=name.toUpperCase()
String lowerCase=name.toLowerCase()
</code></pre>
"
21425832,"<p>in short: <code>Set&lt;E&gt;</code> <code>extends</code> a superinterface <code>Iterable&lt;E&gt;</code> and so passes down the methods from <code>Iterable&lt;E&gt;</code></p>

<p>The object <code>keys</code> will thus have access to these methods.</p>

<p><a href=""http://docs.oracle.com/javase/7/docs/api/java/util/Set.html"" rel=""nofollow"">Here</a>'s the link to the docs.</p>
"
18056443,"<pre><code>public void webClick(View v) 
{
    Intent intent = new Intent(this, Webview.class);

    switch(v.getId())
    {
        case R.id.button1:
            intent.putExtra(""weblink"",""file:///android_asset/chapter/chapter1.html"");
            startActivity(intent);
            break;

        case R.id.button2:
            intent.putExtra(""weblink"",""file:///android_asset/chapter/chapter2.html"");
            startActivity(intent);
            break;

        case R.id.button3:
            intent.putExtra(""weblink"",""file:///android_asset/chapter/chapter3.html"");
            startActivity(intent);
            break;
.
.
.
.

        case R.id.button100:
            intent.putExtra(""weblink"",""file:///android_asset/chapter/chapter100.html"");
            startActivity(intent);
            break;
        default:
            break;
     }

}
</code></pre>
"
22501429,"<p>Instead do something like this</p>

<pre><code>   public int fightMath(int one, int two) {
    return Calculate(one,two)

    }


    private int Calculate(int one,int two){

    if (one==0){
        if(two==0){
     //return value}
    }else if (one==1){
   // return value as per condtiion
    }

    }
</code></pre>
"
15391490,"<p>You could still load the keys if necessary, </p>

<pre><code>public static PublicKey bigIntegerToPublicKey(BigInteger e, BigInteger m)  {
    RSAPublicKeySpec keySpec = new RSAPublicKeySpec(m, e);
    KeyFactory fact = KeyFactory.getInstance(""RSA"");
    PublicKey pubKey = fact.generatePublic(keySpec);
    return pubKey;
}

public static PrivateKey bigIntegerToPrivateKey(BigInteger e, BigInteger m) {
    RSAPrivateKeySpec keySpec = new RSAPrivateKeySpec(m, e);
    KeyFactory fact = KeyFactory.getInstance(""RSA"");
    PrivateKey privKey = fact.generatePrivate(keySpec);
    return privKey;
}
</code></pre>

<p>all you need is the modulus and the exponent.</p>
"
16774169,"<p>You can not get exactly what you want.</p>

<p><code>str</code> is defined as <code>string</code> and you want it to be an <code>array</code>.</p>

<p>You need to use another variable to get results. Use <code>str.split("":|;"")</code> function and store result in <code>String[] result</code></p>

<pre><code>String[] result = str.split("":|;"");
</code></pre>
"
15463970,"<p>Try this :</p>

<pre><code>for (int i = 1; i &lt;= 7; i++) {
for (int j = 1; j &lt; i; j++) 
{
    System.out.print(""  "");
}
for (int j = 1; j &lt;= 7-i; j++) 
{
System.out.print(j + "" "");
}
System.out.println();  
</code></pre>

<p>}</p>
"
23306063,"<p>This is my solution. It uses 3 loops but is constant time and gets 100/100 on codibility.</p>

<pre><code>class FrogLeap
{
    internal int solution(int X, int[] A)
    {
        int result = -1;
        long max = -1;
        var B = new int[X + 1];

        //initialize all entries in B array with -1
        for (int i = 0; i &lt;= X; i++)
        {
            B[i] = -1;
        }

        //Go through A and update B with the location where that value appeared
        for (int i = 0; i &lt; A.Length; i++)
        {
           if( B[A[i]] ==-1)//only update if still -1
            B[A[i]] = i;
        }

        //start from 1 because 0 is not valid
        for (int i = 1; i &lt;= X; i++)
        {
            if (B[i] == -1)
                return -1;
            //The maxValue here is the earliest time we can jump over
            if (max &lt; B[i])
                max = B[i];
        }

        result = (int)max;
        return result;
    }
}
</code></pre>
"
21573156,"<p>The following code should work:</p>

<pre><code>driver.manage().deleteAllCookies();
</code></pre>
"
15464355,"<p>One way to do this (I assume its a long procedure, easy one though), if you know the database and get all the tables and retrieve info from those tables. Since, we are talking about sqlite DBs, I assume it will be small. </p>

<pre><code>SELECT * FROM dbname.sqlite_master WHERE type='table';
</code></pre>
"
18149505,"<pre><code>private
</code></pre>

<p>This keyword in itself says that the <strong><em>variable or a method or a function</em></strong> associated with it, is no longer available to the class's object. To access it, you need to make a public method in which you will use it.</p>
"
15565886,"<p>The following code snippet retrieves information about the file type</p>

<pre><code>final File file = new File(""file.txt"");
System.out.println(""File type is: "" + new MimetypesFileTypeMap().getContentType(file));
</code></pre>

<p>Hopefully, it may help you</p>
"
21840898,"<p>For the sake of completeness, you should have a method which can check <em>all</em> arrays:</p>

<pre><code>    public static &lt;E&gt; boolean compareArrays(E[] array1, E[] array2) {
      boolean b = true;
      for (int i = 0; i &lt; array2.length; i++) {
        if (array2[i].equals(array1[i]) ) {// For String Compare
           System.out.println(""true"");
        } else {
           b = false;
           System.out.println(""False"");
        }
      } 
      return b;
    }
</code></pre>
"
15606651,"<p>In switch statement if you don't <code>break</code> the subsequent case is executed. To give you simple example</p>

<pre><code>    int value = 2;
    switch(value) {
    case 1: 
        System.out.println(""one"");
        break;
    case 2: 
        System.out.println(""two"");
    case 3: 
        System.out.println(""three"");
        break;
    }
</code></pre>

<p>Will output</p>

<pre><code>two
three
</code></pre>

<p>Because <code>break</code> wansn't executed on case 2</p>
"
23115213,"<p>you can't use <code>==</code> on strings, you need to use the <code>String.equals</code> function. 
you can use it like that:</p>

<pre><code>        String s1 = ""H"";
        String s2 = ""e"";
        String s3 = s1+s2;
        String s4 = ""He"";
        System.out.println(s3.equals(s4));//false

        String s5=""h"";
        String s6=""h"";
        System.out.println(s5.equals(s6));//true
</code></pre>
"
15636643,"<p>List is an interface in java!</p>

<p>you can give references of instances like ArrayList, linket list, vector and stack to a variable with List datatype</p>

<p>so you can use one of the following,</p>

<pre><code>a = new ArrayList&lt;Integer&gt;();
a = new LinkedList&lt;Integer&gt;();
a = new Vector()&lt;Integer&gt;;
a = new Stack()&lt;Integer&gt;;
</code></pre>
"
17197312,"<p>It depends what you need, as @andrzeg said.</p>

<p>One additional thing.  Do you want a.equals(d) to be true, but d.equals(a) to be false?  when coding you will probably be using <code>instanceof</code> which may or may not be what you want.</p>
"
15818977,"<pre><code>String paragraph = ""My first sentence. My second sentence"";
String [] sentences = paragraph.split(""\\."");
</code></pre>

<p>this should split the sentences up since they all end with a full stop.</p>
"
24115246,"<ul>
<li><p><strong><code>int</code> is a primitive type.</strong><br><br>
Way of declaration: <code>int a = 5;</code></p></li>
<li><p><strong><code>Integer</code> is a wrapper class</strong> (it extends Object).<br><br>
Way of declaration: <code>Integer a = new Integer(5);</code></p></li>
</ul>

<hr>

<p>When you write</p>

<pre><code>Integer a = 5;
</code></pre>

<p>compiler automatically converts it to</p>

<pre><code>Integer a = new Integer(5);
</code></pre>

<p><strong>This feature is called Autoboxing</strong> <em>(since Java 5.0)</em></p>

<hr>

<ul>
<li><code>int</code> can not be casted to <code>Object</code> as it is not a referenced data type (object) at all.</li>
<li>But it can be casted to other primitive types.</li>
<li>On the other hand, <code>Integer</code> can be casted to <code>Object</code>.</li>
</ul>

<hr>

<p>When you write</p>

<pre><code>Object ans = (Integer) a;
</code></pre>

<p>compiler does autoboxing and then casts it.</p>

<pre><code>Object ans = (int) a;
</code></pre>

<p>gives a compiler error because the cast to <code>int</code> is successful, but it can not be assigned to an <code>Object</code> reference.</p>

<p>Hope this helps.<br>
Good luck.</p>
"
22080734,"<p>Why do you want to use a complicated regex? You can check the String with <code>String#indexOf(int, int)</code> three times in a row - Regex are able to match expressions by using NFA and if you don't have non-determinism there's seldom use for regex in my opinion.</p>
"
24186731,"<p>deviceID[i] just gets the i'th element in deviceID and does nothing with it.</p>

<p>deviceID = deviceID[i] is trying to assign an int to an object declared as a list, hence your error.</p>

<p>What you want to do is:  </p>

<pre><code>    List&lt;int&gt; deviceID = new List&lt;int&gt;()
    for(int i = 292; i &lt;= 305; i++)
    {
        deviceID.add(i);
    }
</code></pre>

<p>This should give you a list with only the numbers 292-305 in it</p>
"
22199374,"<p>Try</p>

<pre><code>while ((line = in.readLine()) != null){
  System.out.println(line)
}
</code></pre>

<p>You can see that it's possible, But you should use <code>FileInputStream</code> instead of <code>FileReader</code> because <code>FileReader</code> doesn't have <code>readLine</code> method.</p>
"
23509273,"<p>Try the following Regex for Alpha Numeric...</p>

<pre><code>foo.matches(""\\w.*"")
</code></pre>

<p>Or </p>

<pre><code>foo.matches(""\\w+"");
</code></pre>
"
24412815,"<p>Try using recursion, just call your function from inside your function.</p>

<p>EDIT:</p>

<p>Ok, obviously I should have expanded on my answer then...</p>

<pre><code>private String functionName(String condition) {

    if (check your condition here) {
        return;
        // or do whatever you have to do  
    }

    // call your function again
    functionName();
}
</code></pre>
"
18544656,"<pre><code>Integer int = null;
</code></pre>

<p>ints are primitives, they have default values different from null.</p>
"
15983574,"<p>Sometimes it is very simple... you need to install visualvm via</p>

<pre><code>sudo apt-get install visualvm
</code></pre>

<p>For locating the files, use</p>

<pre><code>dpkg -L visualvm
</code></pre>
"
22668937,"<p>Try Regex:</p>

<pre><code>String pattern = ""["" + S2 + ""]""; // will take all chars from S2 to create a pattern.
String result = S1.replaceAll(S2,""""); //will replace any char from S2.
</code></pre>
"
18544673,"<p>The simple boxed Integer <code>Integer i = null;</code> has already been supplied. Here is an alternative:</p>

<pre><code>class NullableInt {
    private int value;
    private boolean isNull;
    public NullableInt() { isNull = true; }
    public NullableInt(int value) { 
      this.value = value; 
      isNull = false;
    }
    public NullableInt(String intRep) {
      try { value = Integer.parseInt(intRep);
      } catch (NumberFormatException) {
         isNull = true;
      }
    }
    boolean isNull() { return isNull; }
    void setNull(boolean toNull) { isNull = toNull; }
    void setValue(int value) { this.value = value; }
    int getValue() { return value; }
    @Override 
    public String toString() { return isNull ? """" : value; }
}

NullableInt integer1 = new NullableInt(56);
NullableInt integer2 = new NullableInt();

System.out.pritnln(integer1); // &gt;&gt; ""56""
System.out.println(integer2); // &gt;&gt; """"

// and finally, to address the actual question:
String id = """";
System.out.println(new NullableInt(id)); // &gt;&gt; """"
</code></pre>
"
15940006,"<p>To reverse it:</p>

<pre><code>for (int i = 0; i &lt; values.length; i++)
    reverseNums[values.length - i - 1] = values[i];
</code></pre>
"
17526004,"<p>The simplest method that I can think of it's:</p>

<pre><code>public static &lt;T&gt; void reverse( LinkedList&lt;T&gt; list )
{
    if (list.size() &lt;= 1) {
        return;
    }
    T first = list.removeFirst();
    reverse( list);
    list.addLast( first );
}
</code></pre>
"
15994563,"<p>Contrary to some of the comments here, making a class final <em>does</em> have to do with immutability.  For a class to be immutable, it <em>should</em> be final, so as to not allow subclasses to override any getters, and thereby not allowing them to ""mutate"" it by returning a different value.</p>

<pre><code>Recall that to guarantee immutability, a class must not permit itself to be subclassed.

- Joshua Bloch, Effective Java
</code></pre>

<p>also, from the Java tutorials, <a href=""http://docs.oracle.com/javase/tutorial/essential/concurrency/imstrat.html"" rel=""nofollow"">A Strategy for Defining Immutable Objects</a>:</p>

<blockquote>
  <p>3.Don't allow subclasses to override methods. The simplest way to do this is to declare the class as final</p>
</blockquote>
"
23644816,"<p>Since you're using an else clause, you don't have to check against 33 twice:</p>

<pre><code>if (i &lt;= 33) {
    variable = x;
} else if (i &lt;= 66) {
    variable = y;
} else {
    variable = z;
}
</code></pre>
"
16004323,"<p>You are setting an object to <code>chaine2</code>,</p>

<pre><code>chaine2 = new String();
</code></pre>

<p>but you overwrite it at the next line, so the previously created empty String is not used for anything.</p>

<pre><code>chaine2 = chaine.toLowerCase();
</code></pre>

<p>The compiler finds it odd, since the first line is useless, and warns you in case it is a logic error (although it is a correct program and will compile and run correctly).</p>
"
17696731,"<p>I'm tempted to suggest nesting a for loop:</p>

<pre><code>for (int i = 0; i &lt; resultList.size(); i++)
{
  for(int j = 0; j &lt; resutList.get(i).size(); j++){
    System.out.println(""-&gt;""+resultList.get(i).get(j));
  }         
}
</code></pre>
"
23831094,"<p>The right way to create a random integer i is:   </p>

<pre><code>Double d = Math.random()*100;
int i = d.intValue();
</code></pre>
"
22918810,"<p>i was following this question and based on the answer by Android_Dev i made changes to my code as below </p>

<p>1st class</p>

<pre><code> class blah extends activity {
 //// onCreate , initialization etc here

     public void sss(context c)
   {

    Toast(c , ""text"" , toast.LENTGH_LONG) ;

   }

  }
</code></pre>

<p>2nd Class</p>

<pre><code>public xxxx extends activity
{

Context c = getApplicationContext();
blah b = new blah(this) ;

 /// inside an onclicklistener attached to a button object, i put this
    b.sss(c) ; 

}
</code></pre>

<p>I have not included all other stuff usually found in classes extending Activity class since i just wanted to show what i did to call function from other class.
This solution was perfect for me. May or may not be useful for others though</p>
"
16104953,"<p>Since you don't know which item are redundant you need to loop over your array. I suggest that you use temporary List uniqueItemsList to add the items during your loop.
The list will grow as needed.</p>

<p>Then you can get a array with code like this (replace String with your type) :</p>

<pre><code>String uniqueItems[] = new String[uniqueItemsList.size()]; 
uniqueItems = uniqueItemsList.toArray(uniqueItems);
</code></pre>
"
24769747,"<p>Use the following code:</p>

<pre><code>if(json.isNull()!= null){  //returns true only if json is not null

}
</code></pre>
"
18735765,"<p>try this: <code>System.out.println\(.*?\)</code> </p>

<p><a href=""http://jsfiddle.net/vladkras/HgMCb/"" rel=""nofollow"">fiddle</a> for those who doesn't believe (it's written in JS, not Java, but the same pattern will work everywhere)</p>

<p><strong>EDIT</strong> hey, come on, stop downvoting. This regexp: <code>/System\.out\.println\((?&lt;=\().*(?=\))\)/</code> removes all inside matching brackets: <strong><a href=""http://phpfiddle.org/lite/code/s7v-mt0"" rel=""nofollow"">Fiddle</a></strong></p>
"
16278894,"<pre><code>System.getProperty(""java.vm.specification.version"");
System.getProperty(""java.version"");
</code></pre>
"
24216213,"<p>The reason why you don't see the lower numbers is because by the time it starts writing to the output it is already past the range of int, some due to ABCD analysis / JIT some due to the slow nature of Java...</p>

<p><a href=""http://reverseblade.blogspot.com/2009/02/c-versus-c-versus-java-performance.html"" rel=""nofollow"">http://reverseblade.blogspot.com/2009/02/c-versus-c-versus-java-performance.html</a> </p>

<p>I bet if you added a memory barrier or call to  'sleep' or declare the int as <code>volatile</code> you would see more numbers in the lower range.</p>
"
18783457,"<p>As you want to remove the first dot and replace the second one with a space, you need replace the whole P.O. section</p>

<p>Use </p>

<pre><code>replace(""P\\.O\\."", ""PO "");
</code></pre>
"
18783476,"<p>You should use <code>replaceFirst</code> method twice. </p>

<pre><code>String replace = uppercase.replace(""\\."", """").replaceFirst(""\\."", """");
</code></pre>
"
24279199,"<p>You are having <code>public void update(SomeClass c)</code> method in your code and this method is an <code>instance method</code> in which you are passing the object as parameter.</p>

<p><code>synchronized(c)</code> in your code is doing nothing. Let me show you with some example,</p>

<p>So if you will make different objects of this class and then try to make them different threads like,</p>

<pre><code>   class A extends Thread{
          public void update(SomeClass c){}
          public void run(){
               update(c)
          }
          public static void main(String args[]){

               A t1 = new A();
               A t2 = new A();

               t1.start();
               t2.start();

          }
   }
</code></pre>

<p>Then both of these t1 &amp; t2 will have their own copies of update method and the reference variable <code>c</code> which you are making synchronized will also be different for both  the threads. t1 calls its own update() method and t2 calls its own update() method. So synchronization won't work.</p>

<p>Synchronization will work when you have something common for both the threads.</p>

<p>Something like,</p>

<pre><code>   class A extends Thread{

          static SomeClass c;

          public void update(){
                synchronized(c){

                }
          }
          public void run(){
               update(c)
          }
          public static void main(String args[]){

               A t1 = new A();
               A t2 = new A();

               t1.start();
               t2.start();

          }
   }
</code></pre>

<p>This way the actual concept of synchronization will be applied.</p>
"
25057535,"<p>did you missed type casting the character to integer?
try this: </p>

<pre><code>int ascii = (int) convert;
</code></pre>
"
25057684,"<p>Replace this line </p>

<pre><code>""int ascii = ('convert'/1);""
</code></pre>

<p>by </p>

<blockquote>
  <p>int ascii= (int)convert;</p>
</blockquote>

<p>This should work. </p>
"
23670365,"<p>Use</p>

<p><code>android:windowSoftInputMode=""stateHidden""</code></p>

<p>for <code>&lt;activity&gt;</code> in <code>Android_Manifest.xml</code></p>
"
18079045,"<p>First convert it into List of your class:</p>

<pre><code>List&lt;Employee&gt; list = new List&lt;Employee&gt;(arraylist);

var sorted = list.OrderBy(o =&gt; o.id).ToList();
</code></pre>
"
16557763,"<p>You could use a variable of type <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/ThreadLocal.html"" rel=""nofollow""><code>ThreadLocal</code></a>.</p>

<blockquote>
  <p><code>ThreadLocal</code> can be considered as a scope of access, like a <em>request scope</em> or <em>session scope</em>. It's a thread scope. You can set any object in <code>ThreadLocal</code> and this object will be <em>global</em> and <em>local</em> to the specific thread which is accessing this object. <em>Global</em> and <em>local</em>? Let me explain:</p>
  
  <ul>
  <li>Values stored in <code>ThreadLocal</code> are <em>global</em> to the thread, meaning that they can be accessed from anywhere inside that thread. If a thread calls methods from several classes, then all the methods can see the <code>ThreadLocal</code> variable set by other methods (because they are executing in same thread). The value need not be passed explicitly. It's like how you use global variables.</li>
  <li>Values stored in <em>ThreadLocal</em> are local to the thread, meaning that each thread will have it's own <code>ThreadLocal</code> variable. One thread can not access/modify other thread's <code>ThreadLocal</code> variables.</li>
  </ul>
</blockquote>

<p><a href=""http://veerasundar.com/blog/2010/11/java-thread-local-how-to-use-and-code-sample/"" rel=""nofollow""><em>Java Thread Local – How to use and code sample</em></a></p>

<p>e.g. You can have something like that:</p>

<pre><code>public class APIUtility {

    private static ThreadLocal&lt;Engine&gt; ENGINE_LOCAL = new ThreadLocal&lt;Engine&gt;();

    public static void setEngine(Engine engine) {
        ENGINE_LOCAL.set(engine);
    }

    public static Engine getEngine() {
        ENGINE_LOCAL.get();
    }

}

class NameValidator {

    public void foo() {
        Object obj = APIUtility.getEngine().getSomething();
    } 

}
</code></pre>

<p>See also:</p>

<ul>
<li><a href=""http://en.wikipedia.org/wiki/Thread-local_storage"" rel=""nofollow"">Thread-local storage - Wikipedia, the free encyclopedia</a></li>
<li><a href=""http://java.dzone.com/articles/java-thread-local-%E2%80%93-how-use"" rel=""nofollow"">Java Thread Local – How to Use and Code Sample | Javalobby</a></li>
</ul>
"
25334560,"<p>First of all, previous answers are correct and around the same point. You MUST let the compiler know that the you want to use (x) as a child and not parent.</p>

<p>So, and sticking with your code sample, the answer is to modify the System.out statement to the following:</p>

<pre><code> System.out.println(((Child)x).getValue());
</code></pre>
"
18227832,"<p>How about comparing the paths?</p>

<pre><code>    boolean areRelated = file.getAbsolutePath().contains(dir.getAbsolutePath());
    System.out.println(areRelated);
</code></pre>

<p>or </p>

<pre><code>boolean areRelated = child.getAbsolutePath().startsWith(parent.getAbsolutePath())
</code></pre>
"
25592859,"<p>Although the solution shown by maszter works, it is a linear search so isn't as efficient as some of the other search methods. These include binary search etc. and they are provided with the class <code>java.util.Arrays</code> in Java with the syntax:</p>

<pre><code>Arrays.binarySearch(array, word); //A much faster approach
</code></pre>

<p>If more speed is necessary and searching is the main use of the array, I would recommend using a HashMap or HashSet instead.</p>
"
16804923,"<p>Make <code>ratio</code> final and it will be thread safe.</p>
"
16813110,"<p>Using <a href=""http://txt2re.com/"" rel=""nofollow"">this</a> website:</p>

<pre><code>// URL that generated this code:
// http://txt2re.com/index-java.php3?s=PT1M13S&amp;6&amp;3&amp;18&amp;20&amp;-19&amp;-21 

import java.util.regex.*;

class Main
{
  public static void main(String[] args)
  {
    String txt=""PT1M13S"";

    String re1=""(P)"";   // Any Single Character 1
    String re2=""(T)"";   // Any Single Character 2
    String re3=""(\\d+)"";    // Integer Number 1
    String re4=""(M)"";   // Any Single Character 3
    String re5=""(\\d+)"";    // Integer Number 2
    String re6=""(S)"";   // Any Single Character 4

    Pattern p = Pattern.compile(re1+re2+re3+re4+re5+re6,Pattern.CASE_INSENSITIVE | Pattern.DOTALL);
    Matcher m = p.matcher(txt);
    if (m.find())
    {
        String c1=m.group(1);
        String c2=m.group(2);
        String minutes=m.group(3); // Minutes are here
        String c3=m.group(4);
        String seconds=m.group(5); // Seconds are here
        String c4=m.group(6);
        System.out.print(""(""+c1.toString()+"")""+""(""+c2.toString()+"")""+""(""+minutes.toString()+"")""+""(""+c3.toString()+"")""+""(""+seconds.toString()+"")""+""(""+c4.toString()+"")""+""\n"");

        int totalSeconds = Integer.parseInt(minutes) * 60 + Integer.parseInt(seconds);
    }
  }
}
</code></pre>
"
16817053,"<p>The question <a href=""http://stackoverflow.com/questions/2201925/converting-iso8601-compliant-string-to-java-util-date"">Converting ISO8601-compliant String to java.util.Date</a> contains another solution:</p>

<blockquote>
  <p>The easier solution is possibly to use the data type converter in
  JAXB, since JAXB must be able to parse ISO8601 date string according
  to the XML Schema specification.
  <code>javax.xml.bind.DatatypeConverter.parseDateTime(""2010-01-01T12:00:00Z"")</code>
  will give you a <code>Calendar</code> object and you can simply use <code>getTime()</code> on it, if you need a <code>Date</code> object.</p>
</blockquote>
"
16895952,"<p>The possible problem with your code is you are not flushing the output data. So that it might not get written to the output file. </p>

<p>Try the below code.</p>

<pre><code>public static void main(String[] args) {

    String s = ""Hello world!"";
    int i = 143141141;
    try
    {
        //create new file with an ObjectOutputStream
        FileOutputStream out = new FileOutputStream(""test.txt"");
        ObjectOutputStream oout = new ObjectOutputStream(out);

        //write something in a file
        oout.writeObject(s);
        oout.flush();
        oout.writeObject(i);
        oout.flush();        
        //close the stream
        out.close();
        oout.close();

        //create an ObjectInputStream for the file we created before
        ObjectInputStream ois = new ObjectInputStream(new FileInputStream(""test.txt""));
        //read and print what we wrote before
        System.out.println("""" + (String) ois.readObject());
        System.out.println("""" + ois.readObject());
        ois.close();
    }
    catch(Exception ex)
    {
        ex.printStackTrace();
    }
}
</code></pre>

<p>And also if you want to read your written objects into the file then you can't because they are written as serialized objects. For textual operation with files you can consider BufferedReader or PrintWriter. see the following code.</p>

<pre><code>public class WriteToFileExample {
    public static void main(String[] args) {
        try {

            String content = ""This is the content to write into file"";

            File file = new File(""c:\\desktop\\filename.txt"");

            // if file doesnt exists, then create it
            if (!file.exists()) {
                file.createNewFile();
            }

            FileWriter fw = new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(content);
            bw.close();

            System.out.println(""Done"");

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
</code></pre>

<p>After this you can open your text file and can see the written content in the human readable form and it is good practice to not to give ""txt"" formats when you are writing objects to the file. It's misleading. </p>

<p>Hope this helps.</p>
"
25922816,"<p>Well, here's my shot at it. Worked for me:</p>

<pre><code>public class MakeItConcurrent {

    private static final ExecutorService threadPool = Executors.newFixedThreadPool(4);
    private static final AtomicInteger outputCount = new AtomicInteger();
    private static final ThreadLocal&lt;SecureRandom&gt; threadToStringBuilder = new ThreadLocal&lt;SecureRandom&gt;();

    public static String task() {
        SecureRandom rand = threadToStringBuilder.get();
        if (rand == null) {
            threadToStringBuilder.set(new SecureRandom());
            rand = threadToStringBuilder.get();
        }
        return rand.nextDouble() &gt; 0.5 ? ""output"" : null;
    }

    public static void doManyTasks() {
        int currOutputCount;
        while ( ( currOutputCount = outputCount.get() ) &lt; 100) {
            String output = task();
            if (output != null) {
                // outputCount.compareAndSet(currOutputCount, currOutputCount + 1); use this if you want exactly 100 outputs
                outputCount.set(currOutputCount + 1);
                System.out.println(output);
            }
        }
        threadPool.shutdownNow();
    }

    public static void main(String[] args) throws InterruptedException {
        Runnable runnable = new Runnable() {            
            @Override public void run() {
                doManyTasks();
            }
        };
        threadPool.submit(runnable);
        threadPool.submit(runnable);
        threadPool.submit(runnable);
        threadPool.submit(runnable);
        while ( ! threadPool.isShutdown() ) {
            Thread.sleep(100);
        }
        System.out.println(outputCount);
    }
}
</code></pre>
"
25922831,"<pre><code>import java.security.SecureRandom;
import java.util.concurrent.atomic.AtomicInteger;

public class MultiThreadedTask implements Runnable {

    private SecureRandom secureRandom;
    private AtomicInteger outputCount;

    public MultiThreadedTask(SecureRandom secureRandom, AtomicInteger outputCount) {
        this.secureRandom = secureRandom;
        this.outputCount = outputCount;
    }

    @Override
    public void run() {
        while (outputCount.get() &lt; 100) {
            String output = task();
            if (output != null &amp;&amp; outputCount.get() &lt; 100) {
                System.out.println(Thread.currentThread().getName() + "" -- ""+ outputCount.incrementAndGet());
            }
        }
    }

    public String task() {
        return secureRandom.nextDouble() &gt; 0.5 ? ""output"" : null;
    }

}

import java.security.SecureRandom;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.atomic.AtomicInteger;

public class TestMain {

    private SecureRandom secureRandom = new SecureRandom();
    private AtomicInteger outputCount = new AtomicInteger();

    public static void main(String[] args) {
        new TestMain().test();
    }

    public void test() {
        ExecutorService executor = Executors.newFixedThreadPool(4);
        for(int i =0; i &lt; 4; i++) {
            executor.execute(new MultiThreadedTask(secureRandom, outputCount));
        }
        executor.shutdown();
    }
}
</code></pre>
"
16900791,"<p>You can have the array easily sorted with <code>Arrays.sort</code>. Then the first element is the smallest and the last the largest:</p>

<pre><code>int[] value= {5,16,3,32,6};
Arrays.sort(value);
int min = value[0];
int max = value[value.length-1];
int dif = max-min;
</code></pre>
"
25231250,"<p>You can simply add.</p>

<pre><code>summary += word;
</code></pre>
"
25468800,"<p>You should use <code>long</code> instead of <code>Long</code>. Note that <code>Long</code> is a class and so you must use <code>equals()</code> to compare instances of it. On the other hand, if you use <code>long</code> instead, you can compare with <code>==</code> because these are primitives.</p>
"
22268893,"<p>If you use Google Play Services and show Maps you should add Meta tag in AndroidManifest.xml    </p>

<pre><code>**&lt;meta-data
            android:name=""com.google.android.gms.version""
            android:value=""@integer/google_play_services_version"" /&gt;**
</code></pre>
"
24753306,"<p>I tried a split on ""."" and then just parse the string for integers. </p>

<pre><code>        String a="""";
        double x = 2.4;
        a=x+"""";
        String [] v =a.split(""\\."");
        int before = Integer.parseInt(v[0]);
        int after = Integer.parseInt(v[1]);
</code></pre>
"
25550930,"<p>Java has a class called <code>java.util.concurrent.Future</code> which is equivalent to the C# <code>Task</code> class.</p>

<p>You can set off work on a <code>java.util.concurrent.Executor</code> object. There are many implementations but <code>ForkJoinTask.fork()</code> is worth a look if you hit thread limits as soon as you try this.</p>

<p>You will be given a <code>Future</code> when you start work. Your method will carry on running. When you need the result from your Future you call <code>get()</code> and it will block until the result is ready. This is similar to using the <code>await</code> keyword in C#.</p>
"
17328956,"<p>just add your .jar file in applet tag as an attribute as shown below:</p>

<pre><code>&lt;applet
    code=""file.class""
    archive=""file.jar""
    height=550 
    width=1100&gt;         
&lt;/applet&gt;
</code></pre>
"
26236642,"<p>You can use the method </p>

<pre><code>line.isEmpty()
</code></pre>

<p>to handle that case</p>
"
19585017,"<p>This is not the best way to solve this problem, but it will do it:</p>

<pre><code>int deltaX = 0;
while(deltaX = 0) {
      deltaX = -5 + v.nextInt(10);
}
System.out.println(deltaX);
</code></pre>
"
18758937,"<p>You should use Apache Commons IO: <a href=""http://commons.apache.org/proper/commons-io/"" rel=""nofollow"">http://commons.apache.org/proper/commons-io/</a></p>

<p>See <code>IOUtils.copy()</code> <a href=""http://commons.apache.org/proper/commons-io/javadocs/api-release/index.html?org/apache/commons/io/package-summary.html"" rel=""nofollow"">http://commons.apache.org/proper/commons-io/javadocs/api-release/index.html?org/apache/commons/io/package-summary.html</a></p>
"
17410767,"<p>This should do it:</p>

<pre><code>^(.+) (-?\$\d*\.\d\d)$
</code></pre>

<p>The second half of the regex matches the dollar amount, including the optional - sign. The first part takes everything else except the separating space.</p>
"
26272885,"<p>I have used enum to store all possible return types.</p>

<pre><code>public enum Type {
INT, STRING
}
</code></pre>

<p>Define subclasses for Request and Response classes.</p>

<p>Each subclass of Request class overrides its execute method and returns its corresponding Response's subclass instance.</p>

<pre><code>public class RequestINT extends Request {
public RequestINT(){
    super(Type.INT);
}
@Override
public Response execute() {
    return new ResponseINT();
}
}


public class ResponseINT extends Response {
@Override
public Type getResponse() {
    return Type.INT;
}
}
</code></pre>

<p>Finally use that in your calling method</p>

<pre><code>public class TestExec {

public static void main(String[] args) {

    Request request1 = new RequestINT();
    Response response1 = request1.execute();
    System.out.println(response1.getResponse());

    Request request2 = new RequestSTRING();
    Response response2 = request2.execute();
    System.out.println(response2.getResponse());

}

}
</code></pre>
"
25872360,"<p>Use can format your code as :</p>

<pre><code>try {
  int i = Integer.parseInt(yourString);
  mc.pushNUmber(i);
} catch (NumberFormatException e){

}
</code></pre>
"
18763798,"<p>The following line</p>

<pre><code>DumObj one = new DumObj();
</code></pre>

<p>creates one object of the <code>DumObj</code> type.</p>

<p>When you pass the <code>one</code> <strike>object</strike> reference as a parameter, it is always <strong>passed by value</strong>. That means the methods that receive the reference to the object (<code>updateId</code>, <code>setToNull</code>) can change its state (<code>setId</code>). The changes are visible outside the scope of the method because in fact the methods modify directly the underlying object.</p>

<p>You can consider the parameter inside the method is just an <em>alias</em> that refers the same object.
So,</p>

<pre><code>two = null;
</code></pre>

<p>only sets the local parameter reference (<em>alias</em>) to null.</p>
"
25873015,"<p>Can this help?</p>

<pre><code> if(Character.isDigit(evt.getKeyChar())){
   // put something here

 }
 else if(!(Character.isDigit(evt.getKeyChar())){
   //.......     
    }
</code></pre>
"
19690113,"<p>EDIT:  I do not advocate using <code>java.util.Vector&lt;E&gt;</code>, but since you are coming from a C background, it might give you a warm fuzzy to use the same name. However, you should note (from <a href=""http://docs.oracle.com/javase/7/docs/api/java/util/Vector.html"" rel=""nofollow"">the Java API</a>)</p>

<blockquote>
  <p>Unlike the new collection implementations, Vector is synchronized. If a thread-safe implementation is not needed, it is recommended to use ArrayList in place of Vector.</p>
</blockquote>

<p>So it's best to use some other implementation of <code>java.util.List&lt;E&gt;</code> -- most common to use <code>java.util.ArrayList&lt;E&gt;</code></p>
"
26286060,"<p>How about like this ?</p>

<pre><code>package com.example.stackoverflow.oop;

public class Executor {

    public static void main(String[] args) throws Exception  {
        String req = ""helloworld"";
        String res = execute(req, String.class);
        System.out.println( ""Res:"" + res );
    }

    public static &lt;T,R&gt; R execute(T req, Class&lt;R&gt; res) throws Exception {
        System.out.println(req.toString());
        Object object = res.newInstance();
        return res.cast(object);
    }

}
-------------------------------------------------------------------------
helloworld
Res:
</code></pre>

<p>I used string as response since integer expects an argument.</p>
"
26287276,"<p>keeping it simple:</p>

<pre><code>interface Request&lt;RETURNVALUE&gt;{Response&lt;RETURNVALUE&gt; execute();}

interface Response&lt;RETURNVALUE&gt;{RETURNVALUE getValue();}

//IMPL
class Client{

String requestTypeA(){
    Request&lt;String&gt; q = new RequestA();
    return q.execute().getValue();
}
}

class RequestA implements Request&lt;String&gt;{

@Override
public Response&lt;String&gt; execute() {
    return new ResponseA();
}

}

class ResponseA implements Response&lt;String&gt;{

@Override
public String getValue() {
    return null;
}
}
</code></pre>
"
19728884,"<p><code>String</code> is a <code>CharSequence</code> so it should work.</p>

<p>did you try it?</p>
"
17527044,"<p>Even, if you create</p>

<pre><code>Integer a = new Integer(1000);
Integer b = new Integer(1000);
</code></pre>

<p>a==b - false</p>

<p>but for </p>

<pre><code>Integer a = new Integer(1);
Integer b = new Integer(1);
</code></pre>

<p>a==b - is true</p>

<p>In java there is a cache of small integers: -127 to 128. All other integers are newly created objects and they can not be equals.</p>
"
18923440,"<p>Try This</p>

<pre><code>private BufferedImage get(String path) throws IOException{    
    URL url = this.getClass().getClassLoader().getResource(path);     
    String thing = url.getFile();       
    return ImageIO.read(new File(thing));      
}
</code></pre>
"
17531427,"<p>You can do this:</p>

<pre><code>tmp.replaceAll(""\\W"", """");
</code></pre>

<p>to remove punctuation</p>
"
25780662,"<pre><code>test = test.replace(""\\'"", "" "");
</code></pre>

<p>or </p>

<pre><code>test = test.replace(""\'"", "" "");
</code></pre>
"
25780671,"<pre><code>test = test.replaceAll(""'"",""\s"");
</code></pre>
"
26641257,"<p>You are mistaking on several points : </p>

<ul>
<li>your construction of the list is too verbose</li>
<li>your test <code>next == null</code> should be <code>next.hasNext()</code> but I renamed it to <code>it</code></li>
<li>you always return 0 whatever happens and never use the result of the recursive call</li>
</ul>

<p>Here is a working solution :</p>

<pre><code>public class ListCount {
    public static LinkedList&lt;String&gt;    ll  = new LinkedList&lt;String&gt;();

    public static void main(String[] args) {
        String s = ""Hi I am a programmer and I am currently working on an assignment that is based on "" +
                ""linkedlists for java"";
        ll = new LinkedList&lt;String&gt;(Arrays.asList(s.split(""\\s+"")));
        System.out.println(countsize(0));
        System.out.println(ll.size());
    }

    public static int countsize(int somevalue) {
        Iterator&lt;String&gt; it = ll.listIterator(somevalue);
        return it.hasNext() ? countsize(somevalue + 1) + 1 : 0;
    }
}
</code></pre>
"
17697776,"<p>Try this one</p>

<pre><code>FileLocationWithExtension = ""nameofFile""+ "".*""
</code></pre>
"
25909976,"<p>Yes <strong>Dynamic Web Module 3.0</strong> requires <strong>Java 1.6 or newer version</strong>
You can check your java version by  using the command:</p>

<pre><code> java -version
</code></pre>
"
22990672,"<pre><code>public static String getDate(long milliSeconds, String dateFormat) {
        // Create a DateFormatter object for displaying date in specified
        // format.
        SimpleDateFormat formatter = new SimpleDateFormat(dateFormat,
                Locale.getDefault());

        // Create a calendar object that will convert the date and time value in
        // milliseconds to date.
        Calendar calendar = Calendar.getInstance();
        calendar.setTimeInMillis(milliSeconds);
        return formatter.format(calendar.getTime());
    }
</code></pre>
"
17681499,"<p>I post my solution. I think that it could be improved but its working. </p>

<pre><code>    int A[] = { 0,1,3,-2,0,1,0,-3,2,3 };
    int P,Q,R;
    int maxdepth = -1;
    int depth = -1;

    for ( int i=0; i &lt; ( A.length -1 ); i++ ) {
        P=i;
        for (Q = P+1; Q &lt; A.length -1; Q++ ) {
            if (A[P] &lt;= A[Q] ) {
                continue;
            }
            for (R=Q+1; R &lt; A.length-1; R++) {
                if (A[R] &lt;= A[Q]) {
                    continue;
                } else {
                    if ( A[Q] &lt; A[P] &amp;&amp; A[R] &gt; A[Q]) {
                        depth = Math.min(A[P] - A[Q], A[R] - A[Q]);
                        System.out.println(""Depth of ("" + P + "","" + Q + "","" + R + "")="" + depth);
                        if ( maxdepth &lt; depth ) maxdepth = depth;
                    }
                }
            }
        }

    }
    System.out.println(""Maxdepth:"" + maxdepth);
</code></pre>
"
26791760,"<p>I developed this code will solve problem:</p>

<pre><code>public static String change(String s,String s1, String s2) {
   int length = s.length();
   int x1 = s1.length();
   int x2 = s2.length();
   int x12 = s.indexOf(s1);
   int x22 = s.indexOf(s2);
   String s3=s.substring(0, x12);
   String s4 =s.substring(x12+3, x22);
   s=s3+s2+s4+s1;
   return s;
}
</code></pre>

<p>In the main use <code>change(story,word2,word1).</code></p>
"
26384703,"<p><code>public static LinkedList&lt;Integer&gt; switchPairs(LinkedList list) {
        ListIterator&lt;Integer&gt; iterator = list.listIterator();
        LinkedList&lt;Integer&gt; out = null;
        while (iterator != null &amp;&amp; iterator.hasNext()) {
            if (out == null) {
                out = new LinkedList&lt;Integer&gt;();
            }
            int temp = iterator.next();
            if (iterator.hasNext()) {
                out.add(iterator.next());
                out.add(temp);
            }else{
                out.add(temp);
            }
        }
        return out;
    }</code></p>
"
17819873,"<p>What you are doing wrong is that you are creating the <code>ArrayList</code> with a capacity of 5, but it does not yet have 5 objects in it. Thus, the <code>addText</code> method does nothing. Here's a version that works:</p>

<pre><code>public void addText(){
    for(int i = 0; i &lt; 4; i++){
        string.add(new Text()); 
    }
}
</code></pre>

<p>Note that <code>string.size() - 1</code> has been changed to <code>4</code>, becuase <code>string.size()</code> is 0, and you want to add 4 elements to the list. Also, your <code>iterate</code> method could use a little refactoring:</p>

<pre><code>public void iterate(){
    for(Text text : string){
        string.get(i).printA();
    }
}
</code></pre>

<p>Instead of a simple loop, an enhanced <code>for</code> is used instead. This is no more than a typing shortcut, but it improves efficiency for <code>LinkedList</code>s.</p>
"
19047206,"<pre><code>public static int powersOf2(int k){
    int x=1;
    for (i=0; i &lt; k; i++){
        x*=2;
    }
    return x;   
}
</code></pre>
"
25968102,"<pre><code>if (android.os.Build.VERSION.SDK_INT &gt; 9) {
                            StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder()
                                    .permitAll().build();

                            StrictMode.setThreadPolicy(policy);
                        }
                        try {
                            URL diachi = new URL(""http://example.com"");
                            HttpURLConnection huc = (HttpURLConnection) diachi.openConnection();
                            huc.setRequestMethod(""HEAD"");
                            int responseCode = huc.getResponseCode();

                            if (responseCode != 404) {
                                //URL Exist

                            } else {
                                //URL not Exist
                            }
                        } catch (MalformedURLException e) {
                            e.printStackTrace();
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
</code></pre>
"
19065007,"<pre><code>  Button bdone = (Button)findViewById(id of button);
  bdone.setOnClickListener(new OnlickListener)
  {
      @Override
      public void onClick(View view)
      {
          //Code here
      }
  }
</code></pre>
"
26424114,"<p>This is the javascript code</p>

<pre><code>         &lt;script&gt;
  function checkEmail()
      {
     var feedback="""";
   var email=document.getElementById(""email"").value;
  var count=email.length;
  var atpos=email.indexOf('@');
   var atdot=email.lastIndexOf('.');
  var tld=email.substring(atdot);
     if(atpos&lt;1 || atdot&lt;1)
   {
   alert(""Email is  Not Valid"");
    }
      else if(atpos&gt;atdot)
     {
   alert(""Email is  Not Valid"");
    }
   else{
   alert(""Email is Valid"");
       }
      }
</code></pre>
"
26502279,"<p>If u are using below properties while sending mail, then comment it. This works for me. But this might cause security problem.</p>

<pre><code>props.put(""mail.smtp.starttls.enable"",""true"");
</code></pre>
"
26882682,"<pre><code>String word1 = ""bar"";
String word2 = ""foo"";

String story = ""Once upon a time, there was a foo and a bar.""

story = story.replace(""foo"", ""&lt;foo /&gt;"");
story = story.replace(""bar"", ""&lt;bar /&gt;"");

story = story.replace(""&lt;foo /&gt;"", word1);
story = story.replace(""&lt;bar /&gt;"", word2);
</code></pre>
"
17817157,"<p>Please try this</p>

<pre><code>public static boolean isPrime(int number) {
    for(int i = 2; i * i &lt;= number; i++) {
        if (i % number == 0) {
            return false;
        } else {
            return true;
        }
    }
    return true;
}
</code></pre>
"
19148367,"<p>From looking at it, </p>

<pre><code>if (choice == 'A')
if (hours &lt;= 10) { 
</code></pre>

<p>The two are not indented, meaning <code>if (hours &lt;= 10) {</code> will run regardless of the outcome of the first statement. So when the user types in <code>B</code>, and then the hours (less than <code>10</code>), the first statement reads <code>false</code>, and the second reads <code>true</code>, therefore running that one.</p>

<p>Try putting <code>{}</code> around all the if statements and try running it again.</p>

<p>I may be incorrect though.</p>
"
17854799,"<p>Something like: </p>

<pre><code>new ArrayList&lt;ABC&gt;(getOfferCriteria().getCommitments().values()).get(0)
</code></pre>
"
19151762,"<p>//we can use column width for sheet</p>

<pre><code>Ex: sheet.setColumnWidth(0, 2000);
</code></pre>
"
20080613,"<p><strong>Edit: this information is for visualvm specifically, not for any other java app</strong></p>

<p>As mentioned by others, you need to modify the visualvm.conf </p>

<p>For the latest version of JvisualVM 1.3.6 on Mac, the install directories have changed.</p>

<p>It is currently in
<strong>/Applications/VisualVM.app/Contents/Resources/visualvm/etc/visualvm.conf</strong>. </p>

<p>However this may depend on where you have installed VisualVM. The easiest way to find where your VisualVM is to start it, and then look at the process using:</p>

<p>ps -ef | grep VisualVM</p>

<p>You will see something like:</p>

<p>... <strong>-Dnetbeans.dirs=/Applications/VisualVM.app/Contents/Resources/visualvm/visualvm</strong>...</p>

<p>You want to take the netbeans.dir property and look up a directory and you will find the etc folder.</p>

<p>Uncomment this line in the visualvm.conf and change the path to the jdk</p>

<pre><code>visualvm_jdkhome=""/path/to/jdk""
</code></pre>

<p>Additionally, if you are having slowness with your visualvm and you have a lot of memory, I would suggest greatly increasing the amount of memory available and running it in server mode:</p>

<pre><code>visualvm_default_options=""-J-XX:MaxPermSize=96m -J-Xmx2048m -J-Xms2048m -J-server -J-XX:+UseCompressedOops -J-XX:+UseConcMarkSweepGC -J-XX:+UseParNewGC -J-XX:NewRatio=2 -J-Dnetbeans.accept_license_class=com.sun.tools.visualvm.modules.startup.AcceptLicense -J-Dsun.jvmstat.perdata.syncWaitMs=10000 -J-Dsun.java2d.noddraw=true -J-Dsun.java2d.d3d=false""
</code></pre>
"
23360848,"<p>use reflection api to get all <code>public static final String</code> fields from MyStrings.class into an array, called strings</p>

<p>then randomly generate an integer n from 0 to numStrings - 1, </p>

<p>random string is strings[n]</p>
"
26266087,"<p>Try using</p>

<pre><code>int[] unDupe = new int[100];
</code></pre>

<p>You can replace the 100 with however many things you need in the array.</p>
"
26934810,"<pre><code>for (int k = 0; k&lt;3, k++){
    for (int i = 0; i&lt; 10; i++) {
        for (int j = 0; j &lt;  3;j++) {

            System.out.println(i);   
        }
        }
        System.out.println("""")};

    }
    }
</code></pre>
"
27169497,"<pre><code>    String [] str = new String[]{""1some"", ""2some"", ""20some"", ""21some"", ""3some"", ""some""};
    List&lt;String&gt; list = Arrays.asList(str);

    Collections.sort(list, String.CASE_INSENSITIVE_ORDER);
    System.out.println(list);
</code></pre>
"
26935139,"<pre><code>for(int k=0;k&lt;3;k++) {  
   for (int i = 0; i&lt; 10; i++) {
       for (int j = 0; j &lt;  3;j++) {
            System.out.println(i);   
        }
    }
}
</code></pre>

<p>Although I am by far most inexperienced guy here, I think this should give exact output you're looking for.</p>
"
18097942,"<pre><code>public static List&lt;Number&gt; union(List&lt;? extends Number&gt; a, List&lt;? extends Number&gt; b) {

    List&lt;Number&gt; es = new ArrayList&lt;Number&gt;();
    for (Number e : a) {
        es.add(e);
    }
    for (Number e : b) {
        es.add(e);
    }
    return es;
}
</code></pre>
"
27275367,"<p>Try this:</p>

<pre><code>inputString = inputString.replaceAll(""\t"", ""    "")
</code></pre>
"
18098042,"<p>Try this:</p>

<pre><code>public static &lt;E&gt; List&lt;? extends E&gt; union(List&lt;? extends E&gt; a, List&lt;? extends E&gt; b) {
    HashSet&lt;E&gt; set = new HashSet&lt;E&gt;();
    set.addAll(a);
    set.addAll(b);
    return new ArrayList&lt;E&gt;(set);
}
</code></pre>

<p>This in a Union it needs to hold the common elements of both list occurring one and the uncommon elements too. <code>HashSet</code> holds the unique elements.</p>

<p>Test:</p>

<pre><code>public static void main(String... a) {
    List&lt;Integer&gt; l1 = new ArrayList&lt;Integer&gt;();
    l1.add(Integer.valueOf(0));

    List&lt;Long&gt; l2 = new ArrayList&lt;Long&gt;();
    l2.add(Long.valueOf(1));

    List&lt;? extends Number&gt; l3 = union(l1,l2);
    System.out.println(l3);
}
</code></pre>
"
26609937,"<p>Please find the solution below,</p>

<p>The value of this variable will never be cached thread-locally: all reads and writes will go straight to ""main memory"". The volatile force the thread to update the original variable for each time. </p>

<pre><code>public class VolatileDemo {

    private static volatile int MY_INT = 0;

    public static void main(String[] args) {

        ChangeMaker changeMaker = new ChangeMaker();
        changeMaker.start();

        ChangeListener changeListener = new ChangeListener();
        changeListener.start();

    }

    static class ChangeMaker extends Thread {

        @Override
        public void run() {
            while (MY_INT &lt; 5){
                System.out.println(""Incrementing MY_INT ""+ ++MY_INT);
                try{
                    Thread.sleep(1000);
                }catch(InterruptedException exception) {
                    exception.printStackTrace();
                }
            }
        }
    }

    static class ChangeListener extends Thread {

        int local_value = MY_INT;

        @Override
        public void run() {
            while ( MY_INT &lt; 5){
                if( local_value!= MY_INT){
                    System.out.println(""Got Change for MY_INT ""+ MY_INT);
                    local_value = MY_INT;
                }
            }
        }
    }

}
</code></pre>

<p>Please refer this link <a href=""http://java.dzone.com/articles/java-volatile-keyword-0"" rel=""nofollow"">http://java.dzone.com/articles/java-volatile-keyword-0</a> to get more clarity in it.</p>
"
23546135,"<p>A good way is to use a static init() and call it when exception occurs.</p>

<pre><code>package com.kvvssut.misc;

public class ResetStatic {

    private static int SCORE = 0;
    private static float SPEED = 2.3f; 

    private static void init() {
        SCORE = 0;
        SPEED = 2.3f;       
    }



    public static void main(String[] args) {

        SCORE = 100;
        SPEED = 230.3f;

        try {
            throw new RuntimeException();
        } catch (Exception e) {
            init();
        }

        System.out.println(SCORE);
        System.out.println(SPEED);
    }

}
</code></pre>
"
27254623,"<p>See this broken double-checked locking</p>

<pre><code>class X {
    private static X x;
    private final int n = 1;

    public static X getX() {
        if (x == null) {
            x = new X();
        }
        return x;
    }
}
</code></pre>

<p><code>final</code> does not guarantee that <code>x</code> points to an initialized instance of <code>X</code>. JVM is allowed to first create and publish an instance of <code>X</code> and then assign 1 to <code>n</code>.</p>
"
17995083,"<pre><code> public static int numberOfOccurence(String yourString, char needle) {
      int nb = 0;
      for (int i=0; i &lt; yourString.length(); i++)
    {
        if (yourString.charAt(i) == needle)
                   nb++;

    }
    return nb;
}
</code></pre>

<p>You can also use Pattern and Matcher :</p>

<pre><code>   Pattern pattern = Pattern.compile(""i"");
   Matcher  matcher = pattern.matcher(""saigigd"");

   int count = 0;
   while (matcher.find())
   count++;
   System.out.println(count); 
</code></pre>
"
20391705,"<p>SimpleDateFormat: <a href=""http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html"" rel=""nofollow"">This will accomplish your goal quite easily.</a></p>

<p>Simply do the following..</p>

<pre><code>SimpleDateFormat fmt = new SimpleDateFormat... (read the java docs)
fmt.format(your string)
</code></pre>

<p>No need to re-invent the wheel and make your program larger... This code already exists in Java.</p>

<p>EDIT: Since OP can't read..
S   Millisecond Number  978</p>
"
19438470,"<pre><code>//Here's the full code that will DEFINITELY work: (can copy &amp; paste)

import java.awt.*;

public class beeper
{
    public static void main(String args[])
    {
        Toolkit.getDefaultToolkit().beep();
    }
}
</code></pre>
"
18001256,"<p>Corrected code:</p>

<pre><code> public void addString(String... myString) {
       StringBuilder sb = new StringBuilder();

       for(int i = 0; i &lt; myString.length; i++) {
          if(i = 0){
             sb.append(""("" + myString[i])
          }else if (i = myString.length-1){
             sb.append(myString[i] + "")"");
          }else{
             sb.append(myString[i])
          }
          sb.append(""("" + myString[i] + "" AND "" + myString[i+1] + "")"");
       }

       System.out.println(sb);
    }
</code></pre>

<p><strong>EDIT</strong>: Here is a better version based off of one of the answers above:</p>

<pre><code>public void addString(String[] myString) 
    {
       StringBuilder sb = new StringBuilder();
       sb.append(""("");
       for(int i = 0; i &lt; myString.length; i++){
          sb.append(myString[i] + "" AND "");
       }
       sb.append("")"")

       System.out.println(sb);
    }
</code></pre>
"
18001272,"<p>Try this:</p>

<pre><code>public void addString(string[] myString) {
  StringBuilder sb = new StringBuilder();

   sb.Append(""("");
   for(int i = 0; i &lt; myString.length; i++) {
      sb.Append(myString[i] + "" AND "");
   }

   string result = sb.ToString().Substring(0, sb.ToString().LastIndexOf(""AND""));
   result += "")"";

   System.out.println(result);
}
</code></pre>
"
27331480,"<pre><code>import java.util.Scanner;

public class Fibonacci2 {

    public static void main(String[]args){

        int a;
        try (Scanner sc = new Scanner(System.in)) {
            System.out.print(""Number of Fibonacci numbers to print: "");
            a = sc.nextInt();
            sc.close();
        }
        int c=1; /*c current number b last number*/
        int b=0;
        System.out.println(b);
        System.out.println(c);
        int bb;
        for (int z = 2; z &lt; a ; z++){
        bb = b; 
        b = c;
        c = bb + b; /*bb last last number*/
        System.out.println(z);

    }
    }
}
</code></pre>
"
27319479,"<p>I wonder if you are not trying to reinvent the wheel. <strong>Some database management systems offer services/features that are designed for this kind of tasks.</strong></p>

<p>E.g. <a href=""https://docs.oracle.com/cd/B10501_01/text.920/a96517/cdefault.htm"" rel=""nofollow"">Oracle Text</a> </p>

<p><strong>EDIT:</strong></p>

<p><strong>Hold on!</strong> You are going to compare the titles of songs and you are <em>NOT</em> using a database? That's interesting. Why didn't you add it in your original question. Because over 90% of industrial applications use some kind of database. And it really does not matter which branch you are in: manufacturing, medical, distribution, entertainment, financial, ...</p>

<p>And even if you don't use a database yet, you should consider using one. These days there are all kind of dbms. They come in all flavors: relational, object oriented ; binary or xml ; embedded or stand-alone ; multifile or singlefile. To be honest, if you don't use a database it's hard to take you serious.</p>

<p>But <strong>if</strong> you are using an Oracle database to store your songs. Then <code>Oracle Text</code> is the best answer to solve your problem.</p>

<p>And if you use a database, then it makes perfect sense to let the dbms perform the calculations for you. This will almost always be faster than extracting the data first.</p>

<p><strong>Why Oracle Text (for example) is superior to self-implemented algorithms:</strong> Oracle has a notion of ""themes"", for example it knows that the word ""politics"" is related to ""elections"". To do this it uses a knowledge base. <strong>(Just read the documentation, and you will be surprised)</strong>. You would spend years to develop it from scratch.</p>
"
19498622,"<p>The <code>number_of_lines</code> is the number of lines inside the expected output (which is 6 in this case).  The <code>number_of_characters</code> is the number of characters each line should have (which is 22 in this case).</p>

<p>We know that there is a pattern.  The left side has <code>\</code>, the middle has <code>!</code>, and the right side has <code>/</code>.  This means we need <strong>one outer loop</strong> to loop through the lines and <strong>three inner loops</strong> for each of these sections.</p>

<p>How do we get know how many of each characters we need?  </p>

<p>The first line has    0 <code>\</code>, 22 <code>!</code>, and 0 <code>/</code> </p>

<p>The second line has   2 <code>\</code>, 18 <code>!</code>, and 2 <code>/</code></p>

<p>The third line has    4 <code>\</code>, 14 <code>!</code>, and 4 <code>/</code></p>

<p>The fourth line has   6 <code>\</code>, 10 <code>!</code>, and 6 <code>/</code></p>

<p>The fifth line has    6 <code>\</code>, 10 <code>!</code>, and 6 <code>/</code></p>

<p>The sixth line has    8 <code>\</code>, 6 <code>!</code>, and 8 <code>/</code></p>

<p>The seventh line has 10 <code>\</code>, 2 <code>!</code>, and 10 <code>/</code></p>

<p>There is a pattern.  Each line has the <code>\</code> and <code>/</code> count increment by 2 and the <code>!</code> count decrement by 4.  </p>

<p>Number of <code>\</code> equals two times the current line number (assuming the first line number is 0).  Same goes with <code>/</code>.  The number of <code>!</code> is the total number of characters expected per line minus four times the current line number (assuming the first line number is 0).</p>

<pre><code>public void printCoolStuff(int number_of_lines, int number_of_characters){

    for(int i = 0; i &lt; number_of_lines; i ++){

        String left= """";
        for(int j = 0; j &lt; (2*i); j++){
            left= left+ ""\""
        }

        String middle = """";
        for(int j = 0; j &lt; (number_of_characters - 4*i); j++){
            middle = middle + ""!""
        }

        String right= """";
        for(int j = 0; j &lt; (2*i); j++){
            right = right + ""/""
        }

        System.out.println(left+middle+right);
    }
}
</code></pre>
"
26674114,"<p>The easiest solution would be a 2-dimensional array.</p>

<p>The user numbers and the item numbers would have to be consecutive starting with zero.</p>

<pre><code>int numberOfUsers = getUserCount();
int numberOfItems = getItemCount();
Rating[] ratings = new Rating[numberOfUsers * numberOfItems];

public Rating getRating(userNum, itemNum) {
   return ratings[userNum + itemNum * numberOfUsers];
}
</code></pre>

<p>Edit concerning the comments:</p>

<p>If the matrix is spares, you could treat space for time by using a Map instead of an array:</p>

<pre><code>int numberOfUsers = getUserCount() + 1000; // to provide for additional users 
int numberOfItems = getItemCount() + 1000;
HashMap&lt;Integer,Rating&gt; ratings = new HashMap&lt;Integer,Rating&gt;();

public Rating getRating(int userNum, int itemNum) {
   return ratings.get(userNum + itemNum * numberOfUsers);
}
</code></pre>
"
18213353,"<p>In Java, objects are passed by reference, primitives are passed by value.</p>

<pre><code>public class Laser {
    public static void main(String[] args) {
        //Create a Box of size 5.
        Box b1 = new Box(5);
        //Create an array of Box objects, which are the results of the go method
        Box[] ba = go(b1, new Box(6));
        // ba now looks like {new Box(6), b1 /*b1 is size 4 now*/}
        // assign reference to b1 at index 0 in ba.
        ba[0] = b1;
        // array now looks like {b1, b1}
        for(Box b : ba)
            System.out.println(b.size + "" "");
    }

    static Box[] go (Box b1, Box b2) {
        //set the size of the first box to 4
        b1.size = 4;
        //create an array of boxes, with b2 in index 0 and b1 in index 1
        Box[] ma = {b2, b1};
        return ma;
    }
}
</code></pre>
"
19581486,"<ol>
<li><code>import</code> is done at runtime and <code>include</code> is done at the compile time.</li>
<li><code>import</code> act like <code>linker</code> which provides the path of required class file to the <code>jvm</code> and loads that class file to the RAM .</li>
</ol>

<p>Where include loads all the files to the RAM then starts the execution of the program.so include increases the overhead of the processor.
3. basically  c uses include beacause it is based on the concept of  static loading and java uses import because it is based on the concept of  dynamic loading.
You can refer <a href=""http://stackoverflow.com/questions/439662/what-is-the-difference-between-import-and-include-in-objective-c"">here</a></p>
"
27631585,"<p>I just create a project with your code. please rectify below errors. </p>

<pre><code>1) Import the java.util.List package.

2)  another error I find is this.. How don't know your requirement Cannot suggest the solution.

public MyAbstractClass(List&lt;? extends Animal&gt; animalList) {
        this.myAnimalList = animalList; &lt;==== problem you cannot assign List&lt;? extends Animal&gt; to List&lt;Animal&gt; .. Subtyping is not allowed in generic class.
    }
</code></pre>

<p><strong>One of the Solution :</strong></p>

<pre><code>public MyAbstractClass(List&lt;? extends Animal&gt; animalList) {

   myAnimalList= new ArrayList&lt;Animal&gt;();   

   for(Animal c: animalList){
        this.myAnimalList.add(c);
   }
}
</code></pre>
"
27585495,"<p><code>Streams</code> don't necessarily have an order, meaning that the last element might not even be defined; the order is given by their source. For example if the stream is created from a <code>HashMap</code>, then there's no order. Moreover, even if a <code>Stream</code> is ordered, it doesn't assure that all the operations acted upon it will be applied on the Stream's element in that order.</p>

<p>Actually, parallel streams perform better if they are not ordered and <code>Stream</code> provides <a href=""http://docs.oracle.com/javase/8/docs/api/java/util/stream/BaseStream.html#unordered--"" rel=""nofollow"">a method</a> returning the same stream but unordered.</p>

<p><a href=""http://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#Ordering"" rel=""nofollow"">http://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#Ordering</a></p>

<p>Since <code>Stream</code> does not provide a method <code>isOrdered()</code> the only way last element makes sense is to <code>collect</code> the stream into an ordered <code>Collection</code>:</p>

<pre><code>List&lt;T&gt; list = stream.collect(Collections.toList());
int size = list.size();
T last = list.get(size - 1);
</code></pre>

<p>This is also the most efficient in terms of CPU consumption, because it's O(1) instead of O(N). On the other hand it takes more memory. I obtained the following results:</p>

<pre><code>Collect: 81
ForEachOrdered: 434
Reduce: 455


public static void main(String[] args) {
    //let streams get hot
    Stream.of(""1"", ""2"", ""3"").collect(Collectors.toList());
    final Object[] holder = new Object[1];
    Stream.of(""1"", ""2"", ""3"").forEachOrdered(e -&gt; holder[0] = e);
    Stream.of(""1"", ""2"", ""3"").reduce((a, b) -&gt; b);
    //start testing
    t1();
    t2();
    t3();
}

private static void t1() {
    long start = System.nanoTime();
    List&lt;String&gt; list = Stream.of(""1"", ""2"", ""3"").collect(Collectors.toList());
    int lastIndex = list.size() - 1;
    String last = list.get(lastIndex);
    long end = System.nanoTime();
    System.out.println(""Collect: "" + TimeUnit.NANOSECONDS.toMicros(end - start));
}

private static void t2() {
    long start = System.nanoTime();
    final Object[] holder = new Object[1];
    Stream.of(""1"", ""2"", ""3"").forEachOrdered(e -&gt; holder[0] = e);
    String last = (String) holder[0];
    long end = System.nanoTime();
    System.out.println(""ForEachOrdered: "" + TimeUnit.NANOSECONDS.toMicros(end - start));
}

private static void t3() {
    long start = System.nanoTime();
    Optional&lt;String&gt; lastOpt = Stream.of(""1"", ""2"", ""3"").reduce((a, b) -&gt; b);
    String last = lastOpt.get();
    long end = System.nanoTime();
    System.out.println(""Reduce: "" + TimeUnit.NANOSECONDS.toMicros(end - start));
}
</code></pre>

<p>Edit: If you look at how <code>Collectors.toList()</code> is implemented you see it instantiates <code>CollectorImpl</code> which besides other parameters it takes a <code>BinaryOperator</code> that takes 2 <code>Lists</code> and combines them adding all the elements from one to another <code>(left, right) -&gt; { left.addAll(right); return left; }</code>. In order to improve memory consumption and not allocate the whole <code>ArrayList</code> one might provide a different <code>BinaryOperator</code> meaning the collected stream would return a list with just one element, the last one.</p>

<pre><code>(left, right) -&gt; { 
    if (right.size() == 1) {
        left.addAll(right); 
    }
    return left; 
}
</code></pre>

<p>There are two problems with this though: <code>CollectorImpl</code> is not <code>public</code> and I have not tested to see if it's functionally correct.</p>
"
20657573,"<p>You can use Java reflection to access the array of <code>SomeClass</code> from a different class.</p>

<p>Here is small code for demonstrating it:</p>

<pre><code>public class POC {
    public static void main(String args[]) {
        new POC().run();
    }

    private void run() {
        SomeClass sc = new SomeClass();
        say(""BEFORE: "");
        sc.showArray();

        DifferentClass dc = new DifferentClass();
        dc.manipulateArray(sc);

        say(""---"");
        say(""AFTER: "");
        sc.showArray();
    }

    private class SomeClass {
        private int array[];

        public SomeClass() {
            array = new int[3];

            array[0] = 1;
            array[1] = 1;
            array[2] = 1;
        }

        public void showArray() {
            for (int i = 0; i &lt; array.length; i++) {
                say(i + ""&gt;"" + array[i]);
            }
        }
    }

    private class DifferentClass {
        public void manipulateArray(SomeClass sc) {
            try {
                Field arrayField = sc.getClass().getDeclaredField(""array"");
                arrayField.setAccessible(true);

                Object array = arrayField.get(sc);
                for (int i = 0; i &lt; Array.getLength(array); i++) {// equivalent to for(int i=0;i&lt;3;i++){
                    Array.set(array, i, 0); // equivalent to array[i]=0;
                }

                arrayField.setAccessible(false);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    private static void say(String msg) {
        System.out.println(msg);
    }
}
</code></pre>

<p><strong>OUTPUT</strong></p>

<pre><code>BEFORE: 
0&gt;1
1&gt;1
2&gt;1
---
AFTER: 
0&gt;0
1&gt;0
2&gt;0
</code></pre>
"
24147401,"<p>If there are multiple space between two words use this:</p>

<blockquote>
  <p><code>text.split(""\\s+"");</code></p>
</blockquote>

<p>if input is </p>

<blockquote>
  <p><code>5  10 15</code></p>
</blockquote>

<p>then the output will be </p>

<blockquote>
  <p><code>""5"",""10"",""15""</code></p>
</blockquote>
"
27865109,"<pre><code>public void frankTest() {
    int pageId= -1;

    List&lt;Book&gt; users= null;
    try {
        //Does Not Compile:  Object page=DatabaseConnection.getSpringConnection().queryForObject(""SELECT * FROM bookmark_page"", (rw, n) -&gt; new Portal(rw.getInt(""id""), """", users.parallelStream().filter(uu -&gt; uu.getVbid() == rw.getString(""user_id"")).findFirst().get(), rw.getString(""name"")));

        //Compiles:
        Object page= DatabaseConnection.getSpringConnection().queryForObject(""SELECT * FROM bookmark_page"", (rw, n) -&gt; { 
            try {
                final Book bk= users.stream().filter(bp -&gt; { 
                    String name= null;
                    try {
                        name = rw.getString(""name"");
                    } catch (Exception e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                    }
                    return bp.getTitle().equals(name); 
                }).limit(1).collect(Collectors.toList()).get(0);
            } catch (Exception e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
            return new Portal(rw.getInt(""id""), """", users.get(0), rw.getString(""name"")); 
        } );
    } catch (Exception e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
}
</code></pre>
"
18260131,"<p>It is much easier to do it in SQL:</p>

<pre><code>select ... where ... LIKE username%
</code></pre>
"
19732296,"<p>Your loop (do {} while(condition)) will loop infinite when you enter some string different ""q"" because condition always is true.
try with :</p>

<pre><code>while (!choice.equals(""q"")) {
    switch (choice) {
        case ""a"":
        myGeek.getName();
        break;
  case ""b"":
        myGeek.getnumberofQuestions();
        break;
   case ""c"":

        System.out.println(""Enter the first number"");
        int input1 = scan.nextInt();
        System.out.println(""Enter the second number"");
        int input2 = scan.nextInt();
        System.out.println(""Enter the third number"");
        int input3 = scan.nextInt();
        myGeek.allTheSame(input1, input2, input3);
        break;
    case ""d"":
        System.out.println(""Enter the first number"");
        int num1 = scan.nextInt();
        System.out.println(""Enter the second number"");
        int num2 = scan.nextInt();
        myGeek.sum(num1, num2);
        break;
    case ""e"":
        System.out.println(""Enter a string: "");
        String word1 = scan.nextLine();
        System.out.println(""Enter an integer: "");
        int numberOfTimes = scan.nextInt();
        System.out.println(""Enter the third number"");
        myGeek.repeat(word1, numberOfTimes);
        break;
    case ""f"":
        System.out.println(""Enter a string: "");
        String word2 = scan.nextLine();
        myGeek.isPalindrome(word2);
        break;
    case ""?"":
        System.out.println(""Command Options: "");
        System.out.println(""a: Geek's Name"");
        System.out.println(""b: Num Questions Asked"");
        System.out.println(""c: All Numbers Are the Same"");
        System.out.println(""d: Sum Between Two Integers"");
        System.out.println(""e: Repeat the String"");
        System.out.println(""f: It is Palindrome"");
        System.out.println(""?: Display"");
        System.out.println(""q: Quit"");
        break;
    }
}
</code></pre>
"
20739974,"<p>Use the <a href=""http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Joiner.html"" rel=""nofollow"">Joiner</a> API, which gives a much more elegant way of joining lists with separators:</p>

<pre><code>Joiner.on("","").join(Rolelist1)
</code></pre>
"
27925155,"<p>the variable:
Android.Support.V7.Widget.ShareActionProvider shareActionProvider;</p>

<pre><code>this.MenuInflater.Inflate(Resource.Menu.share_action_provider, menu);
var shareItem = menu.FindItem(Resource.Id.menu_item_share_action_provider_action_bar);
MenuItemCompat.SetShowAsAction (shareItem,  MenuItemCompat.ShowAsActionIfRoom);
var actionprov = new Android.Support.V7.Widget.ShareActionProvider (this);
MenuItemCompat.SetActionProvider (shareItem, actionprov);
var test =  MenuItemCompat.GetActionProvider (shareItem);
shareActionProvider = test.JavaCast&lt;Android.Support.V7.Widget.ShareActionProvider&gt;();
var intent = new Intent(Intent.ActionSend);
intent.SetType(""text/plain"");
intent.PutExtra(Intent.ExtraText, ""ActionBarCompat is Awesome! Support Lib v7 #Xamarin"");
shareActionProvider.SetShareIntent (intent);
return base.OnCreateOptionsMenu(menu); 
</code></pre>

<p>this did the trick with me... i just created my own shareactionprovider ! and i set it myself, then get it... and maybe theres some code even thats not needed.. but its a lot of casting AND MAKE SURE you use the right ones all the time, if you just type ""ShareActionProvider"" you are in fact using V4..! instead of V7</p>
"
28223852,"<p>One point you should note is that in a WHERE clause, adding an ""OR"" usually adds a lot of overhead to a query. An ""AND"" is usually much faster and requires less computing by the compiler. So I would try something that would not use that as best as possible.</p>

<p>Here is my idea of how to best optimize this:</p>

<p>1) put indexes on all 3 columns (col1, col2, col3).
2) Determining which columns to be used should, ideally, be computed in Java and based on this the query would be fired. Here is my idea (in PHP, but can be extended to Java... Sorry, not familiar enough!):</p>

<pre><code>&lt;?php

if (isset($_GET['options'])) {
$options = explode("","",$_GET['options']); // assuming you feed the columns separated with columns
}

if (isset($_GET['col1Value'])) {
$col1Value = $_GET['col1Value']; 
}

if (isset($_GET['col2Value'])) {
$col2Value = $_GET['col2Value']; 
}

if (isset($_GET['col3Value'])) {
$col3Value = $_GET['col3Value']; 
}

if (in_array(""col1"",$options)) { // check to see if 'col1' exists in array
$clause = ' and coalesce(col1,'') = $col1Value';
}

if (in_array(""col2"",$options)) { // check to see if 'col2' exists in array
$clause = $clause.' and coalesce(col2,'') = $col2Value';
}

if (in_array(""col3"",$options)) { // check to see if 'col3' exists in array
$clause = $clause.' and coalesce(col3,'') = $col3Value';
}


$sql = ""

select *
from table
where 1=1
     $clause
"";

pg_execute($databaseConnection,$sql);

?&gt;
</code></pre>

<p>This is probably not the best example as it is in PHP, but hopefully that gives you some ideas....</p>

<p>Cheers!</p>
"
28229379,"<pre><code> String elementType = StringUtility.substringBetween(elementValue.getElementType(), ""{"", ""}"");
                                      Map&lt;String, String&gt;  eleTypeMap = new HashMap&lt;String, String&gt;();
                                      StringTokenizer token = new StringTokenizer(elementType, "","");
                                      while(token.hasMoreElements()){
                                          String str = token.nextToken();
                                          StringTokenizer furtherToken = new StringTokenizer(str,""="");
                                          while(furtherToken.hasMoreTokens()){
                                              eleTypeMap.put(furtherToken.nextToken(), furtherToken.nextToken());
                                          }
                                      }
</code></pre>
"
20905414,"<p>I would use a <code>StringBuffer</code>. You can initialize it with a <code>String</code> and convert it back to a <code>String</code></p>
"
18440558,"<p>You would need to use iterator explicitly for that to work. Example:</p>

<pre><code> Iterator&lt;String&gt; iter = li.iterator();
   while(iter.hasNext()){
    if(iter.next().equalsIgnoreCase(""some value""))
      iter.remove();
    }
   }
</code></pre>

<p>More info here: <a href=""http://www.coderanch.com/t/233932/threads/java/deal-Concurrent-Modification-Exception"" rel=""nofollow"">http://www.coderanch.com/t/233932/threads/java/deal-Concurrent-Modification-Exception</a> but just google the exception and you will find lots of examples.</p>
"
28277321,"<p>ok Tell me for which scenrio it do not work,</p>

<pre><code>declare @col1 varchar(50) 
declare @col2 varchar(50) 
declare @col13 varchar(50) 
if(@col1='')
set @col1=null
if(@col2='')
set @col2=null
if(@col13='')
set @col13=null
select * from myTable
 where 
((col1=@col1) or (@col1 is null) )
and ((col2=@col2) or (@col2 is null) ) 
and ((@col13=@col3) or (@col13 is null) 
</code></pre>
"
28057410,"<p><code>read()</code> dives quickly into native code so yes probably need to go native to block at that level. Alternatively you may want to consider logging a stack trace at 
the point in your code before or after <code>read()</code>. </p>

<p>Something like:</p>

<pre><code>log ( ExceptionUtils.getStackTrace(new Exception()) );
</code></pre>

<p>ExceptionUtils doco is here: <a href=""https://commons.apache.org/proper/commons-lang/javadocs/api-3.1/org/apache/commons/lang3/exception/ExceptionUtils.html"" rel=""nofollow"">https://commons.apache.org/proper/commons-lang/javadocs/api-3.1/org/apache/commons/lang3/exception/ExceptionUtils.html</a></p>
"
19872018,"<p>Or---you can also use FileReader.
(In case you don't know)---</p>

<pre><code>BufferedReader ob=new BufferedReader(new FileReader(""word.txt""));
</code></pre>
"
28246383,"<p>You may use double brace initialization like so:</p>

<pre><code>Map&lt;String,Object&gt; map = new HashMap&lt;String,Object&gt;() {
 {
    put(""circle"", new Circle());
 }
};
</code></pre>
"
24735181,"<p><code>Integer</code> is an object.  <code>int</code> is not an object, it is a primitive.  The object <code>Integer</code> wraps the primitive <code>int</code>.  The <code>put(Object, Object)</code> method requires two objects, not a primitive and an object.</p>
"
18720222,"<pre><code>import java.util.*;

public class Calculator {

    public static void main(String[] args) 
    {
        String s = """";

        // create a new scanner with the specified String Object
        Scanner scanner = new Scanner(s);

        // call the method
        while (scanner.hasNext()) 
        {
            // check if the scanner's next token is an int
            System.out.println("""" + scanner.hasNextInt());

            // print what is scanned
            System.out.println("""" + scanner.next());
        }

        // close the scanner
        scanner.close();
    }
}
</code></pre>
"
27779253,"<h2>You need to Scan the Value from system therefore use Import scanner</h2>

<p>**</p>

<h2>USE this code</h2>

<p>** </p>

<pre><code>Scanner s = new Scanner(System.in);
        int i;
        String a = """";
        int count;

        for (count = 0; count&lt;6; count++)
                {
            System.out.println(""Enter integer: "");

            if(s.hasNextInt()) 
                        {  
                        System.out.println(a + ""is correct integer""); 
                        }
                        else
                        {
                        System.out.println(""invalid input"");
                        }
                } 
</code></pre>
"
19980454,"<p>You'd like a method that would print every single index of the String array, i.e.</p>

<pre><code>public static void printStringArray(String[] myArray){
    for(int i = 0; i &lt; myArray.length; i++){
        System.out.println(myArray[i]);
    }
}
</code></pre>
"
28246534,"<pre><code>import java.util.HashMap;

abstract class GeometricObject
{   
     HashMap&lt;String, Object&gt; shapes;
     {shapes = new HashMap&lt;String,Object&gt;(){{
         put(""Circle"", new Circle());
         put(""Square"", new Square());
     }};}
}
</code></pre>
"
21125904,"<pre><code>import static java.lang.System.out;
</code></pre>

<p>Will allow you to simply refer to that code, although is generally considered a bad practice and is only for one-off programs.</p>

<p>Simply saving a reference to System.out will save you that part</p>

<pre><code>PrintStream out = System.out;
out.println( ""hello"" );
</code></pre>

<p>Alternatively write yourself a nice shorthand method</p>

<pre><code>public static void print(String s){
     System.out.println(s);
     }
</code></pre>

<p>You'll have to write overloads for int, double, etc. or alternatively you can use string concatenation</p>

<pre><code>int x = 10;
print(x + """");
</code></pre>

<p>Or did you mean just for your big block of code there? In that case...</p>

<pre><code>public void printBlock(String email, String first_name, int numTests, int cost, int total){
                System.out.println(""** COPY/PASTE THIS DRAFT **"");
                System.out.println(""To: "" + email);
                System.out.println(""Subject: 2014 AP Test Receipt for "" + first_name);
                System.out.println();
                System.out.println(""Hi "" + first_name + "",\n"");
                System.out.println(""Thank you for registering for the 2014 AP Exams!"");
                System.out.println(""According to our records, you ordered "" + numTests + "" tests.\n"");
                System.out.println(""Because you stated that you qualified for a fee waiver, "" +
                        ""each test will cost you $"" + cost + ""."");
                System.out.println(""Your total cost is $"" + cost + "" * "" + numTests +
                       "" = $"" + total + "".\n""); 
                System.out.println(""Please submit your payment to the College Counseling Office ASAP.\nThank you.\n"");
    }
</code></pre>

<p>Now just call</p>

<pre><code>if(thing){
printBlock(""email"",""firstname"",1,10,10);
}
else{
printBlock(""email"",""othername"",2,20,40);
}
</code></pre>

<p>Or whatever.</p>
"
28677723,"<p>Put all the code in try block then catch exception in a catch block</p>

<pre><code>try
{
    // code
}
catch(ClassNotFoundException e1)
{
    e1.getmessage();
}
</code></pre>
"
28386078,"<p>package com.practice.ThreadPackage;</p>

<p>class ThreadParent extends Thread {</p>

<pre><code>StringBuffer data;

public void run() {
    synchronized (this.data) {

        System.out.println(this.getName());

        for (int i = 0; i &lt; 10; i++) {

            System.out.print(this.data.toString());
        }

        System.out.println();
        this.data.setCharAt(0, ((char) (this.data.charAt(0) + 1)));
    }
}

ThreadParent(StringBuffer obj) {
    this.data = obj;
}
</code></pre>

<p>}</p>

<p>public class ThreadClass {
    public static void main(String args[]) {</p>

<pre><code>    StringBuffer str = new StringBuffer(""A"");
    ThreadParent obj = new ThreadParent(str);
    ThreadParent obj1 = new ThreadParent(str);
    ThreadParent obj2 = new ThreadParent(str);
    obj.setName(""Thread1"");
    obj1.setName(""Thread2"");
    obj2.setName(""Thread3"");
    obj.start();
    obj1.start();
    obj2.start();

}
</code></pre>

<p>}</p>
"
21185737,"<p>It is commonly used for constants, e.g.</p>

<pre><code>private static final String PARAM_ID = ""id"";
</code></pre>
"
28395760,"<p>Java is not a loosely typed language, you have to tell the compiler what each variable is going to be. And to store this kind of structured data in Java, you should first declare a class and instantiate objects of that class. Following is how you would achieve the same thing as your PHP code:</p>

<pre><code>class Car {
    private String name, color;
    private int doors;

    Car(String name, int doors, String color) {
        this.name = name;
        this.doors = doors;
        this.color = color;
    }

    public String getName() {
        return this.name;
    }
}

public class CarMainClass {
    public static void main(String[] args) {
        Car[] aCars = new Car[2];

        aCars[0] = new Car(""vauxhall"", 5, ""black"");
        aCars[1] = new Car(""peogeot"", 3, ""red"");

        System.out.println(""First car name is: "" + aCars[0].getName());
    }
}
</code></pre>

<p>Compile using:</p>

<pre><code>javac CarMainClass.java
</code></pre>

<p>Then run:</p>

<pre><code>java CarMainClass
</code></pre>

<p>You will have to learn the basics of Java first to understand the above code.</p>
"
28045299,"<p>Cast it as a ArrayList </p>

<pre><code>    List&lt;FootballClubNL&gt; clubs = (ArrayList&lt;FootballClubNL&gt; )in.readObject();
</code></pre>
"
28082833,"<pre><code>&lt;application
        android:icon=""@drawable/ic_launcher""
        android:label=""@string/app_name""
        android:theme=""@style/AppTheme"" &gt;
        &lt;activity
            android:name="".first""
            android:label=""@string/title_activity_main"" &gt;
            &lt;intent-filter&gt;
                &lt;action android:name=""android.intent.action.MAIN"" /&gt;

                &lt;category android:name=""android.intent.category.LAUNCHER"" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
        &lt;activity
            android:name="".second""
            android:label=""@string/title_activity_main"" &gt;

        &lt;/activity&gt;
    &lt;/application&gt;
</code></pre>
"
28395815,"<p>It seems what you are trying to achive is an 'array of cars'. So instead of creating an array of arrays, I recommend to literally implement an 'array of cars'.</p>

<p>To do this, I would define the car first, possibly in a different file:</p>

<pre><code>class Car {
  //you can make these private and use 'get' and 'set' methods instead
  public String name;
  public String color;
  public int doors;

  public Car() {
    name = """";
    color = """";
    doors = 0;
  }

  public Car(String name, String color, int doors) {
    this.name = name;
    this.color = color;
    this.doors = doors;
  }
}
</code></pre>

<p>You can use the car structure in an another module like this:</p>

<pre><code>Car[] cars = new Car[100]; //create one hundred cars
cars[11].doors = 4; //make the 12th car's number of doors to 4 
</code></pre>

<p>You can use more flexible data structures, like Vectors, List, Maps, etc... Search for Java collections, you will find tones of info.</p>
"
28395856,"<p>Instead of creating 2D Array you can create 1 class <strong>Car</strong></p>

<pre><code>   public class Car{
    private String carName;
    private String color;
    private int noOfDoors;

    public car(String carName,int door,String color){
    this.carName=carName;
    this.door=door;
    this.color=color;
    }
    public String getCarName(){
    return getCarName;
    }

    public void setCarName(String carName){
    this.carName=carName;
    }
  // Same getters(getXXX) and setters(setXXX) for other Variables
 }
</code></pre>

<p>Now create Objects of above class</p>

<pre><code> Car audi=new Car(""audi"",2,""Black"");
 Car bmw=new Car(""bmw"",4,""White"");
</code></pre>

<p>Now add these to the <code>List&lt;Cars&gt;</code></p>

<pre><code>List&lt;Car&gt; listOfCars=new ArrayList&lt;Car&gt;();
listOfCars.add(audi);
listOfCars.add(bmw);
</code></pre>

<p><strong>Now to Print First Car Name</strong></p>

<pre><code>Car firstCar=listOfCars.get(0);
System.out.println(firstCar.getCarName()); //here getter Method Helped you
</code></pre>
"
28182714,"<pre><code>public static int getIndex(int[] arr)
{
    long sum = 0;
    for (int i = 0; i &lt; arr.length; i++) {
        sum += arr[i];
    }

    int leftSum = 0;

    for (int i = 0; i &lt; arr.length; i++) {
        if (leftSum == sum - (arr[i] + leftSum)) {
            return i;
        }
        leftSum += arr[i];

    }
    return -1;
}
</code></pre>
"
28395858,"<p>I would suggest to get familiar with HashMaps, Maps and ArrayLists. In Java and many other languages is something analogous to a video game cheat.</p>

<pre><code>private static Map&lt;Integer, HashMap&lt;String, String&gt; &gt; carMap = new HashMap&lt;Integer, HashMap&lt;String, String&gt; &gt;();
</code></pre>

<p>But in this case you have to understand how would OO principles help you. You can create a class with Car objects and populate a HashMap etc. </p>

<pre><code>   class Car {
     private String name, colour;....
     public Car(){....}
     public void setValues(...){....}
}
</code></pre>

<p>To achieve better what you want to I would suggest reading this and getting familiar with some design patterns. It's a bit further down the road, but do it for the lulz and seeing what it's out there. Example : <a href=""http://howtodoinjava.com/2012/10/23/implementing-factory-design-pattern-in-java/"" rel=""nofollow"">http://howtodoinjava.com/2012/10/23/implementing-factory-design-pattern-in-java/</a></p>

<p>When moving from scripting to strongly typed languages sometimes you have to change your way of thinking too.</p>
"
28447191,"<p>This is known to happen even if there are some syntactical errors in your heap space setting in the <code>sqldeveloper.conf</code>.
If you have defined the heap space in any of the wrong ways mentioned <a href=""http://javahowto.blogspot.in/2006/06/6-common-errors-in-setting-java-heap.html"" rel=""nofollow"">here</a>,
it still will show the same error when you launch it.</p>

<p><strong>EDIT :</strong>
The correct way to set your heap size parameters would be something like this:</p>

<pre><code>AddVMOption -XX:MaxPermSize=256M
AddVMOption -Xms256M
AddVMOption -Xmx768M
</code></pre>
"
20163841,"<p>No.</p>

<p>As mentioned by Peter Lawrey in the comment for the question, Java is all about object oriented programming. While certain functional aspects are doable and being put into eg. Java 8, at its core Java is not functional. <code>static</code> breaks so much of the benefits of learning how to do modern Java - not to mention all kinds of not-fun-at-all scoping problems - that there's no purpose to use them <strong><em>unless</em></strong> you're some kind of a Java wizard who really knows what happens when you use that magical keyword.</p>

<p>You are not a wizard. Java is not functional. If you want to be a wizard, you can learn. If you want to program in functional fashion, look into hybrid languages such as Scala or Groovy or alternatively explore the fully functional world, eg. Clojure.</p>
"
28759032,"<p>Use this</p>

<pre><code>                JSONObject weatherArray = new JSONObject(result);
                JSONArray wArray = new JSONArray(""weather"");

                String mainWeather = ((JSONObject)wArray.getJSONObject(0)).getString(""main"");
                String mainDescription = ((JSONObject)wArray.getJSONObject(0)).getString(""description"");

                Toast.makeText(getBaseContext(), mainWeather + "" - ""
                            + mainDescription,Toast.LENGTH_SHORT).show();
</code></pre>
"
18915178,"<pre><code>import java.util.regex.*;

String myString = ""I Need 5000 points"";
Pattern pattern = Pattern.compile(""\\d+"");
Matcher matcher = pattern.matcher(myString);
if(matcher.find())            
    System.out.println(matcher.group(0));
</code></pre>
"
25345966,"<p>If you use ++ operator as prefix like: ++var; then, the value of operand is increased by 1 then, only it is returned but, if you use ++ as postfix like: var++; then, the value of operand is returned first then, only it is increased by 1.</p>

<p>For example,</p>

<pre><code>class Example
{
    public static void main(String[] args)
    {
        int var = 1;    
        System.out.println(var++);
        System.out.println(""\n"" + ++var);    
    }
}
</code></pre>

<p>the following program prints</p>

<pre><code>1
3
</code></pre>

<p>In the prefix form, the increment or decrement takes place before the value is used in expression evaluation, so the value of the expression is different from the value of the operand. In the postfix form, the increment or decrement takes place after the value is used in expression evaluation, so the value of the expression is the same as the value of the operand.</p>
"
29293185,"<pre><code>import java.util.*;

class Time
{
    static Scanner in=new Scanner(System.in);
    public static void main(String[] args)
    {
        int time1,time2,totalTime;
        System.out.println(""Enter the first time in military:"");
        time1=in.nextInt();
        System.out.println(""Enter the second time in military:"");
        time2=in.nextInt();
        totalTime=time2-time1;
        String temp=Integer.toString(totalTime);
        char hour=temp.charAt(0);
        String min=temp.substring(1,3);
        System.out.println(hour+"" hours ""+min+"" minutes"");
    }
}
</code></pre>
"
28420926,"<p>I think that the problem is that you're not accounting for repeat digits.  You could check to make sure all the digits add up to the sample number, ie:</p>

<pre><code>1+1+0 = 2
1+0+0 = 1
1!=2
Move onto rule 3. 
</code></pre>

<p>Using this code:</p>

<pre><code>guessDigit1  + guessDigit2 + guessDigit3 == lotteryDigit1 + lotteryDigit2 + lotteryDigit3
</code></pre>

<p>I don't know if this will solve all of your problems, but it's  a start, and it should solve your immediate issue with the '110' value. Good luck!</p>
"
18953392,"<p>Booolean is an object/reference type that wraps a boolean whereas boolean in a primitive type.</p>

<p><strong>Boolean</strong> - You would get more methods which will be useful.</p>

<p><strong>boolean</strong> - Will save you lot of memory. But if you use <code>Boolean.valueOf(value) of new Boolean(value)</code>, that shouldn't be a cause.</p>

<p>Converting between primitives and objects like this is known as boxing/unboxing.</p>

<p>Click on the below links for more info:</p>

<p><a href=""http://javaeye.wordpress.com/2008/06/17/boxing-and-unboxing-conversion/"" rel=""nofollow"">http://javaeye.wordpress.com/2008/06/17/boxing-and-unboxing-conversion/</a></p>

<p><a href=""http://java.sun.com/j2se/1.5.0/docs/guide/language/autoboxing.html"" rel=""nofollow"">http://java.sun.com/j2se/1.5.0/docs/guide/language/autoboxing.html</a></p>

<p><a href=""http://www.javapractices.com/topic/TopicAction.do?Id=197"" rel=""nofollow"">http://www.javapractices.com/topic/TopicAction.do?Id=197</a></p>
"
28421437,"<p>Instead, you want to match each digit to the remaining digits. The ""right"" way to do this would be with a Set, but it sounds like you can't use those yet. You can do it manually, it's just a bit of work to write out all the cases. Basically, you compare one digit of the guess to one digit of the lottery, then compare the remaining two guess digits to the remaining two lottery digits. Rinse repeat for each digit.</p>

<p>Would it be something like this:</p>

<pre><code>else if ((guessDigit1 == lotteryDigit2 
            || guessDigit1 == lotteryDigit3)
            &amp;&amp; (guessDigit2 == lotteryDigit1
            || guessDigit2 == lotteryDigit3)
            &amp;&amp; (guessDigit3 == lotteryDigit1
            || guessDigit3 == lotteryDigit2))
            System.out.println(""Match all digits: you win $3,000"");
</code></pre>

<p>This is all I can work with--no other formulas. A program used to turn-in my code is very particular about the input. It'll only accept what it has been set to accept.</p>
"
25462543,"<p>You need to compare characters (converted to numbers) one by one (or group by group) from right to left. Use methods like <code>charAt(int)</code> or <code>substring(int, int)</code> respectively.</p>
"
28459726,"<p>If you have already given a constant size of array, avoid using <code>.length</code> and use the constant instead.</p>

<pre><code>for(int x = 0; x &lt; 4; x++){for(int y = 0; y &lt; 4; y++){ ... ... }}
</code></pre>
"
28956508,"<p>It only assign the text you entered in the <code>Password_Text</code> field which may be <code>EditText</code> to the <code>String</code> variable password if the variable password is empty.</p>
"
19026104,"<p>As a quick and dirty solution leveraging existing infrastructure, you can wrap your <code>uglyPrintedMap</code> into a <code>java.util.HashMap</code>, then use <code>toString()</code>.  </p>

<pre><code>uglyPrintedMap.toString(); // ugly
System.out.println( uglyPrintedMap ); // prints in an ugly manner

new HashMap&lt;Object, Object&gt;(jobDataMap).toString(); // pretty
System.out.println( new HashMap&lt;Object, Object&gt;(uglyPrintedMap) ); // prints in a pretty manner
</code></pre>
"
28540785,"<pre><code>Try this: 
package mypackage;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;
import java.util.Arrays;

public class Converter{

    final static int ARRAY_SIZE = 30;

    public static void main(String[] args){     
        int n;
        Scanner in = new Scanner(System.in);
        System.out.println(""Enter a positive integer:"");
        n = in.nextInt();
        in.close();

        if (n &lt;= 0){
            System.out.println(""ERROR:n&lt;=0"");
            return;
        }else if (n &gt; 0){
            int[] ostataci = new int[ARRAY_SIZE];
            int i = 0;
            while (n&gt;0){            
                ostataci[i] = n % 2;
                i++;
                n = n / 2;              
                System.out.printf(""%d %n"", ostataci[i]);
            }
        System.out.println(""All done!"");    
        System.out.println(Arrays.toString(ostataci));
        }
    }
}
</code></pre>
"
19037455,"<p>Why not click to download from your browser then copy &amp; paste the exact link where it was downloaded, for example: </p>

<pre><code>wget http://download.oracle.com/otn-pub/java/jdk/7u40-b43/jdk-7u40-linux-x64.tar.gz?AuthParam=1380225131_dd70d2038c57a4729d8c0226684xxxx
</code></pre>

<p>You can find out the link by looking at the network tab of your browser after accepting terms in oracle and clicking to download. F12 in Chrome. Firebug in Firefox.</p>
"
29121406,"<p>This code will output numbers 1..10. Read javadoc for Stream.limit for more information</p>

<pre><code>IntStream
    .iterate(1, n -&gt; n + 1)
    .limit(10)
    .forEach(System.out::println);
</code></pre>
"
21695086,"<p>I had a similar situation, and the following process worked for me:</p>

<ol>
<li><p>In the terminal, type </p>

<pre><code>vi ~/.profile
</code></pre></li>
<li><p>Then add this line in the file, and save</p>

<pre><code>export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk&lt;version&gt;.jdk/Contents/Home
</code></pre>

<p>where version is the one on your computer, such as 1.7.0_25</p></li>
<li><p>Exit the editor, then type the following command make it become effective</p>

<pre><code>source ~/.profile 
</code></pre></li>
</ol>

<p>Then type java -version to check the result </p>

<pre><code>    java -version 
</code></pre>

<p>What is .profile? 
From:<a href=""http://computers.tutsplus.com/tutorials/speed-up-your-terminal-workflow-with-command-aliases-and-profile--mac-30515"" rel=""nofollow"">http://computers.tutsplus.com/tutorials/speed-up-your-terminal-workflow-with-command-aliases-and-profile--mac-30515</a></p>

<blockquote>
  <p>.profile file is a hidden file. It is an optional file which tells the system which commands to run when the user whose profile file it is logs in. For example, if my username is bruno and there is a .profile file in /Users/bruno/, all of its contents will be executed during the log-in procedure.</p>
</blockquote>
"
30096020,"<pre><code>//My own binary converter method
public int baseTwo(int number){
    int counter=0; //keeps the digits place
    int remainder = 0; //keeps binary number form 
    while(number&gt;=1){
        remainder += (number%2)*(Math.pow(10, counter));
        counter+=1;
        number = number/2;
    }
    return remainder;
}
</code></pre>

<blockquote>
  <p>This is how I solved the question converting decimal number to binary number.</p>
</blockquote>
"
29726533,"<pre><code>public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String satr=scanner.nextLine();
    String newString = """";
    for (int i = 0; i &lt; satr.length(); i++) {
        if (Character.isUpperCase(satr.charAt(i))) {
            newString+=Character.toLowerCase(satr.charAt(i));
        }else newString += Character.toUpperCase(satr.charAt(i));
    }
    System.out.println(newString);
}
</code></pre>
"
19222632,"<p>The algorithm is not very efficient, but if I understand correctly your need, it should work if you modify it this way(under the supposition that arrNums contains a primitive type and never contains 0) :</p>

<pre><code>for (int k = 0; k &lt; arrNums2.length; k++) {
    for (int i = k+1; i &lt;arrNums2.length; i++) {
        if(arrNums2[k]!= 0 &amp;&amp; arrNums[k] == arrNums2[i]){             
            points = points -5;            
            for (int j = i+1; j &lt; arrNums2.length; j++) {
                    if(arrNums2[i]==arrNums2[j]){
                        arrNums2[j]=0;
                }
            }
        }
    }
}
</code></pre>
"
19166475,"<p>Well, if you're using JQuery this should be an easy task.</p>

<p>I would just create an invisible div and render this anchor () on it. Afterwards you could simply select the anchor and get it's inner text.</p>

<pre><code>$('body').append('&lt;div id=""invisibleDiv"" style=""display:none;""&gt;&lt;/div&gt;'); //create a new invisible div
$('#invisibleDiv').html(str); //Include yours ""str"" content on the invisible DIV
console.log($('a', '#invisibleDiv').html()); //And this should output the text of any anchor inside that invisible DIV.
</code></pre>

<p>Remember, to do this way you must have JQuery loaded on your page.</p>

<p>EDIT: Use only if you've already have JQuery on your project, since as stated below, something simple as this should not be a reason for the inclusion of this entire library.</p>
"
21253115,"<p>If your regex almost works for you, you just need to prefix it with a line start ""^"":</p>

<pre><code>^(?:U\d+:|/)\%x\[(?:(-?\d+),(\d+))\]
</code></pre>
"
19166517,"<p>Assuming that you are using java, from the provided code.</p>

<p>I would recommend you to use <a href=""http://jsoup.org/cookbook/extracting-data/attributes-text-html"" rel=""nofollow"">JSoup</a> to extract text inside anchor tag.<br>
Here's a reason why. <a href=""http://stackoverflow.com/questions/590747/using-regular-expressions-to-parse-html-why-not"">Using regular expressions to parse HTML: why not?</a></p>

<pre><code>String html = ""&lt;a href='www.google.com'&gt;Google&lt;/a&gt;"";
Document doc = Jsoup.parse(html);
Element link = doc.select(""a"").first();

String linkHref = link.attr(""href""); // ""www.google.com""
String linkText = link.text(); // ""Google""""

String linkOuterH = link.outerHtml(); 
// ""&lt;a href='www.google.com'&gt;Google&lt;/a&gt;"";
String linkInnerH = link.html(); // ""&lt;b&gt;example&lt;/b&gt;""
</code></pre>
"
19269643,"<p>No it won't. <code>Integer</code> is a wrapper which adds some functionality to the primitive <code>int</code> type. If you are not going to use that functionality, its better to stick to <code>int</code>.</p>

<p>In this case it might not make a lot of difference but suppose you were to use say
<code>Integer[]</code> instead of <code>int[]</code>, then youd be wasting a LOT of memory and speed.</p>
"
19177043,"<p>Create another <code>Map</code> that holds the relationship key->intermediateKey. The intermediate key may be a GUID or something else that is automatically generated and guaranteed to be unique.</p>

<pre><code>  Map&lt;String, GUID&gt; first = new HashMap&lt;String, GUID&gt;();
  first.put(key1, guid1);
  first.put(key2, guid1);

  Map&lt;GUID, ValueType&gt; second = new HashMap&lt;GUID, ValueType&gt;();
  second.put(guid1, value1);
</code></pre>

<p>Alternatively (although I find it far more complicated, and less flexible), you could play with the keys. If <code>key1.equals(key2)</code> (and, consequently, <code>key2.equals(key1)</code> &amp;&amp; (key1.hashCode() == key2.hashCode<code>) then</code>Map.get(key1)<code>will return the same value than</code>Map.get(key2)`.</p>
"
21731397,"<p>Make it this way</p>

<pre><code>String phrase = ""WazzUp ? Who’s On FIRST??? IDUNNO"";
phrase = phrase.toLowerCase();

int count = 0;

int i = 0;
 System.out.println(phrase);

for (i = 0 ; i &lt; phrase.length(); i++) {

String t = phrase.substring(i, i + 1);

if (t == ""a"") {
  count++;
  System.out.println(count);
  }
if (t == ""e"") {
  count++;
  }
if (t == ""i"") {
  count++;
  }
if (t == ""o"") {
  count++;
  }
if (t == ""u"") {
  count++;
  }

  }

  System.out.println(count);
</code></pre>
"
21283466,"<p>Use List and .contains(Object obj) method. 
So you can verify if list has the random number add before.</p>

<p>update - based on time you can lost stuck in random loop.</p>

<pre><code>    List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
    int x = 1;
    while(x &lt; 7){

                list.add(x);
                x++;
    }
    Collections.shuffle(list);

    for (Integer number : list) {
        System.out.println(number);
    }
</code></pre>

<p><a href=""http://docs.oracle.com/javase/7/docs/api/java/util/List.html#contains(java.lang.Object)"" rel=""nofollow"">http://docs.oracle.com/javase/7/docs/api/java/util/List.html#contains(java.lang.Object)</a></p>
"
30101601,"<p>just add this line in your eclipse.ini</p>

<pre><code>Dorg.eclipse.ecf.provider.filetransfer.excludeContributors=org.eclipse.ecf.provider.filetransfer.httpclient4
</code></pre>

<p>and restart eclipse!</p>

<p>if it persist , check the parameters of network connections in <code>Tools &gt; preferences &gt; general &gt; Network connections</code></p>
"
21283769,"<p>You may use <code>java.util.Random</code>. And please specify if you want any random number or just the number 1,2,3,4,5,6. If you wish random numbers then , this is a basic code:</p>

<pre><code>import java.util.*;
public class randomnumber
{
    public static void main(String[] args)
    {
        Random abc = new Random();
        int[] a = new int[6];
        int limit = 100,c=0;
        int chk = 0;
        boolean y = true;
        for(;c &lt; 6;)
        {
            int x = abc.nextInt(limit+1);
            for(int i = 0;i&lt;a.length;i++)
            {
                if(x==a[i])
                {
                    y=false;
                    break;
                }
            }
            if(y)
            {
                if(c!=0)if(x == (a[c-1]+1))continue;
                a[c]=x;
                c++;
            }
        }

        for (Integer number : a) 
        {
            System.out.println(number);
        }
    }
}
</code></pre>

<p>if you don't understand the last for loop , please tell , i will update it.</p>
"
21283910,"<p>Here is the solution according to your code -</p>

<p>You just need to change the numGen method - </p>

<pre><code>public static int numGen(int Array[])
{

    int random = (int)(1+Math.random()*6);

    for(int loop = 0; loop &lt;Array.length ; loop++)
    {
        if(Array[loop] == random)
        {
            return numGen(Array);
        } 
    }


    return random;
}
</code></pre>

<p>Complete code is - </p>

<pre><code>import javax.swing.*;
public class NonRepeat
{
    public static void main(String args[])
    {

        int login = Integer.parseInt(JOptionPane.showInputDialog(""ASD""));
        while(login != 0)
        {
            int Array[] = new int [6];
            String output="""";

            for(int index = 0; index&lt;6; index++)
            {
                Array[index] = numGen(Array);


            }

            for(int index = 0; index&lt;6; index++)
            {
                output += Array[index] + "" "";
            }


            JOptionPane.showMessageDialog(null, output);

        }



    }

    public static int numGen(int Array[])
    {

        int random = (int)(1+Math.random()*6);

        for(int loop = 0; loop &lt;Array.length ; loop++)
        {
            if(Array[loop] == random)
            {
                return numGen(Array);
            } 
        }


        return random;
    }
}
</code></pre>
"
26825682,"<pre><code>String string = ""Bob Bakes Brownies"";
List&lt;String&gt; list = Arrays.asList(string.split("" ""));
</code></pre>
"
26826224,"<p><code>public ArrayList&lt;String&gt; solution(String s){</code></p>

<pre><code>    ArrayList&lt;String&gt; result = new ArrayList&lt;String&gt;();
    StringBuffer sb = new StringBuffer();
    String[] array = s.split("" "");

    for(String str:array){
        sb.append(str);
        result.add(sb.toString());
    }
    return result;
}
</code></pre>
"
19379088,"<pre><code>   String result="""";
   result=(x%3 == 0 &amp;&amp; x%5 == 0 ? ""ab"" : x%5 == 0 ? ""a"" : x%3 == 0 ? ""b"" : ""not divisible to any number"" );
   System.out.println(result);
</code></pre>
"
19438790,"<p>For example if you want to calculate how many a's are there in the String, you can do it like this:</p>

<pre><code>if (string.contains(""a""))
{
    numberOf_a++;
    string = string.replaceFirst(""a"", """");
}
</code></pre>
"
21717934,"<p>You have an infinite loop.</p>

<pre><code>while(done=false) {
System.out.println(""it worked!"");
}
</code></pre>

<p>This crashes the program. Just simply change while(done=false) to ""else if (!done)"".</p>
"
27219118,"<p>I've had to solve this question in an interview as well. One of the conditions for the two values to be a gray code sequence is that their values only differ by 1 bit. Here is a solution to this problem:</p>

<pre><code>def isGrayCode(num1, num2):
    differences = 0
    while (num1 &gt; 0 or num2 &gt; 0):
        if ((num1 &amp; 1) != (num2 &amp; 1)):
            differences++
        num1 &gt;&gt;= 1
        num2 &gt;&gt;= 1
    return differences == 1
</code></pre>
"
22047321,"<p>you can user very well localSessionFactory as there is no harm and can use sessionfactory like this<br>
              @Autowired
              private SessionFactory sessionFactory;</p>

<pre><code>            @Override
            public void createSection(Section section) {
            sessionFactory.getCurrentSession().save(section);
            }              

            @Override
          public void deleteSection(Section section) {
             sessionFactory.getCurrentSession().delete(section);

             }

           @Override
           public Section findBySectionID(int id) {
            Query query = sessionFactory.getCurrentSession().createQuery(""from Section                   
          where id = "" + id);

            return (Section) query.list().get(0);

        }
</code></pre>

<p>And hibernate.cfg.xml.this is the xml to tell which and where are my model objects[java<br>
   model database mapping objects]</p>

<pre><code>                 &lt;?xml version='1.0' encoding='utf-8'?&gt;
     &lt;!DOCTYPE hibernate-configuration PUBLIC ""-//Hibernate/Hibernate                
                   Configuration DTD//EN""
            ""http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd""&gt;


   &lt;hibernate-configuration&gt;
&lt;session-factory&gt;
    &lt;mapping class=""something.packake.model.modelcalssName1"" /&gt;
    &lt;mapping class=""something.packake.model.modelcalssName2"" /&gt;
&lt;/session-factory&gt;


        &lt;/hibernate-configuration&gt;
</code></pre>
"
19549317,"<p><a href=""http://www.pretechsol.com/2013/10/how-to-check-if-string-contains-only.html#.UmgRIxAVuPA"" rel=""nofollow"">http://www.pretechsol.com/2013/10/how-to-check-if-string-contains-only.html#.UmgRIxAVuPA</a>   </p>

<p>private static boolean isNumber(final String number) {</p>

<pre><code>        boolean bisNumber = false;

        if (number == null) {

            bisNumber = false;

        }

        try {

            Integer.parseInt(number);

            bisNumber = true;

        } catch (NumberFormatException ne) {

            bisNumber = false;

        }

        return bisNumber;

    }
</code></pre>
"
22052216,"<pre><code>/(?&lt;=sat).*?(prop\d (true|false))/m
</code></pre>

<p><strong>Match group 1</strong> is what you want. See <a href=""http://rubular.com/r/VCFCqStIEa"" rel=""nofollow"">example</a>.</p>

<p><strong>BUT</strong>, I would really recommend split the string first. It's much easier.</p>
"
21869812,"<p>I suggest to use StringBuilder objects</p>

<pre><code>public void swap(StringBuilder name1, StringBuilder name2)
{
        StringBuilder temp = name1;
        name1 = name2;
        name2 = temp;
}
</code></pre>
"
21920784,"<p>Try this instead.</p>

<pre><code>int sum = 0;
for (int i = 0; i &lt; InputArray.size(); i++) {
    int foo = Integer.parseInt(InputArray.get(i).toString());
    sum = sum + foo;
}
</code></pre>

<p>The reason it doesn't work is because you're trying to parse an <code>int</code> from something that's not a <code>String</code>.</p>

<p>By adding the <code>.toString()</code> method, you'll get around this.</p>
"
22139493,"<p><strong>INCORRECT. PLEASE DISREGARD</strong></p>

<p>You need to convert the string to an array.</p>

<pre><code>    s.ToCharArray();
</code></pre>

<p><strong>Note:</strong> this is c# code, I don't know if it is similar to java.</p>
"
21962806,"<pre><code>public double accerlate ()
{
    double accerlate = speed+1;
    return accerlate;
}
</code></pre>

<p>++ is different than +1, ++ means the operation happens AFTER the assigning of the value, however +1 will happen before hand, could also do ++speed.</p>
"
27672068,"<p>If you just want to check if the input numbers differ by just one bit:</p>

<pre><code>public boolean checkIfDifferByOneBit(int a, int b){
    int diff = 0;
    while(a &gt; 0 &amp;&amp; b &gt; 0){
        if(a &amp; 1 != b &amp; 1)
            diff++;
        a = a &gt;&gt; 1;
        b = b &gt;&gt; 1;
    }
    if (a &gt; 0 || b &gt; 0) // a correction in the solution provided by David Jones
        return diff == 0 // In the case when a or b become zero before the other
    return diff == 1;
}
</code></pre>
"
19683576,"<pre><code>package rounding;
import javax.swing.*;

public class Rounding {


public static void main(String[] args) {

    int num = Integer.parseInt(JOptionPane.showInputDialog(""Enter Optimus Prime""));  
    String answer = ""Optimus Prime""; 
    if (num==1)
    {
        System.out.println(""no"");
    }
    else{



    for (int j = 2; j &lt;= num - 1; j++)
    {
        if (num%j == 0)
        {
            answer = ""Compisate volcano"";
        }


    }


        System.out.println(answer);
    }     
}
}
</code></pre>

<p><a href=""http://www.optimusprimevscompisatevolcanovsno.composite.compisate.compisate.com/"" rel=""nofollow"">enter link description here</a></p>
"
19738775,"<p>OK the reason why equals compare scale and value is understandable.
However did you know that:</p>

<pre><code>double value = 5735000.0;
if (! BigDecimal.valueOf(value).equals(new BigDecimal(value)) {
    // Please explain how the valueOf construct a BigDecimal with scale of 1
    // But the constructor construct a BigDecimal with scale of 0
}
</code></pre>

<p>This is bad</p>
"
28010702,"<p>It is better to move that logic into a separate method and use a repetitive structure to call it back if invalid input</p>

<p>e.g.</p>

<pre><code>//your logic
while(isValidClass());
//your other logic


public boolean isValidClass(){
    String playerClass = classInput.nextLine();
    boolean isValid = true;
    if (playerClass.equals(""Swordsman"")){
       out.println(""You chose to be a Swordsman!"");}
    else if (playerClass.equals(""Sorcerer"")){
        out.println(""You chose to be a Sorcerer!"");}
    else if (playerClass.equals(""Elementalist"")){
        out.println(""You chose to be an Elementalist!"");}
    else if (playerClass.equals(""Assassin"")){
        out.println(""You chose to be an Assassin!"");}
    else if (playerClass.equals(""Sharpshooter"")){
        out.println(""You chose to be a Sharpshooter!"");}
    else {
        out.println(""Make sure your spelling is correct."");
        isValid = false;
    }
    return isValid;
}
</code></pre>
"
28010735,"<p>A do-while loop seems to be a great answer to your piece of code. An easy way to control your loop is to define a bool so:</p>

<pre><code>boolean loop=true;
//everything else that goes into your code
//...
//println where you requesto to enter the class name
do{
String playerClass = classInput.nextLine();
if (playerClass.equals(""Swordsman"")){
    out.println(""You chose to be a Swordsman!"");
    loop=false;}

else if (playerClass.equals(""Sorcerer"")){
    out.println(""You chose to be a Sorcerer!"");
    loop=false;}

else if (playerClass.equals(""Elementalist"")){
    out.println(""You chose to be an Elementalist!"");
    loop=false;}

else if (playerClass.equals(""Assassin"")){
    out.println(""You chose to be an Assassin!"");
    loop=false;}

else if (playerClass.equals(""Sharpshooter"")){
    out.println(""You chose to be a Sharpshooter!"");
    loop=false;}

else {
    out.println(""Make sure your spelling is correct."");
    }
    }while(loop);
</code></pre>
"
28010761,"<p>This should do the trick...</p>

<pre><code>boolean incomplete = true;

while (incomplete) {
    // Class selection
    out.println(""\nNow, what class would you like to play?\nSwordsman, Sorcerer, Elementalist, Assassin or Sharpshooter?"");
    String playerClass = classInput.nextLine();
    switch (playerClass) {
        case ""Swordsman"":
            out.println(""You chose to be a Swordsman!"");
            incomplete = false;
            break;
        case ""Sorcerer"":
            out.println(""You chose to be a Sorcerer!"");
            incomplete = false;
            break;
        case ""Elementalist"":
            out.println(""You chose to be an Elementalist!"");
            incomplete = false;
            break;
        case ""Assassin"":
            out.println(""You chose to be an Assassin!"");
            incomplete = false;
            break;
        case ""Sharpshooter"":
            out.println(""You chose to be a Sharpshooter!"");
            incomplete = false;
            break;
        default:
            out.println(""Make sure your spelling is correct."");
    }
}
</code></pre>
"
22196578,"<blockquote>
  <p>But this raises two questions:</p>
  
  <ol>
  <li>Aren't there other ways for a stack overflow to occur, not only through recursion? </li>
  <li>Does the StackOverflowError happen before the JVM actually overflows the stack or after?</li>
  </ol>
</blockquote>

<ol>
<li><p>It can also occur when we are Allocating size greater than stack's limit (for eg. <code>int x[10000000];</code>).</p></li>
<li><p>Answer to second is </p></li>
</ol>

<p>Each thread has its own stack that holds a frame for each method executing on that thread. So the currently executing method is at the top of the stack. A new frame is created and added (pushed) to the top of stack for every method invocation. The frame is removed (popped) when the method returns normally or if an uncaught exception is thrown during the method invocation. The stack is not directly manipulated, except to push and pop frame objects, and therefore the frame objects may be allocated in the Heap and the memory does not need to be contiguous.</p>

<p>So by considering stack in a Thread we can conclude.</p>

<p>A stack can be a dynamic or fixed size. If a thread requires a larger stack than allowed a <code>StackOverflowError</code> is thrown. If a thread requires a new frame and there isn’t enough memory to allocate it then an <code>OutOfMemoryError</code> is thrown.</p>

<p>you can get description for JVM <a href=""http://blog.jamesdbloom.com/JVMInternals.html"" rel=""nofollow"">here</a></p>
"
22501498,"<p>You forgot to give a space before <code>""INTEGER</code> and remove the <code>_</code> (underscore) between <code>CREATE_TABLE</code></p>

<p>Add a space like below, </p>

<pre><code>static final String DATABASE_CREATE= ""CREATE TABLE"" + ""LOGIN"" +
""("" + ""ID"" + "" INTEGER PRIMARY KEY AUTOINCREMENT,"" + 
      ""USERNAME text,PASSWORD text);"";
</code></pre>
"
22501550,"<pre><code>public class LoginDataBaseAdapter {
static final String DATABASE_NAME=""login.db"";static final int DATABASE_VERSION=1;
public static final int NAME_COLUMN=1;
 static final String DATABASE_CREATE= ""CREATE TABLE "" + ""LOGIN"" +
""("" + ""ID"" + "" INTEGER PRIMARY KEY AUTOINCREMENT,"" + "" USERNAME text, PASSWORD text);"";
</code></pre>

<p>you need to add space between words and you spell <strong>TABLE</strong> is wrong.</p>
"
22503816,"<p>The correct syntax is the following :</p>

<pre><code>if (positionE != -1){
   if ((position == -1) || (positionE &lt; position))
                   position = positionE;
}
</code></pre>

<p>The several conditions must be written inside one only if.</p>
"
22504172,"<p>Use this:   </p>

<pre><code>if (positionE!=-1) {
    if ((position==-1) || (positionE&lt;position)) {
         position = positionE;
    }        
}
</code></pre>
"
19951475,"<p>This will remove the exception you got. From next time you don't use static values.</p>

<p><strong>Edit:</strong>
It is not a good practice to assign values to any variable by yourself. As the array is having size of 10. If user enters more than 10 students dropped then it will cause a problem.</p>

<pre><code>import java.util.*;

public class Q5 {
    static Scanner scan = new Scanner(System.in);

    public static void main(String args[]) {

        double[] list = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
        System.out.println(""enter number of students who dropped:"");
        int num = scan.nextInt();
        double[] list2 = new double[list.length-num]; // should be num-1

        System.out.println(""Enter index Of  the student who dropped "");
        for (int j = 0; j &lt; num; j++) {
            System.out.println(""student"" + j + "":"");
            int index = scan.nextInt();
            list[index] = 0;
        }

        int j = 0;
        for (int i = 0; i &lt; list.length; i++) {
            System.err.println(""""+list[i]);
            if (list[i] &gt; 0) {

                list2[j] = list[i];
                j++;
            }
        }
        System.out.print(""The original list : "");
        for (int i = 0; i &lt; list.length; i++) {
            System.out.print(list[i] + "" "");
        }

        System.out.print(""remaining students "");
        for (int i = 0; i &lt; list2.length; i++) {
            System.out.print(list2[i] + "" "");
        }
    }
}
</code></pre>
"
19978385,"<p>You cannot trust doubles in financial software. They may work great in simple cases, but due to rounding, inaccuracy in presenting certain values etc. you will run into problems.</p>

<p>You have no choice but to use <code>BigDecimal</code>. Otherwise you're saying ""I'm writing financial code which almost works. You'll barely notice any discrepancies."" and that's not something that'll make you look trustworthy.</p>

<p>Fixed point works in certain cases, but can you be sure that 1 cent accuracy is enough now and in the future?</p>
"
28425349,"<p>We can't inherit the <code>private</code> fields or methods. So in your code Class <code>B</code> is completely unaware of variable <code>foo</code> even though you're accessing from its own class <code>A</code>.</p>
"
22600981,"<p>I don't know how your packages separated,while when the transport data contains too many parameters,My advice is to create a new Object that calls <i>DTO</i>(data transport object) in javaee.As you said,it's not easy to guarantee. Otherwise,to use <i>CALLBACK</i> is a better way that could be easily guaranteed and extended.Nothing is perfect,you'd choose which aspect is your attention.
<br>callback seen as</p>

<pre><code>void function(Callback callback){
    callback.do();
}
</code></pre>

<p>This is my advice but not a exactly correct way.Maybe it's helpful for you.</p>
"
20011525,"<p>If you do not tell the <code>TreeSet</code> which ordering you want, it will use standard string ordering (alphabetic).</p>

<p>Use the constructor that takes a <code>Comparator&lt;String&gt;</code> and create an instance that sorts the values as you wish.</p>
"
20011697,"<p>If you need a <code>Set&lt;String&gt;</code> with the names of the months and <em>sorted</em>, you may use a <code>LinkedHashSet&lt;String&gt;</code>. From <a href=""http://docs.oracle.com/javase/7/docs/api/java/util/LinkedHashSet.html"" rel=""nofollow"">its javadoc</a> (emphasis mine):</p>

<blockquote>
  <p>Hash table and linked list implementation of the Set interface, with predictable iteration order. This implementation differs from HashSet in that it maintains a doubly-linked list running through all of its entries. This linked list defines the iteration ordering, which is <strong>the order in which elements were inserted into the set</strong> (insertion-order).</p>
</blockquote>

<p>So, just do this:</p>

<pre><code>Set&lt;String&gt; months = new LinkedHashSet&lt;String&gt;();
months.add(""Jan"");
months.add(""Feb"");
months.add(""Aug"");
months.add(""Dec"");
System.out.println(months);
</code></pre>

<p>Output:</p>

<pre><code>[Jan, Feb, Aug, Dec]
</code></pre>
"
28466350,"<p>Isn't this what the default access modifier is for?</p>

<p>Try this :</p>

<pre><code>public class blah{
    static class A {
        int foo;
        void bar(B b) {b.foo=42;}
    }
    static class B extends A {

    }
}
</code></pre>

<p>You cannot access the private member directly from an ancestor, that is what private means. Now why does it work when you cast? And does that mean the documentation is incorrect?</p>

<p>I mentioned to a colleague that the java documentation may be erroneous and he points out that you are actually setting the value of foo from inside class A. So everything is correct. You cannot (because it is private) access foo from an descendant, so you must cast. And you cannot do that outside of the body of A.</p>

<p>I believe this is the correct answer.</p>
"
22353279,"<pre><code>Map&lt;String, Integer&gt; map = new HashMap&lt;String, Integer&gt;();
for (Map.Entry&lt;String, Integer&gt; entry : map.entrySet()) {
    // do your sorting
}
// fetch the first entry here
entry.getKey();
</code></pre>
"
22362833,"<p>Use the following code:</p>

<pre><code>final int ASCII_0 = 48;
String seq= ""101010101"";
byte[] bytes = seq.getBytes();

for (int i = 0; i &lt; bytes.length; i++) {
    byte b=bytes[i]; 
    System.out.println(b - ASCII_0);
}
</code></pre>
"
28621256,"<pre><code>Try this code, the method should be as follow:

public String printNum()
{
    StringBuilder numbers = new StringBuilder();

    for (int i=0;i&lt;100;i++)
    {
        numbers.append(i+1);

        if(i&lt;99)
        {
            numbers.append("","");
        }

        System.out.println(""Roll "" + (i+ 1) + "" "");
    }

    return numbers.toString();
</code></pre>
"
22376908,"<pre><code>import java.util.Arrays;
public class ExampleContains {
    public static boolean EligibleState(String state){
        String[] cities = new String[]{""Washington"", ""London"", ""Paris"", ""NewYork""};
        boolean test = Arrays.asList(cities).contains(state)?true:false;
        return test;
     }

    public static void main(String[] args) {
        // TODO Auto-generated method stub
        System.out.println(EligibleState(""London""));
    }

}
</code></pre>
"
22661448,"<p>In your for loop, you are incrementing start variable by 5 after every iteration. The condition defined in the for loop, will check before every iteration that the index deos not overshoot the total size of the list. But inside the for loop, you are again incrementing the start variable by 5 and accessing the list using this variable, which could be beyond the size of the list causing an out of bounds exception.</p>

<p>for eg. size of list is 17 and you are in the second iteration, so you enter the for loop with the start having a value of 15. But inside the for loop, you increment the variable again by 5, making it to 20. If you try accessing the 20th element of the list, it will definitely throw an out of bound exception.</p>

<p><strong>EDIT:</strong></p>

<pre><code>for (int start = 0; start &lt; test.size(); start += 5) {
    if((start+5)&lt;=index.size()){
       List&lt;String&gt; group = test.subList(start, start+5);
       System.out.println(group);
       //System.out.println(output);
       System.out.println(""split"");
    }else{
       break;
    }        
}
</code></pre>
"
28734869,"<p>Try this code</p>

<pre><code>public static boolean recursiveMethod(int x) {
if (x &gt;= 5) {
    return true;
}
boolean isPrintedOnce = false;
if (isPrintedOnce = false) {
    if(x==0){
    System.out.println(""Printed once!""); // Print this statement only once
    }
    isPrintedOnce = true;
}
return recursiveMethod(x + 1);
}

public static void main(String[] args) {
System.out.println(recursiveMethod(0));
}
</code></pre>
"
20126423,"<pre><code>public class Anagrams {

//Write aprogram to check if two words are anagrams
public static void main(String[] args) {
    Anagrams an=new Anagrams();
    System.out.println(an.isAnagrams(""tree"", ""eetr""));

}

public boolean isAnagrams(String word1,String word2)
{
    boolean anagrams=false;
    char []arr1=word1.toCharArray();
    char []arr2=word2.toCharArray();

    //They should be the same length
    int sum1=0;
    int sum2=0;
    for(int i=0;i&lt;arr1.length;i++)
    {
        sum1+=(int)arr1[i];
        sum2+=(int)arr2[i];
    }

    if(sum1==sum2)
    {
        anagrams=true;
    }

    return anagrams;
}
</code></pre>

<p>}</p>

<pre><code>Output:-
true
</code></pre>
"
28746741,"<hr>

<p>To read a char array in C, you first have to inialize the actual array with a limit of how long it can be. Somthing like this:</p>

<pre><code>char str[20];
scanf(""%s"", &amp;str);
</code></pre>

<p>Note the %s format string telling scanf to capture a string, %d is for integers.</p>
"
28794404,"<p>How about the following algorithm (given in pseudocode)</p>

<pre><code>iterate over elements:
   pick one of the element at random 
   call function again on the remaining elements
   if elements.size == 1 
       return or print
</code></pre>

<p>This should produce a valid permutation at each run. If you want all possible permutations, just accumulate as you iterate, then you should have all permutations. </p>
"
28794627,"<p>Another approach:</p>

<pre><code>static ArrayList&lt;ArrayList&lt;Integer&gt;&gt; getPermutation(ArrayList&lt;Integer&gt; ints) {
    if (ints.size() == 1) {
        ArrayList&lt;ArrayList&lt;Integer&gt;&gt; list = new ArrayList&lt;&gt;();
        list.add(ints);
        return list;
    } else {
        ArrayList&lt;ArrayList&lt;Integer&gt;&gt; list = new ArrayList&lt;&gt;();
        for (Integer i: ints) {
            ArrayList&lt;Integer&gt; subList = new ArrayList&lt;&gt;(ints);
            subList.remove(i);
            ArrayList&lt;ArrayList&lt;Integer&gt;&gt; subListNew = getPermutation(subList);
            for (ArrayList&lt;Integer&gt; _list: subListNew) {
                ArrayList&lt;Integer&gt; local = new ArrayList&lt;&gt;();
                local.add(i);
                local.addAll(_list);
                list.add(local);
            }
        }
        return list;
    }
}
</code></pre>

<p>This method first selects an element, removes it and obtains a sub-list, then produces a permutation of the sub-list until the list size becomes 1.</p>
"
22741217,"<p>I am having a similar problem with my application. the nearest I have come is to set all components that reside on top to either component.setOpaque(false), or component.setBackground(new Color(255,255,255,0)). you could also try panel.setVisible(false) for the unused panels. 
its hard to offer up code with out the entire program but give this a whirl:</p>

<pre><code>Menu.setBackground(new Color(255,255,255,0);
</code></pre>
"
28802064,"<p>You can check if two numbers differ by one bit or not as follows. In this method, difference in the length of binary numbers are taken care of. Eg, the output for 11 (1011) and 3 (11) will be returned as true. 
Also, this does not solve the second criteria for Gray code adjacency. But if you only want to check if the numbers differ by one bit, the code below will help.</p>

<pre><code>class Graycode{
    public static boolean graycheck(int one, int two){
        int differences = 0;
        while (one &gt; 0 || two &gt; 0){
            // Checking if the rightmost bit is same
            if ((one &amp; 1) != (two &amp; 1)){
                differences++;
            }
            one &gt;&gt;= 1;
            two &gt;&gt;= 1;
        }
        return differences == 1;
    }
    public static void main(String[] args){
        int one = Integer.parseInt(args[0]);
        int two = Integer.parseInt(args[1]);
        System.out.println(graycheck(one,two));
    }
}
</code></pre>
"
28814397,"<p>If you are sure about .pdf end, this is the most easiest approach</p>

<pre><code>public static void main(String[] args) {
    String pdfName = ""something.pdf"";
    String fileTracciato = pdfName.substring(0, pdfName.length()-4) + "".txt"";
    System.out.println(fileTracciato);
}    
</code></pre>

<p>The output of this method is <code>something.txt</code></p>

<p>This substring method I used just removes the last 4 characters before adding .txt</p>
"
22663313,"<p>you could write as:</p>

<pre><code>Iterator&lt;Map.Entry&lt;String,String&gt;&gt; iter = map.entrySet().iterator();
    while (iter.hasNext()) {
        Map.Entry&lt;String,String&gt; entry = iter.next();
        if(null == (entry.getValue())){
            iter.remove();
        }
    }
</code></pre>
"
28814521,"<p>Try this,</p>

<pre><code>String[] pdfsplits = pdfName.split("".""); 
String fileTracciato;

if(pdfsplits.size&gt;1){
    fileTracciato = pdfName.replace(pdfsplits[pdfsplits.size-1],"""")+""txt"";
}else{
    fileTracciato = pdfName+"".txt"";
}
</code></pre>
"
28923455,"<blockquote>
  <p>how to seperate getters and setters from managed bean in JSF?</p>
</blockquote>

<p>Just introduce another managed bean whose purpose it is to hold your data.</p>

<pre><code>@Named
@ViewScoped
public class LoginModel implements Serializable {
    private String userName;
    private String password;

    //Getters and setters ...
}

@Named
@ViewScoped
public class LoginController implements Serializable {

    @Inject
    private LoginModel loginData;

    public String logIn(){
        if(isLoginDataValid(loginData)){
            return ""index.xhtml"";
        }
    }
}
</code></pre>

<p>Please make sure you use <code>javax.faces.view.ViewScoped</code> as the annotation. Do not use <code>javax.faces.bean.ViewScoped</code>.</p>

<p>Using part of jsf might look like.</p>

<pre><code>&lt;h:form&gt;
    &lt;table&gt;
        &lt;tr&gt;
            &lt;td&gt;Username:&lt;/td&gt;
            &lt;td&gt;
                &lt;h:inputText value=""#{loginModel.userName}""/&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt; 
            &lt;td&gt;Password:&lt;/td&gt;
            &lt;td&gt;
                &lt;h:inputText value=""#{loginModel.password}""/&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;
                &lt;h:commandButton value=""Login"" action=""#{loginController.logIn}""/&gt;          
            &lt;/td&gt;
        &lt;/tr&gt;
    &lt;/table&gt;
&lt;/h:form&gt;
</code></pre>
"
22896718,"<p>if b is supposed to be an int you could try </p>

<pre><code>if (a==1 &amp;&amp; b instanceof int)
</code></pre>
"
20331308,"<pre><code>SimpleDateFormat sdf = new SimpleDateFormat(""mm/dd/yyyy"");
</code></pre>
"
28958378,"<p>simple arraylist example for insertion at specific index.</p>

<p>Following is the declaration for java.util.ArrayList.add() method.</p>

<blockquote>
  <p>public void add(int index, E element)</p>
</blockquote>

<p>Example</p>

<p>The following example shows the usage of java.util.ArrayList.add(index,E) method.</p>

<blockquote>
  <p>package com.tutorialspoint;</p>
  
  <p>import java.util.ArrayList;</p>
  
  <p>public class ArrayListDemo {    public static void main(String[] args)
  {</p>

<pre><code>// create an empty array list with an initial capacity
ArrayList&lt;Integer&gt; arrlist = new ArrayList&lt;Integer&gt;(5);

// use add() method to add elements in the list
arrlist.add(15);
arrlist.add(22);
arrlist.add(30);
arrlist.add(40);

// adding element 25 at third position
arrlist.add(2,25);

// let us print all the elements available in list
for (Integer number : arrlist) {
  System.out.println(""Number = "" + number);
}     } }
</code></pre>
  
  <p>Let us compile and run the above program, this will produce the following result</p>
</blockquote>

<p>Output:-</p>

<blockquote>
  <p>Number = 15 Number = 22 Number = 25 Number = 30 Number = 40</p>
</blockquote>
"
20352356,"<pre><code>    import java.io.BufferedReader;
    import java.io.InputStreamReader;


    public class NumberRepetition {



    public static void main(String[] args) throws Exception {
        int size;
    BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
    System.out.println(""enter size of array"");
    size=Integer.parseInt(br.readLine());
    int el;
    int[] a=new int[size];
    for(int i=0;i&lt;size;i++)
    {
        System.out.println(""enter a number"");
        el=Integer.parseInt(br.readLine());
        a[i]=el;
    }
    for(int i=0;i&lt;size;i++)
    {
        for(int j=0;j&lt;size-1;j++)
        {
            if(a[j]&gt;a[j+1])
            {
                int temp=a[j];
                a[j]=a[j+1];
                a[j+1]=temp;

            }
        }
    }
    int count=0;
    for(int i=0;i&lt;size;i++)
    {
        for(int j=0;j&lt;size;j++)
        {
            if(a[i]==a[j])
            {
                count++;

            }



        }
        System.out.println(a[i]+"" \t "" +""occurence time is""+""\t""+count);
        if(count!=0)
        {
            i=i+count-1;
        }
        count=0;
    }

}

}
</code></pre>
"
23047527,"<p>We can swap objects. It's so simple.Just have to use one dummy object to swap two objects.</p>

<p>Example is given below:</p>

<pre><code>    Employee e1=new Employee();
    Employee e2=new Employee();
    e1.setName(""e1"");
    e2.setName(""e2"");   
    System.out.println(e1);
    System.out.println(e2);
    Employee temp= new Employee();
    temp=e1;
    e1=e2;
    e2=temp;
</code></pre>
"
22937133,"<p>A method can return a value or not.</p>

<pre><code>public void doSomthing(String text) {
   print text;
}
</code></pre>

<p>This don't return any value but executes and returns.</p>

<pre><code>public String doSomthing(String text) {
   return text;
}
</code></pre>

<p>This method returns the text.</p>

<p>You can't input a void.</p>
"
23135081,"<p>Staying in your context:</p>

<pre><code>public static void main(String[] a) {


    String s[]={""a"",""b"",""c"",""-"",""g"",""t"",""-"",""q"",""-"",""a"",""s"",""d"",""-"",""a"",""b"",""y""};

    int sop=0;

    String[] sdf=new String[100];
    String temp = """";

    for(int kk=0;kk&lt;s.length;kk++){
        if(s[kk].equals(""-"")){
            sdf[sop] = temp;
            temp = """";
            sop++;
        } else {
            temp += s[kk];
        }
    }
}
</code></pre>

<p>Better use a StringBuilder, this is just for understanding the logic...</p>
"
23054044,"<p>Try this,</p>

<p>you need to initialize <code>numArabic</code> to some value first.</p>

<pre><code>public static void main(String[] args) {
    int numArabic = 0;
    boolean validEntry;

    try {
        System.out.println(""Enter an integer number between 1 and 3999!"");
        Scanner scan = new Scanner(System.in);
        numArabic = scan.nextInt();
        validEntry = true;
    }

    catch (InputMismatchException e) {
        System.out.println(""Entered value is not an integer!"");
    }


    if ((numArabic &lt; 1) || (numArabic &gt; 3999)) {

    } else {

    }

}
</code></pre>
"
20561144,"<p>I think You can try to use such a regex:</p>

<pre><code>\d\d\d\d\d\d\d\d\d\d
</code></pre>

<p>which is basically 10 times \d</p>
"
20470363,"<p>Run a <code>for</code> loop that runs from 0 to <code>length-1</code> of your stream</p>

<pre><code>for(int i = 0 ; i &lt; stream.length-1 ; i++)
{
    Pair pair = new Pair(stream[i], stream[i+1]);
    // then add your pair to an array
}
</code></pre>
"
23054312,"<p>The Program what you entered is free from syntax errors and logical errors.But for asking only one time to enter the integer value just rewrite the code as following.We are attaching second sop function in catch block.So if the input is mismatch it will ask for again re-enter.
    public static void main(String[] args) {</p>

<pre><code>    int numArabic; 
    boolean validEntry;

    try {
            System.out.println(""Enter an integer number between 1 and 3999!"");
            Scanner scan = new Scanner(System.in); 
            numArabic = scan.nextInt();
            validEntry = true;
        } catch (InputMismatchException e) {
            System.out.println(""Entered value is not an integer!"");


System.out.println(""Enter an integer number between 1 and 3999!"");
        Scanner scan = new Scanner(System.in); 
        numArabic = scan.nextInt();
        }
</code></pre>
"
20597553,"<p>You have to override the <code>toString</code> method in the Students class.</p>

<p>e.g.:</p>

<pre><code>@Override 
public String toString() {

StringBuilder result = new StringBuilder();

result.append(something);
.....
return result.toString();
}
</code></pre>
"
23239981,"<p>@Emracool... I'd suggest you an alternative. Since you seem to be trying to load a *.txt file. Better to use <code>FileInputStream()</code> rather then this annoying <code>getClass().getClassLoader().getResourceAsStream()</code> or <code>getClass().getResourceAsStream()</code>. At least your code will execute properly.  </p>
"
20500746,"<p>See <a href=""http://en.wikipedia.org/wiki/Recursion_%28computer_science%29"" rel=""nofollow"">Recursion</a> is a method call in which same method calls itself.<br>
So as in your code:</p>

<pre><code> public static void f(int x)
    {
        if (x &gt; 0)
        {
            System.out.println(x);
            f(x-1);    //at this point it will call itself as f(2)
            System.out.println(x);
            f(x-1);
        }
        System.out.println(""bert"");
    }
</code></pre>

<p>It will keep on calling itself until the if condition is true. The very main thing you need to understand is the <strong>Stack situation</strong> of method calls whether it is recursive or not.</p>
"
20500766,"<pre><code>private String returnType(int t, String[] s) &lt;- return type recursion example
{
    String arrayed = s[t];
    if (t == 0) // &lt;--if 0
        return "" "" + arrayed;
    else
        return arrayed + returnType(t - 1, s); &lt;--if != 0 return value and then call itself again with the value -1.
}
</code></pre>

<p>It returns arrayed when it reaches 0. This goes through String[] s, and puts all the strings together side by side into one string</p>
"
23302283,"<pre><code> test.replaceAll(""This"","""").replaceAll(""this"", """")
</code></pre>
"
23379577,"<p>use <strong>contains method</strong><br/></p>

<pre><code>boolean isPresent(String word, String sentence)
{
return sentence.contains(word);   
}
</code></pre>

<p>EDIT:
    if you want to search for a pariticular word then you can add space befaore and after the word string<br/>
    word = "" "" + word + "" "";</p>
"
23302311,"<p>+1 for Cody S an other way is this</p>

<pre><code>String firstword =test.split("" "")[0];

test=test.replaceAll(firstword, """");
</code></pre>
"
20737605,"<pre><code>((Integer)number).toString()
</code></pre>

<p>use this method</p>
"
20607856,"<p>++i will increment the value of 'i', and then return the incremented value.
Example:</p>

<pre><code>int i=1;
System.out.print(++i);
//2
System.out.print(i);
//2
</code></pre>

<p>i++ will increment the value of 'i', but return the original value that 'i' held before being incremented.</p>

<pre><code>int i=1;
System.out.print(i++);
//1
System.out.print(i);
//2
</code></pre>
"
23553483,"<p>i++ will evaluate the i first so that why you get 0 after the operation finish and stack the value its will increment after.</p>

<p>so if you do this</p>

<pre><code>int i = 0;
System.out.println(i++); = 0
System.out.println(i++); = 1
</code></pre>
"
23554904,"<pre><code>public static void main(String[] args) {
    // TODO Auto-generated method stub
    int j=2;
    boolean isNotPrime=false;

    System.out.println(""Enter the n:"");
    Scanner reader= new Scanner(System.in);
    int n= reader.nextInt();

    while (j&lt;=n/2){
        if(n % j ==0){
            isNotPrime=true;
            break;
        }
        j++;
    }


    if (isNotPrime){
        System.out.println(""Number""+n+""is not prime"");
    }
    else
    {
        System.out.println(""Number""+n+""is prime"");
    }

}
</code></pre>

<p>}</p>
"
20873096,"<p>String can take a char array as a constructor. </p>

<pre><code>String s = new String(k);
</code></pre>
"
20941656,"<p>The easiest way is, first change the method to a String and go ahead to accept input as a string.  You then control the input variable with an if-else or case statement as follows.</p>

<pre><code>Scanner reader = new Scanner(System.in);

String c = reader.nextLine();

switch (c) {
  case "" a"":
    your code here..
  break;
  case ""b"":
    your code here..
  break;
  default: 
    your code here..
}
</code></pre>

<p>but be sure to change the method to a String. This is the easiest way possible.</p>
"
23885827,"<p>The syntax is defined the way it is (and many answers have pointed to <a href=""http://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.4"" rel=""nofollow"">its definition</a>) to:</p>

<ol>
<li>ensure that the Java compiler (and other simpler code analysis tools) can unambiguously and quickly interpret your declaration.</li>
<li>ensure that this will be true even as the language develops later on.</li>
</ol>

<p>Imagine that we lived in a world where the <code>static</code> keyword wasn't invented yet, and when reorderings like the one that currently gives a syntax error are valid. Then, arguably, <code>static</code> might be a valid name for a Java type (like <code>int</code> or <code>String</code>). So when some genius eventually invents the keyword <code>static</code>, a declaration like:</p>

<pre><code>MyType static Foo() {
    ...
}
</code></pre>

<p>might be ambiguous: is <code>static</code> the type or the keyword? By requiring the return type to immediately precede the name of the function, the language is more <em>future-proof</em>. Java language extensions can continue to invent keywords, knowing that they'll be safe to be inserted before the return type in the declaration.</p>
"
21037502,"<p>Any Static member can be accessed by Directly class name as <strong>TestClass1.a</strong> no need of instance for it </p>

<pre><code>  System.out.println(TestClass1 .a);
</code></pre>

<p>output:
10</p>
"
21015562,"<p>Time for a little pseudocode me thinks.</p>

<p><b> Step 1 </b></p>

<p>You want to split the <code>String</code> up into <code>tokens</code>. You can do this using <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/String.html#split%28java.lang.String%29"" rel=""nofollow"">String.split()</a>.</p>

<pre><code>Let input equal ""this, is, just, a, GOOFtest"".
// It's a comma that separates each token, so let's split on that.
Let tokens equal input.split("","").
</code></pre>

<p><em><strong>NOTE:</em></strong> If you want to preserve your input as a <code>String</code>, then don't do this step.</p>

<p><b> Step 2 </b></p>

<p>Parse your data, removing <code>""GOOF""</code> as you see it. You can use the <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/String.html"" rel=""nofollow"">String.replaceAll()</a> for that.</p>

<pre><code>for every token in tokens
    let token equal token.replaceAll(""GOOF"", nothing).
</code></pre>

<p><em><strong>NOTE</em></strong>: If <code>GOOF</code> can come in different cases, it's time for some <code>regexp</code>. This is called a <code>metalanguage</code>, and it's designed to analyse and manipulate <code>String</code>s. What you want to do, is not take <code>case</code> into account, and you can achieve this using the <code>?i</code> operator.</p>

<pre><code>String regex = ""(?i)GOOF"";
String parsedInput = input.replaceAll(regex, """");
// And that's the only bit of Java you're getting!!
</code></pre>

<p><b> Step 3 </b></p>

<p>????</p>

<p><b> Step 4 </b></p>

<p>Profit! You have an array containing only the values, without <code>GOOF</code> appearing.</p>
"
21090248,"<p>Try this </p>

<pre><code>CREATE TABLE IF NOT EXISTS Lid (
        lid_id          INT(2)      NOT NULL,
        naam            VARCHAR(45) NOT NULL,
        email           VARCHAR(45) NOT NULL,
        tel_nummer      VARCHAR(45) NOT NULL,
        score           INT(2)      NOT NULL,
        expertise       VARCHAR(45) NOT NULL,
        team_id         INT(2)      NOT NULL,
primary key (lid_id));

CREATE TABLE IF NOT EXISTS Team (
        team_id     INT(2)          NOT NULL,
        naam        VARCHAR(45) NOT NULL,
        score       INT(2)          NOT NULL,
        captain     INT(2)          NOT NULL,
        expertise   VARCHAR(45) NOT NULL,
primary key (team_id),
foreign key (captain) references Lid(lid_id));

ALTER TABLE Lid ADD foreign key (team_id) references Team(team_id);
</code></pre>
"
24162505,"<p>Replace with </p>

<pre><code>if (userName != null &amp;&amp; userName.equals(""aj"")){

}
</code></pre>

<p>It's possible that <code>userName</code> is <code>null</code>. You need to test for that prior to calling a method.</p>
"
21203029,"<pre><code> public int myfunc(int low, int high, int test) {   
    int count = 0;
    if(low % test == 0)
       count++;
    count +=(high-low)/test;
    return count;
 }
</code></pre>
"
21223551,"<p>You are using JSF 2.2 xml namespaces and obviously don't have an environment (probably an application server) which supports JSF 2.2.</p>

<p>If you want to use ""the old"" JSF 2 you have to use these namespace declarations:</p>

<pre><code>&lt;html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:f=""http://java.sun.com/jsf/core""      
      xmlns:h=""http://java.sun.com/jsf/html""&gt;
</code></pre>

<p>If you want to use JSF 2.2 you have to update your application server to support JSF 2.2.</p>
"
21260723,"<p><code>initLoader</code> will reuse the the same parameters if the loader already exists. It returns immediately if old data is already loaded, even if you call it with new parameters. The loader should ideally automatically notify the activity of new data. If the screen rotated, <code>initLoader</code> would be called again and the old data would be immediately displayed.</p>

<p><code>restartLoader</code> is for when you want to force a reload and change the parameters as well. If you were to make a login screen using loaders, you would call only <code>restartLoader</code> each time the button was clicked. (The button may be clicked multiple times due to incorrect credentials etc.). You would only ever call <code>initLoader</code> when restoring the activity's saved instance state in the event the screen was rotated while a login was in progress.</p>
"
21326752,"<p>(a)   (b)        (c)   (d)</p>

<hr>

<hr>

<hr>

<hr>

<hr>

<hr>

<hr>

<hr>

<hr>

<hr>

<pre><code>int line;
int star;
System.out.println(""Triangle a"");
        for( line = 1; line &lt;= 10; line++ )
        {
            for( star = 1; star &lt;= line; star++ )
            {

                System.out.print( ""*"" );
            }
            System.out.println();
        }

 System.out.println(""Triangle b"");

          for( line = 1; line &lt;= 10; line++ )
        {
            for( star = 1; star &lt;= 10; star++ )
            {

        if(line&lt;star)
                System.out.print( ""*"" );
                else
                  System.out.print("" "");
            }
            System.out.println();
        }

 System.out.println(""Triangle c"");

          for( line = 1; line &lt;= 10; line++ )
        {
            for( star = 1; star &lt;= 10; star++ )
            {

        if(line&lt;=star)
                System.out.print( ""*"" );
                //else
                 // System.out.print("" "");
            }
            System.out.println();
        }

 System.out.println(""Triangle d"");

          for( line = 1; line &lt;= 10; line++ )
        {
            for( star = 1; star &lt;= 10; star++ )
            {

        if(line&gt;10-star)
                System.out.print( ""*"" );
                else
                  System.out.print("" "");
            }
            System.out.println();
        }
</code></pre>
"
24452656,"<p>You can take a look at the <a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/Math.html#round%28double%29"" rel=""nofollow"">Math.round(double a)</a> method</p>

<pre><code>System.out.println(Math.round(12.51));//Yields 13
System.out.println(Math.round(12.49));//Yields 12
System.out.println(Math.round(12.50));//Yields 13
</code></pre>

<p>from <a href=""http://stackoverflow.com/questions/12190845/round-off-in-java?answertab=active#tab-top"">Round off in JAVA</a></p>
"
21353727,"<pre><code>class F1() {
  int a;
  int b;
  void execute() {
    a = 1;
    b = 2;
    two(this);
  };
}

void two(F1 f1) {
  int c = f1.a + f1.b;
}
</code></pre>

<p>or move local variable declarations at global scope</p>

<pre><code>static int a;
void f1() {}
void f2() {};
</code></pre>
"
24632558,"<p>If you observe the fibonacci sequence, every third number is a even number:</p>

<p>1,1,<strong>2</strong>,3,5,<strong>8</strong>,13,21,<strong>34</strong></p>

<p>So an array of length 3 will suffice. We can generate the next 3 fibonacci numbers and store it(overwrite) in the array, the sum of all the third elements(even fib number) in the array will give us the sum of all even numbers in the fibonacci sequence.</p>

<p>Code:</p>

<pre><code>public class Prob2 {
    public static int sumOfEvenFibonacci(int limit){
        int fibonacci[] = {1, 1, 2}; 
        int j, sum = 2;

        while(fibonacci[2] &lt; limit){
            for(j = 0; j &lt; 3; j++){
                fibonacci[j] = fibonacci[(j+1)%3] + fibonacci[(j+2)%3];
            }
            sum += fibonacci[2];
        }
        return sum - fibonacci[2];
    }
}
</code></pre>

<p>Trivial test cases:</p>

<pre><code>public class TestProb2 {

@Test
public void testSumOfMultiples(){
    int actual = Prob2.sumOfEvenFibonacci(15);
    assertEquals(10, actual);

    actual = Prob2.sumOfEvenFibonacci(50);
    assertEquals(44, actual);

    actual = Prob2.sumOfEvenFibonacci(200);
    assertEquals(188, actual);

    actual = Prob2.sumOfEvenFibonacci(4000000);
    assertEquals(4613732, actual);
}
</code></pre>

<p>}</p>

<p>P.S: This answer may not exactly answer the OP's question but wanted to share the technique out of joy of finding it. Hope it helps others who land here looking for a solution.</p>
"
21483779,"<p>While the compiler may not allow you to pass a function pointer, it should allow you to pass blocks.</p>

<p>In Objective-C; a block as the following syntax:</p>

<pre><code>void (^action)(NSString *s) = ^(NSString *s){ NSLog(s); }
</code></pre>

<p>You can then pass your ""action"" block around as a parameter, and call it whenever required:</p>

<pre><code>action(@""Hello World"");
</code></pre>

<p>Blocks are available in all recent variations of C, Wikipedia has a nice article on the subject at <a href=""http://en.wikipedia.org/wiki/Blocks_(C_language_extension)"" rel=""nofollow"">http://en.wikipedia.org/wiki/Blocks_(C_language_extension)</a>.</p>
"
21447565,"<p>How have you declared your NameController class?</p>

<p>When you write </p>

<pre><code>&lt;h:outputText value=""#{nameController.name}"" /&gt;
</code></pre>

<p>it's supposed to bind to the property name of a bean NameController present in the scope of the page.</p>

<p>So NameController should be a managed bean.</p>

<pre><code>@ManagedBean
@SessionScoped // or RequestScoped, ApplicationScoped, etc.. (depending 
               // on how you want your bean to bean managed
public class NameController{
 // contructors
 // properties
 // getter and setter    
}
</code></pre>
"
24558563,"<p>You can use a loop and equalsIgnoreCase</p>

<pre><code>testString.equalsIgnoreCase()
</code></pre>
"
24774736,"<p>like this</p>

<pre><code>char arr[]=new char[30]; //declares an array which can hold 30 characters
    arr[2]='a';
    arr[20]='b';
</code></pre>

<p>but if you don't want to specify the length,than arraylist is something which will help you to accomplish your task because array's size is always fixed in Java</p>
"
21448953,"<p>Java is (in fact) pass by reference. When the method is called, the reference(pointer) to the object is passed and when you modify the object you can see the modification when you return from the method. The problem with your example is that java.lang.String is immutable.</p>

<p>And what you are actually achieving with your example is output parameters.</p>

<p>Here is a slightly different version of Jeffrey Hantin:</p>

<pre><code>public static void main(String[] args) {
  StringBuilder variable = new StringBuilder(""'previous String reference'"");
  passByReference(variable);
  System.out.println(variable); // I want this to print 'new String reference'
}

public static void passByReference(StringBuilder someString) {
  String nr = ""'new String reference'"";
  someString.replace(0, nr.length() - 1, nr);
}
</code></pre>
"
21589413,"<p>Faster, and shorter:
To reverse a word, use:</p>

<pre><code>public String reverseWord(String s) {
    StringBuilder y = new StringBuilder(s);
    return y.reverse();
}
</code></pre>

<p>Now split and use this method and use Stringbuidler.append to concatenate the all.
And dont forget the space inbetween.</p>
"
24709682,"<p>If you're interested in testing array equality (as opposed to writing out this test yourself), then you can use <code>Arrays.equals(theArray, theOtherArray)</code>.</p>
"
24904022,"<pre><code>public boolean isEmpty(){
    if (head == null) return true;
    else return false ;
}
</code></pre>
"
25039474,"<pre><code>Date currentDate = new Date(System.currentTimeMillis());
</code></pre>

<p>From this you can get current date of system.</p>
"
21568796,"<pre><code>public static void main(String[] commandlineArguments) {
  if (commandlineArguments.length == 0) {
     System.out.println(""Please enter a least one commandline!"");
  } 
  else {
     Integer number = new Integer(0); // initialize number
     try {
        number = Integer.parseInt(commandlineArguments[0]);
     } 
     catch (NumberFormatException exception) { // NumberFormatException
        System.out.println(exception + "" is not a integer!"");
        System.exit(1); // end program
     }

     Integer power = power5(number);
     System.out.println(power);

  }
}

public static Integer power5(Integer number){
      Integer sum = 0;
if(number == 0)
{
    return 1;
}
Integer pow = 1;
for(int i = 0; i &lt; a; i++)
{
    pow *= 2;
}
sum = pow + power5(a--);
return sum;
}

}
</code></pre>
"
25062721,"<p><strong>You need to be very careful when using STL. Raw pointers may give better performances.</strong></p>

<p>Except if I missed something, on my machine (Corei5 under Windows), code compiled with -Ofast give those performances:</p>

<p>Over ten runs:</p>

<ul>
<li>NetVipeC's fastest code (with find_if algorithm) best run was 1722ms </li>
<li>Loki's code best run was 1756ms</li>
<li>With no STL container, the code below best run was 1568ms</li>
</ul>

<p>Strange thing is that the average speed of the no-STL version is slower, but sometimes, it gets faster than all others.</p>

<p>Here it is (removed STL, added inlines, early returns everywhere and avoided variable declaration in placerDame's loop). This is the fastest C++ code proposed on this page!</p>

<pre><code>#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;chrono&gt;
#include &lt;iomanip&gt;

using namespace std;

typedef std::pair&lt;int, int&gt; Point;

#define LARGEUR_GRILLE 22
Point* positions;
size_t index = 0;

inline bool verifierNonPrise( Point const&amp; emplacement ) 
{
    for ( size_t p = 0; p != index; ++p )
    {
        Point&amp; pos = positions[p];
        if ( pos.first != emplacement.first)
        {
            if ( pos.second == emplacement.second ) 
            {
                return false;
            }
            if ( abs(pos.second - emplacement.second) ==
                 abs(pos.first - emplacement.first) ) 
            {
                return false;
            }
        }
    }

    return true;
}

inline bool placerDame(int i) 
{
    for (int j = 1; j &lt;= LARGEUR_GRILLE; j++) 
    {
        positions[index].first = i;
        positions[index].second = j;
        if (verifierNonPrise(positions[index++]) &amp;&amp; (i == LARGEUR_GRILLE || placerDame(i + 1))) 
        {
            return true;
        }
        else 
        {
            --index;
        }
    }

    return false;
}

int main()
{
    std::chrono::system_clock::time_point begin_time =
        std::chrono::system_clock::now();

    positions = new Point[LARGEUR_GRILLE];
    placerDame(1);

    for ( size_t p = 0; p != index; ++p ) 
    {
        cout &lt;&lt; ""("" &lt;&lt; positions[p].first &lt;&lt; ""; "" &lt;&lt; positions[p].second &lt;&lt; "")"" &lt;&lt; endl;
    }

    std::chrono::system_clock::time_point end_time =
        std::chrono::system_clock::now();
    long long elapsed_milliseconds =
        std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(
            end_time - begin_time).count();
    std::cout &lt;&lt; ""Duration (milliseconds): "" &lt;&lt; elapsed_milliseconds
              &lt;&lt; std::endl;

    delete [] positions;

    return 0;
}
</code></pre>

<p>Sorry, I have no Java environment to compare...I never used Java and don't want to start today ;-) But I would be really surprised if this optimized code is slower than Java....</p>

<p>If C++ is slower, you need to first make sure it is fully optimized. Fully optimized C++ code will (most likely) be faster than Java.</p>
"
21946678,"<p>The dictionary technic is more flexible but not shorter (like every thing in java). Here is a complete example.</p>

<pre class=""lang-java prettyprint-override""><code>package example;

import java.util.TreeMap;

public class Dictionary {

    static final TreeMap&lt;Character,Character&gt; myDict = new TreeMap();

    static Character choose(TreeMap&lt;Character,Character&gt; dict, 
                            Character x, Character def) {
        Character result = dict.get(x);
        if (result==null) result = def;
        return result;
    }

    public static void main(String[] args) {
        myDict.put('a','b');
        myDict.put('b','a');
        myDict.put('r','t');
        System.out.println(choose(myDict,'a','z'));
        System.out.println(choose(myDict,'b','z'));
        System.out.println(choose(myDict,'r','z'));
        System.out.println(choose(myDict,'X','z'));
    }
}
</code></pre>
"
25178859,"<p>Downcast the context to ConfigurableApplicationContext.</p>

<pre><code>((ConfigurableApplicationContext)context).close();
</code></pre>
"
21975621,"<p>Convert String to Date:</p>

<pre><code>SimpleDateFormat sdf = new SimpleDateFormat(""YYYYMMDD"");
Date date = sdf.parse(input);
</code></pre>
"
21987034,"<p>You assume, a <code>List</code> size is mutable and <code>Collections.copy()</code> does not assume this to theoretically broaden the purpose of this class to all classes implementing the <code>List</code> interface instead of the mutable ones only.</p>
"
25283178,"<p>I often use a scenario like the following:</p>

<pre><code>@Test
public void testGoForAWalkWhenSpeedIsToPowerfulShouldThrowTerribleWindException throws TerribleWindException {
    WalkService ws = new WalkService(100);
    try {
        goForAWalk();
        fail();
    catch(TerribleWindException twe) {
    }
}
</code></pre>
"
25283201,"<p>No you can catch specific exception by using the following template </p>

<pre><code>@Test(expected= TerribleWindException.class)
</code></pre>
"
25335145,"<pre><code>/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * keylogger.java
 *
 * Created on Mar 8, 2012, 8:12:20 AM
 */

package main;

import javax.swing.JOptionPane;

/**
 *
 * @author Lab-Admin
 */

public class keylogger extends javax.swing.JFrame {

    /** Creates new form keylogger */
    public keylogger() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings(""unchecked"")
    // &lt;editor-fold defaultstate=""collapsed"" desc=""Generated Code""&gt;//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        userfield = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        passfield = new javax.swing.JPasswordField();
        btnlogin = new javax.swing.JButton();
        btncancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(""Punk Academy PRoject"");
        setBackground(new java.awt.Color(255, 0, 0));
        setFont(new java.awt.Font(""Algerian"", 1, 14)); // NOI18N
        setForeground(new java.awt.Color(255, 153, 0));

        jPanel1.setBackground(new java.awt.Color(255, 204, 0));

        jLabel1.setBackground(new java.awt.Color(255, 0, 0));
        jLabel1.setFont(new java.awt.Font(""Algerian"", 1, 24)); // NOI18N
        jLabel1.setText(""Punk Academy"");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(jLabel1)
                .addContainerGap(108, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\umbrellalast.gif"")); // NOI18N

        jLabel3.setFont(new java.awt.Font(""Tahoma"", 1, 12)); // NOI18N
        jLabel3.setText(""username"");

        jLabel4.setFont(new java.awt.Font(""Tahoma"", 1, 12)); // NOI18N
        jLabel4.setText(""password"");

        btnlogin.setIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\Keys.gif"")); // NOI18N
        btnlogin.setText(""Log in"");
        btnlogin.setDisabledIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\Keys.gif"")); // NOI18N
        btnlogin.setDisabledSelectedIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\Keys.gif"")); // NOI18N
        btnlogin.setIconTextGap(2);
        btnlogin.setPressedIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\Keys.gif"")); // NOI18N
        btnlogin.setRolloverIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\Keys.gif"")); // NOI18N
        btnlogin.setRolloverSelectedIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\Keys.gif"")); // NOI18N
        btnlogin.setSelectedIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\Keys.gif"")); // NOI18N
        btnlogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnloginActionPerformed(evt);
            }
        });

        btncancel.setIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\exit.png"")); // NOI18N
        btncancel.setText(""Cancel"");
        btncancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(82, Short.MAX_VALUE)
                        .addComponent(btnlogin, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(passfield, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(userfield, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(btncancel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addGap(49, 49, 49)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnlogin)
                    .addComponent(btncancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// &lt;/editor-fold&gt;//GEN-END:initComponents

    private void btnloginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnloginActionPerformed

        if(evt.getSource()==btnlogin)
        {
            String user = btnlogin.getText();
            String pass = btncancel.getText();

            if(user.equals(user)&amp;&amp;pass.equals(pass))
            {
                this.hide();
                JOptionPane.showMessageDialog(null,""ACCESS GRANTED"");
                welcome s2 = new welcome();
                s2.show();
            }
            else
            {
                JOptionPane.showMessageDialog(null,""ACCESS DENIED"");
            }
        }

    }//GEN-LAST:event_btnloginActionPerformed

    private void btncancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelActionPerformed
        if(evt.getSource()==btncancel)
        {
            JOptionPane.showMessageDialog(null,""BYE! BYE!"");

            System.exit(0);
        }
    }//GEN-LAST:event_btncancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new keylogger().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncancel;
    private javax.swing.JButton btnlogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField passfield;
    private javax.swing.JTextField userfield;
    // End of variables declaration//GEN-END:variables
}
</code></pre>
"
25293027,"<p>The mentioned above algorithm treats 1 as prime though it is not. 
Hence here is the solution.</p>

<pre><code>static boolean isPrime(int n) {
  int perfect_modulo = 0;
  boolean prime = false;

  for ( int i = 1; i &lt;=  n; i++ ) {
    if ( n % i == 0 ) {
      perfect_modulo += 1;
    }
  }
  if ( perfect_modulo == 2 ) {
    prime = true;
  }

  return prime;
}
</code></pre>
"
25303551,"<p>public class Point implements Comparable</p>

<p>{
...</p>

<p>...
@Override</p>

<p>public int compareTo(Pointarg0) 
{</p>

<pre><code>    ....
</code></pre>

<p>}   </p>

<p>...
}</p>

<p>...</p>
"
22037205,"<p>You need to implment getter for that array in <code>ProcessInvoice</code> class.</p>

<pre><code>public class ProcessInvoice {

    private Invoice[] invoices;

    ........

    public Invoice[] getInvoices() {
        return invoices;

    }
}
</code></pre>

<p>And in your <code>Invoice</code> class;</p>

<pre><code>public class Invoice {


    private InvoiceItem[] invoiceItems;
    private double totalInvoice;
    private ProcessInvoice processInvoice;

    ......

    void getInvoices() {
        processInvoice = new ProcessInvoice();
        processInvoice.runProcess();
        processInvoice.getInvoices();

    }


}
</code></pre>
"
22054246,"<p>Use regex expressions, eg:</p>

<pre><code>if (userInput.matches ("".*[bcdfghjklmnpqrstvwx]+.*""))
    results += ""has consonants"";
else
    results += ""no consonants"";
</code></pre>

<p>If you can ensure that no symbols will be used, then a simpler version would be:</p>

<pre><code>if (!userInput.matches ("".*[aeiou]+.*""))
    results += ""has consonants"";
else
    results += ""no consonants"";
</code></pre>

<p>Tweak to suit for case sensitivity.</p>
"
22054494,"<p><strong>It will be more efficient and readable</strong>  </p>

<pre><code>if(Pattern.matches(""[b-df-hj-np-tv-z]+"",userInput)){  
    ----code----
}
else{
    ----other code----  
}
</code></pre>
"
22097391,"<p>You could create a switch statement</p>

<pre><code>if(enable)
{
    switch()
    {
         case enableCar:
         // do some code
         break;
         case enableComputer:
         //do some code
         break; 
    }
}
</code></pre>
"
25478465,"<p>If I change the class <code>Cougar</code> to</p>

<pre><code>public class Cougar extends Feline {
    public String type = ""c ""; // &lt;-- shadow Feline's type.
    public void hh() {
        super.hh();
        // this.type = ""c "";
        System.out.print(""CCCCC "" + this.type + super.type);
    }
}
</code></pre>

<p>Then I get the output you seem to expect of</p>

<pre><code>FFFFF CCCCC c f 
</code></pre>

<p>Instead of the output your code produces (which was)</p>

<pre><code>FFFFF CCCCC c c 
</code></pre>

<p>This is not the OO way to do things, because <code>Cougar</code> <a href=""http://en.wikipedia.org/wiki/Is-a"" rel=""nofollow""><strong>is-a</strong></a> <code>Feline</code>. The behaviour you see (of the value changing in the super class) is because of that relationship. Finally, to keep the values distinct you would need to shadow the <code>Feline</code> type as above.</p>
"
25478489,"<p>I can't understand you real meaning of doing this.
If you really want to diff the type, you should declare the type in Cougar:</p>

<pre><code>public class Cougar extends Feline {
    public String type = ""c "";

    ...
}
</code></pre>
"
25751687,"<p>You need to use
<code>for(i =0; i&lt;100; i++)</code>
cuz your version is ended right away</p>
"
22407618,"<pre><code>public static boolean isSorted (double [] list){
    boolean isSorted=true;
    for(int i=1; i&lt;list.length; i++){
        if (list[i] &gt; list[i+1]){
        System.out.println(""Not Sorted"");
        isSorted = false;
    }
    }
    return isSorted;
}
</code></pre>
"
25788263,"<p>change your string like this</p>

<pre><code>String lang = ""fr,de,gb,nl,se,es"";
</code></pre>

<p>or change like @TheLostMoind said</p>
"
25885874,"<p>try changing <code>input</code> to <code>object</code> in your if statement. and <code>=</code> to <code>==</code></p>
"
25936908,"<p>what about simple answer </p>

<p>getthe size of the array legth.</p>

<pre><code>ArrayList arry = new ArrayList()&lt;String&gt;;
if(arry!=null) {
int last = arry.legth() -1  ;
//no loop proudly
arr[last];  
return last ;
}
</code></pre>
"
22428214,"<p>I think <code>n= 10^9</code> points towards some logic , not just trying all possible cases and all permutations.<br>
Here is what i got :  </p>

<pre><code>1 -&gt; 0  
2 -&gt; 1  
3 -&gt; 1  
4 -&gt; 2  
5 -&gt; 3  
6 -&gt; 2  
7 -&gt; 3  
8 -&gt; 3  
9 -&gt; 2  
10 -&gt;3  
11 -&gt;4  
12 -&gt;3  
13 -&gt;4  
14 -&gt;4  
15 -&gt;3  
16 -&gt;4  
17 -&gt;5  
18 -&gt;3  
19 -&gt;4  
20 -&gt;4  
21 -&gt;4  
</code></pre>

<p>So i think fornula is :  </p>

<pre><code>    while(n!=1)
    {
     if(n%3==0)
       ans += 1  and  n/=3 
      else if (n%2==0)
       ans += 1  and  n/=2
      else n--  , ans+=1
    }  
</code></pre>

<p><em>GIVES ANSWER FOR N = 1000000000 in 0.06 seconds .</em> <a href=""http://ideone.com/0pfKoz"" rel=""nofollow"">http://ideone.com/0pfKoz</a></p>

<p>//
<strong>PREVIOUS INCORRECT LOGIC :</strong> (fails for n=30 easily as pointed by @Dukeling)</p>

<pre><code>while(n!=1)
{
 if(n%2==0 &amp;&amp; n%3==0)
   ans += p1 + p2   and  n=1  {where n = 2^p1 * 3^p2 }
  else if (n%2!=0 &amp;&amp; n%3 !=0)
   n--
  else if (n%2==0 &amp;&amp; n%3 !=0)
   ans+=1  and n/=2 
  else if (n%2!=0 &amp;&amp; n%3 ==0)
   ans+=1  and n/=3 
}   
</code></pre>

<p><strong>Please clarify if you have got the answer to this question , and try to see if my logic works .</strong></p>
"
22664388,"<p>That's easy, do it this way:</p>

<pre><code>Boolean b = false;
for(String x: list1){
    for(String y: list2){
        if(x.equalsIgnoreCase(y)){
           System.out.print((b ? "","" : """") + list1.indexOf(x));
           b = true;
        }
    }
}
</code></pre>
"
26015440,"<p>This can also be achieved using ""printf"" with out specifying the format. the code goes as below:</p>

<pre><code>if (System.out.printf(""Hello"") == null) {
    System.out.print(""Hello"");
} else {
    System.out.println(""World"");
}
</code></pre>
"
26243606,"<pre><code>public static void main (String args[]){
    int leapYear = 2001; // initialize leapYear variable to 2001

    while (leapYear &lt;= 2100){
        for (int x = 0; x &lt; 10; x++){ // print ten leap years per line
            if (leapYear &gt; 2100){ // if leapYear is over 2100, stop printing
                break;
            }
            System.out.print(leapYear + "" "");
            leapYear = leapYear + 4;
        }// end of for loop
        System.out.println("" "");
        int x = 0;
    } // end of if statement

}// end of main method
</code></pre>
"
22616932,"<p>The ""do while"" isn't the best type of loop to use here, because you need to check the condition in the middle of the repeated part, not at the end.  It's possible to do this with ""do while"", but you end up checking the condition twice.</p>

<p>In order not to repeat code, there's a good alternative.  The first line means ""loop forever"", but it will actually just loop until the ""break"" is encountered, which happens when the user enters correct input.</p>

<pre><code>for(;;) {
    System.out.println(""\nPlease enter the floor you are on: "");
    current_Floor = in.nextInt();   
    if (current_Floor &lt;= MAX_FLOORS) {
        break;
    }

    System.out.println(""Please enter a floor which is less than 8"");
}
</code></pre>
"
26213576,"<p>Your code works</p>

<pre><code>Enter the key number to search for in the array: 
7
found 7 at row 1 column 2
Process finished with exit code 0
</code></pre>

<p>have a look of Collections Framework</p>
"
22628588,"<p>use <code>? :</code> operator, else will not be required.
So that same code will be eliminated and also there will not be another method or <code>goto</code> in picture.</p>

<p><strong>Note :</strong> However this will not print exact result if <code>a &gt; 5</code> and <code>b &lt; 7</code>.
Extra <code>""I don't like your variables""</code> will not be printed in that case.</p>

<p>Example :</p>

<pre><code>string result = ""I don't like your variables"";

if (a &gt; 5)
{
    result = (b &gt; 7) ? ""Even better, b &gt; 7"" : ""Very well, a &gt; 5"";
}

Print(result);
</code></pre>
"
22631814,"<p>The same program in Dart can be written as following in Java:</p>

<pre><code>import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Demonstration
{
  public Demonstration()
  {
    ArrayList&lt;List&lt;Integer&gt;&gt; lists = getListOfList();

    printList(lists);
  }

  // Here's the function implementation you want.
  private ArrayList&lt;List&lt;Integer&gt;&gt; getListOfList()
  {
    ArrayList&lt;List&lt;Integer&gt;&gt; list = new ArrayList&lt;&gt;();

    final int maxSize = 6;

    // The 4 nested loops still take constant time as the value of `maxSize` is constant.
    // I would have created a permutation based solution only if maxSize varied.
    for (int i = 0; i &lt; maxSize; ++i)
    {
      for (int j = 0; j &lt; maxSize; ++j)
      {
        for (int k = 0; k &lt; maxSize; ++k)
        {
          for (int w = 0; w &lt; maxSize; ++w)
          {
            list.add(Arrays.asList(i, j, k, w));
          }
        }
      }
    }

    return list;
  }

  private void printList(ArrayList&lt;List&lt;Integer&gt;&gt; lists)
  {
    lists.forEach(System.out::println); // JDK 8 standard
  }

  public static void main(String[] args)
  {
    new Demonstration();
  }
}
</code></pre>

<p>One can even write the program using a 2D array of ints. Here's how to do that: </p>

<pre><code>public class Demonstration
{
  public Demonstration2()
  {
    int[][] lists = getListOfList();

    printList(lists);
  }

  private int[][] getListOfList()
  {
    final int maxSize = 6;

    int[][] list = new int[maxSize * maxSize * maxSize * maxSize][];
    int rowIndex = 0;

    for (int i = 0; i &lt; maxSize; ++i)
    {
      for (int j = 0; j &lt; maxSize; ++j)
      {
        for (int k = 0; k &lt; maxSize; ++k)
        {
          for (int w = 0; w &lt; maxSize; ++w)
          {
            list[rowIndex++] = new int[]{i, j, k, w};
          }
        }
      }
    }

    return list;
  }

  private void printList(int[][] lists)
  {
    for (int[] list : lists)
    {
      for (int item : list)
      {
        System.out.print(item + "" "");
      }

      System.out.println();
    }
  }

  public static void main(String[] args)
  {
    new Demonstration();
  }
}
</code></pre>
"
23093479,"<p>Overriding hashCode() and equals() methods and using a set collection:</p>

<pre><code>@Override
public int hashCode() {
    return groupId;
}
@Override
public boolean equals(Object o) {
        return ((o instanceof MyThing) &amp;&amp; (groupId == ((MyThing)o).groupId));
}
static MyThing[] noRepetition(MyThing[] array) {
        Set&lt;MyThing&gt; set = new HashSet&lt;MyThing&gt;();
        for (MyThing s : array) {
                set.add(s);
        };
        return set.toArray(new MyThing[set.size()]);
}
</code></pre>
"
22653737,"<p>Try this 
Courtesy : <a href=""http://www.fluffycat.com/Java/HashMaps/"" rel=""nofollow"">http://www.fluffycat.com/Java/HashMaps/</a></p>

<p>HashMap methods to alter what is in the HashMap</p>

<pre><code>Object objectReplacedForKey = 
  hashMapName.put(objectKey, objectToAdd); 

hashMapName.putAll(mapToAdd); 
hashMapName.remove(keyObject);  
hashMapName.clear();
</code></pre>
"
22680434,"<pre><code>    for(int i = 100; i &lt; 200; i++) {
        if (i&gt;100 &amp;&amp; i % 10 == 0) {
              System.out.println();
        }
        System.out.print(i);
        System.out.print("" "");
    }
</code></pre>
"
22680502,"<p>try this</p>

<pre><code>      int counter=1;
        for(int i = 100; i &lt; 200; i++) {
             if(counter==10)
    {   
counter=1;
 System.out.println(""\n"");
    }
    else
    {
            System.out.print(i++ + ""  ""); 
            counter++;   
     }   

            System.out.println("""");    
        }
</code></pre>
"
22713666,"<p>You could use one simple one of the following</p>

<pre><code>String[] str = {""Hello"",""World!!!!"",""Java""};
String concat ="""";
for(String s : str)
{
    concat+=s;
}
System.out.println(concat);
</code></pre>

<p>Or using <code>StringBuilder</code> which is more efficient like this:</p>

<pre><code>String[] str={""Hello"",""World!!!!"",""Java""};
StringBuilder sb = new StringBuilder();
for(String s : str)
{
    sb.append(s);
}
System.out.println(sb.toString());
</code></pre>
"
22713678,"<p>You dont need Arraylist for concatenation. Try the below approach</p>

<pre><code>    String[] str={""Hello"",""World!!!!"",""Java""};
    StringBuilder finalString = new StringBuilder();
    for(int i=0;i&lt;str.length;i++)
    {
        finalString.append(str[i]);
    }
    System.out.println(finalString);
</code></pre>
"
26694039,"<p>Use This Code,The java.util.Collections.sort() method use the best algo for sorting:</p>

<pre><code>import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;


class Point implements Comparable&lt;Point&gt;{
private int x,y;

public int getX() {return x;}
public void setX(int x) {this.x = x;}

public int getY() {return y;}
public void setY(int y) {this.y = y;}

@Override
public String toString() {
    return""(""+x+"",""+y+"")"";
}

@Override
public int compareTo(Point o) {
    if(this.x==o.x)
        return 0;
    else
        if(this.x&gt;o.x)
            return 1;
        else
            return -1;


}

}

public class SortPoint {


public static void main(String[] args) {
    ArrayList&lt;Point&gt;sortedPoints=new ArrayList&lt;Point&gt;();

    Scanner in=new Scanner(System.in);

    for(int i=0;i&lt;5;i++){
        Point p=new Point();
        p.setX(in.nextInt());
        p.setY(in.nextInt());
        sortedPoints.add(p);
    }
    in.close();
    Collections.sort(sortedPoints);
    System.out.print(sortedPoints);
}
</code></pre>

<p>}</p>

<pre><code>Provide Input as:
1 3
2 2
2 1
1 1
1 2
</code></pre>

<p>You'll get desired output.</p>
"
23431680,"<pre><code>public class PrimeNumber {

public static void main(String[] args) {
    // TODO Auto-generated method stub
    ArrayList a = new ArrayList();
    for (int i = 1; i &lt;= 100; ++i) {
        if (isPrime(i))
            a.add(i);
    }
    System.out.println(""List : "" + a);

}

public static boolean isPrime(int value) {
    if (value &lt;= 1)
        return false;


    if ((value % 2) == 0)
        return (value == 2);

    for (int i = 3; i &lt;= value - 1; i++) {
        if (value % i == 0) {
            return false;             
        }
    }     

    return true;
}

}
</code></pre>
"
23623185,"<pre><code>    min=100000
    max=999999
    ans=rand()%(max-min)+min
</code></pre>
"
22813946,"<p>Have you made sure, there is no timing issue? Make a break point before finding the element and look if your code runs fine. If there is a timing issue, use a an explicit Wait before clicking your button. Note also, that the button should be clickable (element must be visible AND enabled) before actually clicking it. </p>

<p>a solution with explicit wait could look like this:</p>

<pre><code>By by = By.xpath(""//div[@class='btn magenta_s']/a/span"");
WebDriverWait w = new WebDriverWait(driver, timeout);
WebElement element = w.waitUntil(ExpectedConditions.elementToBeClickable(by);
element.click();
</code></pre>
"
26970461,"<p>You can write the last object as null.
And then iterate till you get a null at the reading side.
e.g.</p>

<pre><code>while ((object = inputStream.readObject()) != null) {
  // ...
}
</code></pre>
"
27130825,"<pre><code>public class MyClass {

    public static void main(String[] args) {
        int number = 1;
        showSomething(number
    }

    public void showSomething(int number){
        System.out.println(""This is my method ""+number+"" created by me."");
    }
}
</code></pre>
"
27123683,"<p>String pool as it is pool of string stored in heap for exp:      </p>

<pre><code>String s=""Test"";
String s1=""Test"";    
</code></pre>

<p>both gets stored in heap and refers to a single ""Test"" thus s1=s,
while </p>

<pre><code>String s=new String(""Test"");
</code></pre>

<p>is an object that also get stored in heap but different form s1=s
refer <a href=""http://www.journaldev.com/797/what-is-java-string-pool"" rel=""nofollow"">here</a></p>
"
23932773,"<pre><code>Print the flowersInVase before the recursive call. That will solve your confusion like below.

public static void emptyVase( int flowersInVase ) {
          if( flowersInVase &gt; 0 ) {
           // take one flower and


            System.out.println(flowersInVase);  // **** Moved the print Here **********


            emptyVase( flowersInVase - 1 ) ;




          } else {
           // the vase is empty, nothing to do
              System.out.println(""Hurray It's empty now.."");
          }
        }



public class RecursionPractice {

    public static void main(String[] args) {

        emptyVase(7);
    }
</code></pre>
"
27237448,"<p>I think you can use <a href=""https://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#parseInt(java.lang.String)"" rel=""nofollow""><code>Integer.parseInt(String)</code></a>.</p>
"
27286400,"<p>try casting like below</p>

<pre><code>WrappedConnectionJDK6 wc = (WrappedConnectionJDK6) connection;
connection = wc.getUnderlyingConnection();
</code></pre>
"
27354550,"<pre><code>Map.Entry&lt;String, String&gt; entry = hm.entrySet().iterator().next();
String result = entry.getKey() + "" = "" + entry.getValue()
</code></pre>
"
23387416,"<pre><code>public class JavaApplication55 {

    public static void main(String[] args) {

        int[] array ={234,435,567,768,123,456,789,789,5670,6789};
     for(int j =0;j&lt; array.length;j++){  
        for(int i =j+1;i &lt; array.length;i++ ){
        int temp;

            if(array[j]&gt;array[i]){

            temp =array[j];
            array[j] =array[i];

            array[i] =temp;

            }

            else{}


        }}





        for(int k =0;k&lt; array.length;k++){

            System.out.println(array[k]);

        }

    }
enter code here

}
</code></pre>
"
23513705,"<p><strong>In Java</strong>, where there is no operator overloading, there is no difference between <code>(p!=q)</code> and <code>!(p==q)</code>. <strong>In Java all operators are strictly defined. They follow the mathematical logic rules to the letter.</strong></p>

<p>However, in languages with operator overloading, like <code>C++</code>, these may not be equivalent, since the operators <code>!</code> and <code>!=</code> may be defined to do something which does not follow the rules of mathematical logic. </p>

<p>These would be translated to:</p>

<pre><code>(p!=q)  :   p.operator!=(q)
!(p==q) : ! p.operator==(q)
</code></pre>

<p>Notice the <code>!</code> operator is applied to a bool variable, not an object.</p>
"
27616303,"<pre><code>DataInputStream br=new DataInputStream(System.in);
System.out.println(""input a number"");
int n=Integer.parseInt(br.readLine(System.in));
</code></pre>
"
23602357,"<pre><code>public static boolean isAnagram(String str1, String str2) {
    if( str1.length() != str2.length() ) return false;
    int str1Tot = 0;
    int str2Tot = 0;
    for( int i = 0 ; i &lt; str1.length() ; i++) {
        str1Tot += str1.codePointAt(i);
        str2Tot += str2.codePointAt(i);
    }
    if( str1Tot == str2Tot ) return true;
    else return false;      
}
</code></pre>
"
27705273,"<p>I have also face this error in Logcat. For solve it that also take a 1 day but there is no any big error in our code as per we face.</p>

<p>Solution: Add that activity in Manifest.xml file of an application.</p>

<p>code:</p>

<pre><code>&lt;activity android:name=""com.example.youappname.activityname"" &gt; &lt;/activity&gt;
</code></pre>

<p>Add all the activities of app in Manifest like this.</p>

<p>Try and solve error.</p>
"
27915242,"<p><strong>(1) Syntax</strong></p>

<pre><code>if (conditionA &amp;&amp; conditionB) { return true; }

if (conditionA &amp;&amp; !conditionB) { return false;}
</code></pre>

<p><strong>(2) Syntax</strong></p>

<pre><code>if (conditionA) { 

    //Only conditionA is true you can write more code and other logic here
    if (conditionB) { 
        return true;
    } 
    //conditionB is true or false, you can write more code and other logic here
    return false;
}
</code></pre>

<p>Acutally these 2 Syntaxs are not same. <br/>As to your title question, there has no point to decide Which syntax is more correct from syntaxs same point?
<br/>
So, according to these differences, you should choose which syntax is meet your logic.
<br/>
Your logic might be answer for which syntax is more correct.</p>
"
27994532,"<p>Can also be written as:</p>

<pre><code>String getValue() {
    return new StringBuilder().toString();
}
</code></pre>
"
23844069,"<p>The value of english.lenght is always 10. As in this example:</p>

<pre><code>int[] english = new int [10];
</code></pre>

<p>It doesn't matter what data the english array holds, its lenght is always 10.
In order to do the proper calculation use the data, not the lenght of the array.</p>
"
28081621,"<pre><code>itemLayoutView.setOnClickListener(new View.setOnClickListener() {
    @Override
    public boolean onLongClick(View v) {
        Toast.makeText(v.getContext(), ""on item click"", Toast.LENGTH_SHORT).show();

        return true;
    }
});
</code></pre>

<p>Implement this inside ViewHolder constructor.</p>
"
28163725,"<p>Try</p>

<pre><code>Test[] t = new Test[20];
</code></pre>

<p>When you set t to null it tries to access an array that isn't there.</p>
"
28163749,"<p>In java, datatypes can be primitive or reference. Reference types are either Class or Interface type or Array type.
When you want to create an Array of objects, first you need to declare and instantiate the array Object itself and then instantiate the required objects of the class and assign them to the array object.</p>

<pre><code> ArrayDataType[] ArrayName=new ArrayDataType[Dimensions];
    for(int i=0;i&lt;Dimensions;i++){
    Arrayname[i]=new ObjectDataType();  
    \\ where the ObjectDatatype can be either ArrayDataType or SubType
    }
</code></pre>
"
28170305,"<p>Its just a Typo error in 'arrayOfInts'.</p>

<pre><code>public class SortaPP {

public static void main(String[] args) {
    // change to arraysOfInts
    int[] arraysOfInts = {42,97,3,689,14,1076,3000,8,632,327,976,4215};

    for(int i=arraysOfInts.length;--i&gt;=1;){   

        for(int j = 0;j&lt;i;j++){
            if(arraysOfInts[j] &gt; arraysOfInts[j+1]){
                int temp = arraysOfInts[j];
                arraysOfInts[j] = arraysOfInts[j+1];
                arraysOfInts[j-1] = temp;
               // You will get ArrayIndexOutOfBoundsException: -1

                for (int k = 0; k &lt; arraysOfInts.length; k++){
                    System.out.print(arraysOfInts[k]+"""");
                    System.out.println();
                }   
            }
        }
    }
}                
}
</code></pre>
"
28170523,"<p>1) advise to read some books about algorithms, for starting <a href=""http://www.cin.ufpe.br/~grm/downloads/Data_Structures_and_Algorithms_in_Java.pdf"" rel=""nofollow"">Data Structures and Algorithms</a> </p>

<p>2) As was said in comments array<strong>s</strong>OfInts is not the same arrayOfInts</p>

<p>3) and one more moment, your third <code>for</code>:  </p>

<pre><code> for (int i = 0; i &lt; arrayOfInts.length; i++){
   System.out.print(arrayOfInts[i]+"""");
   System.out.println();
 }
</code></pre>

<p>1. you will get error: <code>Duplicate local variable i</code>
2. you will get: <code>java.lang.ArrayIndexOutOfBoundsException</code> </p>

<p>so if you want use third for use:                   </p>

<pre><code> for (int k = 0; k &lt; arrayOfInts.length-1; k++){
     System.out.print(arrayOfInts[k]+"""");
     System.out.println();
 }  
</code></pre>

<p>4)  <code>arrayOfInts[j-1]</code> very bad, because if <code>arrayOfInts[j] &gt; arrayOfInts[j+1]</code> will return <code>true</code> when <code>j == 0</code> you will get <code>java.lang.ArrayIndexOutOfBoundsException:</code>, because no element with -1 index</p>
"
23993916,"<p>Here is code given below to convert a List into a comma separated string without iterating List explicitly for that you have to make a list and add item in it than convert it into a comma separated string</p>

<p>Output of this code will be: Veeru,Nikhil,Ashish,Paritosh </p>

<p>instead of output of list [Veeru,Nikhil,Ashish,Paritosh]</p>

<pre><code>String List_name;
List&lt;String&gt; myNameList = new ArrayList&lt;String&gt;();
myNameList.add(""Veeru"");
myNameList.add(""Nikhil"");
myNameList.add(""Ashish"");
myNameList.add(""Paritosh"");

List_name = myNameList.toString().replace(""["", """")
                    .replace(""]"", """").replace("", "", "","");
</code></pre>
"
28182984,"<p>Here's what I came up with. The basic idea is to find the minimum number and then invalidate this digit. Unfortunately that means that the original digit data is lost but you can always restore it from the user input <code>int</code>:</p>

<pre><code>int currentMin;

System.out.print(""The largest number with these digits is: "");

while(true) {
  currentMin = Math.min(digit1, Math.min(digit2, Math.min(digit3, Math.min(digit4, digit5))));
  //Invalidate the min digit
  if (currentMin == digit1) digit1 = Integer.MAX_INT;
  if (currentMin == digit2) digit2 = Integer.MAX_INT;
  if (currentMin == digit3) digit3 = Integer.MAX_INT;
  if (currentMin == digit4) digit4 = Integer.MAX_INT;
  if (currentMin == digit5) digit5 = Integer.MAX_INT;
  if (currentMin == Integer.MAX_INT) {
    break;
  } else {
    System.out.print(currentMin + "" "");
  }
}
</code></pre>
"
24986983,"<p>I suggest You to change those <code>if</code> statements into one simple <code>for</code> loop with simple <code>int[]</code> vector. This solution is much more elegant and flexible. Additionally, You initialized and not used anywhere <code>int maxValue = max3(a, b, c);</code> in Your code.</p>

<pre><code>public class Demo {
    public static void main(String args[]) {
        int[] numbers = new int[] {2, 3, 4};

        System.out.println(maxValue(numbers));
    }

    public static int maxValue(int[] n) {
        int max = n[0];
        for (int i = 1; i &lt; n.length; i++) {
            if (n[i] &gt; max) {
                max = n[i];
            }
        }
        return max;
    }
}
</code></pre>

<p>But let's bow for a moment on the problem of methods implementation in Java.</p>

<p>At the begining of Your journey through the vastness of the Java realm You should get familiar with two types of methods: 1) <strong>void methods</strong>, and 2) <strong>return methods</strong>. The first ones are responsible for doing something without returning any value. We can for example use them for setting values of the fields of our application, initializing GUI, or other operations. The use of the <strong>void method</strong> can look like this:</p>

<pre><code>/* method declaration */
void setValue(int value) {
    someField = value;
}

/* method invocation */
setValue(5);
</code></pre>

<p>After invocation of <code>setValue(5)</code> the value of the <code>someField</code> object will be <code>5</code>. However, you have to remember about type compatibility, so in this case <code>someField</code> can not be e.g of <code>String</code> type.</p>

<p>Second method type mentioned above, i.e <strong>return method</strong> is very useful, when you expect the method to give You an output, e.g in result of some operations conducted on the data You've given to Your method. But of course it's not necessary, to provide for the <strong>return method</strong> an input. Anyway, the use of <strong>return method</strong> can look like this:</p>

<pre><code>/* method returns text You've given to it */
String getText(String text) {
    return text;
}

/* method returns result of addition of three given int's */
int calculate(int a, int b, int c) {
    return a + b + c;
}

/* method return a random number */
int createRandomNumber() {
    Random random = new Random();
    return random.nextInt();
}
</code></pre>

<p>You can easily see, that there is plenty of space for improvisation. Basicaly and in summary, <strong>void methods</strong> can work with given objects, for example can set values and conduct other operations, but thay don't return any STRAIGHT results You can work with. <strong>Return methods</strong>, from the other hand, provide You physical results, which You can use in further operations, or even in other methods, for example:</p>

<pre><code>import java.util.Random;

public class Demo {

    private static int someValue;

    public static void main(String args[]) {

        setValue(calculate(
        createRandomNumber(), 
        createRandomNumber(), 
        createRandomNumber()));

        System.out.println(someValue);
    }

    public static void setValue(int value) {
        someValue = value;
    }

    public static int calculate(int a, int b, int c) {
        return a + b + c;
    }

    public static int createRandomNumber() {
        Random random = new Random();
        return random.nextInt();
    }
}
</code></pre>
"
24111376,"<p>The problem with recursion is that to understand recursion you must first understand recursion.</p>

<p>A recursive function is a function which calls itself, or calls a function which ultimately calls the first function again.</p>

<p>You have the recursion part right, since your function calls itself, and you have an ""escape"" clause so you don't get infinite recursion (a reason for the function not to call itself).</p>

<p>What you are lacking from your example though is the actual operation you are performing.</p>

<p>Also, instead of passing a counter, you need to pass your counter and the value you are multiplying, and then you need to return said multiplied value.</p>

<pre><code>public static long recFact(int n, long val)
{
    if(n==1)
    {
        return val;
    }
    else
    {
        return recFact(n-1, val) * n;
    }
}
</code></pre>
"
28448853,"<p>Try Below code </p>

<pre><code> public static void main(String[] args) {
    int[] i = {1,10,50};
    System.out.println(Arrays.toString(i));
  }
</code></pre>
"
28343238,"<p>put this one into your onClic:</p>

<pre><code>moveTaskToBack(true);
    finish()
</code></pre>
"
28469414,"<pre><code>for(int i=0;i&lt;array1.length;i++)
        {
        for(int j=0;j&lt;array2.length;j++)
            {
                if(!array1[i].equals(array2[j]))
                    {

                    if( array2.length==j+1)
                    {
                    array3[k]=array1[i];
                        k++;

                }

                }
                else{
                    break;
                }

            }
        }
</code></pre>
"
28396530,"<p>The simplest way to convert array into JSON is:</p>

<pre><code>JSONArray jsonArray = new JSONArray(Arrays.asList(myArray));
</code></pre>
"
28396558,"<p>I assume you want the following:</p>

<pre><code>StringBuilder builder = new StringBuilder();
for (int i = 0; i &lt; array1.length; i++)
{
    builder.append(""\"""");
    builder.append(array1[i]);
    builder.append(""\"":\"""");
    builder.append(array2[i]);
    builder.append(""\"""");
    if (i &lt; (array1.length - 1))
        builder.append("", "");
}
String result = builder.toString();
</code></pre>
"
25051289,"<p>There is a simple code to generate a time with AM/PH   here is a code i give you please check this</p>

<p>import java.text.SimpleDateFormat;
import java.util.Date;</p>

<p>public class AddAMPMToFormattedDate {</p>

<p>public static void main(String[] args) {</p>

<pre><code>//create Date object
Date date = new Date();

 //formatting time to have AM/PM text using 'a' format
 String strDateFormat = ""HH:mm:ss a"";
 SimpleDateFormat sdf = new SimpleDateFormat(strDateFormat);

 System.out.println(""Time with AM/PM field : "" + sdf.format(date));
</code></pre>

<p>}
}</p>
"
25080589,"<p>Few suggestions which might help you (not related to the specific question).</p>

<ol>
<li>Choose a meaningful class name rather than <code>While_Loop</code> .</li>
<li>Do, <code>Scanner input = new Scanner(System.in);</code> before the start of the loop.</li>
<li>As soon as you read each line, do the following.</li>
<li>Split the line using <code>""\\s+""</code> .</li>
<li>Create a HashMap with Key as Count (Integer) and Value as a list of Words with that count. Create this <em>outside the loop</em>.</li>
<li><em>For each</em> split word,,get the length . and check if the map already <em>contains</em> the count, get the list (value), add he current word to it. else, add a new entry with the word as the single entry in the list.</li>
<li>Get the <code>keySet</code> of the map, add values of all keys i.e, *count * number of elements in the list*. then divide by total number of elements.</li>
<li>And yes, I know this is a <em>very big</em> change (something you might as well ignore..). But this is the right way to go.</li>
</ol>
"
28534252,"<p>The first problem I notice with your code is that it will <code>return 1</code> if the first digit of the number matches the digit your looking for.  What if you pass the number 1145?  It would return 1 instead of 2.  </p>

<p>A good base case would be checking to see if the number passed is valid (if not return 0), otherwise iterate through each digit (recursively) using a counter to count how many times the digit occurs.  I noticed @Jean-François Savard posted a pretty good code example for you.   </p>
"
28534419,"<p>Of course if you didn't need to use recursion it is a one liner using <a href=""http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html"" rel=""nofollow"">StringUtils</a></p>

<pre><code>StringUtils.countMatches(Integer.toString(number), Integer.toString(digit));
</code></pre>

<p>I realise this is not answering the question but you haven't specified why you would want / need to use recursion in this case... Is it homework perhaps?</p>
"
28955048,"<p>Try this code:</p>

<p>If your data type is an array of integer:</p>

<pre><code>int my_array={1,2,3,4,5};

for(int i=0; i &lt; my_array.length; i++) {
    System.out.print(my_array[i] + "","");//this line will print the value with a coma (,)
}
</code></pre>

<p>If your data type is a string;</p>

<pre><code>String my_number=""1 2 3 4 5"";

for(int i=0; i &lt; my_number.length; i++){
    if(my_number.toCharArray()[i]!=' ')
       System.out.print(my_number.toCharArray()[i]+"","");
}
</code></pre>

<p>Or,</p>

<pre><code>String my_number=""1 2 3 4 5"";
my_number = my_number.replace(' ', ',');//this method (replace) will replace all space(' ') by coma(',')
System.out.println(my_number);
</code></pre>
"
24627261,"<pre><code>public static int sumOfMultiples(int i, int j, int limit){
    int s = --limit / i, t = limit / j, u = limit / (i * j);
    return (i*(s*(s+1)/2)) + (j*(t*(t+1)/2)) - ((i*j)*(u*(u+1)/2));
}
</code></pre>

<p>Test</p>

<pre><code>actual = Prob1.sumOfMultiples(3, 5, 1000);
assertEquals(233168, actual);
</code></pre>
"
28892819,"<p>I think You want to wait a thread.So you can Put this line inside your run() method.</p>

<pre><code>Thread.sleep(1000);
</code></pre>

<p>So every thread will held for 1 sec while completing execution.Hope this will work.Try it and let me know.</p>
"
24627349,"<p>i resolved using List instead of Set:</p>

<pre><code>private List&lt;Categories&gt; children = new ArrayList&lt;Categories&gt;();
</code></pre>
"
29037848,"<p>this kind of problematics are usually really easy to solve using recursive way of thinking. The solution could look like :</p>

<pre><code>public int rom2int(String s)
{               
    if(s.length() == 0)   
        // no string --&gt; 0
        return  0;
    else if(s.length() == 1)
        // One Character --&gt; Value of Character
        return valueOf(s.charAt(0)); 
    else if((valueOf(s.charAt(0)) &gt; valueOf(s.charAt(1))) ) 
        // The value is NOT followed by a greater value --&gt; We had the value
        return rom2int(s.substring(1, s.length())) + valueOf(s.charAt(0));      
    else if(valueOf(s.charAt(0)) &lt;= valueOf(s.charAt(1)) )
        // The value is followed by a greater (or same) value --&gt; We substract the value
        return rom2int(s.substring(1, s.length())) - valueOf(s.charAt(0));
    else
        // Shouldn't Happen. 0 as neutral element in in a Sum.
        return 0;
}
</code></pre>

<p>Even if recursive solution is forbidden, to my mind it is simpler to un-recursive this algorithm than find the procedural one at first try =)</p>

<p>Edit :
MY Results :</p>

<blockquote>
  <p>Value of MCCMIIX  is : 1808</p>
  
  <p>Value of IIX is : 8</p>
  
  <p>Value of IVX is : 4</p>
  
  <p>Value of IIVVL is : 38</p>
</blockquote>
"
24690213,"<p>The below line will throw Exception because you are trying to access array index which is greater then it's size. 
System.out.print(cellPhoneNumbers[i][phones])</p>

<p>Use <code>println</code> outside the for loop to print all the elements in separate lines.</p>

<pre><code>            for (i = 0; i &lt; ROWS; i++)
            {
                int phones = Integer.parseInt(cellPhoneNumbers[i][1]);
                for (j = 0; j &lt; COL; j++)
                {
                    System.out.print(cellPhoneNumbers[i][j] + "" "");
                }
                System.out.println("""");
            }
</code></pre>

<p><code>System.out.println()</code> is to print the line and also add new line character at the end
so you print anything after that will be moved to the next line whereas <code>System.out.print()</code> does not put a new line char at the end.</p>
"
25494474,"<p>Right, many alternatives listed, the easiest and cleanest would be just using the enhanced for statement as below, the Expression is of some type that is iterable. </p>

<pre><code>for ( FormalParameter : Expression ) Statement
</code></pre>

<p>For example, to iterate through, List ids, we can simply so, </p>

<pre><code>for (String str : ids) {
    //do something 
}
</code></pre>
"
29351409,"<pre><code>public class ThreadScenarioTest {

    public static void main(String[] args) {
        EvenOddService evenOddService = new EvenOddService();
        Runnable oddRunnable = () -&gt; {
            while (true) {
                evenOddService.setOddThread(true);
                evenOddService.printOddNumber();
            }
        };
        Runnable evenRunnable = () -&gt; {
            while (true) {
                evenOddService.setOddThread(false);
                evenOddService.printEvenNumber();
            }
        };
        Thread oddThread = new Thread(oddRunnable);
        Thread evenThread = new Thread(evenRunnable);
        oddThread.start();
        evenThread.start();
    }
}

public class EvenOddService {

    private int counter = 0;
    private boolean isOddThread;

    public boolean isOddThread() {
        return isOddThread;
    }

    public void setOddThread(boolean isOddThread) {
        this.isOddThread = isOddThread;
    }

    public synchronized void printOddNumber() {
        if (isOddThread) {
            try {
                System.out.println(""odd  :: "" + ++counter);
                notifyAll();
                Thread.sleep(1000);
                wait();
            } catch (InterruptedException exception) {
            }
        }
    }

    public synchronized void printEvenNumber() {
        if (!isOddThread) {
            try {
                System.out.println(""even :: "" + ++counter);
                notifyAll();
                Thread.sleep(1000);
                wait();
            } catch (InterruptedException exception) {
            }
        }
    }
}
</code></pre>
"
24769984,"<p>Since most of the answers here are in Java, I'm posting the answer in C++ (since I am bored right now and nothing more productive to do :) But please, no downvotes except if code is wrong. 
Known-issues = will not handle overflow </p>

<p>Code:</p>

<pre><code>#include &lt;unordered_map&gt;
int convert_roman_2_int(string&amp; str)
    {
    int ans = 0;
    if( str.length() == 0 )
        {
        return ans;
        }

    std::unordered_map&lt;char, int&gt; table;
    table['I'] = 1;
    table['V'] = 5;
    table['X'] = 10;
    table['L'] = 50;
    table['C'] = 100;
    table['D'] = 500;
    table['M'] = 1000;

    ans = table[ str[ str.length() - 1 ] ];

    for( int i = str.length() - 2; i &gt;= 0; i--)
        {
        if(table[ str[i] ] &lt; table[ str[i+1] ] )
            {
            ans -= table[ str[i] ];
            }
        else
            {
            ans += table[ str[i] ];
            }
        }

    return ans;
    }
</code></pre>

<p>// test code</p>

<pre><code>void run_test_cases_convert_roman_to_int()
    {
    string roman = ""VIII"";
    int r = convert_roman_2_int(roman);
    cout &lt;&lt; roman &lt;&lt; "" in int is "" &lt;&lt; r &lt;&lt; endl &lt;&lt; flush;

    roman = ""XX"";
    r = convert_roman_2_int(roman);
    cout &lt;&lt; roman &lt;&lt; "" in int is "" &lt;&lt; r &lt;&lt; endl &lt;&lt; flush;

    roman = ""CDX""; //410
    r = convert_roman_2_int(roman);
    cout &lt;&lt; roman &lt;&lt; "" in int is "" &lt;&lt; r &lt;&lt; endl &lt;&lt; flush;

    roman = ""MCMXC""; //1990
    r = convert_roman_2_int(roman);
    cout &lt;&lt; roman &lt;&lt; "" in int is "" &lt;&lt; r &lt;&lt; endl &lt;&lt; flush;

    roman = ""MMVIII""; //2008
    r = convert_roman_2_int(roman);
    cout &lt;&lt; roman &lt;&lt; "" in int is "" &lt;&lt; r &lt;&lt; endl &lt;&lt; flush;

    roman = ""MDCLXVI""; //1666
    r = convert_roman_2_int(roman);
    cout &lt;&lt; roman &lt;&lt; "" in int is "" &lt;&lt; r &lt;&lt; endl &lt;&lt; flush;
    }
</code></pre>
"
25744883,"<p><code>Iterator</code> is for iterating, not adding objects.</p>

<p><code>List</code> on the other hand is iterable (therefore it has <code>Iterator</code>) but also it is able to manage entities, therefore the <code>add</code>.</p>

<p>See definition of <code>Iterable</code> and <code>List</code> to see what is their purpose.</p>
"
30162169,"<p><code>#include&lt;stdio.h&gt;</code> means copy the contents of stdio.h in this file, 
while <code>import java.util.ArrayList</code> means if you cann't find a class in this file look into above mentioned import location. Java imports do not increase size of your file.</p>
"
24794365,"<p>You can go this way:</p>

<p>First find the largest no. in the matrix, and then go for the location of that max no. in the matrix and finally checking the neighbours will solve the issue of finding #.</p>

<pre><code>a = max(matrix)
[r,c] = find(matrix == a)
</code></pre>

<p>then check for neighbors with r+/-1 and c+/-1 and u will find #.</p>
"
25865520,"<p>Create a Thread class and another Class for your methods</p>

<p>Now:</p>

<pre><code>public class ThreadTest implements Runnable {

    private int functionNumber;
    private int time2start;
    private YourClass obj;

    public ThreadTest(int functionNumber, int time2start, YourClass obj) {
        this.functionNumber = functionNumber;
        this.time2start = time2start;
        this.obj = obj;
    }

    public void run() {
        try {
            Thread.currentThread().sleep(time2start);
        } catch (Exception ex) {
        }//Time Delay before executing methods
        switch (functionNumber) {
            case 1:
                obj.runFirst();
                break;
            case 2:
                obj.runSecond();
                break;
            case 3:
                obj.runThird();
                break;
            case 4:
                obj.runFourth();
                break;
            //keep adding
        }
    }
}
</code></pre>

<p><br/><br/>then Class for your methods :</p>

<pre><code>public class YourClass {

    public void runFirst() {
        System.out.println(""First method"");
    }

    public void runSecond() {
        System.out.println(""Second method"");
    }

    public void runThird() {
        System.out.println(""Third method"");
    }

    public void runFourth() {
        System.out.println(""Fourth method"");
    }

    public void runFifth() {
        System.out.println(""Fifth method"");
    }

    public void runSixth() {
        System.out.println(""Sixth method"");
    }
}
</code></pre>

<p><br/><br/>Now this is the method for onClick event for the button:</p>

<pre><code>//on button click

ThreadTest th1 = new ThreadTest(1, 0, obj);//here obj is YourClass
ThreadTest th2 = new ThreadTest(2, 65000, obj);//65 SECONDS
//... keep adding

Thread thread1 = new Thread(th1);
Thread thread2 = new Thread(th2);
//...keep adding

thread1.start();
thread2.start();
//...keep adding
</code></pre>
"
25046380,"<p>Why don't you use <code>Arrays.sort()</code> and return the first element of the array?</p>

<pre><code>//Snippet
void minInArray(){
    int[] arr = new int[]{55,42,11,20,584,63,21,27,84,96,32,30};
    int[] cArr = Arrays.copyOf(arr, arr.length);

    Arrays.sort(cArr);
    int idx = Arrays.asList(arr).indexOf(cArr[0]);
    String s = new StringBuilder(""The min value is: "")
               .append(cArr[0])
               .append("" located at index: "")
               .append(idx)
               .toString();
    System.out.println(s);
}
</code></pre>
"
25967333,"<p>When there aren't any curly braces around around code after a for statement in Java, the very next line is the only line processed as part of the for statement.  In this case, the for is like a function that calls the next line of code, which is a for statement that then calls the next line of code.  So the first for calls the second for which evaluates to see if the two sides are the same, and if they aren't then it kicks back up to the second for which continues incrementing itself until it finishes and then it returns to the first for, which increments, and calls the second for... and so on.  That code seems like it's partially broken, though, since it would have to have all numbers in numeric order, and it doesn't check anything in the middle.</p>

<p>For instance:<br>
<code>{1, 2, 3, 1} //evaluates to true because 1-1=0, although it should be false</code><br>
<code>{6, 2, 2, 3} //evaluates to true because 6-3-2=0, although it should be false</code><br>
<code>{2, 3, 4, 6} //evaluates to true because 2+3-6=0, although it should be false</code><br></p>
"
25168153,"<p>Concurrency (the <code>Thread</code> class and such) is an added feature in v1.0 of <a href=""http://en.wikipedia.org/wiki/Java_%28programming_language%29"" rel=""nofollow"">Java</a>. <code>i++</code> was added in the beta before that, and as such is it still more than likely in its (more or less) original implementation.</p>

<p>It is up to the programmer to synchronize variables. Check out <a href=""http://docs.oracle.com/javase/tutorial/essential/concurrency/"" rel=""nofollow"">Oracle's tutorial on this</a>.</p>

<p>Edit: To clarify, i++ is a well defined procedure that predates Java, and as such the designers of Java decided to keep the original functionality of that procedure.</p>

<p>The ++ operator was defined in B (1969) which predates java and threading by just a tad.</p>
"
25294940,"<p>You can replace the reference (!) to a String as often as you like:</p>

<pre><code>String A = ""Test"";
A = A.toUpperCase(); //will make A upper case
A = A.substring( 1 ); 
</code></pre>

<p>and so on. Excess usage of this may not be the best approach - it depends on the context.</p>

<p>Since some people seem to think that this can't be done with a String passed through a method:</p>

<pre><code>String modify( String x ){
    x = x.toLowerCasae();
    x = x.substring( 1 );
    return x;
}
</code></pre>

<p>and the call must, of course replace the original String reference.</p>

<pre><code>String tomod = ""abc"";
tomod = modify( tomod );
</code></pre>

<p>Three are, of course, classes better suited to this kind of String modification.</p>
"
25442172,"<p>OK I got a codeable example that's pretty easy.</p>

<pre><code>public class TestingThingsOut {

public static void main(String [] args) {
    HashMap&lt;Integer, String&gt; myMap = new HashMap&lt;Integer, String&gt;();

    myMap.put(123, ""hello"");
    myMap.put(234, ""Bye"");
    myMap.put(789, ""asdf"");

    System.out.println(myMap); // it says:
                                  {789=asdf, 234=Bye, 123=hello}

    System.out.println(myMap.size()); // it says: ""3""

    for (Entry&lt;Integer, String&gt; entry : myMap.entrySet()) {
        if (entry.getValue().contains(""hello"")) {
            myMap.remove(entry);
        }
    }

    System.out.println(myMap); // it says:
                                  {789=asdf, 234=Bye, 123=hello}

    System.out.println(myMap.size()); // it says: ""3"" again
}
</code></pre>

<p>}</p>
"
26338158,"<p>Perhaps you meant this?</p>

<pre><code>public static void main(String[] args) {
    Long amount = 67890L;
    NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(""en"", ""US""));
    String moneyString = formatter.format((double) amount / 1000);
    System.out.println(moneyString);
}
</code></pre>

<p>This code will print:</p>

<p>$67.89</p>
"
26338251,"<p>Use <code>BigDecimal</code> for formatting instead of <code>Long</code>:</p>

<pre><code>BigDecimal bd = BigDecimal.valueOf(amount, 3);
NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(""en"",""US""));
formatter.setMinimumFractionDigits(3);
String moneyString = formatter.format(bd);    
System.out.println(moneyString);
</code></pre>
"
26338348,"<p>This should work :</p>

<pre><code>DecimalFormatSymbols symbols = new DecimalFormatSymbols(new Locale(""en"", ""US""));
symbols.setDecimalSeparator(',');
symbols.setGroupingSeparator('.'); 
DecimalFormat df = new DecimalFormat(""$#,##0"", symbols);
System.out.println(df.format(83000L));
//$83.000
</code></pre>
"
25519838,"<p>If SuperCsvException is subclass of Exception try something like this:</p>

<pre><code>    Exception ex=null;
    try {
        while ((testBean = csvReader.read(TestBean.class, headers, getCellProcessors())) != null) {
            System.out.println(""no excpetion"");
            i = 5;
        }
    } catch (SuperCsvException csvExc) {
        System.out.println(""superCSV excpetion"");
        i = 0;
        ex=csvExc;
    } catch (Exception ex) {
        System.out.println(""excpetion"");
        i = 0;
    }
    Assert.assertNotNull(ex);
</code></pre>
"
26400565,"<p>A simple ""fix"" would be</p>

<pre><code>String toPrint = """";
if(lastName.length() &gt; 0 &amp;&amp; firstName.length() &gt; 0){
   toPrint = lastName + "", "" - firstName;
}else if(!lastName.length() &gt; 0 &amp;&amp; firstName.length() &gt; 0){
   toPrint = firstName;
}else if(lastName.length() &gt; 0 &amp;&amp; !firstName.length() &gt; 0){
   toPrint = lastName;
}
System.out.println(toPrint)
</code></pre>
"
26400933,"<pre><code>for (char letter = 'a'; letter &lt;= 'z'; letter++)
{
    System.out.println(letter);
}
</code></pre>
"
25679919,"<p>For skipping first line(which normally contains header of the columns) take a variable and  increase this variable in while loop at first place, and continue;</p>

<pre><code>int lineNumber = 0;

and then in while loop 

while ((line = br.readLine()) != null) {
                        if(lineNumber == 0) {
                            lineNumber++;
                            continue;
                        }
                        lineNumber++;

                       //do waterver u have to do with the tokens in this line(second line)

            }
</code></pre>
"
25724992,"<pre><code>class prime {

    public static void main ( String args [ ] ) {

        int x, i, c = 0;

        x = Integer.parseInt(args[0]);

        for (i = 1; i &lt;= x; i++) {
            if (x % i == 0) {
                c++;
            }
        }

        if (c == 2) {
            System.out.println(""prime number"");
        } else {
            System.out.println(""not a prime number"")
        }
    }
}
</code></pre>
"
26718018,"<pre><code>public static void main(String[] args) {

    DateFormat dateFormat = new SimpleDateFormat(""yyyy/MM/dd HH:mm:ss"");
    //get current date time with Date()
    Date date = new Date();
    System.out.println(dateFormat.format(date));

    //get current date time with Calendar()
    Calendar cal = Calendar.getInstance();
    System.out.println(dateFormat.format(cal.getTime()));

}
</code></pre>
"
25958035,"<p>Generally, you should just convert the value to a <code>String</code> then use <code>.length()</code> property.</p>

<p>If you want to make a special case where doubles that have a <code>.0</code>, should only return their integer length, do the following. Check if the value is equal to its rounded integer value.</p>

<pre><code>public static int method(double value) {
    int rounded = (int) value;
    if (value == rounded) {
        return String.valueOf(rounded).length();
    } else {
        return String.valueOf(value).length();
    }
}

System.out.println(method(5.0)); // prints 1
System.out.println(method(5.00000)); // prints 1
System.out.println(method(55555.00)); // prints 5
</code></pre>
"
25958050,"<p>Overload your method with an int argument method, and then apply your logic as before.</p>

<pre><code>public int method(double d){
//your logic
}

public int method(int i){
//your logic
}`enter code here
</code></pre>
"
25958103,"<pre><code>int method(double value) { 
    if (value == (int) value) 
        return Integer.toString((int)value).length(); 
    else return Double.toString(value).length(); 
}
</code></pre>
"
26853171,"<p>For ArrayList the following works:</p>

<pre><code>ArrayList&lt;Foo&gt; list = new ArrayList&lt;Foo&gt;();

//... add values

Foo[] resultArray = new Foo[list.size()];
resultArray = list.toArray(resultArray);
</code></pre>
"
26031747,"<p>I am posting the complete code here to find MIN and MAX in queue in a constant time.
Please feel free to contact me if you have any doubt.
    // Queue Interface
    package com.java.util.collection.advance.datastructure.queue;
    public interface Queue{
        boolean addR(E e);
        E removeL();
        E element();
        E elementR();
        boolean isFull();
        boolean isEmpty();
        void trim();
    }</p>

<pre><code>package com.java.util.collection.advance.datastructure.queue;
/**
* A deque is a double-ended queue. You can insert items at either end and delete them
* from either end. The methods might be called insertLeft() and insertRight(), and 
* removeLeft() and removeRight().
* @author vsinha
*
* @param &lt;E&gt;
*/
public interface DeQueue&lt;E&gt; extends Queue&lt;E&gt;{

    boolean addL(E element);

    E removeR();

}

package com.java.util.collection.advance.datastructure.queue;


@SuppressWarnings(""hiding"")
public interface FindMinMaxQueue&lt;Integer&gt; extends Queue&lt;Integer&gt;{

    public Integer min();

    public Integer max();
}

package com.java.util.collection.advance.datastructure.queue;
</code></pre>

<p>import java.util.Arrays;</p>

<pre><code>public class MyQueue&lt;E&gt; implements Queue&lt;E&gt;,DeQueue&lt;E&gt;{

    protected int front = 0;
    protected int rear =-1;
    protected E[] elements =null;
    private static final int DEFAULT_INTIAL_CAPACITY =100; 
    private int size =0;

    public MyQueue(){
        this(DEFAULT_INTIAL_CAPACITY);
    }
    @SuppressWarnings(""unchecked"")
    public MyQueue(int intialCapacity){
        if(intialCapacity &lt; 0){
            throw new IllegalArgumentException(""intial capacity can't be null"");
        }
        elements =(E[]) new Object[intialCapacity];
    }
    @Override
    public boolean addR(E e) {
        if(! isFull()) {
            elements[++rear] = e;
            size++;
            return true;
        }
        return false;
    }

    @Override
    public E removeL() {
        E element =null;
        if(!isEmpty()){
            element=elements[front];
            // Nullify the reference
            elements[front] =null;
            ++front;
            --size;
        }
        return element;
    }

    @Override
    public E element() {
        E element =null;
        if(!isEmpty()){
            element=elements[front];
        }
        return element;
    }

    @Override
    public E elementR() {
        E element =null;
        if(!isEmpty()){
            element=elements[rear];
        }
        return element;
    }

    public boolean isFull() {
        return rear == elements.length;
    }


    public boolean isEmpty() {
        return size == 0;
    }
    Override
    public String toString() {
        return ""MyQueue [front="" + front + "", rear="" + rear + "", elements=""
                + Arrays.toString(elements) + "", size="" + size + ""]"";
    }
    @Override
    public void trim() {
        @SuppressWarnings(""unchecked"")
        E[] dest =(E[]) new Object[size];
        System.arraycopy(elements, front, dest, 0, size);
        elements = dest;
        front =0;
        rear=size-1;
    }
    @Override
    public boolean addL(E element) {
        if(front != 0) {
            elements[--front] = element;
            size++;
            return true;
        }
        return false;
    }

    @Override
    public E removeR() {
        E element =null;
        if(size &gt; 0) {
            element=elements[rear];
            // Nullify the reference
            elements[rear] =null;
            --rear;
            --size;
        }
        return element;
    }

}

package com.java.util.collection.advance.datastructure.queue;


public class MinAndMaxFinderQueue extends MyQueue&lt;Integer&gt; implements FindMinMaxQueue&lt;Integer&gt; {

    private Queue&lt;Integer&gt; maxValuesQueue =null;

    private Queue&lt;Integer&gt; minValuesQueue =null;


    public MinAndMaxFinderQueue (int intialCapacity){
        super(intialCapacity);
        maxValuesQueue =new MyQueue&lt;Integer&gt;(intialCapacity);
        minValuesQueue =new MyQueue&lt;Integer&gt;(intialCapacity);

    }
    @Override
    public boolean addR(Integer e) {
        if(super.addR(e)){
            if(max() == null || max() &lt;= e){
                maxValuesQueue.addR(e);
            }

            if(min() == null || min() &gt;= e){
                minValuesQueue.addR(e);
            }
            return true;
        }
        return false;
    }

    @Override
    public Integer removeL() {
        Integer element =super.removeL();
        if(element !=null){
            if(maxValuesQueue.element() == element){
                maxValuesQueue.removeL();
            }

            if(minValuesQueue.element() == element){
                minValuesQueue.removeL();
            }
        }
        //Need to re-generate MIN and MAX queue when the main queue is not empty and min/max queue is empty
        regenerateMin();
        regenerateMax();

        return element;
    }

    private void regenerateMin(){
        Integer current =null;
        if(!super.isEmpty() &amp;&amp; min() ==null){
            for(int front = super.front; front&lt;= super.rear;front++){
                current = (Integer)elements[front];
                if(min() == null || min() &gt;= current){
                    minValuesQueue.addR(current);
                }

            }
        }
    }

    private void regenerateMax(){
        Integer current =null;
        if(!super.isEmpty() &amp;&amp; max() ==null){
            for(int front = super.front; front&lt;= super.rear;front++){
                current = (Integer)elements[front];
                if(max() == null || max() &lt;= current){
                    maxValuesQueue.addR(current);
                }
            }
        }
    }
    public Integer min() {
        return minValuesQueue.elementR();
    }

    public Integer max() {
        return maxValuesQueue.elementR();
    }
    @Override
    public String toString() {
        return super.toString()+""\nMinAndMaxFinderQueue [maxValuesQueue="" + maxValuesQueue
                + "", minValuesQueue="" + minValuesQueue + ""]"";
    }



}
//Test class 
package com.java.util.collection.advance.datastructure.queue;

import java.util.Random;


public class MinMaxQueueFinderApp {

    public static void main(String[] args) {
        FindMinMaxQueue&lt;Integer&gt; queue =new MinAndMaxFinderQueue(10);
        Random random =new Random();
        for(int i =0; i&lt; 10; i++){
            queue.addR(random.nextInt(100));
            System.out.println(queue);
            System.out.println(""MAX :""+queue.max());
            System.out.println(""MIN :""+queue.min());
        }
        System.out.println(queue);
        System.out.println(""MAX :""+queue.max());
        System.out.println(""MIN :""+queue.min());

        queue.removeL();
        System.out.println(queue);
        System.out.println(""MAX :""+queue.max());
        System.out.println(""MIN :""+queue.min());
        queue.removeL();
        System.out.println(queue);
        System.out.println(""MAX :""+queue.max());
        System.out.println(""MIN :""+queue.min());
        queue.removeL();
        System.out.println(queue);
        System.out.println(""MAX :""+queue.max());
        System.out.println(""MIN :""+queue.min());
        queue.removeL();
        System.out.println(queue);
        System.out.println(""MAX :""+queue.max());
        System.out.println(""MIN :""+queue.min());
        queue.removeL();
        System.out.println(queue);
        System.out.println(""MAX :""+queue.max());
        System.out.println(""MIN :""+queue.min());


        System.out.println(queue);
        System.out.println(""MAX :""+queue.max());
        System.out.println(""MIN :""+queue.min());
    }
}
</code></pre>
"
26999038,"<pre><code>public static Boolean isPrime(int num){ //method signature. returns Boolean, true if number isPrime, false if not
if(num==2){ //for case num=2, function returns true. detailed explanation underneath
  return(true);
}
for(int i=2;i&lt;=(int)Math.sqrt(num)+1;i++){ //loops through 2 to sqrt(num). All you need to check- efficient
  if(num%i==0){ //if a divisor is found, its not prime. returns false
    return(false);
  }
}
return(true); //if all cases don't divide num, it is prime.
</code></pre>

<p>}</p>

<hr>

<pre><code>    // Returns true iff n is prime.  First checks if n is even, handling the
// cases of n=2 (prime) or n is even &gt; 2 (not prime).  Then checks if any
// odd #'s between 3 and sqrt(n), inclusive, are divisors of n, returning
// false if any are.
public static boolean isPrime(int n) {
    if (n &lt; 2) return false;
    if (n % 2 == 0)
        // n is an even, so return true iff n is exactly 2
        return (n == 2);
    for (int i=3; i*i&lt;=n; i+=2)
        if (n % i == 0)
            // i divides evenly into n, so n is not prime
            return false;
    return true;
}
</code></pre>
"
27032358,"<p>Try this:</p>

<pre><code>driver.findElement(By.name(""period"")).sendKeys(""Last 52 Weeks"");
</code></pre>
"
26173992,"<p><code>'air'</code> is using single quotes. Single quotes denote a <strong>character</strong> constant. What you're looking for is <code>""air""</code>, a <strong>String</strong> constant.</p>

<p>You seem to be a new programmer. I made some improvements to your program, and I'll show you them here:</p>

<pre><code>import java.util.Scanner;
import javax.swing.JOptionPane;
import java.text.DecimalFormat;

/*
Medium Speed
Air 1100 feet per second
Water 4900 feet per second
Steel 16,400 feet per second

Write a program that asks the user to enter ""air"", ""water"", or ""steel"", and the distance that a sound wave will
travel in the medium. The program should then display the amount of time it will take.
You can calculate the amount of time it takes sound to travel in air with the following formula:

Time = Distance / 1100
You can calculate the amount of time it takes sound to travel in water with the following formula:

Time = Distance / 4900
You can calculate the amount of time it takes sound to travel in steel with the following formula:

Time = Distance / 16400
*/

public class SpeedOfSound {
        public static void main(String[] args) {

        char timeTraveled; //what is this even doing here?

        Scanner scanner = new Scanner(System.in);

        double time = (distance/ 1100);
        double time2 = (distance/ 4900);
        double time3 = (distance/ 16400);
        DecimalFormat formatter = new DecimalFormat(""#0.00"");

                System.out.println(""Enter air, water, or steel: "");
                String material = scanner.nextLine();
                System.out.print(""Enter distance: "");
                double distance = scanner.nextDouble();

                switch (material) {
                    case ""air"":
                        System.out.printf(""The total time traveled is "" + formatter.format(time) + ""."");
                        break;

                    case ""water"":
                        System.out.printf(""The total time traveled is "" + formatter.format(time2) + ""."");
                        break;

                    case ""steel"":
                        System.out.printf(""The total time traveled is "" + formatter.format(time3) + ""seconds."");
                        timeTraveled = material.charAt(0); //what is this even doing here?
                    break;
                }
                scanner.close();
    } // main()
}  // class SpeedOfSound
</code></pre>

<ul>
<li>Made the spacing and indenting more consistent</li>
<li>Renamed your Scanner object. ""keyboard"" is not an appropriate name for a Scanner object, since scanner works with not only keyboard input, but also string and file input.</li>
<li>I combined the <em>declaration</em> of your ""time"" variables and the <em>definition</em></li>
</ul>

<p>E.g.</p>

<pre><code>double time; //a declaration of ""time""
time = (distance/ 1100); //a definition of ""time""
//becomes:
double time = (distance/ 1100); //a declaration AND definition of ""time""
</code></pre>

<ul>
<li>changed <code>'air'</code> to <code>""air""</code>"", also, changed the switch case variable to ""material"" (which used to be called ""input"", and is the string that holds the user's input), rather than it using timeTraveled (some miscellaneous character?)</li>
</ul>

<p>Since your program is only going to be displaying one time of the three possibilities, why calculate all 3? I suggest you rework your algorithm as follows:
Ask the user for the material and distance they want. Set a variable ""speed"" equal to 1100, 4900, or 16400 depending on the user's choice of air, water or steel. Then, calculate time as distance / speed.</p>

<p>This saves you from repeating 3 identical <code>System.out.println()</code> statements, saves you from having 3 time variables (when you only need 1), </p>
"
26229938,"<p>Use <code>split</code> method as </p>

<pre><code>String []result1 = s.split(""&amp;"");
String result2 = tempResult[1];
String []result3 = result2.split(""s_"");
</code></pre>

<p>Now to get your desire number you just need to do</p>

<pre><code>String finalResult = result3[1];
</code></pre>

<p><strong>INPUT :</strong></p>

<pre><code>String s = ""chapterId=c_1&amp;sectionId=s_24666&amp;isHL=1&amp;cssFileName=haynes"";
</code></pre>

<p><strong>OUPUT :</strong></p>

<pre><code>24666
</code></pre>
"
27168458,"<p>Seeing point 6, you can use these tools to see if your hardware is being the bottleneck: Assuming that you're on linux, you can use <code>VmStat</code> to see some statistics on your RAM usage, <code>top</code> or <code>atop</code> (depending on your distro) to see processes taking a toll in your CPU and RAM, <code>nload</code> and <code>iftop</code> to see what is consuming network bandwith, and <code>iotop</code> to see what is reading and writing to your disk.</p>
"
26301056,"<pre><code>import java.io.*;
import java.lang.*;
import java.util.*;
class secondlargefunc
{
public static void main(String []args)
{
int a[]={10,9,8,7,500,-400};
int j=0;
int l=0;
for(int i=0;i&lt;6;i++)
{
j=Math.max(a[i],j);
}
System.out.println(""Largest number is: "" +j);
for(int k=0;k&lt;6;k++)
{
if(a[k]!=j)
{
l=Math.max(a[k],l);
}}
System.out.println(""Second Largest number is: "" +l);
}}
</code></pre>
"
26705760,"<pre><code>int[] A =  new int[] {0, 1, 3, -2, 0, 1, 0, -3, 2, 3 };
        int P,Q;
        boolean first_time = true;
        int depth = -1;

        for ( P=0; P &lt; ( A.length -1 ); P++ ) 
        {
           if(A[P] &gt; A[P+1])
           {
               for(Q =P+1; Q &lt;( A.length -1 ); Q++)
               {
                   if(A[Q-1] &gt; A[Q])
                   {
                       if(A[Q] &lt; A[Q+1])
                       {
                            int temp_depth = Math.min(A[P] - A[Q], A[Q+1] - A[Q]);

                            if(first_time){ depth = temp_depth; first_time = false; }

                            if ( depth &lt; temp_depth ) depth = temp_depth;

                            System.out.println(""Depth of ("" + P + "","" + Q + "","" + (Q+1) + "")="" + depth);

                            break;
                       }
                   }
               }
           }
        }
        System.out.println(""Depth:"" + depth);
</code></pre>
"
27509910,"<p>The <code>Date</code> Class has methods like <code>before(date)</code> and <code>after(date)</code>. You should take a look into the <code>Date</code> Class.</p>
"
27510026,"<p>So I think what you are looking for is to set the time zone of the SimpleDateFormat:</p>

<pre><code>sf.setTimeZone(TimeZone.getTimeZone(""EST""));
</code></pre>
"
27543862,"<p>The best approach is to avoid sleep altogether, and use some API that call your code right after the screen has been refreshed. This greatly depends on the drawing libraries you are using, but you are looking for something similar to the famous requestAnimationFrame() function in JavaScript.</p>

<p>If you don't have access tu such API, then as other answer states, in Java you can make use of <code>System.nanoTime()</code> and <code>Thread.sleep(long millis, int nanos)</code>.</p>
"
27543908,"<p>You have no guarentees as to how long the process will sleep for. In fact your program can be paused for any length of time in between sleeping and will do so thousands of times a second. there is tools for measuring the jitter in your system based on how wrong this timing is. <a href=""http://www.azulsystems.com/jHiccup"" rel=""nofollow"">http://www.azulsystems.com/jHiccup</a></p>

<p>Instead you should estimate in nanoTime when the process should have woken up next and sleep for the difference, this avoid cumulative error.</p>

<pre><code>long intervalNanos = ....
long nextNanos = System.nanoTime() + intervalNanos;
while(running) {
    doSomething();
    long now = System.nanoTime();
    if (now &gt; nextNanos) {
       // we are not keeping up.
       nextNanos = now + intervalNanos;
       continue;
    }
    long delay = (nextNanos - now) / 1000000;
    Thread.sleep(delay);
    nextNanos += intervalNanos;
}
</code></pre>
"
27013261,"<pre><code>long abs(int num){
    return num &lt; 0 ? num * -1 : num;
}
</code></pre>
"
27580409,"<p>Simply use,</p>

<pre><code>StringUtils.join(itemList, "", "");
</code></pre>
"
27628756,"<p>If you're dealing with a Java character array (such as password characters that you read from the console), you can convert it to a JRuby string with the following Ruby code:</p>

<pre><code># GIST: ""pw_from_console.rb"" under ""https://gist.github.com/drhuffman12""

jconsole = Java::java.lang.System.console()
password = jconsole.readPassword()
ruby_string = ''
password.to_a.each {|c| ruby_string &lt;&lt; c.chr}

# .. do something with 'password' variable ..    
puts ""password_chars: #{password_chars.inspect}""
puts ""password_string: #{password_string}""
</code></pre>

<p>See also ""<a href=""http://stackoverflow.com/a/27628738/4390019"">http://stackoverflow.com/a/27628738/4390019</a>"" and ""<a href=""http://stackoverflow.com/a/27628756/4390019"">http://stackoverflow.com/a/27628756/4390019</a>""</p>
"
27187359,"<p>Use a debugger.</p>

<p>Clearly the value of <code>fonOS</code> cannot be parsed as <code>Integer</code> in that instance.</p>

<p>From <a href=""https://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#parseInt%28java.lang.String,%20int%29"" rel=""nofollow"">API</a>: </p>

<blockquote>
  <p>The characters in the string must all be digits of the specified radix
  (as determined by whether Character.digit(char, int) returns a
  nonnegative value), except that the first character may be an ASCII
  minus sign '-' ('\u002D') to indicate a negative value or an ASCII
  plus sign '+' ('\u002B') to indicate a positive value.</p>
</blockquote>
"
27962341,"<p>Bouncy Castle Crypto API is a lightweight cryptography API in Java.    </p>

<pre><code>    import org.bouncycastle.crypto.*;
    import org.bouncycastle.crypto.engines.*;
    import org.bouncycastle.crypto.modes.*;
    import org.bouncycastle.crypto.params.*;

    // A simple example that uses the Bouncy Castle
    // lightweight cryptography API to perform DES
    // encryption of arbitrary data.


     public class Encryptor {

            private BufferedBlockCipher cipher;
            private KeyParameter key;


            // Initialize the cryptographic engine.
            // The key array should be at least 8 bytes long.


            public Encryptor( byte[] key ){
            /*
            cipher = new PaddedBlockCipher(
                       new CBCBlockCipher(new DESEngine()));
            */
            cipher = new PaddedBlockCipher(
                        new CBCBlockCipher(new BlowfishEngine()));
            this.key = new KeyParameter( key );
            }        

            // Initialize the cryptographic engine.
            // The string should be at least 8 chars long.

            public Encryptor( String key ){
            this( key.getBytes());
            }
            // Private routine that does the gritty work.

            private byte[] callCipher( byte[] data )
            throws CryptoException {
            int    size = cipher.getOutputSize( data.length );

            byte[] result = new byte[ size ];
            int    olen = cipher.processBytes(data,0,data.length result, 0);
                   olen += cipher.doFinal( result, olen );

            if( olen &lt; size ){
                byte[] tmp = new byte[ olen ];
                System.arraycopy(
                        result, 0, tmp, 0, olen );
                result = tmp;
            }

            return result;
        }
        // Encrypt arbitrary byte array, returning the
        // encrypted data in a different byte array.

        public synchronized byte[] encrypt( byte[] data )
        throws CryptoException {
            if( data == null || data.length == 0 ){
                return new byte[0];
            }

            cipher.init( true, key );
            return callCipher( data );
        }
       // Encrypts a string.

        public byte[] encryptString( String data )
        throws CryptoException {
            if( data == null || data.length() == 0 ){
                return new byte[0];
            }

            return encrypt( data.getBytes() );
        }
        // Decrypts arbitrary data.

        public synchronized byte[] decrypt( byte[] data )
        throws CryptoException {
            if( data == null || data.length == 0 ){
                return new byte[0];
            }

            cipher.init( false, key );
            return callCipher( data );
        }
        // Decrypts a string that was previously encoded
        // using encryptString.

        public String decryptString( byte[] data )
        throws CryptoException {
            if( data == null || data.length == 0 ){
                return """";
            }

            return new String( decrypt( data ) );
        }
    }
</code></pre>
"
28351754,"<p>THIS CODE CALCULATES MODE, MEDIAN, AND MEAN. IT IS TESTED AND IT DOES WORK. It is a complete program from start to finish and will compile.</p>

<pre><code>import java.util.Arrays;
import java.util.Random;
import java.math.*;
/**
 *
 * @author Mason
 */
public class MODE{

    public static void main(String args[])
    {
        System.out.print(""Enter the quantity of random numbers  ===&gt;&gt;  "");
        int listSize = Expo.enterInt();
        System.out.println();
        ArrayStats intStats = new ArrayStats(listSize);
        intStats.randomize();
        intStats.computeMean();
        intStats.computeMedian();
        intStats.computeMode();
        intStats.displayStats();
        System.out.println();
    }
}


class ArrayStats
{

    private int list[];
    private int size;
    private double mean;        
    private double median;      
    private int mode;           

    public ArrayStats(int s)//initializes class object
    {
        size = s;
        list = new int[size];
    }

    public void randomize()
    {
        //This will provide same numbers every time... If you want to randomize this, you can
        Random rand = new Random(555);
        for (int k = 0; k &lt; size; k++)
            list[k] = rand.nextInt(11) + 10;  
    }

    public void computeMean()
    {
               double accumulator=0;
               for (int index=0;index&lt;size;index++)
               accumulator+= list[index];

               mean = accumulator/size;
    }

        public void computeMedian()
{
        Arrays.sort(list);
                if((size%2!=0))
                    median = list[((size-1)/2)];
                else if(size!=1&amp;&amp;size%2==0)
                {
                    double a =(size)/2-0.5;
                    int a2 =  (int)Math.ceil(a);
                    double b =(size)/2-0.5;
                    int b2 = (int)Math.floor(b);
                    median = (double)(list[a2]+list[b2])/2;
                }
                else if (size ==1)
                    median = list[0];
        }

    public void computeMode()
    {
 int popularity1 = 0;
  int popularity2 = 0;
  int array_item; //Array contains integer value. Make it String if array contains string value.
  for(int i =0;i&lt;list.length;i++){
      array_item = list[i];
      for(int j =0;j&lt;list.length;j++){
          if(array_item == list[j])
             popularity1 ++;
      }
      if(popularity1 &gt;= popularity2){
          mode = array_item;
          popularity2 = popularity1;
      }


      popularity1 = 0;
  }}

    public void displayStats()
    {
        System.out.println(Arrays.toString(list));
        System.out.println();
        System.out.println(""Mean: "" + mean);
        System.out.println(""Median: "" + median);
        System.out.println(""Mode: "" + mode);
        System.out.println();
    }

}
</code></pre>
"
28428403,"<pre><code>HashSet hs = new HashSet();
                hs.addAll(arrayList);
                arrayList.clear();
                arrayList.addAll(hs);
</code></pre>
"
27797969,"<p>Use the following code:</p>

<pre><code>String xyz=null;
system.out.println(xyz);
</code></pre>
"
28761749,"<p>i think you want to replace/split the string.That you can do without knowing the length of the string.Because java takes sequence of string also to replace a particular char or sequence of char in a string. For example :-`public class Test {</p>

<pre><code>public static void main(String[] args) {


    String s=""𥑮"";
    System.out.println(s.replace(""𥑮"", ""k""));

}
}
</code></pre>

<p>`
And if you want to split the String then go for stringtokenizer.For example :-</p>

<pre><code>StringTokenizer st= new StringTokenizer(""your sentence or String"",""the problematic char/string"");
</code></pre>
"
28942929,"<p>I don't see any array or Map in your implementation. You should use either of them in order to count the number of occurrences of each digit efficiently. </p>

<p>It looks like you chose to have a nested loop (not very efficient) and to iterate over the entire number for each digit you are counting the number of occurrences for. </p>

<p>You have some bugs in that logic as well. I think this should work :</p>

<pre><code>int t_siffer = 0;
int original = tall;
for (int siffer=0; siffer&lt;=9; siffer++) { // iterate over the possible digits - 0 to 9
    System.out.println(""Siffer = "" + siffer);
    siffervekt = 0;
    tall = original;
    for (int x=0; x&lt;lengde; x++) { // count the number of times current digit appears
        int asiffer = (tall%10);
        System.out.println(""Asiffer = "" + asiffer);
        if (asiffer == siffer) {
            siffervekt++;
            System.out.println(siffervekt);
        }
        tall = tall/10; 
    }
    if (siffervekt &gt; t_siffervekt) {
        t_siffervekt = siffervekt;
        t_siffer = siffer;
    }
}
System.out.println (""Digit "" + t_siffer + "" appears "" + t_siffervekt + "" times"");
</code></pre>

<p>This should give you the number of occurrences of the digit that appeared the most times (though it won't give you which digit it was).</p>

<p>Instead of this nested loop, you can use an array of 10 integers to count how many times each digit appears in the number. You can do it in a single iteration.</p>

<p>EDIT : modified the code slightly to keep track of which digit appeared the most times.</p>
"
28942963,"<pre><code>for (int siffer=0; siffer==lengde; siffer++)
</code></pre>

<p>change to:</p>

<pre><code>for (int siffer=0; siffer &lt; lengde; siffer++)
</code></pre>

<p>because <code>siffer</code> is 0 at start and <code>lengde</code> is 7, so your for loop will never execute...</p>
"
28533481,"<p>Replace your for loop with:</p>

<pre><code>System.out.println(letters.toUpperCase());
</code></pre>
"
28556168,"<p>Make a <code>TreeMap&lt;Integer, List&lt;ObjectTypeFromA&gt;&gt;</code> where the map key is the values in B, and the map values are the values in A (using a list to allow for duplicate keys).  It will be sorted in the order of B by definition.</p>

<pre><code>public static void main(String[] args) {
  String[] strings = { ""string1"", ""string2"", ""string3"", ""string4"" };
  int[] ints = { 40, 32, 32, 34 };
  System.out.println(Arrays.toString(getSortedStringArray(strings, ints)));
}

public static String[] getSortedStringArray(String[] strings, int[] order) {
  Map&lt;Integer, List&lt;String&gt;&gt; map = new TreeMap&lt;&gt;();
  for (int i = 0; i &lt; strings.length; i++) {
    if (!map.containsKey(order[i])) {
      map.put(order[i], new LinkedList&lt;String&gt;());
    }
    map.get(order[i]).add(strings[i]);
  }
  String[] ret = new String[strings.length];
  int i = 0;
  for (Map.Entry&lt;Integer, List&lt;String&gt;&gt; mapEntry : map.entrySet()) {
    for (String s : mapEntry.getValue()) {
      ret[i++] = s;
    }
  }
  return ret;
}
</code></pre>
"
28860258,"<p>Static methods will called by its Class name so we don't need to create class object we just cal it with class name so we can't override static </p>

<p>for example</p>

<pre><code>class AClass{
public static void test(){

 } 
}

class BClass extends AClass{
public static void test(){}

}

class CClass extends BClass{
public static void main(String args[]){

AClass aclass=new AClass();

aclass.test(); // its wrong because static method is called 
               // by its class name it can't accept object
}
}
</code></pre>

<p>we just call it</p>

<p><code>AClass.test();</code></p>

<p>means static class can't be overridden 
if it's overridden then how to cal it .</p>
"
28876798,"<p>Just my 2 cents here, but I think it's a good practice to use:</p>

<p><code>public static long getUnsignedInt(int x) { 
    return x &amp; (~0L); // ~ has precedence over &amp; so no real need for brackets
}</code></p>

<p>instead of:</p>

<blockquote>
  <p>return x &amp; 0xFFFFFFFFL;</p>
</blockquote>

<p>In this situation there's not your concern how many 'F's the mask has. It shall always work!</p>
"
29207094,"<pre><code>    public class Prime 
    {

        void dispaly()
        {
            for(int i=1;i&lt;100; i++)

            {
                boolean isPrimeNumber = true;

                for(int j=2; j&lt;i; j++)
                {

                    if(i%j==0) 
                    {
                    isPrimeNumber=false;
                    break;
                    }

                }



            if(isPrimeNumber)
            {

                System.out.print(i + "" "");

            }


        }


        }

        void dispaly1()
        {
            System.out.print(""\n"");

            for(int i=1;i&lt;100; i++)

            {


                for(int j=2; j&lt;i; j++)
                {

                    if(i%j==0) 
                    {


                    System.out.print(i + "" "");
                    break;

                    }

                }




            }


        }

        public static void main(String[] args)
        {
            Prime p= new Prime();
            System.out.print(""The Prime Numbers are : "");
            System.out.print(""\n"");
            p.dispaly();
            System.out.print(""\n"");
            System.out.print(""The Composite Numbers are : "");
            p.dispaly1();

        }
    }
</code></pre>
"
29053785,"<p>You can do it like this:</p>

<pre><code>for(int k = 5;k&gt;0;k--;){
for(int i = 0;i&lt;10;i+=2;)
 System.out.println(k+ """" +i)
}
</code></pre>
"
29212316,"<pre><code>// Author: Francisco Edmundo
private int translateNumber(String texto) {
    int n = 0;
    int numeralDaDireita = 0;
    for (int i = texto.length() - 1; i &gt;= 0; i--) {
        int valor = (int) traduzirNumeralRomano(texto.charAt(i));
        n += valor * Math.signum(valor + 0.5 - numeralDaDireita);
        numeralDaDireita = valor;
    }
    return n;
}
private double translateNumber(char caractere) {
    return Math.floor(Math.pow(10, ""IXCM"".indexOf(caractere))) + 5 * Math.floor(Math.pow(10, ""VLD"".indexOf(caractere)));
}
</code></pre>
"
29700559,"<pre><code>//clear all the columns from the table

while (Table.getColumns().size()!=0)
{
    Table.getColumns().remove(0);
}
//clear  all rows

Table.setItems(FXCollections.observableArrayList());
</code></pre>
"
29925572,"<blockquote>
  <p>A user can input data at the time of execution of the program without using a scanner class, and this can be done by using the following program.</p>
</blockquote>

<pre><code> class Demo
  { 
   public static void main(String ar[])
    {
     int ab = Integer.parseInt(ar[0]);
     int ba = Integer.parseInt(ar[1]);
     int res = ab+ba;
     System.out.print(res);
    }
  }
</code></pre>

<blockquote>
  <p>This is a basic program where a user can input data at the time of execution and get the desired result. You can add, subtract, Multiply, divide and concatenate strings, in CMD and a user can input data after compiling the java program i.e at the time of calling the class file. You just need to call the class file and then enter the data after a space.</p>
</blockquote>

<p><code>C:\Users\Lenovo\Desktop&gt;java Demo 5 2</code></p>

<blockquote>
  <p>Here ab= 5 and ba= 2. A user can have any number or string if he wants. </p>
</blockquote>
"
30033808,"<p>I find that the timeout calls are not reliable enough in real life, particularly for internet explorer , however the following solutions may be of help:</p>

<ol>
<li>you can timeout the complete test by using @Test(timeout=10000) in the junit test that you are running the selenium process from. This will free up the main thread for executing the other tests, instead of blocking up the whole show (just remember to cleanup the driver instance in the finally block).</li>
</ol>

<p>2.You can create a Command that enscapulates calls to the webDriver and call the execute method from the call() method of the Callable </p>

<pre><code>    class DriverCommand implements Callable&lt;WebElement&gt; {
        String criteria;
        public DriverCommand setCriteria(String criteria){
          this.criteria = criteria;
          return this;
        }
        @Override
        public WebElement call() throws Exception {
              driver.findElement(By.name(criteria));
              return elem;
        }
    }

public class Test {
    public static void main(String[] args) throws Exception {
        ExecutorService executor = Executors.newSingleThreadExecutor();
        Future&lt;String&gt; future = executor.submit(new DriverCommand().setCriteria(""x"");

        try {
              System.out.println(future.get(3, TimeUnit.SECONDS));
          } catch (TimeoutException e) {
            System.out.println(""Terminated!"");
        }

        executor.shutdownNow();
    }
}
</code></pre>
"
30222891,"<p>Like this:</p>

<pre><code>String a =""hh1hhhhhhhh"";
char s = a.charAt(3);
</code></pre>
"
30303240,"<p>Removing the <strong>JRE file</strong> located in my <code>C:/Program Files(*86)/Java</code> folder , reopening the eclipse IDE resolved the issue.</p>

<p>I had Java JDK installed in my <code>C:/Program Files/Java</code> folder which was not detected earlier.</p>
"
