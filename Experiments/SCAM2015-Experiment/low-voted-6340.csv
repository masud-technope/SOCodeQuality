"12885","<p>There is no pretty solution.  Java just doesn't do things like this well.  Mike's solution is pretty much the way to do it if you want strings as the indices (keys).  Another option if the hash-of-hashes setup is too ugly is to append the strings together (shamelessly stolen from Mike and modified):</p>

<pre><code>Hashtable&lt;String, String&gt; schedule = new Hashtable&lt;String, String&gt;();
schedule.put(""A-Winter"", ""M"");
schedule.put(""A-Spring"", ""tTS"");
</code></pre>

<p>and then lookup:</p>

<pre><code>String val = schedule.get(group + ""-"" + season);
</code></pre>

<p>If you're unhappy with the general ugliness (and I don't blame you), put it all behind a method call:</p>

<pre><code>String whenCanIWater(String group, Date date) { /* ugliness here */ }
</code></pre>
"
"44405","<p>Would having the sources for the dependency help? You can tell the eclipse plugin to download those (and refer to them in the .classpath) with <code>-DdownloadSources=true</code></p>
"
"31270","<p>I believe that generally you can just use ""this"", or just leave it off completely.  The code in the inner class should be able to reference the outer class's members without any problem.  The only time you should need to use the more verbose version ""Outer.this"" is if there is name conflicts.  So, to expand on Frank's comment:</p>

<pre><code>class Outer {
  void foo() {
    new Thread() {
      public void run() {
        this.bar();
        Outer.this.baz();
      }

      public void baz() { }
    }.start();
  }
  void bar() {
    System.out.println(""BAR!"");
  }
  void baz() {
    System.out.println(""BAZ!"");
  }
}
</code></pre>
"
"95946","<p>An alternative to the code from @Cody: </p>

<p>Using the modulus operator:</p>

<pre><code>bool isEven = (a % 2) == 0;
</code></pre>

<p>I think this is marginally better code than writing if/else, because there is less duplication &amp; unused flexibility.  It does require a bit more brain power to examine, but the good naming of <code>isEven</code> compensates.</p>
"
"65920","<p>In my experience, anything with a getter method can be accessed via dot notation.  In your example, whatever object is being represented by the <code>bus</code> bean needs to have a <code>getServiceFacade</code> method and that the object returned by <code>getServiceFacade</code> would need to have a <code>getSomeAction</code> method.</p>
"
"116224","<p>They should <strong>absolutely</strong> be kept under version control.  You can use an environment variable in the user's environment to detect the developer-specific properties.  In ant, for example:</p>

<pre><code>&lt;property environment=""env"" /&gt;
&lt;property file=""${basedir}/online/${env.LOGNAME}.build.properties"" /&gt;
&lt;property file=""${basedir}/online/${env.USERNAME}.build.properties"" /&gt;
&lt;property file=""${basedir}/online/default.properties"" /&gt;
</code></pre>

<p>If you have <code>LOGNAME</code> set to, say, 'davec' and <code>davec.build.properties</code> exists, it will override any values in <code>default.properties</code>.</p>

<p>This is also helpful for examining your co-workers configurations to get started or diagnose problems.</p>
"
"66664","<p>No I do not believe so.  The catch block will run to completion before the finally block.</p>

<pre><code>try {
    // code that may or may not throw an exception
} catch {
// catch block must exist.
finally {
    SomeCleanupFunctionThatThrows();
// this portion is ran after catch block finishes
}
</code></pre>

<p>Otherwise you can add a synchronize() object that the exception code will use, that you can check in the finally block, which would help you identify if in a seperate thread you are running an exception.</p>
"
"140181","<p>I think will do it for you. I cobbled it together from a similar function that returned the data as a string:</p>

<pre><code>private static byte[] decode(String encoded) {
    byte result[] = new byte[encoded/2];
    char enc[] = encoded.toUpperCase().toCharArray();
    StringBuffer curr;
    for (int i = 0; i &lt; enc.length; i += 2) {
        curr = new StringBuffer("""");
        curr.append(String.valueOf(enc[i]));
        curr.append(String.valueOf(enc[i + 1]));
        result[i] = (byte) Integer.parseInt(curr.toString(), 16);
    }
    return result;
}
</code></pre>
"
"148851","<p>I'm speculating you could propably creas an as operator </p>

<p>something like </p>

<pre><code>as&lt;T,Type&gt; (left, right)  
which evaluates to 
if (typeof(left) == right)
   return (right)left
else
    return null
</code></pre>

<p>I'm not sure how you'd do it, I'm a c# at the moment and my Java hat has gotten a bit dusty since I left university.</p>
"
"168858","<p>here's the way pagination is done in hibernate</p>

<pre><code>Query q = sess.createQuery(""from DomesticCat cat"");
q.setFirstResult(20);
q.setMaxResults(10);
List cats = q.list();
</code></pre>

<p>you can get more info from hibernate docs at : <a href=""http://www.hibernate.org/hib_docs/v3/reference/en-US/html_single/#objectstate-querying-executing-pagination"" rel=""nofollow"">http://www.hibernate.org/hib_docs/v3/reference/en-US/html_single/#objectstate-querying-executing-pagination</a>
10.4.1.5 and 10.4.1.6 section give you more flexbile options.</p>

<p>BR,<BR>
~A</p>
"
"94068","<p>Maybe this can help you: <a href=""http://www.jguru.com/forums/view.jsp?EID=1268343"" rel=""nofollow"">How can we kill the running thread in java?</a></p>

<blockquote>
  <p>u can kill the partictular thread by
  setting external class varaiable.</p>
</blockquote>

<pre><code> Class Outer
 {    
    public static flag=true;
    Outer()
    {
        new Test().start();
    } 
    class Test extends Thread
    {               
       public void run()
       {
         while(Outer.flag)
         {
          //do ur work here
         }  
       }
    }
  }
</code></pre>

<blockquote>
  <p>if u want to stop the above thread ,
  set flag variable as false. The
  another way to kill a thread is just
  register ur thread with ThreadGroup.
  and use the method destroy() of
  ThreadGroup. and this way is also used
  kill similar threads by creating them
  as group or register with group.</p>
</blockquote>
"
"175317","<p>It's a bit outside scope, but you forgot to re-implement hashCode(). When you override equals please override hashCode(), even in an example. </p>

<p>For example; contains() will very probably go wrong when you have a HashSet implementation of Set as the HashSet uses the hashCode of Object to locate the bucket (a number which has nothing to do with business logic), and only equals() the elements within that bucket.</p>

<pre><code>public class A {
  public int id;
  public B b;
  public int hashCode() {return id;} // simple and efficient enough for small Sets 
  public boolean equals(Object another) { 
    if (object == null || ! (object instanceOf A) ) {
      return false;
    }
    return this.id == ((A)another).id; 
   }
}
public class Logic {
  /**
   * Replace the element in data with the same id as element, or add element
   * to data when the id of element is not yet used by any A in data. 
   */
  public void update(Set&lt;A&gt; data, A element) {
    data.remove(element); // Safe even if the element is not in the Set
    data.add(element); 
  }
}
</code></pre>

<p><strong>EDIT</strong> Yuvalindicated correctly that Set.add does not overwrite an existing element, but only adds if the element is not yet in the collection (with ""is"" implemented by equals)</p>
"
"187694","<p>Here's a method that I've written that will format phone numbers to (###) ###-####:</p>

<pre><code>String formatTeleNumber(String s) {
    StringBuffer number = new StringBuffer();

    if (s.length() == 0) {

        return ""(999)999-9999"";
    }

    // Strip all non-numbers
    for (int i = 0; i &lt; s.length(); i++) {

        if (Character.isDigit(s.charAt(i))) {
           number.append(s.charAt(i));
        }
    }

    // Pad with 0s
    for (int i = number.length(); i &lt; 10; i++) {

        number.insert(0, '0');
    }

    // Format telephone number to (###)###-####
    number = new StringBuffer(number.substring(number.length() - 10));
    number.insert(0, '(');
    number.insert(4, ')');
    number.insert(8, '-');

    return number.toString();
}
</code></pre>

<p>Simply strip out anything that's not a number, pad it with 0's (if required), and then insert the correct characters at the correct locations.</p>
"
"21845","<p>Perhaps a code example would help, I'm going to use C#, but you should be able to follow along.</p>

<p>Lets pretend we have an interface called IPayable</p>

<pre><code>public interface IPayable
{
    public Pay(double amount);
}
</code></pre>

<p>Now, we have two concrete classes that implement this interface:</p>

<pre><code>public class BusinessAccount : IPayable
{
    public void Pay(double amount)
    {
    	//Logic
    }
}

public class CustomerAccount : IPayable
{
    public void Pay(double amount)
    {
    	//Logic
    }
}
</code></pre>

<p>Now, lets pretend we have a collection of various accounts, to do this we will use a generic list of the type IPayable</p>

<pre><code>List&lt;IPayable&gt; accountsToPay = new List&lt;IPayable&gt;();
accountsToPay.add(new CustomerAccount());
accountsToPay.add(new BusinessAccount());
</code></pre>

<p>Now, we want to pay $50.00 to all those accounts:</p>

<pre><code>foreach (IPayable account in accountsToPay)
{
    account.Pay(50.00);
}
</code></pre>

<p>So now you see how interfaces are incredibly useful. </p>

<p>They are used on instantiated objects only. Not on static classes. </p>

<p>If you had made pay static, when looping through the IPayable's in accountsToPay there would be no way to figure out if it should call pay on BusinessAcount or CustomerAccount.</p>
"
"21858","<p>I would just go by</p>

<pre><code>throw new exception(""WhatCausedIt"")
</code></pre>

<p>if you want to handle your exceptions, you could pass a code instead of ""WhatCausedIt"" an then react to the different answers with a switch statement. </p>
"
"191916","<p>I'm not sure (I never tried), but if the header is only HTML is there not a solution in HTML such as</p>

<pre><code>&lt;div id=""header"" datasrc=""http://CLIENT.com/...""&gt;&lt;/div&gt;
</code></pre>

<p>(or maybe using &lt;iframe&gt;)</p>
"
"126516","<p><code>&lt;stab_in_the_dark&gt;</code>
I'm not familiar with that SDK but from looking at the API if the server is in a known timezone why not create and an OLEDate object whose date is going to be the client's time rolled appropriately according to the server's timezone?
<code>&lt;/stab_in_the_dark&gt;</code></p>
"
"200496","<p>I found this answer for cloning multidimensional arrays on <a href=""http://www.jguru.com/faq/view.jsp?EID=20435"" rel=""nofollow"">jGuru</a>:</p>

<pre><code>ByteArrayOutputStream baos = new ByteArrayOutputStream();
ObjectOutputStream oos = new ObjectOutputStream(baos);
oos.writeObject(this);
ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
ObjectInputStream ois = new ObjectInputStream(bais);
Object deepCopy = ois.readObject();
</code></pre>
"
"205495","<p>Psuedo-code:</p>

<ol>
<li>Split the strings by the path seperator (""/"")</li>
<li>Find the greatest common path by iterating thru the result of the split string (so you'd end up with ""/var/data"" or ""/a"" in your two examples)</li>
<li><code>return ""."" + whicheverPathIsLonger.substring(commonPath.length);</code></li>
</ol>
"
"208803","<p>You <em>could</em> override <code>finalize()</code> in your object, but that is problematic for reasons others have mentioned.</p>

<p>For your specific example, you could take a look at using something like  <a href=""http://java.sun.com/j2se/1.4.2/docs/api/java/io/File.html#deleteOnExit()"" rel=""nofollow""><code>File.deleteOnExit()</code></a>, which would remove the file once the VM exits.</p>
"
"74284","<p>If the problem is just LazyInitializationExceptions, you can avoid that by adding an OpenSessionInViewFilter.<br />
This will allow the objects to be loaded in the view, but will not help with the speed issue.</p>

<pre><code>     &lt;filter&gt;
    	&lt;filter-name&gt;hibernateFilter&lt;/filter-name&gt;
    	&lt;filter-class&gt; org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
    	&lt;/filter-class&gt;
    &lt;/filter&gt;
    &lt;filter-mapping&gt;
    	&lt;filter-name&gt;hibernateFilter&lt;/filter-name&gt;
    	&lt;url-pattern&gt;/*&lt;/url-pattern&gt;
    &lt;/filter-mapping&gt;
</code></pre>
"
"184419","<p>Ergh. Don't implement masses of unrelated interfaces in one mega class. Instead, use anoymous inner classes. They are a bit verbose, but are what you want. Use one for each event, then you wont need big if-else chain. I suggest keeping enough code within the inner class to decode the event and call methods that make sense to the target objects. Further, you can parameterise your inner classes. You will probably find you don't need to keep references to the actual widgets around.</p>

<p>In your example you seem to be using a JComponent as a JPanel. There's not much difference, but use JPanel for collecting a block of widgets. Further there is unlikely any need to subclass it, so don't.</p>

<p>So for instance:</p>

<pre><code>   addColorButton(""Green"" , Color.GREEN );
   addColorButton(""Red""   , Color.RED   );
   addColorButton(""Yellow"", Color.YELLOW);
   addColorButton(""Blue""  , Color.BLUE  );
   ...

private void addColorButton(String label, Color color) {
    JRadioButton button = new JRadioButton(label);
    button.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent event) {
            target.setForeground(color);
            target.repaint();
        } 
    });
    colorGroup.add(button);
    panel.add(button);
}
</code></pre>
"
"115952","<p>If you don't want to use @SuppressWarnings(""unchecked"") you can do the following.</p>

<pre><code>   Query q = sess.createQuery(""from Cat cat"");
   List&lt;?&gt; results =(List&lt;?&gt;) q.list();
   List&lt;Cat&gt; cats = new ArrayList&lt;Cat&gt;();
   for(Object result:results) {
       Cat cat = (Cat) result;
       cats.add(cat);
    }
</code></pre>

<p>FYI - I created a util method that does this for me so it doesn't litter my code and I don't have to use @SupressWarning. </p>
"
"286746","<p>Create a constant to define the empty value, eg:</p>

<pre><code>private static final int EMPTY = -1;
</code></pre>

<p>then create the array like this:</p>

<pre><code>int[] myArray = new int[size];
Arrays.fill(myArray, EMPTY);
</code></pre>

<p>then to check if an element is 'empty', do this:</p>

<pre><code>if (myArray[i] == EMPTY)
{
   //element i is empty
}
</code></pre>
"
"133280","<p>Well, it is not from within Java, but</p>

<p><code>jar -tvf jarname | grep xml$</code></p>

<p>will show you all the XMLs in the jar.</p>
"
"141279","<p>No there isn't.</p>

<p>You can</p>

<pre><code>public void func(){

  {
    ArrayList l  =  new ArrayList();
  }
  System.out.println(""Hello"");

}
</code></pre>

<p>This gives you the limited scope of the using clause, but there isn't any IDisposable interface to call finalization code.  You can use try{}catch(){}Finally{}, but it doesn't have the sugar of using. Incidentally using finalizers in Java is generally a bad idea.</p>
"
"309974","<p>You're assuming that the <code>contains()</code> method in <code>List</code> knows the type of the object at runtime, which is incorrect.  </p>

<p>Because of erasure, <code>List&lt;MyClass&gt;</code> becomes just a regular <code>List</code> at runtime, so the <code>contains()</code> method sees its parameter as an <code>Object</code>, thus invoking Object's <code>equals()</code> instead of the one you defined for <code>MyClass</code> in its execution.</p>
"
"237349","<p>thanks a bunch guys. here's what i came up with. see if you can come up with a more efficient way.</p>

<pre><code>private final String[] symbolsPossible = {""ax"",""bx"",""cx"",""dx"",""foo""};
private boolean exists;
private final String mutate(String s)
{
String[] tokens=s.split("" "");
for(int j=0; j&lt;tokens.length; j++)
if(Math.random()&lt;.1) //10% chance of mutation per token
{
//checking to see if the token is a supported symbol
exists=false;
for(int i=0; i&lt;symbolsPossible.length; i++)
    if(tokens[j].equals(symbolsPossible[i]))
       exists=true;
if(exists)
    tokens[j]=symbolsPossible[(int)Math.random()*symbolsPossible.length];
}
StringBuffer result=new StringBuffer();
for(String t:tokens)
    result.append(t);
return result;
}
</code></pre>
"
"208407","<p>We use the 'R' flag instead of 'PT':</p>

<pre><code>RewriteRule ^/(.*)$ /myapp/$1 [L,R]
</code></pre>

<p><strong>Edit:</strong>
I missed the point to not alter the URL the user sees. An alternative way is to do:</p>

<pre><code>JkMount /* worker1
JkUnmount /static/* worker1
</code></pre>

<p>Then you won´t need the RewriteRule's.</p>

<p>And according to <a href=""http://tomcat.apache.org/security-jk.html"" rel=""nofollow"">Apache Tomcat Site</a> the new default settings of the <code>mod_jk</code> are incompatible with <code>mod_rewrite</code> and you should use <code>+ForwardURICompatUnparsed</code>.</p>
"
"314860","<p><code>mvn dependency:tree</code> - shows you a tree of all dependencies including transitive dependencies</p>
"
"352760","<p>For insert MSQSQL server has the <code>@@Identity</code> parameter which has the ID of the last inserted record.</p>
"
"367455","<p>Here is my code that works on mysql on os X</p>

<pre><code>public SQL(String host, String port, String database, String userid, String password)
	{
		queryType = QUERYTYPE.Single;
		String driver = ""org.gjt.mm.mysql.Driver"";
		String url = ""jdbc:mysql://"" + host;
		if (port != null)
			{
				url += "":"" + port;
			}
		else
			{
				url += "":"" + defaultPort;
			}
		url += ""/"" + database;
		try
			{
				Class.forName(driver);

				connection = DriverManager.getConnection(url, userid, password);
			}
		catch (Exception e)
			{
				e.printStackTrace();
			}
	}
</code></pre>
"
"282115","<p>I would NOT recommend using any regex for this, those are actually all painfully slow when you're doing simple operations. Instead I'd recommend you start with something like this</p>

<pre><code>// usage:
Map&lt;String, String&gt; replaceRules = new HashMap&lt;String, String&gt;();
replaceRules.put(""ao"", ""1"");
replaceRules.put(""df"", ""2"");
replaceRules.put(""n"", ""3"");
String s = replacePartsOf(""foobooandfoo"", replaceRules);

// actual method
public String replacePartsOf(String thisString, Map&lt;String, String&gt; withThese) {
    for(Entry&lt;String, String&gt; rule : withThese.entrySet()) {
    	thisString = thisString.replaceAll(rule.getKey(), rule.getValue());
    }

    return thisString;
}
</code></pre>

<p>and after you've got that working, refactor it to use character arrays instead. While I think what you want to do can be done with StringBuilder it most likely won't be worth the effort.</p>
"
"384005","<p>Here's some code to demonstrate how a stray handle into the middle of a list structure can keep the GC from cleaning up completely:</p>

<pre><code>import java.lang.ref.*;

public class MemoryLeak1 {

    MyListItem leakedItem = null;
    WeakReference[] refs = null;

    public static void main(String[] args) {
    	WeakReference ref = null;
    	MyListItem item = null;
    	MemoryLeak1 leak = new MemoryLeak1();
    	int i;

    	leak.doit(); // create a memory leak
    	System.gc(); // force the gc to run;

    	// At this point the list has been explicitly cleared,
    	// has gone out of scope, and the GC has run.
    	// However, leak.leakedItem is still holding a
    	// reference to an item in the list, so anything
    	// reachable from that item is still alive.

    	// show what's still around...
    	for (i = 0; i &lt; 10; i++) {
    		ref = leak.refs[i];
    		item = (MyListItem)ref.get();
    		if (item == null) { System.out.println("""" + i + "" = null""); }
    		else { System.out.println("""" + i + "" = "" + (String)item.thing); }
    	}
    	System.out.println(""---------------------"");

    	// now let's free some additional items...
    	for (i = 1; i &lt;= 3; i++) {
    		item = leak.leakedItem;
    		leak.leakedItem = item.next;
    		leak.leakedItem.prev = null;
    		item.prev = null;
    		item.next = null;
    	}
    	item = null;

    	System.gc(); // force the gc to run again

    	// this time we should get fewer items
    	for (i = 0; i &lt; 10; i++) {
    		ref = leak.refs[i];
    		item = (MyListItem)ref.get();
    		if (item == null) { System.out.println("""" + i + "" = null""); }
    		else { System.out.println("""" + i + "" = "" + (String)item.thing); }
    	}
    	System.out.println(""---------------------"");

    	// now clear the last reference
    	leak.leakedItem = null;

    	System.gc(); // force the gc to run again

    	// this time we should none
    	for (i = 0; i &lt; 10; i++) {
    		ref = leak.refs[i];
    		item = (MyListItem)ref.get();
    		if (item == null) { System.out.println("""" + i + "" = null""); }
    		else { System.out.println("""" + i + "" = "" + (String)item.thing); }
    	}
    	System.out.println(""---------------------"");
    }

    public void doit() {
    	this.refs = new WeakReference[10];
    	MyList list = new MyList();
    	MyListItem item = null;

    	// add strings to the list.
    	// set each into the array of soft refs 
    	// set a ptr to the 6th item in an instance variable
    	for (int i = 0; i &lt; 10; i++) {
    		item = new MyListItem();
    		item.thing = new String(""string"" + i);
    		list.insert(item);
    		if (i == 5) this.leakedItem = item;
    		this.refs[i] = new WeakReference(item);
    	}

    	// clear the list, but don't clear the
    	// additional ptr to the 6th item
    	list.clear();
    }
}

class MyList {
    MyListItem head = null;
    MyListItem tail = null;

    void clear() {
    	head = null;
    	tail = null;
    }

    void insert(MyListItem item) {
    	if (head == null) {
    		// empty list
    		item.next = null;
    		item.prev = null;
    		tail = item;
    		head = item;
    	}
    	else if (head == tail) {
    		// one item in list
    		item.next = head;
    		item.prev = null;
    		tail = head;
    		head = item;
    	}
    	else {
    		// multiple items in list
    		item.next = head;
    		item.prev = null;
    		head = item;
    	}
    }

    MyListItem remove() {
    	MyListItem item = tail;
    	if (item != null) {
    		tail = item.prev;
    		if (tail == null) {
    			head = null;
    		}
    		else {
    			tail.next = null;
    		}
    		item.next = null;
    		item.prev = null;
    	}
    	return item;
    }
}

class MyListItem {
    MyListItem next = null;
    MyListItem prev = null;
    Object thing = null;
}
</code></pre>
"
"308948","<p>You have to avoid Lazy initialization. It leads to problems later.<br>
But if you have to do it because the initialization is too heavy you have to do it like this:</p>

<p>Static fields:</p>

<pre><code>// Lazy initialization holder class idiom for static fields
private static class FieldHolder {
   static final FieldType field = computeFieldValue();
}
static FieldType getField() { return FieldHolder.field; }
</code></pre>

<p>Instance fields:</p>

<pre><code>// Double-check idiom for lazy initialization of instance fields
private volatile FieldType field;
FieldType getField() {
   FieldType result = field;
   if (result == null) { // First check (no locking)
      synchronized(this) {
         result = field;
         if (result == null) // Second check (with locking)
            field = result = computeFieldValue();
      }
   }
   return result;
}
</code></pre>

<p>Acording to Joshua Bolch book's ""Effective Java™
Second Edition"" (ISBN-13: 978-0-321-35668-0):
<br>
<strong>""Use lazy initialization judiciously""</strong></p>
"
"430496","<p>You could construct boxed objects, ie,</p>

<pre><code>Integer iObj = new Integer(i);
Integer jObj = new Integer(j);
</code></pre>

<p>and write your routine as</p>

<pre><code>public void test(Integer i, Integer j){
  i = i.add(1);
  j = j.add(1);
}
</code></pre>

<p>For any number of reasons, the designers of Java felt call-by-value was better; they purposefully didn't include a method for call by reference.  (Strictly, they pass copies of references to the objects, with the special case for the primitive types that they are purely call by value.  But the effect is the same.)</p>
"
"466670","<p>Here is how I would handle it: </p>

<pre><code>public void doSomething() 
        throws MyException{
    doA();

    try { 
        doB();
    } finally {
        doC();
    }
}
</code></pre>

<p>If an error occurs in doB(), the exception will propagate up the stack.</p>
"
"440824","<p>If you just want to group the files by their extension and do not care about the actual alphabetical order, you can use this:</p>

<p>I think the simplest thing you can do that also works when the filenname does not have a ""."" is to just reverse the names and compare them.</p>

<pre><code>Arrays.sort(ary, new Comparator&lt;String&gt;() {
    @Override
    public int compare(String o1, String o2) {
        String r1 = new StringBuffer(o1).reverse().toString();
        String r2 = new StringBuffer(o2).reverse().toString();
        return r1.compareTo(r2);
    }
});
</code></pre>

<p>Its a shame that java's string does not even have a reverse().</p>
"
"479111","<p>How about</p>

<pre><code>public override int GetHashCode()
{
    return id.GetHashCode() ^ name.GetHashCode();
}
</code></pre>
"
"479123","<p>How about this </p>

<pre><code>public override int GetHashCode()
{
    return (id.ToString() + name.ToString()).GetHashCode();
}
</code></pre>

<p>The function should allways return a ""valid"" hash...</p>

<p>Edit: just noticed that you use ""or"" not ""and"" :P well i doubt there is any good solution to this problem...</p>
"
"444393","<p>Mmhh I know you've already discarded URLEncoder, but despite of what the docs say, I decided to give it a try.</p>

<p>You said:</p>

<blockquote>
  <p>For example, given an input:</p>
  
  <p><em><a href=""http://google.com/resource?key=value"" rel=""nofollow"">http://google.com/resource?key=value</a></em></p>
  
  <p>I expect the output:</p>
  
  <p><em>http%3a%2f%2fgoogle.com%2fresource%3fkey%3dvalue</em></p>
</blockquote>

<p>So:</p>

<pre><code>C:\oreyes\samples\java\URL&gt;type URLEncodeSample.java
import java.net.*;

public class URLEncodeSample {
    public static void main( String [] args ) throws Throwable {
        System.out.println( URLEncoder.encode( args[0], ""UTF-8"" ));
    }
}

C:\oreyes\samples\java\URL&gt;javac URLEncodeSample.java

C:\oreyes\samples\java\URL&gt;java URLEncodeSample ""http://google.com/resource?key=value""
http%3A%2F%2Fgoogle.com%2Fresource%3Fkey%3Dvalue
</code></pre>

<p>As expected.</p>

<p>What would be the problem with this?</p>
"
"399074","<p>No no no, with all due respect to Josh Bloch, <em>never throw an <code>AssertionError</code> unless it's from an assertion.</em>  If you want an AssertionError here, throw it with <code>assert(false)</code>.  Then someone reading the code can find it later.</p>

<p>Even better, define your own exception, say <code>CantInstantiateUtilityClass</code>.  then you'll have code that says</p>

<pre><code>try {
    // some stuff
} catch (CantInstantiateUtilityClass e) {
    // react
}
</code></pre>

<p>so that the reader of the catcher knows <em>what</em> happened.</p>

<p><strong>Update</strong></p>

<p>Every so often some damn fool wanders by here and downvotes this again, almost four years after the fact.  So, let me just note that the standard <em>still</em> defines <code>AssertionError</code> as the result of a failed assertion, not as what some beginner thinks <em>ought</em> to be thrown in place of a well-defined informative exception.  Sadly, good exception discipline is perhaps the least encouraged skill in Java programming.</p>
"
"472188","<p>Though its a bad design pattern IMHO, Another possible solution is</p>

<pre><code>static void test(AtomicInteger i, AtomicInteger j)
{
    i.incrementAndGet();
    j.incrementAndGet();
}
</code></pre>
"
"475694","<p>You could use the scripting engine in Java.  If you don't have Java 6+, you can use Rhino which does the same thing. You can then do pretty much anything you can do in JavaScript</p>

<pre><code>// create a script engine manager
ScriptEngineManager factory = new ScriptEngineManager();
// create a JavaScript engine
ScriptEngine engine = factory.getEngineByName(""JavaScript"");

// expose a, b, c, d
engine.put(""a"", 1);
engine.put(""b"", 8);
engine.put(""c"", 2);
engine.put(""d"", 3);

// evaluate JavaScript code from String
Number value = (Number) engine.eval(""a + b / c * d"");
System.out.println(value);
</code></pre>

<p><a href=""http://java.sun.com/javase/6/docs/technotes/guides/scripting/programmer_guide/index.html"" rel=""nofollow"">For more examples</a> </p>
"
"522859","<p>What exactly are you trying to do? Are you always trying to go to two digits? Or are you always trying to fix things like 99999 at the end no matter what?</p>

<p>According to the comments, it is in fact the former: rounding to dollars and cents. So indeed just <code>round(100*a)/100</code> is what you want. (The latter would be much more complicated...) </p>

<p>Finally, if you just want to extract the cents part, the following would work:</p>

<pre><code>dollars_and_cents = round(100*a)/100
cents = (dollars_and_cents-(int)dollars_and_cents)*100
</code></pre>

<p>(or does java just have <code>frac</code>? In which case the last line would just be <code>frac(dollars_and_cents)*100</code>.</p>
"
"522969","<pre><code>int[] somenumbers = getAnArrayOfSomenumbers();
int numbertoLookFor = getTheNumberToLookFor();

boolean arrayContainsNumber = 
   new HashSet(Arrays.asList(somenumbers))
      .contains(numbertoLookfor);
</code></pre>

<p>It's fast, too.</p>

<p>Oh - you wanted to find the nearest number? In that case:</p>

<pre><code>int[] somenumbers = getAnArrayOfSomenumbers();
int numbertoLookFor = getTheNumberToLookFor();

ArrayList&lt;Integer&gt; l = new ArrayList&lt;Integer&gt;(
  Arrays.asList(somenumbers)
);
Collections.sort(l);
while(l.size()&gt;1) {
  if(numbertoolookfor &lt;= l.get((l.size()/2)-1)) {
    l = l.subList(0, l.size()/2);
  }
  else {
    l = l.subList(l.size()/2, l.size); 
  }
}

System.out.println(""nearest number is"" + l.get(0));
</code></pre>

<p>Oh - hang on: you were after a least squares solution?</p>

<pre><code>Collections.sort(l,  new Comparator&lt;Integer&gt;(){
  public int compare(Integer o1, Integer o2) {
    return (o1-numbertoLookFor)*(o1-numbertoLookFor) - 
           (o2-numbertoLookFor)*(o2-numbertoLookFor);
  }});

System.out.println(""nearest number is"" + l.get(0));
</code></pre>
"
"523491","<p>I suggest you use long for rounding a double value. It won't matter for small numbers but could make a difference.</p>

<pre><code>double d = 50.539999;
long cents = (long)(d * 100 + 0.5);
double rounded = cents/100;
</code></pre>
"
"52362","<p>I doubt you want to do it programmatically unless you just want to do it once and store it for future use.  It's a costly thing to do.  There's no sizeof() operator in Java, and even if there was, it would only count the cost of the references to other objects and the size of the primitives.</p>

<p>One way you could do it is to serialize the thing to a File and look at the size of the file, like this:</p>

<pre><code>Serializable myObject;
ObjectOutputStream oos = new ObjectOutputStream (new FileOutputStream (""obj.ser""));
oos.write (myObject);
oos.close ();
</code></pre>

<p>Of course, this assumes that each object is distinct and doesn't contain non-transient references to anything else.</p>

<p>Another strategy would be to take each object and examine its members by reflection and add up the sizes (boolean &amp; byte = 1 byte, short &amp; char = 2 bytes, etc.), working your way down the membership hierarchy.  But that's tedious and expensive and ends up doing the same thing the serialization strategy would do.</p>
"
"563121","<pre><code>Graphics2D g2 = Graphics2D.class.cast(g);
</code></pre>
"
"583319","<p>There is no point in catching <strong>Error</strong>. </p>

<p>Errors are used to indicate something went really wrong in your application and it should be restarted. </p>

<p>For instance one common error is </p>

<pre><code>java.lang.OutOfMemoryError
</code></pre>

<p>There is <strong>NOTHING</strong> you can do when that happens. Is already too late, the JVM has exhausted all its options  to get more memory but it is impossible. </p>

<p>See this other answer to understand more about the <a href=""http://stackoverflow.com/questions/462501/exception-other-than-runtimeexception/462745#462745"">three kinds of exceptions</a>.</p>
"
"550127","<p>You do not use UTF-8 to encode text data for HTML forms. The html standard defines two encodings, and <a href=""http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.2"" rel=""nofollow"">the relevant part of that standard is here</a>. The ""old"" encoding, than handles ascii, is application/x-www-form-urlencoded. The new one, that works properly, is multipart/form-data.</p>

<p>Specifically, the form declaration looks like this:</p>

<pre><code> &lt;FORM action=""http://server.com/cgi/handle""
       enctype=""multipart/form-data""
       method=""post""&gt;
   &lt;P&gt;
   What is your name? &lt;INPUT type=""text"" name=""submit-name""&gt;&lt;BR&gt;
   What files are you sending? &lt;INPUT type=""file"" name=""files""&gt;&lt;BR&gt;
   &lt;INPUT type=""submit"" value=""Send""&gt; &lt;INPUT type=""reset""&gt;
 &lt;/FORM&gt;
</code></pre>

<p>And I think that's all you have to worry about - the webserver should handle it. If you are writing something that directly reads the InputStream from the web client, then you will need to read <a href=""http://www.ietf.org/rfc/rfc2045.txt"" rel=""nofollow"">RFC 2045</a> and <a href=""http://www.ietf.org/rfc/rfc2046.txt"" rel=""nofollow"">RFC 2046</a>.</p>
"
"104943","<p>Because it would break existing (pre-Java5) code. e.g.,</p>

<pre><code>Set stringSet = new HashSet();
// do some stuff...
Object o = ""foobar"";
stringSet.remove(o);
</code></pre>

<p>Now you might say the above code is wrong, but suppose that o came from a heterogeneous set of objects (i.e., it contained strings, number, objects, etc.). You want to remove all the matches, which was legal because remove would just ignore the non-strings because they were non-equal. But if you make it remove(String o), that no longer works. </p>
"
"660383","<p>If the arrays are all the same length, then the following should help.</p>

<pre><code>Arrays.equals(myArray[0], {1,1,1})
</code></pre>

<p>Otherwise, write a function that loops through all the values in <code>myArray[0]</code>.</p>
"
"605844","<pre><code>import java.io.*;

import java.net.*;

public class ConvertURLToFileName{


   public static void main(String[] args)throws IOException{
   BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
   System.out.print(""Please enter the URL : "");

   String str = in.readLine();


   try{

     URL url = new URL(str);

     System.out.println(""File : ""+ url.getFile());
     System.out.println(""Converting process Successfully"");

   }  
   catch (MalformedURLException me){

      System.out.println(""Converting process error"");

 }
</code></pre>

<p>I hope this will help you. </p>
"
"613749","<p>This <em>might</em> work for you.</p>

<pre><code>public class Main
{
    public static void main(final String[] argv)
    {
        final Main main;

        main = new Main();
        main.go();
    }

    public void go()
    {
        final Runnable runner;
        final Thread   thread;

        runner = new Foo(this);
        thread = new Thread(runner);
        thread.start();
    }

    public void callback()
    {
        System.out.println(""hi!"");
    }
}

class Foo
    implements Runnable
{
    private final Main main;

    Foo(final Main m)
    {
        main = m;
    }

    public void run()
    {
        // try catch and handle the exception - the callback is how you notify main
        main.callback();
    }
}
</code></pre>
"
"692579","<p>If you want to get current time, use <code>java.util.Date</code>.</p>
"
"31606","<p>I agree with @Bernard that method chaining like this muddles the purpose of the setters. Instead I would suggest that if you are always creating chains of setters like this that you create a custom Constructor for your class so instead of</p>

<pre><code>    MyClass
    .setInt(1)
    .setString(""test"")
    .setBoolean(true)
  ;
</code></pre>

<p>You do</p>

<pre><code>new MyClass(1,""test"",true);
</code></pre>

<p>This makes it more readable and you can use this to make your class immutable if you chose to.</p>
"
"638339","<p><code>java.io.StringReader</code> will allow you to use <code>InputSource</code>. </p>

<p>You might want to store the data in a <code>byte[]</code> and then read with <code>ByteArrayInputStream</code>. If it's particular large, you might might want to consider compression. This can be read out iwth <code>GzipInputStream</code>, which should often be wrapped in a <code>BufferedInputStream</code>.</p>
"
"703395","<p>Depending on the context (sometimes the security manager or proxies gets in the way), introspection and varargs are your friends:</p>

<p>You could have something like:</p>

<pre><code>void callStuff(String methodName, Object ... args) 
{
   for(Client client: clients)
   {
     //...filter client by name, method, etc.
     //...figure out parameter types - you can guess from args or pass another parameter
     Method method = client.getClass().getMethod(methodNamename, parameterTypes);
     method.invoke(client,args);
   } 
}
</code></pre>

<p>(disclaimer: code above is untested and not event compiled - and I have no clue if it would work with RMI)</p>
"
"703421","<p>I don't know about making your method more concise, but I have a suggestions about the parameters of the doAll method...</p>

<pre><code>public void doAll(int methodType, Object... arg) 
{
    //snip
    switch(msg_type) 
    {
	    case METHODX:
		    clients.get(name).methodXX(arg[0], arg[1]);
		    break;
	    case METHODY:
		    clients.get(name).methodYY(arg[0], arg[1], arg[2]);
		    break;
    }
    //snip
}
</code></pre>

<p>That would allow you to pass a variable number of args to the doAll method, alleviating the need for nulls.</p>
"
"158832","<p>You could try using an output parameter </p>

<pre><code>boolean MyFunction( a,b,Date c)
{
  if (good) 
     c.SetDate(....);
  return good;

}
</code></pre>

<p>Then you can call it</p>

<pre><code>Date theDate = new Date();
if(MyFunction(a, b ,theDate ) 
{
   do stuff with C
}
</code></pre>

<p>It still requires you to check something, but there isn't a way of avoiding some checking in this scenario.</p>

<p>Although SetDate is deprecated, and the Calendar implementation is just ugly.</p>

<p>Stupidest API change Sun ever did.</p>
"
"169805","<p>Try <code>mainPanel.invalidate()</code> and then if necessary, <code>mainPanel.validate()</code>.  It also might be worth checking that you're doing this all in the event dispatch thread, otherwise your results will be spotty and (generally) non-deterministic.</p>
"
"51327","<p>Of course there is a <code>PATH</code> environment variable <a href=""http://en.wikipedia.org/wiki/Environment_variable#System_path_variables"" rel=""nofollow"">in Windows</a>.</p>

<blockquote>
  <blockquote>
    <p><code>%PATH%</code>
    This variable contains a semicolon-delimited list of directories in which the command interpreter will search for executable files. Equivalent to the UNIX $PATH variable.</p>
  </blockquote>
</blockquote>
"
"57563","<p>Do you mean:</p>

<pre><code>public class MyServlet extends HttpServlet {

    public void init(final ServletConfig config) {
        final String context = config.getServletContext();
        ...
    }

    ...
}
</code></pre>

<p>Or something more complex?</p>
"
"607056","<p>in the comments below this post, myself and 2 other individuals have determined that you should learn the java langauge, research the notion of object oriented programming (including object scope), and then learn how to implement the proper event handling code - there are several ways in which you can accomplish what you want, i would suggest a combination of the code i provided along with the reference suggestion supplied by Welbog up above (this of course, will require modification of my code, but not much actually if your main class is somewhere else)</p>

<p>basically, <strong>google a java tutorial (or buy a book/""acquire"" a book), and if you know some basic concepts skip ahead to the object-oriented part.</strong></p>

<p>if i follow what you want, here's some skeleton code:</p>

<pre><code>// imports

public class GUI extends JFrame implements ActionListener {
    public String s = ""String"";

    public GUI() {
    	// initializer code for buttons
    	btn1.addActionListener(this);
    	btn2.addActionListener(this);
    }

    public void actionPerformed(ActionEvent e) {
    	if(s == ""???"")
    		s = ""this"";
    	else
    		s = ""that"";
    }

    // other methods

}
</code></pre>
"
"63218","<pre><code>public static String join(String[] strings, char del)
{
    StringBuffer sb = new StringBuffer();
    int len = strings.length;
    boolean appended = false;
    for (int i = 0; i &lt; len; i++)
    {
        if (appended)
        {
            sb.append(del);
        }
        sb.append(""""+strings[i]);
        appended = true;
    }
    return sb.toString();
}
</code></pre>
"
"77481","<p>To create a new array of a generic type (which is only known at runtime), you have to create an array of Objects and simply cast it to the generic type and then use it as such. This is a limitation of the generics implementation of Java (erasure).</p>

<pre><code>T[] newArray = (T[]) new Object[X]; // where X is the number of elements you want.
</code></pre>

<p>The function then takes the array given (a) and uses it (checking it's size beforehand) or creates a new one.</p>
"
"607122","<p>It's very difficult to decipher your question. But in general, if you want to know which button it was that caused an event, add a different <code>ActionListener</code> to each one (or its model). Keep the code as clean and simple as possible.</p>
"
"736762","<p>I think there is a faster way:</p>

<pre><code>void quickSort(int numbers[], int array_size)
{
  q_sort(numbers, 0, array_size - 1);
}


void q_sort(int numbers[], int left, int right)
{
  int pivot, l_hold, r_hold;

  l_hold = left;
  r_hold = right;
  pivot = numbers[left];
  while (left &lt; right)
  {
    while ((numbers[right] &gt;= pivot) &amp;&amp; (left &lt; right))
      right--;
    if (left != right)
    {
      numbers[left] = numbers[right];
      left++;
    }
    while ((numbers[left] &lt;= pivot) &amp;&amp; (left &lt; right))
      left++;
    if (left != right)
    {
      numbers[right] = numbers[left];
      right--;
    }
  }
  numbers[left] = pivot;
  pivot = left;
  left = l_hold;
  right = r_hold;
  if (left &lt; pivot)
    q_sort(numbers, left, pivot-1);
  if (right &gt; pivot)
    q_sort(numbers, pivot+1, right);
}
</code></pre>
"
"607143","<p>I would use a listener for observing the state of the 'string' variable.</p>

<pre><code>public class Gui
{
    public static final String STRING_PROPERTY = ""string"";
    private String string = ""String"";
    private PropertyChangeSupport propertyChangeSupport = new PropertyChangeSupport(this);

    private void setString(String string)
    {
    	String oldValue = this.string;
    	this.string = string;
    	propertyChangeSupport.firePropertyChange(STRING_PROPERTY, oldValue, this.string);
    }

    public void addPropertyChangeListener(String propertyName, PropertyChangeListener listener)
    {
    	propertyChangeSupport.addPropertyChangeListener(propertyName, listener);
    }
}
</code></pre>

<p>This snippet just demonstrates how to add propertyChangeListener support to your class. The class that is interested in knowing the value of 'string' would implement PropertyChangeListener and be added to through the 'addPropertyChangeListener' method.</p>
"
"607162","<p>You could use an ActionListener and an action command on each button as shown in this code</p>

<pre><code>public class GUI  extends JFrame implements ActionListener
{
  public static final String BUTTON_1_PRESSED = ""BUTTON_1_PRESSED"";
  public static final String BUTTON_2_PRESSED = ""BUTTON_2_PRESSED"";

  public String s = ""String"";

  public GUI()
  {
    // create buttons
    button1.addActionListener(this);
    button1.setActionCommand(BUTTON_1_PRESSED);
    button2.addActionListener(this);
    button2.setActionCommand(BUTTON_2_PRESSED);
  }

  public void actionPerformed(ActionEvent e) 
  {
    if(e.getActionCommand().equals(BUTTON_1_PRESSED))
    {
      s = ""this"";
    }
    else if(e.getActionCommand().equals(BUTTON_2_PRESSED))
    {
      s = ""that"";
    }
  }
}
</code></pre>
"
"704027","<p>nothing happens ->  probably Netbeans is indicating an error somewhere near the ""??????????"" (I don't use Netbenas).<br />
First, there are some errors in your code: </p>

<ul>
<li>main must be static</li>
<li>String is with an uppercase <strong>S</strong> </li>
</ul>

<p>I would sugest to start with a simple Hello World (kind of):</p>

<pre><code>public static void main(String args[]) {
    System.out.println(""Papaa"");
}
</code></pre>

<p>if this works - print ""Papaa"" on the console - you can go on creating an instance of your class.</p>
"
"616057","<p>There's two obvious approaches I see:</p>

<p>Instead of getting a <code>String</code> from the <code>ResourceBundle</code>, get some kind of event-source <code>String</code> holder. <code>Document</code> would be the very heavy solution, but anything that can handle replacing an immutable value will do. Instead of just setting the text on a label, say, have a method that also sets up a listener. Note, this quite a ""heavy"" solution.</p>

<p>Alternatively, have a central repository of listeners that are fired on a locale change, that each then go back and re-execute the relevant part of the set up code (don't duplicate). For common cases where you have, say, a <code>JLabel</code> using a resource string literally, then you can combine these all into one listener with a <code>WeakHashMap&lt;JLabel,String&gt;</code>. Sometimes it works out better to avoid lots of little listeners.</p>
"
"83394","<p>Have you tried using:</p>

<pre><code>System.loadLibrary(""mylibrary.dll"");
</code></pre>

<p>Not sure if this will work with a pure C library but it's probably worth a shot. :)</p>
"
"629415","<p>If findbugs has its own version of BCEL then why do I get this error:</p>

<pre><code>[findbugs] Executing findbugs from ant task
[findbugs] Running FindBugs...
[findbugs] The java class is not found:  org.apache.bcel.classfile.ClassFormatException
[findbugs] Output saved to C:\\findbugs\\out.html
</code></pre>

<p>This error occurs if I remove bcel.jar from the findbugs.home directory.</p>
"
"223718","<p>You could do the cast with <code>@SuppressWarnings</code>.   I believe that would be appropriate in this case, just make sure you document why in a comment.</p>

<p>Alternately, do the following:</p>

<pre><code>public List&lt;JComponent&gt; getComponents()
{
  return new ArrayList&lt;JComponent&gt;( buttons );
}
</code></pre>

<p>Yes I know this makes a copy and the list is already read-only.  But until the profiler tells you otherwise, I would assume the penalty is small.</p>

<p>@Calum: I agree that using ?-expressions in return types is bad form because calling code is unable to do this for example:</p>

<pre><code>List&lt;JComponent&gt; list = obj.getComponents();
</code></pre>
"
"766628","<pre><code>String sub = str.substring(i, i+1);
</code></pre>

<p>The above line is only getting a 2-character substring so instead of getting ""cat"" you'll get ""ca"" and it will never match. Fix this by changing 'i+1' to 'i+2'.</p>

<p><strong>Edit:</strong> Now that you've clarified your question in the comments: You should have two counter variables, one to count the 'dog's and one to count the 'cat's. Then at the end return true if <code>count_cats == count_dogs</code>.</p>
"
"225523","<p>You can have the PrintWriter write to a ByteArrayOutputStream and reconstruct the String from the bytes.</p>

<pre><code>try{
    throw new Exception(""Message"");		
} catch (Exception ex){
    ByteArrayOutputStream out = new ByteArrayOutputStream();
    ex.printStackTrace(new PrintStream(out));
    System.out.println(new String(out.toByteArray()));
}
</code></pre>

<p>It's not pretty, but it should work pretty much everywhere. Before you try the above, make sure you don't have access to <a href=""http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Throwable.html#getStackTrace()"" rel=""nofollow"">Throwable#getStackTrace</a>, Eclipse claims it's available in CDC/Foundation 1.1, but that doesn't say anything about other profiles.</p>
"
"109396","<p>Depending on the context, using <code>java.util.LinkedHashMap&lt;T&gt;</code> which rememebers the order in which items are placed into the map.  Otherwise, if you need to sort values based on their natural ordering, I would recommend maintaining a separate List which can be sorted via <code>Collections.sort()</code>.</p>
"
"109407","<p>If your Map values implement Comparable (e.g. String), this should work</p>

<pre><code>Map&lt;Object, String&gt; map = new HashMap&lt;Object, String&gt;();
// Populate the Map
List&lt;String&gt; mapValues = new ArrayList&lt;String&gt;(map.values());
Collections.sort(mapValues);
</code></pre>

<p>If the map values themselves don't implement Comparable, but you have an instance of Comparable that can sort them, replace the last line with this:</p>

<pre><code>Collections.sort(mapValues, comparable);
</code></pre>
"
"109958","<p>Okay, this version works with two new Map objects and two iterations and sorts on values. Hope, the performs well although the map entries must be looped twice:</p>

<pre><code>public static void main(String[] args) {
	Map&lt;String, String&gt; unsorted = new HashMap&lt;String, String&gt;();
	unsorted.put(""Cde"", ""Cde_Value"");
	unsorted.put(""Abc"", ""Abc_Value"");
	unsorted.put(""Bcd"", ""Bcd_Value"");

	Comparator&lt;String&gt; comparer = new Comparator&lt;String&gt;() {
		@Override
		public int compare(String o1, String o2) {
			return o1.compareTo(o2);
		}};

	System.out.println(sortByValue(unsorted, comparer));

}

public static &lt;K, V&gt; Map&lt;K,V&gt; sortByValue(Map&lt;K, V&gt; in, Comparator&lt;? super V&gt; compare) {
	Map&lt;V, K&gt; swapped = new TreeMap&lt;V, K&gt;(compare);
	for(Entry&lt;K,V&gt; entry: in.entrySet()) {
		if (entry.getValue() != null) {
			swapped.put(entry.getValue(), entry.getKey());
		}
	}
	LinkedHashMap&lt;K, V&gt; result = new LinkedHashMap&lt;K, V&gt;();
	for(Entry&lt;V,K&gt; entry: swapped.entrySet()) {
		if (entry.getValue() != null) {
			result.put(entry.getValue(), entry.getKey());
		}
	}
	return result;
}
</code></pre>

<p>The solution uses a TreeMap with a Comparator and sorts out all null keys and values. First, the ordering functionality from the TreeMap is used to sort upon the values, next the sorted Map is used to create a result as a LinkedHashMap that retains has the same order of values.</p>

<p>Greetz, GHad</p>
"
"245472","<p>First, let's take care of the static scope issue ... Your class is defining an object, but never actually instantiating one.  Since main is statically scoped, the first thing to do is get an object, then execute it's methods like this:</p>

<pre><code>public class RecursiveTry{

    private int[] n = {1,2,4,3,3,32,100};

    public static void main(String[] args){
        RecursiveTry maxObject = new RecursiveTry();
        System.out.println(maxObject.Max(maxObject.n, 0));
    }

    public int Max(int[] n, int start) {
        if(start == n.length - 1) {
        	return n[start];
        } else { 
    	    int maxRest = Max(n, start + 1);
    	    if(n[start] &gt; maxRest) {
    	        return n[start];
    	    }
    	    return maxRest;
        }
    }

}
</code></pre>

<p>So now we have a RecursiveTry object named maxObject that does not require the static scope.  I'm not sure that finding a maximum is effective using recursion as the number of iterations in the traditional looping method is roughly equivalent, but the amount of stack used is larger using recursion.  But for this example, I'd pare it down a lot.</p>

<p>One of the advantages of recursion is that your state doesn't generally need to be persisted during the repeated tests like it does in iteration.  Here, I've conceded to the use of a variable to hold the starting point, because it's less CPU intensive that passing a new int[] that contains all the items except for the first one.</p>
"
"791824","<p>One way is to make it a final class like Java's own String, which will make any change to an object of class Trader to create a new copy in memory, but it will make it impossible to subclass it.</p>

<p>Another (better) way is to use a factory method to create and copy Trader objexts, which implies that you must not allow for the default constructor to be used i.e. make it a private. This way you can control the number of instances the class has.
See <a href=""http://en.wikipedia.org/wiki/Factory%5Fmethod"" rel=""nofollow"">http://en.wikipedia.org/wiki/Factory_method</a></p>

<pre><code>public class Trader {

    /* prevent constructor so new cant be used outside the factory method */
    private Trader() {
    }

    /* the factory method */
    public static Trader createTrader(int whatKindOfTrader) {

    	switch (whatKindOfTrader) {
    	case 0:
    		return new Trader1(); // extends Trader
    	case 1:
    	default:
    		return new Trader2(); // extends Trader
    	}
    	return new Trader3(); // or throw exception
    }
}
</code></pre>

<p>You might even specify another overloaded method, or a second argument that takes one Trader and copies it into a new one, thus replacing clone.
Btw, you might want to override the clone() method and throw CloneNotSupportedException, to prevent default Object cloning.</p>
"
"137770","<p>I use special functions in my library to work with days/month/year ints -</p>

<pre><code>int[] int_dmy( long timestamp ) // remember month is [0..11] !!!
{
  Calendar cal = new GregorianCalendar(); cal.setTimeInMillis( timestamp );
  return new int[] { 
    cal.get( Calendar.DATE ), cal.get( Calendar.MONTH ), cal.get( Calendar.YEAR )
  };
};


int[] int_dmy( Date d ) { 
 ...
}
</code></pre>
"
"138019","<p>You can do the whole thing using Integer math without needing to instantiate a calendar:</p>

<pre><code>return (System.currentTimeMillis()/1000/3600/24/365.25 +1970);
</code></pre>

<p>May be off for an hour or two at new year but I don't get the impression that is an issue?</p>
"
"815425","<p>Try:</p>

<pre><code>Runtime.getRuntime().exec(""'C:\Documents and Settings\Administratore\Desktop\gradpro\test1\s1.wav'"") ;
</code></pre>

<p>Note the extra single quotations.  I'm not even sure if your method will work, but give that a go. </p>
"
"804007","<p>As you see, if a class tries to implement <code>Cloneable</code> and you want a <em>deep</em> clone, then all of your constituent objects needs to be immutable, primitive, or need to also be Cloneable.</p>

<p>Often, a better and easier approach is to create a copy constructor.</p>

<pre><code>public class Scope&lt;C extends Comparable&lt;C&gt;&gt; implements Comparable&lt;Scope&lt;C&gt;&gt;, Serializable {
    private C starts;
    private C ends;
    public Scope(final Scope original) {
       starts = new C(original.starts);
       ends = new C(original.ends);
       // initialize all my other fields from ""original""
    }
}
</code></pre>

<p>and of course you need a copy constructor on <code>C</code> that is capable of handling polymorphism.</p>

<p>If you have no access or ability to modify the source to <code>C</code>, then any method of copying, no matter what the method, will be very difficult and potentially impossible.  For example, it is not possible to make a copy of an <code>enum</code> instance.</p>
"
"156721","<p>Are you concerned primarily with getting a clean report from FindBugs or with having code that works? These are not necessarily the same thing. Your original code is fine (although I would get rid of the redundant <code>if (fis != null)</code> check since an <code>OutOfMemoryException</code> would have been thrown otherwise). FileInputStream has a finalizer method which will close the stream for you in the unlikely event that you actually receive an IOException in your processing. It's simply not worth the bother of making your code more sophisticated to avoid the extremely unlikely scenario of</p>

<ol>
<li>you get an IOException and </li>
<li>this happens so often that you start to run into finalizer backlog issues.</li>
</ol>

<p><strong>Edit:</strong> if you are getting so many IOExceptions that you are running into problems with the finalizer queue then you have far far bigger fish to fry! This is about getting a sense of perspective.</p>
"
"682378","<p>""##"" is the single line comment delimiter in VTL, which is probably the start of your problems.</p>

<pre><code>## This is a comment
</code></pre>
"
"825637","<p>No, they aren't equal, they have different presentation in memory.</p>

<p>In general when you want to compare 2 floating point values you mustn't use == (and if so you can't operate with termin 'equals'). You should use comparison with epsilon.</p>

<pre><code>double eps = 0.0000001;
if (Math.abs (Java_PI - Another_Pi) &lt;= eps)
  System.out.println (""equals"");
</code></pre>
"
"825952","<p>You could split the string on ?, then put it back together, alternating between replacing spaces and not.</p>

<p>Edit: Oops. Missed the equal signs.  Will correct.</p>

<p>Edit 2: Corrected implementation (derived from Javadoc example for Matcher.appendReplacement() ):</p>

<pre><code>String input = ""=?iso-8859-1?Q?H=E4 ll?= what about in this case? :) =?iso-8859-1?Q?mo nk ey?="";

Pattern p = Pattern.compile(""=\\?(.*?)\\?="");
Matcher m = p.matcher(input);
StringBuffer sb = new StringBuffer();
while (m.find()) {
    m.appendReplacement(sb, m.group().replaceAll("" "", """"));
}
m.appendTail(sb);
System.out.println(sb.toString());
</code></pre>
"
"326409","<p>You could try:</p>

<pre><code>FileInputStream input = new FileInputStream(filePath);

byte[] fileData = new byte[input.available()];

input.read(fileData);
input.close();

return new String(fileData, ""UTF-8"");
</code></pre>

<p>I'm not sure what problems might occur with the bytes and character sets etc, but it works for me.</p>
"
"841170","<p>Set it up so MyDialog(false, false, .....) is the expected default behaviour. (ie: The most common case should take all false.  You may need to reverse the semantics of the flags.)</p>

<p>Now, define constants:</p>

<pre><code>OPTION1 = 1
OPTION2 = 2
OPTION3 = 4
OPTION4 = 8
...
</code></pre>

<p>Change the method to take an int options parameter</p>

<pre><code>public void MyDialog(int options) ...
</code></pre>

<p>Now call it:  </p>

<pre><code>MyDialog(OPTION1 | OPTION3)  // enable Opt1, opt2)
</code></pre>

<p>inside the method:</p>

<pre><code>if (options &amp; OPTION1) // use Option 1 config.
</code></pre>

<p>etc.</p>
"
"723623","<p>You may try </p>

<ul>
<li><p>Reflection based invocation or Code generation or the old preprocessing technique or</p></li>
<li><p>Strategy pattern to encapsulate what varies.</p></li>
</ul>

<pre><code>class ThirdPartyApi {
     void foo(){}  // available in all versions
     void bar(){}  // available only in new version
}

ThirdPartyApiV1 extends ThirdPartyApi {
     void foo() {
        thirdpartyV1Object.foo();
     }
}

ThirdPartyApiV2 extends ThirdPartyApi {
     void foo() {
        thirdpartyV2Object.foo();
     }
     void bar() {
        thirdpartyV2Object.bar();
     }
}

</code></pre>

<p>Use a DependencyInjection to inject the correct version of ThridPartyApi implementation. 
Otherwise use a ThirdPartyApiFactory to create the appropriate instance based on a configuration or system property value.</p>
"
"841232","<p>If the GUI <strong>depends on the state</strong> of the app ( where one state leads to another )  You can take a look at the <a href=""http://en.wikipedia.org/wiki/State%5Fpattern"" rel=""nofollow"">State</a> pattern.  Where each new state will be handled by a different object and you can code whether the flags should go or no. </p>

<p>ie.</p>

<pre><code>abstract class State { 
      public abstract boolean [] getFlags();
      public abstract State next();
 }
 class InitialState extends State  { 
      public boolean [] getFlags() {
          return new boolean [] { true, true, false, false, false };
      }
      public State next() { return new MediumState(); }
 }     
 class MediumState extends State { 
     public boolean [] getFlags() { 
         return new boolean[] { false, false, true, true, false };
     }
     public State next() { return new FinalState(); }
 }
 class Final extends State { 
     public boolean [] getFlags() { 
         return new boolean[]{false, false, false, false, true };
     }
     public State next() { return null;}
  }
</code></pre>

<p>And the show your dialog using this states</p>

<pre><code>new MyDialog(showOptionsTable, new InitialState() );
</code></pre>

<p>....</p>

<p>When the state of the application changes, you change the State object.</p>

<pre><code>public void actionPerfomed( ActionEvent e ) { 
    this.state = state.next();
    repaint();
 }
</code></pre>

<p>To paint the sections of your dialog you query the state:</p>

<pre><code>  if( state.getFlags()[SECURITY] ) { 
      /// show security stuff
  } if ( state.getFlags()[VIEW_ONLY] ) { 
      // enable/disable stuff 
  } ....
</code></pre>

<p>You can go a step further ant let the State define what is presented. </p>

<pre><code>abstract class State { 
      public abstract JComponent getComponent();
      public abstract State next();
 }
</code></pre>

<p>So each state shows a different section:</p>

<pre><code> Dialog.this.setContentPane( state.getComponent() );
</code></pre>
"
"338797","<p>Primitives are stored onto the Stack and are passed by value.</p>

<pre><code>int x = 5;
int y = x;

y++;

// y = 6
// x = 5
</code></pre>

<p>Objects are stored onto the heap and are passed by reference.</p>

<pre><code>Object a = new Object();
Object b = a;

b.someAction();

// A and B point to the same object and both have had the 'someAction()' performed
</code></pre>

<p>I've no idea if this is what your asking, but I'm bored and wish to post <i>something</i></p>
"
"841660","<p>I prefer flagged enums to a settings class if the parameters are all going to be boolean. If you can't guarantee that in the future though it would be better safe than sorry though. Here's another implementation for flags:</p>

<pre><code>[Flags]
public enum LayoutParams
{  
    OptionsTable = 1,  
    FooInput = 2,  
    BarInput = 4,  
    SuperUser = 8,
}

public MyDialog(LayoutParams layoutParams)
{
    if (layoutParams &amp; LayoutParams.OptionsTable)
    { /* ... Do Stuff ... */ }
}

public static MyDialog CreateBasic()
{
    return new MyDialog(LayoutParams.OptionsTable | LayoutParams.BarInput);
}
</code></pre>
"
"211512","<p>Here's one way to get PostgreSQL connectivity to your application:</p>

<ol>
<li>Get an instance of <code>org.postgresql.ds.PGSimpleDataSource</code></li>
<li>Setup it with values matching to your database (see methods below)</li>
<li>Proceed using the DataSource as you would use any other, I'd assume at this point you'd be interested in the <code>DataSource.getConnection()</code> method.</li>
</ol>

<p>The proprietary methods for configuring this particular DataSource are <code>setServerName()</code>, <code>setDatabaseName()</code>, <code>setUser()</code> and <code>setPassword()</code>.</p>

<p>I wouldn't recommend doing this for anything else than testing though and it's possible your problem lies in the way you're trying to get an instance of the object using <code>Class.forName()</code> There's almost a dozen different ways to get an instance of an object with subtle differences, I suggest Googling for it since it is a subject a lot of people have already written about all over the Internet.</p>
"
"841925","<p>Depending on just how different your display is going to be, you might consider subclassing your display class (i.e. <code>MyDialogSuperUser</code> or somesuch).  You need to consider just how orthogonal the inputs to your dialog class are and how to express that orthogonality.</p>
"
"842016","<p>I have a favorite way to handle this, but it's not valid for all use cases.  If the booleans are not entirely independent (say there are some invalid combinations of booleans, or combinations of booleans are reached through identifiably scenarios.)  I create an enum for the state and then define a constructor that holds onto the flags:</p>

<pre><code>public enum status {
    PENDING(false,false),
    DRAFT(true,false),
    POSTED(false,true),
    ;
    public boolean isSent;
    public boolean isReceived;
    status(boolean isSent, boolean isReceived) {
        this.isSent = isSent;
        this.isReceived = isReceived;
    }
}
</code></pre>

<p>The advantage to a piece of code like this is that you can construct your enum constants relatively tersely, but still allow code to only care about one particular aspect of state.  For example:</p>

<pre><code>//I want to know specifically what the state is
if (article.state == status.PENDING)
// Do something

//I really only care about whether or not it's been sent
if (article.state.isSent)
// Do something

//I want to do something specific for all possible states
switch(article.state)
// A string of case statements
</code></pre>

<p>Another plus is that illegal states are never reached if you define your enum well:</p>

<pre><code>if (article.state.isReceived &amp;&amp; !article.state.isSent) {
// This block can never execute ever.
}
</code></pre>

<p>Granted, it's not all the time that there's a logical relationship among booleans, but I do recommend mapping them out.  If a subset of booleans have logical relationships, it might be worth breaking those off into an enum.</p>
"
"879359","<pre><code>public class SomeClass { 
    static {
        System.out.println(""Being called with the class is loaded"");
        initialize();
    }
    static void initialize(){}
}
</code></pre>

<p>Is that your question?</p>
"
"375833","<p>Here is the final result of what I did with your suggestion.  I thought it would be nice to have out here in case someone has the same problem.  The resulting calling code looks like:</p>

<pre><code>content = ReplaceCallback.find(content, regex, new ReplaceCallback.Callback() {
    public String matches(MatchResult match) {
    	// Do something special not normally allowed in regex's...
    	return ""newstring""
    }
});
</code></pre>

<p>The entire class listing follows:</p>

<pre><code>import java.util.regex.MatchResult;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import java.util.Stack;

/**
 * &lt;p&gt;
 * Class that provides a method for doing regular expression string replacement by passing the matched string to
 * a function that operates on the string.  The result of the operation is then used to replace the original match.
 * &lt;/p&gt;
 * &lt;p&gt;Example:&lt;/p&gt;
 * &lt;pre&gt;
 * ReplaceCallback.find(""string to search on"", ""/regular(expression/"", new ReplaceCallback.Callback() {
 *  	public String matches(MatchResult match) {
 *  		// query db or whatever...
 *  		return match.group().replaceAll(""2nd level replacement"", ""blah blah"");
 *  	}
 * });
 * &lt;/pre&gt;
 * &lt;p&gt;
 * This, in effect, allows for a second level of string regex processing.
 * &lt;/p&gt;
 *
 */
public class ReplaceCallback {
    public static interface Callback {
    	public String matches(MatchResult match);
    }

    private final Pattern pattern;
    private Callback callback;

    private class Result {
    	int start;
    	int end;
    	String replace;
    }

    /**
     * You probably don't need this.  {@see find(String, String, Callback)}
     * @param regex		The string regex to use
     * @param callback	An instance of Callback to execute on matches
     */
    public ReplaceCallback(String regex, final Callback callback) {
    	this.pattern = Pattern.compile(regex);
    	this.callback = callback;
    }

    public String execute(String string) {
    	final Matcher matcher = this.pattern.matcher(string);
    	Stack&lt;Result&gt; results = new Stack&lt;Result&gt;();
        while(matcher.find()) {
            final MatchResult matchResult = matcher.toMatchResult();
            Result r = new Result();
    		r.replace = callback.matches(matchResult);
    		if(r.replace == null)
    			continue;
    		r.start = matchResult.start();
    		r.end = matchResult.end();
    		results.push(r);
        }
    	// Improve this with a stringbuilder...
    	while(!results.empty()) {
    		Result r = results.pop();
    		string = string.substring(0, r.start) + r.replace + string.substring(r.end);
    	}
    	return string;
    }

    /**
     * If you wish to reuse the regex multiple times with different callbacks or search strings, you can create a
     * ReplaceCallback directly and use this method to perform the search and replace.
     *
     * @param string	The string we are searching through
     * @param callback	A callback instance that will be applied to the regex match results.
     * @return	The modified search string.
     */
    public String execute(String string, final Callback callback) {
    	this.callback = callback;
    	return execute(string);
    }

    /**
     * Use this static method to perform your regex search.
     * @param search	The string we are searching through
     * @param regex		The regex to apply to the string
     * @param callback	A callback instance that will be applied to the regex match results.
     * @return	The modified search string.
     */
    public static String find(String search, String regex, Callback callback) {
    	ReplaceCallback rc = new ReplaceCallback(regex, callback);
    	return rc.execute(search);
    }
}
</code></pre>
"
"304652","<p>Does</p>

<pre><code>type = T.getClass();
</code></pre>

<p>work?</p>
"
"905987","<p>List is an interface, LinkedList is a concrete implementation of that interface.
Much of the time an implicit cast will work, assign a LinkedList to a List, or pass it to a function expecting a List and it should just `work'.</p>

<p>An explicit cast can also be done if necessary.</p>

<pre><code>//This is valid
List&lt;Customer&gt; myList = new LinkedList&lt;Customer&gt;();

//Also Valid
List&lt;Customer&gt; myList = (List&lt;Customer&gt;) new LinkedList&lt;Customer&gt;();
</code></pre>
"
"285346","<p>You could write the code in class B as follows:</p>

<pre><code>public int displayAlteredValue(int inp) 
{
    return -1;
}
</code></pre>

<p>and indicate on the function that -1 is an error return. For int this doesn't really work, but if you returned a class, you could return null if they call the single parameter version of the method.</p>
"
"756521","<p>0.1 is NOT a binary representation of 0.5</p>

<p>Java will represent 0.5 using IEEE 754, as specified on the <a href=""http://java.sun.com/docs/books/jls/second%5Fedition/html/typesValues.doc.html#9208"" rel=""nofollow"">Java Language Specification</a>. <code>BigInteger.valueOf(Double.doubleToRawLongBits(0.5)).toByteArray()</code> will give you a byte per byte representation of 0.5 as Java does internally.</p>
"
"304659","<p>You should try this maybe:</p>

<pre><code>type = T.GetType();
</code></pre>
"
"922536","<p>Wouldn't this work?</p>

<pre><code>return ( ( Math.abs( size( root.left ) - size( root.right ) ) &lt; 2 );
</code></pre>

<p>Any unbalanced tree would always fail this.</p>
"
"80954","<p>You are thinking C/C++.</p>

<p>Use objects instead of an identifier byte (or int).</p>

<p><strong>My Bad, the overload approach is better and using the SSN as a primary key is not so good</strong></p>

<pre><code>public ??? getEmployeeName(Object obj){

if (obj instanceof Integer){

  ...

} else if (obj instanceof String){

...

} else if .... // and so on


} else throw SomeMeaningFullRuntimeException()

return employeeName
}
</code></pre>

<p>I think it is better to use Unchecked Exceptions to signaling incorrect input.</p>

<p>Document it so the customer knows what objects to expect. Or create your own wrappers.  I prefer the first option.</p>
"
"916279","<p>To perform two processes sequentially, traditionally you just call one method after the other(!).</p>

<pre><code>fillList();
doStuffToList();
</code></pre>

<p>Or perhaps something like:</p>

<pre><code>doStuffToList(fillList());
</code></pre>

<p>If you are processing one at a time, you might want two threads with a <code>BlockingQueue</code> between. You might go further by having multiple do-stuff threads.</p>

<p>As far as the AWT Event Dispatch Thread (EDT) is concerned it's just spun off an action without blocking, and will get notified later.</p>
"
"314980","<p>In the Parent class initiate the boolean to null and in the child class build a method to check to see if the boolean has been set</p>

<p>in Parent class  </p>

<pre><code>private Boolean a = null;

public void setA(Boolean a) {
	this.a = a;
}


public Boolean getA() {
	return a;
}
</code></pre>

<p>In the Child Class </p>

<pre><code>if (a == true)
{
dothis;
}
else if (a == false)
{
dothat;
}
else
{
assert false : ""Boolean a has not been set"";
}
</code></pre>

<p>Make sure that assertions are turned on. Assertions are only for the development cycle and test cycle, they are not for runtime exceptions.</p>
"
"81712","<p>stick all your options in an enum, the have something like the following</p>

<pre><code>GetEmployeeName(Enum identifier)
{
    switch (identifier)
    case eBatchID:
    {
        // Do stuff
    }
    case eSSN:
    {
    }
    case eEmailId:
    {
    }
    case eSalary:
    {
    }
    default:
    {
        // No match
        return 0;
    }
}

enum Identifier
{
    eBatchID,
    eSSN,
    eEmailID,
    eSalary
}
</code></pre>
"
"321453","<p>I use this..</p>

<pre><code>finally
{
    if (ps != null) ps.close();
    if (rs != null) rs.close();
}
</code></pre>
"
"769519","<pre><code>public static void myFun(Collection&lt;MyClass&gt; collection) {
    for (MyClass mc : collection) {
        // Stuff is processed here
    }
}
</code></pre>
"
"356320","<p>I would choose the Exception option in first place.</p>

<p>But, in second place, I would prefer the C-style technique:</p>

<pre><code>public boolean authenticate(Client client, final StringBuilder sb) {
	if (sb == null)
		throw new IllegalArgumentException();
	if (isOK()) {
		sb.append(""info message"");
		return true;
	} else {
		sb.append(""error message"");
		return false;
	}
}
</code></pre>

<p>This is not so strange and it's done in many places in the framework.</p>
"
"950382","<p>The following code checks the machineType field in any windows executable to determine if it is 32 or 64 bit:</p>

<pre><code>public class ExeDetect
{
  public static void main(String[] args) throws Exception {
    File x64 = new File(""C:/Program Files/Java/jre1.6.0_04/bin/java.exe"");
    File x86 = new File(""C:/Program Files (x86)/Java/jre1.6.0/bin/java.exe"");
    System.out.println(is64Bit(x64));
    System.out.println(is64Bit(x86));
  }

  public static boolean is64Bit(File exe) throws IOException {
    InputStream is = new FileInputStream(exe);
    int magic = is.read() | is.read() &lt;&lt; 8;
    if(magic != 0x5A4D) 
        throw new IOException(""Invalid Exe"");
    for(int i = 0; i &lt; 58; i++) is.read(); // skip until pe offset
    int address = is.read() | is.read() &lt;&lt; 8 | 
         is.read() &lt;&lt; 16 | is.read() &lt;&lt; 24;
    for(int i = 0; i &lt; address - 60; i++) is.read(); // skip until pe header+4
    int machineType = is.read() | is.read() &lt;&lt; 8;
    return machineType == 0x8664;
  }
}
</code></pre>

<p>Note that the code has been compacted for brevity...</p>
"
"356326","<p>Instead of creating a special object for return type, I usually just return an array where all the returned information is stored. The benefit is that you can extend this array with new elements without creating new types and mess. The downside you have to know exactly what elements should present when array is returned from particular method to parse it correctly. Usually I agree on certain structure, like first element is always Boolean indication success, second is String with description, the rest is optional.
Example:</p>

<pre><code>public static void main(String[] args)
{
	Object[] result = methodReturningStatus();
	if(!(Boolean)result[0])
		System.out.println(""Method return: ""+ result[1]);
}

static Object[] methodReturningStatus()
{
	Object[] result = new Object[2];

	result[0] = false;
	result[1] = ""Error happened"";

	return result;
}
</code></pre>
"
"963983","<p>It's a very good question.
I usually use the not graceful:    </p>

<pre><code>if (object.getAttribute(""someAttr"") != null &amp;&amp; object.getAttribute(""someAttr"").equals(""true"")) { // ....
</code></pre>

<p>(and I will not use it anymore)</p>
"
"430494","<p>@Dan Dyer is wrong, Class.forName <em>can</em> throw <code>NoClassDefFoundError</code>, if the class it is trying gets a ClassNotFoundException error in its static initialiazer. The following is unte</p>

<pre><code>class Outer {
  public static final void main(final String[] args) throws Exception{
    Class.forName(""Inner"");
  }
}
</code></pre>

<p>If you compile and run this in a directory with no other file you get <code>ClassNotFoundException: Inner</code></p>

<p>Now add the following to in the same directory, compile everything and <code>java Outer</code> once to see it runs ok.</p>

<pre><code>class Inner {
  static Inner2 _i2 = new Inner2();
}

class Inner2 {}
</code></pre>

<p>Finally, delete Inner2.class and rerun Outer, you <em>will</em> get <code>NoClassDefFoundError: Inner2</code>, <code>caused by ClassNotFoundException: Inner2</code> </p>
"
"798743","<p>I happen to really like this operator, but I never use it at work.</p>

<p>You always have to balance code compactness with the time spent reading it, and in that it has some pretty severe flaws.</p>

<p>First of all, there is the posters case.  He just spent an hour posting about it and reading the responses.  How longer would it have taken the author to write every ?: as an if/then throughout the course of his entire life.  Not an hour to be sure.</p>

<p>Secondly, in C-like languages, you get in the habit of simply knowing that conditionals are the first thing in the line.  I noticed this when I was using Ruby and came across lines like:</p>

<pre><code>callMethodWhatever(Long + Expression + with + syntax) if conditional
</code></pre>

<p>If I was a long time Ruby user I probably wouldn't have had a problem with this line, but coming from C, when you see ""callMethodWhatever"" as the first thing in the line, you expect it to be executed.  The ?: is less cryptic, but still unusual enough as to throw a reader off.</p>

<p>The advantage, however, is a really cool feeling in your tummy when you can write a 3-line if statement in the space of 1 of the lines.  Can't deny that :)  But honestly, not necessarily more readable by 90% of the people out there simply because of its' rarity. </p>
"
"122863","<p>First, your syntax had an extra ""]"" which was causing an error.  </p>

<p>To fix that, and to set a variable you would do this:</p>

<pre><code>&lt;c:set var=""nullUser"" 
    scope=""session"" 
    value=""${sessionScope[Constants.ATTR_CURRENT_USER] eq null}"" /&gt;

&lt;c:if test=""${nullUser}""&gt;
     &lt;h2&gt;First Test&lt;/h2&gt;
&lt;/c:if&gt;
&lt;c:if test=""${nullUser}""&gt;
     &lt;h2&gt;Another Test&lt;/h2&gt;
&lt;/c:if&gt;
</code></pre>
"
"982543","<p>Do you want to subclass the Animal class?
You could also use:</p>

<pre><code>public class Dog extends Animal { 
    public Dog () {
        super();
        // other constructor stuff
    }
}
</code></pre>

<p>Then your Dog object would already inherit properties.</p>
"
"452673","<p>Ok, basically you have things the wrong way arond: <code>JPA is the generation tool</code>.</p>

<p>I say this because the only thing you could generate JPA entities from is SQL and the whole point of JPA is to do things the other way around.  You define your object model first and, from that, you can generate your tables and queries.</p>

<p>For example, I've seen projects use Hibernate to define their entities and then they have an ant build script that creates the database from the Hibernate entity model.</p>

<p>JPA entity definitions--especially done with annotations--aren't exactly onerous.  They really are your best option as the first thing to do rather than being the product of something else.</p>

<p>Besides, another tool won't help you write named queries, define the correct cascade options on relationships, etc.  And if you had generated code, how would you handle modifying it afterwards?</p>

<p>It's just not the right way to go.</p>
"
"471388","<p>Unless <code>i</code> is being changed inside the loop?</p>
"
"1016616","<p>So you just want to loop over a data set for ever?</p>

<p>Can't you do something like this</p>

<pre><code>for(int i =0; i &lt; List.size() ; i++){

 if(i == List.size()){

   i =0;
 }

}
</code></pre>
"
"174644","<p>The above code is bad because it is equivalent as the following. </p>

<pre><code>// this is bad
int val = Integer.MIN_VALUE;
try
{
   val = Integer.parseInt(userdata);
}
catch (NumberFormatException ignoreException) { }
</code></pre>

<p>The exception is ignored completely. Also, the magic token is bad because an user can pass in -2147483648 (Integer.MIN_VALUE).</p>

<p>The generic parse-able question is not beneficial.  Rather, it should be relevant to the context.  Your application has a specific requirement.  You can define your method as</p>

<pre><code>private boolean isUserValueAcceptable(String userData)
{
   return (    isNumber(userData)    
          &amp;&amp;   isInteger(userData)   
          &amp;&amp;   isBetween(userData, Integer.MIN_VALUE, Integer.MAX_VALUE ) 
          );
}
</code></pre>

<p>Where you can documentation the requirement and you can create well defined and testable rules.</p>
"
"381080","<p>You can use a HashMap:</p>

<pre><code>Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();
map.put(""R1"", ""R2"");
map.put(""R2"", ""R3"");

for(String key: map.keySet()) {
  str.replaceAll(key, map.get(key));
}
</code></pre>

<p>replaceAll also handles regular expressions.</p>

<p>EDIT: The above solution, as many have pointed out, doesn't work because it doesn't handle cyclic replacements. So this is my second approach:</p>

<pre><code>public class Replacement {

    private String newS;
    private String old;

    public Replacement(String old, String newS) {
        this.newS = newS;
        this.old = old;
    }

    public String getOld() {
        return old;
    }

    public String getNew() {
        return newS;
    }
}

SortedMap&lt;Integer, Replacement&gt; map = new TreeMap&lt;Integer, Replacement&gt;();

map.put(new Integer(1), new Replacement(""R2"", ""R3""));
map.put(new Integer(2), new Replacement(""R1"", ""R2""));

for(Integer key: map.keySet()) {
   str.replaceAll(map.get(key).getOld(), map.get(key).getNew());
}
</code></pre>

<p>This works provided that you order the replacements properly and that you guard yourself against cyclic replacements. Some replacements are impossible:</p>

<pre><code>R1 -&gt; R2
R2 -&gt; R3
R3 -&gt; R1
</code></pre>

<p>You must use some 'temp' variables for these:</p>

<pre><code>R1 -&gt; R@1
R2 -&gt; R@3
R3 -&gt; R1
R@(\d{1}) -&gt; R\1
</code></pre>

<p>You could write a library that it would do all these for you.</p>
"
"458279","<p>The easiest way is to implement your own <a href=""http://java.sun.com/javase/6/docs/api/javax/swing/table/TableModel.html"" rel=""nofollow"">TableModel</a></p>

<pre><code>public class MyModel extends AbstractTableModel {
    List rows;

    public int getRowCount() {
        return rows.size();
    }

    public int getColumnCount() {
         return 4;
    }

    public Object getValueAt(int row, int column) {
        return rows.get(row).getCol(col);  //assuming your row ""Object"" has a getCol()
    }

    public Class&lt;?&gt; getColumnClass(int col) {
        return Boolean.class;
    }

    public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
        rows.get(rowIndex).getCol(columnIndex).setValue(aValue);
    }

}
</code></pre>

<p>Load this into you JTable.  If you haven't replaced the default cell renderer for Boolean's, all you cells will be rendered as check boxes thanks to you implementation of getColumnClass().  All user input to these check boxes is collected with our setValueAt().</p>
"
"811359","<p>Hmmm.  One solution would be to make it into a java bean and use <code>XMLEncoder</code>/<code>XMLDecoder</code>.  This is a solution I've used in the past to save and load classes.</p>
"
"1188420","<p>I dont think it is possible to use CXF completely independent of spring in Tomcat.</p>

<p>Reason is that when I do a Maven dependency tree list (mvn dependency:tree) for a bare minimum CXF webservice, the following is listed (which shows that it needs Spring)</p>

<pre><code>     +- org.apache.cxf:cxf-rt-core:jar:2.2.2:compile
[INFO] |  |  +- com.sun.xml.bind:jaxb-impl:jar:2.1.9:compile

[INFO] |  |  +- org.springframework:spring-core:jar:2.5.5:compile

[INFO] |  |  +- org.apache.geronimo.specs:geronimo-javamail_1.4_spec:jar:1.6:compile

    org.apache.cxf:cxf-rt-transports-http:jar:2.2.2:compile
[INFO]    \- org.springframework:spring-web:jar:2.5.5:compile

[INFO]       +- commons-logging:commons-logging:jar:1.1.1:compile
</code></pre>
"
"822705","<pre><code>""\""Blah \'Blah\' Blah\"""".replaceAll(""\"""", """")
</code></pre>
"
"175498","<p>The exception mechanism is valuable, as it is the only way to get a status indicator in combination with a response value. Furthermore, the status indicator is standardized. If there is an error you get an exception. That way you don't have to think of an error indicator yourself. 
The controversy is not so much with exceptions, but with Checked Exceptions (e.g. the ones you have to catch or declare).</p>

<p>Personally I feel you picked one of the examples where exceptions are really valuable. It is a common problem the user enters the wrong value, and typically you will need to get back to the user for the correct value. You normally don't revert to the default value if you ask the user; that gives the user the impression his input matters. </p>

<p>If you do not want to deal with the exception, just wrap it in a RuntimeException (or derived class) and it will allow you to ignore the exception in your code (and kill your application when it occurs; that's fine too sometimes).</p>

<p>Some examples on how I would handle NumberFormat exceptions:
In web app configuration data:</p>

<pre><code>loadCertainProperty(String propVal) {
  try
  {
    val = Integer.parseInt(userdata);
    return val;
  }
  catch (NumberFormatException nfe)
  { // RuntimeException need not be declared
    throw new RuntimeException(""Property certainProperty in your configuration is expected to be "" +
                               "" an integer, but was '"" + propVal + ""'. Please correct your "" +
                               ""configuration and start again"");
    // After starting an enterprise application the sysadmin should always check availability
    // and can now correct the property value
  }
}
</code></pre>

<p>In a GUI:</p>

<pre><code>public int askValue() {
  // TODO add opt-out button; see Swing docs for standard dialog handling
  boolean valueOk = false;
  while(!valueOk) {
    try {
      String val = dialog(""Please enter integer value for FOO"");
      val = Integer.parseInt(userdata);
      return val; 
    } catch (NumberFormatException nfe) {
      // Ignoring this; I don't care how many typo's the customer makes
    }
  }
}
</code></pre>

<p>In a web form: return the form to the user with a usefull error message and a chance to
correct. Most frameworks offer a standardized way of validation.</p>
"
"470777","<p>In this case, I would avoid using arrays for just this reason. The declaration of ""lists"" in your original code could be</p>

<pre><code>List&lt;List&lt;Integer&gt;&gt; lists = new ArrayList&lt;List&lt;Integer&gt;&gt;(4);
for(int i = 0; i &lt; 4; i++) lists.add(null); // or add an empty ArrayList&lt;Integer&gt;
</code></pre>

<p>(you should use the interface rather than the implementation in variable declarations)</p>

<p>Instead of array [] syntax, you would use get() or set(). Other than that, it's equivalent.</p>
"
"394361","<p>I agree with the Visitor usage. </p>

<p>Additionally if you don't have access to the Ball hierarchy ( source code access ) or simple don't feel like modifying anything there; you could modify your client class and decide from there. </p>

<p>The bad thing of course is you'll end up with many if/elseif statements.</p>

<p>You'll need to add the generic method ( <em>add( Ball )</em>  )  and from there call the others. This is quick, easy and dirty. </p>

<p>:) </p>

<pre><code>public class Test {
    public static void main( String [] args ) { 
        Ball ball = new IllegalBall();
        Test test = new Test();
        test.add( ball );
        test.add( new IllegalBall() );
        test.add( new LegalBall() );
    }
    private void add( Ball ball ){
        System.out.println(""Generic method: I'll have someone handling this : ""  + ball );
        if( ball instanceof IllegalBall ) {
            add( ( IllegalBall ) ball );
        } else if( ball instanceof LegalBall ) {
            add( ( LegalBall ) ball );
        }
    }
    private void add( IllegalBall ball ){
        System.out.println(""illega-ball: I won't do anything about it! "" + ball );
    }
    private void add( LegalBall ball ) { 
        System.out.println(""legal-ball: Hey this is legal I'll do my best!! "" + ball );
    }
}

class Ball {}
class IllegalBall extends Ball {}
class LegalBall extends Ball {}
</code></pre>

<p>BTW if you don't have the reference directly the compiler will send it to the correct method as in the last 2 calls.</p>

<p>As you can see you just need to add the following code:</p>

<pre><code>private void add( Ball ball ){
    System.out.println(""Generic method: I'll have someone handling this : ""  + ball );
    if( ball instanceof IllegalBall ) {
        add( ( IllegalBall ) ball );
    } else if( ball instanceof LegalBall ) {
        add( ( LegalBall ) ball );
    }
}
</code></pre>
"
"828160","<p>It delves into the ugly world of floats, but these give correct answers in Java:</p>

<pre><code>public static int pythonDiv(int a, int b) {
    if (!((a &lt; 0) ^ (b &lt; 0))) {
        return a / b;
    }
    return (int)(Math.floor((double)a/(double)b));
}

public static int pythonMod(int a, int b) {
    return a - b * pythonDiv(a,b);
}
</code></pre>

<p>I make no assertions about their efficiency.</p>
"
"828278","<p>Don't refactor just for the sake of it!</p>

<p>The only part where it's possible:</p>

<pre><code>idx_ &lt;  super.size() &amp;&amp; idx_ &gt;= 0
</code></pre>

<p>Would likely be a waste of time (stepping into the new ""isValidIndex(int)"" method might inflict a performance penalty versus the unmodified code if you do it many, many times).</p>
"
"831820","<p>A clean way to do this would be to have lifecycle listeners configured in <code>web.xml</code>.  These can set global flags if you want.  For example, you could define a <a href=""http://java.sun.com/products/servlet/2.3/javadoc/javax/servlet/ServletContextListener.html"" rel=""nofollow"">ServletContextListener</a> in your <code>web.xml</code> and in the <code>contextInitialized</code> method, set a global flag that you're running inside a container.  If the global flag is not set, then you are not running inside a container.</p>
"
"1051062","<p>Singleton is, of course, an ""anti-pattern"" (assuming a definition of a static with variable state).</p>

<p>If you want a fixed set of immutable value objects, then enums are the way to go. For a large, possibly open-ended set of values, you can use a Repository of some form - usually based on a <code>Map</code> implementation. Of course, when you are dealing with statics be careful with threading (either synchronise sufficiently widely or use a <code>ConcurrentMap</code> either checking that another thread hasn't beaten you or use some form of futures).</p>
"
"190165","<p>I can't improve on the two-liner in the general case without introducing your own utility method, but if you do have lists of Strings and you're willing to assume those Strings don't contain commas, you can pull this long one-liner:</p>

<pre><code>List&lt;String&gt; newList = new ArrayList&lt;String&gt;(Arrays.asList((listOne.toString().subString(1, listOne.length() - 1) + "", "" + listTwo.toString().subString(1, listTwo.length() - 1)).split("", "")));
</code></pre>

<p>If you drop the generics, this should be JDK 1.4 compliant (though I haven't tested that). Also not recommended for production code ;-)</p>
"
"1623551","<p>exactly. for AlertDialog, that was created w/ <code>Builder.create()</code>, <code>onPrepareDialog()</code> is useless. Builder is one-way in that once the dialog is created, you can't update. i mean can't loosely, i am sure you could get a handle to the view and do it all manually, but that defeats the point of using the builder in the first place.</p>

<p>the only solution i found was to manually create / show / dismiss the dialog instead of using <code>onCreateDialog()</code>, <code>showDialog()</code>, etc. i tried calling <code>removeDialog()</code>, but that did not seem to work.</p>
"
"416608","<p><code>T</code> as a type must be defined generically in the class instance. The following example works:</p>

<pre><code>public class Test&lt;T&gt; {

    private Map&lt;Class&lt;T&gt;, T&gt; defaultValues;

    public void setDefaultValue(Class&lt;T&gt; clazz, T value) {
        defaultValues.put(clazz, value);
    }

    public T getDefaultValue(Class&lt;T&gt; clazz) {
        return defaultValues.get(clazz);
    }

}
</code></pre>

<p>Alternatively, you can use Paul Tomblin's answer, and wrap the <code>Map</code> with your own object which will enforce this type of generics.</p>
"
"1800326","<p>That should be quite easy. You have to activate https on your webserver and change your jnlp URL to <code>https://...</code>. Here is how you do it for <a href=""http://tomcat.apache.org/tomcat-6.0-doc/ssl-howto.html"" rel=""nofollow"">tomcat</a> and <a href=""http://docs.codehaus.org/display/JETTY/How+to+configure+SSL"" rel=""nofollow"">jetty</a>.</p>
"
"499032","<p>Can you pick the appropriate char set in the <a href=""http://java.sun.com/javase/6/docs/api/java/io/InputStreamReader.html"" rel=""nofollow"">Constructor</a>:</p>

<pre><code>new InputStreamReader(new FileInputStream(in), ""ISO8859_1"");
</code></pre>
"
"423759","<p>See this option:</p>

<pre><code>public class WaitForAnyRedux {

private static final int POOL_SIZE = 10;

public static &lt;T&gt; T waitForAny(Collection&lt;T&gt; collection) throws InterruptedException, ExecutionException {

    List&lt;Callable&lt;T&gt;&gt; callables = new ArrayList&lt;Callable&lt;T&gt;&gt;();
    for (final T t : collection) {
        Callable&lt;T&gt; callable = Executors.callable(new Thread() {

            @Override
            public void run() {
                synchronized (t) {
                    try {
                        t.wait();
                    } catch (InterruptedException e) {
                    }
                }
            }
        }, t);
        callables.add(callable);
    }

    BlockingQueue&lt;Runnable&gt; queue = new ArrayBlockingQueue&lt;Runnable&gt;(POOL_SIZE);
    ExecutorService executorService = new ThreadPoolExecutor(POOL_SIZE, POOL_SIZE, 0, TimeUnit.SECONDS, queue);
    return executorService.invokeAny(callables);
}

static public void main(String[] args) throws InterruptedException, ExecutionException {

    final List&lt;Integer&gt; integers = new ArrayList&lt;Integer&gt;();
    for (int i = 0; i &lt; POOL_SIZE; i++) {
        integers.add(i);
    }

    (new Thread() {
        public void run() {
            Integer notified = null;
            try {
                notified = waitForAny(integers);
            } catch (InterruptedException e) {
                e.printStackTrace();
            } catch (ExecutionException e) {
                e.printStackTrace();
            }
            System.out.println(""notified="" + notified);
        }

    }).start();


    synchronized (integers) {
        integers.wait(3000);
    }


    Integer randomInt = integers.get((new Random()).nextInt(POOL_SIZE));
    System.out.println(""Waking up "" + randomInt);
    synchronized (randomInt) {
        randomInt.notify();
    }
  }
}
</code></pre>
"
"427506","<p>Some VM with the -server option don't load the java.awt. package at all ( nor javax.swing and others ) </p>

<p>This is to avoid loading classes that won't be needed.</p>

<p>By the way, the class </p>

<pre><code>java.awt.Color
</code></pre>

<p>Won't be any useful  in a jsp page. It is used to display colors in java desktop applications. </p>

<p>What are you trying to do? Perhaps there is a better way.</p>
"
"1067923","<p>Use <code>-source 1.4</code> as a flag to the <code>javac</code> command. Here are <a href=""http://java.sun.com/j2se/1.4.2/docs/tooldocs/windows/javac.html#standard"" rel=""nofollow"">the details</a>.</p>
"
"513182","<p>I think java does not have static interface methods because you do not need them. You may think you do, but...
How would you use them? If you want to call them like</p>

<pre><code>MyImplClass.myMethod()
</code></pre>

<p>then you do not need to declare it in the interface. If you want to call them like</p>

<pre><code>myInstance.myMethod()
</code></pre>

<p>then it should not be static.
If you are actually going to use first way, but just want to enforce each implementation to have such  static method, then it is really a coding convention, not a contract between instance that implements an interface and calling code.</p>

<p>Interfaces allow you to define contract between instance of class that implement the interface and calling code. And java helps you to be sure that this contract is not violated, so you can rely on it and don't worry what class implements this contract, just ""someone who signed a contract"" is enough. In case of static interfaces your code </p>

<pre><code>MyImplClass.myMethod()
</code></pre>

<p>does not rely on the fact that each interface implementation has this method, so you do not need java to help you to be sure with it.</p>
"
"531394","<p>You have to make the method static:</p>

<pre><code>static int length() { … }
</code></pre>
"
"873423","<p>I think this is pretty language-agnostic. Is this homework? It sounds like homework, so I won't give you an example, but I would use 3 <code>while</code> loops (although you could just as easily use <code>for</code> loops, I simply prefer using <code>while</code>s).</p>
"
"2462611","<p>When using e.g tomcat for serving static files one has to specify the patterns like this:</p>

<pre><code>&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;default&lt;/servlet-name&gt;
    &lt;url-pattern&gt;*.css&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;default&lt;/servlet-name&gt;
    &lt;url-pattern&gt;*.js&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
</code></pre>

<p>Maybe you could try to do the same?</p>
"
"461822","<p>No answer to your question but a suggestion:</p>

<p>It's always better to place the fix enum value in the first place in the compare statement and the variable part in the second place. Because, if in any circumstance the variable part delivers NULL you won't get a NullPointerException.</p>

<p>In your example it will look like this</p>

<pre><code>...
if (AnswerStatus.NOT_ASSESSED == ans.getStatus())
...
</code></pre>

<p><strong>MISTAKE:</strong></p>

<p>Of course I make a mistake and mixed two things with each other. If you use the equals method to compare a fixed enum value with a variable containing this enum it's good to compare the constant enum value with the variable and not vic versa. For example:</p>

<p>write</p>

<pre><code>if (AnswerStatus.NOT_ASSESSED.equals(ans.getStatus()))
</code></pre>

<p>instead of</p>

<pre><code>if (ans.getStatus().equals(AnswerStatus.NOT_ASSESSED))
</code></pre>

<p>because, this could harm a NullPointerException if ans.getStatus() == null.</p>
"
"545736","<p>Sounds like what you're really looking for is the <strong><em>exec</em></strong> call. Such as:</p>

<pre><code>    Runtime rt = Runtime.getRuntime();
    try {
        rt.exec(""ifconfig"");
    } catch (IOException e) {
        e.printStackTrace();
    }
</code></pre>

<p>Call this from your button click or whatever it is you're triggering the event with. I'm not sure how to receive anything back but that's another matter. </p>
"
"484061","<p><a href=""http://java.sun.com/javase/6/docs/api/java/beans/Expression.html"" rel=""nofollow"">java.beans.Expression</a> will do that, as long as the method is accessible in the concrete class of the receiver.</p>

<pre><code>public static void main(String[] args) throws Exception {
    new Expression(new A(), ""doSomething"", null).getValue();
    new Expression(new B(), ""doSomething"", null).getValue();
}

public static class A {
    public void doSomething() {
            System.out.println(""I'm doing it already!"");
    }
}

public static class B {
    public void doSomething() {
            System.out.println(""I'm doing it too!"");
    }
}
</code></pre>
"
"287426","<p>Have you tried:</p>

<pre><code>Class clazz2 = list2.get(0).getClass();
</code></pre>

<p>Read about it at:
<a href=""http://java.sun.com/j2se/1.5.0/docs/api/java/lang/Object.html#getClass()"" rel=""nofollow"">http://java.sun.com/j2se/1.5.0/docs/api/java/lang/Object.html#getClass()</a></p>
"
"3450728","<p>Try this</p>

<p><code>
Integer a = Integer.valueOf(""10"");<br>
Integer b = Integer.valueOf(""10"");<br>
if (a.equals(b)) {<br>
    System.out.println(""Equals"");<br>
} else {<br>
    System.out.println(""Not Equals"");<br>
}<br>
if (a == b) {<br>
    System.out.println(""a == b"");<br>
} else {<br>
    System.out.println(""a != b"");<br>
}<br>
</code></p>

<p>If you run this example; the result is </p>

<p><code>
Equals<br>
a != b
</code></p>

<p>So Integer.valueOf() does not return the same object.</p>

<p>Even tools like PMD, findBugs recommend using .valueOf()</p>
"
"3650614","<pre><code>public class HexadecimalToBinaryAndLong{
  public static void main(String[] args) throws IOException{
    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
    System.out.println(""Enter the hexa value!"");
    String hex = bf.readLine();
    int i = Integer.parseInt(hex);               //hex to decimal
    String by = Integer.toBinaryString(i);       //decimal to binary
    System.out.println(""This is Binary: "" + by);
    }
}
</code></pre>
"
"1600756","<p>I would just use the string concatenation operator ""+"" to join two strings.  <code>s1 += s2;</code></p>
"
"303485","<p>I haven't tried it yet, but I think Collections.copy will do that.</p>

<p>[EDIT] Now, I tried:</p>

<pre><code>static String GetRandomString(int length)
{
  UUID uuid = UUID.randomUUID();
  return uuid.toString().substring(0, length);  
}

public static void main(String[] args)
{
  ArrayList&lt;String&gt; al = new ArrayList&lt;String&gt;(20);
  for (int i = 0; i &lt; 10; i++)
  {
    al.add(GetRandomString(7));
  }
  ArrayList&lt;String&gt; cloneArray = new ArrayList&lt;String&gt;(al);
  Collections.copy(cloneArray, al);
  System.out.println(al);
  System.out.println(cloneArray);
  for (int i = 9; i &gt;= 0; i -= 2)
  {
    al.remove(i);
  }
  System.out.println(al);
  System.out.println(cloneArray);
}
</code></pre>
"
"3903511","<pre><code>import java .util.*;
public class file 
  {
 public static void main(String [] args)
  {
   long largest=0;
   long number=0;
    for( long i=106239;i&lt;1000000;i=i+2)
     {
      long k=1;
       long z=i;
      while(z!=1)
       {
        if(z%2==0)
        {
         k++;
         z=z/2;
        } else{
          k++;
          z=3*z+1;
           }
       }    
    if(k&gt;largest)
      {
       number=i;
       largest=k;
       System.out.println(number+"" ""+largest);
      }
     }//for loop

   }//main
  }
</code></pre>
"
"501623","<p>I felt like coding , so here you go :</p>

<pre>
<code>
import java.util.*;

class ReverseBuffer {
    private StringBuilder soFar;
    public ReverseBuffer() {
        soFar = new StringBuilder();
    }

    public void add(char ch) {
        soFar.append(ch);
    }

    public String getReversedString() {
        String str = soFar.toString();
        soFar.setLength(0);
        return str;
    }
}

public class Reverso {
    public static String[] getReversedWords(String sentence) {
        ArrayList &lt String &gt strings = new ArrayList &lt String &gt();
        ReverseBuffer rb = new ReverseBuffer();
        for(int i = 0;i &lt sentence.length();i++) {
            char current = sentence.charAt(i);
            if(current == ' ') {
                strings.add(rb.getReversedString());
            }
            else {
                rb.add(current);
            }
        }
        strings.add(rb.getReversedString());
        Collections.reverse(strings);
        return (String[])strings.toArray(new String[0]);
    }

    public static void main(String[] args) {
        String cSentence = ""The rain in Spain falls mostly on the"";
        String words[] = Reverso.getReversedWords(cSentence);
        for(String word : words) {
            System.out.println(word);
        }
    }
}
</code></pre>

<p>EDIT: had to call getReversedString once more after the loop.</p>

<p>Hope this helps !</p>
"
"580026","<p>It's been a while since I did any graphics in Swing, but I think the code you're looking for is something like:</p>

<pre><code>Graphics g = getGraphics();
if (g != null) paintComponent(g);
else repaint();
</code></pre>

<p>And as you noted, you'll need to add this code in a listener attached to the JPanel's scroll functions.</p>

<p>I would probably create a Canvas that would contain the entire drawing and put it inside a JScrollPane.  That will let Java do all the work!</p>
"
"1889473","<p>In case you have specified in connection pool (mysql-ds.xml), in your Java code you can open the connection as follows:</p>

<pre><code>DriverManager.registerDriver(new com.mysql.jdbc.Driver());
Connection conn = DriverManager.getConnection(
    ""jdbc:mysql://192.168.1.12:3308/mydb?characterEncoding=greek"",
    ""Myuser"", ""mypass"");
</code></pre>
"
"511057","<blockquote>
  <p>Can you anyone help me in telling how
  to get output ""<code>Super Test</code>"" with the
  given sequences in <code>main</code>.</p>
</blockquote>

<ul>
<li><p>Don't overwrite <code>anotherMethod()</code> and <code>retValue()</code> in <code>Sub</code> in the first place.</p></li>
<li><p>In S<code>ub.anotherMethod()</code>, return <strong><code>super</code></strong><code>.retValue(s)</code> instead of <code>retValue(s)</code>.</p></li>
</ul>
"
"4698092","<p>I've created a new project to help construct HTTP URLs. The library will automatically URL encode path segments and query parameters.</p>

<p>You can view the source and download a binary at <a href=""https://github.com/Widen/urlbuilder"" rel=""nofollow"">https://github.com/Widen/urlbuilder</a></p>

<p>The example URL in this question:</p>

<pre><code>new UrlBuilder(""search.barnesandnoble.com"", ""booksearch/first book.pdf"").toString()
</code></pre>

<p>produces</p>

<p><code>http://search.barnesandnoble.com/booksearch/first%20book.pdf</code></p>
"
"523459","<p>First, forget Java. Java is a managed run-time which does garbage collection. When this happens you will hear shuttering because you wanna keep your sound buffer small to minimize latency,</p>

<p>Secondly, you will be interfacing with the hardware i.e. sound card, Java does not support this kind of thing and so you'll either have to write some hardware abstraction in JNI or find an existing solution, but there's a problem with that to. It's unlikely that you'll get the real-time performance from the Java platform.</p>

<p>What you wanna do is that you wanna go with <code>C++</code> for this, and you will wanna learn more about partial-differentiation, DSP, sound synthesis and waveform analysis. This is quite a lot to take on but it should give you a good sense of direction if you start reading up on relevant research...  </p>
"
"342110","<p>It's not much of a ""trick"", but this works for 4-char strings.  Obviously it gets uglier for longer strings, but the idea is the same.</p>

<pre><code>char array[] = new char[4];
for (char c0 = 'a'; c0 &lt;= 'z'; c0++) {
  array[0] = c0;
  for (char c1 = 'a'; c1 &lt;= 'z'; c1++) {
    array[1] = c1;
    for (char c2 = 'a'; c2 &lt;= 'z'; c2++) {
      array[2] = c2;
      for (char c3 = 'a'; c3 &lt;= 'z'; c3++) {
        array[3] = c3;
        String s = new String(array);
        System.out.println(s);
      }
    }
  }
}
</code></pre>
"
"986607","<p>If your input is structured, you can have a look at the JavaCC compiler. It generates a java class reading your input. It would look like this:</p>

<pre><code>TOKEN { &lt;CAT: ""cat""&gt; , &lt;DOG:""gog""&gt; }

input: (cat() | dog())*


cat: &lt;CAT&gt;
   {
   animals.add(new Animal(""Cat""));
   }

dog: &lt;DOG&gt;
   {
   animals.add(new Animal(""Dog""));
   }
</code></pre>
"
"631132","<p>You may be wanting ""isAssignable"" instead of instanceof: </p>

<pre><code>if (MyInterface.isAssignableFrom(myObject.getClass())) {
  //  do work here
}
</code></pre>

<p>This will return true for classes that implement your interface.</p>
"
"2417393","<pre><code>In[1162] := Plus @@ IntegerDigits[2^1000]
Out[1162] = 1366
</code></pre>
"
"561666","<p>It's hard to answer this precisely as it depends on the compiler/interpreter implementation.</p>

<p>But generally speaking you can say roughly extend i++ to the following instructions:</p>

<pre><code>COPY i to tmp
INCREMENT tmp
SAVE tmp as i
</code></pre>

<p>While ++i will roughly extend to:</p>

<pre><code>LOAD i
INCREMENT i
</code></pre>

<p>You can't just say that ++i is faster than i++ since language implementations are pretty smart and they can optimize these instructions when you know that you won't access the temporary value of i++. This usually happens in say a for loop. So in many cases it's just the same.</p>

<p>If you're trying to these kind of micro-optimizations I'd advice you to profile/measure before chosing one over another.</p>
"
"633965","<p>Your code would compile, had you typed </p>

<pre><code>buttonClick(new Button().ClickEvent(button));
</code></pre>

<p>instead of </p>

<p><code>buttonClick(new Button.ClickEvent(button));
</code></p>

<p>as a constructor is a method and when you call a method in Java you must pass the list of arguments, even when it is empty.</p>
"
"7848011","<p>Ancient question but came up on my Google search for this exact problem so I'm answering it.</p>

<p>Try </p>

<pre><code>&lt;configuation&gt;
...
&lt;argLine&gt; -Xmx500m &lt;/argLine&gt;
...
&lt;/configuation&gt;
</code></pre>
"
"2607251","<p>I was surprised when I first noticed the Ternary-Operator which equals a simple if-then-else statement:</p>

<pre><code>minVal = (a &lt; b) ? a : b;
</code></pre>
"
"642564","<p>Create a static method in your class which will return an array of declared methods and do the correct handling of exceptions.</p>

<pre><code>private static Method[] declaredMethods(Class&lt;T&gt; clazz, String methodName) {
  Method[] result = new Method[1];
  try{
    result[0] = clazz.getDeclaredMethod(methodName);
  } catch (NoSuchMethodException nsme) {
    // respond to the error
  } catch (SecurityException se)  {
    // Respond to the error
  }

  return result;
}

Method[] actions = declaredMethods(""count"");
</code></pre>
"
"8151123","<p>And I got a idea but not so good.*<em>This is used when the users don't use the dialog quite frequently!</em>*The solution :first,you should declare a variable (int type) and make the default value as 0.such as <code>private int i=0;</code>
and before you use the showDialog methods of Activity,increase the int variable i and post the value i as the parameter as showDialog method.
the code may like this</p>

<pre><code>private int i=0;

//before you show the dialog
this.i++;
this.showDialog(this.i);
</code></pre>
"
"356677","<p>Not quite sure why you're using generics here.</p>

<p>The instantiation of the object using reflection would suggest a general use but presumably you're going to call <code>create</code> at some point and assign the result to a <code>String</code>, otherwise why use the generics to control the return type.</p>

<p>But if you wrote the following implementation of Creator:</p>

<pre><code>public class IntegerCreator implements Creator&lt;Integer&gt; 
{
  public Integer create() 
  { 
    ...
  }
}
</code></pre>

<p>And passed it in as a argument you'd get a ClassCastException when calling <code>create</code> and assigning the result.</p>
"
"8326785","<p>Although you should not use doubles for precise calculations the following trick helped me if you are rounding the results anyway. </p>

<pre><code>public static int round(Double i) {
    return (int) Math.round(i + ((i &gt; 0.0) ? 0.00000001 : -0.00000001));
}
</code></pre>

<p>Example:</p>

<pre><code>    Double foo = 0.0;
    for (int i = 1; i &lt;= 150; i++) {
        foo += 0.00010;
    }
    System.out.println(foo);
    System.out.println(Math.round(foo * 100.0) / 100.0);
    System.out.println(round(foo*100.0) / 100.0);
</code></pre>

<p>Which prints:</p>

<pre><code>0.014999999999999965
0.01
0.02
</code></pre>

<p>More info: <a href=""http://en.wikipedia.org/wiki/Double_precision"" rel=""nofollow"">http://en.wikipedia.org/wiki/Double_precision</a></p>
"
"574853","<p>I tend to think that Singletons are overused, and often indicate a flaw with the basic architecture of a solution.  Assuming you've done enough analysis to prove you need a Singleton, you can use an older Singleton pattern that doesn't rely on static initialization.  Here's an example:</p>

<pre><code>public SomeServlet extends HttpServlet {

    private instance = null;

    private SomeServlet() {
        // Construction code here
    }

    public synchronized SomeServlet getInstance() {
        if(instance == null) {
            instance = SomeServlet();
        }
        return instance;
    }

    // Servlet methods here

}
</code></pre>

<p>I see two potential problems though: </p>

<p>First, you'll need a wrapper Servlet (or maybe just chain from another servlet, since the Servlet container won't know how to deal with not having a private constructor.  </p>

<p>Second, you'll still need to synchronize the servlet methods because you still can't guarantee that there's only one executor thread ""in"" the servlet at a time.</p>
"
"8688769","<p>When the use logs in, put its username in the session: </p>

<pre><code>`session.setAttribute(""USER"", username);`
</code></pre>

<p>At the beginning of each page you can do this:</p>

<pre><code>&lt;%
String username = (String)session.getAttribute(""USER"");
if(username==null) 
// if session is expired, forward it to login page
%&gt;
&lt;jsp:forward page=""Login.jsp"" /&gt;
&lt;% { } %&gt;
</code></pre>
"
"377860","<p>There is nothing here that says these values should be inlined. You are just declaring some <code>public</code>, <code>static</code> members. Those other classes are using the values of these members. No inlining is asked. Even the <code>final</code> keyword </p>

<p>But for <strong>performance reasons</strong>, some JVMs may <strong>inline</strong> these values in those other classes. This is an optimization. No optimization should change the behaviour of a program. So if you change the definition of these members, the JVM should <strong>un-inline</strong> the previous values.</p>

<p>This is why there is no way to turn inlining off. Either the JVM does not inline and there is no problem or if it is inlined, the JVM guarantee the un-inlining.</p>

<p>I am not sure what happens when you import statically this class. I think (not sure) the inlining is performed and may cause the trouble you mention. If that is the case, you could basically delete the static import and you are ok.</p>
"
"9512746","<p>In Haskell you can do something like that <code>[a, b, c] ++ [d, e]</code> to get <code>[a, b, c, d, e]</code>. These are Haskell lists concatenated but that'd very nice to see a similar operator in Java for arrays. Don't you think so ? That's elegant, simple, generic and it's not that difficult to implement.</p>

<p>If you want to, I suggest you to have a look at Alexander Hristov's work in his <a href=""http://www.ahristov.com/tutoriales/java-compiler/duplicating-lexer.html"" rel=""nofollow"">Hacking the OpenJDK compiler</a>. He explains how to modify javac source to create a new operator. His example consists in defining a '**' operator where <code>i ** j = Math.pow(i, j)</code>. One could take that example to implement an operator that concatenates two arrays of same type.<br></p>

<p>Once you do that, you are bound to your customized javac to compile your code but the generated bytecode will be understood by any JVM. <br><br>Of course, you can implement your own array concatenatation method at your source level, there are many examples on how to do it in the other answers !<br>
<br>
There are so many useful operators that could be added, this one would be one of them.</p>
"
"682001","<p>Here's some test code which shows that <strong>the object is null until the constructor has finished running</strong>:</p>

<pre><code>public class Test {

  private static SlowlyConstructed slowlyConstructed = null;

  public static void main(String[] args) {
    Thread constructor = new Thread() {
      public void run() {
        Test.slowlyConstructed = new SlowlyConstructed();
      }
    };
    Thread checker = new Thread() {
      public void run() {
        for(int i = 0; i &lt; 10; i++) {
          System.out.println(Test.slowlyConstructed);
          try { Thread.sleep(1000); }
          catch(Exception e) {}
        }
      }
    };

    checker.start();
    constructor.start();
  }

  private static class SlowlyConstructed {
    public String s1 = ""s1 is unset"";
    public String s2 = ""s2 is unset"";

    public SlowlyConstructed() {
      System.out.println(""Slow constructor has started"");
      s1 = ""s1 is set"";
      try { Thread.sleep(5000); }
      catch (Exception e) {}
      s2 = ""s2 is set"";
      System.out.println(""Slow constructor has finished"");
    }

    public String toString() {
      return s1 + "", "" + s2;
    }
  }
}
</code></pre>

<p>Output:</p>

<pre>
null
Slow constructor has started
null
null
null
null
null
Slow constructor has finished
s1 is set, s2 is set
s1 is set, s2 is set
s1 is set, s2 is set
s1 is set, s2 is set
</pre>
"
"9780181","<p>How about:</p>

<p>public String UrlEncode(String in_) {</p>

<pre><code>String retVal = """";

try {
    retVal = URLEncoder.encode(in_, ""UTF8"");
} catch (UnsupportedEncodingException ex) {
    Log.get().exception(Log.Level.Error, ""urlEncode "", ex);
}

return retVal;
</code></pre>

<p>}</p>
"
"9842650","<p>Its easy to do using <a href=""http://code.google.com/p/guava-libraries/wiki/CommonObjectUtilitiesExplained#equals"" rel=""nofollow"">Google's Guava library</a>.</p>

<p>e.g. <code>Objects.equal(name, name2) &amp;&amp; Objects.equal(age, age2) &amp;&amp; ...</code></p>

<p>More examples:</p>

<ul>
<li><a href=""http://stackoverflow.com/a/5039178/1180621"">http://stackoverflow.com/a/5039178/1180621</a></li>
</ul>
"
"9856230","<p>133 characters :-)</p>

<pre><code>class F {

    public static void main(String[] z) {

        l:
        for (int a=1,b; a &lt; z; a += 2) {

            for (b = 2; b &lt; a; b++)
                if (a % b == 0) 
                    continue l;
            System.out.println(a);
        }
    }
}
</code></pre>
"
"4190672","<pre><code>for (int i = 1; i &lt; 100000;)
{
    i = i * 10;
    System.out.print(i);              
}
</code></pre>

<p>or</p>

<pre><code>int i = 1;

while (i &lt; 100000)
{
    i = i * 10;
    System.out.print(i);
}
</code></pre>
"
"4241490","<pre><code>byte myByte = 0x5B;

boolean bits = new boolean[8];

for(int i = 0 ; i &lt; 8 ; i++)
    bit[i] = (myByte%2 == 1);
</code></pre>

<p>The results is an array of zeros and ones where <code>1=TRUE</code> and <code>0=FALSE</code> :)</p>
"
"4571725","<p>generate url containing both id and description like this url <code>http://stackoverflow.com/questions/784891/java-and-seo-urls</code> . in the servlet parse the url and then use id for fetching data from database. Same Technique is applies on this stackoverflow page too. look at the url. its <code>http://stackoverflow.com/questions/784891/java-and-seo-urls</code>
however only questionId is considered and description is ignored. try <code>http://stackoverflow.com/questions/784891</code> or <code>http://stackoverflow.com/questions/784891/abcdxyz</code> . you will get same page. this is very good technique to generate seo urls</p>
"
"703650","<p>Would be nice to know what you exactly want to do. </p>

<p>This seams more like a quiz.
My solution would be something like this:</p>

<pre><code>Arrays.sort(abcd);
A = Arrays.binarySearch(abcd, A) + 1;
B = Arrays.binarySearch(abcd, B) + 1;
C = Arrays.binarySearch(abcd, C) + 1;
D = Arrays.binarySearch(abcd, D) + 1;
</code></pre>

<p>assuming time is not an issue and unique values...  </p>

<p>OR,  </p>

<p>if allowed, create a mutable Integer to use instead of the primitive int:  </p>

<pre><code>Int A = new Int(300);
Int B = new Int(400);
Int C = new Int(1000);
Int D = new Int(500);

Int []abcd = {A,B,C,D};
Arrays.sort(abcd);
for (int i = 0; i &lt; abcd.length; i++)
    abcd[i].setInt(i+1);
</code></pre>
"
"10977140","<p>When should I use <code>LinkedList</code>? When working with stacks mostly, or when working with buffers.
When should I use <code>ArrayList</code>? Only when working with indexes,  otherwise you can use HashTable with linked list, then you get:</p>

<ul>
<li>Access by key <strong>O(1),</strong></li>
<li>Insert by key <strong>O(1),</strong></li>
<li>Remove by key <strong>O(1)</strong></li>
<li>and there is a trick to implement RemoveAll / SetAll with O(1)</li>
</ul>

<p>It seems like a good solution, and in most of the cases it is, how ever you should know:
HashTable takes a lot of disc space, so when you need to manage 1,000,000 elements list it can become a thing that matters. This can happen in server implementations, in clients it is rarely the case.</p>

<p>Also take a look at <a href=""http://en.wikipedia.org/wiki/Red%E2%80%93black_tree"" rel=""nofollow"">Red-Black-Tree</a></p>

<ul>
<li>Random access <strong>Log(n),</strong></li>
<li>Insert <strong>Log(n),</strong></li>
<li>Remove <strong>Log(n)</strong></li>
</ul>
"
"1075692","<p>It depends on what concrete List class you are using.  The abstract class AbstractCollection has a method called containsAll(Collection) that takes another collection ( a List is a collection) and:</p>

<blockquote>
  <p>Returns true if this collection contains all of the elements in the specified collection. </p>
</blockquote>

<p>So if an ArrayList is being passed in you can call this method to see if they are exactly the same.</p>

<pre><code>       List foo = new ArrayList();
	List bar = new ArrayList();
	String str = ""foobar"";

	foo.add(str);
	bar.add(str);

	foo.containsAll(bar);
</code></pre>

<p>The reason for containsAll() is because it iterates through the first list looking for the match in the second list.  So if they are out of order equals() will not pick it up.</p>

<p>EDIT:
I just want to make a comment here about the amortized running time of performing the various options being offered.  Is running time important?  Sure.  Is it the only thing you should consider?  No.</p>

<p>The cost of copying EVERY single element from your lists into other lists takes time, and it also takes up a good chunk of memory (effectively doubling the memory you are using).</p>

<p>So if memory in your JVM isn't a concern (which it should generally be) then you still need to consider the time it takes to copy every element from two lists into two TreeSets.  Remember it is sorting every element as it enters them.  </p>

<p>My final advice?  You need to consider your data set and how many elements you have in your data set, and also how large each object in your data set is before you can make a good decision here.  Play around with them, create one each way and see which one runs faster.  It's a good exercise.</p>
"
"706888","<p>You don't need an external library for this kind of thing, it's all built into SE. The easiest being the rotate() function of the Graphics2D object.</p>

<p>For example:</p>

<pre><code>   Image rotatedImage = new BufferedImage(imageToRotate.getHeight(null), imageToRotate.getWidth(null), BufferedImage.TYPE_INT_ARGB);

    Graphics2D g2d = (Graphics2D) rotatedImage.getGraphics();
    g2d.rotate(Math.toRadians(90.0));
    g2d.drawImage(imageToRotate, 0, -rotatedImage.getWidth(null), null);
    g2d.dispose();
</code></pre>

<p>no loss!</p>

<p>Or, if you want to be extra careful, just use BufferedImage.getRGB(x,y), and translate it pixel by pixel on to the new image.</p>
"
"1086286","<p>You need to use </p>

<pre><code>this.new B();
</code></pre>
"
"5229274","<p>Try the <code>int.tryparse</code> it will provide a value of zero if the string cannot be converted and it will also convert the string it can be done very usefull</p>
"
"74905","<p>Sometimes a simple ""<strong><code>static Foo foo = new Foo();</code></strong>"" is not enough. Just think of some basic data insertion you want to do.</p>

<p>On the other hand you would have to synchronize any method that instantiates the singleton variable as such. Synchronisation is not bad as such, but it can lead to performance issues or locking (in very very rare situations using this example. The solution is</p>

<pre><code>public class Singleton {

    private static Singleton instance = null;

    static {
          instance = new Singleton();
          // do some of your instantiation stuff here
    }

    private Singleton() {
          if(instance!=null) {
                  throw new ErrorYouWant(""Singleton double-instantiation, should never happen!"");
          }
    }

    public static getSingleton() {
          return instance;
    }

}
</code></pre>

<p>Now what happens? The class is loaded via the class loader. Directly after the class was interpreted from a byte Array, the VM executes the <strong>static { }</strong> - block. that's the whole secret: The static-block is only called once, the time the given class (name) of the given package is loaded by this one class loader.</p>
"
"76998","<p>This will get rid of your concurrent modification exception. I won't speak to the efficiency however ;)</p>

<pre><code>List&lt;Blah&gt; list = fillMyList();
List&lt;Blah&gt; temp = new ArrayList&lt;Blah&gt;();
for (Blah blah : list) {
     //list.remove(blah);  would throw the exception
     temp.add(blah);
}
list.removeAll(temp);
</code></pre>
"
"12944709","<p>Concatenating strings:</p>

<pre><code>String concat(String[] strings) {
    StringBuffer buf = new StringBuffer();
    for(int i=0; i &lt; strings.length; i++) {
        buf.append(strings[i]);
    }
    return buf.toString();
}
</code></pre>
"
"653704","<p>For ints,  int n1 and int n2;</p>

<pre><code>return ("""" + n1).charAt(0) == ("""" + n2).charAt(0);
</code></pre>
"
"13409132","<p>I think this should work nicely:</p>

<pre><code>Dim MyDate As Date = #11/14/2012#  'This is just an example date

MyDate = MyDate.AddDays(DateTime.DaysInMonth(MyDate.Year, MyDate.Month) - MyDate.Day)
</code></pre>
"
"13700659","<pre><code>/*
Using Throwable we can trap any know error in JAVA..
*/
public class TestRecur {
    private int i = 0;


    public static void main(String[] args) {
        try {
            new TestRecur().show();
        } catch (Throwable err) {
            System.err.println(""Error..."");
        }
    }

    private void show() {
        System.out.println(""I = "" + i++);
        show();
    }
}
</code></pre>

<p>//however u may have a look at the link : <a href=""http://marxsoftware.blogspot.in/2009/07/diagnosing-and-resolving.html"" rel=""nofollow"">http://marxsoftware.blogspot.in/2009/07/diagnosing-and-resolving.html</a> to 
// understand the code snipets which may raise error</p>
"
"728814","<p>Ref; ""<em>My benchmarks so far show Java and C are about on par with each other</em>""</p>

<p>Then your benchmarks are severely flawed...</p>

<p>C will ALWAYS be orders of magnitudes faster then both C# and Java unless you do something seriously wrong...!</p>

<p>PS!
Notice that this is not an attempt to try to bully neither C# nor Java, I like both Java and C#, and there are other reasons why you would for many problems choose either Java or C# instead of C. But neither Java nor C# would in a correct written tests NEVER be able to perform with the same speed as C...</p>

<p><em>Edited because of the sheer number of comments arguing against my rhetoric</em></p>

<p>Compare these two buggers...</p>

<p>C#</p>

<pre><code>public class MyClass
{
   public int x;

   public static void Main()
   {
      MyClass[] y = new MyClass[1000000];
      for( int idx=0; idx &lt; 1000000; idx++)
      {
          y[idx] = new MyClass();
          y[idx].x = idx;
      }
   }
}
</code></pre>

<p>against this one (C)</p>

<pre><code>struct MyClass
{
   int x;
}

void Main()
{
   MyClass y[1000000];
   for( int idx = 0; idx &lt; 1000000; idx++)
   {
      y[idx].x = idx;
   }
}
</code></pre>

<p>The C# version first of all needs to store its array on the heap. The C version stores the array on the stack. To store stuff on the stack is merely changing the value of an integer value while to store stuff on the heap means finding a big enough chunk of memory and potentially means traversing the memory for a pretty long time.</p>

<p>Now mostly C# and Java allocates huge chunks of memory which they keep on spending till it's out which makes this logic execute faster. But even then to compare this against changing the value of an integer is like an F16 against an oil tanker speedwise...</p>

<p>Second of all in the C version since all those objects are already on the stack we don't need to explicitly create new objects within the loop. Yet again for C# this is a ""look for available memory operation"" while the C version is a ZIP (<em>do nothing operation</em>)</p>

<p>Third of all is the fact that the C version will automatically delete all these objects when they run out of scope. Yet again this is an operation which <em>ONLY CHANGES THE VALUE OF AN INTEGER VALUE</em>. Which would on most CPU architectures take between 1 and 3 CPU cycles. The C# version doesn't do that, but when the Garbage Collector kicks in and needs to collect those items my guess is that we're talking about <em>MILLIONS</em> of CPU cycles...</p>

<p>Also the C version will instantly become x86 code (on an x86 CPU) while the C# version would first become IL code. Then later when executed it would have to be JIT compiled, which probably alone takes orders of magnitudes longer time then only executing the C version.</p>

<p>Now some wise guy could probably execute the above code and measure CPU cycles. However that's basically no point at all in doing because mathematically it's proven that the Managed Version would probably take several million times the number of CPU cycles as the C version. So my guess is that we're now talking about 5-8 orders of magnitudes slower in this example. And sure, this is a ""rigged test"" in that I ""<em>looked for something to prove my point</em>"", however I challenge those that commented badly against me on this post to create a sample which does NOT execute faster in C and which also doesn't use constructs which you normally never would use in C due to ""better alternatives"" existing.</p>

<p>Note that C# and Java are GREAT languages. I prefer them over C <em>ANY TIME OF THE DAY</em>. But NOT because they're FASTER. Because they are NOT. They are <em>ALWAYS</em> slower then C and C++. Unless you've coded blindfolded in C or C++...</p>

<p>Edit;</p>

<p>C# of course have the <em>struct</em> keyword, which would seriously change the speed for the above C# version, if we changed the C# class to a value type by using the keyword <em>struct</em> instead of <em>class</em>. The struct keyword means that C# would store new objects of the given type on the stack - which for the above sample would increase the speed seriously. Still the above sample happens to also feature an array of these objects.</p>

<p>Even though if we went through and optimized the C# version like this, we would still end up with something several orders of magnitudes slower then the C version...</p>

<p>A <em>good</em> written piece of C code will <em>ALWAYS</em> be faster then C#, Java, Python and <em>whatever-managed-language-you-choose</em>...</p>

<p>As I said, I love C# and most of the work I do today is C# and not C. However I don't use C# because it's faster then C. I use C# because I don't need the speed gain C gives me for most of my problems.</p>

<p>Both C# and Java is though <em>ridiculously</em> slower then C, and C++ for that matter...</p>
"
"6204945","<p><strong>I am answering the question you WANT the answer to, not the one you asked.  Your real question is ""how can I make this go faster?"" and the answer is ""handle the integers an array at a time, and not singly.""</strong></p>

<p>If the bottleneck is truly the ByteBuffer.getInt() or ByteBuffer.getInt(location), then you do not need to extend the class, you can use the pre-existing IntBuffer class to grab data in bulk for more efficient processing.</p>

<pre><code>int totalLength = numberOfIntsInBuffer;
ByteBuffer myBuffer = whateverMyBufferIsCalled;
int[] block = new int[1024];
IntBuffer intBuff = myBuffer.asIntBuffer();
int partialLength = totalLength/1024;

//Handle big blocks of 1024 ints at a time
try{
  for (int i = 0; i &lt; partialLength; i++) {
     intBuff.get(block);
     // Do processing on ints, w00t!
  }

  partialLength = totalLength % 1024; //modulo to get remainder
  if (partialLength &gt; 0) {
    intBuff.get(block,0,partialLength);
    //Do final processing on ints
  }
} catch BufferUnderFlowException bufo {
   //well, dang!
}
</code></pre>

<p>This is MUCH, MUCH faster than getting an int at a time.  Iterating over the int[] array, which has set and known-good bounds, will also let your code JIT much tighter by eliminating bounds checks and the exceptions ByteBuffer can throw.</p>

<p>If you need further performance, you can tweak the code, or roll your own size-optimized  byte[] to int[] conversion code. I was able to get some performance improvement using that in place of the IntBuffer methods with partial loop unrolling... but it's not suggested by any means.</p>
"
"473499","<p>Most likely, Bill the Lizard is right. In case it still doesn't work out, you could extract the test name from the stack dump of the current thread (<code>Thread.currentThread().getStackTrace()</code>) -- rather hacky, but maybe the end justifies the means :)</p>
"
"14988974","<pre><code>    static boolean isBalanced(Node root) {
    //check in the depth of left and right subtree
    int diff = depth(root.getLeft()) - depth(root.getRight());
    if (diff &lt; 0) {
        diff = diff * -1;
    }
    if (diff &gt; 1) {
        return false;
    }
    //go to child nodes
    else {
        if (root.getLeft() == null &amp;&amp; root.getRight() == null) {
            return true;
        } else if (root.getLeft() == null) {
            if (depth(root.getRight()) &gt; 1) {
                return false;
            } else {
                return true;
            }
        } else if (root.getRight() == null) {
            if (depth(root.getLeft()) &gt; 1) {
                return false;
            } else {
                return true;
            }
        } else if (root.getLeft() != null &amp;&amp; root.getRight() != null &amp;&amp; isBalanced(root.getLeft()) &amp;&amp; isBalanced(root.getRight())) {
            return true;
        } else {
            return false;
        }
    }
}
</code></pre>
"
"483587","<p>Have you tried using a wildcard in the classpath? So you would use something like:</p>

<pre><code>javac MyApp.java -cp /some/path/to/libraries/*.jar
</code></pre>

<p>I've not used java for a while so not sure if the above is possible, but it's what I would expect to be the syntax.</p>
"
"16113198","<p>This worked fine for me, too:</p>

<pre><code>&lt;welcome-file-list&gt;
&lt;welcome-file&gt;MyAction.action&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;
</code></pre>

<p>I was not able to get the default action to execute when the user enters the webapp using the root of the web app (mywebapp/).  There is a bug in struts 2.3.12 that won't go to the default action or use the welcome page when you use the root url.  This will be a common occurrence.  Once I changed back to struts 2.1.8 it worked fine.</p>
"
"721061","<pre><code>public class MyMain2 {
    public static void main(String[] args) {
        double myDub;
        myDub=1234.5678;
        long myLong;
        myLong=(int)myDub;
        myDub=(myDub%1)*10000;
        int myInt=(int)myDub;
        System.out.println(myLong + ""\n"" + myInt);
    }
}
</code></pre>
"
"779431","<p>You really should have search for this but in JSP it's :</p>

<pre><code>request.getRemoteHost()
</code></pre>
"
"7329242","<p>I enclose my example code with <code>&lt;pre class=""brush: java""&gt;&lt;/pre&gt;</code> tags and use <a href=""http://alexgorbatchev.com/SyntaxHighlighter/manual/older_versions.html"" rel=""nofollow"">SyntaxHighlighter</a> for published javadocs. It doesn't hurt IDE and makes published code examples beautiful.</p>
"
"7421850","<pre><code>Integer[] arr = (Integer[]) x.toArray(new Integer[x.size()]);
</code></pre>

<p>access <code>arr</code> like normal <code>int[]</code>.</p>
"
"723452","<p>You are probably seeing only 50% due to java not using the second core of your CPU.</p>

<p>Your code will do the addition and comparison as fast as the CPU can do them.</p>

<pre><code>// wait 16 milliseconds to cap frame rate to 60 fps
while (System.nanoTime() &lt; lastFrame + 16000000)        {
  Thread.yield();
}
</code></pre>

<p>Use Thread.sleep(16) instead of the tight while loop with lots of math.</p>
"
"17477921","<p>Use the following piece of code</p>

<pre><code>ActionListener a=new ActionListener(){
   public void actionPerformed(ActionEvent ae)
   {
    // your code
   }
};
getRootPane().registerKeyboardAction(a,KeyStroke.getKeyStroke(""ctrl D""),JComponent.WHEN_IN_FOCUSED_WINDOW);
</code></pre>

<p>Replace ""ctrl D"" with the shortcut you want.</p>
"
"17558659","<pre><code>public synchronized void start() {
    var = true;
    thread.start();
}
</code></pre>

<p>Keyword thread. Basically, this allows not threads to overlap and stuff. So no problems will occur.</p>
"
"2293195","<p>terribly late but i just encountered this issue and this is my fix:</p>

<pre><code>private static String removeNonUtf8CompliantCharacters( final String inString ) {
    if (null == inString ) return null;
    byte[] byteArr = inString.getBytes();
    for ( int i=0; i &lt; byteArr.length; i++ ) {
        byte ch= byteArr[i]; 
        // remove any characters outside the valid UTF-8 range as well as all control characters
        // except tabs and new lines
        if ( !( (ch &gt; 31 &amp;&amp; ch &lt; 253 ) || ch == '\t' || ch == '\n' || ch == '\r') ) {
            byteArr[i]=' ';
        }
    }
    return new String( byteArr );
}
</code></pre>
"
"17828692","<p>You can also do this with the ol' good method :</p>

<pre><code>String inputLine = ""test123"";
String translatedString = null;
char[] stringArray = inputLine.toCharArray();
for(int i=0;i&lt;stringArray.length;i++){
      translatedString += Integer.toBinaryString((int) stringArray[i]);
}
</code></pre>
"
"792425","<p>I think it is not mandatory that Java make any construct similar to anything else, even C++. Anything adopted must be so because the developers accept it. Besides, arguments like ""they made it similar to something else"" do not explain why they don't just make an instance method version, they do this with primitive wrappers (in addition to the instance toString() method, they have the static version).</p>

<p>This is what I think:</p>

<p>On a normal case, both forms are equivalent, but suppose that we have something like:</p>

<pre><code>String invalidFormat = ""%invalid""; // or something else that is invalid
</code></pre>

<p>and then we call:</p>

<pre><code>String.format(invalidFormat, anything);
// ""anything"" is indeed anything....
</code></pre>

<p>the invalid become the argument  and Java clarify this by throwing an instance of IllegalArgumentException (even in the case of Formatter, there are many kinds).</p>

<p>However, in something like:</p>

<pre><code>invalidFormat.format(anything);
</code></pre>

<p>the invalid one is no longer the argument. The problem now lies with the instance it is called on and so is probaby better described as an ""invalid state"" (not Java's ""IllegalStateException"", which has a completely different usage). But because Strings are immutable, this so called ""state"" will never change, so it will always remain invalid as a format, even though it is a valid simple string.</p>

<p>Compare this with, say, java.lang.Long. Both versions of toString will never throw any exception, so they are both equivalent.</p>
"
"2421152","<p>Or you could just use getClass().  You can do something like:</p>

<pre><code>public class Foo
{
    public static final String PROGNAME = new Foo().getClass().getName();
}
</code></pre>

<p>And then PROGNAME will be available anywhere inside Foo.  If you're not in a static context, it gets easier as you could use this:</p>

<pre><code>String myProgramName = this.getClass().getName();
</code></pre>
"
"18240546","<pre><code>public class JoinArray {

static int[] testcase1 = {1,14,15,2,3};
static int[] testcase2 = {20,30,40,30,20};

public static void main(String args[]){
    JoinArray testInstance = new JoinArray();
    int[] result = testInstance.join(testcase1,testcase2);
    System.out.print(""{"");
    for (int i=0;i&lt;result.length;i++){
        if (i&gt;0)
            System.out.print("","");
        System.out.print(result[i]);
    }
    System.out.println(""}"");
}

//write your code here
public int[] join(int[] arr1,int[] arr2)
   {

      int[] arr3=new int[arr1.length+arr2.length];
      int[] result= new int[arr1.length+arr2.length];

      for(int i=0;i&lt;arr1.length;i++)
      {
          arr3[i]=arr1[i];
      }

      for(int j=arr1.length,i=0;j&lt;arr2.length+arr1.length;j++,i++)
      {
          arr3[j]=arr2[i];
      }

        result=arr3;
        return result;

   }
}
</code></pre>
"
"18435824","<p>You need to use a constant of <a href=""http://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html"" rel=""nofollow""><code>java.util.regex.Pattern</code></a> for avoid recompiled the expression every time:</p>

<pre><code>private static final Pattern REGEX_PATTERN = 
        Pattern.compile("" {2,}"");

public static void main(String[] args) {
    String input = ""Some text   with spaces"";
    System.out.println(
        REGEX_PATTERN.matcher(input).replaceFirst("" "")
    );  // prints ""Some text with spaces""
}
</code></pre>

<p>In another way, the <a href=""http://commons.apache.org/proper/commons-lang/"" rel=""nofollow"">Apache Commons Lang</a> include in the class <a href=""http://commons.apache.org/proper/commons-lang/javadocs/api-2.6/org/apache/commons/lang/StringUtils.html"" rel=""nofollow""><code>StringUtils</code></a> the method <a href=""http://commons.apache.org/proper/commons-lang/javadocs/api-2.6/org/apache/commons/lang/StringUtils.html#normalizeSpace%28java.lang.String%29"" rel=""nofollow""><code>normalizeSpace</code></a>.</p>
"
"545065","<p>I don't know any debugging methods, but I use vim whenever I'm programming - no matter what language. Using Makefiles and binding make commands to some function keys was a big help to me. Some examples:</p>

<pre><code>:map &lt;F12&gt;     :make&lt;CR&gt;:cclose&lt;CR&gt;:copen&lt;CR&gt;
:map &lt;S-F12&gt;   :make debug&lt;CR&gt;:cclose&lt;CR&gt;
:map &lt;C-F12&gt;   :make exec&lt;CR&gt;:cclose&lt;CR&gt;
:map &lt;C-S-F12&gt; :make clean&lt;CR&gt;
</code></pre>
"
"19666913","<p>Should do the trick. This is assuming String[] first and String[] second</p>

<pre><code>List&lt;String&gt; myList = new ArrayList&lt;String&gt;(Arrays.asList(first));
myList.addAll(new ArrayList&lt;String&gt;(Arrays.asList(second)));
String[] both = myList.toArray(new String[myList.size()]);
</code></pre>
"
"765241","<p>I was just trying to do the same thing, and one neat trick i just realized is that you can can try a cast, and if the cast fails, ClassCastException will be thrown.  You can can catch that, and do whatever.  </p>

<p>so your sameClassAs method should look like:</p>

<pre><code>public boolean sameClassAs(Object o) {
    boolean same = false;
    try {
        E t = (E)o;
        same = true;
    } catch (ClassCastException e) {
        // same is false, nothing else to do
    } finally {
        return same;
    }
}
</code></pre>
"
"3027450","<p>Just use the <code>.setVisible()</code> method of JTextField:</p>

<pre><code>JTextField tf = new JTextField() ;
tf.setVisible(true) ;
panel.add(tf) ;
</code></pre>
"
"3056891","<p>for me a pretty simple and fool proof way would be to simply make a method caller method like so:</p>

<pre><code>public static object methodCaller(String methodName)
{
    if(methodName.equals(""getName""))
        return className.getName();
}
</code></pre>

<p>then when you need to call the method simply put something like this</p>

<pre><code>//calling a toString method is unnessary here, but i use it to have my programs to both rigid and self-explanitory 
System.out.println(methodCaller(methodName).toString()); 
</code></pre>
"
"823969","<p>try to catch a Throwable, the root of Exception and Error, with:</p>

<pre><code>try{
        av = UserHelper.importUsers(data, admin);
        System.out.print(""test2"");
    } catch (ImportException ie) {
        System.out.print(""testE"");
        returnMessageValue = ie.getMessage();
    } catch (Exception e) {
        System.out.print(""testE2"");
    } catch (Throwable t) {
        // Here you'll catch *anything* else
        System.out.print(""testTE"");
    }
</code></pre>
"
"769050","<p>Here, your problem is good-old Dependency Injection (aka Inversion of Control). Your goal should be to inject your implementation of <code>SomeClass</code> instead of monkeypatching it. And yes, this approach requires some changes to your existing design but for the right reasons (name your favorite design principle here) - especially the same object should not be responsible for both creating and using other objects. </p>

<p>I assume the way you're using <code>SomeClass</code> looks somewhat like this:</p>

<pre><code>public class OtherClass {
  public void doEverything() {
    SomeClass sc = SomeClass.geInstance();
    Object o = sc.doSomething();

    // some more stuff here...
  }
}
</code></pre>

<p>Instead, what you should do is first create your class that implements the same interface or extends <code>SomeClass</code> and then pass that instance to <code>doEverything()</code> so your class becomes agnostic to implementation of <code>SomeClass</code>. In this case the code that calls <code>doEverything</code> is responsible for passing in the correct implementation - whether be the actual <code>SomeClass</code> or your monkeypatched <code>MySomeClass</code>. </p>

<pre><code>public class MySomeClass() extends SomeClass {
  public Object doSomething() {
    // your monkeypatched implementation goes here
  }
}

public class OtherClass {
  public void doEveryting(SomeClass sc) {
    Object o = sc.doSomething();

    // some more stuff here...
  }
}
</code></pre>
"
"201429","<pre><code>jRadioOne = new javax.swing.JRadioButton();
jRadioTwo = new javax.swing.JRadioButton();
jRadioThree = new javax.swing.JRadioButton();
</code></pre>

<p>... then for every button:</p>

<pre><code>buttonGroup1.add(jRadioOne);
jRadioOne.setText(""One"");
jRadioOne.setActionCommand(ONE);
jRadioOne.addActionListener(radioButtonActionListener);
</code></pre>

<p>...listener</p>

<pre><code>ActionListener radioButtonActionListener = new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonActionPerformed(evt);
            }
        };
</code></pre>

<p>...do whatever you need as response to event</p>

<pre><code>protected void radioButtonActionPerformed(ActionEvent evt) {            
       System.out.println(evt.getActionCommand());
    }
</code></pre>
"
"21864471","<p>To add to all the answers, printing the object as a JSON string is also an option.</p>

<p>Using Jackson:</p>

<pre><code>ObjectWriter ow = new ObjectMapper().writer().withDefaultPrettyPrinter();
System.out.println(ow.writeValueAsString(anyArray));
</code></pre>

<p>Using Gson:</p>

<pre><code>Gson gson = new Gson();
System.out.println(gson.toJson(anyArray));
</code></pre>
"
"212753","<p>If you make the logger nonstatic, you can at least inherit it:</p>

<pre><code>public class SomeBaseClass
{
    protected Logger logger = Logger.getLogger(getClass());
}

public class SubClass extends SomeBaseClass
{
    public void doit() { logger.debug(""doit!!!!""); }
}
</code></pre>

<p>That's how I've always done it.</p>
"
"3830563","<p>If you use <code>java.net.URL.openStream()</code> to get an <code>InputStream</code> for the web resource content you automatically get the same proxy used as Internet Explorer would use for that URL.</p>

<p>No need to go to the Java Control Panel or to display the proxy used.</p>
"
"791406","<p>I guess you don't get many of these question with C#. You need to understand what the exception is and deal with it appropriately (which is usually to let it go further up the stack).</p>

<p><code>InterruptedException</code> - Thrown when a thread is interrupted (by <code>Thread.interrupt</code>) when waiting (roughly). Why would you want a thread to be interrupted? Usually you want the thread to stop what it's doing - reset the interrupt state and exit. For instance, the PlugIn will interrupt applet threads if they continue for much longer after an applet should be gone. However, in this case provided <code>done</code> is called correctly you shouldn't be waiting at all. Therefore, it would be appropriate to wrap the exception in an <code>IllegalStateException</code> (and the API docs should probably state that). It's a really bad API. The <code>publish</code>/<code>process</code> mode probably makes more sense.</p>

<p><code>ExecutionException</code> - You need to deal with the wrapped exception. If you are not expecting a particular type of exception, wrap it in an unchecked exception.</p>

<p>Generally I would suggest a clear separation between what happens on the EDT and what happens off the EDT. Therefore, avoid <code>SwingWorker</code> in production code.</p>
"
"841450","<p>Coding conversions are to improve readability.  You don't have to use letters. Java allows $ symbol for example.</p>

<pre><code>public final static Color $$ = COLOR.WHITE;
public final static Color $_ = COLOR.BLACK;
</code></pre>

<p>You could number your variables too, but that doesn't mean its a good idea. ;)</p>
"
"22483048","<p>I develop a library that serves this purpose: <a href=""https://github.com/smola/galimatias"" rel=""nofollow"">galimatias</a>. It parses URL the same way web browsers do. That is, if a URL works in a browser, it will be correctly parsed by <a href=""https://github.com/smola/galimatias"" rel=""nofollow"">galimatias</a>.</p>

<p>In this case:</p>

<pre class=""lang-java prettyprint-override""><code>// Parse
io.mola.galimatias.URL.parse(
    ""http://search.barnesandnoble.com/booksearch/first book.pdf""
).toString()
</code></pre>

<p>Will give you: <code>http://search.barnesandnoble.com/booksearch/first%20book.pdf</code>. Of course this is the simplest case, but it'll work with anything, way beyond <code>java.net.URI</code>.</p>

<p>You can check it out at: <a href=""https://github.com/smola/galimatias"" rel=""nofollow"">https://github.com/smola/galimatias</a></p>
"
"4205620","<pre><code>str.contains(""!="") ^ str.startsWith(""not("")
</code></pre>

<p>looks better for me than</p>

<pre><code>str.contains(""!="") != str.startsWith(""not("")
</code></pre>
"
"4407228","<p>You can process any number of threads; there is no limit. I ran the following code while watching a movie and using NetBeans, and it worked properly/without halting the machine. I think you can keep even more threads than this program does.</p>

<pre><code>class A extends Thread {
    public void run() {
        System.out.println(""**************started***************"");
        for(double i = 0.0; i &lt; 500000000000000000.0; i++) {
            System.gc();
            System.out.println(Thread.currentThread().getName());
        }
        System.out.println(""************************finished********************************"");
    }
}

public class Manager {
    public static void main(String[] args) {
        for(double j = 0.0; j &lt; 50000000000.0; j++) {
            A a = new A();
            a.start();
        }
    }
}
</code></pre>
"
"12032525","<p>If you're using GWT, you can't use InternetAddress, and the pattern supplied by MBCook is pretty scary.</p>

<p>Here is a less scary regex (might not be as accurate):</p>

<pre><code>public static boolean isValidEmail(String emailAddress) {
    return emailAddress.contains("" "") == false &amp;&amp; emailAddress.matches("".+@.+\\.[a-z]+"");
}
</code></pre>
"
"4790538","<p>This question is a bit old, but why don't you just reassemble the args in your java program?</p>

<pre><code>StringBuilder allArgs = new StringBuilder();
for (int i=0; i &lt; args.length; i++)
{
    //System.out.println(""arg""+i+"": ""+args[i]);
    allArgs.append(args[i]+"" "");
}
//Parse out the args the way you wish using allArgs
</code></pre>
"
"873805","<p>Let's not forget the good old-fashioned</p>

<pre><code> for s in strArray do
     print s
     print "" ""
</code></pre>
"
"4791571","<p>if your question is at the user level of android these properties are located in: <code>""Settings -&gt; Location -&gt; Use wireless networks"" -&gt; ""Settings -&gt; Location -&gt; Use GPS satellites""</code>.</p>

<p>But at the developer can use the class <code>""android.provider.Settings.Secure""</code> with the appropriate permissions.</p>
"
"612307","<p>I just consider this:</p>

<pre><code>instanceVar.staticMethod();
</code></pre>

<p>to be shorthand for this:</p>

<pre><code>instanceVar.getClass().staticMethod();
</code></pre>

<p>If you always had to do this:</p>

<pre><code>SomeClass.staticMethod();
</code></pre>

<p>then you wouldn't be able to leverage inheritance for static methods.</p>

<p>That is, by calling the static method via the instance you don't need to know what concrete class the instance is at compile time, only that it implements staticMethod() somewhere along the inheritance chain.</p>

<p>EDIT:  This answer is wrong.  See comments for details.</p>
"
"266741","<p>Did you test the following?</p>

<pre><code>public static &lt;T&gt; int compareObject(Comparable&lt;T&gt; o1, Comparable&lt;T&gt; o2)
{
    if ((o1 instanceof String) &amp;&amp; (o2 instanceof String))
        return ((String) o1).toUpperCase().compareTo(((String) o2).toUpperCase());
    else
        return o1.compareTo(o2);
}
</code></pre>

<p>I think it should work correctly.</p>
"
"12801685","<p>Here is how you use <code>parseDouble</code> to convert a <code>String</code> to a <code>Double</code>:</p>

<p><strong>doubleExample.java</strong></p>

<pre><code>import java.io.BufferedReader;

import java.io.IOException;

import java.io.InputStreamReader; 

public class doubleExample {

        public static void main(String[] args) {

                Double myDouble = new Double(""0"");
                System.out.println(""Please enter a number:"");

                try
                {
                        //get the number from console
                        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
                        myDouble = Double.parseDouble(br.readLine());
                }
                //if invalid value was entered
                catch(NumberFormatException ne)
                {
                        System.out.println(""Invalid value"" + ne);
                        System.exit(0);
                }
    catch(IOException ioe)
                {
                        System.out.println(""IO Error :"" + ioe);
                        System.exit(0);
                }

                System.out.println(""Double value is "" + myDouble);
        }
}
</code></pre>
"
"877959","<p>Java's use of erasure to implement generics means that you're going to have trouble new'ing a generic type.</p>

<p>How about using null to represent 0</p>

<pre><code>retVal[i][j] = null;
</code></pre>

<p>You can then assign any type you want to the array later on.</p>
"
"891834","<pre><code>public abstract class Parent {

    private Parent peer;

    public Parent(Parent peer) {
        this.peer = peer;
    }

    public Parent(String someString) {
    }

}

public class Child1 extends parent {
    public Child1() {
        super(new Child1())
    }
}

public class Child2 extends parent {
    public Child2() {
        super(new Child2())
    }
}
</code></pre>

<p>Here's the simplest way I can think of. You could probably do it in the parent class using some of the java reflection API though (so ask the 'this' reference what class it is and construct a new class of that type. It may not work depending on how java constructors work though. In C++, the 'this' pointer in a constructor is of the same type as the constructors class)</p>
"
"277047","<p>A brute force algorithm:</p>

<pre><code>public static boolean hasAtLeastTwoOdds(int[] args) {
    int[] target = args; // make defensive copy
    int oddsFound;
    int numberOddsSought = 2;

    for (int i = 0; i &lt; target.length; i++) {
        if (target[i] % 2 != 0) {
            if (oddsFound== numberOddsSought) {
                return true;
            }
            oddsFound++;
        }
    }

    return false;
}
</code></pre>
"
"5333377","<p>From my experience, people new to Java never ever override <code>equals</code>, <code>hashCode</code> and <code>toString</code> methods, no mater what the objects purpose is. Also nobody ever bothers with setting up simple <strong>logging system</strong>. When I see <code>System.out.println</code> I feel like I'm ready to break fingers! But lot of seasoned coders are putting pin into thous tasks too. </p>

<p>On more advanced note get used to coding where <code>Specs</code> come first followed closely by <code>unit testing</code> - but this is more generic not just for Java. But again lots of people put pin into this. </p>
"
"277158","<p>I'd initialize a <code>word_count</code> int to 1, then loop through each character in the file and increment <code>word_count</code> for every whitespace character <em>unless</em> the previous character was a whitespace character. (A space, tab, or newline.)</p>
"
"5403146","<p>Short answer:</p>

<pre><code>${param.item_[count.index]}
</code></pre>
"
"12996002","<p>You can also change folder name from faces to jsp for example like this:</p>

<pre><code>&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/jsp/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
&lt;session-config&gt;
    &lt;session-timeout&gt;
        30
    &lt;/session-timeout&gt;
&lt;/session-config&gt;
&lt;welcome-file-list&gt;
   &lt;welcome-file&gt;jsp/index.jsp&lt;/welcome-file&gt;
&lt;/welcome-file-list&gt;
</code></pre>

<p>And then your url will looks like: </p>

<pre><code>http://localhost/WebApplication/jsp/folder1/page.jsp
</code></pre>

<p>and if you deploy your application to the context path / of application server it will looks like:</p>

<pre><code>http://localhost/jsp/folder1/page.jsp
</code></pre>

<p>it will be hard now to find out that you use JSF for lamers ;-) but a hacker can investigate it by pointing his browser to the url like this <code>http://localhost/folder1/page.jsp</code></p>
"
"13283772","<pre><code>public static boolean isValidEmail(String emailAddress) {
    return emailAddress.contains("" "") == false &amp;&amp; emailAddress.matches("".+@.+\\.[a-z]+"");
} 
</code></pre>
"
"635973","<pre><code>long time1, time2;
time1 = System.currentMillis();

.. drink coffee

time2 = System.currentMillis();

long difference = time2 - time1 // millies between time1 and time2

java.util.Date differneceDate = new Date(difference);
</code></pre>

<p>To create a string like ""2 Minutes"" you should use DateFormatter/DateFormat. You can find more details on this in the the Java API spec (java.sun.com). </p>
"
"5701868","<p>I thought I would share some good fortune I had in dealing with this issue.  I am using JDK 1.6.0_23 and so I cannot benefit from NIO2.  I am building and running on Windows 7 /x64 ONLY so mileage may vary in other environments.  Unfortunately, other solutions here did not work for me in avoiding NullPointerExceptions caused when attempting to traverse a junction (probably because junction != symlink....).  While I am not constrained by JDK version, I decided to keep at the problem for a bit longer.</p>

<p>I had this code which would cause a NullPointerException if used on a symbolic link or when encountering the 'System Volume Information' directory.  (Note, traverseItem.f() returns an object of type java.io.File)</p>

<pre><code>if (traverseItem.f().isDirectory) {
    for (File item : traverseItem.f().listFiles()) {
</code></pre>

<p>So, it is supposedly a directory but calling listFiles() on it causes an NPE.  What to do?  I spied the list() method and wondered if it would exhibit the same behavior.  What I discovered was the following:</p>

<p>Calling list() on a File describing an empty folder returns a String[] array of length zero.  However, calling list() on a File describing a junction which would otherwise crash from listFiles() returns null</p>

<p>I was able to avoid the NullPointerExceptions by adding the following test before calling listFiles()</p>

<pre><code>    String[] contents = traverseItem.f().list();
    if (contents != null) {  //Non-traversible if null, possibly junction or ???
</code></pre>

<p>It remains to exhaustively test all cases of junction, symbolic link, hard link, and dare I mention it, shortcut, but this may help some.</p>
"
"24225075","<p>Here's a thread-safe solution for the problem:</p>

<p><a href=""https://svn.code.sf.net/p/loggifier/code/trunk/de.unkrig.commons.lang/src/de/unkrig/commons/lang/security/Sandbox.java"" rel=""nofollow"">https://svn.code.sf.net/p/loggifier/code/trunk/de.unkrig.commons.lang/src/de/unkrig/commons/lang/security/Sandbox.java</a></p>

<pre><code>package de.unkrig.commons.lang.security;

import java.security.AccessControlContext;
import java.security.Permission;
import java.security.Permissions;
import java.security.ProtectionDomain;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.WeakHashMap;

import de.unkrig.commons.nullanalysis.Nullable;

/**
 * This class establishes a security manager that confines the permissions for code executed through specific classes,
 * which may be specified by class, class name and/or class loader.
 * &lt;p&gt;
 * To 'execute through a class' means that the execution stack includes the class. E.g., if a method of class {@code A}
 * invokes a method of class {@code B}, which then invokes a method of class {@code C}, and all three classes were
 * previously {@link #confine(Class, Permissions) confined}, then for all actions that are executed by class {@code C}
 * the &lt;i&gt;intersection&lt;/i&gt; of the three {@link Permissions} apply.
 * &lt;p&gt;
 * Once the permissions for a class, class name or class loader are confined, they cannot be changed; this prevents any
 * attempts (e.g. of the confined class itself) to release the confinement.
 * &lt;p&gt;
 * Code example:
 * &lt;pre&gt;
 *  Runnable unprivileged = new Runnable() {
 *      public void run() {
 *          System.getProperty(""user.dir"");
 *      }
 *  };
 *
 *  // Run without confinement.
 *  unprivileged.run(); // Works fine.
 *
 *  // Set the most strict permissions.
 *  Sandbox.confine(unprivileged.getClass(), new Permissions());
 *  unprivileged.run(); // Throws a SecurityException.
 *
 *  // Attempt to change the permissions.
 *  {
 *      Permissions permissions = new Permissions();
 *      permissions.add(new AllPermission());
 *      Sandbox.confine(unprivileged.getClass(), permissions); // Throws a SecurityException.
 *  }
 *  unprivileged.run();
 * &lt;/pre&gt;
 */
public final
class Sandbox {

    private Sandbox() {}

    private static final Map&lt;Class&lt;?&gt;, AccessControlContext&gt;
    CHECKED_CLASSES = Collections.synchronizedMap(new WeakHashMap&lt;Class&lt;?&gt;, AccessControlContext&gt;());

    private static final Map&lt;String, AccessControlContext&gt;
    CHECKED_CLASS_NAMES = Collections.synchronizedMap(new HashMap&lt;String, AccessControlContext&gt;());

    private static final Map&lt;ClassLoader, AccessControlContext&gt;
    CHECKED_CLASS_LOADERS = Collections.synchronizedMap(new WeakHashMap&lt;ClassLoader, AccessControlContext&gt;());

    static {

        // Install our custom security manager.
        if (System.getSecurityManager() != null) {
            throw new ExceptionInInitializerError(""There's already a security manager set"");
        }
        System.setSecurityManager(new SecurityManager() {

            @Override public void
            checkPermission(@Nullable Permission perm) {
                assert perm != null;

                for (Class&lt;?&gt; clasS : this.getClassContext()) {

                    // Check if an ACC was set for the class.
                    {
                        AccessControlContext acc = Sandbox.CHECKED_CLASSES.get(clasS);
                        if (acc != null) acc.checkPermission(perm);
                    }

                    // Check if an ACC was set for the class name.
                    {
                        AccessControlContext acc = Sandbox.CHECKED_CLASS_NAMES.get(clasS.getName());
                        if (acc != null) acc.checkPermission(perm);
                    }

                    // Check if an ACC was set for the class loader.
                    {
                        AccessControlContext acc = Sandbox.CHECKED_CLASS_LOADERS.get(clasS.getClassLoader());
                        if (acc != null) acc.checkPermission(perm);
                    }
                }
            }
        });
    }

    // --------------------------

    /**
     * All future actions that are executed through the given {@code clasS} will be checked against the given {@code
     * accessControlContext}.
     *
     * @throws SecurityException Permissions are already confined for the {@code clasS}
     */
    public static void
    confine(Class&lt;?&gt; clasS, AccessControlContext accessControlContext) {

        if (Sandbox.CHECKED_CLASSES.containsKey(clasS)) {
            throw new SecurityException(""Attempt to change the access control context for '"" + clasS + ""'"");
        }

        Sandbox.CHECKED_CLASSES.put(clasS, accessControlContext);
    }

    /**
     * All future actions that are executed through the given {@code clasS} will be checked against the given {@code
     * protectionDomain}.
     *
     * @throws SecurityException Permissions are already confined for the {@code clasS}
     */
    public static void
    confine(Class&lt;?&gt; clasS, ProtectionDomain protectionDomain) {
        Sandbox.confine(
            clasS,
            new AccessControlContext(new ProtectionDomain[] { protectionDomain })
        );
    }

    /**
     * All future actions that are executed through the given {@code clasS} will be checked against the given {@code
     * permissions}.
     *
     * @throws SecurityException Permissions are already confined for the {@code clasS}
     */
    public static void
    confine(Class&lt;?&gt; clasS, Permissions permissions) {
        Sandbox.confine(clasS, new ProtectionDomain(null, permissions));
    }

    // Code for 'CHECKED_CLASS_NAMES' and 'CHECKED_CLASS_LOADERS' omitted here.

}
</code></pre>

<p>Please comment!</p>

<p>CU</p>

<p>Arno</p>
"
"24379913","<p>We can also create the object in this way:-</p>

<pre><code>String s =""Hello"";
</code></pre>

<p>Nobody has discuss it.</p>
"
"24796440","<pre><code>    Map&lt;String, Integer&gt; map = new HashMap&lt;String, Integer&gt;();
    map.put(""java"", 20);
    map.put(""C++"", 45);

    Set &lt;Entry&lt;String, Integer&gt;&gt; set = map.entrySet();

    List&lt;Entry&lt;String, Integer&gt;&gt; list = new ArrayList&lt;Entry&lt;String, Integer&gt;&gt;(set);
</code></pre>

<p>we can have both key and value pair in list.Also can get key and value using Map.Entry by iterating over list.</p>
"
"14700882","<p>The answer for conversion of char to int or long is simple casting.</p>

<p>For example:- if you would like to convert Char '0' into long.</p>

<p>Follow simple cast</p>

<pre><code>Char ch='0';
String convertedChar= Character.toString(ch);  //Convert Char to String.
Long finalLongValue=Long.parseLong(convertedChar);
</code></pre>

<p>Done!!</p>
"
"852669","<p>If you want to convert a string to an integer use:</p>

<pre><code>int x = Integer.parseInt(aString);
</code></pre>
"
"25456825","<p>You can use a function like this. Complete and modify it to your need :</p>

<pre><code>/**
     * Encode URL (except :, /, ?, &amp;, =, ... characters)
     * @param url to encode
     * @param encodingCharset url encoding charset
     * @return encoded URL
     * @throws UnsupportedEncodingException
     */
    public static String encodeUrl (String url, String encodingCharset) throws UnsupportedEncodingException{
            return new URLCodec().encode(url, encodingCharset).replace(""%3A"", "":"").replace(""%2F"", ""/"").replace(""%3F"", ""?"").replace(""%3D"", ""="").replace(""%26"", ""&amp;"");
    }
</code></pre>

<p>Example of use :</p>

<pre><code>String urlToEncode = """"http://www.growup.com/folder/intérieur-à_vendre?o=4"";
Utils.encodeUrl (urlToEncode , ""UTF-8"")
</code></pre>

<p>The result is : <a href=""http://www.growup.com/folder/int%C3%A9rieur-%C3%A0_vendre?o=4"" rel=""nofollow"">http://www.growup.com/folder/int%C3%A9rieur-%C3%A0_vendre?o=4</a></p>
"
"300330","<p>I think it's risky. Threading results in all kinds of subtly issues that are a giant pain to debug. You might want to look at <a href=""http://commons.apache.org/collections/api/org/apache/commons/collections/FastHashMap.html"" rel=""nofollow""><code>FastHashMap</code></a>, which is intended for read-only threading cases like this.</p>

<p>At the least, I'd also declare <code>validProgramCodes</code> to be <code>volatile</code> so that the reference won't get optimized into a register or something.</p>
"
"25479306","<p>whats wrong with </p>

<pre><code>class Example
{
    FileOutputStream fileOutputStream;

    public Example()
    {
        //System.out.println(""Example.Example()"");

        debug(""Example.Example()"",false); // toggle

         try
         {
              fileOuputStream = new FileOutputStream(""debug.txt"");
         }
         catch (Exception exception)
         {
             debug(exception + Calendar.getInstance().getTime());
          }
    }

    private boolean was911AnInsideJob()
    {
         System.out.println(""Example.was911AnInsideJob()"");

         return true;
    }


    public boolean shouldGWBushBeImpeached()
    {
         System.out.println(""Example.shouldGWBushBeImpeached()"");

         return true;
    }

    public void setPunishment(int yearsInJail)
    {
        debug(""Server.setPunishment(int yearsInJail="" + yearsInJail + "")"",true);
    }
}
</code></pre>

<p><br><br>
and before people go crazy about using ""System.out.println(...)"" you could always, and should, create some method so that output can be redirected  e.g
<br><Br><Br></p>

<pre><code>private void debug (Object object)
{
    debug(object,true);
}

private void dedub(Object object, boolean debug)
{
    if (debug)
    {
        System.out.println(object);

        // you can also write to a file but make sure the outputstream ISNT opened
        // every time debug(Object object) is called

        fileOutputStream.write(object.toString().getBytes());
    }
}
</code></pre>
"
"912745","<pre><code>try getHibernateTemplate().saveOrUpdate()
</code></pre>
"
"300394","<p>If I read the <a href=""http://docs.oracle.com/javase/specs/jls/se5.0/html/j3TOC.html"" rel=""nofollow"">JLS</a> correctly (no guarantees there!), accesses to <em>references</em> are always atomic, period.  See <a href=""http://docs.oracle.com/javase/specs/jls/se5.0/html/memory.html#17.7"" rel=""nofollow"">Section 17.7 Non-atomic Treatment of double and long</a> </p>

<p>So, if the access to a reference is always atomic and it doesn't matter what instance of the returned <code>Hashmap</code> the threads see, you should be OK.  You won't see partial writes to the reference, ever.</p>

<hr>

<p>Edit:  After review of the discussion in the comments below and other answers, here are references/quotes from </p>

<p><a href=""http://g.oswego.edu/"" rel=""nofollow"">Doug Lea</a>'s book (Concurrent Programming in Java, 2nd Ed), p 94, section 2.2.7.2 <em>Visibility</em>, item #3:  ""</p>

<blockquote>
  <p>The first time a thread access a field
  of an object, it sees either the
  initial value of the field or the
  value since written by some other
  thread.""</p>
</blockquote>

<p>On p. 94, Lea goes on to describe risks associated with this approach:</p>

<blockquote>
  <p>The memory model guarantees that, given the eventual occurrence of the above operations, a particular update to a particular field made by one thread will eventually be visible to another.  But <em>eventually</em> can be an arbitrarily long time.</p>
</blockquote>

<p>So when it <strong><em>absolutely, positively, must be visible</em></strong> to any calling thread, <code>volatile</code> or some other synchronization barrier is required, especially in long running threads or threads that access the value in a loop (as Lea says).</p>

<p><em><strong>However</em></strong>, in the case where there is a <em>short lived thread</em>, as implied by the question, with new threads for new readers and it <em>does not impact</em> the application to read stale data, synchronization <em>is not</em> <strong><em>required.</em></strong></p>

<hr>

<p>@<a href=""http://stackoverflow.com/users/3474/erickson"">erickson</a>'s answer is the safest in this situation, guaranteeing that other threads will see the changes to the <code>HashMap</code> reference as they occur.  I'd suggest following that advice simply to avoid the confusion over the requirements and implementation that resulted in the ""down votes"" on this answer and the discussion below.</p>

<p>I'm not deleting the answer in the hope that it will be useful.  I'm <strong>not</strong> looking for the ""Peer Pressure"" badge... ;-)</p>
"
"912771","<p>subtract 1000*60*60*24 from the time and create a new date.</p>

<pre><code>Date yesterday = new Date(d.getTime() - (1000*60*60*24));
</code></pre>
"
"912786","<pre><code>    int dayInMs = 1000 * 60 * 60 * 24;
    Date previousDay = new Date(olddate.getTime() - dayInMs);
</code></pre>

<p>Personally if there are a lot of time/date calculations, I'd go with <a href=""http://joda-time.sourceforge.net/"" rel=""nofollow"">Joda-time</a>.</p>
"
"6505115","<p>This is very simple...</p>

<pre><code>File f = new File(exportFileName+"".tmp"");
File f2 = new File(exportFileName);
long l = f.length();
FileInputStream fi = new FileInputStream(f);
AudioInputStream ai = new AudioInputStream(fi,mainFormat,l/4);
AudioSystem.write(ai, Type.WAVE, f2);
fi.close();
f.delete();
</code></pre>

<p>The .tmp file is a RAW audio file, the result is a WAV file with header.</p>
"
"663766","<p>Please see what the update-alternatives command does (it has a nice man...).</p>

<p>Shortly - what happens when you have java-sun-1.4 and java-opensouce-1.0 ... which one takes ""java""? It debian ""/usr/bin/java"" is symbolic link and ""/usr/bin/java-sun-1.4"" is an alternative to ""/usr/bin/java""</p>

<p>Edit:
As Richard said, <code>update-alternatives</code> is not enough. You actually need to use <code>update-java-alternatives</code>. More info at:</p>

<p><a href=""https://help.ubuntu.com/community/Java"" rel=""nofollow"">https://help.ubuntu.com/community/Java</a></p>
"
"16336520","<pre><code>   List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();

    list.add(1);
    list.add(2);

    int[] result = null;
    StringBuffer strBuffer = new StringBuffer();
    for (Object o : list) {
        strBuffer.append(o);
        result = new int[] { Integer.parseInt(strBuffer.toString()) };
        for (Integer i : result) {
            System.out.println(i);
        }
        strBuffer.delete(0, strBuffer.length());
    }
</code></pre>
"
"27326948","<p>For Me this was the solution, HEX=""FF01"" then split to FF(255) and 01(01) </p>

<pre><code>private static byte[] BytesEncode(String encoded) {
    //System.out.println(encoded.length());
    byte result[] = new byte[encoded.length() / 2];
    char enc[] = encoded.toUpperCase().toCharArray();
    String curr = """";
    for (int i = 0; i &lt; encoded.length(); i=i+2) {
        curr = encoded.substring(i,i+2);
        System.out.println(curr);
        if(i==0){
            result[i]=((byte) Integer.parseInt(curr, 16));
        }else{
            result[i/2]=((byte) Integer.parseInt(curr, 16));
        }

    }
    return result;
}
</code></pre>
"
"318247","<p>You can pass parameters into your initial java process with -D:</p>

<pre><code>java -cp &lt;classpath&gt; -Dkey1=value -Dkey2=value ...
</code></pre>
"
"7657874","<pre><code>String s=""praveen"";
boolean p=s.contains(""s"");
if(p)
    System.out.println(""string contains the char 's'"");
else
    System.out.println(""string does not contains the char 's'"");
</code></pre>

<h2>Output</h2>

<pre><code>string does not contains the char 's'
</code></pre>
"
"699449","<p>The parameter T in this case becomes useless as far as Bar is concerned, since it will be erased to Object at compile time. So you could as well ""save yourself the trouble"", and do the erasure early:</p>

<pre><code>public class Bar {

    private Foo&lt;Object&gt; foo;
    private Object t;

  ... 
}
</code></pre>
"
"318367","<p>As a workaround, you could define another interface FooBar that extends Foo and Bar and have your class implement that. It doesn't even have to be a top-level interface - you can declare it private if you don't want to clutter up or retrofit the rest of your code:</p>

<pre><code>private interface FooBar extends Foo, Bar {}
public void problemFunction (Object o) {
  if ( o instanceof Foo &amp;&amp; o instanceof Bar) {
      doSomething((FooBar) o);
  }
}
</code></pre>
"
"877800","<p>I think using XML is overkill (shooting sparrows with cannons) while regexps are ""underkill"" (using a too weak tool, scrubbing floors with a toothbrush).</p>

<p>The right balance sounds like it's ""the .ini format"" or ""mail headers with sections"".  For python there are library docs at <a href=""http://docs.python.org/library/configparser.html"" rel=""nofollow"">http://docs.python.org/library/configparser.html</a>.</p>

<p>A brief example:</p>

<pre><code>[albus_square]
name: Albus Square
items: Flowers, Traffic Cone
north: lecture_theatre
west: library_enchanted_books
south: furnesspuff_college
</code></pre>

<p>I'd assume there's a Java library for this format.  As another poster has pointed out, you might have name collision so I took the liberty of adding a ""name:"" field.  The name in the square brackets would be the unique identifier.</p>
"
"941998","<p>You could write your own serialization method.</p>

<p>so</p>

<pre><code>public byte[] Serialize()
{

// serialize each field in turn here.

return data;
}


public void Deserialize(byte[] data)
{

// deserialize data in the same order it was serialized.

}
</code></pre>

<p>This is the method that we implement in .Net for serialization.  The key thing with this method is it puts you in complete charge of serialization.  It may be long winded if you're not going to have any versions of this type of communication but for multiple versions as the product grows this is one of the few reliable methods we've found to do it.</p>

<p>We use memory stream objects to write out each data field and cascade writing of complex objects by implementing the iserializable interface (which may not exist in java, but it's a simple interface to implement yourself).</p>

<p>We use the same dll on the corporate server as we do on the client.</p>

<p>Serialization is an issue no matter which platform you're on.  </p>
"
"17449292","<p>The answer given as correct is no good for counting things like line returns and is far too verbose. Later answers are better but all can be achieved simply with</p>

<pre><code>str.split(findStr).length
</code></pre>

<p>It does not drop trailing matches using the example in the question.</p>
"
"7679371","<p>I just made my own UniqueList in my own little library like this:</p>

<pre><code>package com.bprog.collections;//my own little set of useful utilities and classes

import java.util.HashSet;
import java.util.ArrayList;
import java.util.List;
/**
*
* @author Jonathan
*/
public class UniqueList {

private HashSet masterSet = new HashSet();
private ArrayList growableUniques;
private Object[] returnable;

public UniqueList() {
    growableUniques = new ArrayList();
}

public UniqueList(int size) {
    growableUniques = new ArrayList(size);
}

public void add(Object thing) {
    if (!masterSet.contains(thing)) {
        masterSet.add(thing);
        growableUniques.add(thing);
    }
}

/**
 * Casts to an ArrayList of unique values
 * @return 
 */
public List getList(){
    return growableUniques;
}

public Object get(int index) {
    return growableUniques.get(index);
}

public Object[] toObjectArray() {
    int size = growableUniques.size();
    returnable = new Object[size];
    for (int i = 0; i &lt; size; i++) {
        returnable[i] = growableUniques.get(i);
    }
    return returnable;
    }
}
</code></pre>

<p>I have a TestCollections class that looks like this:</p>

<pre><code>package com.bprog.collections;
import com.bprog.out.Out;
/**
*
* @author Jonathan
*/
public class TestCollections {
    public static void main(String[] args){
        UniqueList ul = new UniqueList();
        ul.add(""Test"");
        ul.add(""Test"");
        ul.add(""Not a copy"");
        ul.add(""Test""); 
        //should only contain two things
        Object[] content = ul.toObjectArray();
        Out.pl(""Array Content"",content);
    }
}
</code></pre>

<p>Works fine. All it does is it adds to a set if it does not have it already and there's an Arraylist that is returnable, as well as an object array.</p>
"
"880589","<p>you don't need. <code>int[]</code> is an object and can be used as a key inside a map.</p>

<pre><code>Map&lt;int[], Double&gt; frequencies = new HashMap&lt;int[], Double&gt;();
</code></pre>

<p>is the proper definition of the frequencies map.</p>

<p>This was wrong :-). The proper solution is posted too :-).</p>
"
"29079383","<p>Test if string is null</p>

<pre><code>a[0] = ((a[0] == null) ? """" : a[0] ) + c.charAt(i);
</code></pre>
"
"29090873","<p>Both approaches uses the terminal operation <code>Iterable.forEach</code>, but the version with <code>.stream()</code> also unnecessarily creates a <code>Stream</code> object representing the List. While there is no difference, it is suboptimal.</p>
"
"884383","<p>Sun's JavaDocs include <code>RuntimeException</code>s in their documentation, as shown by InputStream's <a href=""http://java.sun.com/javase/6/docs/api/java/io/InputStream.html#read%28byte%5B%5D,%20int,%20int%29"" rel=""nofollow"">read(byte[], int, int)</a> method; documented as throwing NullPointerException and IndexOutOfBoundsException.</p>

<p>FilterOutputStream's <a href=""http://java.sun.com/javase/6/docs/api/java/io/FilterOutputStream.html#flush%28%29"" rel=""nofollow"">flush()</a> is only documented as throwing IOException, thus it doesn't actually throw any <code>RuntimeException</code>s.  Any that could be thrown would most likely be wrapped in an <a href=""http://java.sun.com/javase/6/docs/api/java/io/IOException.html"" rel=""nofollow""><code>IIOException</code></a>.</p>

<p>It could still throw an <a href=""http://java.sun.com/javase/6/docs/api/java/lang/Error.html"" rel=""nofollow""><code>Error</code></a>, but there's not much you can do about those; Sun recommends that you don't try to catch them.</p>
"
"709083","<p>jpalecek's solution fails; it captures the rightmost number. The original poster was a lot closer, but he got the <em>right-most</em> number. To get the left-most number, ignore anything after the first dot:</p>

<pre><code>[^\d]*(\d+)\..*html
</code></pre>

<p>[^\d]* ignores everything before the left-most number (so X1.html captures number 1)
(\d+). captures the first digits, if they are followed by a dot. .* ignores everything between the dot and the final html.</p>
"
"8813908","<p>//this is only the main... you can use wither buffered reader or scanner </p>

<pre><code>string s;
int l=s.length();
int f=0;
for(int i=0;i&lt;l;i++)
   {
      char ch1=s.charAt(i); 
      for(int j=0;j&lt;l;j++)
         {
          char ch2=charAt(j);
          if(ch1==ch2)
           {
             f=f+1;
             s.replace(ch2,'');
           }
          f=0;
          }
     }
//if replacing with null does not work then make it space by using ' ' and add a if condition on top.. checking if its space if not then only perform the inner loop... 
</code></pre>
"
"18739557","<p>I ended up using this (in Java 6):</p>

<pre><code>private static boolean testPath(String path) {
    int prefixLen = FilenameUtils.getPrefixLength(path);
    if (testPathWin(path, prefixLen) || testPathLinux(prefixLen))
        return true;
    else
        return false;
}

private static boolean testPathWin(String path, int prefixLen) {
    if (prefixLen == 3)
        return true;
    File f = new File(path);
    if ((prefixLen == 2) &amp;&amp; (f.getPath().charAt(0) == '/'))
        return true;
    return false;
}

private static boolean testPathLinux(int prefixLen) {
    return (prefixLen != 0);
}
</code></pre>
"
"29277317","<p>if you write the ""loop"" like so (without the <code>do</code> as in your question):</p>

<pre><code>int i=0;
{
    System.out.println(i++);
}while(i&lt;10);
</code></pre>

<p>it will just print out <code>0</code> (nothing more), and <strong>not</strong> loop 10 times.. so no, the loop won't be the same if the do isnt there.</p>
"
"981687","<pre><code>File dir = new File(""BASE DIRECTORY PATH"");
FileFilter ff = new FileFilter() {

	@Override
	public boolean accept(File f) {
		//only want zip files
		return (f.isFile() &amp;&amp; f.getName().toLowerCase().endsWith("".zip""));
	}
};

File[] list = null;
while ((list = dir.listFiles(ff)).length &gt; 0) {
	File file1 = list[0];
	//TODO unzip the file to the base directory
}
</code></pre>
"
"9091254","<p>No method <code>setMessage()</code> defined for class Exception. One should use workarounds to build exception message from custom exception parameters instead of building it directly in the constructor.</p>
"
"995303","<p>I dont know windows very well, but I suggest you omit the ""cmd"" bit of the command. cmd.exe is the windows terminal. Just a guess. Look up the other exec() methods, there is one which takes the command executable to run, and the arguments. On UNIX at least, you can't normally do anything a shell doesn't support (like piping the output to a file) since those are shell features and not done by the called program. Could be why you find if you remove the cmd prefix some things don't work.</p>

<p>try just:</p>

<p><code>Process proc = Runtime.getRuntime().exec(""somebat.bat"");</code></p>
"
"19191359","<p>There is another option if your goal is to generate a fixed list at runtime, which is as simple as it is effective:</p>

<pre><code>static final ArrayList&lt;Element&gt; myList = generateMyList();

private static ArrayList&lt;Element&gt; generateMyList() {
  final ArrayList&lt;Element&gt; result = new ArrayList&lt;&gt;();
  result.add(new Element(1));
  result.add(new Element(2));
  result.add(new Element(3));
  result.add(new Element(4));
  return result;
}
</code></pre>

<p><br>
The benefit of using this pattern is, that the list is for once generated very intuitively and therefore is very easy to modify even with large lists or complex initialization, while on the other hand always contains the same Elements on every actual run of the program (unless you change it at a later point of course).</p>
"
"29341970","<p>Try with the following code:</p>

<pre><code>SimpleDateFormat sdf = new SimpleDateFormat(""MMM_dd_yyyy"");
sdf.format(yourTimestamp);
</code></pre>
"
"1002203","<p>A JAR file can function as an executable, when you export your project as a JAR file in Eclipse (as Michael Borgwardt pointed out) you can specify what's the executable class, that meaning which one has the entry point [aka <code>public static void main(String[] args)</code>]</p>

<p>If the user installed the JRE he/she can double-click it and the application would be executed.</p>

<p><strong><em>EDIT:</em></strong> For a detailed explanation of how this works, see the <a href=""http://stackoverflow.com/questions/804466/how-do-i-create-executable-java-program"">""How do I create executable Java program?""</a></p>
"
"736110","<p>this is the reverse: gives you the date of the monday of the week (in perl)</p>

<pre><code>use POSIX qw(mktime);
use Time::localtime;

sub monday_of_week {
    my $year=shift;
    my $week=shift;
    my $p_date=shift;

    my $seconds_1_jan=mktime(0,0,0,1,0,$year-1900,0,0,0);
    my $t1=localtime($seconds_1_jan);
    my $seconds_for_week;
    if (@$t1[6] &lt; 5) {
#first of january is a thursday (or below)
        $seconds_for_week=$seconds_1_jan+3600*24*(7*($week-1)-@$t1[6]+1);
    } else {
        $seconds_for_week=$seconds_1_jan+3600*24*(7*($week-1)-@$t1[6]+8);
    }
    my $wt=localtime($seconds_for_week);
    $$p_date=sprintf(""%02d/%02d/%04d"",@$wt[3],@$wt[4]+1,@$wt[5]+1900);
}
</code>

</pre>
"
"736224","<p>Yes it can but... You need to reference it as <code>&lt;form:input path=""name[index].key|value""/&gt;
</code>
e.g. </p>

<p><code>&lt;form:input path=""name[0].value""/&gt;</code> </p>
"
"10080844","<blockquote>
  <p>I'm currently using shared memory for IPC between Java and C++ apps,
  but looking for a more convenient alternative.</p>
  
  <p>Can someone advice better method, but with same performance speed?</p>
</blockquote>

<p>For simple shared memory you don't even  need a special library:</p>

<pre><code>class Main {
    private static class CustomThread extends Thread {
        public int x = 0;
        public void run() {
            x = 5;
        }
    }

    public static void main(String[] args) {

        CustomThread t = new CustomThread();
        t.start();

        System.out.println(t.x);
        System.out.println(t.x);
    }
}
</code></pre>

<p>The local variable x be accessed outside the thread and within, allowing you to use it to pass information in and out of the thread.</p>
"
"390722","<p>Generally, this indicates someone who isn't comfortable with the new-fashioned C++ style of declaring when initialized.  </p>

<p>Back in the C days, it wasn't considered good form to define auto variables in an inner scope; C++ eliminated the parser restriction, and Java extended that.</p>

<p>So you see code that has</p>

<pre><code>int q;
for(q=0;q&lt;MAX;q++){
    String s;
    int ix;
    // other stuff
    s = new String(""Hello, there!"");
    // do something with s
}
</code></pre>

<p>In the extreme case, all the declarations may be at the top of a function, and not in enclosed scopes like the <code>for</code> loop here.</p>

<p>IN general, though, the effect of this is to cause a String ctor to be called once, and the resulting String thrown away.  (The desire to avoid this is just what led Stroustrup to allow declarations anywhere in the code.)  So you are correct that it's unnecessary and bad style at best, and possibly actually bad.</p>
"
"10204317","<p>Incase you want to mimic what php function htmlspecialchars_decode does use php function get_html_translation_table() to dump the table and then use the java code like,</p>

<pre><code>static Map&lt;String,String&gt; html_specialchars_table = new Hashtable&lt;String,String&gt;();
static {
        html_specialchars_table.put(""&amp;lt;"",""&lt;"");
        html_specialchars_table.put(""&amp;gt;"",""&gt;"");
        html_specialchars_table.put(""&amp;amp;"",""&amp;"");
}
static String htmlspecialchars_decode_ENT_NOQUOTES(String s){
        Enumeration en = html_specialchars_table.keys();
        while(en.hasMoreElements()){
                String key = en.nextElement();
                String val = html_specialchars_table.get(key);
                s = s.replaceAll(key, val);
        }
        return s;
}
</code></pre>
"
"753767","<p>week number in perl (sorry, not object oriented, will certainly disgust some)</p>

<pre><code>use POSIX qw(mktime);
use Time::localtime;
use strict;

my $week;
my $year;
&amp;num_of_week(\$week,\$year);
printf ""this week: %d of year %s\n"",$week,$year;


sub num_of_week {
my $p_week=shift;

my $lt=localtime();
my $tz=0;
my $tNowSeconds=mktime(@$lt[0],@$lt[1],@$lt[2],@$lt[3],@$lt[4],@$lt[5],0,0,$tz);
my $week_day=@$lt[6];
my $thursday_offset=4-$week_day; #week num is the week num of the thursday
my $tThursdaySeconds = $tNowSeconds+$thursday_offset*3600*24; #
$lt=localtime($tThursdaySeconds); # recompute using thursday
my $seconds_1_jan=mktime(0,0,0,1,0,@$lt[5],0,0,0); # use year of thursday
my $week_num=1+($tThursdaySeconds-$seconds_1_jan)/(24*3600*7);

$$p_year=@$lt[5]+1900;
$$p_week=$week_num;
}
</code></pre>
"
"29422379","<p>Maybe didn't understood you well, but what about this:</p>

<p><code>for(int i=0; i &lt; numbers.length ; i++){
    if(numbers[i] != 0)
        sum = sum + numbers[i];
}</code></p>
"
"929769","<p>This is an exercise from the book Objects First With Java.It is as below.The pickDefaultResponse() generates a response using an ArrayList and getting an randomly generated integer and using it as the index of the ArrayList.<strong>This works But what I wanted to overcome was filling up two Lists</strong>.Here the HashMap instance responseMap as well as ArrayList instance defaultResponses both has to be filled up separately.</p>

<pre><code>import java.util.HashMap;
import java.util.HashSet;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Random;

/**
 * The responder class represents a response generator object.
 * It is used to generate an automatic response, based on specified input.
 * Input is presented to the responder as a set of words, and based on those
 * words the responder will generate a String that represents the response.
 *
 * Internally, the reponder uses a HashMap to associate words with response
 * strings and a list of default responses. If any of the input words is found
 * in the HashMap, the corresponding response is returned. If none of the input
 * words is recognized, one of the default responses is randomly chosen.
 * 
 * @version    1.0
 * @author     Michael Kolling and David J. Barnes
 */
public class Responder
{
    // Used to map key words to responses.
    private HashMap&lt;String, String&gt; responseMap;
    // Default responses to use if we don't recognise a word.
    private ArrayList&lt;String&gt; defaultResponses;
    private Random randomGenerator;

    /**
     * Construct a Responder
     */
    public Responder()
    {
        responseMap = new HashMap&lt;String, String&gt;();
        defaultResponses = new ArrayList&lt;String&gt;();
        fillResponseMap();
        fillDefaultResponses();
        randomGenerator = new Random();
    }

    /**
     * Generate a response from a given set of input words.
     * 
     * @param words  A set of words entered by the user
     * @return       A string that should be displayed as the response
     */
    public String generateResponse(HashSet&lt;String&gt; words)
    {
        Iterator&lt;String&gt; it = words.iterator();
        while(it.hasNext()) {
            String word = it.next();
            String response = responseMap.get(word);
            if(response != null) {
                return response;
            }
        }
        // If we get here, none of the words from the input line was recognized.
        // In this case we pick one of our default responses (what we say when
        // we cannot think of anything else to say...)
        return **pickDefaultResponse();**
    }

    /**
     * Enter all the known keywords and their associated responses
     * into our response map.
     */
    private void fillResponseMap()
    {
        responseMap.put(""crash"", 
                        ""Well, it never crashes on our system. It must have something\n"" +
                        ""to do with your system. Tell me more about your configuration."");
        responseMap.put(""crashes"", 
                        ""Well, it never crashes on our system. It must have something\n"" +
                        ""to do with your system. Tell me more about your configuration."");
        responseMap.put(""slow"", 
                        ""I think this has to do with your hardware. Upgrading your processor\n"" +
                        ""should solve all performance problems. Have you got a problem with\n"" +
                        ""our software?"");
        responseMap.put(""performance"", 
                        ""Performance was quite adequate in all our tests. Are you running\n"" +
                        ""any other processes in the background?"");
        responseMap.put(""bug"", 
                        ""Well, you know, all software has some bugs. But our software engineers\n"" +
                        ""are working very hard to fix them. Can you describe the problem a bit\n"" +
                        ""further?"");
        responseMap.put(""buggy"", 
                        ""Well, you know, all software has some bugs. But our software engineers\n"" +
                        ""are working very hard to fix them. Can you describe the problem a bit\n"" +
                        ""further?"");
        responseMap.put(""windows"", 
                        ""This is a known bug to do with the Windows operating system. Please\n"" +
                        ""report it to Microsoft. There is nothing we can do about this."");
        responseMap.put(""macintosh"", 
                        ""This is a known bug to do with the Mac operating system. Please\n"" +
                        ""report it to Apple. There is nothing we can do about this."");
        responseMap.put(""expensive"", 
                        ""The cost of our product is quite competitive. Have you looked around\n"" +
                        ""and really compared our features?"");
        responseMap.put(""installation"", 
                        ""The installation is really quite straight forward. We have tons of\n"" +
                        ""wizards that do all the work for you. Have you read the installation\n"" +
                        ""instructions?"");
        responseMap.put(""memory"", 
                        ""If you read the system requirements carefully, you will see that the\n"" +
                        ""specified memory requirements are 1.5 giga byte. You really should\n"" +
                        ""upgrade your memory. Anything else you want to know?"");
        responseMap.put(""linux"", 
                        ""We take Linux support very seriously. But there are some problems.\n"" +
                        ""Most have to do with incompatible glibc versions. Can you be a bit\n"" +
                        ""more precise?"");
        responseMap.put(""bluej"", 
                        ""Ahhh, BlueJ, yes. We tried to buy out those guys long ago, but\n"" +
                        ""they simply won't sell... Stubborn people they are. Nothing we can\n"" +
                        ""do about it, I'm afraid."");
    }

    /**
     * Build up a list of default responses from which we can pick one
     * if we don't know what else to say.
     */
    private void fillDefaultResponses()
    {
        defaultResponses.add(""That sounds odd. Could you describe that problem in more detail?"");
        defaultResponses.add(""No other customer has ever complained about this before. \n"" +
                             ""What is your system configuration?"");
        defaultResponses.add(""That sounds interesting. Tell me more..."");
        defaultResponses.add(""I need a bit more information on that."");
        defaultResponses.add(""Have you checked that you do not have a dll conflict?"");
        defaultResponses.add(""That is explained in the manual. Have you read the manual?"");
        defaultResponses.add(""Your description is a bit wishy-washy. Have you got an expert\n"" +
                             ""there with you who could describe this more precisely?"");
        defaultResponses.add(""That's not a bug, it's a feature!"");
        defaultResponses.add(""Could you elaborate on that?"");
    }

    /**
     * Randomly select and return one of the default responses.
     * @return     A random default response
     */
    private String **pickDefaultResponse()**
    {
        // Pick a random number for the index in the default response list.
        // The number will be between 0 (inclusive) and the size of the list (exclusive).
        int index = randomGenerator.nextInt(defaultResponses.size());
        return defaultResponses.get(index);
    }
}
</code></pre>
"
"20804670","<p>I developed my own algorithm to measure similarity. It gives reasonable comparisons with output between 0 and 1. Where 1 means equals and 0 means totally different.</p>

<pre><code>    public static float stringSimilarity(String string1, String  string2){

    //null check:
    if(string1==null || string2==null){
        return (float) 0.5;
    }


    float score = 0;//similarity between 0 y 1.

    ArrayList&lt;String&gt; charactersString1 = new  ArrayList&lt;String&gt;();
    ArrayList&lt;String&gt; charactersString2 = new  ArrayList&lt;String&gt;();

    for(int i=0 ; i &lt; string1.length() ; i++){
        String aCharacter = String.valueOf(string1.charAt(i));
        charactersString1.add(aCharacter); 
    }

    for(int i=0 ; i &lt; string2.length() ; i++){
        String aCharacter = String.valueOf(string2.charAt(i));
        charactersString2.add(aCharacter); 
    }

    //eliminate extraneous letters. 
    boolean differentSize = false;
    ArrayList&lt;String&gt; arrayLargo = new  ArrayList&lt;String&gt;();
    ArrayList&lt;String&gt; arrayCorto = new  ArrayList&lt;String&gt;();
    if(charactersString1.size() &lt; charactersString2.size()){
        arrayLargo = charactersString2;
        arrayCorto = charactersString1;
        differentSize = true;
    }else{
        if (charactersString2.size() &lt; charactersString1.size()) {
            arrayLargo = charactersString1;
            arrayCorto = charactersString2;
            differentSize = true;

        }else{//they are the same size: yeah easy!
            if (charactersString2.size() == charactersString1.size()) {
                for (int i=0 ; i &lt; charactersString1.size() ; i++) {

                    String elementoS1 = charactersString1.get(i);
                    String elementoS2 = charactersString2.get(i);

                    if (elementoS1.equalsIgnoreCase(elementoS2) ) {
                        score=score+1;
                    }else{//if the elements are different.
                        if (0&lt;i) {//if i-1 exists (ie not at the first letter).

                            String elementoS1Past = charactersString1.get(i-1);
                            String elementoS2Past = charactersString2.get(i-1);

                            if (elementoS1Past.equalsIgnoreCase(elementoS2) &amp;&amp; elementoS1.equalsIgnoreCase(elementoS2Past)) {
                                //switching letters, the score sould be increased by 1 (only 1 error
                                score = score+1;
                            }

                        }
                    }
                }
            }else{
                System.out.print(""logical error making the code in wordcorrector!"");
            }

            score = score/charactersString1.size();//normalize
        }
    }




    if (differentSize) {
        int indice=0;
        for (int i=0; i &lt; arrayCorto.size();i++) {
            String elementoS1 = arrayLargo.get(i);
            String elementoS2 = arrayCorto.get(i);

            if (elementoS1.equalsIgnoreCase(elementoS2)) {
                score=score+1;
            }else{//paila, dio cero
                boolean switched = false; //the error in the characters is initailized as it is not a switching error.
                if (i+1 &lt; arrayCorto.size()) {//if i-1 exists (ie not at the first letter).
                    String elementoS1Future = arrayLargo.get(i+1);
                    String elementoS2Future = arrayCorto.get(i+1);
                    if (elementoS1Future.equalsIgnoreCase(elementoS2)
                            &amp;&amp; elementoS1.equalsIgnoreCase(elementoS2Future)) {
                        //switching letters, the score sould be increased by 1 (only 1 error
                        score = score+1;
                        i=i+1;// so it doesnt remove the next character.
                        switched = true;//it is a switching error.
                    }
                }
                if (!switched) {
                    //Remove and Repeat (R&amp;R)
                    arrayLargo.remove(i);                       
                    indice = i;
                    i=i-1;//despues de esto no se puede volver a llamar al indice! por puede votar error
                }
            }
            if (arrayLargo.size() == arrayCorto.size()) {
                break;
            }
        }
        if (arrayLargo.size() == arrayCorto.size()) {//does conventional same size score detection.
            for (int i=indice; i &lt; charactersString1.size() &amp;&amp; i &lt; charactersString2.size() ; i++) {
                String elementoS1 = arrayLargo.get(i);
                String elementoS2 = arrayCorto.get(i);
                if (elementoS1.equalsIgnoreCase(elementoS2)) {
                    score=score+1;
                }else{//if the elements are different.
                    if (0&lt;i) {//if i-1 exists (ie not at the first letter).
                        String elementoS1Past = charactersString1.get(i-1);
                        String elementoS2Past = charactersString2.get(i-1);
                        if (elementoS1Past.equalsIgnoreCase(elementoS2)
                                &amp;&amp; elementoS1.equalsIgnoreCase(elementoS2Past)) {
                            //switching letters, the score sould be increased by 1 (only 1 error
                            score = score+1;
                        }

                    }
                }
            }
        }
        int normalize;
        if (charactersString2.size() &lt;= charactersString1.size()) {
            normalize = charactersString1.size();
        }else{
            normalize = charactersString2.size();
        }
        score = score/normalize;//normalize
    }
    return score;
}
</code></pre>
"
"10696096","<pre><code>static String removeOccurences(String a, String b)
{
    StringBuilder s2 = new StringBuilder(a);

    for(int i=0;i&lt;b.length();i++){
        char ch = b.charAt(i);  
        System.out.println(ch+""  first index""+a.indexOf(ch));

        int lastind = a.lastIndexOf(ch);

    for(int k=new String(s2).indexOf(ch);k &gt; 0;k=new String(s2).indexOf(ch)){
            if(s2.charAt(k) == ch){
                s2.deleteCharAt(k);
        System.out.println(""val of s2 :             ""+s2.toString());
            }
        }
      }

    System.out.println(s1.toString());

    return (s1.toString());
}
</code></pre>
"
"932952","<p>The short answer is that there is no way to specify the type parameter. That is because the Class object (say, for example, List.class, not just Class.class) doesn't understand that generic type parameter - it is erased during compilation.</p>

<p>My IDE, Intellij IDEA, gives the same warning. It is the IDE being too aggressive. You can suppress the warning with IDEA (it generates a @SuppressWarnings annotation), but code to work around it (like Robert Munteau's clever workaround) is really introducing some nasty design just to avoid an IDE message that is really not correct - the JDK does not view this case as an erasure.</p>

<p>EDIT: Given the downvote, I should at least justify my thinking here.</p>

<p>Think about the following:</p>

<pre><code> List.class
</code></pre>

<p>That represents a class object of type:</p>

<pre><code> Class&lt;List&gt;
</code></pre>

<p>It cannot represent a type of:</p>

<pre><code> Class&lt;List&lt;?&gt;&gt;
</code></pre>

<p>because it isn't known if the given list will actually have a generic parameter or what it will be. The List.class object has to represent all types, as far as parameterizing Class.</p>

<p>The evidence that the JDK does not view this as an unsafe operation is that if you compile the code, it gives you no warning.</p>

<p>So the IDE is just being overly sensitive. Although the questioner didn't specify which IDE he uses, I see this behavior with Intellij IDEA 8.1.2.</p>
"
"11250193","<p>There is exactly <strong>no difference</strong> between the two, though according to the Java standards, the convention for making an array is:</p>

<pre><code>String[] args
</code></pre>

<p>rather than,</p>

<pre><code>String args[]
</code></pre>

<p>and equally valid form using the ellipses as well (only for infinite array):</p>

<pre><code>String...args
</code></pre>

<p>A brief overview of the <strong>psvm()</strong> in Java:</p>

<p><strong>public</strong>: the method can be accessed anywhere within the class or outside the class or even outside the package.</p>

<p><strong>static</strong>: the method is shared by all the objects and it does not need any objects to be created to call this method.</p>

<p><strong>void</strong>: this particular main() method cannot return any value so here we have to use void; it is the syntax which need to be followed.</p>

<p><strong>main()</strong>: this is the entry point of the code or the class you execute. In most cases, this is also the exit point of the code.</p>

<p><strong>String[]args</strong>: these are <strong>run-time commands line arguments</strong>, whether you pass them or not you have to mention them in the arguments.</p>
"
"779892","<p>What's the difference between a <code>""literal""</code> and a <code>LITERAL</code>?</p>

<p>Two characters: <code>""</code> and <code>""</code>.</p>

<p>Can't see why bother inventing a complex set of <code>LITERAL</code>s when <code>""literal""</code> works just as well.</p>
"
"11395769","<p>To detect an URL you just need this:</p>

<pre><code>if (yourtextview.getText().toString().contains(""www"") || yourtextview.getText().toString().contains(""http://""){ your code here if contains URL;}
</code></pre>
"
"944319","<p>Looks like you first need to create a class that <code>extends java.lang.Thread</code> so you can have a constructor that takes 2 parameters.</p>

<p>You also presumably need to override <code>public void run()</code> in your Thread subclass so it knows what to do with the 2 job objects.</p>
"
"21380694","<p>There are 2 major reasons why virtual by default is so much better than non-virtual.</p>

<ol>
<li>The main principles about usefulness of OOP is <strong>Liskov substitution principle</strong>, <strong>polymorphism</strong> and <strong>late binding</strong> . I use strategy pattern all the time and for that I want my methods to be virtual. If you are fan of Open/closed principle you should like Java philosophy more. You should be able to change behavior without changing your source code. You can do that with dependency injection and virtual methods.</li>
<li>If you call a non-virtual method then you want to know from your code which class method you are calling. The flaw of .net is that you cannot know that from your code.</li>
<li>Another benefit of virtual-only method is that it is much easier to test your code because you can make Mocks of your (or 3rd party) classes. Testing with Mockito is really easy in Java.</li>
</ol>

<h2>Example</h2>

<p>In Java if you define ClassB as</p>

<pre><code>public class ClassB extends ClassA {
    @Override 
    public void run() {
    }
}
</code></pre>

<p>and object</p>

<pre><code>ClassA obj=new ClassB();
</code></pre>

<p>If you call obj.run() how will you know if that code is following the rules of polymorphic open/close principle or it will code method related to ClassA? In Java you will know that there is always polymorphism. It is easier to make mocks and it is easier to extend classes and follow Liskov substitution principle.</p>

<p>On the other hand static methods are bounded to a class so if you want to call a method that is related to ClassA you can define that method like this:</p>

<pre><code>public static run(ClassA obj)
</code></pre>

<p>and you can call it with</p>

<pre><code>ClassB obj=new ClassB();
ClassA.run(obj);
</code></pre>

<p>and from the code you will know that the method you are calling is defined in ClassA and not in ClassB. Also in that case you will not have the overhead of virtual methods. (Note that JIT will also reduce the overhead of virtual methods in many cases).</p>

<p>For C#, if the reason to make the method non-virtual is to be able to define it in a subclass but not involve polymorphism, you're probably subclassing for no real reason.</p>

<p>If it's for design, I'd suggest making the class sealed (final in java) instead of individual methods if possible.</p>

<p>Jon Skeet said that in C# the classes should be sealed by default because methods are non-virtual by default as well. Joshua Bloch said that you should design for inheritance or forbid it (make classes final). C# designers chose a hybrid approach which is non-consistent.</p>
"
"21473673","<p>This works for me:</p>

<blockquote>
  <p>netbeans_default_options=""-J-client -J-Xverify:none -J-Xmx1024m -J-Xss2m -J-Xms256m -J-XX:PermSize=32m -J-Dnetbeans.logger.console=true -J-ea -J-Dapple.laf.useScreenMenuBar=true -J-Dapple.awt.graphics.UseQuartz=true -J-Dsun.java2d.noddraw=true -J-Dsun.java2d.dpiaware=true -J-Dsun.zip.disableMemoryMapping=true -J-Dplugin.manager.check.updates=false -J-Dnetbeans.extbrowser.manual_chrome_plugin_install=yes""</p>
</blockquote>

<p>Settings in the <code>etc/netbeans.conf</code>.</p>
"
"21534079","<p>use the below code please :
    <pre>
    Properties p = new Properties(); 
    StringBuffer path = new StringBuffer(""com/al/common/email/templates/"");
    path.append(""foo.properties"");
    InputStream fs = getClass().getClassLoader()
                                    .getResourceAsStream(path.toString());</p>

<code>if(fs == null){
     System.err.println(""Unable to load the properties file"");
  }
else{
   try{
       p.load(fs);
     } 
catch (IOException e) {
        e.printStackTrace();
      }
   }
</code></pre>
"
"421401","<p>I have been dealing with something similar recently. If you are running Java 5, perhaps you could consider using NIO file locks in conjunction with a ReentrantReadWriteLock? Make sure all code referencing the FileChannel object ALSO references the ReentrantReadWriteLock. This way the NIO locks it at a per-VM level while the reentrant lock locks it at a per-thread level.</p>

<pre><code>FileLock fileLock = filechannel.lock(position, size, shared);
reentrantReadWriteLock.lock();

// do stuff

fileLock.release();
reentrantReadWriteLock.unlock();
</code></pre>

<p>Of course, some exception handling would be required.</p>
"
"29572824","<p>Well Java use reference semantics. Thus, you can think of ""arr"" parameter as a pointer to an array. Remember it's just a pointer, so you can copy the contents of arr2 to arr1 one by one and it should work fine.</p>

<p>instead of:
    arr = arr2</p>

<p>try:</p>

<pre><code>for (int i=0; i&lt;arr.size(); ++i) {
    arr[i] = arr2[i];
}
</code></pre>
"
"1034747","<p>Try Regex!</p>

<pre><code>java.lang.String

boolean matches(String regex)
</code></pre>
"
"12468499","<p>Every enum has name(), which gives a string with the name of enum member.</p>

<p>Given <code>enum Suit{Heart, Spade, Club, Diamond}</code>, <code>Suit.Heart.name()</code> will give <code>Heart</code>.</p>

<p>Every enum has a <code>valueOf()</code> method, which takes an enum type and a string, to perform the reverse operation:</p>

<p><code>Enum.valueOf(Suit.class, ""Heart"")</code> returns <code>Suit.Heart</code>.</p>

<p>Why anyone would use ordinals is beyond me. It may be nanoseconds faster, but it is not safe, if the enum members change, as another developer may not be aware some code is relying on ordinal values (especially in the JSP page cited in the question, network and database overhead completely dominates the time, not using an integer over a string).</p>
"
"23630046","<p>For those readers who arrive here like me years after the question was asked, I have a more general solution for this question.</p>

<pre><code>/**
 * Checks, if the string represents a number.
 *
 * @param string the string
 * @return true, if the string is a number
 */
public static boolean isANumber(final String string) {
    if (string != null) {
        final int length = string.length();
        if (length != 0) {
            int i = 0;
            if (string.charAt(0) == '-') {
                if (length == 1) {
                    return false;
                }
                i++;
            }
            for (; i &lt; length; i++) {
                final char c = string.charAt(i);
                if ((c &lt;= PERIOD) || ((c &gt;= COLON))) {
                    final String strC = Character.toString(c).toUpperCase();
                    final boolean isExponent = strC.equals(""E"");
                    final boolean isPeriod = (c == PERIOD);
                    final boolean isPlus = (c == PLUS);

                    if (!isExponent &amp;&amp; !isPeriod &amp;&amp; !isPlus) {
                        return false;
                    }
                }
            }
            return true;
        }
    }
    return false;
}
</code></pre>
"
"1068486","<p><code>&lt;hello&gt;</code> what are we thinking here?</p>

<pre><code>public static void main(String[] args) {
	// TODO Auto-generated method stub
	String str = readIndex();
	String comp[] = str.split(""}"");

	StringBuffer sb = new StringBuffer();
	for (String s : comp) {
		sb.append(s);
		sb.append(""}\n"");
	}
	System.out.println (sb.toString());
}
</code></pre>

<p>As a modeling notation, the influence of the OMT notation dominates (e. g., using rectangles for classes and objects). Though the Booch ""cloud"" notation was dropped, the Booch capability to specify lower-level design detail was embraced. The use case notation from Objectory and the <a href=""http://en.wikipedia.org/wiki/Unified%5FModeling%5FLanguage"" rel=""nofollow"">component notation from Booch</a> were integrated with the rest of the notation, but the semantic integration was relatively weak in UML 1.1, and was not really fixed until the UML 2.0 major revision.</p>
"
"24849939","<p>Got the same error but probably for the other (yet unknown) reason.</p>

<p>I was casting exported object to the type of my remote interface and then while binding to name I was getting NoSuchObjectException. Removing casting fixed the problem.</p>

<p>Briefly:</p>

<pre><code>public interface MyRemoteInterface extedns Remote {
    ...
}

public class MyRemoteObject implements MyRemoteInterface {
    ...
}

public static MyRemoteObject obj = new MyRemoteObject();

public static void main(String[] args) {
    //removing cast to MyRemoteInterface fixes the problem
    this.obj = UnicastRemoteObject.exportObject((MyRemoteInterface) this.obj, 0);

    //unless the above cast is removed, this throws NoSuchObjectException occasionally
    LocateRegisry.getRegistry(""127.0.0.1"", 1099).bind(""name"", this.obj);
}
</code></pre>
"
"1052285","<p>I am not sure what's the purpose of SlotValue in your program but it seems that you are not using their full power. You can invoke methods on enum instances or query their state. Thus you translate a switch on enum value into method invocation/state querying, as show below.</p>

<p>Side note: Once you get used to this kind of thinking (which is quite different from the thinking induced by C's enums) you realize that there's much less need for ""magic numbers"" in your code. Instead of specifying an value and then giving it some meaning you just specify the enum constant and invoke methods on it. Specifcially, my feeling is that there's no real need for associating each of your enum instances with a value (empty is 0, start is 1, etc.). </p>

<p>Anyway, here's the code:</p>

<pre><code>public class MazeNode
{
   public enum SlotValue
   {
       empty(0),
       start(1),
       wall(2),
       visited(3),
       end(9);

       private int m_representation;

       SlotValue(int representation)
       {
           m_representation = representation;
       }

       public int getRepresentation()
       {
           return m_representation;
       }

       private SlotValue next = null;

       static
       {
          empty.next = start;
          end.next = end;
       }
   }


   private SlotValue m_mazeNodeSlotValue;

   public MazeNode(SlotValue s)
   {
       m_mazeNodeSlotValue = s;
   }

   public MazeNode(int s)
   {
       m_mazeNodeSlotValue = SlotValue.values()[s].next;
   }

   public SlotValue getSlotValue()
   {
       return m_mazeNodeSlotValue;
   }
}
</code></pre>
"
"1012856","<p>Perhaps this would work:</p>

<pre><code>Process process = Runtime.getRuntime().exec(""su jim &amp;&amp; ls ~bob"");

OutputStream standardInput = process.getOutputStream();
Writer standardInputWriter = new OutputStreamWriter(standardInput);
standardInputWriter.write(""password\n"");
standardInputWriter.close();
</code></pre>
"
"1074112","<pre><code>Integer[] arr1 = {1,2,3};  
List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();  
list = Arrays.asList(arr1);  
</code></pre>

<p>Lists can be formed of only Objects and not primitives.</p>

<p>if you have an int array try converting it to Integer array and further to a list</p>

<p>[code format edited]</p>
"
"15714884","<p>Probably the SIMPLEST method is this:</p>

<pre><code>setBackground(Color.CYAN);
</code></pre>

<p>You must extend JFrame in the class before doing this!</p>
"
"1012901","<p>I'm not sure this code:</p>

<pre><code>Process p = Runtime.getRuntime().exec(""su jim &amp;&amp; ls ~bob"");
</code></pre>

<p>will be executed in a shell, needed to evaluate the &amp;&amp;, that is a shell command (/bin/sh). You should pass the command ""ls ~bob"" via a command line swith of su. Something like:</p>

<pre><code>su jim -c 'ls ~bob'
</code></pre>
"
"829848","<p>Connect to your database using your appropriate db client (Query Browser, MS SQL Managment Studio, etc) to verify whether or not the tables do, in fact, exist.</p>

<p>You may also want to insert a breakpoint in your code so that you can see exactly what the database looks like at the moment before it's throwing this error.</p>

<p>Try setting the hibernate.hbm2ddl.auto value to ""create"" as below, and also change the setting so that it prints out the SQL so you can see what it's attempting:</p>

<pre><code>&lt;props&gt;
  &lt;!-- some possible values: create, create-drop, update --&gt;
  &lt;prop key=""hibernate.hbm2ddl.auto""&gt;update&lt;/prop&gt;
  &lt;prop key=""hibernate.show_sql""&gt;true&lt;/prop&gt;
  ....
&lt;props&gt;
</code></pre>

<p>Let me know what you see in your db.</p>
"
"26715369","<p>public class Account </p>

<p>{</p>

<pre><code>private static final Exception InsufficientFundsException = null;

private int  accountNumber;
private double availableBalance;
private int pin;
public Account(int account, int pin,double amount )
{

    this.accountNumber = account;
    this.pin = pin;
    this.availableBalance = amount;
}

public void credit(double amount)
{
    this.availableBalance= this.availableBalance+amount;
}

public void debit(double amount) throws Exception
{
    if(this.availableBalance&gt;=amount)
    {
    this.availableBalance= this.availableBalance-amount;
    }
    else
    { 
        throw new InsufficientFundsException();
    }

}

public int getAccountNumber() 
{
    return accountNumber;
}   

public double getAvailableBalance()
{
    return availableBalance;
}
public String toString()
{
    return ""Account=""+accountNumber+""pin=""+pin+""balance""+availableBalance;
}
public boolean validatePIN(int pin)
{
    if(this.pin==pin)
        return true;
    else return false;  
</code></pre>

<p>}
}</p>
"
"29714917","<p><code>(test1 = false || test1 == false)</code> returns false, because both of them are false.<code>(test1 = false || test1 == true)</code> this is true because one of them is true</p>
"
"514519","<p>Reference typed arguments are passed as references to objects themselves (not references  to other <em>variables</em> that refer to objects). You can call methods on the object that has been passed. However, in your code sample:</p>

<pre><code>public static void thisDoesntWork(String foo){
    foo = ""howdy"";
}
</code></pre>

<p>you are only storing a reference to the string <code>""howdy""</code> in a variable that is local to the method. That local variable (<code>foo</code>) was initialized to the value of the caller's <code>foo</code> when the method was called, but has no reference to the caller's variable itself. After initialization:</p>

<pre><code>caller     data     method
------    ------    ------
(foo) --&gt;   """"   &lt;-- (foo)
</code></pre>

<p>After the assignment in your method:</p>

<pre><code>caller     data     method
------    ------    ------
(foo) --&gt;   """"
          ""hello"" &lt;-- (foo)
</code></pre>

<p>You have another issues there: <code>String</code> instances are immutable (by design, for security) so you can't modify its value.</p>

<p>If you really want your method to provide an initial value for your string (or at <em>any</em> time in its life, for that matter), then have your method <em>return</em> a <code>String</code> value which you assign to the caller's variable at the point of the call. Something like this, for example:</p>

<pre><code>String foo = thisWorks();
System.out.println(foo);//this prints the value assigned to foo in initialization 

public static String thisWorks(){
    return ""howdy"";
}
</code></pre>
"
"1084394","<pre><code>MIDlet.notifyPaused()
</code></pre>
"
"838641","<p>For windows it's stored in the registry at:</p>

<pre><code>""HKEY_CURRENT_USER\\Control Panel\\International""
</code></pre>

<p>so you can use something like this</p>

<pre><code>private void setDelimiterProperties(String delimiter) {
    Properties p = new Properties();
    String key = ""HKEY_CURRENT_USER\\Control Panel\\International\\sList"";
    p.setProperty(key, delimiter);
}
</code></pre>
"
"16998401","<p>My answer will use Mcherm's answer.
Before you convert the string into bytes you can try</p>

<pre><code>string=StringEscapeUtils.unescapeJava(string);
</code></pre>

<p>You may do it multiple times to achieve desired result.
<a href=""http://commons.apache.org/proper/commons-lang/javadocs/api-3.1/org/apache/commons/lang3/StringEscapeUtils.html"" rel=""nofollow"">http://commons.apache.org/proper/commons-lang/javadocs/api-3.1/org/apache/commons/lang3/StringEscapeUtils.html</a></p>
"
"17381820","<p>I like to share my way of supporting user details on freemarker page.
Everything is very simple and working perfectly!</p>

<p>You just have to place Authentication rerequest on <code>default-target-url</code> (page after form-login)
This is my Controler method for that page:</p>

<pre><code>@RequestMapping(value = ""/monitoring"", method = RequestMethod.GET)
public ModelAndView getMonitoringPage(Model model, final HttpServletRequest request) {
    showRequestLog(""monitoring"");


    Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
    String userName = authentication.getName();
    //create a new session
    HttpSession session = request.getSession(true);
    session.setAttribute(""username"", userName);

    return new ModelAndView(catalogPath + ""monitoring"");
}
</code></pre>

<p>And this is my ftl code:</p>

<pre><code>&lt;@security.authorize ifAnyGranted=""ROLE_ADMIN, ROLE_USER""&gt;
&lt;p style=""padding-right: 20px;""&gt;Logged in as ${username!""Anonymous"" }&lt;/p&gt;
&lt;/@security.authorize&gt; 
</code></pre>

<p>And that's it, username will appear on every page after authorisation.</p>
"
"29818684","<p>The inner while-loop is then one you're stuck in.</p>

<p>On the one hand, you need an invalid mark to exit,
but on the other, the program rejects invalid marks and keeps on asking until you enter a valid mark.</p>

<p>Result - you're stuck.</p>

<p>Solution:
Change the inner <code>while</code> to an <code>if</code>, and place the average calculation code and a <code>System.exit()</code> in the <code>if</code> block.</p>
"
"18220374","<pre><code>    frame.getContentPane().setBackground(Color.white);
</code></pre>
"
"1052421","<p>Basically in order to have a properly cloneable object is enough to have a public clone() method implemented in that class.</p>

<p>The Cloneable interface is a <code>marker</code> interface used to signal to the VM that it's safe to implement the default protected clone() method as a field by field copy. </p>

<p>In order to properly implement the clone method for a class you should do declare a public method clone like this().</p>

<pre><code>public Object clone() {
   return super.clone();
}
</code></pre>

<p>A good working implementationk will create a new object and properly assign the fields as the business logic reaquires:</p>

<pre><code>public Object clone() {
   CurrentClass newObject = new CurrentClass();

   newObject.field1 = this.field1; // for simple types: int, long, etc
   newObject.referenceField = this.referenceField.clone(); // for agregate objects or references.
   return newObject;
}
</code></pre>

<p>The conclusion:
 declare a public clone method.
 If you want to have the default implementation as a field by field copy call super and mark the class as Cloneable
 If you want only custom cloning you can ignore the Cloneable mark.</p>
"
"28821405","<p>I have made a class earlier for an Android Application you might find it useful </p>

<pre><code>package com.amit.parking.parking.Analytics;

import android.widget.EditText;

import java.util.ArrayList;

/**
 * Created by Android Developer on 3/1/2015.
 */
public class EmailValidator {

private static String email;
private static int count = 0;


private static final Character [] alphabeticSmall = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
private static final Character [] alphabeticLarge = {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'};
private static final Character [] forbiddenSymbols = {
        '\'','^','[',',','!','#','$','%','&amp;','*','+','/','=',
        '?','`','{','|','}','~',']','(',')',':','\\',' ','÷'
        ,'×','؛','&lt;','&gt;','|',';','""','₩','¥','£','€','`','°'
        ,'•','○','●','□','■','♤','♡','♢','♧','☆','¤','《',
        '》','¡','¿'
};

private String[] validEnds = {""ac"", ""ad"", ""ae"", ""aero"", ""af"", ""ag"", ""ai"",
        ""al"", ""am"", ""an"", ""ao"", ""aq"", ""ar"", ""arpa"", ""as"", ""asia"", ""at"", ""au"",
        ""aw"", ""ax"", ""az"", ""ba"", ""bb"", ""bd"", ""be"", ""bf"", ""bg"", ""bh"", ""bi"", ""biz"",
        ""bj"", ""bm"", ""bn"", ""bo"", ""br"", ""bs"", ""bt"", ""bv"", ""bw"", ""by"", ""bz"", ""ca"",
        ""cat"", ""cc"", ""cd"", ""cf"", ""cg"", ""ch"", ""ci"", ""ck"", ""cl"", ""cm"", ""cn"", ""co"",
        ""com"", ""coop"", ""cr"", ""cu"", ""cv"", ""cx"", ""cy"", ""cz"", ""de"", ""dj"", ""dk"",
        ""dm"", ""do"", ""dz"", ""ec"", ""edu"", ""ee"", ""eg"", ""er"", ""es"", ""et"", ""eu"", ""fi"",
        ""fj"", ""fk"", ""fm"", ""fo"", ""fr"", ""ga"", ""gb"", ""gd"", ""ge"", ""gf"", ""gg"", ""gh"",
        ""gi"", ""gl"", ""gm"", ""gn"", ""gov"", ""gp"", ""gq"", ""gr"", ""gs"", ""gt"", ""gu"", ""gw"",
        ""gy"", ""hk"", ""hm"", ""hn"", ""hr"", ""ht"", ""hu"", ""id"", ""ie"", ""il"", ""im"", ""in"",
        ""info"", ""int"", ""io"", ""iq"", ""ir"", ""is"", ""it"", ""je"", ""jm"", ""jo"", ""jobs"",
        ""jp"", ""ke"", ""kg"", ""kh"", ""ki"", ""km"", ""kn"", ""kp"", ""kr"", ""kw"", ""ky"", ""kz"",
        ""la"", ""lb"", ""lc"", ""li"", ""lk"", ""lr"", ""ls"", ""lt"", ""lu"", ""lv"", ""ly"", ""ma"",
        ""mc"", ""md"", ""me"", ""mg"", ""mh"", ""mil"", ""mk"", ""ml"", ""mm"", ""mn"", ""mo"",
        ""mobi"", ""mp"", ""mq"", ""mr"", ""ms"", ""mt"", ""mu"", ""museum"", ""mv"", ""mw"", ""mx"",
        ""my"", ""mz"", ""na"", ""name"", ""nc"", ""ne"", ""net"", ""nf"", ""ng"", ""ni"", ""nl"",
        ""no"", ""np"", ""nr"", ""nu"", ""nz"", ""om"", ""org"", ""pa"", ""pe"", ""pf"", ""pg"", ""ph"",
        ""pk"", ""pl"", ""pm"", ""pn"", ""pr"", ""pro"", ""ps"", ""pt"", ""pw"", ""py"", ""qa"", ""re"",
        ""ro"", ""rs"", ""ru"", ""rw"", ""sa"", ""sb"", ""sc"", ""sd"", ""se"", ""sg"", ""sh"", ""si"",
        ""sj"", ""sk"", ""sl"", ""sm"", ""sn"", ""so"", ""sr"", ""st"", ""su"", ""sv"", ""sy"", ""sz"",
        ""tc"", ""td"", ""tel"", ""tf"", ""tg"", ""th"", ""tj"", ""tk"", ""tl"", ""tm"", ""tn"", ""to"",
        ""tp"", ""tr"", ""travel"", ""tt"", ""tv"", ""tw"", ""tz"", ""ua"", ""ug"", ""uk"", ""um"",
        ""us"", ""uy"", ""uz"", ""va"", ""vc"", ""ve"", ""vg"", ""vi"", ""vn"", ""vu"", ""wf"", ""ws"",
        ""ye"", ""yt"", ""yu"", ""za"", ""zm"", ""zw""};

private static ArrayList&lt;Character&gt; correctSmallLetters;
private static ArrayList&lt;Character&gt; correctLargeLetters;
private static ArrayList&lt;Character&gt; forbiddenSymbolsArray;

private static CharSequence cleanText = """";
private static CharSequence [] cleanTextToArray;

private static int dynamicArraySize = 1;
private static Character [] dynamicArray;

public EmailValidator(String email){
    this.email = email;
    correctSmallLetters = new ArrayList&lt;&gt;();
    correctLargeLetters = new ArrayList&lt;&gt;();
    forbiddenSymbolsArray = new ArrayList&lt;&gt;();
}

public static boolean isEmailCharactersValidated(){
        if(equalsGetSmallLetters() || equalsGetLargeLetters()){
            return true;
        }
        return false;
}

private static boolean equalsGetSmallLetters() {
    count = 0;
    while(count &lt; email.length()) {
        for (int smallLetterIndex = 0; smallLetterIndex &lt; alphabeticSmall.length; smallLetterIndex++) {

            if(email.charAt(count) == alphabeticSmall[smallLetterIndex]){
                correctSmallLetters.add(email.charAt(count));
            }
        }
        count++;
    }
    count = 0;
    return correctSmallLetters.size() &gt; 0;
}

private static boolean equalsGetLargeLetters() {
    count = 0;
    while(count &lt; email.length()) {
        for (int largeLetterIndex = 0; largeLetterIndex &lt; alphabeticLarge.length; largeLetterIndex++) {

            if(email.charAt(count) == alphabeticLarge[largeLetterIndex]){
                correctLargeLetters.add(email.charAt(count));
            }
        }
        count++;
    }
    count = 0;
    return correctLargeLetters.size() &gt; 0;
}

public static boolean isEmailHasForbiddenSymbols(){
    count = 0;
    while(count &lt; email.length()) {
        for (int symbolIndex = 0; symbolIndex &lt; forbiddenSymbols.length; symbolIndex++) {

            if(email.charAt(count) == forbiddenSymbols[symbolIndex]){
                forbiddenSymbolsArray.add(email.charAt(count));
                //addToTheDynamicArray(email.charAt(count));
            }

        }
        count++;
    }
    count = 0;

    return forbiddenSymbolsArray.size() &gt; 0;
}

/* THIS IS JUST A TEST METHOD... */
private static void addToTheDynamicArray(Character c){

    dynamicArray = new Character[dynamicArraySize];

    if (dynamicArray.length == 1) {
        dynamicArray[dynamicArraySize -1] = c;
        dynamicArraySize++;
    } else {
        dynamicArray = new Character[dynamicArraySize];
        dynamicArray[dynamicArraySize -1] = c;
        dynamicArraySize++;
    }
}

public static void removeForbiddenSymbols(EditText etEmail){

    try {
        count = 0;
        while (count &lt; etEmail.getText().toString().length()) {
            for (int symbolIndex = 0; symbolIndex &lt; forbiddenSymbols.length; symbolIndex++) {

                if (etEmail.getText().toString().charAt(count) == forbiddenSymbols[symbolIndex]) {
                    etEmail.setText(etEmail.getText().toString().replace(String.valueOf(etEmail.getText().toString().charAt(count)), """"));
                }
            }
            count++;
        }
        count = 0;
    }catch (Exception ignored) { }
}

public boolean isEmailCorrect() {return checkForAts() &amp;&amp; checkForDots();}

private boolean checkForAts() {
    int atsCount = 0;
    ArrayList&lt;Character&gt; ats = new ArrayList&lt;&gt;();

    while(atsCount &lt; email.length()){
        if(email.charAt(atsCount) == '@'){
            ats.add(email.charAt(atsCount));
        }
        atsCount++;
    }

    return ats.size() == 1;
}

public boolean isEmailHasValidEnd(){
    int validEndsCount = 0;
    int emailCharsCount = 0;
    while (emailCharsCount &lt; email.length()){

        while(validEndsCount &lt; validEnds.length){


            if(email.endsWith(validEnds[validEndsCount]))
                return true;

            validEndsCount++;
        }

        emailCharsCount++;
    }


    return false;
}

private boolean checkForDots() {
    int dotsCount = 0;
    ArrayList&lt;Character&gt; dots = new ArrayList&lt;&gt;();

    while(dotsCount &lt; email.length()){
        if(email.charAt(dotsCount) == '.'){
            dots.add(email.charAt(dotsCount));
        }
        dotsCount++;
    }

    return dots.size() == 1;
}

public boolean isValidEmailAddress(String email) {
    String ePattern = ""^[a-zA-Z0-9.!#$%&amp;'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$"";
    java.util.regex.Pattern p = java.util.regex.Pattern.compile(ePattern);
    java.util.regex.Matcher m = p.matcher(email);
    return m.matches();
}
</code></pre>

<p>}</p>
"
"19125208","<pre><code>package in.javadomain;

public class JavaSplit {

    public static void main(String[] args) {
        String input = ""chennai\nvellore\ncoimbatore\nbangalore\narcot"";
        System.out.println(""Before split:\n"");
        System.out.println(input);

        String[] inputSplitNewLine =input.split(""\\n"");
        System.out.println(""\n After split:\n"");
        for(int i=0;i&lt;inputSplitNewLine.length;i++){
            System.out.println(inputSplitNewLine[i]);
        }
    }

}
</code></pre>
"
"29071382","<p>You may try this:</p>

<pre><code>tadData.replaceAll(""\\&lt;!--.*\\--&gt;"", """");
</code></pre>

<p>If you want to match the word between the tags then use this regex</p>

<pre><code>\&lt;!--(.*?)\--&gt;
</code></pre>

<p><strong>EDIT:-</strong></p>

<p>If you want to keep the tags then simply replace the <code>""""</code> with the <code>""&lt;!-- --&gt;""</code> ie., </p>

<pre><code>tadData.replaceAll(""\\&lt;!--.*\\--&gt;"", ""&lt;!-- --&gt;"");
</code></pre>

<p>or your own code only with a small change</p>

<pre><code>tadData.replaceAll(""\\&lt;!--.*?\\--&gt;"", ""&lt;!-- --&gt;"");
</code></pre>
"
"29071391","<p>try this:</p>

<pre><code>tadData.replaceAll(""\\&lt;!--.*\\--&gt;"", """");
</code></pre>
"
"19960327","<p>try this</p>

<pre><code>int column = 3;
double result = array[][column];
</code></pre>

<p>Good Luck</p>
"
"558825","<p>Try setting both of <strong>lp</strong>'s LayoutParams to be <code>WRAP_CONTENT</code>.</p>

<p>Setting <strong>mlp</strong> to be <code>WRAP_CONTENT</code>, <code>WRAP_CONTENT</code> ensures that your TextView(s) <strong>t</strong> are just wide and tall enough enough to hold ""Hello"" or whatever String you put in them.  I think <strong>l</strong> may not be aware of how wide your <strong>t</strong>'s are.  The <code>setSingleLine(true)</code> may be contributing too.</p>
"
"29913954","<p>The <a href=""http://docs.oracle.com/javase/8/docs/api/java/lang/Byte.html#decode-java.lang.String-"" rel=""nofollow"">Byte.decode() javadoc</a> specifies that hex numbers should be on the form <code>""0x4C""</code>. So, to get rid of the exception, try this:</p>

<pre><code>String hex = String.format(""0x%02X"", (int) array[i]);
</code></pre>

<p>There may also be a simpler way to make the conversion, because the String class has a method that converts a string to bytes :</p>

<pre><code>bytes = s.getBytes();
</code></pre>

<p>Or, if you want a raw conversion to a byte array:</p>

<pre><code>int i, len = s.length();
byte bytes[] = new byte[len];
String retval = name;
for (i = 0; i &lt; len; i++) {
    bytes[i] = (byte) name.charAt(i);
}
</code></pre>
"
"20493143","<p>Easily change without any headche 
Convert any object array to string array
        Object drivex[] = {1,2};</p>

<pre><code>    for(int i=0; i&lt;drive.length ; i++)
        {
            Str[i]= drivex[i].toString();
            System.out.println(Str[i]); 
        }
</code></pre>
"
"21553287","<p>You can with a classloader and the class name, eventually some parameters.</p>

<pre><code>final ClassLoader classLoader = ...
final Class&lt;?&gt; aClass = classLoader.loadClass(""java.lang.Integer"");
final Constructor&lt;?&gt; constructor = aClass.getConstructor(int.class);
final Object o = constructor.newInstance(123);
System.out.println(""o = "" + o);
</code></pre>
"
"29260321","<p>eg:</p>

<pre><code>public Animal
{
String name=""Doggy"";
}

public class Dog
{
public static void main(String[] args)
{
Animal a=new Animal();
System.out.println(a); //SOP
}
}
</code></pre>

<p>This prints Dog@298989.</p>

<p>Here in SOP when the reference is passed the compiler automatically calls toString method.</p>

<p>All java classes inherits Java class Object.
The class Object gives a method called toString which returns The class Name followed by @ and an Hexadecimal value.</p>

<p>However you can change it by overriding toString method in the class.</p>

<p>eg:</p>

<pre><code>public class Dog
{

public static void main(String[] args)
{
    Animal a=new Animal();
    System.out.println(a); //SOP
}
}

public Animal
{
String name=""Doggy"";
public String toString()
{
    return ""Dog's name is""+name;
}
}
</code></pre>

<p>In this case output will be </p>

<p>Dog's name is doggy. </p>
"
"1120020","<p>You might have to specify <code>JFrame.setResizeable = true;</code> on both the Parent <code>JFrame</code>(the one with the border layout) and the child <code>JFrame</code>.</p>

<p>You also might want to use a <code>JPanel</code> in the south border.</p>
"
"912923","<p>Just remove the <code>final</code>s. <code>Final</code> is not essential for an immutable object.</p>
"
"29976381","<pre><code>Hashtable&lt;String, Integer&gt; ht = new Hashtable&lt;String, Integer&gt;() ; 
for(Integer i : list){
    if(ht.contain(i+""""){
          Integer v = ht.get(i+"""") + 1 ; 
    }else{
         ht.put(i+"""" , 1) ; 
    }
}

// now we need order it 
TreeMap&lt;String, Integer&gt; tm= new TreeMap&lt;Integer, String&gt;(ht);
</code></pre>

<p>now the tree map will be sorted key and value </p>
"
"1143899","<p><code>updateUI();</code> should never fail!</p>
"
"30009027","<p>So these are your constraints:</p>

<ul>
<li>you can't change the lados() method return type (<code>List&lt;Lado&gt;</code>).</li>
<li>you want your field to be of the <code>List&lt;Arista&gt;</code></li>
</ul>

<p><strong>1. Copying the array</strong></p>

<pre><code>public List&lt;Lado&gt; lados() {
    return new ArrayList&lt;&gt;(lados);
}
</code></pre>

<p><strong>2. Wrapping it as unmodifiable list*</strong></p>

<pre><code>public List&lt;Lado&gt; lados() {
    return Collections.unmodifiableList(lados);
}
</code></pre>

<p><strong>3. Type erasure, don't do it, this is unsafe</strong></p>

<p>Erasing the generics of your field before returning it. Unsafe since if someone adds an object that extends <code>Lado</code> but it's not <code>Arista</code> to that list you will have <a href=""http://en.wikipedia.org/wiki/Heap_pollution"" rel=""nofollow"">HeapPolution</a>.</p>

<pre><code>@SuppressWarnings(""unchecked"")
public List&lt;Lado&gt; lados() {
    return (List)lados;
}
</code></pre>
"
"29408361","<p>This code checks if those two strings are equal or not</p>

<pre><code>String strA = ""AC-11234X-DD+++1"" ;
String strB = ""AC-11234X-DD+++1"";    

if(strA.equals(strB))
       //they are equal
else
       //they are not
</code></pre>
"
"29408503","<pre><code>public static void main(String[] args)
{
   String strA = ""AC-11234X-DD+++1"";
    String strB = ""AC-11234X-DD+++1"";

    System.out.println(strA.equals(strB));
    }
</code></pre>

<p>This works perfectly.</p>
"
"940792","<pre><code>int i = mylist
  .OfType&lt;int&gt;()
  .Aggregate( (soFar, next) =&gt; soFar*10 + next);
</code></pre>

<p>Well, that would work in C# anyway.</p>
"
"29408800","<p>Must use the <em>compareTo</em> method.</p>

<p>The value returned by this method is an <em>int</em>: </p>

<ul>
<li>if it is > 0 means that the second string precedes the first in alphabetical order</li>
<li>if it is = 0 means that two string are equal;</li>
<li>if it is &lt; 0 means that the fisrt string precedes the second in alphabetical order</li>
</ul>

<p>An example (very rough) about your problem might be this:</p>

<pre><code>int r = A.compareTo(B);

if(r &gt; 0) { 
  System.out.println(""B comes before A in alphabetical order"");
} else if(r &lt; 0) {
  System.out.println(""A comes before B string in alphabetical order"");
} else {
  System.out.println(""The two strings are equal"");
}
</code></pre>
"
"24768836","<p>Try this:</p>

<pre><code>Query q = sess.createQuery(""from Cat cat"");
List&lt;?&gt; results = q.list();
for (Object obj : results) {
    Cat cat = (Cat) obj;
}
</code></pre>
"
"626322","<pre><code>protected static void escapeXMLSpecialCharactersAndWrite(Writer writer, String str) throws IOException {

    int len = str.length();
    for (int i = 0; i &lt; len; i++) {
        char c = str.charAt(i);

        switch (c) {
        case '&amp;':
            writer.write(""&amp;amp;"");
            break;
        case '&lt;':
            writer.write(""&amp;lt;"");
            break;
        case '&gt;':
            writer.write(""&amp;gt;"");
            break;
        case '\""':
            writer.write(""&amp;quot;"");
            break;
        case '\'':
            writer.write(""&amp;apos;"");
            break;
        default:
            writer.write(c);
            break;
        }
    }
}
</code></pre>
"
"1125312","<p>Wiring up your beans like this</p>

<pre><code>HelloWorld helloWorld = new HelloWorld();
helloWorld.setMessage(""HelloWorld"");
helloWorld.display();
</code></pre>

<p>Might make sense when you have a small number of beans in your environment.</p>

<p>But what if you have a more complicated environment in which you have dozens or hundreds of beans in Spring? My current application has around 205 beans mapped in about four different XML files. Wiring these up in code would be a nightmare.</p>
"
"1354055","<p>Eliminate the bitshifting and its intricacies and use a <a href=""http://en.wikipedia.org/wiki/Lookup%5Ftable"" rel=""nofollow"">LUT</a> for the right <code>and</code> operand.</p>
"
"1483057","<p>This is what seems to work:</p>

<pre><code>private synchronized static String utftoasci(String s){
  final StringBuffer sb = new StringBuffer( s.length() * 2 );

  final StringCharacterIterator iterator = new StringCharacterIterator( s );

  char ch = iterator.current();

  while( ch != StringCharacterIterator.DONE ){
   if(Character.getNumericValue(ch)&gt;0){
    sb.append( ch );
   }else{
    boolean f=false;
    if(Character.toString(ch).equals(""Ê"")){sb.append(""E"");f=true;}
    if(Character.toString(ch).equals(""È"")){sb.append(""E"");f=true;}
    if(Character.toString(ch).equals(""ë"")){sb.append(""e"");f=true;}
    if(Character.toString(ch).equals(""é"")){sb.append(""e"");f=true;}
    if(Character.toString(ch).equals(""è"")){sb.append(""e"");f=true;}
    if(Character.toString(ch).equals(""è"")){sb.append(""e"");f=true;}
    if(Character.toString(ch).equals(""Â"")){sb.append(""A"");f=true;}
    if(Character.toString(ch).equals(""ä"")){sb.append(""a"");f=true;}
    if(Character.toString(ch).equals(""ß"")){sb.append(""ss"");f=true;}
    if(Character.toString(ch).equals(""Ç"")){sb.append(""C"");f=true;}
    if(Character.toString(ch).equals(""Ö"")){sb.append(""O"");f=true;}
    if(Character.toString(ch).equals(""º"")){sb.append("""");f=true;}
    if(Character.toString(ch).equals(""Ó"")){sb.append(""O"");f=true;}
    if(Character.toString(ch).equals(""ª"")){sb.append("""");f=true;}
    if(Character.toString(ch).equals(""º"")){sb.append("""");f=true;}
    if(Character.toString(ch).equals(""Ñ"")){sb.append(""N"");f=true;}
    if(Character.toString(ch).equals(""É"")){sb.append(""E"");f=true;}
    if(Character.toString(ch).equals(""Ä"")){sb.append(""A"");f=true;}
    if(Character.toString(ch).equals(""Å"")){sb.append(""A"");f=true;}
    if(Character.toString(ch).equals(""ä"")){sb.append(""a"");f=true;}
    if(Character.toString(ch).equals(""Ü"")){sb.append(""U"");f=true;}
    if(Character.toString(ch).equals(""ö"")){sb.append(""o"");f=true;}
    if(Character.toString(ch).equals(""ü"")){sb.append(""u"");f=true;}
    if(Character.toString(ch).equals(""á"")){sb.append(""a"");f=true;}
    if(Character.toString(ch).equals(""Ó"")){sb.append(""O"");f=true;}
    if(Character.toString(ch).equals(""É"")){sb.append(""E"");f=true;}
    if(!f){
     sb.append(""?"");
    }
   }
   ch = iterator.next();
  }
  return sb.toString();
 }
</code></pre>
"
"30137744","<p>use <a href=""http://jodd.org/doc/jdatetime.html"" rel=""nofollow"">JDateTime</a></p>

<pre><code>JDateTime jdt = new JDateTime(System.currentTimeMillis());
//result is 2015-05-09 16:23:25.344
</code></pre>

<p>you can use <code>jdt.getMillisecond()</code> to get millisecond.</p>
"
"1504917","<pre><code>public class leftpadding {
public static void main(String[] args) {
    for (int i = 1; i &lt; 10000; i++) {
        System.out.print(padded(i,5)+ "" "");
}   
}
public static String padded(int x,int pad)
{
        String r="""";
    for (int i=0; i&lt;pad-(Integer.toString(x).length()); i++ )
    r+=""0"";
return r+x; 
}
}
</code></pre>
"
"29431676","<p>In Java 7 there's </p>

<pre><code>file.toPath().isAbsolute()
</code></pre>
"
"25281888","<p>Simplest that works for me using Hibernate that supports files in jar-file tag, so can use <strong>./target/classes</strong>.</p>

<p>Put this as under <strong>src/test/resources/META-INF/persistence.xml</strong>:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?&gt;
&lt;persistence xmlns=""http://java.sun.com/xml/ns/persistence""
xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" version=""2.0""
xsi:schemaLocation=""http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd""&gt;
&lt;persistence-unit name=""your_persistence_unit"" transaction-type=""RESOURCE_LOCAL""&gt;
    &lt;provider&gt;org.hibernate.ejb.HibernatePersistence&lt;/provider&gt;
    &lt;jar-file&gt;./target/classes&lt;/jar-file&gt;
    &lt;exclude-unlisted-classes&gt;false&lt;/exclude-unlisted-classes&gt;
    &lt;!-- validation-mode&gt;NONE&lt;/validation-mode --&gt;
    &lt;properties&gt;
        &lt;property name=""hibernate.archive.autodetection"" value=""class"" /&gt;

       ...

    &lt;/properties&gt;
&lt;/persistence-unit&gt;
</code></pre>

<p></p>

<p>Can run both with TestNG directly or as a maven test.</p>
"
"950434","<pre><code>String s = ""prefix/dir1/dir2/dir3/dir4""

String parts[] = s.split(""/"");

System.out.println(s[0]); // ""prefix""
System.out.println(s[1]); // ""dir1""
...
</code></pre>
"
"30168507","<p>Java is “statically-typed”, meaning that the “type” (often, “class”) of every variable can be calculated before the program is executed. The compiler can therefore deduce whether or not a given variable is capable of performing actions requested of it. For example,</p>

<pre><code>Integer i = new Integer(5); 
i.toUpperCase(); 
</code></pre>

<p>would never compile because the toUpperCase() method is not found on Integers (it is found on Strings). No compilation means the code will never run, which prevents errors from ever reaching the user.</p>
"
"29494524","<p>Just have setFoo() return void, and then you can do:</p>

<p><code>B b = new B(1);
b.setFoo(2);
b.methodI();</code></p>
"
"30179195","<p>While this would have been made easier by Subjects having a <code>.create(OnSubscribe)</code> constructor like Observables do, I was able to solve my problem by restructuring the app a bit.</p>

<p>I'm still using the BehaviorSubject, but this time providing a callback in my subscriber. When it's null, it's the app's first time receiving a network result, and when it's not, it's a cached result.</p>

<p>Sorry it's not really a solution for everyone, but it seems like in any situation where this info (cached vs fresh) would be needed, Android or otherwise, there should be a way to determine it based on the architecture of the app.</p>
"
"26893749","<p>if C object having null value then following statement used to compare null value:</p>

<pre><code>if (c.toString() == null) {

    System.out.println(""hello execute statement"");

}
</code></pre>
"
"29552704","<p>You probably can't do this. <code>File(String pathname)</code> can't except <code>http://..</code> stuff. Seems like you want a <code>URI</code>, but <code>File(URI uri)</code> can only acccept an <code>file:URI</code> as parameter. </p>

<p>See <a href=""http://docs.oracle.com/javase/7/docs/api/java/io/File.html"" rel=""nofollow"">http://docs.oracle.com/javase/7/docs/api/java/io/File.html</a>.</p>
"
"27821517","<p>For Reading a string in a stream using just what java supplies.</p>

<pre><code>InputStream s = new BufferedInputStream( new ReaderInputStream( new StringReader(""a string"")));
</code></pre>
"
"29587077","<p>My friend, you use <code>scanf</code> in <code>""C""</code>of <code>""C++""</code> in java we use <code>System.in</code></p>
"
"28525284","<pre><code>public class TestClass implements Runnable {
    public static void main(String[] args) {
        TestClass tc = new TestClass();

        Thread t1 = new Thread(tc);
        System.out.println(""Before Starting Thread "" + Thread.currentThread().hashCode());
        t1.start();
        System.out.println(""After Starting Thread "" + Thread.currentThread().hashCode());
    }

    @Override
    public void run() {
        System.out.println(""TestClass Run method is  Running with thread "" + Thread.currentThread().hashCode());        
    }
}
</code></pre>
"
"1167122","<p>Instead of convertToPrimitiveArray, you can use List.toArray(T[] a):</p>

<pre><code>ArrayList&lt;int&gt; al = new ArrayList&lt;int&gt;();
// populate al
int[] values = new int[al.size()];
al.toArray(values);
</code></pre>

<p>For your other concerns, LinkedList might be slightly better than ArrayList, given that you don't know the size of your result set in advance.  </p>

<p>If performance is really a problem, you may be better off hand-managing an int[] yourself, and using System.arraycopy() each time it grows; the boxing/unboxing from int to Integer that you need for any Collection could hurt.</p>

<p>As with any performance-related question, of course, test and make sure it really matters before spending too much time optimizing.</p>
"
"29600901","<p>To match <code>He</code> or <code>She</code> including <code>/he</code>, <code>/she</code>, you may use optional capturing group <code>(?:/(?:He|She))?</code>. To exclude capturing the <code>She/</code> or <code>He/</code>, you can use a negative look-behind: <code>(?&lt;!S?[hH]e/)</code>. <code>\\b</code> check word boundaries so that we do not match <code>She</code> in <code>Shed</code>. <code>S?[Hh]e</code> is actually matching <code>She</code> or <code>He</code>.</p>

<p>Now, the regex looks like this</p>

<pre><code>String pattern = ""\\b(?&lt;!S?[hH]e/)S?[Hh]e(?:/(?:He|She))?\\b"";
</code></pre>

<p>And then replace with what you need. Here is a sample code:</p>

<pre><code>String str = ""He needs to have java skills"";
String rx = ""\\b(?&lt;!S?[hH]e/)S?[Hh]e(?:/(?:He|She))?\\b"";
System.out.println(str.replaceAll(rx, ""She/He""));

String str2 = ""She/He needs to have java skills"";
System.out.println(str2.replaceAll(rx, ""She/He""));
</code></pre>

<p>Output:</p>

<pre><code>She/He needs to have java skills
She/He needs to have java skills
</code></pre>

<p><a href=""http://www.tutorialspoint.com/compile_java_online.php?PID=0Bw_CjBb95KQMSElvS3NKVW15cWc"" rel=""nofollow"">Sample program is available here</a>.</p>
"
"28672797","<p>A simple way of doing this is <code>System.getProperty(""user.dir/bin/&lt;fileName&gt;.ini"")</code>
Assuming your ini is located in your bin folder (advised). You can then use <code>System.getProperty(key, args);</code>, where key is the key to be used and args is the value of the key</p>
"
"30329145","<pre><code>    Import javax.swing.*;
    public class whileloop
    {
        public static void main (String [] args )



       {
           int i =0, tot = 0;
           int count = 0;
           double avg = 0.0;
           while(true) 
           {
           i = Integer.parseInt(JOptionPane.showInputDialog(null,""Enter a number"");
           if(i != -1)
           {
              tot += i; 
              count++;

           }else{
            avg = tot/count;
              System.out.println(""Sum: "" + tot+ ""\t\t"" + ""Average: "" + avg);
break;
         }
       }
       System.out.println();
    } }
</code></pre>
"
"29631111","<p>Your historical element map is defined as:</p>

<pre><code>Map&lt;Integer, List&lt;Attribute&gt;&gt; historicalElement
</code></pre>

<p>but you are trying to insert an object of type Attribute. Try changing the definition of the map to </p>

<pre><code>Map&lt;Integer, Attribute&gt; historicalElement
</code></pre>

<p>That should do the trick</p>
"
"29631189","<p>Aren’t you trying to put a <strong>single</strong> <code>Attribute</code> in a <code>Map</code> where it requires a <code>List</code> of Attributes, here:</p>

<pre><code>//iterating the entire list
for(final Attribute attribute : attributes) 
{
  if(attribute.getDate() == currentDate)
  {
      currentElement.add(attribute);
  }
  if(attribute.getDate() &lt; currentDate)
  {
      historicalElement.put(attribute.getValue(), attribute)  // HERE   
  }
}
</code></pre>

<p>If you want it to be single attribute, this should change:</p>

<p><strong>From:</strong> <code>Map&lt;Integer, List&lt;Attribute&gt;&gt; historicalElement = new HashMap&lt;Integer, List&lt;Attribute&gt;&gt;();</code></p>

<p><strong>To:</strong> <code>Map&lt;Integer, List&lt;Attribute&gt;&gt; historicalElement = new HashMap&lt;Integer, Attribute&gt;()</code>;</p>
"
"30403543","<p>According to the <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/List.html#add-E-"" rel=""nofollow"">API</a>, the <code>add</code> method:</p>

<p>""Appends the specified element to the end of this list (optional operation).""</p>

<p>So starting from 0.</p>
"
"1222681","<p>I reworked the method to deal with directory structures more convenient and to zip a whole bunch of targets at once.
Plain files will be added to the root of the zip file, if you pass a directory, the underlying structure will be preserved.</p>

<pre><code>def zip (String zipFile, String [] filesToZip){ 
    def result = new ZipOutputStream(new FileOutputStream(zipFile))
    result.withStream { zipOutStream -&gt;
    	filesToZip.each {fileToZip -&gt;
    		ftz = new File(fileToZip)
    		if(ftz.isDirectory()){
    			pathlength = new File(ftz.absolutePath).parentFile.absolutePath.size()
    			ftz.eachFileRecurse {f -&gt;				
    				if(!f.isDirectory()) writeZipEntry(f, zipOutStream, f.absolutePath[pathlength..-1])	
    			}
    		}				
    		else writeZipEntry(ftz, zipOutStream, '')
    	}
    }
}

def writeZipEntry(File plainFile, ZipOutputStream zipOutStream, String path) {
    zipOutStream.putNextEntry(new ZipEntry(path+plainFile.name))
    new FileInputStream(plainFile).withStream { inStream -&gt;
    	def buffer = new byte[1024]
    	def count
    	while((count = inStream.read(buffer, 0, 1024)) != -1) 
    		zipOutStream.write(buffer)					
    }
    zipOutStream.closeEntry()
}
</code></pre>
"
"2677737","<p>You can easily do Integer[] to List</p>

<pre><code>    List&lt;Integer&gt; = Arrays.asList(new Integer(4));
</code></pre>

<p>I suspect you can then do
   List = Arrays.asList(4);</p>

<p>(PS-the parameter to the asList method is actually an array, so you can pass in a single element or the array)</p>
"
"30418723","<p>Im not sure if it's what you need but every time you create a human you could just put it into an array of human types. Then iterate over the array and count the number of humans in it.</p>

<pre><code>Humans[] arrayname = new Humans[size];
</code></pre>
"
"29182993","<p>The string that you pass to the constructor <code>JSONObject</code> has to be escaped with <code>quote()</code>:</p>

<pre><code>public static java.lang.String quote(java.lang.String string)
</code></pre>

<p>Your code would now be:</p>

<pre><code>JSONObject jsonObj = new JSONObject.quote(jsonString.toString());
System.out.println(jsonString);
System.out.println(""---------------------------"");
System.out.println(jsonObj);
</code></pre>
"
"29183055","<p>Your json -</p>

<pre><code>{
    ""title"":""Free Music Archive - Genres"",
    ""message"":"""",
    ""errors"":[
    ],
    ""total"":""163"",
    ""total_pages"":82,
    ""page"":1,
    ""limit"":""2"",
    ""dataset"":[
    {
    ""genre_id"":""1"",
    ""genre_parent_id"":""38"",
    ""genre_title"":""Avant-Garde"",
    ""genre_handle"":""Avant-Garde"",
    ""genre_color"":""#006666""
    },
    {
    ""genre_id"":""2"",
    ""genre_parent_id"":null,
    ""genre_title"":""International"",
    ""genre_handle"":""International"",
    ""genre_color"":""#CC3300""
    }
    ]
    }
</code></pre>

<p>Using the JSON library from <code>json.org</code> -</p>

<pre><code>JSONObject o = new JSONObject(jsonString);
</code></pre>

<p><strong>NOTE:</strong></p>

<p>The following information will be helpful to you - <a href=""http://www.json.org/java/"" rel=""nofollow"">json.org</a>.</p>

<p><strong>UPDATE:</strong></p>

<pre><code>import org.json.JSONObject;
 //Other lines of code
URL seatURL = new URL(""http://freemusicarchive.org/
 api/get/genres.json?api_key=60BLHNQCAOUFPIBZ&amp;limit=2"");
 //Return the JSON Response from the API
 BufferedReader br = new BufferedReader(new         
 InputStreamReader(seatURL.openStream(),
 Charset.forName(""UTF-8"")));
 String readAPIResponse = "" "";
 StringBuilder jsonString = new StringBuilder();
 while((readAPIResponse = br.readLine()) != null){
   jsonString.append(readAPIResponse);
 }
 JSONObject jsonObj = new JSONObject(jsonString.toString());
 System.out.println(jsonString);
 System.out.println(""---------------------------"");
 System.out.println(jsonObj);
</code></pre>
"
"1000308","<p>To move/rename a file you can use this function:</p>

<pre><code>BOOL WINAPI MoveFile(
  __in  LPCTSTR lpExistingFileName,
  __in  LPCTSTR lpNewFileName
);
</code></pre>

<p>It is defined in kernel32.dll.</p>
"
"731383","<p>You most likely will want to use the FileInputStream class:</p>

<pre><code>int character;
StringBuffer buffer = new StringBuffer("""");
FileInputStream inputStream = new FileInputStream(new File(""/home/jessy/file.txt""));

while( (character = inputStream.read()) != -1)
        buffer.append((char) character);

inputStream.close();
System.out.println(buffer);
</code></pre>

<p>You will also want to catch some of the exceptions thrown by the read() method and FileInputStream constructor, but those are implementation details specific to your project.</p>
"
"2889822","<pre><code>// The following is in C#

public class fqueue
{

  // The following code implements a circular queue of objects

  //private data:

    private bool empty;
    private bool full;

    private int begin, end;

    private object[] x;

  //public data:

    public fqueue()
    {
        empty = !(full = false);
        begin = end = 0xA2;

        x = new object[256];
        return;
    }

    public fqueue(int size)
    {
        if (1 &gt; size) throw new Exception(""fqueue: Size cannot be zero or negative"");

        empty = !(full = false);
        begin = end = 0xA2;

        x = new object[size];
        return;
    }

    public object write
    {
        set
        {
            if(full) throw new Exception(""Write error: Queue is full"");

            end = empty ? end : (end + 1) % x.Length;

            full = ((end + 1) % x.Length) == begin;
            empty = false;

            x[end] = value;
        }
    }

    public object read
    {
        get
        {
            if(empty) throw new Exception(""Read error: Queue is empty"");
            full = false;

            object ret = x[begin];

            begin = (empty=end==begin) ?
                begin :
                (begin + 1) % x.Length;

            return ret;
        }
    }

    public int maxSize
    {
        get
        {
            return x.Length;
        }
    }

    public int queueSize
    {
        get
        {
            return end - begin + (empty ? 0 : 1 + ((end &lt; begin) ? x.Length : 0));
        }
    }

    public bool isEmpty
    {
        get
        {
            return empty;
        }
    }

    public bool isFull
    {
        get
        {
            return full;
        }
    }

    public int start
    {
        get
        {
            return begin;
        }
    }        

    public int finish
    {
        get
        {
            return end;
        }
    }
}
</code></pre>
"
"2951173","<p>This works for me. I am using it like this (scala):</p>

<pre><code>def onDrop(files: List[java.io.File]): Unit = { ... }

    val lblDrop = new Label {
      peer.setTransferHandler(new FileDropHandler(onDrop))
      border = EtchedBorder
    }



class FileDropHandler(val onDrop: List[java.io.File] =&gt; Unit) extends javax.swing.TransferHandler {
      import javax.swing.JComponent
      import java.awt.datatransfer.{Transferable, DataFlavor}
        import java.net.URI
    import java.io.File

    val stdFileListFlavor = DataFlavor.javaFileListFlavor
    val nixFileListFlavor = new DataFlavor(""text/uri-list;class=java.lang.String"")

    override def canImport(comp: JComponent, flavors: Array[DataFlavor]): Boolean =
        flavors.exists(flavor =&gt;
            (flavor == stdFileListFlavor) ||
            (flavor == nixFileListFlavor)
        )

    override def importData(comp: JComponent, t: Transferable): Boolean = {

        val flavors = t.getTransferDataFlavors()

        val files = if (flavors.exists(_ == stdFileListFlavor)) {
            val data = t.getTransferData(stdFileListFlavor)
            importStdFileList( data )
        } else if (flavors.exists(_ == nixFileListFlavor)) {
            val data = t.getTransferData(nixFileListFlavor)
            importNixFileList( data )
        } else List()

        onDrop( files )

        !files.isEmpty
    }

    private def importStdFileList(data: Any): List[File] = {
      data.asInstanceOf[List[File]] //XXX NOT TESTED
    }

    private def importNixFileList(data: Any): List[File] = {

        def clean(rawLine: String): Option[String] = {
            val line = rawLine.trim
            if   (line.length == 0 || line == ""#"") None
            else                                   Some(line)
        }

        def asURI(line: String): Option[URI] = {
            try   { Some(new URI(line)) }
            catch { case e:Exception =&gt; println(e); None }
        }

        def asFile(uri: URI): Option[File] = {
            try   { Some(new File(uri)) }
            catch { case e:Exception =&gt; println(e); None }
        }

        data.asInstanceOf[java.lang.String].split(""\n"")
     .toList flatMap clean flatMap asURI flatMap asFile
    }
}
</code></pre>
"
"29250089","<p>Performing 100,000 calls in separate threads is tough to do if you doing from a laptop or even 16-core desktop. You will need a grid or bunch of servers to optimally perform this. </p>

<p>However, you can still stretch this by doing whatever transaction operation in a <code>callback</code>. Your throughput can increase.</p>
"
"29700044","<p>Check the <a href=""https://docs.oracle.com/javase/tutorial/java/data/numberformat.html"" rel=""nofollow"">modifiers</a>, for hours it is <code>tl</code> not <code>tHh</code>.</p>
"
"29720896","<pre><code>package test;

public class BankAccount
{
    private Money balance;

    public BankAccount()
    {
        // start with zero balance
        balance = new Money(0,0);
    }

    public void addMoneyToBalance(Money m)
    {
        balance.setDollars(m.getDollars());
        balance.setCents(m.getCents());
    }

    public String accountBalanceToString()
    {
        return ""$"" + balance.getDollars() + ""."" + balance.getCents();
    }

    // inner class defines how money is held in memory
    private static class Money
    {
        private int dollars;
        private int cents;

        public Money()
        {}

        // overloaded constructor, for a one-shot setup
        public Money(int newDollars, int newCents)
        {
            dollars = newDollars;
            cents = newCents;
        }

        public void setDollars(int newDollars)
        {
            dollars = newDollars;
        }

        public void setCents(int newCents)
        {
            cents = newCents;
        }

        public int getDollars()
        {
            return dollars;
        }

        public int getCents()
        {
            return cents;
        }
    }

    public static void main(String[] args)
    {
        BankAccount myAccount = new BankAccount();
        // prepare a deposit of $69.69
        Money currentDeposit = new Money(69, 69);
        myAccount.addMoneyToBalance(currentDeposit);
        System.out.println(myAccount.accountBalanceToString());
    }
}
</code></pre>
"
"3661670","<p>There is no such a function, but you could create something like the following, and invoke it whenever you need to. </p>

<pre><code>import java.util.Arrays;
import java.util.List;

public class FoldTest {
    public static void main( String [] args ) {
        List&lt;String&gt; list = Arrays.asList(""a"",""b"",""c"");
        String s = fold( list, "","");
        System.out.println( s );
    }
    private static String fold( List&lt;String&gt; l, String with  ) {
        StringBuilder sb = new StringBuilder();
        for( String s: l ) {
            sb.append( s ); 
            sb.append( with );
        }
        return sb.deleteCharAt(sb.length() -1 ).toString();

    }
}
</code></pre>
"
"3502497","<p>First ,you have to know the encoding of string that you want to convert.Because the java.io.InputStream operates an underlying array of bytes,however,a string is composed by a array of character that needs an encoding, e,g. UTF-8,the JDK will take the default encoding that is taken from System.getProperty(""file.encoding"",""UTF-8""); </p>

<pre><code>byte[] bytes=new byte[inputStream.available()];
inputStream.read(bytes);
String s = new String(bytes);
</code></pre>

<p>If inputStream's byte array is very big, you could do it in loop.</p>

<p>:EOF</p>
"
"3693355","<pre><code>public static final String zeroPad (int value, int size) {
  String s = ""0000000000""+value;
  return s.substring(s.length() - size);
}
</code></pre>
"
"763313","<p>If I understand your question correctly, you're trying to change the heap size at <em>runtime</em>. I don't see any reason why this should be possible. Set the heap size at <em>startup</em> using the <code>-Xmx</code> JVM option. I also advise you to set the <code>-Xms</code> option only if you absolutely need to. This option sets the initial amount of head memory that is allocated for the JVM. </p>

<p>You should know how your application behaves in terms of memory. Set the the value of <code>-Xmx</code> wisely. If your app is some kind of a server app you can set a higher value, otherwise compromise your choice with other possible apps running in client machines and of course available memory.</p>
"
"3758787","<p>In case of your jdk version less than 1.5, following option can be used.</p>

<pre><code>    int iTest = 2;
    StringBuffer sTest = new StringBuffer(""000000""); //if the string size is 6
    sTest.append(String.valueOf(iTest));
    System.out.println(sTest.substring(sTest.length()-6, sTest.length()));
</code></pre>
"
"1064555","<p>If you declare the exception to be final, the anonymous class will be able to store the value there, and you can check the variable when the run() is done.</p>

<p>Edit to add:  Sorry, I meant to make it a final array of one exception.  Idea does this automatically for me, so I often forget about the extra redirection.</p>

<p><code>final Exception[] except;</code></p>
"
"29895419","<p>I would try as below</p>

<pre><code>public static void main(String args[])
{
    String x=""123312351863"";
    String r[]=x.split("""");int sum=0;
    for(int i=1;i&lt;=x.length();i++)
    {

        sum+=Integer.parseInt(r[i]);
    }
    System.out.println(sum);
}
</code></pre>
"
"793798","<p>From the docs:</p>

<pre><code>AuditReader reader = AuditReaderFactory.get(entityManager);
User user_rev1 = reader.find(User.class, user.getId(), 1);
</code></pre>
"
"2235708","<pre><code>final StringBuilder result = new StringBuilder();
final StringCharacterIterator iterator = new StringCharacterIterator(str);
char character =  iterator.current();
while (character != CharacterIterator.DONE )
{
  if (character == '\\\\') {
     result.append(""\\"");
  }
  else {
    result.append(character);
  }

  character = iterator.next();
}

System.out.print(result);
</code></pre>
"
"6852418","<p><code>i == i</code> is not atomic. Proved by such program:</p>

<pre><code>static volatile boolean i = true;
public static void main(String[] args) throws InterruptedException
{
    new Thread() {
        @Override
        public void run() {
            while (true) {
                i = !i;
            }
        }
    }.start();

    while (i == i) ;
    System.out.println(""Not atomic! i: "" + i);
}
</code></pre>

<p><strong>Update</strong>
Here is one more example of not-infinite loop (no new threads are created).</p>

<pre><code>public class NoNewThreads {
    public static void main(String[] args) {
        new NoNewThreads();
        System.gc();
        int i = 500;
        System.out.println(""Still Running"");
        while (i == i) ;
    }

    @Override
    protected void finalize() throws Throwable {
        super.finalize();
        Thread.sleep(1000);
        System.exit(0);
    }
}
</code></pre>
"
"29343264","<p>Reply this is due to performance reasons.
If you need to compare <strong>int</strong> as often happens you can return the following:</p>

<p>Infact comparison are often returned as substractions.</p>

<p>As an example</p>

<pre><code>public class MyComparable implements Comparable&lt;MyComparable&gt; {
    public int num;

    public int compareTo(MyComparable x) {
        return num - x.num;
    }
}
</code></pre>
"
"4043019","<p>If you modify your list, then use <a href=""http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html#listIterator()"" rel=""nofollow""><code>listIterator()</code></a> and iterate from last index (that is <code>size()-1</code> respectively).
If you fail again, check your list structure.</p>
"
"2469599","<p>You have to insert the below code into your build.xml file.</p>

<blockquote>
<pre><code>&lt;target name=""startRMI"" depends=""init""&gt;
    &lt;exec executable=""rmiregistry"" dir=""${build.classes.dir}""&gt;
    &lt;/exec&gt;
&lt;/target&gt;
</code></pre>
</blockquote>

<p>Then right click -> build.xml -> Run target -> Other targets -> startRMI</p>

<p>This will start the RMI registry.</p>
"
"29360536","<p>There are many ways to do this.  This would be really easy to do with a Stack, but there is another easy way to do it as well by storing the values in a temporary array. Basically you use j as a pointer to the last spot in the arr array and load whatever value that is into the front of the tempArray.  After each iteration of the loop, we decrement j and increment i, changing their pointers to continue placing the values of arr in reverse order into tempArray.  Hope that helps.</p>

<pre><code>private static int[] reverseArray (int[] arr)
{
    int[] tempArray = new int[arr.length];
    int j = arr.length-1;
    for(int i = 0; i &lt; arr.length; i++){
        tempArray[i] = arr[j];
        j--;
    }
    return tempArray;
}
</code></pre>
"
"4425569","<p>if you use this </p>

<pre><code>public int countLines(String filename) throws IOException {
    LineNumberReader reader  = new LineNumberReader(new FileReader(filename));
    int cnt = 0;
    String lineRead = """";
    while ((lineRead = reader.readLine()) != null) {}

    cnt = reader.getLineNumber(); 
    reader.close();
    return cnt;
}
</code></pre>

<p>you cant run to big num rows, likes 100K rows, because return from reader.getLineNumber is int. you need long type of data to process maximum rows..</p>
"
"1079168","<p>As long as you're not leaving .NET realm, why not use the serialization mechanisms that .NET offers? It can easily serialize your object graphs (private fields included) to a binary blob and back again. There is also a built-in mechanism for serializing to and from XML, although that has some limitations when it comes to private fields and stuff (you can work around that though). There are also attributes that specify that some fields are newer and may not be in the serialized stream. You'll have to deal with them being NULL yourself, but then - you'd have to do that anyway.</p>

<p><strong>Added:</strong> Ah, yes, forgot to mention - I'm talking about <code>System.Runtime.Serialization.Formatters.Binary.BinaryFormatter</code> class.</p>
"
"4469413","<p>For comaparing a list or set we can use <code>Arrays.equals(object[], object[])</code>. It will check for the values only. To get the <code>Object[]</code> we can use <code>Collection.toArray()</code> method.</p>
"
"29963353","<p>The import statement import <code>com.ms.security.*;</code> requires you to have a folder com, with a subfolder ms, with a subfolder security, which contains the needed files.
I think you are missing some files for your application.</p>

<p>I recommend reading this post, for the use of imports: <a href=""http://stackoverflow.com/a/12620773/3234981"">http://stackoverflow.com/a/12620773/3234981</a></p>
"
"4507105","<p><code>JComboBox.setFocusable(false)</code> will do the trick.</p>
"
"7902679","<pre><code>String s = ""1.210000"";
while (s.endsWith(""0"")){
    s = (s.substring(0, s.length() - 1));
}
</code></pre>

<p>This will make the string to drop the tailing 0-s.</p>
"
"4532022","<pre><code>import java.io.*;
class LeftZeroPad{
    public static void main(String[] args) throws IOException{
        System.out.println(""Enter an integer,length less than 5:"");
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String x = br.readLine();
        int len=x.length();
        int i;
        System.out.println(""Length of the integer:"" +len);
        if (5 &gt; len) 
        { 
            for (i=0; i &lt; (5-len); i++) 
            { 
                //For Right Zero Padd
                //x += '0';
                //For Left Zero Padd
                 x='0'+ x;      
            } 
            System.out.println(""Integer after Left Zero Pad:"" + x);
        } 
        else
            {System.out.println(""Entered integer length is greater than 5"");}
        }
}
</code></pre>
"
"29407457","<p>Try</p>

<pre><code>String formatted = ""."" + Math.round(d * 1000);
</code></pre>
"
"5041615","<pre><code>public class SortedMapExample {

    public static void main(String[] args) {
        Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();

        map.put(""Cde"", ""C"");
        map.put(""Abc"", ""A"");
        map.put(""Cbc"", ""Z"");
        map.put(""Dbc"", ""D"");
        map.put(""Bcd"", ""B"");
        map.put(""sfd"", ""Bqw"");
        map.put(""DDD"", ""Bas"");
        map.put(""BGG"", ""Basd"");

        System.out.println(sort(map, new Comparator&lt;String&gt;() {
            @Override
            public int compare(String o1, String o2) {
                    return o1.compareTo(o2);
            }}));
    }

    @SuppressWarnings(""unchecked"")
    public static &lt;K, V&gt; Map&lt;K,V&gt; sort(Map&lt;K, V&gt; in, Comparator&lt;? super V&gt; compare) {
        Map&lt;K, V&gt; result = new LinkedHashMap&lt;K, V&gt;();
        V[] array = (V[])in.values().toArray();
        for(int i=0;i&lt;array.length;i++)
        {

        }
        Arrays.sort(array, compare);
        for (V item : array) {
            K key= (K) getKey(in, item);
            result.put(key, item);
        }
        return result;
    }

    public static &lt;K, V&gt;  Object getKey(Map&lt;K, V&gt; in,V value)
    {
       Set&lt;K&gt; key= in.keySet();
       Iterator&lt;K&gt; keyIterator=key.iterator();
       while (keyIterator.hasNext()) {
           K valueObject = (K) keyIterator.next();
           if(in.get(valueObject).equals(value))
           {
                   return valueObject;
           }
       }
       return null;
   }
</code></pre>

<p>}</p>

<p>// Please try here. I am modifing the code for value sort.</p>
"
"1089339","<p>I don't know if it would fit your needs, but you can always have these constants defined in an interface and have all your classes just implement this interface. Then using some smart RegExp as others suggest you could get rid of all <code>Foo.</code> occurences.</p>

<p>Example:</p>

<pre><code>public interface Foo {
   static final String constant1 = ""Some"";
   static final String constant2 = ""Value"";
   //...
}
</code></pre>

<p>And then</p>

<pre><code>public class YourClass implements Foo {
   public YourClass() {
      System.out.println(""Hello "" + constant1);
   }
}
</code></pre>
"
"5312826","<p>this is what i use:</p>

<pre><code>&lt;?php
function remove_accent($str)  {
#   http://www.php.net/manual/en/function.preg-replace.php#96586
$a = array('À', 'Á', 'Â', 'Ã', 'Ä', 'Å', 'Æ', 'Ç', 'È', 'É', 'Ê', 'Ë', 'Ì', 'Í', 'Î', 'Ï', 'Ð', 'Ñ', 'Ò', 'Ó', 'Ô', 'Õ', 'Ö', 'Ø', 'Ù', 'Ú', 'Û', 'Ü', 'Ý', 'ß', 'à', 'á', 'â', 'ã', 'ä', 'å', 'æ', 'ç', 'è', 'é', 'ê', 'ë', 'ì', 'í', 'î', 'ï', 'ñ', 'ò', 'ó', 'ô', 'õ', 'ö', 'ø', 'ù', 'ú', 'û', 'ü', 'ý', 'ÿ', 'Ā', 'ā', 'Ă', 'ă', 'Ą', 'ą', 'Ć', 'ć', 'Ĉ', 'ĉ', 'Ċ', 'ċ', 'Č', 'č', 'Ď', 'ď', 'Đ', 'đ', 'Ē', 'ē', 'Ĕ', 'ĕ', 'Ė', 'ė', 'Ę', 'ę', 'Ě', 'ě', 'Ĝ', 'ĝ', 'Ğ', 'ğ', 'Ġ', 'ġ', 'Ģ', 'ģ', 'Ĥ', 'ĥ', 'Ħ', 'ħ', 'Ĩ', 'ĩ', 'Ī', 'ī', 'Ĭ', 'ĭ', 'Į', 'į', 'İ', 'ı', 'Ĳ', 'ĳ', 'Ĵ', 'ĵ', 'Ķ', 'ķ', 'Ĺ', 'ĺ', 'Ļ', 'ļ', 'Ľ', 'ľ', 'Ŀ', 'ŀ', 'Ł', 'ł', 'Ń', 'ń', 'Ņ', 'ņ', 'Ň', 'ň', 'ŉ', 'Ō', 'ō', 'Ŏ', 'ŏ', 'Ő', 'ő', 'Œ', 'œ', 'Ŕ', 'ŕ', 'Ŗ', 'ŗ', 'Ř', 'ř', 'Ś', 'ś', 'Ŝ', 'ŝ', 'Ş', 'ş', 'Š', 'š', 'Ţ', 'ţ', 'Ť', 'ť', 'Ŧ', 'ŧ', 'Ũ', 'ũ', 'Ū', 'ū', 'Ŭ', 'ŭ', 'Ů', 'ů', 'Ű', 'ű', 'Ų', 'ų', 'Ŵ', 'ŵ', 'Ŷ', 'ŷ', 'Ÿ', 'Ź', 'ź', 'Ż', 'ż', 'Ž', 'ž', 'ſ', 'ƒ', 'Ơ', 'ơ', 'Ư', 'ư', 'Ǎ', 'ǎ', 'Ǐ', 'ǐ', 'Ǒ', 'ǒ', 'Ǔ', 'ǔ', 'Ǖ', 'ǖ', 'Ǘ', 'ǘ', 'Ǚ', 'ǚ', 'Ǜ', 'ǜ', 'Ǻ', 'ǻ', 'Ǽ', 'ǽ', 'Ǿ', 'ǿ'); 
$b = array('A', 'A', 'A', 'A', 'A', 'A', 'AE', 'C', 'E', 'E', 'E', 'E', 'I', 'I', 'I', 'I', 'D', 'N', 'O', 'O', 'O', 'O', 'O', 'O', 'U', 'U', 'U', 'U', 'Y', 's', 'a', 'a', 'a', 'a', 'a', 'a', 'ae', 'c', 'e', 'e', 'e', 'e', 'i', 'i', 'i', 'i', 'n', 'o', 'o', 'o', 'o', 'o', 'o', 'u', 'u', 'u', 'u', 'y', 'y', 'A', 'a', 'A', 'a', 'A', 'a', 'C', 'c', 'C', 'c', 'C', 'c', 'C', 'c', 'D', 'd', 'D', 'd', 'E', 'e', 'E', 'e', 'E', 'e', 'E', 'e', 'E', 'e', 'G', 'g', 'G', 'g', 'G', 'g', 'G', 'g', 'H', 'h', 'H', 'h', 'I', 'i', 'I', 'i', 'I', 'i', 'I', 'i', 'I', 'i', 'IJ', 'ij', 'J', 'j', 'K', 'k', 'L', 'l', 'L', 'l', 'L', 'l', 'L', 'l', 'l', 'l', 'N', 'n', 'N', 'n', 'N', 'n', 'n', 'O', 'o', 'O', 'o', 'O', 'o', 'OE', 'oe', 'R', 'r', 'R', 'r', 'R', 'r', 'S', 's', 'S', 's', 'S', 's', 'S', 's', 'T', 't', 'T', 't', 'T', 't', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'W', 'w', 'Y', 'y', 'Y', 'Z', 'z', 'Z', 'z', 'Z', 'z', 's', 'f', 'O', 'o', 'U', 'u', 'A', 'a', 'I', 'i', 'O', 'o', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'A', 'a', 'AE', 'ae', 'O', 'o'); 
return str_replace($a, $b, $str); 
}

function SEOify($i){
#   http://php.ca/manual/en/function.preg-replace.php#90316
$o          = $i;
$o          = html_entity_decode($o,ENT_COMPAT,'UTF-8');
$o          = remove_accent(trim($o)); 
$patterns   = array( ""([\40])"" , ""([^a-zA-Z0-9_-])"", ""(-{2,})"" ); 
$replacers  = array(""-"", """", ""-""); 
$o          = preg_replace($patterns, $replacers, $o);
return $o;
}
?&gt;
</code></pre>
"
"30045965","<p>ArrayList is not thread safe.. You must use vector List to make it thread safe.</p>

<p>You can also use Thread safe Array list by using Collections Api but I would recommend vector list since it already provides you what you want.</p>

<pre><code> //Use Collecions.synzhonizedList method
 List list = Collections.synchronizedList(new ArrayList());
 ...

 //If you wanna use iterator on the synchronized list, use it
 //like this. It should be in synchronized block.
 synchronized (list) {
   Iterator iterator = list.iterator();
   while (iterator.hasNext())
   ...
  iterator.next();
  ...
}
</code></pre>

<p>I would recommend you to through this: 
<a href=""http://beginnersbook.com/2013/12/difference-between-arraylist-and-vector-in-java/"" rel=""nofollow"">http://beginnersbook.com/2013/12/difference-between-arraylist-and-vector-in-java/</a></p>
"
"3100031","<p>In my case, adding <code>-Djava.compiler=NONE</code> after the classpath can solve the problem. </p>
"
"5603721","<p>It's easy:</p>

<pre><code>JTable table = new JTable();
            ((DefaultTableCellRenderer)table.getTableHeader().getColumnModel().getColumn(4).getHeaderRenderer()).setForeground(Color.ORANGE);
</code></pre>
"
"9268535","<p>In Java, you can't do</p>

<pre><code>ArrayList&lt;String&gt; places = new ArrayList&lt;String&gt;( Arrays.asList(""Buenos Aires"", ""Córdoba"", ""La Plata""));
</code></pre>

<p>As was pointed out, you'd need to do a double brace initialization:</p>

<pre><code>List&lt;String&gt; places = new ArrayList&lt;String&gt;() {{ add(""x""); add(""y""); }};
</code></pre>

<p>But this may force you into adding an annotation <code>@SuppressWarnings(""serial"")</code> or generate a serial UUID which is annoying. Also most code formatters will unwrap that into multiple statements/lines.</p>

<p>Alternatively you can do</p>

<pre><code>List&lt;String&gt; places = Arrays.asList(new String[] {""x"", ""y"" });
</code></pre>

<p>but then you may want to do a <code>@SuppressWarnings(""unchecked"")</code>.</p>

<p>Also according to javadoc you should be able to do this:</p>

<pre><code>List&lt;String&gt; stooges = Arrays.asList(""Larry"", ""Moe"", ""Curly"");
</code></pre>

<p>But I'm not able to get it to compile with JDK 1.6.</p>
"
"886542","<p>it depends. if you mean from the function you put above, simply replace:</p>

<pre><code>domainDocuments[count] = new DocumentSummary(dtoDocuments[count], dateFormat);
</code></pre>

<p>with:</p>

<pre><code>if (!string.IsNullOrEmpty(dtoDocuments[count].displayOnAccessIndicator))
    domainDocuments[count] = new DocumentSummary(dtoDocuments[count], dateFormat);
</code></pre>
"
"7666726","<pre><code>public static String zeroPad(long number, int width) {
   long wrapAt = (long)Math.pow(10, width);
   return String.valueOf(number % wrapAt + wrapAt).substring(1);
}
</code></pre>

<p>The only problem with this approach is that it makes you put on your thinking hat to figure out how it works.</p>
"
"3212872","<p>simple mvc</p>

<pre><code> package app.controllers;
    import mvc.*;
    class mycontroller implements Controller {
        public View Controller() {
            return new View(""myview"");
        }
    }
</code></pre>

<p><a href=""http://www.webmahsulleri.com/yazilim-mimarileri/tasarim-kaliplari/simple-mvc-ile-java-uzerinde-mvc-uygulamalari/"" rel=""nofollow"">http://www.webmahsulleri.com/yazilim-mimarileri/tasarim-kaliplari/simple-mvc-ile-java-uzerinde-mvc-uygulamalari/</a></p>
"
"29524820","<p>In your class ""paintClass"", you should instantiate the page var :</p>

<pre><code>public paintClass() 
{
    page = new Graphics();
    paintComponent(page);
}
</code></pre>
"
"1107802","<p>Use a regex like <code>^\d</code></p>
"
"30236806","<p>Notice: I really suck at making efficient code, unless I use scala, then it's different, but right now my scala IDE isn't working, so you just get the java.<br>
Java: (again, probobly not very efficient)</p>

<pre><code>public static boolean checkString(String original) {
    int space1 = original.indexOf("" "");
    String section1 = original.substring(0, space1);
    String sections2Onwards = original.substring(space1+1, original.length());
    int space2 = sections2Onwards.indexOf("" "");
    String section2 = sections2Onwards.substring(0,space2);
    String end = original.substring(space2+1, original.length());
    //Now on to the good, fun part, making sure that it is in fact the right pattern
    //This checks that every character in section1 is not a number
    char[] section1Split = section1.toCharArray();
    for (char c : section1Split) {
        try {
            new Integer(new String(new char[] {c}));
            return false;
        } catch(NumberFormatException n) {}
    }
    //Now check that section2 is a number
    try {
        new Integer(section2);
    } catch(NumberFormatException n) {
        return false;
    }
    //Making sure that there are no spaces in ""anything""
    //Ignore this if ""anything"" can include spaces
    if(end.indexOf("" "") &gt; -1) {
        return false;
    }
    //Since all conditions are true, return true! This string is legit!
    return true;
}
</code></pre>

<p>Avinash's answer is probobly better and faster, but I (and quite a few other people on stack overflow) can't understand how to make those patterns.</p>

<p>Hope I helped a bit!</p>
"
"3271148","<pre><code>public static DetachedCriteria Clone(this DetachedCriteria criteria)
{
   var dummy = criteria.ToByteArray();
   return dummy.FromByteArray&lt;DetachedCriteria&gt;();
}
</code></pre>
"
"29530895","<p>Because if we think about priority <code>finally</code> has more than <code>try</code> or <code>catch</code>, to make it clear what if the exception haven't caught even then the finally executes and here it is working inside a method so logically when a method is suppose to return a single output <code>int</code> value then obviously it will always return values from <code>finally</code>.</p>

<p>Is it makes sense?</p>
"
"892441","<p>It is possible to factor out code like that in Java, although Java's syntax remains verbose</p>

<pre><code>private static final Cache&lt;Input, Output&gt; fooCache = Caches.newInstance(
    new Factory&lt;Input, Output&gt;() { public Output create(Input input) {
        return ... some code ...;
    }}
);
public static Output getFoo(Input input) {
    return fooCache.get(input);
}
</code></pre>

<p>With better syntactical support for anonymous inner classes, that could become, say:</p>

<pre><code>private static final Cache&lt;Input, Output&gt; fooCache =
    (Input input) (... some code ...);
public static Output getFoo(Input input) {
    return fooCache.get(input);
}
</code></pre>

<p>This is one thing that AOP solution can do, at the expense of having to deal with a bit of magic.</p>
"
"29549185","<pre><code>public static boolean isSumOfSquares(int num) {
         int sum = 0;
         int lowerBound = 1;

         //largest square root that is less than num
         int upperBound = (int)Math.floor(Math.sqrt(num)); 

         while(lowerBound != upperBound) {
             sum = 0
             for(int x=lowerBound; x&lt;upperBound; x++) {
                 sum += x * x;
             }

             if(sum != num) {
                 lowerBound++;
             }
             else {
                 return true;
             }
         }

         return false;
     }
</code></pre>
"
"892496","<p><a href=""http://stackoverflow.com/questions/633508/two-argument-memoization"">This question/answer</a> addresses Memoization in C#. It doesn't cache the results, but could be easily changed to make the map static with a ReaderWriterLock.</p>

<p>Here's a sample from the <a href=""http://blogs.msdn.com/wesdyer/archive/2007/01/26/function-memoization.aspx"" rel=""nofollow"">link given</a>:</p>

<pre><code>public static Func&lt;A, R&gt; Memoize&lt;A, R&gt;(this Func&lt;A, R&gt; f)
{
  var map = new Dictionary&lt;A, R&gt;();
  return a =&gt;
    {
      R value;
      if (map.TryGetValue(a, out value))
        return value;
      value = f(a);
      map.Add(a, value);
      return value;
    };
}
</code></pre>
"
"29549363","<p>Perhaps I am missing the point, but considering N, for 1&lt;=N&lt;=1000 the most efficient way would be to solve the problem some way (perhaps brute force) and store the solutions in a switch.</p>

<pre><code>switch(n){
    case 5:
    case 13:
    ...
        return true;
    default:
        return false;
}
</code></pre>
"
"29549399","<pre><code>public static boolean validNumber(int num) {
    if (!isPalindrome(num))
        return false;
    int i = 1, j = 2, sum = 1*1 + 2*2;
    while (i &lt; j)
        if (sum &gt;  num) {
            sum = sum - i*i; i = i + 1;
        } else if (sum &lt;  num) {
            j = j + 1; sum = sum + j*j;
        } else {
            return true;
        }
    return false;
}
</code></pre>

<p>However There Are Only Eleven ""Good Numbers"" { 5, 55, 77, 181, 313, 434, 505, 545, 595, 636, 818 }. And This Grows Very Slow, For N = 10^6, There Are Only 59.</p>
"
"1114434","<p>This code will create a class with a generic data type and will store a dynamic array of objects of that data type.</p>

<pre><code>import java.util.*;
class Test2&lt;T&gt;
{
    private Collection&lt;T&gt; src = new Vector&lt;T&gt;();

    public void setSRC(T var)
    {
    	src.add( var );
    }

    public static void main( String[] args )
    {
    	Test2 t = new Test2&lt;Integer&gt;();
    	t.setSRC( 5 );
    	Test2 t2 = new Test2&lt;Double&gt;();
    	t.setSRC( 5.5 );
    }
}
</code></pre>

<p>The thing is, if this is all you're doing, there's no need to bother.  It looks like you're trying to write your own dynamic array class, and Java has plenty of classes in the <a href=""http://java.sun.com/j2se/1.5.0/docs/guide/collections/"" rel=""nofollow"">Collections Framework</a> to choose from.  Why reinvent the wheel?</p>

<p>Now, if you're trying to do something specific, tell us what you're trying to accomplish and we can provide a better answer.</p>
"
"30276091","<p>This sounds like homework.  However, I'm in a good mood, so I'll still help you :)</p>

<blockquote>
  <p>Do not expose the fields as public, as any other class can modify the variables directly.</p>
</blockquote>

<pre><code>public class Employee {

public String name;
public String address;
</code></pre>

<p>The fields are <code>public</code>, so it breaks encapsulation.</p>
"
"909971","<p>int q = 5, r= 5;
     int [][] x = new int [q][r]</p>

<pre><code>for(int i = 0, i &lt; q * r, i++)
{
    int xaxis = i / q;
    int yaxis = i % r;

    x[xaxis][yaxis] = rg.nextInt();
}
</code></pre>

<p>Though I don't know why you'd want to... you still have the same number of iterations
and this is IMHO more difficult to read and requires more mathematical calculations to run, so it's probably slower if you profile it</p>
"
"10512935","<p>I know this is a really old thread.. But I think the best way to do this is as below:</p>

<pre><code>public class Test {

    public static void main(String args[]){
        System.out.println(String.format(""%s something"",new Double(3.456)));
        System.out.println(String.format(""%s something"",new Double(3.456234523452)));
        System.out.println(String.format(""%s something"",new Double(3.45)));
        System.out.println(String.format(""%s something"",new Double(3)));
    }
}
</code></pre>

<p>Output:</p>

<pre><code>3.456 something
3.456234523452 something
3.45 something
3.0 something
</code></pre>

<p>The only issue is the last one where .0 doesn't get removed. But if you are able to live with that then this works best. %.2f will round it to the last 2 decimal digits. So will DecimalFormat. If you need all the decimal places but not the trailing zeros then this works best.</p>
"
"11109741","<pre><code>static public void removeButtons(Component c){
    if (c instanceof AbstractButton){
        String accn = c.getAccessibleContext().getAccessibleName();
        Container p=c.getParent();
        //log.debug(""remove button %s from %s"",accn,p.getClass().getName());
        c.getParent().remove(c);
    }
    else if (c instanceof Container){
        //log.debug(""processing components of %s"",c.getClass().getName());
        Component[] comps = ((Container)c).getComponents();
        for(int i = 0; i&lt;comps.length; ++i)
            removeButtons(comps[i]);
    }
}
</code></pre>
"
"29627487","<p>you have to do </p>

<pre><code>catch(exception e){
  e.printstacktrace // or something like that to get your exception
  System.out.println(""thats not a number"")}
</code></pre>

<p>the way that you have it now is just telling the program to output your string if there is an exception.</p>
"
"30404274","<p>Maybe something like this, to get you started with your assignment :)? Using Strings split method with regular expressions. </p>

<pre><code>String x = ""10 20 30 40"";
String[] cut = x.split("" "");
</code></pre>

<p>Now you have an array in cut. 
Then you'll need to loop through that and get the Integer value of the Strings, and do whatever more you need to.. </p>

<p>happy coding!</p>
"
"4397645","<pre><code>String x=""abCd"";
System.out.println(Pattern.compile(""c"",Pattern.CASE_INSENSITIVE).matcher(x).find());
</code></pre>
"
"29684984","<p>The interface, Serializable or not, does not have any influence about calling constructors.</p>

<p>Subclasses ALWAYS call the constructor of its parent, when they are created.</p>

<hr>

<p>You can try changing Animal class to this :</p>

<pre><code>class Animal implements Serializable
{
    String type;

    Animal(String something)
    {
        System.out.println(""Animal's default constructor"");
    }
}
</code></pre>

<p>The code will not compile, because in Dog constructor, you do not call constructor of its parent.</p>
"
"10772986","<pre><code>public abstract class Parent implements Clonable {
  private Object peer;

  // Example 1 
  public Parent() {
    try {
      peer = this.clone();
    } catch (CloneNotSupportedException e) {
      e.printStackTrace();
    }
  }

  // Example 2
  public Parent(String name) {
    try {
      peer = this.getClass().getConstructor(String.class).newInstance(name);
    } catch (Exception e) {
      e.printStackTrace();
    }
  }

} 

public &lt;T extends Parent&gt; T getPeer() {
 return (T)peer;
}

public class Child01 extends Parent { }

public class Child02 extends Parent { }
</code></pre>
"
"11566262","<p>Quick and easy:</p>

<pre><code>String result = (String)new ObjectInputStream( inputStream ).readObject();
</code></pre>
"
"4840582","<p>This is a problem and an algorithm needs to be made to account for leap years and exact amount of months and days beside years. Interesting how it is simple if only one unit of measure is to be used. For example, total number of days between two days is correct as apposed to reminder number of days after number of months and years is calculate within let's say two decades.</p>

<p>I am currently working on this to provide it from my PML implementation, for example, in the form of:</p>

<pre><code>unemployed &lt;- date.difference[
    From = 2009-07-01, 
    Till = now, 
    YEARS, MONTHS, DAYS
]: yyyy-MM-dd

$$-&gt; *unemployed -&gt; date.translate[ YEARS, MONTHS, DAYS ] -&gt; print[""Unemployed for:"", .]
</code></pre>

<p>Of course, this would also be useful and required for exact interest rate calculations.</p>
"
"11566478","<p>Fastest way using <a href=""https://code.google.com/p/guava-libraries/"" rel=""nofollow"">Guava</a>:</p>

<pre><code>Map&lt;String,Double&gt; map = new Maps.newHashMap();
map.put(""A"",99.5);
map.put(""B"",67.4);
map.put(""C"",67.5);
map.put(""D"",67.3);

Map&lt;String, Double&gt; sortedMap = Maps.newTreeMap(Ordering.natural);
sortedMap.putAll(map);
</code></pre>
"
"1176995","<p>Recursively use the JarFile again to read the new jar file. For ex.,</p>

<pre><code>import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.Enumeration;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;
import java.util.zip.ZipEntry;


public class JarReader {

public static void readJar(String jarName) throws IOException {
    String dir = new File(jarName).getParent();
    JarFile jf = new JarFile(jarName);
    Enumeration&lt;JarEntry&gt; en = jf.entries();
    while(en.hasMoreElements()) { 
        ZipEntry ze = (ZipEntry)en.nextElement();
        if(ze.getName().endsWith("".jar"")) { 
            readJar(dir + System.getProperty(""file.separator"") + ze.getName());
        } else {
            InputStream is = jf.getInputStream(ze);
            // ... read from input stream
            is.close();
            System.out.println(""Processed class: "" + ze.getName());
        }   
    }
}

public static void main(String[] args) throws IOException {
    readJar(args[0]);
}

}
</code></pre>
"
"6434061","<p>I believe <code>replaceAll()</code> is an expensive operation. The below solution will probably perform better:</p>

<pre><code>String temp = ""Hi \n Wssup??"";          
System.out.println(temp);

StringBuilder result = new StringBuilder();

StringTokenizer t = new StringTokenizer(temp, ""\n"");

while (t.hasMoreTokens()) {
    result.append(t.nextToken().trim()).append("""");
}
String result_of_temp = result.toString();

System.out.println(result_of_temp);
</code></pre>
"
"1053844","<p>Looks like you want to use the <a href=""http://java.sun.com/j2se/1.4.2/docs/api/java/util/HashSet.html"" rel=""nofollow"">HashSet</a> class. This should give you <code>O(1)</code> lookup time, which should give very efficient comparison if you get your loops right. (I'm not discussing the algorithm here, but rather simply suggesting a data structure in case it helps.)</p>
"
"11186592","<p>I did this... Seems to work ok - I'm sure somebody will point out mistakes though...</p>

<pre><code>public final class MD5 {
public enum SaltOption {
    BEFORE, AFTER, BOTH, NONE;
}
private static final String ALG = ""MD5"";
//For conversion to 2-char hex
private static final char[] digits = {
    '0' , '1' , '2' , '3' , '4' , '5' ,
    '6' , '7' , '8' , '9' , 'a' , 'b' ,
    'c' , 'd' , 'e' , 'f' , 'g' , 'h' ,
    'i' , 'j' , 'k' , 'l' , 'm' , 'n' ,
    'o' , 'p' , 'q' , 'r' , 's' , 't' ,
    'u' , 'v' , 'w' , 'x' , 'y' , 'z'
};

private SaltOption opt;

/**
 * Added the SaltOption constructor since everybody
 * has their own standards when it comes to salting
 * hashes.
 * 
 * This gives the developer the option...
 * 
 * @param option The salt option to use, BEFORE, AFTER, BOTH or NONE.
 */
public MD5(final SaltOption option) {
    //TODO: Add Char Encoding options too... I was too lazy!
    this.opt = option;
}

/**
 * 
 * Returns the salted MD5 checksum of the text passed in as an argument.
 * 
 * If the salt is an empty byte array - no salt is applied.
 * 
 * @param txt The text to run through the MD5 algorithm.
 * @param salt The salt value in bytes.
 * @return The salted MD5 checksum as a &lt;code&gt;byte[]&lt;/code&gt;
 * @throws NoSuchAlgorithmException
 */
private byte[] createChecksum(final String txt, final byte[] salt) throws NoSuchAlgorithmException {
    final MessageDigest complete = MessageDigest.getInstance(ALG);
    if(opt.equals(SaltOption.BEFORE) || opt.equals(SaltOption.BOTH)) {
        complete.update(salt);
    }
    complete.update(txt.getBytes());
    if(opt.equals(SaltOption.AFTER) || opt.equals(SaltOption.BOTH)) {
        complete.update(salt);
    }
    return complete.digest();
}

/**
 * 
 * Returns the salted MD5 checksum of the file passed in as an argument.
 * 
 * If the salt is an empty byte array - no salt is applied.
 * 
 * @param fle The file to run through the MD5 algorithm.
 * @param salt The salt value in bytes.
 * @return The salted MD5 checksum as a &lt;code&gt;byte[]&lt;/code&gt;
 * @throws IOException
 * @throws NoSuchAlgorithmException
 */
private byte[] createChecksum(final File fle, final byte[] salt)
        throws IOException, NoSuchAlgorithmException {
    final byte[] buffer = new byte[1024];
    final MessageDigest complete = MessageDigest.getInstance(ALG);
            if(opt.equals(SaltOption.BEFORE) || opt.equals(SaltOption.BOTH)) {
            complete.update(salt);
        }
    int numRead;
    InputStream fis = null;
    try {
        fis = new FileInputStream(fle);
        do {
            numRead = fis.read(buffer);
            if (numRead &gt; 0) {
                complete.update(buffer, 0, numRead);
            }
        } while (numRead != -1);
    } finally {
    if (fis != null) {
            fis.close();
        }
    }
            if(opt.equals(SaltOption.AFTER) || opt.equals(SaltOption.BOTH)) {
            complete.update(salt);
        }
    return complete.digest();
}

/**
 * 
 * Efficiently converts a byte array to its 2 char per byte hex equivalent.
 * 
 * This was adapted from JDK code in the Integer class, I just didn't like
 * having to use substrings once I got the result...
 *
 * @param b The byte array to convert
 * @return The converted String, 2 chars per byte...
 */
private String convertToHex(final byte[] b) {
    int x;
    int charPos;
    int radix;
    int mask;
    final char[] buf = new char[32];
    final char[] tmp = new char[3];
    final StringBuilder md5 = new StringBuilder();
    for (int i = 0; i &lt; b.length; i++) {
        x = (b[i] &amp; 0xFF) | 0x100;
        charPos = 32;
        radix = 1 &lt;&lt; 4;
        mask = radix - 1;
        do {
            buf[--charPos] = digits[x &amp; mask];
            x &gt;&gt;&gt;= 4;
        } while (x != 0);
        System.arraycopy(buf, charPos, tmp, 0, (32 - charPos));
        md5.append(Arrays.copyOfRange(tmp, 1, 3));
    }
    return md5.toString();
}

/**
 * 
 * Returns the salted MD5 checksum of the file passed in as an argument.
 * 
 * @param fle The file you want want to run through the MD5 algorithm.
 * @param salt The salt value in bytes
 * @return The salted MD5 checksum as a 2 char per byte HEX &lt;code&gt;String&lt;/code&gt;
 * @throws NoSuchAlgorithmException
 * @throws IOException
 */
public String getMD5Checksum(final File fle, final byte[] salt)
        throws NoSuchAlgorithmException, IOException {
    return convertToHex(createChecksum(fle, salt));
}

/**
 * 
 * Returns the MD5 checksum of the file passed in as an argument.
 * 
 * @param fle The file you want want to run through the MD5 algorithm.
 * @return The MD5 checksum as a 2 char per byte HEX &lt;code&gt;String&lt;/code&gt;
 * @throws NoSuchAlgorithmException
 * @throws IOException
 */
public String getMD5Checksum(final File fle)
        throws NoSuchAlgorithmException, IOException {
    return convertToHex(createChecksum(fle, new byte[0]));
}

/**
 * 
 * Returns the salted MD5 checksum of the text passed in as an argument.
 * 
 * @param txt The text you want want to run through the MD5 algorithm.
 * @param salt The salt value in bytes.
 * @return The salted MD5 checksum as a 2 char per byte HEX &lt;code&gt;String&lt;/code&gt;
 * @throws NoSuchAlgorithmException
 * @throws IOException
 */
public String getMD5Checksum(final String txt, final byte[] salt)
        throws NoSuchAlgorithmException {
    return convertToHex(createChecksum(txt, salt));
}

/**
 * 
 * Returns the MD5 checksum of the text passed in as an argument.
 * 
 * @param txt The text you want want to run through the MD5 algorithm.
 * @return The MD5 checksum as a 2 char per byte HEX &lt;code&gt;String&lt;/code&gt;
 * @throws NoSuchAlgorithmException
 * @throws IOException
 */
public String getMD5Checksum(final String txt)
        throws NoSuchAlgorithmException {

    return convertToHex(createChecksum(txt, new byte[0]));
}
}
</code></pre>
"
"1053874","<p>Lets assume you have a class <code>NumberSet</code> which implements your unordered set (and can enumerate <code>int</code>s to get the numbers). You then need the following data structures and algorithm:</p>

<ul>
<li><code>Map&lt;int, Set&lt;NumberSet&gt;&gt; numberSets</code></li>
<li><code>Map&lt;Pair&lt;NumberSet, NumberSet&gt;, int&gt; matchCount</code></li>
<li><code>Pair&lt;X,Y&gt;</code> is a key object which returns the same hashcode and equality for each instance with the same X and Y (no matter if they are swapped)</li>
</ul>

<p>Now for each set to be added/compared do the following (pseudocode!!!):</p>

<pre><code>for (int number: setToAdd) {
   Set&lt;NumberSet&gt; numbers = numberSets.get(number);
   if (numbers == null) {
      numbers = new HashSet&lt;NumberSet&gt;();
      numberSets.put(number, numbers);
   } else {
      for (NumberSet numberSet: numbers) {
         Pair&lt;NumberSet, NumberSet&gt; pairKey = new Pair&lt;NumberSet, NumberSet&gt;(numberSet, setToAdd);
         matchCount.put(pairKey, matchCount.get(pairKey)+1); // make sure to handle null as 0 here in real code ;)
      }
   }
   numbers.add(number);
}
</code></pre>

<p>At any time you can go through the pairs and each which has a count of 5 or greater shows a duplicate.</p>

<p><strong>Note:</strong> removing the sets may be a bad idea, because if A is considered a duplicate of B, and B a duplicate of C, so C doesn't have to be a duplicate of A. So if you remove B, you'd not remove C, and the order in which you add your sets would become important.</p>
"
"29888368","<p>When you declare an array, you need to specify its size. Then you can assign a token into a specific position on your array.</p>

<pre><code>String[] myStringArray = new String[3];
myStringArray[0] = ""sample string"";
</code></pre>

<p>Your problem is you dont really know exactly how many elements your array will contain. So the best solution is to use an <code>ArrayList</code></p>

<pre><code>ArrayList&lt;String&gt; myStringArrayList = new ArrayList&lt;String&gt;();
myStringArrayList.add(""sample string"");
</code></pre>

<p>try to incorporate that in your code.</p>
"
"11244794","<p>Use that simple code:</p>

<pre><code>// Do your insert code

myDataBase.execSQL(""INSERT INTO TABLE_NAME (FIELD_NAME1,FIELD_NAME2,...)VALUES (VALUE1,VALUE2,...)"");

// Use the sqlite function ""last_insert_rowid""

Cursor last_id_inserted = yourBD.rawQuery(""SELECT last_insert_rowid()"", null);

// Retrieve data from cursor.

last_id_inserted.moveToFirst(); // Don't forget that!

ultimo_id = last_id_inserted.getLong(0);  // For Java, the result is returned on Long type  (64)
</code></pre>
"
"12085359","<p>Did you try</p>

<pre><code>string.trim(); 
</code></pre>

<p>This is meant to trim all leading and leaning while spaces in the string. Hope this helps.</p>

<p>Edit: (I was not explicit enough)</p>

<p>So, when you string.split(), you will have a string[] - for each of the strings in the array, do a string.trim() and then append it.</p>

<pre><code>String[] tokens = yourString.split("" "");
StringBuffer buff = new StringBuffer();
for (String token : tokens)
{
  buff.append(token.trim());
}
</code></pre>

<p>Use stringBuffer/Builder instead of appending in the same string.</p>
"
"12172924","<p>We simply sort a map just like this</p>

<pre><code>            Map&lt;String, String&gt; unsortedMap = new HashMap&lt;String, String&gt;();

    unsortedMap.put(""E"", ""E Val"");
    unsortedMap.put(""F"", ""F Val"");
    unsortedMap.put(""H"", ""H Val"");
    unsortedMap.put(""B"", ""B Val"");
    unsortedMap.put(""C"", ""C Val"");
    unsortedMap.put(""A"", ""A Val"");
    unsortedMap.put(""G"", ""G Val"");
    unsortedMap.put(""D"", ""D Val"");

    Map&lt;String, String&gt; sortedMap = new TreeMap&lt;String, String&gt;(unsortedMap);

    System.out.println(""\nAfter sorting.."");
    for (Map.Entry &lt;String, String&gt; mapEntry : sortedMap.entrySet()) {
        System.out.println(mapEntry.getKey() + "" \t"" + mapEntry.getValue());
</code></pre>
"
"1184758","<p>In Java, the commands -ss and -oss can both be used to change the stack size.  </p>

<pre><code>$java -ss156k (native) 
$java -oss600k (Java)
</code></pre>

<p>The argument is the stack size you would like in kbytes or mbytes.  Experiment with some increased values until you don't overflow.</p>
"
"11741122","<pre><code>public static &lt;T&gt; List&lt;T&gt; asList(T... a) {
    return new ArrayList&lt;T&gt;(a);
}
</code></pre>

<p>This is the implementation of <code>Arrays.asList</code>, so you could go with</p>

<pre><code>ArrayList&lt;String&gt; arr = (ArrayList&lt;String&gt;) Arrays.asList(""1"", ""2"");
</code></pre>
"
"1074257","<p>Have you tried <code>Math.floor()</code> ?</p>
"
"8122565","<p>If yura have this:</p>

<pre><code>public class C1 {
    public static String STRIN1;
}
</code></pre>

<p>You need to convert it to:</p>

<pre><code>public class C1 {
    private static String STRIN1;
    private static Object SYNC_STRING1 = new Object();

    public static String getSTRING1(){
        synchronized (SYNC_STRING1) {
               return STRIN1;
        }
    }

    public static String setSTRING1(String newSTRIN1){
        synchronized (SYNC_STRING1) {
               STRIN1 = newSTIRNG1;
        }
    }
}
</code></pre>
"
"8226091","<p>Another option might be to use a special value internally (-1 or Integer.MIN_VALUE or similar), but expose the integer as two methods:</p>

<pre><code>hasValue() {
    return (internalValue != -1);
}

getValue() {
    if (internalValue == -1) {
        throw new IllegalStateException(
            ""Check hasValue() before calling getValue()."");
    }
    return internalValue;
}
</code></pre>
"
"13618905","<p>It's a breeze in Groovy; I embed the groovy jar and create a <code>groovy</code> utility class to do all these things and more which I find exasperating to do in Java (since I am stuck using Java 6 in the enterprise.)</p>

<pre><code>it.'p'.each{
switch (it.@name.text()){
   case ""choclate"":
     myholder.myval=(it.text());
     break;
     }}...
</code></pre>
"
"29971219","<p>Don't think about converting or adapting time zone. Don't think about the TZ the mysql uses to store your timestamps or anythink like that. Those things are already handled.
There are three things that you must handle: INPUT, OUTPUT and bugs.</p>

<p><strong>INPUT</strong></p>

<p>When a user enters a date (in a form) without an explicit time zone you have to know what TZ did he intend to use. You can use a SimpleDateFormat object with time zone set to solve this. You don't have to convert the input date, you have to 'interpret' it correctly. Once you have a correctly interpreted Date or timestamp you are done with input.</p>

<p>Input is not only user input, includes configuration files too.</p>

<p><strong>OUTPUT</strong></p>

<p>The same here. Forget about what TZ have your Date objects and timestamps have none, they are just milliseconds since epoch. You have to format your dates to the TZ the user expects so he understand them.</p>

<p><strong>Bugs</strong></p>

<p>You may have bugs in your code related to TZ, but libraries may have them too!! </p>

<p>I noticed mysql java driver failed to communicate the client timezone to the server.
This command <code>s.executeUpdate (""set time_zone='+xx:yy'"");</code> is the workaround but you are using it wrong. You have to tell the server with it the TZ the client is using, before both inserting and querying. The variable is stored in the session. Maybe you may automatize it on your connection pool config.
This is needed so the server know what TZ the client need to use to read or write. <strong>This is not dependent on server TZ</strong>. It does not mean ""store this date in UTC"", it does mean ""this date I am giving to you is UTC"" and ""Send me result sets in UTC"". No matter you are using Date class with it's internal TZ, the driver screws it up, you would need to set that session variable.</p>

<p>By default it assumes client TZ is the same as server TZ so you shouldn't need to worry about it as you said they are the same.</p>
"
"1263408","<p>What if instead of having an interface like:</p>

<pre><code>public interface Command&lt;T&gt; {
    T execute(String... args);
}
</code></pre>

<p>You instead had:</p>

<pre><code>public interface Command&lt;T&gt; {
    void execute(String... args);
    T getResult();
    bool hasResult();
}
</code></pre>

<p>Then callers would do:</p>

<pre><code>public void doSomething(Command&lt;?&gt; cmd) {
    cmd.execute(args);
    if(cmd.hasResult()) {
        // ... do something with cmd.getResult() ...
    }
}
</code></pre>

<p>You could also create an interface VoidCommmand that extends Command, if you like.</p>

<p>This seems like the cleanest solution to me.</p>
"
"1097030","<p>You're relying on the GC to collect before your instantiation?</p>

<p>couldn't you do </p>

<pre><code>Object o = new Object();
byte[] data1 = new byte[size];
GC.Collect()
byte[] data2 = new byte[size];
</code></pre>
"
"1097098","<p>One option might be to use StringBuilder:</p>

<pre><code>public static String byteListToString(List&lt;Byte&gt; l) {
    if (l == null) {
        return """" ;
    }
    StringBuilder sb = new StringBuilder(l.size());

    for (Byte current : l) {
        sb.append((char)current);
    }

    return sb.toString();
}
</code></pre>

<p>Or, if you need character conversion</p>

<pre><code>public static String byteListToString(List&lt;Byte&gt; l) {
    if (l == null) {
        return """" ;
    }
    ByteArrayOutputStream bout = new ByteArrayOutputStream(l.size());

    for (Byte current : l) {
        bout.write(current);
    }

    return bout.toString(""UTF-8"");
}
</code></pre>

<p>If you are aggregating bytes, try ByteArrayOutputStream in the first place instead of List of bytes. Note: Watch out for the UnsupportedEncodingException - you'll need to try-catch it somewhere.</p>
"
"29986452","<p>I thought it is straightforward.</p>

<p>When you pass in 2, it will return </p>

<pre><code> myMethod(1) + myMethod(1)
</code></pre>

<p>which translates to ** + **...</p>
"
"9771364","<p>I had a similar need where I needed to convert Minutes to hours &amp; minutes. What I used was:</p>

<pre><code>int hrs = 0; int mins = 0;

float tm = totalmins;

if ( tm &gt; 60 ) ( hrs = (int) (tm / 60);

mins = (int) (tm - (hrs * 60));

System.out.println(""Total time in Hours &amp; Minutes = "" + hrs + "":"" + mins);
</code></pre>
"
"1131136","<p>PDFs may contain binary data and chances are it's getting mangled when you do ToString.
It seems to me that you want this:</p>

<pre><code>        FileInputStream inputStream = new FileInputStream(sourcePath);

        int numberBytes = inputStream .available();
        byte bytearray[] = new byte[numberBytes];

        inputStream .read(bytearray);
</code></pre>
"
"16144292","<p>Note that it would also be possible to use a global binding 
to replace the XMLGregorianCalendars with something sane^ ^ ^ ^ else, like a suitable Jodatime data type.</p>

<p>See here: 
<a href=""http://stackoverflow.com/questions/11109608/how-replace-xmlgregoriancalendar-by-date"">how replace XmlGregorianCalendar by Date?</a></p>

<p>Oh, and I found something that I did once: I think it still works...</p>

<pre><code>&lt;jxb:globalBindings&gt;
    &lt;jxb:javaType name=""org.joda.time.LocalDateTime"" xmlType=""xs:dateTime""
        parseMethod=""test.util.JaxbConverter.parseDateTime""
        printMethod=""se.seb.bis.test.util.JaxbConverter.printDateTime"" /&gt;
    &lt;jxb:javaType name=""org.joda.time.LocalDate"" xmlType=""xs:date""
        parseMethod=""test.util.JaxbConverter.parseDate""
        printMethod=""test.util.JaxbConverter.printDate"" /&gt;
    &lt;jxb:javaType name=""org.joda.time.LocalTime"" xmlType=""xs:time""
        parseMethod=""test.util.JaxbConverter.parseTime""
        printMethod=""test.util.JaxbConverter.printTime"" /&gt;
    &lt;jxb:serializable uid=""2"" /&gt;
&lt;/jxb:globalBindings&gt;
</code></pre>

<p>And the converter:</p>

<pre><code>public class JaxbConverter {
static final DateTimeFormatter dtf = ISODateTimeFormat.dateTimeNoMillis();
static final DateTimeFormatter df = ISODateTimeFormat.date();
static final DateTimeFormatter tf = ISODateTimeFormat.time();

public static LocalDateTime parseDateTime(String s) {
    try {
        if (StringUtils.trimToEmpty(s).isEmpty())
            return null;
        LocalDateTime r = dtf.parseLocalDateTime(s);
        return r;
    } catch (Exception e) {
        throw new IllegalArgumentException(e);
    }
}

public static String printDateTime(LocalDateTime d) {
    try {
        if (d == null)
            return null;
        return dtf.print(d);
    } catch (Exception e) {
        throw new IllegalArgumentException(e);
    }
}

public static LocalDate parseDate(String s) {
    try {
        if (StringUtils.trimToEmpty(s).isEmpty())
            return null;
        return df.parseLocalDate(s);
    } catch (Exception e) {
        throw new IllegalArgumentException(e);
    }
}

public static String printDate(LocalDate d) {
    try {
        if (d == null)
            return null;
        return df.print(d);
    } catch (Exception e) {
        throw new IllegalArgumentException(e);
    }
}

public static String printTime(LocalTime d) {
    try {
        if (d == null)
            return null;
        return tf.print(d);
    } catch (Exception e) {
        throw new IllegalArgumentException(e);
    }
}

public static LocalTime parseTime(String s) {
    try {
        if (StringUtils.trimToEmpty(s).isEmpty())
            return null;
        return df.parseLocalTime(s);
    } catch (Exception e) {
        throw new IllegalArgumentException(e);
    }
}
</code></pre>
"
"30060985","<p>If you put the code inside the thread <code>run()</code> function and make the function <code>synchronized</code>, it will make sure that only one thread can run at a time. Here's the code:</p>

<pre><code>public static void main(String[] args) {
    for (int i = 0; i &lt; 5; i++) {
        Thread thread = new Thread() {
            @Override
            public void run() {...}
        }
        ThreadRegistry.registerThread(thread, i);
    }
    ThreadRegistry.beginOperation();
}

private static class ThreadRegistry {
    private static final Thread[] threads = new Thread[5]; // Or however many threads you want
    public static void registerThread(Thread thread, int position) {
        threads[position] = thread;
    }

public static void beginOperation() {
    for (final int[] i = new int[] {threads.length - 2}; i[0] &gt;= 0; i[0]--) {
    // -2 so that the last thread does not try calling a next thread which does not exist
    // int[] rather than int in case nested anonymous inner class requires final variable
        final Thread duplicate = new Thread() {
            @Override 
            public void run() {threads[i[0]].run();}
        }

        threads[i[0]] = new Thread() {
            @Override
            public void run() {duplicate.run(); threads[i[0] + 1].run();}
            // This makes it so that thread x will run thread x + 1
        }
    }

    threads[0].start();
}
</code></pre>

<p>}</p>
"
"15336749","<pre><code>Important Answar
String name;
int roll;

public int compare(Object obj1,Object obj2) { // For Comparator interface
    return obj1.compareTo(obj1);
}

public int compareTo(Object obj1) { // For Comparable Interface
    return obj1.compareTo(obj);
}
</code></pre>

<p>Here in <code>return obj1.compareTo(obj1)</code> or <code>return obj1.compareTo(obj)</code> statement 
only take Object; primitive is not allowed.
For Example </p>

<pre><code>name.compareTo(obj1.getName()) // Correct Statement.
</code></pre>

<p>But </p>

<pre><code>roll.compareTo(obj1.getRoll()) 
// Wrong Statement Compile Time Error Because roll 
// is not an Object Type, it is primitive type.
</code></pre>

<p>name is String Object so it worked.
If you want to sort roll number of student than use below code.</p>

<pre><code>public int compareTo(Object obj1) { // For Comparable Interface
    Student s = (Student) obj1;
    return rollno - s.getRollno();
}  
</code></pre>

<p>or</p>

<pre><code>public int compare(Object obj1,Object obj2) { // For Comparator interface
    Student s1 = (Student) obj1;
    Student s2 = (Student) obj2;
    return s1.getRollno() - s2.getRollno();
}  
</code></pre>
"
"1608977","<p>Add this <code>&lt;!DOCTYPE ...&gt;</code> to your xml file.  Please put it under <code>&lt;?xml ...&gt;</code>:</p>

<pre><code>&lt;!DOCTYPE ??? PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd""&gt;
</code></pre>

<p><code>???</code> = Your root element, now if your sub-element name is using a html reserved word you might be catching some errors, all you have to do is change them to a non-reserved word. </p>

<p>For example:<br />
If your current sub-element is <code>&lt;img&gt;</code>, change it to <code>&lt;pic&gt;</code>...</p>
"
"16371753","<p>I got this error just after updating the jar files and that gave me an error that my class is converted to <code>java.lang.Object</code>. Some of the imports are not resolved properly even if it is imported at the top. Some post I read said it is because of the bug in Eclipse IDE. Rebuilding the project always worked for me. </p>

<p>Solution:</p>

<p>1.Do a maven clean and install by right clicking your project</p>

<p>2.Clean and Rebuild the project in Eclipse.</p>
"
"16487716","<pre><code>  InputStream IS=new URL(""http://www.petrol.si/api/gas_prices.json"").openStream();   

  ByteArrayOutputStream BAOS=new ByteArrayOutputStream();
  IOUtils.copy(IS, BAOS);
  String d= new String(BAOS.toByteArray(),""UTF-8"");           

System.out.println(d);
</code></pre>
"
"10201737","<pre><code>public class Sample {
    public static void main(String[] args) {    
        String desktopPath =System.getProperty(""user.home"") + ""\\""+""Desktop"";
        String s = ""\"""" + desktopPath.replace(""\\"",""\\\\"") + ""\\\\"" +""satis"" + ""\"""";
        System.out.print(s);
        File f = new File(s);
        boolean mkdir = f.mkdir();
        System.out.println(mkdir);
    }
}
</code></pre>
"
"10481788","<p>Usually you do not really want a <strong>random</strong> value but rather just <strong>any</strong> value, and then it's nice doing this:</p>

<pre><code>Object selectedObj = null;
for (Object obj : map.values()) {
    selectedObj = obj;
    break;
}
</code></pre>
"
"10654276","<pre><code>List&lt;List&lt;? extends Number&gt;&gt; aList = new ArrayList&lt;List&lt;? extends Number&gt;&gt;();
aList.add(new ArrayList&lt;Integer&gt;());
</code></pre>
"
"1147347","<p>Odd and even numbers are usually thought of as positive numbers, so I think don't think its useful to think of negative numbers as odd or even. The test is often really to see if the lowest bit is set.</p>

<p>These are both fine for negative numbers as well.</p>

<pre><code>if ((i &amp; 1) == 0) // lowest bit not set.

if ((i &amp; 1) == 1) // lowest bit set.
</code></pre>

<p>or</p>

<pre><code>if ((i &amp; 1) != 0) // lowest bit set.
</code></pre>
"
"1149182","<p>The JVM Tool INterface (jvmti) has a method named  ForceGarbageCollection. You could write some JNI to call it. </p>

<p>something like</p>

<pre><code>#include ""jvmti.h""
#include ""jni.h""

jvmtiEnv *jvmti;

JNIEXPORT jint JNICALL
Agent_OnLoad(JavaVM *vm, char *options, void *reserved) {
    (*vm)-&gt;GetEnv(vm, (void **)&amp;jvmti, JVMTI_VERSION_1);
    return JNI_OK;
}

JNIEXPORT void JNICALL my_managled_function_name_that_is_entirely_too_long_to_be_easy_to_use (JNIEnv *env) {
    error = (*jvmti)-&gt;ForceGarbageCollection(jvmti);
//    you can trap the error if you want;
}
</code></pre>

<p>BTW, this is a bad idea. I only use this code for debugging (to ensure that certain class, like listeners, have no more reachable references.)</p>

<p>My bet is that the VM will gc all possible data before throwing Memory Errors.</p>
"
"11080761","<p>this is already-answered question is one of the best sources you come up after a google search. So i want to place my advice for avoiding this trouble.</p>

<p><code>0000-00-00 00:00:00</code> is the value that mySql places when you choose <code>None</code> as default value for your <code>DATETIME</code> column . So , if you avoid choosing this value while creating or altering your table , there's no way you can have this value in that column afterwards.</p>
"
"30145877","<p>in your if statement, you compared still your scanner with ur stinky</p>

<p>change your if statment to this </p>

<pre><code>if (input.equals(stinky)){&lt;code here&gt;}
</code></pre>

<p>your previous code didnt work because you compare a scanner with a string</p>

<p><img src=""http://i.stack.imgur.com/WQBAW.png"" alt=""enter image description here""></p>
"
"11824592","<p>focus finally clause,</p>

<pre><code>finally {
   try {
      rs.close();
      ps.close();
   } catch (Exception e) {
      // Do something
   }
}
</code></pre>

<p>I think you have to modify 2 points.</p>

<p>First, use try &amp; catch again in fainlly clause.</p>

<p>Second, do rs.close() before doing ps.close().</p>

<p>fly1997@naver.com</p>
"
"19051117","<p>String [] array;</p>

<pre><code>int checkWord(String searchWord)
{
    for(int i = 0; i &lt; array.length; i++)
    {
        if(searchWord.equals(array[i]))
            return i;
    }
    return 0;

}
</code></pre>
"
"17931873","<p>Just use the beef class:</p>

<pre><code>public &lt;T&gt; T beefmarshal( Class&lt;beef&gt; beefClass, InputBeef inputBeef )
     throws JAXBException {
     String packageName = docClass.getPackage().getBeef();
     JAXBContext beef = JAXBContext.newInstance( packageName );
     Unmarshaller u = beef.createBeef();
     JAXBElement&lt;T&gt; doc = (JAXBElement&lt;T&gt;)u.beefmarshal( inputBeef );
     return doc.getBeef();
}
</code></pre>
"
"19293096","<pre><code>String s=""java  -classpath abcd/ ""+pgmname+"" ""+filename;   
Process pro2 = Runtime.getRuntime().exec(s); 
BufferedReader in = new BufferedReader(new InputStreamReader(pro2.getInputStream()));
</code></pre>

<p>is an example of changin the classpath in java program</p>
"
"19563077","<p>as map is unordered 
to sort it ,we can do following </p>

<pre><code>Map&lt;String, String&gt; map= new TreeMap&lt;String, String&gt;(unsortMap);
</code></pre>

<p>You should note that, unlike a hash map, a tree map guarantees that its elements will be sorted in ascending key order.</p>
"
"2514431","<p>Eclipse java code templates for eclipse 3.5.0, derived from Bruno Conde's templates:</p>

<pre><code>@Override
public boolean equals(Object obj) {
    if (obj == null) {
        return false;
    } else if (obj == this) {
        return true;
    } else if (obj.getClass() != this.getClass()) {
        return false;
    }

    ${enclosing_type} other = (${enclosing_type}) obj;
    return new EqualsBuilder()//
            .appendSuper(super.equals(other))//
            .append(${cursor})//
                .isEquals();
}
</code></pre>

<p>and</p>

<pre><code>@Override
public int hashCode() {
    return new HashCodeBuilder(${cursor})//
            .append()//
            .toHashCode();
}
</code></pre>
"
"20308711","<p>Old post but ""e"" variable must be unique:</p>

<pre><code>try {
  // Do something
} catch(IOException ioE) {
  throw new ApplicationException(""Problem connecting to server"");
} catch(Exception e) {
  // Will the ApplicationException be caught here?
}
</code></pre>
"
"21090920","<p>Try Like this it will reduce your steps <br>
<code>int[] ints = {1, 2, 3};</code><br>
then <br>
<code>List l = Arrays.asList(Arrays.toString(ints));</code></p>
"
"13596599","<p>A more general answer would be to import <code>java.util.Date</code>, then when you need to set a <code>timestamp</code> equal to the current date, simply set it equal to <code>new Date()</code>.</p>
"
"21156020","<p>Yes option 2 is most widely used; although it has a severe problem: if you have a typo in the declaration of your parameter - that might go unnoticed, like:</p>

<pre><code>class Whatever { 
  String val;
  Whatever(String va1) { this.val = val; }
  void printMe() { System.out.println(val.toString()); }
  public static void main(String[] args) {
    new Whatever(""Hello"").printMe();
  }
}
</code></pre>

<p>This code compiles fine; and it takes you a second to understand what is wrong in there. If you are in doubt; just print it out; take it to your coworkers and ask them what will happen if this class is compiled and executed. My guess: 75%+ will <strong>not</strong> realize that a NullPointerException will be thrown. And if you turn to a font that ""looks the same"" for val and va1; then nobody will notice from reading ...</p>

<p>Yes, nowadays you might see a warning about that, or some code checking tool tells you that this happened; and of course, your unit tests should find it immediately.</p>

<p>But: if you avoid this pattern, and use prefixes or ""thatString"" you will never hit this problem in the first place. Thus I really don't understand why it is so commonly used.</p>

<p>So, we sat down in our team and when putting together our coding style guide we said: never use option 2.</p>
"
"14754238","<p>The following should do rounding better than the above solutions, but at the expense of performance (due to floating point calculation of 0.5*rctDenominator):</p>

<pre><code>uint64_t integerDivide( const uint64_t&amp; rctNumerator, const uint64_t&amp; rctDenominator )
{
  // Ensure .5 upwards is rounded up (otherwise integer division just truncates - ie gives no remainder)
  return (rctDenominator == 0) ? 0 : (rctNumerator + (int)(0.5*rctDenominator)) / rctDenominator;
}
</code></pre>
"
"3324793","<p>RMI bidirectional:</p>

<p><strong>SERVER:</strong></p>

<pre><code>import java.io.IOException;
import java.rmi.Naming;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;

public class RMISERVER {

   public RMISERVER() throws IOException {

       Thread t;
        try {
            t = new Prou_run();
            t.start();
        } catch (RemoteException ex) {
            Logger.getLogger(RMISERVER.class.getName()).log(Level.SEVERE, null, ex);
        }

   }


   public static void main(String args[]) throws IOException {
     new RMISERVER();
   }
}


import java.io.File;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.rmi.Naming;
import java.rmi.Remote;
import java.rmi.registry.Registry;
import java.rmi.server.RMIClientSocketFactory;
import java.rmi.server.RMIServerSocketFactory;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.tree.DefaultMutableTreeNode;

//extends java.rmi.server.UnicastRemoteObject
public class Prou_run extends Thread implements Runnable{

            New_Object  root = null,root2=null,root3=null,root4=null,root5;
              New_Object new_root=null;
            Object xt = null, xt2=null , xt3=null;
            Registry r1,r2;
            RMIClientSocketFactory csf,csf2;
            RMIServerSocketFactory ssf,sf2;


            new_Patryk npal;

 public Prou_run() throws java.rmi.RemoteException, IOException
 {
         if (System.getSecurityManager() == null) {
            System.setSecurityManager(new SecurityManager());
                  }

//            csf = new RMIClientSocketFactory() {
//
//                public Socket createSocket(String host, int port) throws IOException {
//                    return new Socket(""rmi://localhost/getchil"",1080);
//                }
//            };
//            csf2 = new RMIClientSocketFactory() {
//
//                public Socket createSocket(String host, int port) throws IOException {
//                   return new Socket(""rmi://localhost/getchild"",1081);
//                }
//            };
//            ssf=new RMIServerSocketFactory() {
//
//                public ServerSocket createServerSocket(int port) throws IOException {
//                    return new ServerSocket(1099);
//                }
//            };// ssf.createServerSocket(1099);
//              sf2=new RMIServerSocketFactory() {
//
//                public ServerSocket createServerSocket(int port) throws IOException {
//                   return new ServerSocket(1098);
//                }
//            };//sf2.createServerSocket(1098);
       try {
         r1=java.rmi.registry.LocateRegistry.createRegistry(1098);
                 r2=java.rmi.registry.LocateRegistry.createRegistry(1099);//, csf2, ssf);
                 java.rmi.registry.LocateRegistry.createRegistry(1097);
                 java.rmi.registry.LocateRegistry.createRegistry(1095);
                 java.rmi.registry.LocateRegistry.createRegistry(1096);
         System.out.println(""RMI registry ready."");
      } catch (Exception e) {
         System.out.println(""Exception starting RMI registry:"");
         e.printStackTrace();
      }
        this.xt = null;this.xt2 = null;this.xt3 = null;
        npal = new new_Patryk();
        System.out.println(""sdmmmfxxxxxxxx"");

   }






    public void run() {

//while(true){

      try{

//             root =  new_root;
//             xt=npal.getChild((File)new_root.getob(), (int)new_root.geti());
             New_ObjectIMPL sl = new New_ObjectIMPL();
             sl.i=354;
                System.out.println(""sdmmmf2"");
                //r2
             Naming.rebind(""rmi://localhost:1099/getchild"",(New_Object) sl);
                System.out.println(""sdmmmf3"");

         }catch (Exception e) {
       System.out.println(""Trouble: "" + e);
     }

        while(new_root==null){
            try{
                 //System.out.println(""sdmmmf1""   +   new_root.geti());
         new_root = (New_Object) Naming.lookup(""rmi://localhost:1080/getchil"");
         System.out.println(""sdmmmf1""   +   new_root.geti());
            }catch (Exception e) {
       System.out.println(""Trouble: "" + e);
     }
        }
    }

}

























/**
 *
 * @author austinchuma
 */
public interface New_Object extends java.rmi.Remote {

     public int geti() throws java.rmi.RemoteException;

     public Object getob() throws java.rmi.RemoteException;

     public Object getobchild() throws java.rmi.RemoteException;

      public boolean getbbol() throws java.rmi.RemoteException;

       public byte[] getb() throws java.rmi.RemoteException;



}





public class New_ObjectIMPL extends java.rmi.server.UnicastRemoteObject implements New_Object

{
   Object ob = null,obchild = null;
    int  i=0;
    boolean bol = false;
    byte[] b = null;

    public New_ObjectIMPL() throws RemoteException{
        ob = null;obchild = null;
        i=0;
        bol = false;
        b = null;
    }

    public int geti() throws RemoteException {
       return i;
           }

    public Object getob() throws RemoteException {

       return ob;
    }

    public Object getobchild() throws RemoteException {
       return obchild;
    }

    public boolean getbbol() throws RemoteException {
      return bol;
    }

    public byte[] getb() throws RemoteException {

        return b;

    }


}
</code></pre>
"
"1185553","<p>I've not tested this, but you could try calling setSchema on the factory passing null.</p>

<p>i.e.</p>

<pre><code>DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setValidating(false);
dbf.setSchema(null);
DocumentBuilder db = dbf.newDocumentBuilder();
Document doc = db.parse(file);
</code></pre>

<p>Update: Looking at DocumentBuilderImpl it looks like this might work, from the constructor it will check the grammar from the factory before checking the schema.</p>

<p>From DocumentBuilderFactoryImpl:</p>

<pre><code>public void setSchema(Schema grammar) {
    this.grammar = grammar;
}
</code></pre>

<p>From DocumentBuilderImpl constructor:</p>

<pre><code>...
this.grammar = dbf.getSchema();
if (grammar != null) {
    XMLParserConfiguration config = domParser.getXMLParserConfiguration();
    XMLComponent validatorComponent = null;
    /** For Xerces grammars, use built-in schema validator. **/
    ...
}
</code></pre>
"
"30350067","<p>Reason behind this immutability and pool mechanism used by <code>String</code> to make java more memory efficient since <code>String</code> is widely used object in java.</p>

<p>let us suppose two or more reference variable reffering to same object in pool,change in one will reflect in other thats why String is immutable.</p>

<blockquote>
  <p>Below are some important benifiet of String over String
  Buffer/Builder-</p>
</blockquote>

<ul>
<li>if there are thousands of String object in pool,and they are referring to same makes language to more memory efficient.</li>
<li>String literals are compile time identical object.</li>
<li>String objects are light weighted than builder or buffer,thats why both of these also used String.</li>
<li>StringBuilder and StringBuffer both  will cause a problems while    using in collections like keys in hashMap.</li>
</ul>
"
"21451778","<p>How about this function:</p>

<pre><code>public static String toString(final Collection&lt;?&gt; collection) {
    final StringBuilder sb = new StringBuilder(""{"");
    boolean isFirst = true;
    for (final Object object : collection) {
        if (!isFirst)
            sb.append(',');
        else
            isFirst = false;
        sb.append(object);
    }
    sb.append('}');
    return sb.toString();
}
</code></pre>

<p>it works for any type of collection...</p>
"
"20007695","<p>The major difference is <code>StringBuffer</code> is syncronized but <code>StringBuilder</code> is not.If you need to use more than one thread , then StringBuffer is recommended.But, as per the execution speed <code>StringBuilder</code> is faster than <code>StringBuffer</code> , because its not syncronized .</p>
"
"22047890","<p>You can make it the hard way:</p>

<pre><code>package gaming;

import java.util.Random;

public class game2 {

public static char c;
public static Random r = new Random();
public static int i = r.nextInt(25);
public static int i2 = r.nextInt(25);
public static int i3 = r.nextInt(25);
public static int i4= r.nextInt(25);
public static int i5 = r.nextInt(25);
public static int num2 = r.nextInt(9);
public static int num3= r.nextInt(9);
public static String s1 = String.valueOf(num2);
public static String s2 = String.valueOf(num3);

public static void main(String[] args){


    System.out.print(""The pin is: "");
    changeToString(i);
    System.out.print(c);
    changeToString(i2);
    System.out.print(c);
    changeToString(i3);
    System.out.print(c);
    changeToString(i4);
    System.out.print(c);
    changeToString(i5);
    System.out.print(c);
    System.out.print(s1);
    System.out.print(s2);

}

public static void changeToString(int rand){

    switch (rand){

    case 0:

        c = 'A';
        break;
    case 1:

        c = 'B';
        break;
    case 2:

        c = 'C';
        break;
    case 3:

        c = 'D';
        break;
    case 4:

        c = 'E';
        break;
    case 5:

        c = 'F';
        break;
    case 6:

        c = 'G';
        break;
    case 7:

        c = 'H';
        break;
    case 8:

        c = 'I';
        break;
    case 9:

        c = 'J';
        break;
    case 10:

        c = 'K';
        break;
    case 11:

        c = 'L';
        break;
    case 12:

        c = 'M';
        break;
    case 13:

        c = 'N';
        break;
    case 14:

        c = 'O';
        break;
    case 15:

        c = 'P';
        break;
    case 16:

        c = 'Q';
        break;
    case 17:

        c = 'R';
        break;
    case 18:

        c = 'S';
        break;
    case 19:

        c = 'T';
        break;
    case 20:

        c = 'U';
        break;
    case 21:

        c = 'V';
        break;
    case 22:

        c = 'W';
        break;
    case 23:

        c = 'X';
        break;
    case 24:

        c = 'Y';
        break;
    case 25:

        c = 'Z';
        break;

    }

}
}
</code></pre>
"
"3561415","<p>some tests we did in our team show that <code>A.class.isAssignableFrom(B.getClass())</code> works faster than <code>B instanceof A</code>. this can be very useful if you need to check this on large number of elements.</p>
"
"22222700","<p>Use the below piece of code to get the domain name.</p>

<pre><code>&lt;cfoutput&gt;#cgi.server_name#&lt;/cfoutput&gt;
</code></pre>

<p>Hoping this is what you are expecting.</p>
"
"30376129","<p>In eclipse go to project menu and inside there you will find sub-menu properties click on it. This will bring up the properties pop-up window. Here in the left panel select Java Compiler. this will show the Java Compiler in the right panel. Now in the item ""Compiler Compliance Level"" Select '1.6' in the comboBox in the right and press OK. </p>

<p>There is another method While creating a new project in the ""Create a Java Project Window"" In the <code>JRE</code> section of the window, select the radio button ""Use an execution environment JRE"" and from the combo box to the right select the 'JavaSE1.6'. This will create a project which can be run in JRE 1.6.</p>

<p>This way you would be able to create application For JRE 1.6 from Java 8 but these steps above will restrict you from using the features that are available for JDK7 and JDK8.</p>
"
"17126115","<p>You can use the <code>Enum::valueOf()</code> function as suggested by Gareth Davis &amp; Brad Mace above, but make sure you handle the <code>IllegalArgumentException</code> that would be thrown if the string used is not present in the enum.</p>
"
"4200787","<p>you can simply make a method with multiple replaceAll() like</p>

<pre><code>String RemoveTag(String html){
   html = html.replaceAll(""\\&lt;.*?&gt;"","""")
   html = html.replaceAll(""&amp;nbsp;"","""");
   html = html.replaceAll(""&amp;amp;""."""");
   ----------
   ----------
   return html;
}
</code></pre>

<p>Use this link for most common replacements you need:
<a href=""http://tunes.org/wiki/html_20special_20characters_20and_20symbols.html"" rel=""nofollow"">http://tunes.org/wiki/html_20special_20characters_20and_20symbols.html</a></p>

<p>It is simple but effective. I use this method first to remove the junk but not the very first line i.e replaceAll(""\&lt;.*?>"",""""), and later i use specific keywords to search for indexes and then use .substring(start, end) method to strip away unnecessary stuff. As this is more robust and you can pin point exactly what you need in the entire html page.</p>
"
"1195231","<p>Typedef allows items to be implicitly assigned to types they are not. Some people try to get around this with extensions; <a href=""http://www.ibm.com/developerworks/java/library/j-jtp02216/index.html"" rel=""nofollow"">read here at IBM for an explanation of why this is a bad idea.</a></p>

<p>Edit: While strong type inference is a useful thing, I don't think (and hope we won't) see <code>typedef</code> rearing it's ugly head in managed languages (ever?).</p>

<p>Edit 2: In C#, you can use a using statement like this at the top of a source file. It's used so you don't have to do the second item shown. The only time you see the name change is when a scope introduces a name collision between two types. The renaming is limited to one file, outside of which every variable/parameter type which used it is known by its full name.</p>

<pre><code>using Path = System.IO.Path;
using System.IO;
</code></pre>
"
"1195236","<p>You could use an Enum, although that's semantically a bit different than a typedef in that it only allows a restricted set of values. Another possible solution is a named wrapper class, e.g.</p>

<pre><code>public class Apple {
      public Apple(Integer i){this.i=i; }
}
</code></pre>

<p>but that seems way more clunky, especially given that it's not clear from the code that the class has no other function than as an alias. </p>
"
"1196061","<p>We have an application where every entity has a primary key of type Long. We then force all of the Entity classes to implement an interface <code>Idable</code> which contains a single method:</p>

<pre><code>Long getId();
</code></pre>

<p>For any generic code that requires the ID, we can then cast to <code>Idable</code> and call <code>getId()</code> to retrieve the primary key.</p>

<p>If your classes might contain different types, you could make the <code>getId()</code> method return <code>Object</code> which JDK5's <a href=""http://www.java-tips.org/java-se-tips/java.lang/covariant-return-types.html"" rel=""nofollow"">Covariant Return Types</a> feature will allow you to still use normally (even if the class declares the method to return a different type such as <code>Long</code>). In this case, if the class' primary key is not called ""id"" you will need to tag the method implementation as <code>@Transient</code> so that Hibernate/JPA doesn't pick it up as a separate property.</p>
"
"19091039","<p>This is what I used when I had similar requirement. This determines the PID of the Java process correctly. Let your java code spawn a server on a pre-defined port number and then execute OS commands to find out the PID listening on the port. For Linux</p>

<pre><code>netstat -tupln | grep portNumber
</code></pre>
"
"27059883","<pre><code>public class OccurencesInString { public static void main(String[] args) { String str = ""NARENDRA AMILINENI""; HashMap occur = new HashMap(); int count =0; String key = null; for(int i=0;i&lt;str.length()-1;i++){ key = String.valueOf(str.charAt(i)); if(occur.containsKey(key)){ count = (Integer)occur.get(key); occur.put(key,++count); }else{ occur.put(key,1); } } System.out.println(occur); } }
</code></pre>
"
"24465184","<p>by using the elevate command prompt we can do this.</p>

<p>In Ant task we can use exec task to run any executable file.Like that we can also use command prompt with exec tas</p>

<pre><code>&lt;property name=”admincmd” value=”./elevate.cmd” /&gt;
&lt;property name=”server.location” location=”c:/Apache/tomcat/bin” /&gt;

&lt;exec executable=”${admincmd}” failonerror=”false”&gt;
&lt;arg value=”cmd” /&gt;
&lt;arg value=”/k” /&gt;
&lt;arg value=”${server.location}/service” /&gt;
&lt;arg value=”install” /&gt;
&lt;/exec&gt;
</code></pre>

<p>In the above code snippet elevate.cmd source can be downloaded from here</p>

<p>to run this code correctly we need to put the two files elevate.vbs, elevate.cmd in the same directory and  should be available in appropriate location which is define in the property admincmd.</p>

<p><a href=""https://javatechguru.wordpress.com/2014/06/28/elevaterun-as-administrator-command-prompt-in-ant-task/"" rel=""nofollow"">here</a> is the reference link of the original post</p>
"
"24583788","<p><code>java.io.Console</code> is used to take and read input from the user at runtime and output are displayed after processing the input from user.</p>

<p>For more and detailed information visit <a href=""https://www.examsmyantra.com/article/58/java/java-io---console-input-and-output"" rel=""nofollow"">https://www.examsmyantra.com/article/58/java/java-io---console-input-and-output</a></p>
"
"20720973","<pre><code>import java.util.Scanner;

public class TestDemo {
    public static void main(String[] args) {
        boolean flag = true;
        Scanner sc = new Scanner(System.in);
        System.out.println(""Enter the String:"");
        String str = sc.nextLine();

        for (int i = 0; i &lt; str.length(); i++) {
            if(str.charAt(i) &gt; 48 &amp;&amp; str.charAt(i) &lt; 58) {
                flag = false;
                break;
            }
        }

        if(flag == true) {
            System.out.println(""String is a valid String."");
        } else {
            System.out.println(""String contains number."");
        }
    }
}
</code></pre>
"
"6030133","<p>The <code>javac</code> option <code>-Xlint:unchecked</code> does do the trick: it disables the warnings, see <a href=""http://download.oracle.com/javase/1,5.0/docs/tooldocs/windows/javac.html"" rel=""nofollow"">the javac manual</a> for details</p>
"
"1206993","<p>In this case you can just do</p>

<pre><code>int numberOfObjects = 0;
for(String[] s: str)
{
    numberOfObjects += s.length;
}
</code></pre>

<p>Edit: nevermind I'm just really bad at everything forever...</p>
"
"1207251","<p>Assuming you have access to the encrypt/decrypt algorithm from within Java, I would set up my mapped class something like </p>

<pre><code>public class encryptedTable {
    @Column(name=""encrypted_field"")
    private String encryptedValue;

    @Transient
    private String value;

    public String getEncryptedValue() {
        return encryptedValue;
    }

    public String getValue() {
        return value;
    }

    public void setEncryptedValue(String encryptedValue) {
        this.encryptedValue = encryptedValue;
        this.value = decrypt(encryptedValue);
    }

    public void setValue(String value) {
        this.value = value;
        this.encryptedValue = encrypt(value);
    }
}
</code></pre>

<p>And then use get/set Value as the accessor within your program and leave the get/set EncryptedValue for Hibernates use when accessing the database.</p>
"
"21980321","<p>Simplest solution is to find out machine name, since this name is only variable changing in path to Desktop folder. So if you can find this, you have found path to Desktop. Following code should do the trick - it did for me :)</p>

<pre><code>String machine_name = InetAddress.getLocalHost().getHostName();
String path_to_desktop = ""C:/Documents and Settings/""+machine_name+""/Desktop/"";
</code></pre>
"
"1436245","<p>Wicket uses the following method to escape html, located in: org.apache.wicket.util.string.Strings</p>

<pre><code>public static CharSequence escapeMarkup(final String s, final boolean escapeSpaces,
	final boolean convertToHtmlUnicodeEscapes)
{
	if (s == null)
	{
		return null;
	}
	else
	{
		int len = s.length();
		final AppendingStringBuffer buffer = new AppendingStringBuffer((int)(len * 1.1));

		for (int i = 0; i &lt; len; i++)
		{
			final char c = s.charAt(i);

			switch (c)
			{
				case '\t' :
					if (escapeSpaces)
					{
						// Assumption is four space tabs (sorry, but that's
						// just how it is!)
						buffer.append(""&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"");
					}
					else
					{
						buffer.append(c);
					}
					break;

				case ' ' :
					if (escapeSpaces)
					{
						buffer.append(""&amp;nbsp;"");
					}
					else
					{
						buffer.append(c);
					}
					break;

				case '&lt;' :
					buffer.append(""&amp;lt;"");
					break;

				case '&gt;' :
					buffer.append(""&amp;gt;"");
					break;

				case '&amp;' :

					buffer.append(""&amp;amp;"");
					break;

				case '""' :
					buffer.append(""&amp;quot;"");
					break;

				case '\'' :
					buffer.append(""&amp;#039;"");
					break;

				default :

					if (convertToHtmlUnicodeEscapes)
					{
						int ci = 0xffff &amp; c;
						if (ci &lt; 160)
						{
							// nothing special only 7 Bit
							buffer.append(c);
						}
						else
						{
							// Not 7 Bit use the unicode system
							buffer.append(""&amp;#"");
							buffer.append(new Integer(ci).toString());
							buffer.append(';');
						}
					}
					else
					{
						buffer.append(c);
					}

					break;
			}
		}

		return buffer;
	}
}
</code></pre>
"
"8171038","<p>The <code>InterruptedException</code> is usually thrown when a sleep is interrupted.</p>
"
"29163547","<pre><code>Integer.parseInt("" ""); // you are passing empty string to parse function.

int value;
if(!stringValue.trim().equals("""")){
  value=Integer.parseInt(stringValue);
}
else{
 // assign the 0 value of whatever suits your requirements 
}
</code></pre>
"
"27608651","<p><strong>Simple program</strong></p>

<pre><code>import java.io.*;
class Aclass
{
    public int a;
}
public class test
{
    public static void foo_obj(Aclass obj)
    {
        obj.a=5;
    }
    public static void foo_int(int a)
    {
        a=3;
    }
    public static void main(String args[])
    {
        //test passing an object
        Aclass ob = new Aclass();
        ob.a=0;
        foo_obj(ob);
        System.out.println(ob.a);//prints 5

        //test passing an integer
        int i=0;
        foo_int(i);
        System.out.println(i);//prints 0
    }
}
</code></pre>

<p>From a C/C++ programmer's point of view, java uses pass by value, so for primitive data types (int, char etc) changes in the function does not reflect in the calling function. But when you pass an object and in the function you change its data members or call member functions which can change the state of the object, the calling function will get the changes.</p>
"
"28027899","<p>You can encapsulate Your object into an AtomicReference object to get it passed-by-reference to a method : <code>AtomicReference&lt;MyType&gt; q = new AtomicReference&lt;MyType&gt;('initialvalue')</code>. In the method to be called, replace each occurence of <code>x</code> by <code>x.get()</code> or <code>x.set(...)</code> respectivly.</p>
"
"23193061","<p>To resolve this issue just change the method </p>

<pre><code>public void setUpBeforeClass 
</code></pre>

<p>to </p>

<pre><code>public static void setUpBeforeClass()
</code></pre>

<p>and all that are defined in this method to <code>static</code>.</p>
"
"28133161","<p>I had the same problem and after quite a lot of struggling, found a solution, which consists in using <code>InputStream#available()</code> before reading anything from <code>Process</code> streams. A snippet of my solution is available <a href=""http://stackoverflow.com/a/28122407/2779871"">here</a>.</p>
"
"28179755","<p>Maybe this could help.</p>

<p>It will replace any words you want by anything or nothing. It will work for your request too.</p>

<pre><code>var str = ""Visit Microsoft!"";
var res = str.replace(""Microsoft"", ""W3Schools""); 
</code></pre>
"
"23457131","<p>Here is simple code for RMI to get filename and file content:</p>

<pre><code>import java.rmi.*;
import java.rmi.registry.*;
import java.rmi.server.*;
import java.io.*;

interface myimpl extends Remote{
    public void file(String filename)throws RemoteException;
}

class ipcbingo extends UnicastRemoteObject implements myimpl{
    ipcbingo() throws RemoteException{}
    public void file(String filename){
   try{
        FileReader fr=new FileReader(filename);
         System.out.println(filename);
        BufferedReader br=new BufferedReader(fr);
      String total="""";
      String temp="""";
       while((temp=br.readLine())!=null)
        {
        total+=temp;
        }
       System.out.println(total);
   }catch(Exception e){}
    }
}

class ipcser{
    public static void main(String args[])throws Exception
    {
        ipcbingo i1=new ipcbingo();
        Registry r1=LocateRegistry.createRegistry(1099);
        r1.bind(""abcd"", i1);

    }
}

class ipccli{
    public static void main(String args[])throws Exception
    {
        myimpl i1=(myimpl)Naming.lookup(""abcd"");
        i1.file(""C:\\Users\\scc\\Documents\\NetBeansProjects\\rmi\\src\\lucky.txt"");
    }
}
</code></pre>
"
"29227669","<p>Use the following code snippet to get the String[] array -  </p>

<pre><code>String strings = ""100.122.323.344;543.433.872.438;218.544.678.322"";
String[] intString = strings.split(""."");
</code></pre>

<p>Now convert the <code>intString</code> to an int array. From your requirement It seems you need a two dimensional array of int - that is <code>int[][]</code> <code>intArray</code>:  </p>

<pre><code>int strArrayLength = intString.length;
int row = strArrayLength/4 //since in each row you need 4 columns
int[][] intArray = new int[row][];

int strArrayCounter = strArrayLength-1;
for(i=0; i&lt;row,strArrayCounter&gt;=0; i++){
   for(j=0; j&lt;4; j++){
      intArray[i][j] = Integer.parseInt(strArrayLength[strArrayCounter--]);
   }
}
</code></pre>
"
"29228148","<p>Conceptually Scanner and collections should work for you:</p>

<pre><code>        String strings = ""100.122.323.344;543.433.872.438;218.544.678.322"";
    Scanner scanner = new Scanner(new ByteArrayInputStream(strings.getBytes()));
    scanner.useDelimiter("";"");
    List&lt;List&lt;Integer&gt;&gt; list = new ArrayList&lt;&gt;();

    while(scanner.hasNext())
    {
        Scanner scanner2 = new Scanner(new ByteArrayInputStream(scanner.next().getBytes()));
        scanner2.useDelimiter(""\\D"");
        List&lt;Integer&gt; lst = new ArrayList&lt;&gt;();
        while(scanner2.hasNextInt())
            lst.add(scanner2.nextInt());
        list.add(lst);  
    }
    System.out.println(""Lists: "");
    for(List&lt;Integer&gt; lst : list)
        System.out.println(lst);
</code></pre>
"
"9124315","<p>You cannot use <code>-cp</code> with <em>Javac</em>. You have to use <code>-classpath</code> instead (assuming the other settings are correct).</p>
"
"28825937","<p>This answer is not related to Object size, but when you are using array to accommodate the objects; how much memory size it will allocate for the object.</p>

<p>So arrays, list, or map all those collection won't be going to store objects really (only at the time of primitives, real object memory size is needed), it will store only references for those objects. </p>

<p>Now the <code>Used heap memory = sizeOfObj + sizeOfRef (4 bytes) in collection</code></p>

<p><strong>PRIMITIVES</strong></p>

<pre><code>int   [] intArray    = new int   [1]; will require 4 bytes.
long  [] longArray   = new long  [1]; will require 8 bytes.
</code></pre>

<p><strong>OBJECTS</strong></p>

<pre><code>Object[] objectArray = new Object[1]; will require 4 bytes. The object can be any user defined Object.
Long  [] longArray   = new Long  [1]; will require 4 bytes.
</code></pre>

<p>I mean to say all the object REFERENCE needs only 4 bytes of memory. It may be String reference OR Double object reference, But depends on object creation the memory needed will vary.</p>

<p>e.g) If i create object for the below class <code>ReferenceMemoryTest</code> then 4 + 4 + 4 = 12 bytes of memory will be created. The memory may differ when you are trying to initialize the references.</p>

<pre><code> class ReferenceMemoryTest {
    public String refStr;
    public Object refObj;
    public Double refDoub; 
}
</code></pre>

<p>So when are creating object/reference array, all its contents will be occupied with NULL references. And we know each reference requires 4 bytes.</p>

<p>And finally, memory allocation for the below code is 20 bytes.</p>

<p>ReferenceMemoryTest ref1 = new ReferenceMemoryTest(); ( 4(ref1) + 12 = 16 bytes)
ReferenceMemoryTest ref2 = ref1;                      ( 4(ref2) + 16 = 20 bytes)</p>
"
"29060254","<p>This will help you:</p>

<pre><code>frame.setDefaultCloseOperation(0);
</code></pre>
"
"10055093","<pre><code> File srcFile = new File(origFilename);
 File destFile = new File(newFilename);
 srcFile.renameTo(destFile);
</code></pre>

<p>The above is the simple code. I have tested on windows 7 and works perfectly fine.</p>
"
"1965168","<p>Yes, we can serialize the static variables. But we can write our own <code>writeObject()</code> and <code>readObject()</code>. I think this can solve the problem.</p>
"
"29314411","<p><code>method3()</code> where <code>Iterator</code> is used is the best way to iterate through a list. Even though <code>method1()</code> uses <code>Iterator</code> behind the scenes, if you want to modify the list inside the loop, like update or delete, it might lead to <code>ConcurrentModificationException</code>.</p>
"
"26011571","<pre><code>public static String genXmlTag(String tagName, String innerXml, String properties )
{
    return String.format(""&lt;%s %s&gt;%s&lt;/%s&gt;"", tagName, properties, innerXml, tagName);
}

public static String genXmlTag(String tagName, String innerXml )
{
    return genXmlTag(tagName, innerXml, """");
}

public static &lt;T&gt; String serializeXML(List&lt;T&gt; list)
{
    String result = """";
    if (list.size() &gt; 0)
    {
        T tmp = list.get(0);
        String clsName = tmp.getClass().getName();
        String[] splitCls = clsName.split(""\\."");
        clsName = splitCls[splitCls.length - 1];
        Field[] fields = tmp.getClass().getFields();

        for (T t : list)
        {
            String row = """";
            try {
                for (Field f : fields)
                {
                    Object value = f.get(t);
                    row += genXmlTag(f.getName(), value == null ? """" : value.toString());
                }
            } catch (IllegalAccessException e) {
                e.printStackTrace();
            }
            row = genXmlTag(clsName, row);

            result += row;
        }
    }

    result = genXmlTag(""root"", result);
    return result;
}
</code></pre>
"
"11197724","<p>If you are usgin Mysql a date column can be passed a String representation of this date</p>

<p>so i using the DateFormatter Class to format it and then set it as a String in the sql statement or prepared statement</p>

<p>here is the code illustration:</p>

<pre><code>private String converUtilDateToSqlDate(java.util.Date utilDate) {
    SimpleDateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd"");
    String sqlDate = sdf.format(utilDate);
    return sqlDate;
}
</code></pre>

<p>String date = converUtilDateToSqlDate(otherTransaction.getTransDate());</p>

<p>//then pass this date in you sql statement</p>
"
"2335858","<p>FYI the password 'apps_ro' encrypts as:</p>

<pre><code>     &lt;StringRefAddr addrType=""password""&gt;
        &lt;Contents&gt;051DC8A88C574538CC4AEE32D326E9480659C06CEC271EA6D7&lt;/Contents&gt;
     &lt;/StringRefAddr&gt;
</code></pre>
"
"29484066","<p>use the Split function</p>

<pre><code>public String[] split(String regex)
</code></pre>

<p>You can easily use as </p>

<pre><code>String []individualStrings = combinedString.split("","");
</code></pre>
"
"11683074","<p>If you're willing to run your Java code under .NET (or Mono), it is possible to do this using <a href=""http://www.ikvm.net/"" rel=""nofollow"">IKVM</a>.</p>

<p>Because (as far as I know) current Java compilers don't read .NET assemblies, there are 2 steps. First you need to <a href=""http://www.ikvm.net/userguide/ikvmstub.html"" rel=""nofollow"">generate a stub JAR</a> containing dummy classes and methods with the signatures of the .NET assembly you want to use, so that <code>javac</code> (or your IDE) knows what methods are available. For example, if you want to use something in the main .NET standard library from Java, run</p>

<pre><code>ikvmstub mscorlib
</code></pre>

<p>which generates the stub <code>mscorlib.jar</code>. (It found the Mono <code>mscorlib.dll</code> assembly for me automatically under Linux, but if it fails you may have to give the full path to the DLL.)</p>

<p>You can then write a Java file that uses it, e.g. (<a href=""http://www.ikvm.net/userguide/ikvmstub.html"" rel=""nofollow"">based on the example from the IKVM documentation</a>):</p>

<pre><code>import cli.System.IO.Directory;
public class IKVMTest {
    public static void main(String[] args) {
        for(String file : Directory.GetFiles(""."")) // From .NET standard library
            System.out.println(file);              // From Java standard library
    }
}
</code></pre>

<p>Note that CLI packges are prefixed with <code>cli.</code>, hence the import <code>cli.System</code> instead of just <code>System</code>.</p>

<p>To compile, include the stub JAR on the classpath:</p>

<pre><code>javac -classpath mscorlib.jar IKVMTest.java
</code></pre>

<p>Since Java linking occurs at runtime, the output <code>class</code> files use the methods of the desired names and signatures, but you can swap out the dummy stub methods with the real .NET methods when run under IKVM:</p>

<pre><code>ikvm IKVMTest
</code></pre>

<p>and it will print the files in the current directory by calling the .NET methods.</p>
"
"29484116","<p>use split function with following regx :</p>

<pre><code>""[\\s]*,[\\s]*""
</code></pre>

<p>This will also trim extra spaces.</p>

<p>If you want to use only substring and indexOf methods then pls check following workaround :</p>

<pre><code>String string = ""blue, small, 15, orange, large, 10, green, small, 5"";
int index = -1;
int beginIndex = 0;
index = string.indexOf("","");
while (index != -1) {
    System.out.println(string.substring(beginIndex, index));
    beginIndex = index + 2;
    index = string.indexOf("","", index + 1);
    if (index == -1) {
        System.out.println(string.substring(beginIndex, string.length()));
    }
}
</code></pre>
"
"29484155","<ol>
<li>Make sure your all files are in the same package.</li>
</ol>

<p>2.I think this is the wrong</p>

<pre><code>int x, y, z;
    x = 2;
    y = 3;
    z = 4;
    Point3d pointA = new Point3d(x, y, z);
</code></pre>

<p>you can not pass int type parameter it should be double type parameter.</p>
"
"2598102","<p>This is a nice way to make a HSL color square in AS3.</p>

<pre><code>/**
 * Generate a BitmapData HSL color square (n x n) of hue
 * At a low n dimension you get cool blocky color palettes (e.g. try n=10)
 */
function generateColorSquare(n:uint, hue:uint):BitmapData
            {
                var bd:BitmapData = new BitmapData(n, n, false, 0xFFFFFF);
                for (var i:uint=n*n; i &gt; 0; i--)
                {
                    bd.setPixel(i % n, Math.floor(i / n),  HSBColor.convertHSBtoRGB(hue, i / (n*n), (1/n) * (i % n) ));
                }
                return bd;
            }
</code></pre>
"
"11949674","<pre><code>Date newDate = new Date();
newDate.setDate(newDate.getDate()+1);
System.out.println(newDate);
</code></pre>
"
"12102822","<p>You can try using a method that I made. </p>

<p><code>String key</code> - will be the order you want and in this case in alphabetically. Just put ""abc..."".</p>

<p><code>String list[]</code> - the list you want to put in order using key.</p>

<p><code>int index</code> - set as 0, will set the offset for the key.</p>

<pre><code>    public static String[] order(String key, String list[], int index) {
    ArrayList&lt;String&gt; order_List = new ArrayList&lt;String&gt;();
    ArrayList&lt;String&gt; temp_Order_List = null;
    char[] key_char = key.toCharArray();
    for (int offset = 0; offset &lt; key_char.length; offset++) {
        if (key_char.length &gt;= offset + index) {
            String str = (index &gt; 1 ? list[0].substring(0, index - 1) : """")
                    + new String(key_char, offset, 1);
            for (int i = 0; i &lt; list.length; i++) {
                temp_Order_List = new ArrayList&lt;String&gt;();
                for (int k = 0; k &lt; list.length; k++) {
                    if (!order_List.contains(list[k])
                            &amp;&amp; !temp_Order_List.contains(list[k])) {
                        if (list[k].equalsIgnoreCase(str))
                            order_List.add(list[k]);
                        else if (list[k].toLowerCase().startsWith(str.toLowerCase())) {
                            temp_Order_List.add(list[k]);

                        }
                    }
                }
                if (temp_Order_List.size() &gt; 0) {
                    if (temp_Order_List.size() &gt; 1) {
                        String[] add = order(key,
                                temp_Order_List.toArray(new String[temp_Order_List
                                        .size()]), index + 1);
                        for (String s : add) {
                            order_List.add(s);
                        }
                    } else {
                        order_List.add(temp_Order_List.get(0));
                    }
                }
            }
        }
    }
    return order_List.toArray(new String[order_List.size()]);
}
</code></pre>
"
"12356059","<p>Instead of this complicated step you can use the following logic:</p>

<pre><code>DataInputStream in=new DataInputStream(System.in);
System.out.println(""Enter the a character"")
byte b = in.readByte();
char ch=(char)b;
System.out.println(""Char : "" +ch );
</code></pre>

<p>you see here it will only read only one character.</p>
"
"29322850","<p>This error occurs when a connection is closed abruptly (when a TCP connection is reset while there is still data in the send buffer). The condition is very similar to a much more common 'Connection reset by peer'. It can happen sporadically when connecting over the Internet, but also systematically if the timing is right (e.g. with keep-alive connections on localhost).</p>

<p>An HTTP client should just re-open the connection and retry the request. It is important to understand that when a connection is in this state, there is no way out of it other than to close it. Any attempt to send or receive will produce the same error.</p>

<p>Don't use <code>URL.open()</code>, use Apache-Commons <a href=""https://hc.apache.org/httpcomponents-client-ga/"" rel=""nofollow"">HttpClient</a> which has a retry mechanism, connection pooling, keep-alive and many other features.</p>

<p>Sample usage:</p>

<pre><code>HttpClient httpClient = HttpClients.custom()
            .setConnectionTimeToLive(20, TimeUnit.SECONDS)
            .setMaxConnTotal(400).setMaxConnPerRoute(400)
            .setDefaultRequestConfig(RequestConfig.custom()
                    .setSocketTimeout(30000).setConnectTimeout(5000).build())
            .setRetryHandler(new DefaultHttpRequestRetryHandler(5, true))
            .build();
// the httpClient should be re-used because it is pooled and thread-safe.

HttpGet request = new HttpGet(uri);
HttpResponse response = httpClient.execute(request);
reader = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));
// handle response ...
</code></pre>
"
"28816615","<p>You can use following method</p>

<pre><code>int num=((int)(Math.random()*100))%6+5;
</code></pre>

<p>This will return random values from 5 to 10.</p>

<p>Generalized to the following</p>

<pre><code>int num=((int)(Math.random()*100))%(min+1)+(max-min);
</code></pre>
"
"29590493","<p>posting a pseudo-code answer just an algorithm, modify and test as needed:</p>

<pre><code>public boolean haveDuplicates(double[] dices1, double[] dices2)
{
    boolean has_duplicates = false;
    for (int i=0; i&lt;dices1.length; i++)
    {
       double dice1 = dices1[i];
       for (int j=0; j&lt;dices2.length; j++)
       { 
            double dice2 = dices2[j];
            if ( dice1 == dice2 )
            {
                 has_duplicates = true;
                 break; // stop checking any more
            }
       }
       if (has_duplicates) break; // stop checking any more
    }
    return has_duplicates;
}
</code></pre>

<p>This answer assumes (not clear from the title and question exactly) that you have <strong>two</strong> different sequences of dices and you want to check if they contain duplicate values</p>

<p>One can do this more efficiently if another structure is used or the values are sorted ascending, try to find info on these other approaches</p>
"
"29398128","<p>Updated for your question</p>

<pre><code> ArrayList&lt;E&gt; list2 = new ArrayList&lt;E&gt;();


    for (int i = 1; i &lt; list.size(); i++) {
        String a1 = list2.get(i);
        if (!list2.contains(a1)) {
            list2.add(a1);
        }
    }
</code></pre>
"
"29030350","<p>Your slash is not correct. You should use it like this. </p>

<pre><code>      try{
            String sys = System.getProperty(""user.home"");

            String fileurl = sys+ ""\\Desktop\\new"";
            File newfile = new File(fileurl);
            newfile.mkdir();

            }catch(Exception ioe){
             // Handle the error
                System.out.println(""Error"");
            }
</code></pre>
"
"29062896","<p>In each of your  tried options</p>

<pre><code>rule[0].equals("""")
rule[0].equals(null)
rule[0].equals(""null"")
rule[0].matches("""")
rule[0].matches(""null"")
rule.length == 0
rule.equals(null)
</code></pre>

<p>You  already assumed that your element at <code>0</code> index is not null , and calling <code>equals()</code> and <code>matches()</code> method on element at 0th index causing <a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/NullPointerException.html"" rel=""nofollow"">NullPointerException</a></p>

<blockquote>
  <p>Thrown when an application attempts to use null in a case where an
  object is required. These include:</p>
  
  <ol>
  <li>Calling the instance method of a null object.</li>
  <li>Accessing or modifying the field of a null object.</li>
  <li>Taking the length of null as if it were an array.</li>
  <li>Accessing or modifying the slots of null as if it were an array.</li>
  <li>Throwing null as if it were a Throwable value.</li>
  </ol>
</blockquote>

<p>Instead try like this  </p>

<pre><code>if(rule[0] != null){
// Now you can call methods on your `0th` index element

}
</code></pre>
"
"29609743","<p>Why do you wan't to use Reflection it is heavy cost to do so and could be error prone.
You can use a DeviceProvider where the client can register a Device.
He can fetch the Device by it's Class Object or it's canonical name.
Then He can downcast to access custom method or deal with the Device instance and call common methods.</p>

<p>From Effective Java:</p>

<pre><code>// Service interface
public interface Service {
... // Service-specific methods go here
}

// Service provider interface
public interface Provider {
      Service newService();
}

// Noninstantiable class for service registration and access
public class Services {

     private Services() { } // Prevents instantiation (Item 4)
     // Maps service names to services
     private static final Map&lt;String, Provider&gt; providers = new ConcurrentHashMap&lt;String, Provider&gt;();
     public static final String DEFAULT_PROVIDER_NAME = ""&lt;def&gt;"";
     // Provider registration API
     public static void registerDefaultProvider(Provider p) {
          registerProvider(DEFAULT_PROVIDER_NAME, p);
     }

     public static void registerProvider(String name, Provider p){
        providers.put(name, p);
     }

      // Service access API
     public static Service newInstance() {
         return newInstance(DEFAULT_PROVIDER_NAME);
     }

     public static Service newInstance(String name) {
       Provider p = providers.get(name);
         if (p == null)
           throw new IllegalArgumentException(
           ""No provider registered with name: "" + name);

        return p.newService();
     }

}
</code></pre>

<p>The advantage is that you can provide a default implementation and allow the client to register their custom ones.
JDBC DriverManager works quite the same way</p>
"
"29616379","<p>You're declaring the variable <code>e</code> inside the loop, then trying to reference it from outside that loop. The below should work:</p>

<pre><code>public static int randomInt(int low, int high)
{
    int e;

    for (int i=0;i&lt;10;i++)
    {
        double x=Math.random();
        e=(int)x*high/low;
    }

    return e;
}
</code></pre>
"
"29135746","<p>Fix answer Rob Dickerson.</p>

<p>It's easier to use:</p>

<pre><code>public static String join(String delimiter, String... values)
{
    StringBuilder stringBuilder = new StringBuilder();

    for (String value : values)
    {
        stringBuilder.append(value);
        stringBuilder.append(delimiter);
    }

    String result = stringBuilder.toString();

    return result.isEmpty() ? result : result.substring(0, result.length() - 1);
}
</code></pre>
"
"29453662","<p>You try</p>

<pre><code>if (array[0].equals(arraylist[0]))
</code></pre>

<p>As in java comparisons string should use equals(). It's not like javascript.</p>
"
"29144594","<pre><code>if(itemCode1 == null) 
{
 //-1
}
else{
   if( itemCode2 ==null){
     {//1}
   else{
i1.getItemCode().compareTo(itemCode2)
}
</code></pre>
"
"14277235","<p>Java Reflection makes it possible to inspect classes, interfaces, fields and methods at runtime, without knowing the names of the classes, methods etc. at compile time. Mostly at framework level the maximum benefits of reflection can be achieved. The byte code that is compiled if needs extra modification at run time for examination, modification, addition of more byte code within itself, or another program or another framework at method level, instance variable level, constructor level, annotation level reflection can be useful.</p>

<p>Suppose you have a method <code>add(Int a,int b)</code>. The equivalent byte code is suppose <code>B1</code>. If suppose you have 1000 methods named <code>add</code> in your system. Now you want to check the value of parameter <code>a</code> and <code>b</code> before method <code>add</code> is called. So, you can glue your code to another program or framework that uses reflection to dynamically examine the byte code value using <code>Object.getClass.getMethod()</code>. There are several classes for examining. It can add more operation before method <code>add</code> is called. But, the program itself or another program or framework does not know about the object that has a method named <code>add</code>. Mostly in dependency injection, aspect oriented programming use of reflection is mostly used.</p>
"
"29467235","<p>Working of If statement followed by else-if is fine here. We are getting expected result here. Both the statements if and else-if are not executed. Only that statement is executed which comes TRUE as per logic.
Here we can identify the working of the program using ""System.out.println"". Code and console output is given below...</p>

<pre><code>    int[] nums = {1, 1, 5, 5, 10, 8, 7};

    int sum = 0;
    int centered = 0;
    int min = nums[0];
    int max = nums[0];
    int i = 0;

    for (i = 0; i &lt; nums.length; i++)
    {
        if (nums[i] &gt;  min)
        {
           min = nums[i];

            System.out.println(""inside first if:  "" + i);
            // taking value of i in SOP to get the iteration value 

        } 
      else if (nums[i] &gt; max)
        {
            max = nums[i];
        }

       sum += nums[i];
        centered = ((sum-max-min)/(nums.length-2));

        System.out.println(""inside else if:  "" + i);
         // taking value of i in SOP to get the iteration value 

    }

    System.out.println(""centered value ""
            + "" "" + centered);
</code></pre>

<p>You can make a good usage of SOP in every program to get the execution order.</p>
"
"15754387","<p>In C, you would do it by passing pointers to placeholders for the results as arguments:</p>

<pre><code>void getShoeAndWaistSizes(int *shoeSize, int *waistSize) {
    *shoeSize = 36;
    *waistSize = 45;
}
...
int shoeSize, waistSize;
getShoeAndWaistSize(&amp;shoeSize, &amp;waistSize);
int i = shoeSize + waistSize;
</code></pre>

<p>Let's try something similar, in Java.</p>

<pre><code>void getShoeAndWaistSizes(List&lt;Integer&gt; shoeSize, List&lt;Integer&gt; waistSize) {
    shoeSize.add(36);
    waistSize.add(45);
}
...
List&lt;Integer&gt; shoeSize = new List&lt;&gt;();
List&lt;Integer&gt; waistSize = new List&lt;&gt;();
getShoeAndWaistSizes(shoeSize, waistSize);
int i = shoeSize.get(0) + waistSize.get(0);
</code></pre>
"
"29279143","<p>It's better to use  SecureRandom rather then just Random. </p>

<pre><code>public static int generateRandomInteger(int min, int max) {
    SecureRandom rand = new SecureRandom();
    rand.setSeed(new Date().getTime());
    int randomNum = rand.nextInt((max - min) + 1) + min;
    return randomNum;
}
</code></pre>
"
"29288705","<pre><code>class a{
  function dosomething(){
     //code goes here
   }
}

class b{
    a firstobject=new a();
    c secondobject=new c(a objtopass);  //passing object of a to c
    function donext(){
        //next code
    }
}

class c{
a receivedobj=null;
public c(a objtoreceive){
    //constructor
    receivedobj=objtoreceive;
}
 function doAdd(){
   //function code
  }
}
</code></pre>
"
"16062731","<p>I've actually in front of me a code which looks like this:</p>

<pre><code>for (int i = offset; i &lt; offset + length; i++) {
    char append = (char) (data[i] &amp; 0xFF);
    buffer.append(append);
}
...
for (int i = offset; i &lt; offset + length; i++) {
    char append = (char) (data[i] &amp; 0xFF);
    buffer.append(append);
}
...
for (int i = offset; i &lt; offset + length; i++) {
    char append = (char) (data[i] &amp; 0xFF);
    buffer.append(append);
}
</code></pre>

<p>So, relying on compiler abilities, I can assume there would be only one stack allocation for <strong>i</strong> and one for <strong>append</strong>. Then everything would be fine except the duplicated code.</p>

<p>As a side note, java applications are known to be slow. I never tried to do profiling in java but I guess the performance hit comes mostly from memory allocation management.</p>
"
"16082278","<p>Great! Works perfectly in Windows too with Java 1.6.35. Only a little change in my case:</p>

<pre><code>FileChooserUI fcUi = jFileChooser.getUI();
Class&lt;? extends FileChooserUI&gt; fcClass = fcUi.getClass();
Method setFileName = fcClass.getMethod(""setFileName"", String.class);
setFileName.invoke(fcUi, defaultDirectoryName);
</code></pre>
"
"29704488","<p>As other stated your case 2 can relate to a null exception if the user immediately selects case 2. This can be avoided using an if-else or just an if.</p>

<pre><code>public class assignment7{
public static void main(String[] args){     
    int choice;
    NumberList numbasbrah;
    do{
        System.out.println(""___"");
        System.out.println(""Case 1 - Input Data"");
        System.out.println(""Case 2 - Shift/Print"");
        System.out.println(""Case 3 - Quit"");
        System.out.println(""___"");
        System.out.println(""Input Choice: "");
        choice = scan.nextInt();
            switch(choice){
                    case '1':
                            System.out.println(""input the array size."");
                    size = scan.nextInt();
                        System.out.println(""input the array offset."");
                        offset = scan.nextInt();
                            numbasbrah = new NumberList(size, offset);
                            numbasbrah.printInfo();
                            break;
                    case '2':
                    if (numbasbrah != null){
                                numbasbrah.shift();
                                numbasbrah.printInfo();
                    } else {
                        System.out.println(""Please Select Case 1 and Input Data"");
                        System.out.println(""___"");
                    }
                            break;
                    case '3':     //quit
                            break;
    }while(choice!=3);
}
</code></pre>

<p>} //end main method</p>
"
"29530813","<pre><code> /* package whatever; // don't place package name! */

import java.io.*;

import java.util.*;

class Ideone
{
public static void main (String[] args) throws java.io.IOException
{
String s1;
String s2="""";
String input=""Proserpine"";
String strline;
   s1 = ""PPP, Proserpine Queensland, Australia"";
   int numTokens = 0;
   StringTokenizer st = new StringTokenizer(s1);

  while (st.hasMoreTokens())
  {
     s2 = st.nextToken();
     ++numTokens;
      if (s2.equalsIgnoreCase(input))
      {
      System.out.print(s1);
     break;
     }

  }
 } 
 }
</code></pre>

<p>Success time: 0.1 memory: 321344 signal:0PPP, Proserpine Queensland, Australia</p>
"
"5732918","<p>You can use a semi-colon-delimited list if you're using numeric references to the IDs of objects, and an appropriate Converter implementation registered.</p>

<p>POST data
    leaderboards=1,2</p>

<p>Converter implementation (ignore the JSON stuff)</p>

<pre><code>    public final class LeaderboardConverter extends JsonDeserializer&lt;Leaderboard&gt; implements Converter&lt;String, Leaderboard&gt;
    {
        public Leaderboard convert(String source) throws IllegalArgumentException
        {
            Leaderboard activity = new Leaderboard();
            activity.setId(new Integer(source));
            return activity;
        }


        public Leaderboard deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException, JsonProcessingException
        {
            return convert(jp.getText());
        }

}
</code></pre>
"
"29381204","<p>You never declared one as a variable...</p>

<p>If you want to use it try adding in. </p>

<pre><code>     int one;
</code></pre>

<p>somewhere. I'm not saying anything else is right. but this is why you are getting an error.</p>

<p>read more on your issue. you need to store the user input as one in order to compare. you have a reference to nowhere. </p>
"
"18285368","<pre><code>private void heapifyUp(int current) {
int parent = (current - 1) / 2;
if (current &lt; 0)return;
while (current &gt; 0 &amp;&amp; arr[current] &gt; arr[parent]) {
   int temp = arr[parent];
   arr[parent] = arr[current];
   arr[current] = temp;
   current = parent;
  parent = (current - 1) / 2;
 } return;
}
</code></pre>
"
"18288782","<pre><code>Locale locale = Locale.UK;
Currency curr = Currency.getInstance(locale);
System.out.println(""Symbol: "" + curr.getSymbol());
</code></pre>

<p>For some currencies it  works.</p>
"
"29710144","<p>In older versions of Java you might try </p>

<pre><code>obj.setObject(""@somefield"", some_data);
</code></pre>
"
"29399875","<p>It looks as though you are returning the value at index 0.</p>

<pre><code>public static int[] invertieren(int[] werte) {
    int[] werte1 = new int[werte.length];
    int len = werte.length - 1;
    for (int i = 0; i &lt; len; i++) {
        werte1[len-i] = werte[i];
    }
    return werte1;
}
</code></pre>
"
"18445963","<p>You should use:</p>

<pre><code>import javax.xml.rpc.Stub;

...


int timeout = &lt;number of milliseconds&gt;;

((Stub) port)._setProperty(
                ""axis.connection.timeout"",
                timeout);
</code></pre>
"
"29576194","<p>str.split might be coming null ...apply a check before that to ensure that str.split is not null.</p>

<pre><code>if(str.split== null |  str.split == 0)
{
paste your code here;
}
</code></pre>
"
"29786042","<p>AFAIK you can use <code>Thread.sleep(3000)</code></p>

<p>If not, something like this should do:</p>

<pre><code>long start = new Date().getTime();
while(new Date().getTime() - start &lt; 3000L){}
</code></pre>
"
"29466399","<p>You can use this:</p>

<pre><code>String subString = testString.subString(firstIndex, secondIndex);
</code></pre>

<p>and you can get the index by this:</p>

<pre><code>int index = testString.indexOf(String);
</code></pre>
"
"20349948","<p>Guys an really useful Library we use in our GWT product is Joda time 
import org.joda.time.DateTime;</p>

<pre><code>Date date = new DateTime(mostDateFormats).toDate();
</code></pre>

<p>No more date missions</p>
"
"20551199","<p>i am using the following code please try it out</p>

<pre><code>DateFormat fm= new SimpleDateFormatter();
</code></pre>

<p>specify the format of the date you want
for example <code>""DD-MM_YYYY""</code> or <code>'YYYY-mm-dd'</code>  then use the java Date datatype as</p>

<pre><code>fm.format(""object of java.util.date"");
</code></pre>

<p>then it will parse your date</p>
"
"29490398","<p>You can try this</p>

<pre><code>&lt;bean id=""sessionFactory"" class=""org.springframework.orm.hibernate4.LocalSessionFactoryBean""&gt;
        &lt;property name=""dataSource"" ref=""jndiDataSource"" /&gt;
        &lt;property name=""packagesToScan"" value=""com.example.abc""&gt;&lt;/property&gt;
        &lt;property name=""hibernateProperties""&gt;
        &lt;props&gt;            
            &lt;prop key=""hibernate.show_sql""&gt;true&lt;/prop&gt;            
        &lt;/props&gt;
    &lt;/property&gt;
    &lt;/bean&gt;
</code></pre>

<p>You can provide other hibernate configuration properties. Also you may want to use properties file for those configurations and inject those with ${} syntax in the xml configuration. For e.g., </p>

<pre><code>&lt;prop key=""hibernate.show_sql""&gt;${hibernate.show_sql}&lt;/prop&gt;
</code></pre>
"
"20812845","<p>As noted above the row height needs to be calculated but the current solution could be improved. In fact, it wasn't working for me. <code>jtxt.getColumns()</code> was returning zero causing a divide by zero. Here's some code I think is cleaner:</p>

<pre><code>// set the width on the jTextArea causing a calc of preferred height
jtxt.setSize(table.getWidth(), Short.MAX_VALUE);
int prefH = jtxt.getPreferredSize().height;
table.setRowHeight(row, prefH);
</code></pre>
"
"29503554","<p>Your issue is that you need quotes around the date in the query string. Using the quotes as below and df1 should work.</p>

<pre><code>String query=""SELECT * FROM AP_Report where Edition Date = '"" + tempDate + ""'"";
</code></pre>

<p>I also recommend looking into PreparedStatement when substituting variables into your query.</p>
"
"29813926","<p>try this</p>

<pre><code>private final BroadcastReceiver mReceiver = new BroadcastReceiver() {

@Override
public void onReceive(Context context, Intent intent) {
    if(intent.getAction().equals(""BROADCAST_INTENT""))
       context.finish();
    }
}
</code></pre>
"
"21102960","<p>Your don't need fuzzy as in ""neural network"" because (as I understand) you don't have rotation, tilts or similar. If OS display differences are the only modifications the difference should be minimal.
So WernerVanBelle's paper is nice but not really necessary and MrFooz's code works - but is terribly innefficient (<code>O(width * height * patter_width * pattern_height)</code>!).</p>

<p>The best algorithm I can think of is the Boyer-Moore algorithm for string searching, modified to allow 2 dimensional searches.
<a href=""http://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string_search_algorithm"" rel=""nofollow"">http://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string_search_algorithm</a></p>

<p>Instead of one displacement you will have to store a pair of displacements <code>dx</code> and <code>dy</code> for each color. When checking a pixel you move only in the x direction <code>x = x + dx</code> and store only the minimum of the dy's <code>DY = min(DY, dy)</code> to set the new y value after a whole line has been tested (ie <code>x &gt; width</code>).</p>

<p>Creating a table for all possible colors probably is prohibitve due to the imense number of possible colors, so either use a map to store the rules (and default to the pattern dimensions if a color is not inside the map) or create tables for each color seperately and set <code>dx = max(dx(red), dx(green), dx(blue))</code> - which is only an approximation but removes the overhead of a map.</p>

<p>In the preprocessing of the bad-character rule, you can account for small deviations of colors by spreading rules from all colors to their ""neighbouring"" colors (however you wish to define neighbouring). </p>
"
"29684348","<pre><code>JFileChooser cho = new JFileChooser();
File file = cho.getSelectedFile();
String string = readFile(file);
String [] words = string.split("" "");

for(String word: words){
    System.out.println(word)
}
</code></pre>
"
"29826293","<p>I solved my own problem by disabling the enter key on the client input field.</p>

<pre><code>  $(""form"").bind(""keypress"", function (event) 
            {
                if (event.keyCode == 13) 
                {
                    event.preventDefault();
                    return false;
                }
            });
</code></pre>
"
"29845162","<p>Editted.</p>

<pre><code>import java.util.*;

public class Stutter {

    static String stutterString = """";

    public static String stutter ( String s ) {
        if(s.length() &gt; 0)
        {
            return stutterString.concat(s.substring(0,1)).concat(s.substring(0,1)).concat(stutter(s.substring(1)));
        }
        else
        {
            return stutterString;
        }
    }

    public static void main ( String [] args ) {


        Scanner inputScanner = new Scanner ( System.in );

        System.out.println ( ""What word would you like to stutter?"" );
        String userInput = inputScanner.next();

        inputScanner.close();

        System.out.println ( stutter ( userInput ) );

    }

}
</code></pre>
"
"29705147","<p>The tricky thing with <code>jTables</code> is that they rely on a model (there are different classes for a table model, however for simple things like in your case I'd suggest you read the <code>DefaultTableModel</code> tutorial from java), basically each time you modify data from your table you have to create a new model and call the <code>jTable.setModel(newModel)</code>, here is an example of how I did it:</p>

<pre><code>  private void jAddActionPerformed(java.awt.event.ActionEvent evt) {                                           
    // TODO add your handling code here:
    Tm_prod tmp = new Tm_prod();
    TmTipoBD tmt = new TmTipoBD(con);

    //we add our new row logically
    list.add(element);

    //we create an empty DefaultTableModel
    DefaultTableModel model = new javax.swing.table.DefaultTableModel(
            new Object[][]{},
            new String[]{
                ""Column1"", ""Column2"", ""Column3"", ""Column4""}
    ) {
        Class[] types = new Class[]{
            java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
        };
        boolean[] canEdit = new boolean[]{
            false, false, false, false
        };

        @Override
        public Class getColumnClass(int columnIndex) {
            return types[columnIndex];
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit[columnIndex];
        }
    };

    //we populate the recently created model with the new data
    for (Item i: list) {
        model.addRow(new Object[]{i.getProperty1(), i.getProperty2(), i.getProperty3(), i.getProperty()});
    }
    jTable.setModel(model);
  }
</code></pre>
"
"29845297","<p>This can be achieved very simply using <a href=""https://docs.oracle.com/javase/7/docs/api/java/lang/String.html#replaceAll(java.lang.String,%20java.lang.String)"" rel=""nofollow"">String.replaceAll()</a>:</p>

<pre><code>public class Stutter {
    public static void main (String args[]) {
        String TEST_STRING = ""abcdefg"";
        System.out.println(stutter(TEST_STRING));
    }

    private static String stutter(String s) {
        return s.replaceAll(""(.)"", ""$1$1"");
    }
}
</code></pre>
"
"29536008","<p>what ever format you have define it in SimpleDate format , convert it to date and then convert it to Timestamp.</p>

<pre><code>public static Timestamp stringToTimeStamp(String strTime){
    Timestamp tempTimestamp = null;
    if(strTime!=null &amp;&amp; !strTime.equals(""""))
    {
        SimpleDateFormat dateFormat = new SimpleDateFormat(
                ""yyyy-MM-dd"");//format of date and time you have

        Date parsedTimeStamp = null;
        try {
            parsedTimeStamp = dateFormat.parse(strTime);
        } catch (ParseException e) {
            e.printStackTrace();
        }

        tempTimestamp = new Timestamp(parsedTimeStamp.getTime());


    }
    return tempTimestamp;
}
</code></pre>
"
"29723591","<p>Here you go.</p>

<pre><code>for(int i = map.length-1;  i &gt;= 0; i--){
    for(int j = map[i].length-1; j &gt;= 0; j--) {
         switch (nmap[j][i]) {
             map[i][j] = new Tile()
        }
    }
}
</code></pre>

<p>Rather then going from 0 to map.length and 0 to map[i].length, this program starts at map.length-1 (so you don't ever get an index out of bounds error) and continues until it hits zero.</p>
"
"29723612","<p>To go backwards , you need to read from the highest index to 0 . Highest index is typically length-1 since indices start from 0. Same goes for the inner j loop. Start from the highest index of map[i] i.e length -1. </p>

<p>eg. Array = [2 ,3,4,5,6]
Length =5 .Indices to iterate = 4 to 0 if backwards.</p>

<pre><code>  for(int i = map.length-1;  i &gt;= 0; i--) {
        for(int j = map[i].length-1; j &gt;= 0; j--) {
            //your operation
        }
    }
</code></pre>
"
"9420774","<p>You may use the Runtime class to monitor the JVM memmory like this.</p>

<pre><code>Runtime rt = Runtime.getRuntime();
System.out.println((rt.freeMemory() / 1024) + ""/"" + (rt.maxMemory() / 1024) + "" kB"");
</code></pre>

<p>Or you may use JConsole, JVisualVM e JInfo.
You may get more information about these tools <a href=""http://java.sun.com/developer/technicalArticles/J2SE/monitoring/"" rel=""nofollow"">Here:</a></p>

<p><a href=""http://java.sun.com/developer/technicalArticles/J2SE/monitoring/"" rel=""nofollow"">http://java.sun.com/developer/technicalArticles/J2SE/monitoring/</a></p>
"
"29768363","<pre><code>DateFormat formatter=new SimpleDateFormat(""dd-MM-yyyy"");; 
Date date =(Date)formatter.parse(""12-01-1990"");     //birthDate is a String, in format dd-MM-yyyy

Calendar birthDate = Calendar.getInstance();
birthDate.setTime(date);

Calendar sysDate = Calendar.getInstance();
sysDate.setTime(new Date());

int ageDiff = sysDate.get(Calendar.YEAR) - birthDate.get(Calendar.YEAR);

System.out.println(ageDiff); 
</code></pre>
"
"21212931","<p>This code should serve as a model, as it addresses the problem of stackoverflow on serialization. It uses memory inplace of recursion. Although not fit to be concidered universal as a serializer, it serializes and deserializes the classes it was tested with.</p>

<pre><code>import java.io.*;
import java.util.*;
import java.lang.reflect.*;
import android.util.*;

public class SequentialObjectInputStream extends DataInputStream implements ObjectInput
{
    interface FieldPutAction
    {
        void put(Object obj, Field field) throws IllegalAccessException, IOException;
    }

    interface ArrayPutAction
    {
        void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException;
    }

    public HashMap&lt;Class, FieldPutAction&gt; Primatives;
    public HashMap&lt;Class, ArrayPutAction&gt; ArrayPrimatives;

    public SequentialObjectInputStream(InputStream stream)
    {
        super(stream);

        Primatives = new HashMap&lt;Class, FieldPutAction&gt;();

        try
        {
            Primatives.put(boolean.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        boolean x = readBoolean(); 
                        field.setBoolean(obj, x);

                    }
                });

            Primatives.put(byte.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        byte x = readByte(); 
                        field.setByte(obj, x);

                    }
                });


            Primatives.put(short.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        short x = readShort(); 
                        field.setShort(obj, x);

                    }
                });


            Primatives.put(int.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        int x = readInt(); 
                        field.setInt(obj, x);

                    }
                });


            Primatives.put(long.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        long x = readLong(); 
                        field.setLong(obj, x);

                    }
                });


            Primatives.put(char.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        char x = readChar(); 
                        field.setChar(obj, x);

                    }
                });


            Primatives.put(float.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        float x = readFloat(); 
                        field.setFloat(obj, x);

                    }
                });


            Primatives.put(double.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        double x = readDouble(); 
                        field.setDouble(obj, x);

                    }
                });


            Primatives.put(String.class,
                new FieldPutAction()
                {
                    public void put(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        String x = readUTF(); 
                        field.set(obj, x);

                    }
                });
        } catch(Exception e)
        {
            Log.e(""SOb"", Log.getStackTraceString(e));
        }

        ArrayPrimatives = new HashMap&lt;Class, ArrayPutAction&gt;();

        try
        {
            ArrayPrimatives.put(boolean.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        boolean x = readBoolean();
                        Array.setBoolean(obj, index, x);
                    }
                });

            ArrayPrimatives.put(byte.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        byte x = readByte(); 
                        Array.setByte(obj, index, x);

                    }
                });


            ArrayPrimatives.put(short.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        short x = readShort(); 
                        Array.setShort(obj, index, x);

                    }
                });


            ArrayPrimatives.put(int.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        int x = readInt(); 
                        Array.setInt(obj, index, x);

                    }
                });


            ArrayPrimatives.put(long.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        long x = readLong(); 
                        Array.setLong(obj, index, x);

                    }
                });


            ArrayPrimatives.put(char.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        char x = readChar(); 
                        Array.setChar(obj, index, x);

                    }
                });


            ArrayPrimatives.put(float.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        float x = readFloat(); 
                        Array.setFloat(obj, index, x);

                    }
                });


            ArrayPrimatives.put(double.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        double x = readDouble(); 
                        Array.setDouble(obj, index, x);

                    }
                });


            ArrayPrimatives.put(String.class,
                new ArrayPutAction()
                {
                    public void put(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        String x = readUTF(); 
                        Array.set(obj, index, x);

                    }
                });
        } catch(Exception e)
        {
            Log.e(""SOb"", Log.getStackTraceString(e));
        }
    }


    @Override
    public Object readObject() throws ClassNotFoundException, IOException
    {
        long Total = readLong();

        Log.i(""SOb"", ""readObject : "" + Long.toString(Total) + "" objects in graph"");

        HashMap&lt;Long, Object&gt; References = new HashMap&lt;Long, Object&gt;();

        long currentId = 1;

        HashMap&lt;Object, HashMap&lt;Field, Long&gt;&gt; refCache =
            new HashMap&lt;Object, HashMap&lt;Field, Long&gt;&gt;();
        final HashMap&lt;Object, HashMap&lt;Integer, Long&gt;&gt; arefCache =
            new HashMap&lt;Object, HashMap&lt;Integer,Long&gt;&gt;();

        for (int I=0; I &lt; Total; I++)
        {
            String Name = readUTF();
            Class C = Class.forName(Name);

            Log.i(""SOb"", ""Object of ""+C.getCanonicalName() +"" on graph"");

            int adim = 0;

            Object O = null;

            if (C.isArray())
            {
                Class ComponentType = C.getComponentType();

                int Size = readInt();

                Log.i(""SOb"", ""array of ""+ComponentType.getCanonicalName() + "", "" + Long.toString(Size) + "" elements"");          
                O = Array.newInstance(ComponentType, Size);

                References.put(currentId, O);
                currentId++;

                ArrayPutAction action = null;

                if (ArrayPrimatives.keySet().contains(ComponentType))
                {
                    action = ArrayPrimatives.get(ComponentType);
                } else
                {
                    arefCache.put(O, new HashMap&lt;Integer, Long&gt;());

                    action = new ArrayPutAction()
                    {
                        public void put(Object O, int Index) throws ArrayIndexOutOfBoundsException , IOException
                        {
                            long Ref = readLong();

                            arefCache.get(O).put(Index, Ref);
                        }
                    };
                }

                for (int index=0; index&lt; Size; index++)
                {
                    action.put(O,index);
                }

            } else
            {

            try
            {

                O = 
                    C.getConstructor(new Class[0]).newInstance(new Object[0]);
            } catch(InstantiationException e)
            {
                Log.e(""SOb"", Log.getStackTraceString(e));
            } catch(NoSuchMethodException e)
            {
                Log.e(""SOb"", Log.getStackTraceString(e));
            } catch(IllegalAccessException e)
            {
                Log.e(""SOb"", Log.getStackTraceString(e));
            } catch(InvocationTargetException e)
            {
                Log.e(""SOb"", Log.getStackTraceString(e));
            }

            References.put(currentId, O);
            currentId++;
            refCache.put(O, new HashMap&lt;Field, Long&gt;());

            for (Field F : C.getFields())
            {
                if (F.isAccessible())
                {
                    Class T = F.getType();

                    if (Primatives.containsKey(T))
                    {
                        try
                        {
                            Primatives.get(T).put(O, F);
                        } catch (IllegalAccessException e)
                        {

                        }
                    } else
                    {
                        refCache.get(O).put(F, readLong());
                    }
                }
            }

        }
        }
        for (long I=0; I &lt; Total; I++)
        {

            Object O = References.get(I+1);

            Class C = O.getClass();

            //Log.i(""SOb"", ""get reference ""+Long.toString(I)+"" ""+C.getCanonicalName());


            if (C.isArray())
            {
                HashMap&lt;Integer,Long&gt; aref_table = arefCache.get(O);

                if (ArrayPrimatives.containsKey(C.getComponentType()) == false)
                {

                    int len = Array.getLength(O);

                    for (int index=0; index&lt;len; index++)
                    {
                        long r = aref_table.get(index);
                        Object ref = r == 0 ? null : References.get(r);

                        Array.set(O, index, ref);   
                    }
                }

            } else
            {

            HashMap&lt;Field, Long&gt; ref_table = refCache.get(O);

            for (Field F : C.getFields())
            {
                if (F.isAccessible())
                {
                    Class T = F.getType();

                    if (Primatives.containsKey(T) == false)
                    {
                        try
                        {
                            long r = ref_table.get(F);
                            Object ref = r == 0 ? null : References.get(r);

                            F.set(O, ref);
                        } catch (IllegalAccessException e)
                        {
                            Log.e(""SOb"", Log.getStackTraceString(e));
                        }

                    }
                }
            }
            }

        }


        return References.get((Long) (long) 1);
    }

}


import java.io.*;
import java.util.*;
import java.lang.reflect.*;
import android.util.*;

public class SequentialObjectOutputStream extends DataOutputStream
implements ObjectOutput
{
    interface FieldGetAction
    {
        void get(Object obj, Field field) throws IllegalAccessException, IOException;
    }

    interface ArrayGetAction
    {
        void get(Object array, int Index) throws ArrayIndexOutOfBoundsException, IOException;       
    }

    public HashMap&lt;Class, FieldGetAction&gt; Primatives;
    public HashMap&lt;Class, ArrayGetAction&gt; ArrayPrimatives;

    public SequentialObjectOutputStream(OutputStream stream)
    {
        super(stream);

        Primatives = new HashMap&lt;Class, FieldGetAction&gt;();

        try
        {
            Primatives.put(boolean.class,
            new FieldGetAction()
            {
                public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                {
                    boolean x = field.getBoolean(obj);
                    writeBoolean(x);

                }
            });

            Primatives.put(byte.class,
                new FieldGetAction()
                {
                    public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        byte x = field.getByte(obj);
                        writeByte(x);

                    }
                });


            Primatives.put(short.class,
                new FieldGetAction()
                {
                    public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        short x = field.getShort(obj);
                        writeShort(x);

                    }
                });


            Primatives.put(int.class,
                new FieldGetAction()
                {
                    public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        int x = field.getInt(obj);
                        writeInt(x);

                    }
                });


            Primatives.put(long.class,
                new FieldGetAction()
                {
                    public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        long x = field.getLong(obj);
                        writeLong(x);

                    }
                });


            Primatives.put(char.class,
                new FieldGetAction()
                {
                    public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        char x = field.getChar(obj);
                        writeChar(x);

                    }
                });


            Primatives.put(float.class,
                new FieldGetAction()
                {
                    public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        float x = field.getFloat(obj);
                        writeFloat(x);

                    }
                });


            Primatives.put(double.class,
                new FieldGetAction()
                {
                    public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        double x = field.getDouble(obj);
                        writeDouble(x);
                    }
                });


            Primatives.put(String.class,
                new FieldGetAction()
                {
                    public void get(Object obj, Field field) throws IllegalAccessException, IOException 
                    {
                        String x = (String) field.get(obj);
                        writeUTF(x);

                    }
                });
        } catch(Exception e)
        {
            Log.e(""SOb"", Log.getStackTraceString(e));
        }



        ArrayPrimatives = new HashMap&lt;Class, ArrayGetAction&gt;();

        try
        {
            ArrayPrimatives.put(boolean.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        boolean x = Array.getBoolean(obj, index);
                        writeBoolean(x);

                    }
                });

            ArrayPrimatives.put(byte.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        byte x = Array.getByte(obj, index);
                        writeByte(x);

                    }
                });


            ArrayPrimatives.put(short.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        short x = Array.getShort(obj, index);
                        writeShort(x);

                    }
                });


            ArrayPrimatives.put(int.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        int x = Array.getInt(obj, index);
                        writeInt(x);

                    }
                });


            ArrayPrimatives.put(long.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        long x = Array.getLong(obj, index);
                        writeLong(x);

                    }
                });


            ArrayPrimatives.put(char.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        char x = Array.getChar(obj, index);
                        writeChar(x);

                    }
                });


            ArrayPrimatives.put(float.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        float x = Array.getFloat(obj, index);
                        writeFloat(x);

                    }
                });


            ArrayPrimatives.put(double.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        double x = Array.getDouble(obj, index);
                        writeDouble(x);
                    }
                });


            ArrayPrimatives.put(String.class,
                new ArrayGetAction()
                {
                    public void get(Object obj, int index) throws ArrayIndexOutOfBoundsException, IOException   
                    {
                        String x = (String) Array.get(obj, index);
                        writeUTF(x);

                    }
                });
        } catch(Exception e)
        {
            Log.e(""SOb"", Log.getStackTraceString(e));
        }

    }

    class State
    {
        public ArrayList&lt;Object&gt; OStack = new ArrayList&lt;Object&gt;();

        public long currentId = 1;

        public HashMap&lt;Object, Long&gt; References = new HashMap&lt;Object, Long&gt;();

    }

    public void writeObject(Object A) throws IOException, NotSerializableException
    {
        final State state = new State();

        state.OStack.add(0, A);

        LinkedList&lt;Object&gt; ForStack = new LinkedList&lt;Object&gt;();

        while (!(state.OStack.size() == 0))
        {
            Object Current = state.OStack.get(0);
            state.OStack.remove(0);

            if (((Serializable) Current) == null)
            {
                throw new NotSerializableException();
            }


            //Type C = Current.getClass();

            Class C = Current.getClass();

            Log.i(""SOb"", ""placing #""+Long.toString(state.currentId)+"" of ""+C.getCanonicalName()+"" on graph""); 
            state.References.put(Current, state.currentId);
            state.currentId++;

            ForStack.add(Current);

            if (C.isArray())
            {
                //Array array = (Array) Current;
                Class Ctype = C.getComponentType();

                if (ArrayPrimatives.keySet().contains(Ctype) == false)
                {
                    for (int I=0; I&lt;Array.getLength(Current); I++)
                    {
                        Object o = Array.get(Current, I);

                        if ((o != null) &amp;&amp; (state.References.keySet().contains(o) == false))
                        {
                            if (state.OStack.contains(o) == false) state.OStack.add(state.OStack.size(), o);
                        }

                    }
                }
            } else
            {
                for (Class Cur = C; Cur != null; Cur = Cur.getSuperclass())
                {

                    Field[] fields = Cur.getDeclaredFields();

                    for (Field f : fields)
                    {
                        if (Modifier.isStatic(f.getModifiers()))
                        {
                            continue;
                        }

                        f.setAccessible(true);

                        if (f.isAccessible() == false)
                        {
                        //  Log.i(""SOb"", ""     isAccessible = false"");
                            continue;
                        }

                        Class type = f.getType();
                        //Log.i(""SOb"", ""     field \""""+f.getName()+""\"" of ""+type.getCanonicalName());

                        if (Primatives.keySet().contains(type) == false)
                        {       
                            try
                            {
                                Object o = f.get(Current);

                                if ((o != null) &amp;&amp; (state.References.keySet().contains(o) == false))
                                {
                                    if (state.OStack.contains(o) == false) state.OStack.add(state.OStack.size(), o);
                                }

                            } catch (IllegalAccessException e)
                            {
                                Log.e(""SOb"", Log.getStackTraceString(e));
                            }
                        }
                    }
                }
            }
        }

        writeLong(state.References.size());

        for (Object O : ForStack )
        {
            Serializable s = (Serializable) O;

        //  if (s != null)
            {
                Class cl = O.getClass();

                String name = cl.getName();

                writeUTF(name);

                if (cl.isArray())
                {
                    Class components = cl.getComponentType();

                    ArrayGetAction action;

                    //Array array = (Array) O;

                    if (ArrayPrimatives.keySet().contains(components))
                    {
                        action = ArrayPrimatives.get(components);
                    } else
                    {
                        action = new ArrayGetAction()
                        {
                            public void get(Object array, int index) throws ArrayIndexOutOfBoundsException, IOException     
                            {
                                Object O = Array.get(array, index);
                                if (O==null)  writeLong(0);
                                else writeLong(state.References.get(O));
                            }
                        };
                    }

                    int length = Array.getLength(O);

                    writeInt(length);

                    for (int I=0; I&lt;length; I++)
                    {
                        action.get(O, I);
                    }

                } else
                {
                    for (Class Cur = cl; Cur != null; Cur = Cur.getSuperclass())
                    {
                        Field[] fields = Cur.getDeclaredFields();

                        for (Field F : fields)
                        {
                            Class FieldType = F.getType();

                            F.setAccessible(true);

                            if (F.isAccessible() &amp;&amp; (Modifier.isStatic(FieldType.getModifiers())))
                            {
                                FieldGetAction action;

                                //Array array = (Array) O;

                                if (Primatives.keySet().contains(FieldType))
                                {
                                    action = Primatives.get(FieldType);
                                } else
                                {
                                    action = new FieldGetAction()
                                    {
                                        public void get(Object obj, Field index) throws IllegalAccessException, IOException     
                                        {
                                            Object O = index.get(obj);
                                            if (O==null)  writeLong(0);
                                            else writeLong(state.References.get(O));
                                        }
                                    };
                                }

                                try
                                {
                                    action.get(O, F);
                                } catch (IllegalAccessException e)
                                {
                                    Log.e(""SOb"", Log.getStackTraceString(e));
                                }

                            }
                        }

                    }
                }
            }   
        }
    }
}
</code></pre>
"
"10188271","<p>Try this code, you will understand the <strong>code in finally block is get executed after return statement</strong>.</p>

<pre><code>public class TestTryCatchFinally {
    static int x = 0;

    public static void main(String[] args){
        System.out.println(f1() );
        System.out.println(f2() );
    }

    public static int f1(){
        try{
            x = 1;
            return x;
        }finally{
            x = 2;
        }
    }

    public static int f2(){
        return x;
    }
}
</code></pre>
"
"29841738","<p>Use the ""multi line"" flag:</p>

<pre><code>str = str.replaceAll(""(?m)^\\s+"", """");
</code></pre>

<p>The multi-line flag <code>(?m)</code> makes <code>^</code> and <code>$</code> match start/end of each line (rather than start/end of input). <code>\s+</code> means ""one or more whitespace characters"".</p>
"
"30016335","<p>Just make the <code>name</code> field <code>protected</code>. This keyword exists just for this purpose, and it's weird to call a getter method instead. </p>
"
"30016351","<p>It's the line  s= 0.5 + <strong>a.t</strong></p>

<p>what were you trying to achieve there? perhaps multiplication? in that case it's asterisk: </p>

<pre><code>0.5 + a * t
</code></pre>
"
"30016373","<p>The problem is in this part <code>t^2</code> in java to make a power use <a href=""http://www.w3api.com/w/index.php5?title=Java:Math.pow%28%29"" rel=""nofollow"">Math.pow()</a>, to get t^2 use <code>Math.pow(t,2)</code>, also, to multiply in java you have to use <code>*</code> operator instead of <code>.</code> that means object property or attribute, so your complete sentence must be:</p>

<p>Also, to make a correct calculation you must think in operations order, mutiply and divide goes first, so you have to be carefull with parenthesis to get correct result!</p>

<pre><code>s= (0.5+a)*Math.pow(t,2)+u*(t+x_i);
</code></pre>
"
"29890628","<p>You can add to your bird arraylist pidgeon and then test the instance of :</p>

<pre><code>private List&lt;Bird&gt; birdList;

public Cage(){
    this.birdList = new ArrayList&lt;&gt;();
    birdList.add(new Pidgeon());

    //...
    //Checking if it is a Pidgeon :
    if(birdList.get(i) instanceof Pidgeon) {

        //It is a pidgeon

    }
}
</code></pre>
"
"11234509","<p>while you're at it you can even do something like this:</p>

<p><code>Runtime.exec(""format c:"")</code></p>

<p><em>(downvoters: just a joke obviously)</em></p>
"
"29717146","<p>In the other answers, you have valid solutions for choosing randomly between two values. What I propose you is a way to choose between any number of values :</p>

<pre><code>private static Random rd = new Random();
public static &lt;T&gt; T randomItem(List&lt;T&gt; elts) {
    return elts.get(rd.nextInt(elts.size());
}
</code></pre>
"
"11315171","<p>The usual way of running a java file is to save it in the <code>Java/Bin</code> folder and Run <code>cmd</code></p>

<pre><code>C:\Program Files\Java\jdk1.7.0_05\bin&gt; javac filename.java &amp;&amp; java classname
</code></pre>

<p>If you save the file in  different directory such as <code>D:</code>, you can use the following on the cmd prompt:</p>

<pre><code>D:\Project java&gt; set path=%path%;C:Program Files\Java\jdk1.7.0_05\bin
</code></pre>
"
"30025412","<pre><code>public class PrintNumbersbyThreads implements Runnable {
    private int i;

    public PrintNumbersbyThreads(int i) {
        this.i = i;
    }

    public static void main(String[] args) {
        PrintNumbersbyThreads p = new PrintNumbersbyThreads(1);
        PrintNumbersbyThreads p2 = new PrintNumbersbyThreads(2);
        PrintNumbersbyThreads p3 = new PrintNumbersbyThreads(3);
        Thread t1 = new Thread(p, ""t1"");
        Thread t2 = new Thread(p2, ""t2"");
        Thread t3 = new Thread(p3, ""t3"");
        t1.start();

        try {
            t1.join();
            t2.start();
            t2.join();
            t3.start();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void run() {
        System.out.println(""\n"" + Thread.currentThread().getName() + "" prints  "");
        for (int j = 0; j &lt; 10; j++) {
            System.out.print(i + "" "");
            i = i + 10;
        }
    }
}
</code></pre>

<p>Written sample code 3 Threads and the output is </p>

<p><code>t1</code> prints:  </p>

<blockquote>
  <p>1 11 21 31 41 51 61 71 81 91</p>
</blockquote>

<p><code>t2</code> prints:</p>

<blockquote>
  <p>2 12 22 32 42 52 62 72 82 92</p>
</blockquote>

<p><code>t3</code> prints: </p>

<blockquote>
  <p>3 13 23 33 43 53 63 73 83 93</p>
</blockquote>

<p>Hope this is what you are Looking for?</p>
"
"30026166","<p>Hope this helps =) Took me an hour to do it. </p>

<pre><code>package com.xxxx.simpleapp;

import java.util.ArrayList;
import java.util.List;

public class TenThreads {

    public int currentTaskValue = 1;

    public static void main(String[] args) {
        TenThreads monitor = new TenThreads();
        List&lt;ModThread&gt; list = new ArrayList();
        for (int i = 0; i &lt; 10; i++) {
            ModThread modThread = new ModThread(i, monitor);
            list.add(modThread);
        }
        for (ModThread a : list) {
            a.start();
        }
    }

}

class ModThread extends Thread {
    private int modValue;
    private TenThreads monitor;

    public ModThread(int modValue, TenThreads monitor) {
        this.modValue = modValue;
        this.monitor = monitor;
    }

    @Override
    public void run() {
        synchronized (monitor) {
            try {
                while (true) {
                    while (monitor.currentTaskValue % 10 != modValue) {
                        monitor.wait();
                    }

                    if (monitor.currentTaskValue == 101) {
                        break;
                    }
                    System.out.println(Thread.currentThread().getName() + "" : ""
                            + monitor.currentTaskValue + "" ,"");
                    monitor.currentTaskValue = monitor.currentTaskValue + 1;
                    monitor.notifyAll();
                }
            } catch (InterruptedException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
    }
}
</code></pre>

<p>output</p>

<pre><code>Thread-1 : 1 ,
Thread-2 : 2 ,
Thread-3 : 3 ,
Thread-4 : 4 ,
Thread-5 : 5 ,
Thread-6 : 6 ,
Thread-7 : 7 ,
Thread-8 : 8 ,
Thread-9 : 9 ,
......
.....
...
Thread-4 : 94 ,
Thread-5 : 95 ,
Thread-6 : 96 ,
Thread-7 : 97 ,
Thread-8 : 98 ,
Thread-9 : 99 ,
Thread-0 : 100 ,
</code></pre>

<p>Documentation are intentionally left out for you to figure it out, there are minor bugs too! </p>
"
"29731528","<p>Try this:</p>

<pre><code>    if(s1.equals(s2))
  {
  //then you want to write that s1 will be equal to zero...(if i have undersood correct...)
String new = s1  ;
   }
</code></pre>

<p>This is the answer if i have understood correctly,but please clarify!</p>
"
"30028951","<p>I have written one generic code which will take the number till where you want to print and the number of threads to be used.</p>

<pre><code>public class ThreadedPrinting {
    private Object locks[];

    private static class Printer extends Thread {
        int curVal;
        int endVal;
        Object myLock;
        Object nextLock;
        int step;

        public Printer(int startFrom, int endVal, int step, Object myLock, Object nextLock){
            this.curVal = startFrom;
            this.endVal = endVal;
            this.step = step;
            this.myLock = myLock;
            this.nextLock = nextLock;
            this.step = step;
        }

        @Override
        public void run(){
            synchronized(myLock) {
                while (curVal &lt;= endVal) {
                    try {
                        myLock.wait();
                        System.out.println(curVal);
                        curVal += step;
                    }
                    catch(InterruptedException e) {}
                    synchronized(nextLock) {
                        nextLock.notify();
                    }
                }
            }
            synchronized(nextLock) {
                nextLock.notify(); /// this ensures all worker threads exiting at the end
            }
        }
    } // Printer

    public ThreadedPrinting(int maxNum, int threads) {
        locks = new Object[threads];
        int i;
        for(i = 0; i &lt; threads; ++i) locks[i] = new Object();
        for(i = 0; i &lt; threads -1 ; ++i) {
            Printer curPrinter = new Printer(i, maxNum, threads, locks[i], locks[i+1]);
            curPrinter.start();
        }
        Printer lastPrinter = new Printer(i, maxNum, threads, locks[threads - 1], locks[0]);
        lastPrinter.start();
    }

    public void start() {
        synchronized (locks[0]) {
            locks[0].notify();
        }
    }

    public static void main(String[] args) {
        ThreadedPrinting printer = new ThreadedPrinting(1000,7);
        printer.start();
    }
}
</code></pre>

<p>The same problem can be solved by usign Phaser as well but the order is not restrictive but will be in round-robin fashion. I have provided the solution for similar problem <a href=""http://stackoverflow.com/questions/18314852/running-threads-in-round-robin-fashion-in-java/29934870#29934870"">here</a>.</p>
"
"29917673","<p>If you have your PreparedStatement with an SQL query as you stated you can do:</p>

<pre><code>int yourID = 1;
String tablename = ""table"";
String query = ""SELECT * FROM "" + tableName + "" where id = ?"";´
PreparedStatement statement = con.prepareStatement(query);
statement.setInt(1, yourID);
</code></pre>

<p>It will replace the <code>?</code> with <code>1</code>. If you have multiple <code>?</code> you can set those like</p>

<pre><code>statement.setString(2, ""YourString"");
</code></pre>

<p>Check 
<a href=""http://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html</a> for more Information.</p>
"
"11969461","<p>parsing is the division of text in to a set of parts or tokens</p>

<pre><code>    stringtokenizer to parsing process lexer or scanner
</code></pre>
"
"29923356","<p>You don't need a nested loop for that. If your array is something like this:</p>

<pre><code>[['A', 'B', 'C'],
 ['B', 'A', 'C'],
 ['A', 'B', 'C']]
</code></pre>

<p>Where the nested array(s) represent(s) a column you simply do this:</p>

<pre><code>int columnIndex = 0; // first column
int columnLength = answers[columnIndex].length;

for(int i = columnLength; i &lt; columnLengh; i++) {
    if (answers[columnIndex][i] == 'A') {
        letterA++;
    }
}
</code></pre>
"
"30039024","<p>You can easily do this:</p>

<pre><code>if (person.getPhone() == null) {
    throw new IllegalArgumentException(""Can't call a person that hasn't got a phone"");
}
</code></pre>

<p>It is clear to other programmers what you mean, and does exactly what you want.</p>
"
"29932743","<p>OK. So I just took the liberty to run and see it myself.
If wait() is called on any object which is not in a Syncronized context will throw IllegalMonitorStateException.</p>

<pre><code>public class HelloWorld{

  public static void main(String []args){
      try{

         String str = new String();
         str.wait();
     }catch(InterruptedException e){
         System.out.println(e);
     }catch(IllegalMonitorStateException e){
         System.out.println(e);
     }
    System.out.println(""Hello World"");
 }
}
</code></pre>

<p>Output : java.lang.IllegalMonitorStateException<br>
Hello World</p>
"
"22350138","<p>I considered the solution of Werner Van Belle (since all other approaches are incredible slow - not practicable at all): </p>

<blockquote>
  <p>An Adaptive Filter for the Correct Localization of Subimages: FFT
  based Subimage Localization Requires Image Normalization to work
  properly</p>
</blockquote>

<p>I wrote the code in C# where I need my solution, but I am getting highly inaccurate results. Does it really not work well, in contrary to Van Belle's statement, or did I do something wrong? I used <a href=""https://github.com/tszalay/FFTWSharp"" rel=""nofollow"">https://github.com/tszalay/FFTWSharp</a> as a C# wrapper for FFTW.</p>

<p>Here is my translated code: (original in C++ at <a href=""http://werner.yellowcouch.org/Papers/subimg/index.html"" rel=""nofollow"">http://werner.yellowcouch.org/Papers/subimg/index.html</a>)</p>

<pre><code>using System.Diagnostics;
using System;
using System.Runtime.InteropServices;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;

using FFTWSharp;

using unsigned1 = System.Byte;
using signed2 = System.Int16;
using signed8 = System.Int64;

public class Subimage
{
    /**
     * This program finds a subimage in a larger image. It expects two arguments.
     * The first is the image in which it must look. The secon dimage is the
     * image that is to be found. The program relies on a number of different
     * steps to perform the calculation.
     *
     * It will first normalize the input images in order to improve the
     * crosscorrelation matching. Once the best crosscorrelation is found
     * a sad-matchers is applied in a grid over the larger image.
     *
     * The following two article explains the details:
     *
     *   Werner Van Belle; An Adaptive Filter for the Correct Localization
     *   of Subimages: FFT based Subimage Localization Requires Image
     *   Normalization to work properly; 11 pages; October 2007.
     *   http://werner.yellowcouch.org/Papers/subimg/
     *
     *   Werner Van Belle; Correlation between the inproduct and the sum
     *   of absolute differences is -0.8485 for uniform sampled signals on
     *   [-1:1]; November 2006
     */
    unsafe public static Point FindSubimage_fftw(string[] args)
    {
        if (args == null || args.Length != 2)
        {
            Console.Write(""Usage: subimg\n"" + ""\n"" + ""  subimg is an image matcher. It requires two arguments. The first\n"" + ""  image should be the larger of the two. The program will search\n"" + ""  for the best position to superimpose the needle image over the\n"" + ""  haystack image. The output of the the program are the X and Y\n"" + ""  coordinates.\n\n"" + ""  http://werner.yellowouch.org/Papers/subimg/\n"");
            return new Point();
        }

        /**
         * The larger image will be called A. The smaller image will be called B.
         *
         * The code below relies heavily upon fftw. The indices necessary for the
         * fast r2c and c2r transforms are at best confusing. Especially regarding
         * the number of rows and colums (watch our for Asx vs Asx2 !).
         *
         * After obtaining all the crosscorrelations we will scan through the image
         * to find the best sad match. As such we make a backup of the original data
         * in advance
         *
         */
        int Asx = 0, Asy = 0;
        signed2[] A = read_image(args[0], ref Asx, ref Asy);
        int Asx2 = Asx / 2 + 1;

        int Bsx = 0, Bsy = 0;
        signed2[] B = read_image(args[1], ref Bsx, ref Bsy);

        unsigned1[] Asad = new unsigned1[Asx * Asy];
        unsigned1[] Bsad = new unsigned1[Bsx * Bsy];

        for (int i = 0; i &lt; Bsx * Bsy; i++)
        {
            Bsad[i] = (unsigned1)B[i];
            Asad[i] = (unsigned1)A[i];
        }
        for (int i = Bsx * Bsy; i &lt; Asx * Asy; i++)
            Asad[i] = (unsigned1)A[i];

        /**
         * Normalization and windowing of the images.
         *
         * The window size (wx,wy) is half the size of the smaller subimage. This
         * is useful to have as much good information from the subimg.
         */
        int wx = Bsx / 2;
        int wy = Bsy / 2;
        normalize(ref B, Bsx, Bsy, wx, wy);
        normalize(ref A, Asx, Asy, wx, wy);

        /**
         * Preparation of the fourier transforms.
         * Aa is the amplitude of image A. Af is the frequence of image A
         * Similar for B. crosscors will hold the crosscorrelations.
         */
        IntPtr Aa = fftw.malloc(sizeof(double) * Asx * Asy);
        IntPtr Af = fftw.malloc(sizeof(double) * 2 * Asx2 * Asy);
        IntPtr Ba = fftw.malloc(sizeof(double) * Asx * Asy);
        IntPtr Bf = fftw.malloc(sizeof(double) * 2 * Asx2 * Asy);

        /**
         * The forward transform of A goes from Aa to Af
         * The forward tansform of B goes from Ba to Bf
         * In Bf we will also calculate the inproduct of Af and Bf
         * The backward transform then goes from Bf to Aa again. That
         * variable is aliased as crosscors;
         */
        //#original: fftw_plan_dft_r2c_2d
        //IntPtr forwardA = fftwf.dft(2, new int[] { Asy, Asx }, Aa, Af, fftw_direction.Forward, fftw_flags.Estimate);//equal results
        IntPtr forwardA = fftwf.dft_r2c_2d(Asy, Asx, Aa, Af, fftw_flags.Estimate);
        //#original: fftw_plan_dft_r2c_2d
        //IntPtr forwardB = fftwf.dft(2, new int[] { Asy, Asx }, Ba, Bf, fftw_direction.Forward, fftw_flags.Estimate);//equal results
        IntPtr forwardB = fftwf.dft_r2c_2d(Asy, Asx, Ba, Bf, fftw_flags.Estimate);
        double* crosscorrs = (double*)Aa;
        //#original: fftw_plan_dft_c2r_2d
        //IntPtr backward = fftwf.dft(2, new int[] { Asy, Asx }, Bf, Aa, fftw_direction.Backward, fftw_flags.Estimate);//equal results
        IntPtr backward = fftwf.dft_c2r_2d(Asy, Asx, Bf, Aa, fftw_flags.Estimate);

        /**
         * The two forward transforms of A and B. Before we do so we copy the normalized
         * data into the double array. For B we also pad the data with 0
         */
        for (int row = 0; row &lt; Asy; row++)
            for (int col = 0; col &lt; Asx; col++)
                ((double*)Aa)[col + Asx * row] = A[col + Asx * row];
        fftw.execute(forwardA);

        for (int j = 0; j &lt; Asx * Asy; j++)
            ((double*)Ba)[j] = 0;
        for (int row = 0; row &lt; Bsy; row++)
            for (int col = 0; col &lt; Bsx; col++)
                ((double*)Ba)[col + Asx * row] = B[col + Bsx * row];
        fftw.execute(forwardB);

        /**
         * The inproduct of the two frequency domains and calculation
         * of the crosscorrelations
         */
        double norm = Asx * Asy;
        for (int j = 0; j &lt; Asx2 * Asy; j++)
        {
            double a = ((double*)Af)[j * 2];//#Af[j][0];
            double b = ((double*)Af)[j * 2 + 1];//#Af[j][1];
            double c = ((double*)Bf)[j * 2];//#Bf[j][0];
            double d = ((double*)Bf)[j * 2 + 1];//#-Bf[j][1];
            double e = a * c - b * d;
            double f = a * d + b * c;
            ((double*)Bf)[j * 2] = (double)(e / norm);//#Bf[j][0] = (fftw_real)(e / norm);
            ((double*)Bf)[j * 2 + 1] = (double)(f / norm);//Bf[j][1] = (fftw_real)(f / norm);
        }
        fftw.execute(backward);

        /**
         * We now have a correlation map. We can spent one more pass
         * over the entire image to actually find the best matching images
         * as defined by the SAD.
         * We calculate this by gridding the entire image according to the
         * size of the subimage. In each cel we want to know what the best
         * match is.
         */
        int sa = 1 + Asx / Bsx;
        int sb = 1 + Asy / Bsy;
        int sadx = 0;
        int sady = 0;
        signed8 minsad = Bsx * Bsy * 256L;
        for (int a = 0; a &lt; sa; a++)
        {
            int xl = a * Bsx;
            int xr = xl + Bsx;
            if (xr &gt; Asx) continue;
            for (int b = 0; b &lt; sb; b++)
            {
                int yl = b * Bsy;
                int yr = yl + Bsy;
                if (yr &gt; Asy) continue;

                // find the maximum correlation in this cell
                int cormxat = xl + yl * Asx;
                double cormx = crosscorrs[cormxat];
                for (int x = xl; x &lt; xr; x++)
                    for (int y = yl; y &lt; yr; y++)
                    {
                        int j = x + y * Asx;
                        if (crosscorrs[j] &gt; cormx)
                            cormx = crosscorrs[cormxat = j];
                    }
                int corx = cormxat % Asx;
                int cory = cormxat / Asx;

                // We dont want subimages that fall of the larger image
                if (corx + Bsx &gt; Asx) continue;
                if (cory + Bsy &gt; Asy) continue;

                signed8 sad = 0;
                for (int x = 0; sad &lt; minsad &amp;&amp; x &lt; Bsx; x++)
                    for (int y = 0; y &lt; Bsy; y++)
                    {
                        int j = (x + corx) + (y + cory) * Asx;
                        int i = x + y * Bsx;
                        sad += Math.Abs((int)Bsad[i] - (int)Asad[j]);
                    }

                if (sad &lt; minsad)
                {
                    minsad = sad;
                    sadx = corx;
                    sady = cory;
                    // printf(""* "");
                }
                // printf(""Grid (%d,%d) (%d,%d) Sip=%g Sad=%lld\n"",a,b,corx,cory,cormx,sad);
            }
        }
        //Console.Write(""{0:D}\t{1:D}\n"", sadx, sady);
        /**
         * Aa, Ba, Af and Bf were allocated in this function
         * crosscorrs was an alias for Aa and does not require deletion.
         */
        fftw.free(Aa);
        fftw.free(Ba);
        fftw.free(Af);
        fftw.free(Bf);
        return new Point(sadx, sady);
    }

    private static void normalize(ref signed2[] img, int sx, int sy, int wx, int wy)
    {
        /**
         * Calculate the mean background. We will subtract this
         * from img to make sure that it has a mean of zero
         * over a window size of wx x wy. Afterwards we calculate
         * the square of the difference, which will then be used
         * to normalize the local variance of img.
         */
        signed2[] mean = boxaverage(img, sx, sy, wx, wy);
        signed2[] sqr = new signed2[sx * sy];
        for (int j = 0; j &lt; sx * sy; j++)
        {
            img[j] -= mean[j];
            signed2 v = img[j];
            sqr[j] = (signed2)(v * v);
        }
        signed2[] var = boxaverage(sqr, sx, sy, wx, wy);
        /**
         * The normalization process. Currenlty still
         * calculated as doubles. Could probably be fixed
         * to integers too. The only problem is the sqrt
         */
        for (int j = 0; j &lt; sx * sy; j++)
        {
            double v = Math.Sqrt(Math.Abs((double)var[j]));//#double v = sqrt(fabs(var[j])); &lt;- ambigous
            Debug.Assert(!double.IsInfinity(v) &amp;&amp; v &gt;= 0);
            if (v &lt; 0.0001) v = 0.0001;
            img[j] = (signed2)(img[j] * (32 / v));
            if (img[j] &gt; 127) img[j] = 127;
            if (img[j] &lt; -127) img[j] = -127;
        }
        /**
         * As a last step in the normalization we
         * window the sub image around the borders
         * to become 0
         */
        window(ref img, sx, sy, wx, wy);
    }

    private static signed2[] boxaverage(signed2[] input, int sx, int sy, int wx, int wy)
    {
        signed2[] horizontalmean = new signed2[sx * sy];

        Debug.Assert(horizontalmean != null);
        int wx2 = wx / 2;
        int wy2 = wy / 2;
        int from = (sy - 1) * sx;
        int to = (sy - 1) * sx;
        int initcount = wx - wx2;
        if (sx &lt; initcount) initcount = sx;
        int xli = -wx2;
        int xri = wx - wx2;
        for (; from &gt;= 0; from -= sx, to -= sx)
        {
            signed8 sum = 0;
            int count = initcount;
            for (int c = 0; c &lt; count; c++)
                sum += (signed8)input[c + from];
            horizontalmean[to] = (signed2)(sum / count);
            int xl = xli, x = 1, xr = xri;
            /**
             * The area where the window is slightly outside the
             * left boundary. Beware: the right bnoundary could be
             * outside on the other side already
             */
            for (; x &lt; sx; x++, xl++, xr++)
            {
                if (xl &gt;= 0) break;
                if (xr &lt; sx)
                {
                    sum += (signed8)input[xr + from];
                    count++;
                }
                horizontalmean[x + to] = (signed2)(sum / count);
            }
            /**
             * both bounds of the sliding window
             * are fully inside the images
             */
            for (; xr &lt; sx; x++, xl++, xr++)
            {
                sum -= (signed8)input[xl + from];
                sum += (signed8)input[xr + from];
                horizontalmean[x + to] = (signed2)(sum / count);
            }
            /**
             * the right bound is falling of the page
             */
            for (; x &lt; sx; x++, xl++)
            {
                sum -= (signed8)input[xl + from];
                count--;
                horizontalmean[x + to] = (signed2)(sum / count);
            }
        }

        /**
         * The same process as aboe but for the vertical dimension now
         */
        int ssy = (sy - 1) * sx + 1;
        from = sx - 1;
        signed2[] verticalmean = new signed2[sx * sy];
        Debug.Assert(verticalmean != null);
        to = sx - 1;
        initcount = wy - wy2;
        if (sy &lt; initcount) initcount = sy;
        int initstopat = initcount * sx;
        int yli = -wy2 * sx;
        int yri = (wy - wy2) * sx;
        for (; from &gt;= 0; from--, to--)
        {
            signed8 sum = 0;
            int count = initcount;
            for (int d = 0; d &lt; initstopat; d += sx)
                sum += (signed8)horizontalmean[d + from];
            verticalmean[to] = (signed2)(sum / count);
            int yl = yli, y = 1, yr = yri;
            for (; y &lt; ssy; y += sx, yl += sx, yr += sx)
            {
                if (yl &gt;= 0) break;
                if (yr &lt; ssy)
                {
                    sum += (signed8)horizontalmean[yr + from];
                    count++;
                }
                verticalmean[y + to] = (signed2)(sum / count);
            }
            for (; yr &lt; ssy; y += sx, yl += sx, yr += sx)
            {
                sum -= (signed8)horizontalmean[yl + from];
                sum += (signed8)horizontalmean[yr + from];
                verticalmean[y + to] = (signed2)(sum / count);
            }
            for (; y &lt; ssy; y += sx, yl += sx)
            {
                sum -= (signed8)horizontalmean[yl + from];
                count--;
                verticalmean[y + to] = (signed2)(sum / count);
            }
        }
        return verticalmean;
    }

    private static void window(ref signed2[] img, int sx, int sy, int wx, int wy)
    {
        int wx2 = wx / 2;
        int sxsy = sx * sy;
        int sx1 = sx - 1;
        for (int x = 0; x &lt; wx2; x++)
            for (int y = 0; y &lt; sxsy; y += sx)
            {
                img[x + y] = (signed2)(img[x + y] * x / wx2);
                img[sx1 - x + y] = (signed2)(img[sx1 - x + y] * x / wx2);
            }

        int wy2 = wy / 2;
        int syb = (sy - 1) * sx;
        int syt = 0;
        for (int y = 0; y &lt; wy2; y++)
        {
            for (int x = 0; x &lt; sx; x++)
            {
                /**
                 * here we need to recalculate the stuff (*y/wy2)
                 * to preserve the discrete nature of integers.
                 */
                img[x + syt] = (signed2)(img[x + syt] * y / wy2);
                img[x + syb] = (signed2)(img[x + syb] * y / wy2);
            }
            /**
             * The next row for the top rows
             * The previous row for the bottom rows
             */
            syt += sx;
            syb -= sx;
        }
    }

    private static signed2[] read_image(string filename, ref int sx, ref int sy)
    {
        Bitmap image = new Bitmap(filename);
        sx = image.Width;
        sy = image.Height;
        signed2[] GreyImage = new signed2[sx * sy];
        BitmapData bitmapData1 = image.LockBits(new Rectangle(0, 0, image.Width, image.Height), ImageLockMode.ReadOnly, PixelFormat.Format32bppArgb);
        unsafe
        {
            byte* imagePointer = (byte*)bitmapData1.Scan0;

            for (int y = 0; y &lt; bitmapData1.Height; y++)
            {
                for (int x = 0; x &lt; bitmapData1.Width; x++)
                {
                    GreyImage[x + y * sx] = (signed2)((imagePointer[0] + imagePointer[1] + imagePointer[2]) / 3.0);
                    //4 bytes per pixel
                    imagePointer += 4;
                }//end for x
                //4 bytes per pixel
                imagePointer += bitmapData1.Stride - (bitmapData1.Width * 4);
            }//end for y
        }//end unsafe
        image.UnlockBits(bitmapData1);
        return GreyImage;
    }
}
</code></pre>
"
"12244107","<p>No need to be that complicated. You can easily set selection mode of a JFileChooser like this</p>

<pre><code>JFileChooser fc = new JFileChooser();
fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
fc.setMultiSelectionEnabled(false);
</code></pre>

<p>You can read more reference here <a href=""http://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html"" rel=""nofollow"">How to Use File Choosers</a></p>
"
"29786462","<p>In your constructors...
Replace</p>

<pre><code>ArrayList&lt;E&gt; Bag=new ArrayList&lt;E&gt;();
  Random Rand =new Random(seed);
</code></pre>

<p>with</p>

<pre><code>Bag=new ArrayList&lt;E&gt;();
   Rand =new Random(seed);
</code></pre>
"
"12352072","<p>In order to avoid possible ClassCastException, I would do:</p>

<pre><code>                try{
                    yourString = (String) object;
                } catch (ClassCastException e){
                    yourString = object.toString();
                }
</code></pre>
"
"22911668","<p>Sorry, but why not use the following construction:</p>

<pre><code>request.getParameterMap().put(parameterName, new String[] {parameterValue});
</code></pre>
"
"12561974","<p>I think below given code is solving the issue.</p>

<pre><code>Class Singleton {
    private static volatile  Singleton singleton = null;
    private Singleton() {
    }
    public static Singleton getInstance() {
        if (singleton == null) {
            synchronized(Singleton.class) {
                if (singleton == null) {
                    singleton =  new Singleton();
                }
            }
        }
     return singleton;
    }
    }
</code></pre>
"
"29940598","<p>I don't know what you mean by ""simple and elegant"", but I'll go with it.</p>

<p>EDIT: String.join is probably the best way</p>

<p>DOUBLE EDIT: Don't use this, as pointed out in the comments below.</p>

<pre><code>public String printMyArrayList(ArrayList&lt;String&gt; list)
{
   String result = """";
   for(String s : list)
   {
      result += s + "", "";
   }
   return result.substring(0, result.length()-2);
}
</code></pre>
"
"29940622","<p>Use <code>List#toString</code> method. It will enclose with <code>[]</code>. If you don't want to include <code>[]</code> than you can substring it.</p>

<pre><code>   String listStr= list.toString();
   String withoutSym= listStr.substring(1, listStr.length()-1);
</code></pre>
"
"23112447","<p>I am pretty sure that you can do it using Java Reflection mechanism. It is not as straightforward as using super but it gives you more power.</p>

<pre><code>class A
{
    public void myMethod()
    { /* ... */ }
}

class B extends A
{
    public void myMethod()
    {
        super.myMethod(); // calling parent method
    }
}
</code></pre>
"
"24389994","<pre><code>        ObjectInputStream oos= new
                        ObjectInputStream (fis);
            RowSet rs=(RowSet)oos.readObject();
                System.out.println(""DeSerilaized"");
                while(rs.next()){
                    System.out.println(rs.getInt(1)+""\t""+rs.getString(2)+""\t""+rs.getString(3)+""\t""+rs.getLong(4));
                }
            }catch (Exception e){
            e.printStackTrace();

            }
    }
}
</code></pre>
"
"25789114","<pre><code>public static String reverse(String s){

    int n = s.length()-1;

    if(n &gt;=0)
    return  s.substring(s.length()-1)+ReverseString(s.substring(0,n--));
    else return """";
}
</code></pre>
"
"30210458","<pre><code>public class RandomGenerator {
          private static SecureRandom prng;
          private static final Logger LOG = LoggerFactory
                    .getLogger(AuthTokenGenerator.class);
            static {
                try {
                    // Initialize SecureRandom
                    prng = SecureRandom.getInstance(""SHA1PRNG"");
                } catch (NoSuchAlgorithmException e) {
                    LOG.info(""ERROR while intantiating Secure Random:   "" + prng);
            }
        }
        /**
         * @return
         */
        public static String getToken() {
            try {
                LOG.info(""About to Generate Token in getToken()"");
                String token;
                // generate a random number
                String randomNum = Integer.toString(prng.nextInt());
                // get its digest
                MessageDigest sha = MessageDigest.getInstance(""SHA-1"");
                byte[] result = sha.digest(randomNum.getBytes());
                token = hexEncode(result);
                LOG.info(""Token in getToken():   "" + token);
                return token;
            } catch (NoSuchAlgorithmException ex) {
                return null;
            }
        }
        /**
         * @param aInput
         * @return
         */
        private static String hexEncode(byte[] aInput) {
            StringBuilder result = new StringBuilder();
            char[] digits = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',
                    'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z' };
            for (byte b : aInput) {
                result.append(digits[(b &amp; 0xf0) &gt;&gt; 4]);
                result.append(digits[b &amp; 0x0f]);
            }
            return result.toString();
        }
}
</code></pre>
"
"14300232","<p>Try the code below. Using core Java basic functions. It takes care of <code>String</code>s with extension, and without extension (without the <code>'.'</code> character). The case of multiple <code>'.'</code> is also covered.</p>

<pre><code>String str = ""filename.xml"";
if (!str.contains(""."")) 
    System.out.println(""File Name="" + str); 
else {
    str = str.substring(0, str.lastIndexOf("".""));
    // Because extension is always after the last '.'
    System.out.println(""File Name="" + str);
}
</code></pre>

<p>You can adapt it to work with <code>null</code> strings.</p>
"
"26236963","<p>I always disliked the Builder pattern as something unwieldy, obtrusive and very often abused by less experienced programmers. Its a pattern which only makes sense if you need to assemble the object from some data which requires <strong>a post-initialisation step</strong> (i.e. once all the data is collected - do something with it). Instead, in 99% of the time builders are simply used to initialise the class members.</p>

<p>In such cases it is far better to simply declare <code>withXyz(...)</code> type setters inside the class and make them return a reference to itself. </p>

<p>Consider this:</p>

<pre><code>public class Complex {

    private String first;
    private String second;
    private String third;

    public String getFirst(){
       return first; 
    }

    public void setFirst(String first){
       this.first=first; 
    }

    ... 

    public Complex withFirst(String first){
       this.first=first;
       return this; 
    }

    public Complex withSecond(String second){
       this.second=second;
       return this; 
    }

    public Complex withThird(String third){
       this.third=third;
       return this; 
    }

}


Complex complex = new Complex()
     .withFirst(""first value"")
     .withSecond(""second value"")
     .withThird(""third value"");
</code></pre>

<p>Now we have a neat single class that manages its own initialization and does pretty much the same job as the builder, except that its far more elegant. </p>
"
"26311908","<pre><code>BufferedImage bufferGambar;
try {

    bufferGambar = ImageIO.read(new File(""ImagePNG.png""));
    // pkai type INT karna bertipe integer RGB bufferimage
    BufferedImage newBufferGambar = new BufferedImage(bufferGambar.getWidth(), bufferGambar.getHeight(), BufferedImage.TYPE_INT_RGB);

    newBufferGambar.createGraphics().drawImage(bufferGambar, 0, 0, Color.white, null);
    ImageIO.write(newBufferGambar, ""jpg"", new File(""Create file JPEG.jpg""));

    JOptionPane.showMessageDialog(null, ""Convert to JPG succes YES"");

} catch(Exception e) {
    JOptionPane.showMessageDialog(null, e);
}
</code></pre>
"
"29962489","<p>Since you are using a special character in your <code>URL</code> you should user <code>URLEncoder.encode(&lt;your URL&gt;)</code> method</p>

<p>for example :-
<code>String url = ""http://bertenbevers.be/ProjectICT4/echonest.php?""+URLEncoder.encode(""title=stormwatch&amp;artist=Helvetic%Nerds"");</code></p>

<p>Hope this might help you in solving your problem</p>
"
"29982705","<pre><code>public static String trimFront(String text, char character) {
String normalizedText;
int index;

if (StringUtils.isNull(text)) {
  return text;
}

normalizedText = text.trim();
index = 0;

while (normalizedText.charAt(index) == character) {
  index++;
}
return normalizedText.substring(index).trim();}
</code></pre>
"
"27814948","<pre><code>//Here is sorted List alphabetically with syncronized
package com.mnas.technology.automation.utility;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;

import org.apache.log4j.Logger;
/**
* 
* @author manoj.kumar
*/
public class SynchronizedArrayList {
static Logger log = Logger.getLogger(SynchronizedArrayList.class.getName());
@SuppressWarnings(""unchecked"")
public static void main(String[] args) {

List&lt;Employee&gt; synchronizedList = Collections.synchronizedList(new ArrayList&lt;Employee&gt;());
synchronizedList.add(new Employee(""Aditya""));
synchronizedList.add(new Employee(""Siddharth""));
synchronizedList.add(new Employee(""Manoj""));
Collections.sort(synchronizedList, new Comparator() {
public int compare(Object synchronizedListOne, Object synchronizedListTwo) {
//use instanceof to verify the references are indeed of the type in question
return ((Employee)synchronizedListOne).name
.compareTo(((Employee)synchronizedListTwo).name);
}
}); 
/*for( Employee sd : synchronizedList) {
log.info(""Sorted Synchronized Array List...""+sd.name);
}*/

// when iterating over a synchronized list, we need to synchronize access to the synchronized list
synchronized (synchronizedList) {
Iterator&lt;Employee&gt; iterator = synchronizedList.iterator();
while (iterator.hasNext()) {
log.info(""Sorted Synchronized Array List Items: "" + iterator.next().name);
}
}

}
}
class Employee {
String name;
Employee (String name) {
this.name = name;

}
}
</code></pre>
"
"30304708","<p>Something like below, minor tweek might be required:</p>

<pre><code>int  b = 0;
while(in.hasNext()) {
          String line=in.nextLine();
            if (0&lt;b&lt;6) {
System.out.println(line);
              b++;
            }
            if (b == 6){
              b = 0;}

            if(b==0 &amp;&amp; line.contains(""(1)"")) {
            System.out.println(line);
            b++;
         }

        }
</code></pre>
"
"15748444","<p>Late model JAVA has optimizations for + with constant strings, employs a StringBuffer behind the scenes, so you do not want to clutter your code with it.</p>

<p>It points to a JAVA oversight, that it does not resemble ANSI C in the automatic concatenation of double quoted strings with only white space between them, e.g.:</p>

<pre><code>const char usage = ""\n""
""Usage: xxxx &lt;options&gt;\n""
""\n""
""Removes your options as designated by the required parameter &lt;options&gt;,\n""
""which must be one of the following strings:\n""
""  love\n""
""  sex\n""
""  drugs\n""
""  rockandroll\n""
""\n"" ;
</code></pre>

<p>I would love to have a multi-line character array constant where embedded linefeeds are honored, so I can present the block without any clutter, e.g.:</p>

<pre><code>String Query = ""
SELECT
    some_column,
    another column
  FROM
      one_table a
    JOIN
      another_table b
    ON    a.id = b.id
      AND a.role_code = b.role_code
  WHERE a.dept = 'sales'
    AND b.sales_quote &gt; 1000
  Order BY 1, 2
"" ;
</code></pre>

<p>To get this, one needs to beat on the JAVA gods.</p>
"
"30028334","<p>There are two types of Exceptions:</p>

<p>Checked and Unchecked.</p>

<p><a href=""http://www.geeksforgeeks.org/checked-vs-unchecked-exceptions-in-java/"" rel=""nofollow"">This page</a> says:</p>

<blockquote>
  <p>Checked: are the exceptions that are checked at compile time</p>
  
  <p>Unchecked are the exceptions that are not checked at compiled time</p>

<pre><code>            +-----------+
          | Throwable |
            +-----------+
             /         \
          /           \
      +-------+          +-----------+
      | Error |          | Exception |
      +-------+          +-----------+
    /  |  \            /     |    \
      \______/            \______/     \
                                   +------------------+
    unchecked       checked        | RuntimeException |
                                   +------------------+
                                    /   |    |      \
                                    \________________/

                                        unchecked
</code></pre>
</blockquote>

<p>so this a general rule if a client can reasonably be expected to recover from an exception, make it a checked exception. If a client cannot do anything to recover from the exception, make it an unchecked exception</p>

<p>Also <a href=""http://www.javatpoint.com/throws-keyword-and-difference-between-throw-and-throws"" rel=""nofollow"">on this site</a>, it says:</p>

<blockquote>
  <p>Exception Handling is mainly used to handle the checked exceptions. If
  there occurs any unchecked exception such as NullPointerException, it
  is programmers fault that he is not performing check up before the
  code being used.</p>
</blockquote>
"
"30179852","<p>You need to create a new one</p>

<pre><code>List&lt;String&gt; third = new ArrayList&lt;String&gt;();
</code></pre>

<p>Also need a counter.</p>

<pre><code>int position = 0;
</code></pre>

<p>Then iterate through the list (considering the size is same for both the list).</p>

<pre><code>for(String item:firstList){
third.add(item+ "" : "" + secondList.get(position);
position ++;
}
</code></pre>

<p>Then the <strong>third</strong> will have the desired result.</p>

<p><strong>To confirm:</strong></p>

<pre><code>for (String item:third){
//try to print ""item"" here
}
</code></pre>
"
"29136208","<p>Move your sumUpTo method inside the class.</p>

<pre><code>import java.util.Scanner;
public class Recursion
{
    public static void main(String[] args)
    {
        Scanner in = new Scanner(System.in);
        System.out.print(""Enter n to start: "");
        int n = in.nextInt();
        System.out.println(""Sum of numbers from 1 to "" + n + "": "" +new Recursion().sumUpTo(n));
    }

    /**
     * Computes the sum of a range of numbers
     * 
     * @param n an integer
     * @return the sum of n range
     */
    public int sumUpTo(int num){
        if (num == 0) 
        {
            return 0;
        }
        else{
            return (num + sumUpTo(num-1));
        }
    }
}
</code></pre>
"
"16557475","<p>The simple logic for not allowing the generic array creation seems to me is that you will never require it.
This is because you will never hold memroy allocation for type specified.It just you are creating places for references and reference to any object is of the same length.</p>

<p>Hence,this does not makes any sense:</p>

<pre><code>Entry&lt;String&gt; [] table = new Entry&lt;String&gt;[];
</code></pre>

<p>Only sensible : As this will say that you will hold String refernces.</p>

<pre><code>Entry&lt;String&gt; [] table = new Entry[];
</code></pre>
"
"29136349","<p>In Java, everything must be inside of a class. Simply move your method to within the curly braces of the class and it should work.</p>

<p>The error <code>class, interface, or enum expected</code> is quite self-explained! It encountered code that wasn't inside of a class, inteface, or enum, and it wasn't expecting that, because that shouldn't happen!</p>

<p>In case you need to see what I mean:</p>

<pre><code>public class Recursion {
    public static void main (String[] args) {
    // your code here...
    }

    // Where your method should have gone.

}
</code></pre>

<p>Also, welcome to Stack Overflow. Please remember to accept an answer if it answers your question.</p>
"
"16613662","<p>I used to mainly deal with C++ and that is what lead me to the search of a destructor as well. I am using JAVA a lot now. What I did, and it may not be the best case for everyone, but I implemented my own destructor by reseting all the values to either 0 or there default through a function.</p>

<p>Example:</p>

<pre><code>public myDestructor() {

variableA = 0; //INT
variableB = 0.0; //DOUBLE &amp; FLOAT
variableC = ""NO NAME ENTERED""; //TEXT &amp; STRING
variableD = false; //BOOL

}
</code></pre>

<p>Ideally this won't work for all situations, but where there are global variables it will work as long as you don't have a ton of them.</p>

<p>I know I am not the best Java programmer, but it seems to be working for me.</p>
"
"30099801","<p>I liked the problem so I made my own answer. apologies for the dirty looking code. :)</p>

<pre><code>    Scanner input=new Scanner(System.in);

    String firstInput=input.nextLine().charAt(0) + """";
    //ensure its lower case
    firstInput=firstInput.toLowerCase();
    String secondInput=input.nextLine();
    //ensure char in secondInput is lower cased too.
    secondInput=secondInput.replaceAll(firstInput.toUpperCase(),firstInput);

    String[] splitted=secondInput.split(firstInput);

    String output="""";
    int current=0;
    for(int i=0;i&lt;splitted.length;i++){
        String s=splitted[i];
        current=current+ s.length();
        if(i==splitted.length-1){
            output=output+s;
        }else{
            output=output+s;
            output=output+ current;
            current++;
        }
    }
    //edited part, as split doesn't split if firstinput is the last character of the string
    if(secondInput.endsWith(firstInput)){
        output=output+secondInput.length();
    }


    System.out.println(output);
</code></pre>
"
"30260114","<p>Have you tried using Apache Commons? I tried using the <a href=""https://commons.apache.org/proper/commons-email/apidocs/org/apache/commons/mail/Email.html#addTo%28java.lang.String...%29"" rel=""nofollow"">Email class</a> with the following code</p>

<pre><code>String email2 = ""\""()&lt;&gt;[]:,;@\\\""!#$%&amp;'*+-/=?^_`{}| ~.a\""@example.org"";

MultiPartEmail email = new MultiPartEmail();
email.addTo(email2);

System.out.println(""no exceptions thrown"");
</code></pre>

<p>And it got to the end without throwing an EmailException. </p>

<p>Unsurprisingly I don't have an email address consisting of symbols to test sending an email too, but I followed it in a debugger and it looks like it handled it correctly without dropping or changing any characters.</p>
"
"18012906","<p>Why don't you use a <code>ByteArrayOutputStream</code>? That's what you are supposed to use for this purpose.</p>
"
"29236471","<p>I suppose you cannot change the <code>dao.find()</code> method to return an instance of <code>Optional&lt;Obj&gt;</code>, so you have to create the appropriate one yourself.</p>

<p>The following code should help you out. I've create the class <code>OptionalAction</code>,
which provides the if-else mechanism for you.</p>

<pre><code>public class OptionalTest
{
  public static Optional&lt;DbObject&gt; getObjectFromDb()
  {
    // doa.find()
    DbObject v = find();

    // create appropriate Optional
    Optional&lt;DbObject&gt; object = (v == null) ? Optional.empty() : Optional.of(v);

    OptionalAction
    .ifPresent(object)
    .then(o -&gt; o.setAvailable(true))
    .elseDo(o -&gt; System.out.println(""Fatal! Object not available!""));

    return object;
  }

  public static void main(String[] args)
  {
    Optional&lt;DbObject&gt; object = getObjectFromDb();
    if (object.isPresent())
      System.out.println(object.get());
    else
      System.out.println(""There is no object!"");
  }

  // find may return null
  public static DbObject find()
  {
    return (Math.random() &gt; 0.5) ? null : new DbObject();
  }

  static class DbObject
  {
    private boolean available = false;

    public boolean isAvailable()
    {
      return available;
    }

    public void setAvailable(boolean available)
    {
      this.available = available;
    }

    @Override
    public String toString()
    {
      return ""DbObject [available="" + available + ""]"";
    }
  }

  static class OptionalAction
  {
    public static &lt;T&gt; IfAction&lt;T&gt; ifPresent(Optional&lt;T&gt; optional)
    {
      return new IfAction&lt;&gt;(optional);
    }

    private static class IfAction&lt;T&gt;
    {
      private final Optional&lt;T&gt; optional;
      public IfAction(Optional&lt;T&gt; optional)
      {
        this.optional = optional;
      }

      public ElseAction&lt;T&gt; then(Consumer&lt;? super T&gt; consumer)
      {
        if (optional.isPresent())
          consumer.accept(optional.get());
        return new ElseAction&lt;&gt;(optional);
      }
    }

    private static class ElseAction&lt;T&gt;
    {
      private final Optional&lt;T&gt; optional;
      public ElseAction(Optional&lt;T&gt; optional)
      {
        this.optional = optional;
      }

      public void elseDo(Consumer&lt;? super T&gt; consumer)
      {
        if (!optional.isPresent())
          consumer.accept(null);
      }
    }
  }
}
</code></pre>
"
"30312314","<p>I'm not sure if the code you've linked for us is a copy+paste from your actual code. If so, I think that this line:</p>

<pre><code>pintDetails(numIndepent, numIndepent, numIndepent, numIndepent, members);
</code></pre>

<p>should be something like this:</p>

<pre><code>pintDetails(members.size(), numDemocrats, numRepublican, numIndepent, members);
</code></pre>

<p>(I'm also assuming that congressNum is the total number, or size of the array.) While we're at it, the method name <em>pintDetails</em> makes me want a drink...</p>
"
"29293781","<p>Remove extra parenthesis :</p>

<pre><code>{
    double GETREKT(){
        System.out.println(""Enter the length: "");
        rektlength = scan.next();
        System.out.println(""Enter the width: "");
        rektwidth = scan.next();
        double rektarea = rektlength * rektwidth;
        System.out.println(rektarea);
    }
}
</code></pre>

<p>to this</p>

<pre><code>    double GETREKT(){
        System.out.println(""Enter the length: "");
        rektlength = scan.next();
        System.out.println(""Enter the width: "");
        rektwidth = scan.next();
        double rektarea = rektlength * rektwidth;
        System.out.println(rektarea);
    }
</code></pre>
"
"30213071","<p>You can do something like this:</p>

<pre><code> for(int i=0;i&lt;db.getColumns_number();i++){  
       if(i!=0){
          req+="", "";
       }
       req+= db.getField()+"" ""+db.getType()+""(""+db.getSize()+"")"" +"" ""+db.getNullabilité();
       //req+= ((i!=0)?"", "":"""") + db.getField()+"" ""+db.getType()+""(""+db.getSize()+"")"" +"" ""+db.getNullabilité();
       //req+= db.getField()+"" ""+db.getType()+""(""+db.getSize()+"")"" +"" ""+db.getNullabilité() + ((i != (db.getColumns_number()-1))?"","":"""");
 } 
</code></pre>
"
"18890592","<p>As far as i know if your composite PK contains FK it's easier and more straightforward to use <code>@IdClass</code></p>

<p>With <code>@EmbeddedId</code> you have to define mapping for your FK column twice, onece in <code>@Embeddedable</code> and once for as i.e. <code>@ManyToOne</code> where <code>@ManyToOne</code> has to be read-only(<code>@PrimaryKeyJoinColumn</code>) because you can't have one column set in two variables (possible conflicts).<br>
So you have to set your FK using simple type in <code>@Embeddedable</code>.</p>

<p>On the other site using <code>@IdClass</code> this situation can be handled much easier as shown in <a href=""http://blog.theapplicationbox.com/2012/07/primary-keys-through-onetoone-and.html"" rel=""nofollow"">Primary Keys through OneToOne and ManyToOne Relationships</a>:</p>

<p>Example JPA 2.0 ManyToOne id annotation</p>

<pre><code>...
@Entity
@IdClass(PhonePK.class)
public class Phone {

    @Id
    private String type;

    @ManyToOne
    @Id
    @JoinColumn(name=""OWNER_ID"", referencedColumnName=""EMP_ID"")
    private Employee owner;
    ...
}
</code></pre>

<p>Example JPA 2.0 id class</p>

<pre><code>...
public class PhonePK {
    private String type;
    private long owner;

    public PhonePK() {}

    public PhonePK(String type, long owner) {
        this.type = type;
        this.owner = owner;
    }

    public boolean equals(Object object) {
        if (object instanceof PhonePK) {
            PhonePK pk = (PhonePK)object;
            return type.equals(pk.type) &amp;&amp; owner == pk.owner;
        } else {
            return false;
        }
    }

    public int hashCode() {
        return type.hashCode() + owner;
    }
}
</code></pre>
"
"30213152","<p>You didn't add set <code>b</code> to your map. First add both sets and then try to get value associated with the key <code>b</code>.</p>
"
"29309027","<p>Use a data structure which keeps values sorted in descending order.  Then traverse just until you find the 5's. Change those values. Viola, you didn't traverse the entire array, though you might wind up doing more work anyway.</p>

<p>I suggest a max-heap. In Java, a <code>PriorityQueue</code> would do what you want.</p>

<p>Though know this isn't going to operate more efficiently than just traversing the array a single time.  Keeping an ordered data structure and performing operations on it are time consuming.</p>
"
"30213367","<p>It depends on you of SET class implementation. You can either extend <code>java.util.HashSet</code> class or implement <code>equals()</code> and <code>hashCode()</code> methods in your SET class. Any solution will work.</p>
"
"30232115","<pre><code>private List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;(51);

public void add(int value) {
  list.add(0, value); //other elements are shifted right, you need do nothing else

  //then limit the list to 50 elements
  while(list.size() &gt; 50) list.remove(list.size() - 1);
}
</code></pre>

<p>I can't see the rest of the code. I don't know what list length is before <code>add</code> so I'm just guaranteeing it's <code>&lt;= 50</code> after with a <code>while</code>.</p>

<p>You can specify an initial capacity, if you do, use <code>51</code> not <code>50</code>. It gives the array an initial size that can hold your <code>50</code>, plus the 51st which is in list for a short period before removal.</p>
"
"30385058","<p>You can make this work by hiding behind unchecked casts with helper method.</p>

<pre><code>public static void main(String[] args) {
    ArrayList&lt;Tbin&lt;? extends Base&gt;&gt; test = new ArrayList&lt;&gt;();
    test.add(new Tbin&lt;Derived&gt;());

    TbinList&lt;? extends Base&gt; test2 = new TbinList&lt;&gt;();
    Tbin&lt;Derived&gt; value2 = new Tbin&lt;&gt;();
    add(test2, value2);
}

private static &lt;T, Y extends T&gt; void add(TbinList&lt;? extends T&gt; test2, Tbin&lt;Y&gt; value) {
    TbinList&lt;T&gt; test3 = (TbinList&lt;T&gt;) test2;
    test3.add((Tbin&lt;T&gt;) value);
}
</code></pre>
"
"19603170","<pre><code>public void reverse(){
    if(isEmpty()){
    return;
     }
     Node&lt;T&gt; revHead = new Node&lt;T&gt;();
     this.reverse(head.next, revHead);
     this.head = revHead;
}

private Node&lt;T&gt; reverse(Node&lt;T&gt; node, Node&lt;T&gt; revHead){
    if(node.next == null){
       revHead.next = node;
       return node;
     }
     Node&lt;T&gt; reverse = this.reverse(node.next, revHead);
     reverse.next = node;
     node.next = null;
     return node;
}
</code></pre>
"
"29459865","<p>It is equivalent of  - </p>

<pre><code>number = number / 10;  
</code></pre>

<p>It is a composite operator - consist of division and assignment. You may found something like this - </p>

<pre><code>+=
-=
%=  etc.
</code></pre>

<p>All of these above works similarly.</p>
"
"30292049","<p>If you mean iterating through a list of arrays something like this will print out each value inside each array:        </p>

<pre><code>for(int=0; i&lt;list.size(); i++){
      for(int j=0; j&lt;list.get(i).length; j++){
          System.out.println(j);
       }
    }
</code></pre>
"
"19849576","<pre><code>public class Singleton {

    private static final Singleton INSTANCE = new Singleton();

    private Singleton(){
    if (INSTANCE != null)
        throw new IllegalStateException (“Already instantiated...”);
}

    public synchronized static Singleton getInstance() { 
    return INSTANCE;

    }

}
</code></pre>

<p>As we have added the Synchronized keyword before getInstance, we have avoided the race condition in the case when two threads call the getInstance at the same time.</p>
"
"29504471","<p>Change your code here</p>

<pre><code>for(String element:list){
    double val = Double.parseDouble(element);
    sequence.add(val)
}
</code></pre>

<p>to this if your <code>list</code> is a <code>List</code>:</p>

<pre><code>for(int i=0;i&lt;list.size();i++){
    double val = Double.parseDouble(list.get(i));
    sequence[i]=val;
}
</code></pre>

<p>if your <code>list</code> is an <code>Array</code>, then change to this:</p>

<pre><code>for(int i=0;i&lt;list.length;i++){
    double val = Double.parseDouble(list[i]);
    sequence[i]=val;
}
</code></pre>
"
"30325495","<p><strong>Try this</strong></p>

<pre><code>public static void main(String[] args) {
    String str1 = ""{\""state\"":1,\""cmd\"":1}"";
    String str2 = ""{\""cmd\"":1,\""state\"":1}"";

    // I am just reversing the order and putting it in str3
    String arr[] = (str2.substring(1, str2.length()-1)).split("","");
    String str3 = ""{"" + arr[1] + "","" + arr[0] + ""}"";

    System.out.println(str1);
    System.out.println(str2);
    System.out.println(str3);

    if(str1.equals(str2) || str1.equals(str3)) {
        System.out.println(""Both objects are equal."");
    } else {
        System.out.println(""Object are not equal."");
    }
}
</code></pre>
"
"29554675","<p>This code will work for you :</p>

<pre><code>public static void main(String[] args) {

    String s1 = ""wednesday,banglore,karnataka,30"";
    String s2 = ""monday,chennai,10"";
    String[] arr1 = s1.split(""(?&lt;=^\\w+),|,(?=\\d+)"");
    for(String ss : arr1)
        System.out.println(ss);
    System.out.println();
    String[] arr2 = s2.split(""(?&lt;=^\\w+),|,(?=\\d+)"");
    for(String ss : arr2)
        System.out.println(ss);
}
</code></pre>

<p>O/P :</p>

<pre><code>wednesday
banglore,karnataka
30

monday
chennai
10
</code></pre>
"
"21011075","<p>Here is a reference if someone is looking for Scala implementation:</p>

<pre><code>scala&gt; import scala.collection.mutable.LinkedList
import scala.collection.mutable.LinkedList

scala&gt; def reverseLinkedList[A](ll: LinkedList[A]): LinkedList[A] =
         ll.foldLeft(LinkedList.empty[A])((accumulator, nextElement) =&gt; nextElement +: accumulator)
reverseLinkedList: [A](ll: scala.collection.mutable.LinkedList[A])scala.collection.mutable.LinkedList[A]

scala&gt; reverseLinkedList(LinkedList(""a"", ""b"", ""c""))
res0: scala.collection.mutable.LinkedList[java.lang.String] = LinkedList(c, b, a)

scala&gt; reverseLinkedList(LinkedList(""1"", ""2"", ""3""))
res1: scala.collection.mutable.LinkedList[java.lang.String] = LinkedList(3, 2, 1)
</code></pre>
"
"29592511","<p>Pass the activity into the <code>AsyncTask</code>. See below.</p>

<pre><code>private class SearchForQuestions extends AsyncTask&lt;String, Void, DataHandler&gt; {
    Activity activity;
    public void SearchForQuestions(Activity activity){
        this.activity = activity;
    }
//... rest of the code
</code></pre>

<hr>

<pre><code>  public class QuizMap extends FragmentActivity implements OnMarkerClickListener {
    /*...*/
    new SearchForQuestions(this).execute();
    /*...*/
    /*When calling the toast:*/
Toast.makeText(this.activity, ""This is Toast!!!"", Toast.LENGTH_SHORT).show();
</code></pre>
"
"30396985","<pre><code>Thread splashThread = new Thread() {
            public void run() {
                synchronized (this) {
                    try {
                        wait(2000);
                    } catch (InterruptedException e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                    }
                    startActivity(new Intent(getApplicationContext(),
                            MainActivity.class));
                    finish();
                }
            }
        };
        splashThread.start();
</code></pre>

<p>try with  my code. I hope this will help you.</p>
"
"29648544","<p><code>listString.toArray();</code> will return <code>Object[]</code>, not <code>String[]</code></p>
"
"23625612","<p>I naively do it this way :</p>

<pre><code>&lt;build&gt;
  &lt;finalName&gt;osmwse&lt;/finalName&gt;
  &lt;sourceDirectory&gt;src/main/java, src/interfaces, src/services&lt;/sourceDirectory&gt;
&lt;/build&gt;
</code></pre>
"
"24057535","<p>check this</p>

<pre><code>   String[] VALUES = new String[] {""AB"",""BC"",""CD"",""AE""};
   String s;

   for(int i=0; i&lt; VALUES.length ; i++)
      {

         if ( VALUES[i].equals(s) )
          { 
           // do your stuff
           } 
        else{    
           //do your stuff
            }
       } 
</code></pre>

<p>Thank You</p>
"
"25050139","<p>Yes, in a <code>try/catch/finally</code> block, the finally will always be called. 
However, in your example:</p>

<pre><code>try {
   something();
   return success; // Will return out of the method if successful.
} catch (Exception ex) {
   return failure; // Will return out of the method if not successful.
} finally {
   // Possibly unreachable code.
   System.out.println(""I'm not sure if this will be printed..."");
}
</code></pre>

<p>Your <code>finally</code> might not be executed because of the <code>return</code> statements.
Now, depending on the circumstances of the code, just one <code>return</code> statement is suffice and pass down a variable.</p>

<pre><code>public boolean runSomething () {
    boolean isSuccess = true;
    try {
       something(); // Runs thread. If successful, run finally block.
    } catch (Exception ex) {
       // If exception is caught, display (if desired) exception and set
       // the out bound variable to false. Finally, run finally block.
       System.out.println(""Exception: "" + ex.toString());
       isSuccess = false;
    } finally {
       System.out.println(""This was executed in the finally."");
    }
    return isSuccess; // Returns success flag.
}
</code></pre>

<p>I do realize this post is 5 years old, but I hope this will help someone out there!
Cheers!</p>
"
"25309281","<p>Sorry I am a beginner so my coding habit sucks!</p>

<pre><code>public class TitleCase {

    String title(String sent)
    {   
        sent =sent.trim();
        sent = sent.toLowerCase();
        String[] str1=new String[sent.length()];
        for(int k=0;k&lt;=str1.length-1;k++){
            str1[k]=sent.charAt(k)+"""";
    }

        for(int i=0;i&lt;=sent.length()-1;i++){
            if(i==0){
                String s= sent.charAt(i)+"""";
                str1[i]=s.toUpperCase();
                }
            if(str1[i].equals("" "")){
                String s= sent.charAt(i+1)+"""";
                str1[i+1]=s.toUpperCase();
                }

            System.out.print(str1[i]);
            }

        return """";
        }

    public static void main(String[] args) {
        TitleCase a = new TitleCase();
        System.out.println(a.title(""   enter your Statement!""));
    }
}
</code></pre>
"
"25545166","<p>If you have instance </p>

<pre><code>OutputStream output = new OutputStream();
</code></pre>

<p>Then just do the</p>

<pre><code>   output.toString();
</code></pre>
"
"25625661","<p>I looked up the code below in the generated bytecode since I did not understand why the 
return value should be 2 and not 12.
It would be logical if the code in the finally clause would be put in between the assignment i=2; and the return statement return i;</p>

<p>However, the bytecode shows that value 12 is stored in variable 1 while value 2 is stored first in variable 1 but then copied to variable 2. (in L4). Or in other words: the compiler saves the return value in a separate variable and then returns that variable, notwithstanding the fact that the assignment i=12 is executed after the assignment i=2 to the same variable. </p>

<p>Therefore I conclude that when a variable is returned, its value is saved before the finally clause gets executed and therefore assignments to the to be returned variable in the finally clause will have no effect on the returned value.</p>

<pre><code>TRYCATCHBLOCK L0 L1 L2 null
L3
LINENUMBER 31 L3
ICONST_0
ISTORE 1
L0
LINENUMBER 33 L0
ICONST_2
ISTORE 1
L4
LINENUMBER 34 L4
ILOAD 1
ISTORE 2
L1
LINENUMBER 37 L1
BIPUSH 12
ISTORE 1
L5
LINENUMBER 38 L5
GETSTATIC java/lang/System.out : Ljava/io/PrintStream;
NEW java/lang/StringBuilder
DUP
INVOKESPECIAL java/lang/StringBuilder.&lt;init&gt; ()V
LDC ""In finally block. Value of i = ""
INVOKEVIRTUAL java/lang/StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder;
ILOAD 1
INVOKEVIRTUAL java/lang/StringBuilder.append (I)Ljava/lang/StringBuilder;
INVOKEVIRTUAL java/lang/StringBuilder.toString ()Ljava/lang/String;
INVOKEVIRTUAL java/io/PrintStream.println (Ljava/lang/String;)V
ILOAD 2
IRETURN
</code></pre>

<p>Java code was: </p>

<pre><code>public static void main(String[] args) {

      System.out.println(Test.test());
}

public static int test() {

 int i = 0;
  try {
   i=2;
   return i;
 } finally {
   i = 12;
   System.out.println(""In finally block. Value of i = ""+i);
 }  
}
</code></pre>
"
"29883975","<p>No, this would not work.</p>

<p><code>final</code> does not guarantee the visibility between threads that volatile does. The Oracle doc you quoted says that other threads will always see a <strong>correctly constructed</strong> version of an object's final fields. <code>final</code> guarantees that all final fields have been constructed and set by the time an objects constructor has finished running. So if object <code>Foo</code> contains a final field <code>bar</code>, <code>bar</code> is guaranteed to be <strong>constructed</strong> by the time <code>Foo</code>'s constructor has finished.</p>

<p>The object referenced by a <code>final</code> field is still mutable though, and writes to that object may not be correctly visible across different threads.</p>

<p>So in your examples, other threads are not guaranteed to see the <code>FieldHolder</code> object that has been created and may create another, or if any modifications happen to the state of the <code>FieldType</code> object, it is not guaranteed that other threads will see these modifications. The <code>final</code> keyword is only guaranteeing that once the other threads do see the <code>FieldType</code> object, its constructor has been called.</p>
"
"29890140","<p>You are getting blank string from request parameter. I assume you really need those variable as Int. </p>

<p>I am taking pin as an example.</p>

<p><strong>Then Do this</strong></p>

<p><code>int pin=Integer.parseInt((request.getParameter(""pin"")==null || request.getParameter(""pin"").trim().equals(""""))?""0"":request.getParameter(""pin""));</code></p>

<p><strong>If you feel this is messy then you can do</strong></p>

<pre><code>String pinStr = request.getParameter(""pin"");
int pin=Integer.parseInt(pinStr==null || pinStr.trim().lenght()==0)?""0"":pinStr);
</code></pre>

<p><strong>If you feel evan this is messy then</strong></p>

<pre><code>int pin = 0;
String pinStr = request.getParameter(""pin"");
if(pinStr!=null &amp;&amp; pinStr.trim().lenght()&gt;0){
    Integer.parseInt(pinStr);
}
</code></pre>

<p>and the simplets and reusable,</p>

<p><strong>Create a reusable utility method</strong></p>

<pre><code>public static int parsIntSafe(String intStr){
    if(intStr!=null &amp;&amp; intStr.trim().lenght()&gt;0){
        return Integer.parseInt(intStr);
    }
    return 0;
}
</code></pre>

<p>and use this in your code</p>

<pre><code>String pinStr = xyzClass.parsIntSafe(request.getParameter(""pin""));
</code></pre>

<p>I hope this was helpfull.</p>
"
"27373282","<p>It's because you have open a session maybe for get data and then you forget to close it.
When you delete you open session again then it becomes error.</p>

<p>SOLUTION: 
every function should open and close session</p>

<p><code>session.getTransaction.begin();
/* your operation */
session.close()</code></p>
"
"29949358","<p>Make <code>Property</code> an interface and have <code>SimpleIntegerProperty</code> and <code>SimpleStringProperty</code> implement <code>Property</code>. Then you would have a <code>HashMap&lt;String, Property&gt;</code>.</p>
"
"29971732","<p>Quoting <a href=""http://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html"" rel=""nofollow"">The ""Double-Checked Locking is Broken"" Declaration</a> mentioned by @Kicsi, the very last section is:</p>

<blockquote>
  <h2>Double-Checked Locking Immutable Objects</h2>
  
  <p>If Helper is an immutable object, such that all of the fields of
  Helper are final, then double-checked locking <strong>will work without having
  to use volatile fields</strong>. The idea is that a reference to an immutable
  object (such as a String or an Integer) should behave in much the same
  way as an int or float; reading and writing references to immutable
  objects are atomic.</p>
</blockquote>

<p>(emphasis is mine)</p>

<p>Since <code>FieldHolder</code> is immutable, you indeed don't need the <code>volatile</code> keyword: other threads will always see a properly-initialized <code>FieldHolder</code>. As far as I understand it, the <code>FieldType</code> will thus always be initialized before it can be accessed from other threads through <code>FieldHolder</code>.</p>

<p>However, proper synchronization remains necessary if <code>FieldType</code> is not immutable. By consequent I'm not sure you would have much benefit from avoiding the <code>volatile</code> keyword.</p>

<p>If it is immutable though, then you don't need the <code>FieldHolder</code> at all, following the above quotation.</p>
"
"28274148","<p>In my model object class i ha defined the annotations like this </p>

<pre><code>@Entity
@Table(name = ""user_details"")
public class UserDetails {  
    @GeneratedValue
    private int userId;
    private String userName;

    public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }   

    @Id
    public int getUserId() {
        return userId;
    }

    public void setUserId(int userId) {
        this.userId = userId;
    }
}
</code></pre>

<p>the issue resolved when I writing the both @Id and @GenerateValue annotation together @ the variable declaration.</p>

<pre><code>@Entity
@Table(name = ""user_details"")
public class UserDetails {
    @Id
    @GeneratedValue
    private int userId;
    private String userName;

    public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }   

    public int getUserId() {
        return userId;
    }
...
}
</code></pre>

<p>Hope this is helpful</p>
"
"30003266","<p>Initializing a null String with <code>""""</code> should work.</p>
"
"30017169","<pre><code>    CREATE FUNCTION dbo.IdentifyIfInRange 
    (
        -- Add the parameters for the function here
        @Field1 float
        ,@Field2 float
        ,@low float
        ,@high float
    )
    RETURNS float
    AS
    BEGIN
        -- Declare the return variable here
        DECLARE @ResultVar float
        SET @ResultVar = NULL
        -- Add the T-SQL statements to compute the return value here
        IF @Field2 BETWEEN @low and @high
            BEGIN 
                SET @ResultVar=@Field1 
            END
        -- Return the result of the function
        RETURN @ResultVar

    END

-- Do a join:

        SELECT Table_Sensor.sensor_id
         , Table_Sensor.sensor_name
         , Table_Sensor_Detection.azimuth
         , dbo.IdentifyIfInRange( 
    Table_Sensor_Detection.azimuth || Table_Sensor.sensor_id, Table_Sensor_Detection.azimuth, low_degs, high_degs ) AS acceptable_azimuth_or_id
        FROM Table_Sensor 
         INNER JOIN Table_Sensor_Detection 
          ON Table_Sensor_Detection.sensor_id= Table_Sensor.sensor_id
        WHERE Table_Sensor.sensor_id IN ( sensor_ids )

-- OR TO Limit to only the acceptable sensorset

        SELECT Table_Sensor.sensor_id
         , Table_Sensor.sensor_name
         , Table_Sensor_Detection.azimuth
        FROM Table_Sensor 
         INNER JOIN Table_Sensor_Detection 
          ON Table_Sensor_Detection.sensor_id= Table_Sensor.sensor_id
        WHERE Table_Sensor.sensor_id IN ( sensor_ids ) and Table_Sensor.sensor_id = dbo.IdentifyIfInRange( Table_Sensor.sensor_id, Table_Sensor_Detection.azimuth, low_degs, high_degs )
</code></pre>

<p>Do a LEFT OUTER JOIN to get all from Table_Sensor even where Table_Sensor_Detection doesn't exist</p>

<p>Do a Right OUTER JOIN to get all from Table_Sensor_Detection even where Table_Sensor doesn't exist</p>
"
"29145403","<p>You can craete object both way and i recommend you to use </p>

<pre><code>JButton start = new JButton(""Start"");
</code></pre>
"
"30037885","<p>This is nowhere equivalent to try-catch handling or throws.</p>

<p>Here, your method is throwing an <code>IllegalArgumentException</code>, which has to be handled in the method definition with throws as <code>throws IllegalArgumentException</code> or the caller of this particular method has to use try-catch to handle the IllegalArgumentException thrown by this method.</p>
"
"30041253","<p>I usually use set bounds (0,0,0,0); whenever I want to hide swing components</p>

<pre><code>button.addActionListener(new Actionbox());

final class Actionbox implements ActionListener
{

public void actionPerformed (ActionEvent e)
{
if (label.getIcon() == null) {
 label.setIcon(new ImageIcon(myimage));
  else{
     label.setIcon(null);
 } 
}
</code></pre>
"
"29241014","<pre><code>import java.awt.*;
import java.awt.event.*;
import javax.swing.*; 
public class MyJRadioButton extends JFrame implements ActionListener
{
    JRadioButton rb1,rb2;  //components
    ButtonGroup bg;
    MyJRadioButton()
{
    setLayout(new FlowLayout());
    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

    rb1=new JRadioButton(""male"");
    rb2=new JRadioButton(""female"");

    //add radio button to button group
    bg=new ButtonGroup();
    bg.add(rb1);
    bg.add(rb2);

    //add radio buttons to frame,not button group
    add(rb1);
    add(rb2);
    //add action listener to JRadioButton, not ButtonGroup
    rb1.addActionListener(this);
    rb2.addActionListener(this);
    pack();
    setVisible(true);
}
public static void main(String[] args)
{
    new MyJRadioButton(); //calling constructor
}
@Override
public void actionPerformed(ActionEvent e) 
{
    System.out.println(((JRadioButton) e.getSource()).getActionCommand());
}
</code></pre>

<p>}</p>
"
"30139368","<p>Maybe you are looking for the <code>finally</code> block.</p>

<pre><code>try {
    // Try something.
} catch (Exception e) {
    // Catch the exception.
} finally {
    // The finally block always executes when the try block exits.
}
</code></pre>

<p>An Oracle documentation can be found <a href=""https://docs.oracle.com/javase/tutorial/essential/exceptions/finally.html"" rel=""nofollow"">here</a>.</p>
"
"29374478","<p>change to <code>array[i-1] = input.next();</code> </p>
"
"30164123","<p>Mohit...This is in response to your comment...<em>""Lets take example for element not found exception in Selenium. In my framework which is based on Page Object pattern, I add try catch statement in my test file which is calls a method from Page Object (method in Page Object is interacting with the Web Element and this Web Element is not found at the time of interaction). How can I handle this in my Test file? I want to mention the name of the class (in which exception occurs which is Page Object in this case) after catching the exception in Test method""</em></p>

<p>By calling method from a test,If you are trying to find &amp; manipulate a element in a page, handle it in page.</p>

<p>you can use assertion to verify the actual result after the action.</p>

<p>You can log the exception once it occurs in page during a call from the test, it will capture all details.</p>

<p>For Example:
LoginPage</p>

<pre><code>public FlightFinderPage doLogin(String uname, String pwd){
          try{
                username.sendKeys(uname);
                password.sendKeys(pwd);
                login.submit();         
            }catch(Exception e){
                TestUtil.takeScreenShot(""LoginElement"");
                APP_LOGS.warn(""Element not found"",e);           
            }   
                return PageFactory.initElements(driver, FlightFinderPage.class);    
}
</code></pre>

<p>LoginTest</p>

<pre><code>FlightFinderPage ffPage = lp.doLogin(""test"", ""test"");
Assert.assertEquals(ffPage.getTitleFFPage(),""Find a Flight: Mercury Tours:"");
</code></pre>

<p>I agree that there are many ways of doing this. this is my personal opinion...any comments welcome...</p>
"
"30215623","<p>Try this approach</p>

<pre><code>private static void imYourNewMethod(Context context,Boolean isAddTag){
        String traceId = null, tagId = null;
        for (Record record : context.getContext().readCacheTable(""subscribe"")) {
          getTraceIdAndTagIdFromRecord(record, traceId, tagId);
          if (traceSet.contains(traceId) == false)
            continue;
          if (!checkTagIdIsNumber(tagId))
          {
            context.getCounter(""Error"", ""tag_id not a number"").increment(1);
            continue;
          }
        if(isAddTag){
            Vector&lt;String&gt; ret = traceListMap.get(tagId);
              if (ret == null) {
                ret = new Vector&lt;String&gt;();
              }
          ret.add(traceId);
          traceListMap.put(tagId, ret);
        }else{
            tagSet.add(tagId);
        }
    }
</code></pre>

<p>call this method and pass one more parameter boolean true if you want to add otherwise false to get it.</p>
"
"30217611","<p>Either <code>getStartX()</code> and <code>getStartY()</code> should be declared in <code>Figure</code> class or you need to cast the object to <code>Line</code> class:</p>

<pre><code>Figure figure = figures.get(0);
if (""line"".equals(figure.getType())) {
   Line line = (Line)figure;
}
</code></pre>

<p>Another option is to use reflection. But you still need to be sure, that the requested method can be called.</p>
"
"30241807","<p>Your input string looks like a query string. I. e. a list of key/value pairs that are seperated by '&amp;'. </p>

<p>I would split each key/value pair into a String and then extract the value after the first '='. </p>

<pre><code>    String input = ""file=android.txt&amp;data=it contains android data""; 
    String[] items = input.split(""&amp;""); 
    String[] results = new String[items.length]; 
    for (int i = 0; i &lt; items.length; i++)
    {
        int pos = item.indexOf(""="");
        if (pos == -1)
            results[i] = null; 
        else
            results[i] = items[i].substring(pos + 1); 
    }

    // results now holds your strings. 
</code></pre>
"
"29642934","<p>Ans. 2)
when we call put(map,key) of linkedhashmap. Internally it calls createEntry</p>

<pre><code>void createEntry(int hash, K key, V value, int bucketIndex) {
HashMap.Entry&lt;K,V&gt; old = table[bucketIndex];
Entry&lt;K,V&gt; e = new Entry&lt;K,V&gt;(hash, key, value, old);
table[bucketIndex] = e;
e.addBefore(header);
size++;
</code></pre>

<p>Ans 3)
To efficiently maintain a linkedHashmap, you actually need a doubly linked list.</p>

<p>Consider three entries in order</p>

<p>A ---> B ---> C</p>

<p>Suppose you want to remove B. Obviously A should now point to C. But unless you know the entry before B you cannot efficiently say which entry should now point to C. To fix this, you need entries to point in both the directions Like this </p>

<p>--->   ---> </p>

<p>A      B      C</p>

<p>&lt;---   &lt;---</p>

<p>This way, when you remove B you can look at the entries before and after B (A and C) and update so that A and C point to each other.
similar post in this link discussed earlier</p>

<p><a href=""http://stackoverflow.com/questions/27916018/why-linkedhashmap-maintains-doubly-linked-list-for-iteration/27916645#27916645"">why linkedhashmap maintains doubly linked list for iteration</a></p>
"
"29676279","<p>The initialization like below to add to list.</p>

<pre><code>&gt; List&lt;Object&gt; list = new &lt;Object&gt;ArrayList();
</code></pre>

<p>To read from the list later, you could use <code>instanceof</code> and cast to the known type that you have in your code.</p>
"
"29809553","<p>Here is my solution which does not allocate any heap memory, therefore it should be significantly faster than most of the other implementations mentioned here.</p>

<pre><code>public static int indexOfIgnoreCase(final String haystack,
                                    final String needle) {
    if (needle.isEmpty() || haystack.isEmpty()) {
        // Fallback to legacy behavior.
        return haystack.indexOf(needle);
    }

    for (int i = 0; i &lt; haystack.length(); ++i) {
        // Early out, if possible.
        if (i + needle.length() &gt; haystack.length()) {
            return -1;
        }

        // Attempt to match substring starting at position i of haystack.
        int j = 0;
        int ii = i;
        while (ii &lt; haystack.length() &amp;&amp; j &lt; needle.length()) {
            char c = Character.toLowerCase(haystack.charAt(ii));
            char c2 = Character.toLowerCase(needle.charAt(j));
            if (c != c2) {
                break;
            }
            j++;
            ii++;
        }
        // Walked all the way to the end of the needle, return the start
        // position that this was found.
        if (j == needle.length()) {
            return i;
        }
    }

    return -1;
}
</code></pre>

<p>And here are the unit tests that verify correct behavior.</p>

<pre><code>@Test
public void testIndexOfIgnoreCase() {
    assertThat(StringUtils.indexOfIgnoreCase(""A"", ""A""), is(0));
    assertThat(StringUtils.indexOfIgnoreCase(""a"", ""A""), is(0));
    assertThat(StringUtils.indexOfIgnoreCase(""A"", ""a""), is(0));
    assertThat(StringUtils.indexOfIgnoreCase(""a"", ""a""), is(0));

    assertThat(StringUtils.indexOfIgnoreCase(""a"", ""ba""), is(-1));
    assertThat(StringUtils.indexOfIgnoreCase(""ba"", ""a""), is(1));

    assertThat(StringUtils.indexOfIgnoreCase(""Royal Blue"", "" Royal Blue""), is(-1));
    assertThat(StringUtils.indexOfIgnoreCase("" Royal Blue"", ""Royal Blue""), is(1));
    assertThat(StringUtils.indexOfIgnoreCase(""Royal Blue"", ""royal""), is(0));
    assertThat(StringUtils.indexOfIgnoreCase(""Royal Blue"", ""oyal""), is(1));
    assertThat(StringUtils.indexOfIgnoreCase(""Royal Blue"", ""al""), is(3));
    assertThat(StringUtils.indexOfIgnoreCase("""", ""royal""), is(-1));
    assertThat(StringUtils.indexOfIgnoreCase(""Royal Blue"", """"), is(0));
    assertThat(StringUtils.indexOfIgnoreCase(""Royal Blue"", ""BLUE""), is(6));
    assertThat(StringUtils.indexOfIgnoreCase(""Royal Blue"", ""BIGLONGSTRING""), is(-1));
    assertThat(StringUtils.indexOfIgnoreCase(""Royal Blue"", ""Royal Blue LONGSTRING""), is(-1));  
}
</code></pre>
"
"29821817","<p>This comes from a practice in the programming language C. There are three sorts of (big-block) comments:</p>

<pre><code>/*
 * foo
 */
</code></pre>

<p>and</p>

<pre><code>/**
 * bar
 */
</code></pre>

<p>and</p>

<pre><code>/*-
 * baz
 */
</code></pre>

<p>In C, as well as in Java itself, these are completely identical. It is the tooling that makes a difference.</p>

<p>There were automatic code indentation tools even decades back, and they reformatted (line wrap, etc.) the “foo” style comments, but left the other two alone. Eventually, people began using the “baz” style comments for, e.g. the licencing block at the top of the file (that shall not be reformatted), and the “bar” style comments for above a function to describe what it does (usually, loosely so, but still listing parameters, etc. so reformatting would have destroyed the layout). (Other comments to not be reformatted, e.g. a block about concepts, had either “bar” or “baz” style, people never standardised on one of them.)</p>

<p>In Java, this has been formalised more: the “bar” style comments are processed by Javadoc (and PHPdoc), as the other excellent answers already documented. I am just trying to give a bit of historic background and understanding here.</p>

<p>In contemporary C, the <a href=""https://www.mirbsd.org/man1/indent"" rel=""nofollow"">indent(1)</a> programme still works like that (as does GNU indent), see the “'Box' comments” paragraph in the “Comments” subsection. C programmers that do know about this (which often does not include newcomers or “career changers” (wrt. the language)) tend to keep the distinction; in addition, Javadoc-style formatting of “bar”-style comment blocks has become more common.</p>
"
"29890297","<p>You don't have your scanner doing any scanning within the while loop. You should change your code so you are asking for the <code>.nextInt()</code> within the loop. </p>
"
"29941562","<p>Method of Java too can return multiple values... </p>

<p>For ex:</p>

<pre><code> private int[] myCoordinates(int x, int y)
 {
   int []retCord = new int[2];

   //Do some operation
   retCord[0] = x;
   retCord[1] = y;

  retutn retCord;
 }
</code></pre>
"
"29959176","<pre><code> public double division(double a, double b, double z){   

 Scanner division = new Scanner(System.in);
 float a = division.nextDouble();
 float b = division.nextDouble();
 float z = a / b;
 System.out.println(z);
 }
</code></pre>
"
"29961605","<p>Here is the way to do that.</p>

<pre><code>import java.util.Scanner;
public class solve {

    public static void main(String[] args){


        Scanner scanner = new Scanner(System.in);
        float num = scanner.nextInt();
        float denom =scanner.nextInt();
        float d = num / denom;

        String s = Float.toString(d);
        String check="".0"";
        String cop="""";

        int a = s.indexOf("".0"");

        int pos = 0;
        while ((pos = s.indexOf("".0"", pos)) != -1) 
        {
            cop =s.substring(pos);
            pos++;
        }

            if(check.equals(cop))
            {
                String result = s.substring(0, a) + s.substring(a+2);
                System.out.println(result);
            }

            else
            {
                System.out.println(s);

            }

        }

}
</code></pre>
"
"29997840","<p>You return wrong value in <code>IndexController</code>, your <code>IndexController</code> directs to <code>index.jsp</code>, which is:</p>

<pre><code>&lt;%@ page language=""java"" contentType=""text/html; charset=UTF-8""
    pageEncoding=""UTF-8""%&gt;

hello ...........................
</code></pre>

<p>It just outputs <code>hello ...........................</code>, right?</p>

<p>Try:</p>

<pre><code>@Controller
public class IndexController {

    @RequestMapping(""/classic"")
    public String classic() {
        return ""classic"";
    }
}
</code></pre>
"
"30010111","<p>I think that returning index++ or index + 1 should be fine, but it appears that not all of your code paths are returning an int. For instance, in questionsMissed() you have an if statement to check for 0 and return an int in that case, but if the check returns false no int is getting returned. You might change it to something like this:</p>

<pre><code>public int questionsMissed() 
{
    for (int index = 0; index &lt; 20; index++)
    {
        if (Answers[index] == 0)
        {
            return index + 1;
        }
    }
    return 0;
}
</code></pre>
"
"30037223","<p>You are calling <code>getAll()</code> on a specific card, however before when you had <code>card.addCard</code>, you would only be adding one card to the list since every <code>Card</code> has its own ArrayList. This is why it only would print ONE CARD. You need to use getAll() on the ArrayList you made in the file.</p>

<p>Make a getAll() method in the main file that uses <code>static ArrayList&lt;Card&gt; cards = new ArrayList&lt;&gt;();</code></p>

<pre><code>   public static Card[] getAll(){
    Card[] brb = new Card[cards.size()];
    int tempCount = 0;
    for(Card c : cards){
        brb[tempCount] = c;
        tempCount++;
    }
    return brb;
</code></pre>

<p>This will work.</p>
"
"30047200","<p>You need an argument to the println() method, not a directive.</p>

<p>But I think it's cleaner to use an ""if"" instead:
<code>
if (i%5 == 0)
    System.out.println("""" + i);
</code></p>
"
"30127533","<p>Try this:</p>

<pre><code>public boolean insertPoints(ArrayList&lt;Point&gt; arr)
    {
        try
        {
            con = this.getConnection();
            st = con.createStatement();
            if (con != null)
            {
                boolean success = true;
                for (int i = 0; i &lt; arr.size(); i++)
                {
                    String id = arr.get(i).getId();
                    String x = arr.get(i).getXcoordinate();
                    String y = arr.get(i).getYcoordinate();
                    if (st.executeUpdate(""INSERT INTO table (Id, X, Y) VALUES ("" + id + "","" + x + "","" + y + "")"") &gt; 0)
                    {
                        continue;
                    }
                    else
                    {
                        success = false;
                        break;
                    }
                }
                return success;
            }
            else
            {
                System.err.println(""No connection, con == null ..."");
                return false;
            }
        }
        catch (Exception e)
        {
            System.err.println(""Exception: "" + e.getMessage());
            return false;
        }
        finally
        {
            try
            {
                if (rs != null) rs.close();
                if (st != null) st.close();
                if (con != null) con.close();
            }
            catch (SQLException sqle)
            {
                System.err.println(""SQLException: "" + sqle.getMessage());
            }
        }
        return false;
    }
</code></pre>
"
"30147843","<p>When you create a constructor in the class, it will no longer use the default constructor. In your code, you've created a <code>public Human(int)</code> constructor, so there is no default constructor. Because of that, you cannot create human object like this:</p>

<pre><code>Human a = new Human();
</code></pre>

<p>To do that, you have to manually implement a no-argument Human constructor.</p>

<p>Here is a solution:</p>

<pre><code>class Human{

    String name;
    int age;

    //default constructor
    public Human (){
    }


    //paramete constructor
    public Human(int a){
        this.age=a;
    }

    void speak(){
        System.out.println(""My name is: "" + this.name);
    }

    int calculateYearsToRetirement(){
        int yearsLeft = 65 - age;
        return yearsLeft;
    }

    int getAge(){
        return this.age;
    }

    String getName(){
        return this.name;
    }
}
</code></pre>
"
"30193031","<pre><code>comment.replaceAll(""/*\\*"", """");
</code></pre>
"
"30202929","<p>Try not <code>(b=true)</code> but <code>(b==true)</code>.</p>
"
"30315565","<p>First of all, I'm operating under the assumption that you want x and y to be of varying (generic) type.</p>

<p>For this, you would want:</p>

<pre><code>public class Vec2&lt;E extends Number&gt; {

private E x, y;

public Vec2(E xa, E ya) {
    this.x = xa;
    this.y = ya;
}

//Not _easily_ possible with generics, as the compiler has no guarantee that
//zero is an acceptable value. Consider some variation of a Factory pattern,
//but this will work. Note that there is an ""officially""-unchecked cast warning.
public Vec2() {
    super();

    final Number zero = 0.0; 
    this.x = (E)zero;
    this.y = (E)zero;
}

public Vec2(Vec2&lt;E&gt; vec) {
    this(vec.x, vec.y);
}

public void addX(E xa) {
    Number c = x.doubleValue() + xa.doubleValue();
    x = (E)c;
}

public void addY(E ya) {
    Number c = y.doubleValue() + ya.doubleValue();
    x = (E)c;
}
</code></pre>

<p>This should work well. While I encourage you to use generics, note that keeping a numeric type (like int, float, or double) as a generic is often not advisable, as they're only similar on the surface. When you dig into the operations of, say, ""+"", they are radically different dependent on type. You will also have an assortment of unchecked-cast warnings in this code; perhaps I could have rooted them out properly had I the time, but this just goes back to my warning about generic numbers.</p>

<p>You will also notice a few flukes of the language doing this, such as the way that <code>(E)zero</code> works, but (E)(0.0) does not.</p>

<p>By and large, though, generics are a much easier and cleaner way to go about things than inheritance, when it is possible.</p>
"
"30398167","<p>convert your strign to char array</p>

<pre><code>public class Main {
    private static final float TEN = (float) 10.0;
    public static void main(String[] args){
        convert(""123510123"");
    }
    public static void convert(String str){
        char[] arrayChar = str.toCharArray();
        List&lt;Float&gt; list = new ArrayList&lt;Float&gt;();
        float j = 0;
        float temp = 0;
        for(int i = arrayChar.length-1; i &gt;=0;i--){
            try{
                j = Character.getNumericValue(arrayChar[i]);
                if(j==0){
                    j = (Character.getNumericValue(arrayChar[i-1])/TEN);
                    list.add(j);
                    i--;
                }else{
                    list.add(j);
                }
            }catch(NumberFormatException e){
                e.printStackTrace();
            }
        }
        for (int i = 0; i &lt; list.size(); i++) {
            System.out.println(list.get(i));
        }
    }
}
</code></pre>
"
"30417357","<p>Note that you have to implement <code>hashCode</code> when you implement <code>equals</code>. There are some <a href=""http://stackoverflow.com/questions/27581/what-issues-should-be-considered-when-overriding-equals-and-hashcode-in-java"">things to consider</a> to write these methods correctly. To be on the safe side it's best to let an IDE generate these methods. For example, in Eclipse, go <em>Source > Generate hashCode() and equals()...</em></p>
"
"1068434","<p>You could create a class that <strong>implements</strong> <code>Map&lt;K,V&gt;</code>, and internally delegate to a container map:</p>

<pre><code>class CustomerConnections implements Map&lt;String,LastConnection&gt; {
    private Map&lt;String, LastConnection&gt; customerConnections;

    @Override
    public LastConnection get(Object srvUrl) { 
        return customerConnections.get(srvUrl);
    }
    // all other needed operations;
}
</code></pre>

<p>The nice thing with this approach is that you can pass around a <code>Map</code> which has a standard, well-defined contract, but you avoid extending library classes, which is often frowned upon.</p>

<p><strong>EDIT</strong> : As pointed out below, this does have the downside of requiring you to implement a lot of methods that do nothing short of delegate to the underlying collection</p>
"
"1232583","<p>The closest you're going to get is <a href=""http://java.sun.com/javase/6/docs/api/java/util/concurrent/atomic/AtomicReferenceArray.html"" rel=""nofollow"">java.util.concurrent.atomic.AtomicReferenceArray</a>, which offers CAS-based operations such as <code>boolean compareAndSet(int i, E expect, E update)</code>. It does not have a <code>swap(int pos1, int pos2)</code> operation though so you're going to have to emulate it with two <code>compareAndSet</code> calls.</p>
"
"1253597","<p>There is no memory fragmentation in Java; during the GC run, memory areas are compacted.</p>

<p>Since you don't see a high CPU utilization, there is no GC running, either. So something else must be the cause of your problems. Here are a few ideas:</p>

<ul>
<li><p>If the database of your application is on a different server, there may be network problems</p></li>
<li><p>If you run Windows and you have mapped network drives, one of the drives may lock up your computer (again network problems). The same is true for NFS drives on Unix. Check the system log for network errors.</p></li>
<li><p>Is the computer swapping lots of data to disk? Since CPU util is low, the cause of the problem could be that the app was swapped to disk and the GC run forced it back into RAM. This will take a long time if your server hasn't enough real RAM to keep the whole Java app in RAM.</p></li>
</ul>

<p>Also, other processes can force the app out of RAM. Check the real memory utilization and your swap space usage.</p>

<p>To understand the output of the GC log, <a href=""http://forums.sun.com/thread.jspa?threadID=5352404"" rel=""nofollow"">this post</a> might help.</p>

<p>[EDIT] I still can't get my head around ""low CPU"" and ""GC stalls"". Those two usually contradict each other. If the GC is stalling, you must see 100% CPU usage. If the CPU is idle, then something else is blocking the GC. Do you have objects which overload <code>finalize()</code>? If a finalize blocks, the GC can take forever.</p>
"
"1261278","<p>(sorry, this is C#. I didn't see that the question was for Java.)</p>

<pre><code>public string[] GetValues&lt;T&gt;()
{
    return Enum.GetNames(typeof(T));
}
</code></pre>

<p>For Java, of course, all enum types still inherit from java.util.Enum, so you can write:</p>

<pre><code>public string[] getValues&lt;T extends Enum&lt;T&gt;&gt;()
{
    // use reflection on T.class
}
</code></pre>

<p>Since java.util.Enum doesn't actually implement values(), I think that reflection is the only way to go.</p>
"
"1276879","<p>Yes you can</p>

<pre><code>Thread thread = new Thread(  
  new Runnable(){  
    public void run(){  
      while (true)
        wait_for_action();
    }  
  }  
);  
thread.start();
</code></pre>
"
"1277112","<p>Nope. <br/> &lt;? extends C&gt; is not the same as &lt;? extends Object&gt; <br/>
If that were the case, it would lead also the the (unstated) assumption - C extends Object, and lead to say ...</p>

<p><code></p>

<p>class C{ public void doSomethingMEaningful(); };</p>

<p>List&lt; ? extends C > allAtSea = new ArrayList&lt;...>(); 
List&lt; ? extends Object > allObjects = new ArrayList&lt;...>();
allObjects.add(new Integer(88) );
...</p>

<p>allAtSea.addAll(allObjects);
...</p>

<p>allAtSea.get(...).doSomethingMeaningful(...);
// Uh-oh.. this finds the Integer 88</p>

<p></code><br/></p>

<p>The <a href=""http://www.parashift.com/c++-faq-lite/proper-inheritance.html"" rel=""nofollow"">C++ FAQ</a> provides a lucid example for this at 21.3</p>
"
"1277959","<p><strike>The buffered reader is overkill</strike></p>

<pre><code>Reader r = new FileReader(""f.txt"");

int count = 0;
int nextchar = 0;
while (nextchar != -1){
        nextchar = r.read();
		if (nextchar == Character.getNumericValue('\n') ){
			count++;
		}
	}
</code></pre>

<p>My search for a simple example has createde one thats actually quite poor. calling read() repeadedly for a single character is less than optimal. see <a href=""http://java.sun.com/developer/technicalArticles/Programming/PerfTuning/"" rel=""nofollow"">here</a> for examples and measurements.</p>
"
"1283358","<p>All forms of concurrency control can be provided by the Java synchronization primitives by constructing more <a href=""http://en.wikipedia.org/wiki/Semaphore%5F%28programming%29"" rel=""nofollow"">complex</a> <a href=""http://en.wikipedia.org/wiki/Monitor%5F%28synchronization%29"" rel=""nofollow"">concurrency</a> <a href=""http://en.wikipedia.org/wiki/Barrier%5F%28computer%5Fscience%29"" rel=""nofollow"">controls</a> that suit your problem.</p>

<p>The reasons for deprecation are clearly given in the link you provide. If you're willing to accept the reasons why, then feel free to use those features.</p>

<p>However, if you choose to use those features, you also accept that support for those features could stop at any time.</p>

<p><strong>Edit:</strong> I'll reiterate the reason for deprecation as well as how to avoid them.</p>

<p>Since the only danger is that objects that can be referenced by the <code>stop</code>ed thread could be corrupted, simply <code>clone</code> the <code>String</code> before you pass it to the <code>Thread</code>. If no shared objects exist, the threat of corrupted objects in the program outside the <code>stop</code>ed <code>Thread</code> is no longer there.</p>
"
"1291035","<p>Using a hashmap.    </p>

<pre><code>Map&lt;String,A&gt; map = new HashMap&lt;String,A&gt;();

A a = new A();
a.id = ""123"";
a.property=""Hello there!"";

map.put( a.id , a );
</code></pre>

<p>Later</p>

<pre><code>map.get( ""123""); // would return the instance of A and then a.property will return ""Hello there!""
</code></pre>
"
"1360174","<p>By the way, it seems as if you did it the hard way in Perl</p>

<p>This does the trick in Perl:</p>

<pre><code>my @files = glob(""*.html"")
# Or, if you prefer:
my @files = &lt;*.html&gt;
</code></pre>
"
"1379224","<p>Did you try <code>""\\d""</code> and <code>""\\w""</code>?</p>

<p>-edit-
Lol I posted the right answer and get down voted and then I notice that stackoverflow escapes backslashes so my answer appeared wrong :)</p>
"
"1379227","<p>I think you need to add the two escaped shortcuts into character classes.  Try this:  <code>""[\d]{4}[\w]{3}(0[1-9]|[12][0-9]|3[01])([01][0-9]|2[0-3])([0-5][0-9]){2}""</code></p>

<p>--Good Luck.</p>
"
"1385805","<p>Are you really saying that you want callers to be able to modify the object's boolean value by manipulating what gets returned?   So that the object and caller would share a reference to it? </p>

<p>Just so I understand, given:</p>

<pre>
class OddClass {
   private Boolean strangeFlag;
   public Object getAttrbiute(String attributeName) { 
      if (attributeName.equals(""strangeflag"")) return (Object)strangeFlag; 
      ...
   }
}
</pre>

<p>And then caller does:</p>

<pre>
   Boolean manipulableFlag = (Boolean) myOddClass.getAttrbiute (""strangeflag"");
</pre>

<p>And then later, if caller changes the value of <code>manipulableFlag</code>, you want that change to happen in the OddClass instance, just as though caller had instead used a setAttrbiute method.</p>

<p>Is that what you're asking?</p>

<p>In that case, you'd need a holder class, as suggested by Adam.</p>
"
"1421840","<p>You appare to be locking more then is required, in your good case (cache full and valid) every request aquires a lock. you can get away with only locking if the cache is expired.</p>

<p>If we are reloading, do nothing. <br/>
If we are not reloading, check if expired if not expired go ahead.
If we are not reloading and we are expired, get the lock and double check expired to make sure we have not sucessfuly loaded seince last check.</p>

<p>Also note you may wish to reload the cache in a background thread so not event the one requrest is heldup waiting for cache to fill.</p>

<pre><code>
    private void checkForReload() {
        if (cachedObject == null || isExpired()) {
                if (!isReloading()) {

                       // Recheck expiration because another thread might have
                       // refreshed the cache before we were allowed into the
                        // synchronized block.
                        if (isExpired()) {
                                synchronized (lock) {
                                        if (isExpired()) {
                                                isLoading = true;
                                                try {
                                                        cachedObject = retrieve();
                                                        lastRetrieval = System.currentTimeMillis();
                                                } catch (Exception e) {
                                                        log.error(""Exception occurred retrieving cached object"", e);
                                                } finally {
                                                        isLoading = false;
                                                }
                                        }
                                }
                        }
                }
        }

</code></pre>
"
"1445334","<p>It is a very easy problem to solve: Use <code>List&lt;T&gt;</code>!</p>

<p>Arrays of reference type should be avoided.</p>

<p>In the current version of Java (1.7), you can mark method with <a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/SafeVarargs.html"" rel=""nofollow""><code>@SafeVargs</code></a> which will remove the warning from the caller. Careful with that though, and you're still better off without legacy arrays.</p>

<p>See also the <a href=""http://docs.oracle.com/javase/7/docs/technotes/guides/language/non-reifiable-varargs.html"" rel=""nofollow"">Improved Compiler Warnings and Errors When Using Non-Reifiable Formal Parameters with Varargs Methods</a> tech note.</p>
"
"1453675","<p><code>a</code> is an instance of A. You call the constructor B(). But it is still a <code>A</code> class.
That is why i equals 10;
The override from the method will be succeded.</p>

<p>Note a class starts not with </p>

<pre><code>public class A()
</code></pre>

<p>but with;</p>

<pre><code>public class A { ... }
</code></pre>
"
"1493173","<pre><code>myMaps = new HashMap&lt;String, Integer&gt;[10]();
</code></pre>

<p><strong>So that's Wrong</strong></p>

<p>Why not make a List of Maps instead of trying to make an array?</p>

<pre><code>List&lt;Map&lt;String, Integer&gt;&gt; mymaps = new ArrayList&lt;Map&lt;String, Integer&gt;&gt;(count);
</code></pre>
"
"1509136","<p>I don't suppose this works?</p>

<pre><code>&lt;script src=""some.js"" type=""text/javascript""&gt;&lt;/script&gt;
</code></pre>

<p>or</p>

<pre><code>&lt;script src=""some.js"" type=""text/javascript""&gt;&amp;nbsp;&lt;/script&gt;
</code></pre>

<p>Not too sure the above would even solve the validation issue, even if it did work</p>
"
"1516670","<p>You can log the Throwable, and throw a RuntimeException.</p>

<p>In Java, you have to declare any exception that your method might itself throw, because it's considered part of the method's signature.... that is, apart from RuntimeException, which avoids that rule.  The RuntimeException can give the message of the Throwable as part of its message, if you like.</p>

<pre><code>try
{
    doRiskyThing();
}
catch(Throwable t)
{
    log.warn(""too bad, exception thrown: "" + t.getMessage());
    throw new RuntimeException(""Throwable exception was thrown, message: "" + t.getMessage());
}
</code></pre>

<p>Beware however that this may be considered bad practice, and for more long-term code it's recommended that you throw a non-runtime exception and define it in the method's signature.</p>
"
"1523388","<p>These can be very convenient because of possibility to make circular references:</p>

<pre><code>class A
{ 
    public static final A _1 = new A() {
        public A foo()
        {
            return _2;
        }
    };

    public static final A _2 = new A() {
        public A foo()
        {
            return _1;
        }
    };
}
</code></pre>

<p>Creation of several objects which are holding references to each other can be very awkward without usage of anonymous classes. </p>
"
"1554515","<p>Try</p>

<p><code>Document doc = docBuilder.parse(new File(""./webservices.xml""));</code></p>
"
"1582409","<p>Using idxA to idxC in ary,</p>

<pre><code>int ab = ary[idxA] &lt; ary[idxB] ? idxA : idxB;
int bc = ary[idxB] &lt; ary[idxC] ? idxB : idxC;
int ac = ary[idxA] &lt; ary[idxC] ? idxA : idxC;

int idxMid = ab == bc ? ac : ab == ac ? bc : ab;
</code></pre>

<p>indexMiddle points to the middle value.</p>

<p>Explanation: from the 3 minima 2 are the overall minimum and the other value must be the middle. Because we check equality we can compare the indices in the last line instead of having to compare the array values.</p>
"
"1582410","<p>or a one liner for finding the index in the array containing the middle value:</p>

<pre><code> int middleIndex = (a[0]&lt;a[1]) ? ((a[0]&lt;a[2) ? a[2] : a[0]) : ((a[1]&lt;a[2) ? a[2] : a[1]);
</code></pre>
"
"1613708","<p>An alternative solution to your RunListener approach:</p>

<p>Enclose your test in a try-catch block and do the screenshot in the catch block, that's what i always do.</p>

<p>Example java code:</p>

<pre><code>public void testEnterFormFields()
  try {
    enterFormFields();
  } catch(SeleniumException e) {
    //do screenshot, logging, dumping, stacktracing or whatever here
  }
}
</code></pre>

<p>You could catch Throwable or Exception as well, if your coding rules allow it, but it makes sense to catch the specific Exception one by one. This approach produces a bit more clutter in your code but it will help you a lot in case of failure analysis. You can tailor your exception handling to the type of error. You maybe want to capture other informations in case of an AssertionError than in case of a SeleniumException.</p>
"
"1652802","<p>ummm, would this work for you?</p>

<pre><code>for(int i = 0;i &lt; myobj.size();i++)
{   
    myobj.at(i).doSomething();
    myobj.at(i).doSomethingElse();
}
</code></pre>
"
"1658732","<p>Use a bridge.</p>

<p>Create a class that extends Observable that the first class just calls the methods of the second class.</p>

<p>Bridge method detail:</p>

<pre><code> public class XXX {
    public class XXXObservableBridge : Observable {
       public void RaiseEvent();
       // Listeners etc
    }

    private XXXObservableBridge ObservableBridge;

    XXX() {
       ObservableBridge = new ObservableBridge;
    }

    public Observable AsObservable() { return ObservableBidge; }

    public void RaiseEvent() { ObservableBridge.RaiseEvent(); }
 }
</code></pre>
"
"1692562","<p>Call <a href=""http://java.sun.com/j2se/1.5.0/docs/api/java/util/Collections.html#min%28java.util.Collection%29"" rel=""nofollow"">Collections.min()</a>, then remove the element you got from the List, and call it again?</p>

<pre><code>    List&lt;Integer&gt; list = Arrays.asList(20, 30, 90, 50);
    List&lt;Integer&gt; copy = new ArrayList&lt;Integer&gt;(list);
    Integer smallest = Collections.min(copy); // 20
    copy.remove(smallest);
    Integer secondSmallest = Collections.min(copy); // 30
</code></pre>

<p>(Making a copy not to mess with the original.)</p>

<p>This is probably far from the most performant solution (From Collections.min() Javadoc: ""This method iterates over the entire collection, hence it requires time proportional to the size of the collection.""), but it's very simple to write and maintain. :)</p>
"
"1062114","<pre><code>public class Test
{
  public static void main(String args[]) {

    long value1 = System.currentTimeMillis();
    for(long i=0;i&lt;100000000;i++)
    {
        ""abcd"".indexOf(""a"");
    }
    long value2 = System.currentTimeMillis();
    System.out.println(value2-value1);


    value1 = System.currentTimeMillis();
    for(long i=0;i&lt;100000000;i++)
    {
        ""abcd"".startsWith(""a"");
    }
    value2 = System.currentTimeMillis();
    System.out.println(value2-value1);
  }
}
</code></pre>

<p>Tested it with this piece of code and perf for startsWith seems to be better, for obvious reason that it doesn't have to traverse through string. But in best case scenario both should perform close while in a worst case scenario startsWith will always perform better than indexOf</p>
"
"1088151","<p>I don't know any library with the Unix functions.</p>

<p>for most of the functions, I believe, you can use the standard Java API to do what you want. for example, there's no need to use the command <code>ls</code> to read the files of some directory. but in some specific cases, like <code>stat</code> (to find out if a file is a link) you have to use JNI.</p>
"
"1233710","<p>... try something like this:</p>

<pre><code>File newFile = new File(request.getSession().getServletContext().getRealPath(""/someUploadDirectoryOnServer/""), multipartFile.getOriginalFilename());
</code></pre>
"
"1235046","<pre><code> setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
</code></pre>
"
"1235678","<p>I suggest to write a small test case which allows you to call <code>cancel()</code> while your <code>Future</code> instance hangs in <code>done()</code> and see what happens.</p>
"
"1236087","<p>The CronTrigger creates a CronExpression object from the cron expression String.
But you cannot get access to it. But by using reflection you can: </p>

<pre><code>Class c = cronTrigger.getClass();
Field f = c.getDeclaredField(""cronEx"");
f.setAccessible(true);
CronExpression cronEx = (CronExpression) f.get(cronTrigger);
</code></pre>
"
"1780454","<p>One common way to do this in C is to use a <code>union</code>. It could look like</p>

<pre><code>union u_intstr {
  char fourChars[4];
  int  singleInt;
};
</code></pre>

<p>Set the chars into the union as</p>

<pre><code>union u_intstr myIntStr;
myIntStr.fourChars[0] = ch1;
myIntStr.fourChars[1] = ch2;
myIntStr.fourChars[2] = ch3;
myIntStr.fourChars[3] = ch4;
</code></pre>

<p>and then access the int as</p>

<pre><code>printf(""%d\n"", myIntStr.singleInt);
</code></pre>

<p><strong>Edit</strong></p>

<p>In your case for 16 ints the union could be extended to look like</p>

<pre><code>union u_my16ints {
  char str[16*sizeof(int)];
  int  ints[16];
};
</code></pre>
"
"1780646","<p>This is what I come up with</p>

<pre><code>int len = strlen(str);
int count = (len + sizeof(int))/sizeof(int);
int *ptr = (int *)calloc(count, sizeof(int));
memcpy((void *)ptr, (void *)str, count*sizeof(int));
</code></pre>

<p>Due to the use of calloc(), the resulting buffer has at least one NULL, maybe more to pad the last integer. This is not portable because the integers are in native byte order.</p>
"
"1831658","<p>You need to something like below inside the loop:</p>

<pre><code>buf = new byte[1012];
</code></pre>

<p>Or you could remove the <code>buf = null</code> entirely.</p>
"
"1293551","<p>Why dont you combine the following and use it to interpolate, that way circumventing may be difficult.</p>

<pre><code>public class OpertingSystemInfo 
{
    public static void main(String[] args)
    {
        String nameOS = ""os.name"";        
        String versionOS = ""os.version"";        
        String architectureOS = ""os.arch"";
    System.out.println(""\n    The information about OS"");
        System.out.println(""\nName of the OS: "" + 
System.getProperty(nameOS));
        System.out.println(""Version of the OS: "" + 
System.getProperty(versionOS));
        System.out.println(""Architecture of THe OS: "" + 
System.getProperty(architectureOS));
    }
}
</code></pre>
"
"1896526","<p>If possible, use the local path of tld instead of <code>http://java.sun.com/jsp/jstl/core</code>, like this:  </p>

<pre><code>&lt;%@ taglib uri=""./tld/core.tld"" prefix=""c"" %&gt;
</code></pre>
"
"1307714","<p>Replace your static functions with non-static ones. Instead of</p>

<pre><code>Utils.do_something(...)
</code></pre>

<p>do</p>

<pre><code>new Utils().do_something(...)
</code></pre>
"
"1310883","<p>I'm good with Mnementh's recommentation. 
<br/>Just one caveat though, </p>

<pre><code> ConcurrentModificationException
</code></pre>

<p>Mind that you don't have more than one thread running. This exception could appear if more than one thread executes, and the threads are not well synchronized. </p>
"
"1920314","<p>Here is a great write up with some examples. <a href=""http://javadude.com/articles/passbyvalue.htm"" rel=""nofollow"">http://javadude.com/articles/passbyvalue.htm</a></p>

<p>Here is my simple take on the issue. Java is always a pass-by-value language. It helps to think of it as a pass-by-reference language when talking about objects. BUT this is not entirely true. What it is doing is passing the value of the memory address.</p>

<p>EDIT: Thanks for the down votes. Maybe you should have read the article first. Since no one has a will take the liberty to give an example:</p>

<pre><code>public class Dog {

    public String name;

    public Dog(String name) {
        this.name = name;
    }

    public static void main(String []args) {

        Dog newDog = new Dog(""Max"");
        newDog.test(newDog);
        System.out.println(newDog.name);

    }

    public void test(Dog dog) {
        dog = new Dog(""Gotcha"");
    }

}
</code></pre>

<p>So what does the above output to the console? Now if you guys screaming pass-by-reference were correct it would print ""Gotcha"" but it doesn't it prints ""Max"". But wait, that is exactly like pass-by-value behaviour. But why? Because in Java Objects are not passed by reference. A correct statement would be Object references are passed by value.</p>
"
"1313408","<p>You would like to take a look at <a href=""http://java.sun.com/docs/books/tutorial/uiswing/components/formattedtextfield.html"" rel=""nofollow"">JFormattedTextField</a></p>

<blockquote>
  <p><em>Formatted text fields provide a way for developers to specify the valid set of characters that can be typed in a text field</em></p>
</blockquote>

<p>This is a subclass of JTextField, so you can use it like this:</p>

<pre><code>JTextField textField = new JFormattedTextField(NumberFormat.getInstance());
</code></pre>
"
"1928747","<p>There's really nothing wrong with the first piece of code; you're overthinking things, IMO.</p>

<p>Here's another way that, while verbose, is easy to understand.</p>

<pre><code>static void usage() {
    System.err.println(""Usage: blah blah blah blah"");
    System.exit(-1);
}

// ...

if (args == null || args.length &lt; 2)
    usage();
if (args[0].equals(args[1]))
    usage()
</code></pre>
"
"1332225","<p>My guess is that </p>

<pre><code>image=Image.createImage(""/picture.png"");
</code></pre>

<p>throws an exception which prevents the creation of a new object of type ImageItem which leaves your imageItem variable as null. This gives you the null pointer exception.</p>

<p>Isn't your file <strong>Picture.png</strong> and not Pictur.png?</p>
"
"1333657","<pre><code>Vector&lt;Integer&gt; v = new Vector&lt;Integer&gt;(); 
v.setElementAt( arr[x][y], arr[x][y] );
</code></pre>
"
"1978110","<p>I haven't used these classes before, but the Exception occurs on line 3 when you call the <code>setInterface</code> method.</p>

<p>I would guess it's something to the effect that you're using the same reference twice or something.
I found a snippet of code that looked like this, maybe this is how you should be doing it:</p>

<pre><code>    MulticastSocket ms = new MulticastSocket(new InetSocketAddress(0));
    ms.setInterface(InetAddress.getByName(""192.168.0.1""));
</code></pre>
"
"1333662","<p>EDIT: While answering this question, I did not know that J2ME does not support Generics. Thanks to SO for teaching me that :-)</p>

<p>EDIT 2: My solution is <strong>wrong</strong> since J2ME does not support Generics. </p>

<p>If you have used Generics (JDK 1.5 onwards), you could do it simpler! </p>

<p>If I assume the declaration to be thus,</p>

<pre><code>Vector&lt;Integer&gt; v = new Vector&lt;Integer&gt;();
</code></pre>

<p>then</p>

<pre><code>v.setElementAt(new Integer(((Integer)(v.elementAt(arr[x][y]))).intValue()+i), arr[x][y]);
</code></pre>

<p>becomes</p>

<pre><code>v.setElementAt(new Integer(v.elementAt(arr[x][y]).intValue()+i), arr[x][y]);
</code></pre>
"
"1337415","<p>You can also have a look at <a href=""http://refspecs.freestandards.org/LSB%5F3.1.0/LSB-Core-generic/LSB-Core-generic/lsbrelease.html"" rel=""nofollow"">lsb_release</a></p>

<pre><code>lsb_release -a
</code></pre>

<p>would give you something like:</p>

<pre><code>cyril@merlin:~$ lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 8.10
Release:    8.10
Codename:   intrepid
</code></pre>
"
"1985888","<p>You should first create the Multicast socket with a well known port - something higher than 1024 and less than 65535 - as already stated 0 means the operating system will choose a port for you (but then its going to be kinda random - which I guess you don't want).</p>

<p>For multicast - you generally need to set the interface to use on joinGroup() not on creation - e.g:</p>

<p>MulticastSocket socket = new MulticastSocket(2121);</p>

<pre><code>InetSocketAddress socketAddress = new InetSocketAddress(""localhost"", 2121);

if (networkInterfaceName != null){
        NetworkInterface ni = NetworkInterface.getByName(networkInterfaceName);
socket.joinGroup(this.socketAddress, ni);

}else {
   socket.joinGroup(socketAddress.getAddress());
}
</code></pre>
"
"2012886","<p>Map your IP to  network drive and try   let us say the drive letter is X,</p>

<p>then code changes to <code>File f = new File(""x:\\home\\renjith\\picture.jpg"");</code> </p>

<p>Infact your file is already loaded in object <code>f</code> , try priting the value of the path <code>f.getAbsolutePath()</code> to console  and see.. Actual error is with <code>ImageIO</code></p>
"
"1366650","<p>repainting will work, but i recommend calling </p>

<pre><code>SwingUtilities.updateComponentTreeUI(b);
</code></pre>

<p>that will refresh the entire component plus any children.</p>

<p>N</p>
"
"1367493","<p>hm can't you just use</p>

<pre><code>public static String escape(String text)
{
   String r = replace(text, ""\"", ""\\"");
   return r;
}
</code></pre>
"
"1370519","<p>You could call</p>

<pre><code>removeHiddenImageReferences();
</code></pre>

<p>first.  Then you only need one try/catch.  There's no use optimizing, unless you KNOW removeHiddenImageReferences() is horribly slow (like if you're working with millions of objects).  Usually you can't do too much about running out of memory anyways.</p>
"
"1374413","<p>You can use the jarsigner application to do this.  In processbuilder (or Runtime.exec) you can run the command with these arguments</p>

<pre><code> ProcessBulider pb = new ProcessBuilder(""/usr/bin/jarsigner"", ""-verify"", ""-certs"", f.getAbsolutePath());
</code></pre>

<p>and if the output contians verified then the jar is signed</p>

<pre><code>Process p = pb.start();
p.waitFor();
InputStream is = p.getInputStream();
InputStreamReader isr = new InputStreamReader(is);
BufferedReader br = new BufferedReader(isr);
String line;
while ((line = br.readLine()) != null)
{
if(line.contains(""verified"");
...
</code></pre>

<p>THere are more complicated things you can do when you have the output of the jarsigner code.</p>
"
"1384989","<p>Here is my platform specific code(unix)</p>

<pre><code>public static List&lt;File&gt; findFiles(String dir, String... names)
	{
		LinkedList&lt;String&gt; command = new LinkedList&lt;String&gt;();
		command.add(""/usr/bin/find"");
		command.add(dir);
		List&lt;File&gt; result = new LinkedList&lt;File&gt;();
		if (names.length &gt; 1)
			{
				List&lt;String&gt; newNames = new LinkedList&lt;String&gt;(Arrays.asList(names));
				String first = newNames.remove(0);
				command.add(""-name"");
				command.add(first);
				for (String newName : newNames)
					{
						command.add(""-or"");
						command.add(""-name"");
						command.add(newName);
					}
			}
		else if (names.length &gt; 0)
			{
				command.add(""-name"");
				command.add(names[0]);
			}
		try
			{
				ProcessBuilder pb = new ProcessBuilder(command);
				Process p = pb.start();
				p.waitFor();
				InputStream is = p.getInputStream();
				InputStreamReader isr = new InputStreamReader(is);
				BufferedReader br = new BufferedReader(isr);
				String line;
				while ((line = br.readLine()) != null)
					{
						// System.err.println(line);
						result.add(new File(line));
					}
				p.destroy();
			}
		catch (Exception e)
			{
				e.printStackTrace();
			}
		return result;
	}
</code></pre>
"
"2086955","<p>If the problem is blocking the UI Thread during resizing, you should consider the method <code>asyncExec</code> of the class <code>Display</code></p>

<pre><code>/**
 * Causes the &lt;code&gt;run()&lt;/code&gt; method of the runnable to
 * be invoked by the user-interface thread at the next 
 * reasonable opportunity. The caller of this method continues 
 * to run in parallel, and is not notified when the
 * runnable has completed.  Specifying &lt;code&gt;null&lt;/code&gt; as the
 * runnable simply wakes the user-interface thread when run.
 * &lt;p&gt;
 * Note that at the time the runnable is invoked, widgets 
 * that have the receiver as their display may have been
 * disposed. Therefore, it is necessary to check for this
 * case inside the runnable before accessing the widget.
 * &lt;/p&gt;
 *
 * @param runnable code to run on the user-interface thread or &lt;code&gt;null&lt;/code&gt;
 *
 * @exception SWTException &lt;ul&gt;
 *    &lt;li&gt;ERROR_DEVICE_DISPOSED - if the receiver has been disposed&lt;/li&gt;
 * &lt;/ul&gt;
 * 
 * @see #syncExec
 */
public void asyncExec (Runnable runnable) {
    synchronized (Device.class) {
        if (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);
        synchronizer.asyncExec (runnable);
    }
}
</code></pre>
"
"1397191","<p>If by ""applet"" you mean a stand-alone command shell Java program, a simple batch file should suffice:</p>

<pre><code>@rem MyApp.bat
@echo off
set JVM={{path where java.exe is located}}
set FLAGS={{optional JVM flags}}
set JARFILE={{location of your jarfile}}
%JVM%\java %FLAGS% -cp %JARFILE% {{Package}}.{{Class}} {{args...}}
</code></pre>

<p>Replace the items enclosed in braces <code>{{...}}</code> with settings appopriate for your application. If everything is defined correctly, double-clicking the batchfile name in a file explorer window will execute your Java class.</p>
"
"2103652","<p>Not the same. When you are writing <code>(a &gt; b) ? a : b</code> you don't have an extra function call, so it will be faster. It's the equivalent of inlining in C++.
But this will not make any difference in real life. <code>Math.max(a,b)</code> is more readable so I would use it.</p>
"
"1433758","<p>For homework, it's really a matter of taste. For real projects, you should instantiate the class and wrap that in <code>try/catch</code> so you can print the full stack trace if something goes wrong during construction of the class.</p>

<p>The default <code>printStackTrace()</code> of Java sometimes omits the nested exceptions, so you'll end up with ""there was an error, see next exception"" but you can't see it.</p>
"
"2216884","<p>The above advices should do the job, but I would recommend you to use:</p>

<pre><code>public String translate(boolean trueOrFalse)
{
    return String.valueOf(trueOrFalse);
}
</code></pre>

<p>because later you can easily convert that back:</p>

<pre><code>public boolean translateBack(String translation)
{
    return Boolean.parseBoolean(translation);
}
</code></pre>

<p>but the translation string will be ""true"" of ""false"" :)</p>
"
"2216909","<pre><code>String yesNo(boolean b) {
    String[] s = {""yes"", ""no""};
    return b ? s[0] : s[1];
}
</code></pre>

<p>EDITED with correct return</p>
"
"1492248","<p>Set the min, max and ""normal"" width to 0:</p>

<pre><code>jTable.getColumn(""ABC"").setWidth(0);
jTable.getColumn(""ABC"").setMinWidth(0);
jTable.getColumn(""ABC"").setMaxWidth(0);
</code></pre>

<p>The second approach is to extend <code>TableColumnModel</code> and override all the methods to create the illusion (for the JTable) that your model doesn't have those two columns.</p>

<p>So when you hide a column, you must return one less when the table asks for the number of columns and when it asks for the column X, you may have to add +1 to the column index (depending on whether it is to the left or right of the hidden column), etc.</p>

<p>Let your new table model forward all method calls (with the corrected indexes, etc) to the actual column model and use the new table model in the JTable.</p>
"
"1492254","<p>You could create a subclass of the model, and override <code>TableModel.getColumnCount</code> as follows:</p>

<pre><code>int getColumnCount() {
    return super.getColumnCount()-2;
}
</code></pre>

<p>The last two columns would then not be displayed in the <code>JTable</code>.</p>
"
"1492389","<p>How about</p>

<pre><code>Tree newTree = existingTree.clone() ?
</code></pre>
"
"2227344","<p>Both Bozho and ponkin are on the right track. I needed to stop serialising the data down the wire but the big problem is I am unable to change the pojo -> toJSON class/method where the serialisation takes place. I was also worried about investing time on the toJSON() method considering I was taking such a performance hit at the point of serialisation I wanted a fix that would occur before I had the data rather than afterwards.</p>

<p>Also due to the nature of the Many-to-Many Bidirectional design I had listed I was always going to have this cyclic programs/subscribers/programs/... problem.</p>

<p>Resolution: (for now atleast) I have removed the Subscriber.getProgram() method and created a finder method on the ProgramDAO which returns the Programs by Subscriber.</p>

<pre><code>public List&lt;Program&gt; findBySubscriber(Subscriber subscriber) {
  String hql = ""select p "" +
     ""from Program p "" +
     "" join p.subscribers s "" +
     ""where s = :sub""
     ;    

  Query q = getSession().createQuery(hql);
  q.setEntity(""sub"", subscriber);

  List&lt;Program&gt; l = q.list();
  return l;
}
</code></pre>

<p>For any CRUD work I think I'm just going to have to loop over Programs.getSubscribers, or write more hql helper methods.</p>
"
"2262817","<p>Since it is a read only method. You should synchronize the <code>set</code> method.</p>

<p><strong>EDIT</strong> : I see why the get method needs to be synchronized as well. Good job explaining Phil Ross.</p>
"
"1516308","<p>java.util.Arrays has an 'asList' method. Together with the java.util.List/ArrayList API this gives you all you need:;</p>

<pre><code>private static String[] join(String[] array1, String[] array2) {

    List&lt;String&gt; list = new ArrayList&lt;String&gt;(Arrays.asList(array1));
    list.addAll(Arrays.asList(array2));
    return list.toArray(new String[0]);
}
</code></pre>
"
"2278709","<p>I think an answer to the original question is that both languages are Object-oriented by definition. So, objects are first-class citizens i.e. everything is an object.</p>

<p>That's how the language was designed, how it's intended to be used and how the compiler figures out how to link parts of code to create a program.</p>

<p><code>static</code> helps make our lives easier, but sometimes we have to pay for that. for example, when you wish you could override a static method.</p>
"
"2284532","<p>Just don't throw exception from object's constructor. You can provide <code>init ()</code> method and throw your exception from there if it's necessary.</p>
"
"2284543","<p>Make INSTANCE not final and create it lazy in <code>getInstance()</code> if null:</p>

<pre><code>public static ObjectFactory getInstance() throws Exception {
  if (SingletonObjectFactoryHolder.INSTANCE == null) {
    synchronized (ObjectFactory.class) {
      if (SingletonObjectFactoryHolder.INSTANCE == null) {
        SingletonObjectFactoryHolder.INSTANCE = new ObjectFactory();
      }
    }
  }
  return SingletonObjectFactoryHolder.INSTANCE;
}
</code></pre>

<p>ok, more simple and safe:</p>

<pre><code>public static synchronized ObjectFactory getInstance() throws Exception {
  if (SingletonObjectFactoryHolder.INSTANCE == null) {
    SingletonObjectFactoryHolder.INSTANCE = new ObjectFactory();
  }
  return SingletonObjectFactoryHolder.INSTANCE;
}
</code></pre>

<p>but the best of all: do not throw an exception from constructor...</p>
"
"2284598","<p>I agree with Arne Burmeister, the code for that would look like:</p>

<pre><code>private static class SingletonObjectFactoryHolder
{
    private static ObjectFactory INSTANCE;


    private ObjectFactory() 
    {

    }

    public static String getInstance() throws Exception
    {
      return (INSTANCE == null) ? (INSTANCE = new ObjectFactory()) : INSTANCE; 
     // A ternary operator might not be the best fit if you need to throw an exception, but I think it looks nicer than the if(INSTANCE==null){} else{} for lazy instantiation.
    }

}
</code></pre>
"
"1537225","<p>Since you haven't posted code, we're kind of working in the dark.  What are the details of the exception?</p>

<p><b>Are you calling Thread.wait() from within the thread, or outside it?   </b></p>

<p>I ask this because according to the javadoc for IllegalMonitorStateException, it is:</p>

<blockquote>
<i>Thrown to indicate that a thread has attempted to wait on an object's monitor or to notify other threads waiting on an object's monitor without owning the specified monitor. </i>
</blockquote>

<p>To clarify this answer, this call to wait on a thread also throws IllegalMonitorStateException, despite being called from within a synchronized block:</p>

<pre><code>
     private static final class Lock { }
     private final Object lock = new Lock();

    @Test
    public void testRun() {
        ThreadWorker worker = new ThreadWorker();
        System.out.println (""Starting worker"");
        worker.start();
        System.out.println (""Worker started - telling it to wait"");
        try {
            synchronized (lock) {
                worker.wait();
            }
        } catch (InterruptedException e1) {
            String msg = ""InterruptedException: ["" + e1.getLocalizedMessage() + ""]"";
            System.out.println (msg);
            e1.printStackTrace();
            System.out.flush();
        }
        System.out.println (""Worker done waiting, we're now waiting for it by joining"");
        try {
            worker.join();
        } catch (InterruptedException ex) { }

    }
</code></pre>
"
"1591784","<p>It's too bad Python 3.1 lost the ipaddr lib.</p>

<p>It's still available as a third-party library: <a href=""http://code.google.com/p/ipaddr-py/"" rel=""nofollow"">py-ipaddr</a> available on <a href=""http://pypi.python.org/pypi/ipaddr"" rel=""nofollow"">PyPI</a>.</p>

<h2>Compression</h2>

<pre><code>&gt;&gt;&gt; ipaddr.IPv6Address('0:0::0:1').compressed
'::1'
</code></pre>

<h2>IPv4 mapping</h2>

<pre><code>&gt;&gt;&gt; ipaddr.IPv6Address('::ffff:123.45.67.89').ipv4_mapped
IPv4Address('123.45.67.89')
</code></pre>

<h2>CIDR</h2>

<pre><code>&gt;&gt;&gt; ipaddr.IPv6Network('::ffff:123.45.67.89/128')
IPv6Network('::ffff:7b2d:4359/128')
</code></pre>
"
"1602368","<p>I think it is the best solution:</p>

<pre><code>JTextField textField = new JFormattedTextField(new MaskFormatter(""###"")); //
</code></pre>
"
"1621453","<p>looking at this from a sane perspective, if you assume that the statement</p>

<p><code>if(n != n)</code></p>

<p>is atomic (which I think is reasonable, but i dont know for sure), then the assertion exception could never be thrown.</p>
"
"2405065","<p>Of course you can. If you don't provide, Java usually create and <code>Anonymous Inner Constructor</code> for you. </p>

<p>This is very evident when creating a getter and setter bean where there is no constructor but there exists an anonymous constructor.</p>

<p>For more information, visit the (former Sun) Oracle Site here: <a href=""http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#252986"" rel=""nofollow"">http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#252986</a></p>
"
"1651071","<p>No - you cannot cast directly from <code>List&lt;A&gt;</code> to <code>List&lt;B&gt;</code> since both are different types - your only option is to iterate through <code>List&lt;A&gt;</code> and cast every object of type <code>A</code> into a object of type <code>B</code> and add it to <code>List&lt;B&gt;</code></p>
"
"1671400","<p>You could do this:</p>

<pre><code>String strz[] = strs.toArray(String[strs.size()]);
String theFirstOne = strz[0];
</code></pre>

<p>The javadoc for Collection gives the following caveat wrt ordering of the elements of the array:</p>

<blockquote>
  <p>If this collection makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.</p>
</blockquote>
"
"2445035","<p>The only way to specify multiple classes in a single java file is to use inner classes.</p>

<p>So for Foo.java</p>

<p>you would have:</p>

<pre><code>public class Foo {

  main {}

  public class bar {
    ....
  }

  public class qux {
    ....
  }
}
</code></pre>

<p>You may read more of this here: <a href=""http://java.sun.com/docs/books/tutorial/java/javaOO/nested.html"" rel=""nofollow"">http://java.sun.com/docs/books/tutorial/java/javaOO/nested.html</a></p>
"
"1695856","<p><code>null</code> does not occupy any space in memory.</p>

<p>Simply saying <code>int</code> occupies some bytes like <code>float</code> occupies some space in memory.</p>

<p>But for <code>null</code> no space is occupied in memory.
Send me details if my answer is wrong.</p>

<p>Try for <code>system.memorrysize()</code> like method in Java.</p>
"
"2476495","<p>don't know about spring, but if you want to have some control on creating new instances, you should make  constructor private, and create <code>public static YourClass getInstance()</code> method inside your class which will handle checks and return new instance of that object. You can then create new class with constructor whichi will call getInstance().. and hand that class to Spring. Soon you will discover places where you had that 'illegal' calls outside spring... </p>
"
"2493755","<p>Have you tried this ?</p>

<pre><code>// Test if both arrays are of the same type
if (array1.class.getComponentType.equals(array2.class.getComponentTYpe)) {
    // Polymorphism FTW !
    return Arrays.equals(array1, array2);
}
</code></pre>
"
"1735859","<p>To get the high byte, shift right by 8 bits then mask off the top bytes. Similarly, to get the low byte just mask off the top bytes.</p>

<pre><code>data[0] = (width &gt;&gt; 8) &amp; 0xff;
data[1] = width &amp; 0xff;
</code></pre>
"
"1762321","<p>Take a look at the JavaDoc on the Matcher.matches() method:</p>

<pre><code>boolean java.util.regex.Matcher.matches()
Attempts to match the entire input sequence against the pattern. 

If the match succeeds then more information can be obtained via the start, end, and group methods. 

Returns:
true if, and only if, the entire input sequence matches this matcher's pattern
</code></pre>

<p>Try calling the ""matches"" method first.  This won't actually do the text replacement as noted in your post, but it will get you further.</p>
"
"2559169","<pre><code>public class TEST
{
  public static void main(String arg[]){
    bool exitFinally  = false;
    try
    {
      System.out.println(""execute try"");
      //what should I write hear that finally does not run.
    }
    catch (Exception e){
      System.out.println(e);
    }
    finally{

        if(exitFinally)
            return;

      System.out.println(""execute finally"");
    }
  }
}
</code></pre>
"
"2559172","<p>Put the code in finally into an if.</p>

<pre><code>public class TEST
{
  public static void main(String arg[]){
    boolean b = true;
    try
    {
      System.out.println(""execute try"");
      if (something()) b = false;
    }
    catch (Exception e){
      System.out.println(e);
    }
    finally{
      if (b){
        System.out.println(""execute finally"");
      }
    }
  }
}
</code></pre>
"
"2559173","<p>Use boolean flag:</p>

<pre><code>public class TEST
{
    public static void main(String arg[]){
        boolean success=false;
        try
        {
            System.out.println(""execute try"");
            //what should I write hear that finally does not run.
            success=true;
        }
        catch (Exception e){
            System.out.println(e);
        }
        finally{
            if (!success)
            {
                System.out.println(""execute finally"");
            }
        }
    }
}
</code></pre>
"
"2572355","<p>Because if <code>B extends C</code>, then B might have stuff that isn't in C (like instance variables you initialize in the constructor that are not in new C())</p>
"
"1812062","<p>You can use the <code>Synchronized</code> keyword which will use to run one thread completely</p>

<p>example</p>

<pre><code>public synchronized void run() //which thread to run completely
{
}
</code></pre>
"
"2581206","<pre><code>class DirFileFilter extends FileFilter {
  boolean accept(File pathname) {
    return pathname.isDirectory();
  }
}

DirFileFilter filter = new DirFileFilter();
HashSet&lt;File&gt; files = new HashSet&lt;File&gt;();

void rec(File root) {
  // add itself to the list
  files.put(root);
  File[] subdirs = root.list(filter);

  // bound of recursion: must return 
  if (subdirs.length == 0)
    return;
  else //this is the recursive case: can call itself
    for (File file : subdirs)
      rec(file);
}
</code></pre>
"
"2583594","<p>The easiest if You can modify your java code:</p>

<p>write the result to environment variable (pseudo code below):</p>

<p>solution 1. 
(Write directly to env. in java app.)</p>

<p>java:</p>

<pre><code>...
setenv('ret', somefloatvalue);
...

exit..
</code></pre>

<p>c++:</p>

<pre><code>system(""java -jar test.jar text1 text2"")
...
getenv(""ret"")
</code></pre>

<p>(I haven't test it, but important here is the context, does system creates another shell (console),
if yes, you'll not see those envs, therefore some other spawn method is necessary)</p>

<p><strong>CreateProcess()</strong> on windows
<strong>fork()</strong> on linux.</p>

<p>There are also more complex solutions, </p>

<ul>
<li>send some JASON's through the sockets.... etc.</li>
<li>Write to text file in java, read in
c++.</li>
<li>MPI...</li>
<li>extreme in this case CORBA ;)</li>
</ul>
"
"1824242","<p>The warnings say that <em>IColumn</em> interface and <em>PropertyColumn</em> class are parameterized types, so you just need to define type parameters for them.</p>

<p>Consider the following example:</p>

<pre><code>List&lt;Set&gt; list = new ArrayList&lt;Set&gt;();
</code></pre>

<p><em>List</em> and <em>ArrayList</em> are parameterized types and their type parameters are defined. However, <em>Set</em> is parameterized type as well but it's raw version is used as a type parameter, hence, compiler generates a warning at that case.</p>

<p>We can fix our example by explicitly specifying all type arguments, e.g.</p>

<pre><code>List&lt;Set&lt;Integer&gt;&gt; list1 = new ArrayList&lt;Set&lt;Integer&gt;&gt;();
List&lt;Set&lt;String&gt;&gt; list1 = new ArrayList&lt;Set&lt;String&gt;&gt;();
</code></pre>

<p>You need to do the same thing for your generic classes and interfaces.</p>
"
"2587544","<p>if you simply want to execute this as long as the boolean is a particular value then use a do or while loop.</p>

<pre><code>do { CreatePaymentRecords(TermDate, FYEProcessing); } while (FYEProcessing);
</code></pre>
"
"1828718","<ul>
<li><code>YourBean implements Comparable&lt;YourBean&gt;</code></li>
<li>method compareTo : order by number of word</li>
<li>TreeMap instead of hashmap</li>
</ul>
"
"2628590","<p>I think you could leverage a negated range to do this. As this is just a hint, it's not tested though!</p>

<p>Turn your <code>""xy""</code> into a regexp like this: <code>""[^xy]""</code></p>

<p>...and then wrap that into a regexp which replaces strings matched by that expression with ""+"".</p>
"
"2631699","<p>I don't know about blackberry, but generally, exceptions have a stacktrace, where line numbers are shown:</p>

<pre><code>java.lang.NullPointerException
    at your.packege.ClassName.methodName(ClassName.java:169)
</code></pre>

<p>So obtain the stacktrace and see. The stacktrace is obtained either by </p>

<pre><code>try {..} catch (Exception ex) {..}
</code></pre>

<p>or by letting it bubble up to a place where it is printed to the standard output.</p>

<p>Also, each exception has <code>getStackTrace()</code> method, which returns each line of the stack-trace as a <code>StackTraceElement</code></p>
"
"2631705","<p>You should be able to look at the exception's stack trace.</p>

<p>You can print this to a console doing something like this:</p>

<pre><code>try {
    // Code that throws an exception
} catch (Exception e) {
    e.printStackTrace();
}
</code></pre>

<p>Note: This should NEVER appear in production code!</p>
"
"1901599","<p>The <a href=""http://www.exampledepot.com/egs/java.io/ReadFromStdIn.html"" rel=""nofollow"">Java Developer's Almanac</a> is always a good source of basic examples such as yours.</p>

<pre><code> BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
 String str = """";
 while (str != null) {
     System.out.print(""&gt; prompt "");
     str = in.readLine();
     process(str);
 }
</code></pre>

<p>Edit: Apparently some people think that a demonstration of the essentials of some technique should have error-checking. Perhaps I should also have commented the code, and provided a spec. Next time, I'll also develop some custom annotations to express pre and post conditions, or draft an implementation in Eiffel.</p>
"
"2673701","<p>Here's my solution. It's kind of quick, so don't be too hard on the optimization.</p>

<pre><code>public static void printWords(int length) {

    if (length &lt; 1)
        throw new IllegalArgumentException();

    printWordsRec("""", length);
}

private static void printWordsRec(String base, int length) {

    for (char c = 'a'; c &lt;= 'z'; c++) {
        if (length == 1) {
            System.out.println(base + c);
        }
        else {
            printWordsRec(base + c, length - 1);
        }
    }
}
</code></pre>
"
"1919986","<p>You could try using StringBuilder.append() if you think that will make your code look cleaner:</p>

<pre><code>return new StringBuilder()
   .append(""("").append(topTwenty).append("")"")
   .toString();
</code></pre>
"
"2709182","<p>Make test a string and cast the results of getSelectedItem() to a string</p>

<pre><code>string test = (string)Spinner.getSelectedItem();
if (test == ""hello"") 
{
    //Do something
}
</code></pre>
"
"2717218","<p>I think this should work... untested off the top of my head.</p>

<pre><code>public void printTriangle(int count)
{    
    if (count == 0) return;
    printTriangle(count - 1);
    for (int x = 1; x &lt;= count; x++) { 
        System.out.print(""*""); 
    }
    System.out.print(""\n""); 
}
</code></pre>
"
"2717249","<p>So, you need to create a small block. What information does that block need? Just the maximum. But the recursion needs to know what line its on... you end up with a constructor like:</p>

<pre><code>public void printTriangle (int current, int max)
</code></pre>

<p>Now, use that to put the rest of the recursion together:</p>

<pre><code>public void printTriangle (int current, int max)
{ 
    if (current &lt;= max) 
    { 
         // Draw the line of stars...
         for (int x=0; x&lt;current; x++)
         {
             System.out.print(""*"")
         }
         // add a newline
         System.out.print(""\n""); 

         // Do it again for the next line, but make it 1-bigger
         printTriangle(current + 1, max);
    } 
} 
</code></pre>

<p>Now, all you have to do, is initiate it:</p>

<pre><code>printTriangle(1, 5);
</code></pre>
"
"1957439","<p>There are some good answers here:</p>

<p><a href=""http://stackoverflow.com/questions/658936/is-there-a-library-to-convert-java-pojos-to-and-from-json-and-xml"">http://stackoverflow.com/questions/658936/is-there-a-library-to-convert-java-pojos-to-and-from-json-and-xml</a></p>

<p><strong>EDIT</strong>: from this link:</p>

<p><a href=""http://jackson.codehaus.org/Tutorial"" rel=""nofollow"">http://jackson.codehaus.org/Tutorial</a></p>

<p>you have an example using the ObjectMapper():</p>

<pre><code>ObjectMapper mapper = new ObjectMapper(); // can reuse, share globally
User user = mapper.readValue(new File(""user.json""), User.class);
</code></pre>

<p>i.e. you have to have your java class/POJO already defined, but once it is you can create an instance of this class very quickly.</p>
"
"2733011","<p>A little more details on what elementTab is would be very helpful in suggesing a solution.
If you want to add rows, simply create an array of objects and add to the model.
Eg. </p>

<pre><code>    TableModel model = table.getModel();
Object[] row = new Object[] {1,2,3};
model.addRow(row);
</code></pre>

<p>if you want to selective update cells, use 
<code>model.setValueAt(Object,row,col);</code></p>
"
"2768257","<p>what's wrong with:</p>

<pre><code>Collections.shuffle(Arrays.asList(theArray));
</code></pre>
"
"2791843","<p>Run JavaLint - I suspect it will tell you that</p>

<pre><code>System.out.println(text.toLowerCase());
</code></pre>

<p>in the first example is unreachable.  Since it is unreachable, I'm guessing FindBug doesn't care that it could cause a NullPointerException</p>
"
"2026490","<p>Well, the simplest, most brain-dead way to do this is simply to include your SQL as a string in your code. </p>

<p>Something like </p>

<pre><code>   Statement s = new Statement(""Select * from wherever"");
</code></pre>

<p>That may not be very sophisticated, but it works.  The downside is that the compiler can't check your SQL syntax.  Slightly better solution is <a href=""http://java.sun.com/docs/books/tutorial/jdbc/basics/prepared.html"" rel=""nofollow"">Prepaired Statements</a> where you specify a parametic template.  So you can do stuff like: </p>

<pre><code>PreparedStatement s = connection.prepareStatement(""Select * from wherever where state = ?"");
</code></pre>

<p>That way, your JDBC connection <i>should</i> throw an exception as soon as you create the prepared statement at run time. So if the code works the first time, it should always work. </p>

<p>Then in your code later when you want to change the parameter you do: </p>

<pre><code>s.setString(1, ""CA"");
</code></pre>

<p>Microsoft has an embedded query language for .net called <a href=""http://msdn.microsoft.com/en-us/netframework/aa904594.aspx"" rel=""nofollow"">LINQ</a>. For databases you use <a href=""http://msdn.microsoft.com/en-us/library/bb425822.aspx"" rel=""nofollow"">LINQ to SQL</a> which lets you embed queries right in your code. </p>
"
"2838015","<p>Putting some parenthesis might help. Try this:</p>

<pre><code>public String toString() { 
   return ""HouseVo [ "" 
          + (""Name  :  "" + this.name == null ? """" : this.name)
          + (""Address  :  "" + this.address == null ? """" : this.address)
          + ""]""; 
} 
</code></pre>
"
"2060758","<p>An indirect answer: XML typically represents data, not instructions. So it is probably more useful to map parser handling onto fields. This is what JAXB does. I suggest using JAXB or similar.</p>

<p>Unless you have a huge amount to do, I would strongly advise against reflection in a statically typed language. A string of <code>} else if (tag.equals(""blah"")) {</code> (or with interning, <code>} else if (tag == ""blah"") {</code> isn't going to kill you. You can even map strings onto their enum namesakes, but that is a little reflectiony. Switch-on-string should be with us in JDK7.</p>
"
"2850241","<p>I suggest you look for something like this</p>

<pre><code>String s; 
s.split(""\n\r"");
</code></pre>

<p>Look for the instructions here for <a href=""http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html#split%28java.lang.String%29"" rel=""nofollow"">Java's String Split method</a></p>

<p>If you have any problem, post your code</p>
"
"2850415","<p>Here's a simpler way:</p>

<pre><code>using System.Security.Cryptography.X509Certificates;    

X509Certificate2 xcert = new X509Certificate2(""C:\some_cert.cerpub"");
string certSubject = xcert.Subject;
string certThumbprint =  xcert.Thumbprint;   
</code></pre>
"
"2069524","<p>Ugly and slow and untested, but...</p>

<pre><code>int mult(a,b){
    int i, rv=0;
    for(i=0; i &lt; 31; ++i){
        if(a &amp; i&lt;&lt;i){
            rv += b &lt;&lt; i
        }
    }
    if(a &amp; 1&lt;&lt;31){ // two's complement
        rv -= b&lt;&lt;31;
    }
    return rv;
}
</code></pre>
"
"2113766","<p>Simple!</p>

<p>Use a static factory method instead of a constructor:</p>

<pre><code>public static &lt;T extends TableEntry&gt; newInstance(int rows, int cols) {
    return new BaseTable&lt;T&gt;(rows, cols);
}
</code></pre>

<p>To instantiate type</p>

<pre><code>BaseTable&lt;Number&gt; = BaseTable.newInstance(10, 20);
</code></pre>
"
"2948124","<p>I think <code>getXindex()</code> is the best way. The getter should start with 'get', followed by the member name, with its first letter capitalized. Also the latest conventions I heard of, say that we should avoid multiple capital letters one after another. For example <code>getHTMLtooltip</code> is wrong. it should be <code>getHtmlTooltip</code> instead. Also you should try to make all your members <code>final</code> and there should not be a need of setters, since the class will be immutable ;)</p>
"
"2183255","<pre><code>integer &amp; 0xFF
</code></pre>

<p>for the first byte</p>

<pre><code>(integer &gt;&gt; 8) &amp; 0xFF
</code></pre>

<p>for the second and loop etc., writing into a preallocated byte array. A bit messy, unfortunately.</p>
"
"2188988","<blockquote>
  <p>I am using a different plugin to jar my files. What is the best way to avoid the maven-jar plugin from executing?</p>
</blockquote>

<p>First, the <code>jar:jar</code> goal is <a href=""http://e.org/guides/introduction/introduction-to-the-lifecycle.html#Built-in_Lifecycle_Bindings"" rel=""nofollow"">bound by default</a> on the <code>package</code> phase for a project with a packaging of type <code>jar</code>. Second, there is no way to unbind a plugin bound to a phase. So, if you are using another plugin(?), either accept to produce 2 JARs or change the packaging (but I don't think this will work well).</p>
"
"2255839","<p>Why don't you use a List on the questionaire and for each question you add you add one to the List, for example.</p>

<pre><code>public class Questionnaire
{
    public List&lt;Question&gt; myQuestions {get; private set;}

    public Questionnaire(string[] questions)
    {

       myQuestions = new List&lt;Questions&gt;();

       foreach(string q in questions)
       {
          myQuestions.Add(new Question {questionText = g});
       }
    }
}
public class Question
{
    public string questionText {get; set;}
}
</code></pre>

<p>Then you will be able to check the questions from outside... this is what you want?</p>

<p>Hope this helps</p>

<p>EDIT: ohh is Java, but you got the idea right?</p>
"
"3043338","<p>Maybe you could try this code:</p>

<pre><code>import java.io.*;
public class Test
{
public static void main(String[] args)
{
try
  {
  BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
  String userInput = in.readLine();
  System.out.println(""\n\nUser entered -&gt; "" + userInput);
  }
  catch(IOException e)
  {
  System.out.println(""IOException has been caught"");
  }
 }
}
</code></pre>
"
"3079910","<p>Since evaluation order in Java is <a href=""http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#264242"" rel=""nofollow"">defined</a>, we can do this:</p>

<pre><code>public static int countZero(int n) {
    for (int i=1,t=0 ;; i&lt;&lt;=1) {
        if (n==0) return t;
        if (n==(n&amp;=~i)) t++;
    }
}
</code></pre>

<p>Note that this <em>relies</em> on the LHS of an equality being evaluated first; try the same thing in C or C++ and the compiler is free to make you look foolish by setting your printer on fire.</p>
"
"3143425","<p>summary to wait/notify mechanism:</p>

<p>1)<strong>current thread reaches one object's synchronized code block which contains the call to wait()</strong>, it competes with other threads for the lock(the object's monitor), as winner it executes the block till the call to wait() encounters.</p>

<p>2)by calling wait(), current thread releases the lock to other competing threads, then halts execution, wait for notify being sent from another thread who succeeds in obtaining the lock.</p>

<blockquote>
  <p>JavaDoc: </p>
  
  <p>A thread becomes the owner of
  the object's monitor in one of three
  ways: </p>
  
  <p>•By executing a synchronized instance
  method of that object.  </p>
  
  <p>•By executing
  the body of a synchronized statement
  that synchronizes on the object.  </p>
  
  <p>•For
  objects of type Class, by executing a
  synchronized static method of that
  class.</p>
</blockquote>

<p>3)<strong>another thread reaches the same object's yet another synchronized code block which contains the call to notify/notifyAll(),</strong> it competes with other threads for the lock, as winner it executes the block till finishing the call to notify/notifyAll(). It will release the lock either by call to wait() or at the end of the execution on the block.</p>

<p>4)upon receiving notify/notifyAll(), current thread competes for the lock, as winner the execution continues where it has halted.</p>

<p>simple example:</p>

<pre><code>    public class Main3 {

    public static void main(String[] args) {
        Test3 t = new Test3();
        new Thread(t).start();
        new Thread(t).start();
        try {
            Thread.sleep(1000);
        } catch (Exception ex) {
        }
        t.testNotifyAll();
    }
}

class Test3 implements Runnable {

    synchronized public void run() {

        System.out.println(Thread.currentThread().getName() + "": "" + ""wait block got the lock"");
        try {
            wait();
        } catch (Exception ex) {
        }
        System.out.println(Thread.currentThread().getName() + "": "" + ""wait block got the lock again"");
        try {
            Thread.sleep(1000);
        } catch (Exception ex) {
        }
        System.out.println(Thread.currentThread().getName() + "": "" + ""bye wait block"");

    }

    synchronized void testNotifyAll() {
        System.out.println(Thread.currentThread().getName() + "": "" + ""notify block got the lock"");
        notifyAll();
        System.out.println(Thread.currentThread().getName() + "": "" + ""notify sent"");
        try {
            Thread.sleep(2000);
        } catch (Exception ex) {
        }
        System.out.println(Thread.currentThread().getName() + "": "" + ""bye notify block"");
    }
}
</code></pre>

<p>output:</p>

<blockquote>
  <p>Thread-0(or 1): wait block got the
  lock </p>
  
  <p>Thread-1(or 0): wait block got
  the lock </p>
  
  <p>main: notify block got the
  lock </p>
  
  <p>main: notify sent </p>
  
  <p>main: bye notify block </p>
  
  <p>Thread-0(or 1): wait block
  got the lock again </p>
  
  <p>Thread-0(or 1): bye
  wait block </p>
  
  <p>Thread-1(or 0): wait block
  got the lock again </p>
  
  <p>Thread-1(or 0): bye
  wait block</p>
</blockquote>
"
"2414476","<p><a href=""http://java.sun.com/j2se/1.4.2/docs/api/java/lang/UnsatisfiedLinkError.html"" rel=""nofollow""> javadoc</a> says, <code>Thrown if the Java Virtual Machine cannot find an appropriate native-language definition of a method declared native.</code></p>

<p>guess java does not know how to read the image u specified.. use a .gif format.</p>
"
"2420292","<p><code>(.*?)</code> might need to be <code><code>(.*)?</code></code></p>
"
"2464232","<p>The quick answer is that you can only change the text size by using your own layout rather than the android.R.layout.simple_list_item one. By doing that you can change the TextView properties such as the text size. However if you haven't worked with lists with your own layouts, they can appear a bit complex to use the first time. I'll try to come back and edit this answer to provide more information later, but I suggest you look for tutorials on custom list views - that will show you how to <code>inflate</code> your own layout files.</p>
"
"2471102","<p><code>Collection</code> and <code>List</code> are interfaces. You can take any Implementation of the <code>List</code> interface: <code>ArrayList LinkedList</code> and just cast it back to a <code>Collection</code> because it is at the Top</p>

<p>Example below shows casting from <code>ArrayList</code></p>

<pre><code>public static void main (String args[]) {
    Collection c = getCollection();
    List myList = (ArrayList) c;
}

public static Collection getCollection()
{
    Collection c = new ArrayList();
    c.add(""Apple"");
    c.add(""Oranges"");
    return c;
}
</code></pre>
"
"2473679","<p>Isn't the <code>public void set(int bit)</code> method what your looking for?</p>
"
"2496106","<p>Could it just be a spacing issue?   Your original post shows no space between the ']' and 'arg'.</p>

<p>Try this:</p>

<pre><code>public static void main (String[] arg) 
</code></pre>

<p>or, if that still doesn't work:</p>

<pre><code>public static void main (String arg[]) 
</code></pre>
"
"3346520","<p>Confession:</p>

<p>Okay I guess my answer is bad because there are subtle differences between Java and C# with this stuff.  Still, maybe it'll help someone with the same problem but in C#!</p>

<p>Btw, in C#, if you pass in a RegEx ""."" you don't get an empty array, instead you get an array of blanks (""""), one for each character boundary in the string.</p>

<p><strong>Edit</strong></p>

<p>You can pass a regex expression into the <code>split()</code> function:</p>

<pre><code>string expressions = ""10+20*4/2"";

/* this will separate the string into an array of numbers and the operators;
   the numbers will be together rather than split into individual characters
   as """" or ""."" would do;
   this should make processing the expression easier
   gives you: {""10"", ""+"", ""20"", ""*"", ""4"", ""/"", ""2""} */
foreach (string exp in expressions.split(@""(\u002A)|(\u002B)|(\u002D)|(\u002F)""))
{
  //process each number or operator from the array in this loop
}</code></pre>

<p><strong>Original</strong></p>

<p><code>String[] exp = originalExp.split(""."");</code></p>

<p><em>You should get at least one string from the return value of <code>split()</code> (the original un-split string).  If the array of strings is empty, the original string was probably empty.</em></p>

<ul>
<li><a href=""http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html#split%28java.lang.String%29"" rel=""nofollow"">Java String Split() Method</a></li>
</ul>
"
"1111928","<p>Should I understand you are going to use multithread on that array?... </p>

<p>If you are not, then you don't have to worry about the synchronization. </p>

<p>I would:</p>

<pre><code>	List&lt;List&lt;String&gt;&gt; listOfLists = new ArrayList&lt;List&lt;String&gt;&gt;();

	List&lt;String&gt; firstVector = new ArrayList&lt;String&gt;();

	firstVector.add( ""one"" );
	firstVector.add( ""two"" );

	listOfLists.add(  firstVector );

    System.out.println( listOfLists.get(0).get(0) == ""one"" );
    System.out.println( listOfLists.get(0).get(1) == ""two"" );
</code></pre>

<p>Prints true, true</p>
"
"2509945","<p>IMO the worst case is not two objects getting created but several (as many as there are threads calling <code>dateTime()</code>, to be precise). Since <code>dateTime()</code> is not synchronized and <code>dt</code> is neither final nor volatile, a change to its value in one thread is not guaranteed to be visible to other threads. So even after one thread initialized <code>dt</code>, any number of other threads may still see the reference as null, thus happily create new objects.</p>

<p>Other than that, as explained by others, a partially created object can not get published by <code>dateTime()</code>. Neither can a partially changed ( = dangling) reference, since reference value updates are guaranteed to be atomic.</p>
"
"1282874","<p>What you've done kind of looks fine to me here's how I'd modify it:</p>

<pre><code>final AtomicReference&lt;String&gt; resultXml = new AtomicReference&lt;String&gt;();

RegexpThread rt = new RegexpThread() {
  public void run() {
    method2(m, urlCopy, document, resultXml);
  }

};

rt.start();

try {
    rt.join(6 * 1000);
} catch (InterruptedException e) {
    return ""y"";
}

if(resultXml.get() == null) {
    rt.interupt();
    return ""g"";
}

resultXml.append(resultXml.get());

return resultXml.toString();
</code></pre>
"
"3426684","<p>Oops, read your question better:</p>

<p>You can init an array like so</p>

<pre><code>int[] arr = new int[] {UN, UN, UN, UN, UN};
</code></pre>

<p>But ofcourse, if you don't know the size at compile time, then you have to do the for loop. The second technique is not possible.</p>
"
"3426691","<pre><code>int arr[] = { 0, 0, 0, 0, 0 };
</code></pre>
"
"2582042","<p>Using wonderful classes in Collections framework is the better than using arrays.
But in case your question is from a ""quizzing"" perspective, here is what you should do.
Create your own resize method such as:</p>

<pre><code>  int[] oldArray = {1,2,3};

  int oldSize = java.lang.reflect.Array.getLength(oldArray);
  Class elementType = oldArray.getClass().getComponentType();
  Object newArray = java.lang.reflect.Array.newInstance(
         elementType,newSize);
  int preserveLength = Math.min(oldSize,newSize);
  if (preserveLength &gt; 0)
      System.arraycopy (oldArray,0,newArray,0,preserveLength);

  oldArray = newArray;
</code></pre>
"
"2606546","<p>You do have the ability to control object destruction in Java. It simply uses a different idiom:</p>

<pre><code>Connection conn = null;
try {
  conn = ...
  // do stuff
} finally {
  try { conn.close(); } catch (Exception e) { }
}
</code></pre>

<p>You could point out at this point that this isn't object destruction and that you could, for example, pass that object to something else and still have a reference to it. You are right on both counts. It is simply as close as Java (and most managed platforms) get.</p>

<p>But no Java does not, as you say, have a destructor mechanism as in C++. Some people mistake finalizers for this. They are <em>not</em> destructors and it is dangerous to use them as such.</p>

<p>Memory management for a programmer is hard. You can easily leak memory, particularly when doing multithreaded programming (also hard). Experience has shown that the cost of GC, while real and sometimes substantial, is well and truly justified in productivity increases and bug incidences in the vast majority of cases, which is why the vast majority of platforms now are ""managed"" (meaning they use garbage collection).</p>
"
"1301112","<p>Approach F:</p>

<p>Forget about generics unless you have type-specific patterns. Define a couple of interfaces per your desired system, including perhaps something like</p>

<pre><code>interface StateMachineState&lt;R extends StateMachineState,T&gt; {
    /* returns next state */
    R execute(T otherState); 
}
</code></pre>

<p>and for a particular state machine, use enums that extend StateMachineState:</p>

<pre><code>class OtherState {
    public double x1;
    public int i;
}

enum MyState extends StateMachineState&lt;MyState,OtherState&gt;
{
    FOO {
       MyState execute(OtherState otherState) { 
           otherState.x1 += 3.0;
           otherState.i++;
           return BAR;
       }
    },
    BAR {
       MyState execute(OtherState otherState) { 
           otherState.x1 -= 1.0;
           otherState.i--;
           return (i % 3 == 0) ? FOO : BAR;
       }
    },         
}
</code></pre>

<p>Then you can do something like:</p>

<pre><code>MyState state = MyState.FOO;
OtherState otherState = new OtherState();
otherState.i = 77;
otherState.x1 = 3.14159;
while (true)
{
    state = state.execute(otherState);
    /* do something else here */        
}
</code></pre>

<p>(caveat: code not double-checked for syntax errors)</p>
"
"3484454","<p>In MHO this is a typical case where a <code>@ManyToMany</code> relationship is needed.</p>

<p>If you use a Join Table, you can have in your Article class something like.</p>

<pre><code>@ManyToMany 
@JoinTable(name=""TAG_ARTICLE"", 
      joinColumns=@JoinColumn(name=""ARTICLE_ID""),
      inverseJoinColumns=@JoinColumn(name=""TAG_ID""))
private Collection&lt;Tag&gt; tags;
</code></pre>

<p>Then in your Tag class</p>

<pre><code>@ManyToMany(mappedBy=""tags"")
private Collection&lt;Article&gt; articles;
</code></pre>
"
"2627392","<p><code>int indiv1 = Integer.parseInt(nric.charAt(1));</code></p>
"
"1325453","<p>If no exceptions were thrown (I'm assuming you would have noticed that) <code>renameTo()</code> only returns true or false to indicate whether the rename succeeded or not and doesn't give any additional information. </p>

<p>Since it's Windows, a failure most likely indicates the the file is currently in use. This would happen because some other process has it open. More likely though, your process either isn't finished writing it or you forgot to close the file after you were done writing it.</p>

<p>It is also possible that you passed in an invalid path, or the gave a non-existent path to the <code>File</code> constructor.</p>

<p><code>renameTo()</code> will only throw exceptions if there is a security violation (<code>SecurityException</code>) or if you pass in a <code>null</code> for the file to rename.</p>
"
"2682067","<pre><code>ArrayList al = new ArrayList();
al.Add(array1);
al.Add(array2);
al.Add(array3);
</code></pre>

<p>that's probably your best bet, or you will run into ArrayIndexOutOfBound-style problems. You'll probably run into this way too</p>
"
"2682156","<pre><code>    String[] arr0 = [""a1"", ""a2""];
    String[] arr1 = [""b1"", ""b2"", ""b3"", ""b4""];
    String[] arr2 = [""c1""];
    int length = arr0.length + arr1.length + arr2.length;
    int max = Math.max(arr0.length, Math.max(arr1.length, arr2.length));
    int index = 0;
    String[] result = new String[length];
    for (int i=0; i&lt;max; i++){
        if (i&lt;arr0.length)
           result[index++] = arr0[i];
        if (i&lt;arr1.length)
           result[index++] = arr1[i];
        if (i&lt;arr2.length)
           result[index++] = arr2[i];
    }
</code></pre>
"
"2682715","<p>Perhaps this is a bit simplistic, but have you tried adding it to your Model? I.e., include the Model in your method's arguments, then add the BindingResult to it, which is then available in your view.</p>

<pre><code>model.addAttribute(""binding"",binding);
</code></pre>

<p>I think you may have to use a forward rather than a redirect (in my head I can't remember if a redirect loses the session or not &mdash; I could be wrong about this as I don't have any documentation handy, i.e., if you're not getting the BindingResult after adding it to the Model, try using a forward instead to confirm this).</p>
"
"3591848","<p>The behaviour of sockets is highly platform dependent, so you can never be sure that the available documentation or methods will work as you expect.</p>

<p>I would think that it is highly probable that closing an <code>OutputStream</code> causes the underlying socket to get closed. I had a similar problem with sockets not behaving as expected which I've asked previously.</p>

<p><a href=""http://stackoverflow.com/questions/3428127/close-java-socket/3428934#3428934"">This answer</a> indicates that closing the output stream of a socket does indeed close the underlying socket</p>
"
"1364034","<p>You can write method which will return two-elements array which contents are swapped parameters to that method.</p>

<pre><code>static Object[] swap(Object a, Object b) {
    return new Object[]{b,a};
}
</code></pre>
"
"3612405","<p>In my mind, <code>@Override</code> makes sense on methods that are overriding methods, not implementing methods.</p>

<p>So if you have an interface:</p>

<pre><code>public interface MyInterface {
    public void doSomething();
}
</code></pre>

<p>A class that <em>implements</em> that interface is below (<code>MyClassA</code>):</p>

<pre><code>public MyClassA implements MyInterface {
    public void doSomething() {
        System.out.println(""This is from MyClassA"");
    }
}
</code></pre>

<p>Then, the below class extends <code>MyClassA</code> and <em>overrides</em> <code>doSomething</code>, and so then I'd add the <code>@Override</code> annotation.</p>

<pre><code>public MyClassB extends MyClassA implements MyInterface {
    @Override
    public void doSomething() {
        System.out.println(""This is from MyClassB"");
    }
}
</code></pre>

<p>I wouldn't do the below (whether or not it is permissable) in any case, since it breaks the idea about overriding something - you're implementing, not overriding the interface:</p>

<pre><code>public MyClassA implements MyInterface {
    @Override
    public void doSomething() {
        System.out.println(""This is from MyClassA"");
    }
}
</code></pre>
"
"3617801","<p><code>ConcurrentHashMap</code> is a <code>Map</code> which may be safely used in multi-threading environment. It is better than synchronized version of regular <code>Map</code> because <i>concurrency</i> means that different threads are often available to access this map without blocking.</p>
"
"2762249","<p>Just because a method can only have <em>one</em> return type doesn't mean that that type can't contain <em>more than one</em> piece of information. The solution to the type of problem you seem to be having is to declare data types which hold multiple pieces of information.</p>

<p>Following the example in the question (""finding the minimum and second minimum values in a huge collection and then manipulating them""):</p>

<pre><code>public class MinimumHolder {
    private int min;
    private int secondMin;
    public MinimumHolder(int min, int secondMin) {
        this.min = min;
        this.secondMin = secondMin;
    }

    //getters...
}

public MinimumHolder findTwoMinimums(Set&lt;Integer&gt; numbers) {
    // ...
    return new MinimumHolder(...);
}

public MinimumHolder manipulateData(MinimumHolder mins) {
    // do stuff with the data, this method could also be
    // declared as void if MinimumHolder was mutable
}
</code></pre>

<p>You could also pretty easily refactor <code>MinimumHolder</code> so that it could hold a variable list of ""minimums"" which were exposed with a <code>getMinimum(int position)</code> if you ever wanted to find more than two minimums.</p>
"
"1378473","<p>I think code bellow may work .Constructor of class have to define as public method not private.</p>

<p>Country(String constname) {<br />
             //constname is currently not used (I will use it for a Key in a Map)
            System.out.println(constname);
            System.out.println(""Ref debug:""+this);</p>

<pre><code>        //Ad this to the Countries
        Country.countries.add(this);
    }
</code></pre>
"
"2767339","<p>It looks like you are passing all your sql statements in one string. That's a problem because execSQL expects ""a single statement that is not a query"" (see documentation [here][1]). Following is a somewhat-ugly-but-working solution. </p>

<p>I have all my sql statements in a file like this:</p>

<blockquote>
  <p>INSERT INTO table1 VALUES (1, 2, 3);</p>
  
  <p>INSERT INTO table1 VALUES (4, 5, 6);</p>
  
  <p>INSERT INTO table1 VALUES (7, 8, 9);</p>
</blockquote>

<p>Notice the new lines in between text(semicolon followed by 2 new lines)
Then, I do this:</p>

<pre><code>String text = new String(buffer, ""UTF-8"");
for (String command : text.split("";\n\n"")) { 
   try { command = command.trim(); 
   //Log.d(TAG, ""command: "" + command); 
   if (command.length() &gt; 0) 
      db.execSQL(command.trim()); 
}
catch(Exception e) {do whatever you need here}
</code></pre>

<p>My data columns contain blobs of text with new lines AND semicolons, so I had to find a different command-separator. Just be sure to get creative with the split str: use something you know doesn't exist in your data. </p>

<p>HTH
Gerardo</p>

<p>[1]: <a href=""http://developer.android.com/reference/android/database/sqlite/SQLiteDatabase.html#execSQL(java.lang.String"" rel=""nofollow"">http://developer.android.com/reference/android/database/sqlite/SQLiteDatabase.html#execSQL(java.lang.String</a>, java.lang.Object[])</p>
"
"1386159","<p>You may just be using the wrong tool for the job:</p>

<pre><code>perl -ne ""print if m|&lt;p&gt;| .. m|&lt;/p&gt;|"" infile.txt &gt;outfile.txt
</code></pre>
"
"2783203","<p>So here's how I fixed it. I first made a new interface called GameObject since they refer to it!</p>

<pre><code> public interface GameObject
 {
 public boolean beats(GameObject g);
 }
</code></pre>

<p>The type didn't exist so referring to it wasn't going to work so great.</p>

<p>Here's my new code for Rock with comments on changes:</p>

<pre><code> import java.util.*;
 import java.lang.*;

 public class Rock implements GameObject //Need to be an instance of GameObject somehow!
 {
 public static void main(String args[])
     {

     }

 public boolean beats(GameObject object) //This isn't static anymore
 {
 boolean result = false; //Need to declare and initialize result
 if (((Object)object).getClass().getName().equals(""Rock"")) //getClass should have ()
     { 
     result = false;
     }
 else if (object.getClass().getName().equals(""Paper"")) //getClass should have ()
     {
     result = false;
     }
 else if(object.getClass().getName().equals(""Scissors"")) //getClass should have ()
     {
     result = true;
     }
return result;
 }
 }
</code></pre>

<p>EDIT: You seemed to be asking for how to fix the code and not the better way to do it. I believe this should be good to go for you now.</p>
"
"2795276","<p>I have a really really ugly solution:</p>

<pre><code>public static Object[] getNumberWords(String s, int nWords, int offset){
    Object[] os = new Object[2];
    Pattern p = Pattern.compile(""(\\w+)"");
    Matcher m = p.matcher(s);
    m.region(offset, m.regionEnd());
    int wc = 0;
    String total = """";
    while (wc &lt;= nWords &amp;&amp; m.find()) {
      String word = m.group();
      total += word + "" "";
      wc++;
    }
    os[0] = total;
    os[1] = total.lastIndexOf("" "") + offset;
    return os; }

    String foo(String s, int n){
    Object[] os = getNumberWords(s, n, 0);
    String a = (String) os[0];
    String m[] = new String[5];
    int indexCount = 0;
    int lastEndIndex = 0;
    for(int count = (n / 5); count &lt;= n; count += (n/5)){
        if(a.length()&lt;count){count = a.length();}
        os = getNumberWords(a, (n / 5), lastEndIndex);
        lastEndIndex = (Integer) os[1];
        m[indexCount] = (String) os[0];
        indexCount++;
    }
    return ""Part One: \n"" + m[0] + ""\n\n"" + 
    ""Part Two: \n"" + m[1] + ""\n\n"" + 
    ""Part Three: \n"" + m[2] + ""\n\n"" +
    ""Part Four: \n"" + m[3] + ""\n\n"" + 
    ""Part Five: \n"" + m[4];
}
</code></pre>
"
"3723558","<p>Give <code>&lt;br&gt;</code> without the ending slash.</p>
"
"3728804","<p>You're running on a 1.4 JVM, correct? It's not a 1.4-compiled class running on a 1.6 JVM? And is there a reason that you can't run the application on a 1.6 JVM, at least in a development environment?</p>

<p>If not, the built-in HProf agent should work, at least to find a memory leak. It will tell you what objects are <a href=""http://java.sun.com/developer/technicalArticles/Programming/HPROF.html"" rel=""nofollow"">live</a> when you kill your program, and where they were allocated. </p>

<p>I'm not 100% certain, but I believe that you need to use the <code>-Xrunhprof</code> invocation option (the linked doc invokes with <code>-agentlib</code>, which I think may have been added in 1.5). Also, I think there was a version of 1.4 that supported the ""modern"" debug interface, so could be used with JConsole.</p>
"
"3748554","<p>Of course, you could for example declare it like this: <code>HashMap&lt;Integer, HashMap&lt;String,Object&gt;&gt;</code> You use the outer hashmap to link your id with your inner HashMap, and in the inner one, you create keys ""info"", ""name"", ""quantity"" and associate values with them.</p>

<p>Of course, you could also use an ArrayList as the outer collection (it could be a better match for your ID: <code>ArrayList&lt;HashMap&lt;String,Object&gt;&gt;</code> that way you have indexed (id based) access to each of your ""info"", ""name"", ""quantity"" hashmap ""records""</p>
"
"3748566","<p>You could have ID as key and a <code>List</code> or <code>Set</code> (<code>Collection</code> in general) of objects as value.</p>
"
"1421227","<p>I would have a setS(String s) method that correctly sets the x int. Use that is your constructor. If you don't want s or x to be publicly settable, make the setS method private/protected/default.</p>

<pre><code>class Foo {
    int x;
    String s;
    private setS(String s) { this.s=s;this.x=s.length();}

    Foo(String s) {
            setS(s);
    }
}
</code></pre>

<p>Another solution (which seems to more closely match what you are trying to do) is to eliminate the x int. Provide:</p>

<pre><code>int getX() { return s.length(); }
</code></pre>

<p>instead of an x member.</p>

<p>If x is really a surrogate for a far more complex Object try:</p>

<pre><code>class Foo {
    private Object complex;
    private String s;
    Foo(String s){ this.s = s;}
    Object getComplex() {
        if (complex == null) {
            *complex=new Complex(s);
        }
        return complex;
    }
}
</code></pre>

<p>*May need to add synchronized or double checked locking here for thread safety.</p>
"
"2868210","<p>you should be able to use <code>lock(this){}</code> on a section of code to ensure that only one thread can access it at a time.</p>

<p>alternatively, you can cache a boolean value and set it to true when you fire your async thread, checking it before firing said thread and if its false, abort the intended operation</p>
"
"2868389","<p>You need a semaphore.</p>

<pre><code>class AThread extends Thread {
   Semaphore sem;
   AThread(Semaphore sem) {
     this.sem = sem;
   }
   public void run(){
      while(true){
         Thread.sleep(ONE_MINUTE);
         sem.acquire();
         try {
           //Lots of computation every minute
         } finally {
           sem.release();
         }
      }
   }
}
</code></pre>

<p>When instantiating the AThreads you need to pass the same semaphore instance:</p>

<pre><code>Semaphore sem = new Semaphore(MAX_AVAILABLE, true);
</code></pre>

<p>Edit: Who voted down can please explain why? There is something wrong in my solution?</p>
"
"2868643","<p>You can certainly find some improvement in throughput by reducing the number of threads to what the system can realistically handle.  Are you open to changing the design of the thread a bit?  It'll unburden the scheduler to put the sleeping ones in a queue instead of actually having hundreds of sleeping threads.</p>

<pre><code>class RepeatingWorker implements Runnable {

private ExecutorService executor;
private Date lastRan;

//constructor takes your executor

@Override
public void run() {

  try {
    if (now &gt; lastRan + ONE_MINUTE) {
      //do job
      lastRan = now;
    } else {
      return;
  } finally {
    executor.submit(this);
  }
}
}
</code></pre>

<p>This preserves your core semantic of 'job repeats indefinitely, but waits at least one minute between executions' but now you can tune the thread pool to something the machine can handle and the ones that aren't working are in a queue instead of loitering about in the scheduler as sleeping threads.  There is some wait busy behavior if nobody's actually doing anything, but I am assuming from your post that the entire purpose of the application is to run these threads and it's currently railing your processors.  You may need to tune around that if room has to be made for other things :)</p>
"
"1435617","<p>may be you could do your calculation with <a href=""http://java.sun.com/javase/6/docs/api/java/math/BigInteger.html"" rel=""nofollow"">java.math.BigInteger</a> and compare the result with </p>

<pre><code>new java.math.BigInteger(String.valueOf(Long.MAX_VALUE))
</code></pre>
"
"2889606","<p>You are passing <code>Country.class</code> which is a <code>Class</code> object. How is it a <code>Model</code> object?</p>
"
"1482621","<p>You can make a wrapper class - i.e. extend ZipOutputStream and make methods synchronized by overriding them. For example:</p>

<pre><code>class MyZip extends java.util.zip.ZipOutputStream {

  synchronized public void write(byte[] b, int off, int len) throws IOException {
    super.write( b, off, len);
  }

}
</code></pre>

<p>Alternatively, you can use already existing solution <a href=""https://truezip.dev.java.net/javadoc-5/de/schlichtherle/util/zip/ZipOutputStream.html"" rel=""nofollow"">de.schlichtherle.util.zip.ZipOutputStream
</a></p>

<p><strong>Update</strong>: I assume one thread will open the stream and entry, then many will write, and then one thread will close it.</p>
"
"3910799","<p>Java tends to be ugly for this kind of stuff. Here is a (poorly written) example of that in Python</p>

<pre><code>from BeautifulSoup import BeautifulSoup
import urllib2, timeit

def parseIt():
    content = ''.join(urllib2.urlopen('http://news.google.com.ar/nwshp?hl=es&amp;tab=wn'))

    soup = BeautifulSoup(content)

    links = soup.findAll(""a"")
    for link in links:
        print link


if __name__ == '__main__':
    t = timeit.Timer(stmt=parseIt, setup='from BeautifulSoup import BeautifulSoup')
    print t.timeit(number=1)
</code></pre>

<p>Time to run for me is: <strong>0.78207570931</strong></p>
"
"1505328","<p>Enum class requires a parameterized type, E, which is the subclass of Enum.</p>

<p>The type info, E, is needed for methods like compareTo(E o), which requires type info during class declaration (e.g.  Comparable). </p>

<p>Java compiler automatically pass in type info when you create enum class, so you don't see it when you declare </p>

<pre><code>enum MyType {...}
</code></pre>

<p>There are things that I don't like how generic is used.  For example, why do we need to verbosely pass the class type to the interface when the interface only requires the class info?  we can't have a default, or compiler is not smart enough nowadays?</p>

<p>e.g. </p>

<pre><code>class String implements Comparable&lt;String&gt;
</code></pre>
"
"1505376","<p>This class is not an enumerator type. It is just a complex generic regular class. It is hard to tell (without see the whole code) why it is design like this. But I'll guess it may have anything to do with the concept of self type when you want to have a method returning the current type always.</p>

<pre><code>
public abstract class Enum&lt;E extends Enum&lt;E&gt;&gt; {
    E getMe() { return (E)this; }
}
public class E1 extends Enum&lt;E1&gt; {
    void doE2_only() {}
    void doE2() {
        // This line is to prove that Javac will see this.getMe() as a function of E1
        this.getMe().doE2_only();
    }
}
public class E2 extends Enum&lt;E2&gt; {
    void doE2_only() {}
    void doE2() {
        // This line is to prove that Javac will see this.getMe() as a function of E2
        this.getMe().doE2_only();
    }
}
</code></pre>

<p>Which again, has nothing to do with enumerator types.</p>

<p>Just a thougth;</p>
"
"1505386","<p>All the enum you create in your code will be created by a final class extending the Enum class.</p>

<pre><code>public enum MyEnum { XYZ }
</code></pre>

<p>will become</p>

<pre><code>public final class MyEnum extends Enum&lt;MyEnum&gt;
</code></pre>

<p>Or something like that (not sure if XYZ become an instance or a class extending it - also I think it is not <em>really</em> final, but rather the compiler will not let you extend an enum) ... Anyway, as such Enum is not really useful, because you cannot (should not) really ""do"" anything with it yourself. </p>

<p>It is still indirectly useful to read its javadoc/code to better understand what you can(not) do with you enum.</p>
"
"1505515","<p>if you are sure you want to paint in the threads, you can use :</p>

<pre><code>update(getGraphics());
</code></pre>

<p>instead of repaint.
this is generally considered bad practice, as you normally paint stuff in the AWT thread.</p>
"
"3995650","<pre><code>static boolean isNegative(double v) {
  return new Double(v).toString().startsWith(""-"");
}
</code></pre>
"
"2968670","<p>Have you tried increasing the initial heap size, as well as setting the maximum heap size?</p>

<pre><code>java -Xms&lt;initial heap size&gt; -Xmx&lt;maximum heap size&gt;
</code></pre>

<p>e.g.</p>

<pre><code>java -Xms256M -Xmx512M
</code></pre>

<p>The defaults are pretty conservative, and small so you definitely want to try and play around with your heap size settings.</p>
"
"4003125","<ol>
<li>Change the type of ""<code>cus</code>"" to ""<code>Customers [] cus</code>""
<ul>
<li><code>Customers [] cus = ...</code></li>
</ul></li>
<li>Add a String parameter type to the Customers constructor</li>
<li>Access item 0 (zero), not 1 (one) - First item in Java arrays is index 0.</li>
<li>Change the ""equals"" method parameter type to ""Object"" not String</li>
<li>Add the ""hashCode"" method - hashCode should be overridden any time you overide equals (see ""Effective Java"", Item 9</li>
<li>The equals method should have the following attributes (see ""Effective Java"", Item 8)
<ul>
<li>o1.equals(null) == false</li>
<li>reflexive (x.equals(x)==true)</li>
<li>symmetric; x.equals(y) can return true only if y.equals(x)</li>
<li>Transitive; if o1.equals(o2) and o2.equals(o3), then o1.equals(o3)</li>
<li>Consistent; o1.equals(o2) must always return same result (assuming neither object is changed)</li>
</ul></li>
</ol>

<p>""Effective Java"" is a great book, well worth reading!</p>
"
"1543100","<p>your problem is that you are having in code something like this:</p>

<pre><code>       new Thread(){
          public void run(){
             //something
          }
       }.start();
</code></pre>

<p>which in turn creates each time new class definition file in Tomcat's cache - and that eats space, so you have PermGenSpace exception... </p>

<p>rewrite some of your critical classes not to create custom classes 'on the fly', make separate inner classes and things will change... </p>

<pre><code>      class MyJobDoer extends Thread{
          public void run(){
             //something
          }
       }

      MyJobDoer mjd=new MyJobDoer();
      mjd.start();
</code></pre>
"
"4027219","<p>i'm pretty sure u did something like -- </p>

   <pre><code>
   if(title ==""Mr.""){ blah.. }

   do this instead ..

   if(title.equals(""Mr.""){blah..}
    </code></pre>
"
"4027263","<p>Create a set of the words that you care about (capitalize them), and then see if the title falls into the set:</p>

<pre><code>Set allowedTitles = new HashSet();
allowedTitles.add(""MR"");
allowedTitles.add(""MRS"");
allowedTitles.add(""MS"");
allowedTitles.add(""MISS"");
if (! allowedTitles.contains(textBoxTitle.getText().trim().toUpperCase()) {
   //print exception
}
else { title = textBoxTitle.getText().trim());
</code></pre>
"
"1563025","<p>If I'm reading this right...</p>

<pre><code>public class Frexp {
  public static void main (String[] args)
  {
    double param, result;
    int n;

    param = 8.0;
    n = Math.getExponent(param);
    //result = ??

    System.out.printf (""%f * 2^%d = %f\n"", result, n, param);
  }
}
</code></pre>

<p>Unfortunately, there doesn't appear to be a built-in method to get the mantissa without converting it to a BigDecimal first (or just doing the division: <code>result = param / Math.pow(2,n)</code>.</p>

<p>Strangely enough, <code>scalb</code> does the exact opposite: take a mantissa and exponent and generate a new float from it.</p>
"
"1581171","<p>create a static block</p>

<pre><code>static 
{

 // Do some static work 

}
</code></pre>
"
"4100516","<p>You are never saving a reference to this Map:</p>

<pre><code>list.add(new HashMap());
</code></pre>
"
"1644894","<pre><code>if(word.compareTo(""d"") == 0)
   System.out.println(""Goodbye!"");
</code></pre>

<p>or</p>

<pre><code>if(word.equals(""d""))
  System.out.println(""Goodbye!"");
</code></pre>

<p>That's assuming of course that word is a String and not a char.</p>
"
"3051319","<p>Are both outputs correct for both programs?  Yes.</p>

<p>The answer is the output is undefined.  The particular (correct) output you get each time could depend on just about anything, including minor variations in the compiled bytecode.  (It might be worth checking this with <code>javap -c</code>, just to be sure the difference in code is a possible cause.)</p>

<p>In general if you have two threads doing things in parallel, you can't be sure of the ordering of their combined output unless you synchronise them somehow.</p>
"
"4148995","<p>You need to concatenate the string!!!!
So do as follows: </p>

<pre><code>sql = ""INSERT INTO Identities""
              + "" VALUES""
              + ""('John', 'Smith', '38 Turpington Lane', 'Farnborough', 'Hampshire', 'HA6 7AF', '1990-03-01',""+ PKmod+"", ""+PKexpo+"")"";
</code></pre>
"
"4149011","<pre><code>System.out.println(""Executing...."");
stmt = conn.createStatement();
String sql;
sql = ""INSERT INTO Identities""
    + "" VALUES""
    + ""('John', 'Smith', '38 Turpington Lane', 'Farnborough', 'Hampshire', 'HA6 7AF', '1990-03-01', ""
    + PKmod 
    + "", ""
    + PKexpo
    + "")"";
stmt.executeUpdate(sql);
</code></pre>
"
"3093763","<p>Your solution seems correct. I usually see/use Object's instances as locks (instead of Strings), like:</p>

<pre><code>public class Utils {

    private static final Object[] lock = new Object[] { new Object(), new Object() };

    public static void doSomething() {
        synchronized(lock[0]) {
            // doSomething code
        }
    }
    ...
}
</code></pre>

<p>The problem you're trying to solve is related to <a href=""http://java.sun.com/j2se/1.4.2/docs/api/java/lang/ThreadLocal.html"" rel=""nofollow"">ThreadLocal</a> class use cases.</p>
"
"4169616","<p>My idea is to define a <code>CharConsumer</code> that defines what it means to consume a bunch of characters. Then I wrote a method that takes an arbitrary <code>Reader</code> and reads it until the end. If you want another terminating condition, replace the <code>while (true)</code> with it.</p>

<p>If you need the input to the <code>consume</code> method to be buffered, be sure that you create exactly one <code>BufferedReader</code> and don't use the other reader anymore after that. Otherwise some characters may get lost while reading.</p>

<pre><code>package so4168937;

import java.io.EOFException;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;

public class Main {

  // unused, since the question was initially unclear
  public static void consumeFourInARow(Reader rd, CharConsumer consumer) throws IOException {
    char[] chars = new char[4];
    while (true) {
      for (int i = 0; i &lt; chars.length; i++) {
        int c = rd.read();
        if (c == -1) {
          if (i == 0)
            return;
          throw new EOFException(""Incomplete read after "" + i + "" characters."");
        }
        chars[i] = (char) c;
      }
      consumer.consume(chars);
    }
  }

  public static void consume(Reader rd, CharConsumer consumer) throws IOException {
    char[] chars = new char[4];
    int c;

    for (int i = 0; i &lt; chars.length; i++) {
      if ((c = rd.read()) == -1) {
        return;
      }
      chars[i] = (char) c;
    }
    consumer.consume(chars);

    while ((c = rd.read()) != -1) {
      System.arraycopy(chars, 1, chars, 0, chars.length - 1);
      chars[chars.length - 1] = (char) c;
      consumer.consume(chars);
    }
  }

  interface CharConsumer {
    void consume(char[] chars);
  }

  public static void main(String[] args) throws IOException {
    final StringBuilder sb = new StringBuilder();
    consume(new StringReader(""hi my name is joe...""), new CharConsumer() {
      @Override
      public void consume(char[] chars) {
        sb.append('&lt;');
        sb.append(chars);
        sb.append('&gt;');
      }
    });
    System.out.println(sb.toString());
  }

}
</code></pre>

<p><strong>Update [2010-11-15]:</strong> Replaced the old code with code that implements a simple cyclic buffer, which is apparently what was wanted in the original question.</p>
"
"4174625","<p>The char[] doesn't equals to a String. Try to create a String out of it:</p>

<pre><code>new String(password).equals(""test"")
</code></pre>
"
"3133800","<p>Try:</p>

<pre><code>boolean isDouble;
try
{
   Double.parseDouble(""1.2"");
   isDouble = true;
}catch(Exception e){
   isDouble = false;
}
</code></pre>

<p>Although it is not generally advisable to use exceptions like conditionals.</p>
"
"3133803","<pre><code>    public boolean isDouble( String input )  
    {  
       try  
       {  
          Double.parseDouble( input );  
          return true;  
       }  
       catch( Exception e)  
       {  
         return false;  
      }  
  }  
</code></pre>
"
"3139359","<p>Try this, it works to me, but I hadn't so many documents...  </p>

<pre><code>File dir = new File(""directory"");
String[] children = dir.list();
if (children == null) {
   //Either dir does not exist or is not a  directory
  System.out.print(""Directory doesn't  exist\n"");
}
else {
  for (int i=0; i&lt;children.length; i++) {   
    // Get filename of file or directory   
    String filename = children[i];  
}
</code></pre>
"
"4225827","<p>If you want to access an application on the same server instance, just omit the server part of the URL. Some examples what you can achieve. The current document is at <code>http://example.com:8080/app2/doc.html</code></p>

<ul>
<li><code>xxx.html</code> becomes <code>http://example.com:8080/app2/xxx.html</code></li>
<li><code>../xxx.html</code> becomes <code>http://example.com:8080/xxx.html</code></li>
<li><code>../xxx.html</code> becomes <code>http://example.com:8080/xxx.html</code></li>
<li><code>../foo/xxx.html</code> becomes <code>http://example.com:8080/foo/xxx.html</code></li>
<li><code>../../xxx.html</code> becomes <code>http://example.com:8080/xxx.html</code> (there is no way to go beyond the root)</li>
<li><code>/xxx.html</code> becomes <code>http://example.com:8080/xxx.html</code> <strong>This is probably what you look for.</strong></li>
<li><code>//other.com/xxx.html</code> becomes <code>http://example.com:8080/xxx.html</code> Useful if you want to keep ""https:""</li>
</ul>
"
"1766497","<pre><code>public static &lt;T&gt; void apply(final List&lt;T&gt; list, final Function&lt;T&gt; func)
{
    for(final T val : list)
    {
        func.perform(val);
    }
}

interface Function&lt;T&gt;
{
    void apply(T value);
}

class DisplayFunction&lt;T&gt;
    implements Function&lt;T&gt;
{
    public void perform(T value)
    {
        System.out.println(value);
    }
}
</code></pre>

<p>the call apply(list, new DisplayFunction());</p>
"
"4295060","<p>If you look at the javadoc for the <code>String.valueOf()</code> methods you will see that it actually states  the if you pass a null value into the method it will through a <code>NullPointerException</code>. Also, if your IDE will do this, you can look at the source code for those methods and you will see that there is acually code that specificyly targets the possibly that the input is null and throws a <code>NullPointerException</code>.</p>
"
"4295230","<p>This will get the current date and time.</p>

<pre><code>import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

private String getDateTime() {
    DateFormat dateFormat = new SimpleDateFormat(""yyyy/MM/dd HH:mm:ss"");
    Date date = new Date();
    return dateFormat.format(date);
}
</code></pre>

<p>Then make a loop that checks the function every second and use an if statement to execute the code you want if the time is the time you want.</p>
"
"4315696","<p>I configured the maven release plug-in with releaseProfile=false and dont execute the source artifacts profile. Which did the trick. </p>

<pre><code>&lt;build&gt;
            &lt;plugins&gt;
                &lt;plugin&gt;
                    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
                    &lt;artifactId&gt;maven-release-plugin&lt;/artifactId&gt;
                    &lt;version&gt;2.1&lt;/version&gt;
                    &lt;configuration&gt;
                            &lt;arguments&gt;-P!source-artifacts&lt;/arguments&gt;
                            &lt;useReleaseProfile&gt;false&lt;/useReleaseProfile&gt;
                            &lt;goals&gt;-Dmaven.test.skip=true deploy&lt;/goals&gt;
                    &lt;/configuration&gt;    
                &lt;/plugin&gt;
            &lt;/plugins&gt;
        &lt;/build&gt;
</code></pre>
"
"1796306","<p>The answer (as usual) is that it depends.</p>

<p>In your particular case, I guess the alternative would be to do the regex ""this|that"" and then do a find.  This particular construct really pokes at regex's weaknesses.  The ""OR"" in this case doesn't really know what the sub-patterns are trying to do and so can't easily optimize.  It ends up doing the equivalent of (in pseudo code):</p>

<pre><code>for( i = 0; i &lt; stringLength; i++ ) {
    if( stringAt pos i starts with ""this"" )
       found!
    if( stringAt pos i starts with ""that"" )
       found!
}
</code></pre>

<p>There almost isn't a slower way to do it.  In this case, two contains() calls will be much faster.</p>

<p>On the other hand, a full match on: <code>"".*this.*|.*that.*""</code> may optimize better.</p>

<p>To me, regex should be used when the code to do otherwise is complicated or unwieldy.  So if you want to find one of two or three strings in a target string then just use contains.  But if you wanted to find words starting with 'A' or 'B' and ending in 'g'-'m'... then use regex.</p>

<p>And then you won't be so worried about a few cycles here and there.</p>
"
"3251989","<p><a href=""http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/lang/Class.html#forName%28java.lang.String%29"" rel=""nofollow"">Class.forName(String name)</a></p>

<blockquote>
  <p><em>Returns the Class object associated with the class [...] the given string name</em></p>
</blockquote>

<p>That means, that, it would return ( or attempt ) to return the class <code>com.mysql.jdbc.Driver</code> </p>

<p>Later <a href=""http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/lang/Class.html#newInstance%28%29"" rel=""nofollow"">Class.newInstace()</a></p>

<blockquote>
  <p><em>Creates a new instance of the class represented by this [...] object</em></p>
</blockquote>

<p>So, what that line does, is to create dynamically a  mysql Driver instance.</p>

<p>This:</p>

<pre><code>Class.forName (""com.mysql.jdbc.Driver"").newInstance ();
</code></pre>

<p>Would be equivalent to: </p>

<pre><code>import java.sql.Driver;
.... 
Driver driver = new com.mysql.jdbc.Driver()
</code></pre>

<p>By the way according to <a href=""http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/sql/DriverManager.html"" rel=""nofollow"">DriverManager</a>  doc, you don't have to use it anymore:</p>

<blockquote>
  <p><em>Applications no longer need to explictly load JDBC drivers using Class.forName()</em></p>
</blockquote>

<p>It use to be needed to load the driver, but now the DriverManager uses other strategy. </p>

<p>Finally, read the:</p>

<blockquote>
  <p><em><strong>NOTE:</strong> The DataSource interface, new in the JDBC 2.0 API, provides another way to connect to a data source. The use of a DataSource object is the preferred means of connecting to a data source.</em> </p>
</blockquote>
"
"4334657","<p>// First Check That PKmod &amp; PKexpo values are not Zero Or Null.</p>

<p>System.out.println(""Executing...."");</p>

<pre><code>      String sql = ""INSERT INTO Identities""
          + "" VALUES""
          + ""('John', 'Smith', '38 Turpington Lane', 'Farnborough', 'Hampshire', 'HA6 7AF', '1990-03-01',"" + PKmod + "","" + PKexpo +"")"";

    PreparedStatement pStmt = null;
    pStmt = con.prepareStatement(sql);

    pStmt.executeUpdate();
    closePreparedStatement(pStmt);
</code></pre>
"
"1815667","<p>Wrap the map in a <code>Collections.synchronizedMap()</code>. If you need to call additional methods, then <code>synchronize</code> on the map that you got back from this call, and invoke the original method on the original map (<a href=""http://java.sun.com/j2se/1.5.0/docs/api/java/util/Collections.html#synchronizedMap%28java.util.Map%29"" rel=""nofollow"">see the javadocs for an example</a>). The same applies when you iterate over the keys, etc.</p>
"
"4373311","<p><strong>Note</strong> that some people think singletons are anti-patterns - this vastly depends on what you want to do, but will work for your simple case. You should read a bit more about this before you blindly use it.</p>

<p>You can use singleton pattern for this:</p>

<pre><code>public class Singleton {

    private static final Singleton INSTANCE = new Singleton();

    // Private constructor prevents instantiation from other classes
    private Singleton() {
    }

    public static Singleton getInstance() {
        return INSTANCE;
    }

    public void doSomeStuff() {
        // Put your code here
    }

}
</code></pre>

<p>Then you can call it like this:</p>

<pre><code>Singleton.getInstance().doSomeStuff()
</code></pre>

<p>Rename your class to something else that has some meaningful name.</p>

<p>Take a look here for an explanation:</p>

<ul>
<li><a href=""http://en.wikipedia.org/wiki/Singleton_pattern#Java"" rel=""nofollow"">http://en.wikipedia.org/wiki/Singleton_pattern#Java</a></li>
</ul>
"
"4373347","<p>You may think about subclassing Robot.<br></p>

<p><code>public class ExtendedRobot extends Robot{<br>
   public doStuff(){<br>
      // paste code here<br>
   }<br>
}</code></p>

<p>To make your stuff happen, you'd make a robot.<br>
<code>Robot robot = new Robot();<br>
robot.doStuff();
</code></p>
"
"1856579","<p>You can use the os.arch property in system properties to find out.</p>

<pre><code>Properties pr = System.getProperties();
System.out.println(pr.getProperty(""os.arch""));
</code></pre>

<p>If you are on 32 bit, it should show i386 or something</p>
"
"1856581","<p>You might find that it is as simple as changing the Comparator field to a static rather than an instance member:</p>

<pre><code>public final static Comparator&lt;String&gt; ID_IGN_CASE_COMP
</code></pre>

<p>You will need to make sure that all the other fields are Serializable but this should be a start.</p>
"
"1863239","<p>I found in jobss an serialized input stream:</p>

<pre><code>   org.jboss.resource.adapter.jdbc.remote.SerializableInputStream (inputStream) extends java.io.inputStream
</code></pre>

<p>I used it.</p>

<p>I know this may not be the best soultion ... but in my case; I want to test my bean that take an inputStream which is the interface that was contracted about it.</p>
"
"4390605","<p>If this is not a performance issue for you, you can write</p>

<pre><code>public String getFirstName(Person person) {
  try {
     return person.getName().getGivenName();
  } catch (NullPointerException ignored) {
     return null;
  }
} 
</code></pre>
"
"1901833","<p>If your ExecutorService is single threaded then there is no shared state, so I don't see how there could be any issues around that.</p>

<p>However wouldn't it make more sense to pass a new instance of your <code>Test</code> class to each call to <code>execute()</code>? i.e.</p>

<pre><code>for (int i=0; i&lt;10; ++i)
    ex.execute(new Test());
</code></pre>

<p>This way there will not be any shared state.</p>
"
"4448396","<pre><code>s1.contains(s2) returns true;
s1.indexOf(s2) returns 0. 
s1.indexOf(""foo"") returns -1
</code></pre>

<p>For more sophisticated cases use class Pattern. </p>
"
"1908077","<p>Why not make one .java file like this:</p>

<p>Empty.java</p>

<pre><code>class Empty{
}
</code></pre>

<p>and one class like this:</p>

<p>NotEmpty.java</p>

<pre><code>class NotEmpty{
   boolean b;
}
</code></pre>

<p>Compile them both and compare the .class files with a hex editor.</p>
"
"4456856","<p>UPDATED:</p>

<p>I have modified it to work with multiple ocurrences of \n. Note that this may not be very efficient.</p>

<pre><code>public static String replaceBob(String str,int index){
    char arr[] = str.toCharArray();
    for(int i=index; i&lt;arr.length; i++){
        if( arr[i]=='\\' &amp;&amp; i&lt;arr.length &amp;&amp; arr[i+1]=='n' ){
            String temp = str.substring(0, i)+""bob"";
            String temp2 = str.substring(i+2,str.length());
            str = temp + temp2;
            str = replaceBob(str,i+2);
            break;
        }
    }
    return str;
}
</code></pre>

<p>I tried with this and it worked</p>

<pre><code>String x = ""Bob was a bob \\n 123 \\n aaa \\n"";
System.out.println(""result:""+replaceBob(x, 0));
</code></pre>

<p>The first time you call the function use an index of 0.</p>
"
"4456937","<p>Look around in the reference for the <code>Method</code> class, what you want should be easy to find.</p>
"
"4462638","<p>This is probably a sign that a bit of refactoring would be advised. </p>

<p>Specifically stop outputting html via jstl tags and instead use <code>if</code> or <code>when</code>; or do a bigger refactoring.</p>

<p>I would probably use jQuery and assign click functions based on class (which could be taken from server side paramters)</p>
"
"1919618","<p>As an aside, consider using <a href=""http://www.j2ee.me/javase/6/docs/api/java/lang/Integer.html#valueOf%28int&#41;"" rel=""nofollow""><code>Integer.valueOf(5)</code></a> in place of <code>new Integer(5)</code>; the former is generally more <a href=""http://findbugs.sourceforge.net/bugDescriptions.html#DM%5FNUMBER%5FCTOR"" rel=""nofollow"">efficient</a>.</p>
"
"4485896","<p>In java, Not everything is an object.</p>

<p>You can have</p>

<pre><code>A a = new A()
Class cls = a.getClass()
</code></pre>

<p>or directly from the class</p>

<pre><code>A.class
</code></pre>

<p>With this you get the object for the class.</p>

<p>With reflection you can get methods and fields but this gets complicated. Since not everything is an object. This is not a language like Scala or Ruby where everything is an object. 
Reflection tutorial : <a href=""http://download.oracle.com/javase/tutorial/reflect/index.html"" rel=""nofollow"">http://download.oracle.com/javase/tutorial/reflect/index.html</a></p>

<p>BTW: You did not specify the public/private/protected , so by default your things are declared package private. This is package level protected access <a href=""http://download.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html"" rel=""nofollow"">http://download.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html</a></p>
"
"4485930","<p>I'm not sure if I fully understand your question. You are being unclear in what you mean by <code>A.class</code> syntax. You can use the reflections API to get the class from a given object by:</p>

<pre><code>A a = new A()
Class c = a.getClass()
</code></pre>

<p>or</p>

<pre><code>Class c = A.class;
</code></pre>

<p>Then do some things using <code>c</code>.</p>

<p>The reflections API is mostly used for debugging tools, since Java has support for polymorphism, you can always know the actual Class of an object at runtime, so the reflections API was developed to help debug problems (sub-class given, when super-class behavior is expected, etc.). </p>

<p>The reason there is no b.field or c.method, is because they have no meaning and no functional purpose in Java. You cannot create a reference to a method, and a field cannot change its type at runtime, these things are set at compile-time. Java is a very rigid language, without much in the way of runtime-flexibility (unless you use dynamic class loading, but even then you need some information on the loaded objects). If you have come from a flexible language like Ruby or Javascript, then you might find Java a little controlling for your tastes. </p>

<p>However, having the compiler help you figure our potential problems in your code is very helpful.</p>
"
"3441638","<p>The easy way to do this is to have the folder your image is in parallel to the jar file.  Example:</p>

<p>Say in the code you call the image like this:</p>

<pre><code>pic = new ImageIcon(""Pics/buttonpic.jpg"");
</code></pre>

<p>This means your picture would be called buttonpic and is located in a folder called Pics in your project directory.  Now after you make your jar file, copy that Pics folder into the same folder your jar file is located. </p>

<p>Example: if your jar file is located on your desktop, then put the Pics folder on the desktop. Now when you run the jar file, your pictures will work correctly. Now to cover up the fact that you need to have your Pics folder next to your jar file, you can create a new folder and place in that folder your jar and the Pics folder.  Then right click the jar and create a shortcut, then place that shortcut on the desktop or where you wanted to have just the jar file, and place the new folder you created wherever you want to hide it at.</p>
"
"1976825","<p>created a method to do it.</p>

<pre><code>public double roundDouble(double d, int places) {
    return Math.round(d * Math.pow(10, (double) places)) / Math.pow(10, (double)places);
}
</code></pre>
"
"4555733","<p>Here's how:</p>

<pre><code>import java.io.BufferedReader;
import java.io.FileReader;
import java.io.File;
import java.io.FileWriter;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;

public class FileUtil {


  public void removeLineFromFile(String file, String lineToRemove) {

    try {

      File inFile = new File(file);

      if (!inFile.isFile()) {
        System.out.println(""Parameter is not an existing file"");
        return;
      }

      // Construct the new file that will later be renamed
      // to the original filename. 
      File tempFile = new File(inFile.getAbsolutePath() + "".tmp"");

      BufferedReader br = new BufferedReader(new FileReader(file));
      PrintWriter pw = new PrintWriter(new FileWriter(tempFile));

      String line = null;

      //Read from the original file and write to the new 
      //unless content matches data to be removed.
      while ((line = br.readLine()) != null) {

        if (!line.trim().equals(lineToRemove)) {

          pw.println(line);
          pw.flush();
        }
      }
      pw.close();
      br.close();

      //Delete the original file
      if (!inFile.delete()) {
        System.out.println(""Could not delete file"");
        return;
      } 

      //Rename the new file to the filename the original file had.
      if (!tempFile.renameTo(inFile))
        System.out.println(""Could not rename file"");

    }
    catch (FileNotFoundException ex) {
      ex.printStackTrace();
    }
    catch (IOException ex) {
      ex.printStackTrace();
    }
  }

  public static void main(String[] args) {
    FileUtil util = new FileUtil();
    util.removeLineFromFile(""test.txt"", ""bbbbb"");
  }
}
</code></pre>
"
"2011719","<p><strong>There is no exe for Java and It doesn't make sense to create one.</strong></p>

<p>Your installation program should provide <strong>a shortcut</strong> to start the program.
The shortcut can have the command line.</p>

<pre><code>java -classpath myprogram.jar de.vogella.eclipse.ide.first.MyFirstClass
</code></pre>

<p>For you, you can also create a batch file but there will be a CLI windows.</p>

<pre><code>@echo off
set d=%~dp0
java -classpath myprogram.jar de.vogella.eclipse.ide.first.MyFirstClass
</code></pre>

<p>As you can see, Windows has some lack of coherence but you still can install another Operating System instead.</p>
"
"3521482","<p>You could check whether it implements the <code>Cloneable</code> interface and if it does then use the clone method.</p>

<p>And <a href=""http://www.idevelopment.info/data/Programming/java/object_oriented_techniques/CloningExample.java"" rel=""nofollow"">here</a> is and example on how to implement it yourself.</p>
"
"3521498","<p>As others have said: Clonable is broken and you should consider other options such as copy constructors. Having said that, here is a solution that should work if you really must use clone():</p>

<pre><code>Object clone = null;
if(anObj instanceof Clonable) {
    Method cloneMethod = anObj.getClass().getMethod(""clone"");
    /*
     * TODO: Handle the case where an object is cloneable but 
     * does not have a public clone() method.
     */
    clone = cloneMethod.invoke(anObj);
} else {
    throw new RuntimeException(""can't clone object"");
}
</code></pre>

<p>Or you could use reflection to clone the object field by field, if it does not implement clone()... Get all fields, copy the values to the new object. But this is tricky, if the object has no no-arg constructor.</p>
"
"3521751","<pre><code>interface PublicCloneable extends Cloneable{
    public Object clone();
}

class MyObject implements PublicCloneable {
    public Object clone() {
        return super.clone();
    }
}

class MainObject {
    public static void main(String[] params) {
        Object m = new MyObject();

        if (m instanceof PublicCloneable) {
            Object c = m.clone();
        }
    }
}
</code></pre>
"
"5223721","<p>try this code :</p>

<pre><code>         JSch jsch=new JSch();

         System.out.println(""Getting session"");
         Session session=jsch.getSession(""root"",""10.0.0.0"",22);

          System.out.println(""session is ::::""+session.getHost());
          // username and password will be given via UserInfo interface.
          UserInfo ui = new MyUserInfo(""Lab@123"", null);
          //UserInfo ui = new MyUserInfo(password, null);
          session.setUserInfo(ui);
          session.setPassword(""Lab@123"");
          Properties config = new java.util.Properties();
          config.put(""StrictHostKeyChecking"", ""no"");
          session.setConfig(config);
          session.connect(40000);


              Channel channel=session.openChannel(""exec""); 
              ((ChannelExec)channel).setCommand(""ls"");

              channel.connect();
              channel.run();

              // get I/O streams for remote scp
              OutputStream out=channel.getOutputStream();
              InputStream in=channel.getInputStream(); 


          String output="""";
          while (channel.isClosed()!=true) {

              try {
                output+=streamToString(in);

            } catch (Exception e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }

        }

            System.out.println(""Output is :::""+output);
            channel.disconnect();
            session.disconnect();
    }

    public static String streamToString(InputStream input)throws Exception 
    { String output = """"; while(input.available()&gt;0) { output += ((char)(input.read())); } return output; }



    public static OutputStream stringToStream(String charset) throws IOException{

        byte[] bytes = charset.getBytes();
        /*ByteArrayInputStream bais = new ByteArrayInputStream(bytes);
        InputStreamReader isr = new InputStreamReader(bais);*/
        InputStream is = null;
        OutputStream os = null;
        try {
            is = new ByteArrayInputStream(charset.getBytes(""UTF-8""));
        } catch (UnsupportedEncodingException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        //byte[] buf = new byte[1024];
        int numRead;

          while ( (numRead = is.read(bytes) ) &gt;= 0) {
              os.write(bytes, 0, numRead);
          }        
        return os;      
</code></pre>
"
"3536646","<p><code>Thread.sleep(long)</code> is implemented natively in the <code>java.lang.Thread</code> class. Here's a part of its API doc:</p>

<pre><code> Causes the currently executing thread to sleep (temporarily cease 
 execution) for the specified number of milliseconds, subject to 
 the precision and accuracy of system timers and schedulers. The thread 
 does not lose ownership of any monitors.
</code></pre>

<p>The sleep method sleeps the thread that called it.(Based on EJP's comments) <strike>determines the currently executing thread (which called it and cause it to sleep).</strike> Java methods can determine which thread is executing it by calling <code>Thread.currentThread()</code></p>

<p>Methods (static or non static) can be called from any number of threads simultaneously. Threre will not be any concurrency problems as long as your methods are <a href=""http://searchcio-midmarket.techtarget.com/sDefinition/0,,sid183_gci331590,00.html"" rel=""nofollow"">thread safe</a>.
You will have problems only when multiple Threads are modifying internal state of class or instance without proper synchronization.</p>
"
"3537316","<p>When the virtual machine encounters a <code>sleep(long)</code>-statement, it will interrupt the Thread currently running. ""The current Thread"" on that moment is always the thread that called <code>Thread.sleep()</code>. Then it says:</p>

<blockquote>
  <p>Hey! Nothing to do in this thread (Because I have to wait). I'm going to continue an other Thread.</p>
</blockquote>

<p>Changing thread is called ""to yield"". (Note: you can yield by yourself by calling <code>Thread.yield();</code>)</p>

<p>So, it doesn't have to figure out what the current Thread is. It is always the Thread that called sleep(). 
Note: You can get the current thread by calling <code>Thread.currentThread();</code></p>

<p>A short example:</p>

<pre><code>// here it is 0 millis
blahblah(); // do some stuff
// here it is 2 millis
new Thread(new MyRunnable()).start(); // We start an other thread
// here it is 2 millis
Thread.sleep(1000);
// here it is 1002 millis
</code></pre>

<p><code>MyRunnable</code> its <code>run()</code> method:</p>

<pre><code>// here it is 2 millis; because we got started at 2 millis
blahblah2(); // Do some other stuff
// here it is 25 millis;
Thread.sleep(300); // after calling this line the two threads are sleeping...
// here it is 325 millis;
... // some stuff
// here it is 328 millis;
return; // we are done;
</code></pre>
"
"5553079","<p>I experienced the same problem. According to <a href=""http://www.mail-archive.com/users@maven.apache.org/msg66836.html"" rel=""nofollow"">this link</a> it might help to change jvm implementation - this can be done by setting JAVA_HOME system variable.</p>

<p>Try for example in the link mentioned ibm jvm or oracle jrockit:</p>

<pre><code>SET JAVA_HOME=C:\bea10\jrockit160_22
mvn install
</code></pre>
"
"2033422","<p>Edit: This answer is completely off topic and was posted based on misinterpreting the question. </p>

<p>There are several things wrong with your DFS implementation. Yes, it visits all nodes in a depth-first manner and it does eventually manage to find a path between START and END, but it does not attempt to check for already visited nodes and keeps a stack for no real reason. The only reason you don't fall into infinite recursion on cycles is because you  limit the maximum path length, and you will still take a long time on graphs that have multiple distinct paths between all pairs of vertices. </p>

<p>The only thing you are using the stack for is to pass the node to be visited next to the dfs function. You can simply get rid of the stack and pass the node directly.</p>

<p>So, instead of </p>

<pre><code>private void depthFirst(WeightedDirectedGraph graph, Stack&lt;String&gt; visited) {
   ...
   visited.push(child);
   ...
   depthFirst(graph, visited);
</code></pre>

<p>You can simply write this as</p>

<pre><code>private void depthFirst(WeightedDirectedGraph graph, String node) {
   ...
   //visited.push(child); &lt;-- No longer needed
   ...
   depthFirst(graph, child);
</code></pre>

<p>You are using a data structure (stack) that you have named 'visited' and yet you do not use that to store/mark which nodes have been already visited to avoid revisiting.</p>

<p>You can modify your existing code to have a Set called visited (make it a global/class variable or pass it along recursive calls as you did with your stack) where you keep all nodes already visited and only call depthFirst() on those nodes that are not already in that Set.</p>

<p>That should make your code look something like this</p>

<pre><code>private void depthFirst(WeightedDirectedGraph graph, String node, Set&lt;String&gt; visited) {
   visited.add(node); // mark current node as visited
   ...
   //visited.push(child); &lt;-- No longer needed
   ...
   if (!visited.contains(child)){ // don't visit nodes we have worked on already
      depthFirst(graph, child);
   }
</code></pre>

<p>So far my answer has been to try to modify your code to make it work. But it appears to me that you need to get a better grasp of what a DFS actually is and how it really works. Reading up the relevant chapter on any good Algorithm/Graph Theory book would help you greatly. I would recommend CLRS (it has a very nice chapter on simple graph traversals), but any good book should do. A simple and correct recursive DFS can be implemented in a much simpler manner using arrays, without having to resort to stacks or sets.</p>

<p>Edit:
I did not mention how you could retrieve the path after replacing the stack. This can be easily done by using a Map that stores the parent of each node as it is explored. The path (if any is found) can be obtained using a recursive printPath(String node) function, that prints the node passed to it and calls itself again on its parent.  </p>
"
"5643353","<p>Come on guys.. its not that hard.   Im using string comparison.. but you can just compare the object type if you want.</p>

<pre><code>public static &lt;T extends Enum&lt;T&gt;&gt; Map&lt;T, String&gt;  Initialize_Map(Class&lt;T&gt; enumClass) {
  Map&lt;T, String&gt; map = new HashMap&lt;T, String&gt;();
  for (T val : enumClass.getEnumConstants()) {
    map.put(val, val.toString() + (val.toString().equals(""ENUM_ELMT"") ? "" (appended)"" : """"));
  }
  return map;       
}
</code></pre>
"
"5939083","<pre><code>#include &lt;stdio.h&gt;
#include &lt;limits.h&gt; /* For INT_MAX */

/* Function to print first smallest and second smallest elements */
void print2Smallest(int arr[], int arr_size)
{
  int i, first, second;

  /* There should be atleast two elements*/
  if(arr_size &lt; 2)
  {
    printf("" Invalid Input "");
    return;
  }            

  first = second = INT_MAX;
  for(i = 0; i &lt; arr_size ; i ++)
  {

    /*If current element is smaller than first then update both
      first and second */
    if(arr[i] &lt; first)
    {
      second = first;
      first = arr[i];
    }

    /* If arr[i] is in between first and second then update second  */
    else if (arr[i] &lt; second)
    {
      second = arr[i];
    }
  }
  printf(""The smallest element is %d and second Smallest element is %d"",
         first, second);
}

/* Driver program to test above function */
int main()
{
  int arr[] = {12, 13, 15, 10, 35, 1};
  print2Smallest(arr, 6);
  getchar();
  return 0;
}
</code></pre>
"
"2045651","<p>Why use regex? Since you always rely on some sort of format, you can also assume that the last brackets are the weight and location and that the weight and unit of measure is always formatted like that, e.g. with spaces.</p>

<pre><code>@Test
public void testParseWeight() throws Exception {
    String input = ""&lt;div&gt;&lt;b&gt;Item Weight  (0.51 lbs in Warehouse 3)&lt;/b&gt;&lt;/div&gt;"";
    int startPos = input.lastIndexOf('(');
    int space = input.indexOf(' ', startPos);
    String weight = input.substring(startPos + 1, space);
    String uom = input.substring(space + 1, input.indexOf(' ', space + 1));
    Number parse = NumberFormat.getNumberInstance(Locale.US).parse(weight);
    assertEquals(0.51d, parse.doubleValue(), 0.0d);
    assertEquals(""lbs"", uom);
}
</code></pre>
"
"6135002","<p>To further clear any confusion about the two approach i.e use of</p>

<ol>
<li><code>@PostConstruct</code> and</li>
<li><code>init-method=""init""</code></li>
</ol>

<p>From personal experience, I realized that using (1) only works in a servlet container, while (2) works in any environment, even in desktop applications. So, if you would be using Spring in a standalone application, you would have to use (2) to carry out that ""call this method after initialization.</p>
"
"2081068","<pre><code>1 + 1 == 2. 
</code></pre>

<p>Therefore: </p>

<pre><code>i + i == 2  
</code></pre>

<p>and </p>

<pre><code>i += i == 2
</code></pre>

<p>and then </p>

<pre><code>i += i++ == 2
</code></pre>

<p>Pretty straight forward.</p>
"
"7582062","<p>calculate the folder size in remote server just call 
the <code>ftpFolderSize(ftpFolderSize,client)</code> directory path, and
pass the object <code>FTPClient</code> as a parameter. It will return the 
size of folder.</p>

<p>Works only for FTP.</p>

<pre><code>import org.apache.commons.net.ftp.FTPClient;

import org.apache.commons.net.ftp.FTPFile;
import org.apache.commons.io.FileUtils;

long dirSize = 0L; //global variable

private long ftpFolderSize(String directoryPath,FTPClient client){

    try{
        client.changeWorkingDirectory(directoryPath); 
        FTPFile[] ftpFiles = client.listFiles();
        if(client.changeWorkingDirectory(directoryPath))
        {
            for (FTPFile ftpFile : ftpFiles) {
                if(ftpFile.isFile()){
                    dirSize = dirSize+ftpFile.getSize();// file size is calculated
                }
                else if(ftpFile.isDirectory())
                {
                    dirSize = dirSize + 4096;//folder minimum size is 4kb
                    ftpFolderSize(directoryPath+""/""+ftpFile.getName(),client);
                }

            }
        }
    }catch (Exception e) {
        e.printStackTrace();
    }
    return dirSize;
}
</code></pre>
"
"2110749","<p>You asked for drawbacks as well, here's one.</p>

<p>Generic programming in C++ can yield some pretty ""space-age"" code which can be very verbose and difficult to read &amp; comprehend by humans.  That is, humans other than the one who designed it.  As such, it can be challenging to maintain and to use.  Code that is difficult to maintain or use has a big strike against it.  One place where I have found this to be particularly true is in the use of <a href=""http://en.wikipedia.org/wiki/Policy-based_design"" rel=""nofollow"">policy classes</a>.</p>

<p>Here's an example.  Some time ago, I wrote a policy-based resource manager.  Kind of like a smart pointer, but generic enough to be used for any kind of resource, not just memory.  Things like mutexes, GDI (Windows) resources, etc.  The motivation behind writing this was two fold.  One, I just wanted to write it :) but two, I wanted to create a repository of code that could be generally useful to manage resources of all kinds.  In order for it to be generally useful, people would have to want to use it.</p>

<p>So let me ask you, would you want to use this?</p>

<pre><code>    /*** COPY POLICIES ***/
    class SimpleCopyPolicy
    {
    public:
        template&lt;class Resource&gt; Resource copy(const Resource&amp; rhs) const { Resource ret = rhs; return ret; }
    protected:
        ~SimpleCopyPolicy(){};
    };

    class DuplicateHandleCopyPolicy
    {
        public:
            HANDLE sourceProcess, targetProcess;
            DWORD access, options;
            BOOL inherit;

            DuplicateHandleCopyPolicy(HANDLE sourceProcess_=GetCurrentProcess(), HANDLE targetProcess_=GetCurrentProcess(), DWORD access_=0, BOOL inherit_=FALSE,DWORD options_=DUPLICATE_SAME_ACCESS)
            : sourceProcess(sourceProcess_), targetProcess(targetProcess_), access(access_), inherit(inherit_), options(options_) {}

            template&lt;class Resource&gt; Resource copy(const Resource &amp; rhs) const
            {
                Resource ret;
#               if defined(VERBOSE_STLEXT_DEBUG) &amp; defined(MHDAPI)
                if( !verify( DuplicateHandle(sourceProcess, rhs, targetProcess, &amp;ret, access, inherit, options) ))
                {
                    DWORD err = GetLastError();
                    mhd::WarningMessage(""DuplicateHandleCopyPolicy::copy()"", ""Error %d Copying Handle %X : '%s'"",
                    err, rhs, stdextras::strprintwinerr(err).c_str() );
                }
                else
                    mhd::OutputMessage(""Duplicated %X to %X"", rhs, ret);
#               else
                DuplicateHandle(sourceProcess, rhs, targetProcess, &amp;ret, access, inherit, options);
#               endif
                return ret;
            }

        protected:
            ~DuplicateHandleCopyPolicy(){};
    };

    /*** RELEASE POLICIES ***/
    class KernelReleasePolicy
    {
    public:
        template&lt;class Handle&gt; bool release(Handle&amp; h)
        {
#           if defined(VERBOSE_STLEXT_DEBUG) &amp; defined(MHDAPI)
            OutputMessage(""Closing %X"", h);
#           endif
            return 0 != CloseHandle(h);
        }
    };
    class CritsecReleasePolicy
    {
    public:
        template&lt;class Handle&gt; bool release(Handle&amp; h)
        {
            DeleteCriticalSection(&amp;h);
            return true;
        }
    protected:
        ~CritsecReleasePolicy() {};
    };
    class GDIReleasePolicy
    {
    public:
        template&lt;class Handle&gt; bool release(Handle h) { return 0 != DeleteObject(h); }
    protected:
        ~GDIReleasePolicy(){};
    };
    class LibraryReleasePolicy
    {
    public:
        template&lt;class Handle&gt; bool release(Handle h) { return 0 != FreeLibrary(h); }
    protected:
        ~LibraryReleasePolicy(){};
    };
#   ifdef WINSOCK_VERSION
    class SocketReleasePolicy
    {
    public:
        template&lt;class Handle&gt; bool release(Handle h) { return 0 != closesocket(h); }
    protected:
        ~SocketReleasePolicy(){};
    };
#   endif

    class DestroyWindowPolicy
    {
    public:
        template&lt;class Handle&gt; bool release(Handle h) { return 0 != DestroyWindow(h); }
    protected:
        ~DestroyWindowPolicy() {};
    };

    /*** LOCKING POLICIES ***/
    class WFSOPolicy    // Wait For Single Object
    {
    public:
        WFSOPolicy(DWORD timeout_=INFINITE) : timeout(timeout_) {};

        template&lt;class Handle&gt; bool wait(Handle&amp; h) const
        {
#           if defined(VERBOSE_STLEXT_DEBUG) &amp; defined(MHDAPI)
            DWORD ret = ::WaitForSingleObject(h,timeout);
            if( !verify( WAIT_OBJECT_0 == ret ))
            {
                DWORD err = GetLastError();
#               ifdef UNICODE
                mhd::WarningMessage(""WFSOPolicy"", ""Error %d Waiting for object %X [Timeout %s] : '%S'"",
                    err, h, INFINITE==timeout?""INFINITE"":std::formatstr(""%d ms"", timeout).c_str(),
                    stdextras::strprintwinerr(err).c_str() );
#               else
                mhd::WarningMessage(""WFSOPolicy"", ""Error %d Waiting for object %X [Timeout %s] : '%s'"",
                    err, h, INFINITE==timeout?""INFINITE"":std::formatstr(""%d ms"", timeout).c_str(),
                    stdextras::strprintwinerr(err).c_str() );
#               endif
                return false;
            }
            return true;
#           else
            return WAIT_OBJECT_0 == ::WaitForSingleObject(h,timeout);
#           endif
        }

        DWORD timeout;
    };


    /*** LOCK/UNLOCK POLICIES ***/
    class CritsecLockPolicy  // CRITICAL_SECTION lock/unlock policies
    {
    public:
        template&lt;class Handle&gt; bool lock(Handle&amp; h)
        {
            EnterCriticalSection(const_cast&lt;CRITICAL_SECTION*&gt;(&amp;h));
            return true;
        }
        template&lt;class Handle&gt; bool unlock(Handle&amp; h) 
        {
            LeaveCriticalSection(&amp;h);
            return true;
        }
    };

    template&lt;DWORD waitTimeout = INFINITE&gt;
    class MutexLockPolicy : public WFSOPolicy
    {
    public:
        MutexLockPolicy() : WFSOPolicy(waitTimeout) {};
        template&lt;class Handle&gt; bool lock(Handle&amp; h) const
        {
            return wait(h);
        }
        template&lt;class Handle&gt; bool unlock(Handle&amp; h) const 
        {
            return 0 != ReleaseMutex(h);
        }
    };

    class PlaceboLockPolicy // this lock policy doesnt actually do anything!  useful for debugging &amp; experimentation
    {
    public:
        PlaceboLockPolicy() {};
        template&lt;class Handle&gt; bool lock(Handle&amp;) const
        {
            return true;
        }
        template&lt;class Handle&gt; bool unlock(Handle&amp;) const
        {
            return true;
        }
    };


    template&lt;class Resource, typename ReleasePolicy, typename CopyPolicy = SimpleCopyPolicy&gt;
    class simple_auto_resource : public ReleasePolicy, public CopyPolicy
    {
    public:
        typedef simple_auto_resource&lt;Resource,ReleasePolicy,CopyPolicy&gt; base_type;

        simple_auto_resource() : res(0) {}
        simple_auto_resource(const Resource &amp; r) : res(copy(r)) {}
        ~simple_auto_resource() { if(res) release(res); }

        void clear() { if(res) release(res); res = 0; }

        Resource&amp; get() { return res; }
        const Resource&amp; get() const { return res; }

        Resource detach() { Resource ret = res; res = 0; return ret; }

        operator const Resource&amp;() const { return get(); }
        operator Resource&amp;() { return get(); }

        base_type&amp; operator=(const Resource&amp; rhs) { clear(); res = copy(rhs); return * this; }

        template&lt;class Comp&gt; bool operator==(const Comp&amp; rhs) const { return res == (Resource)rhs; }
        template&lt;class Comp&gt; bool operator!=(const Comp&amp; rhs) const { return res != (Resource)rhs; }
        template&lt;class Comp&gt; bool operator&lt;(const Comp&amp; rhs) const { return res &lt; (Resource)rhs; }
    private:
        Resource res;
    };

    typedef simple_auto_resource&lt;HBRUSH,GDIReleasePolicy&gt; auto_brush;
    typedef simple_auto_resource&lt;HINSTANCE, LibraryReleasePolicy&gt; auto_lib;
    typedef simple_auto_resource&lt;CRITICAL_SECTION, CritsecReleasePolicy&gt; auto_critsec;
    typedef simple_auto_resource&lt;HWND,DestroyWindowPolicy&gt; auto_destroy_hwnd;
    typedef simple_auto_resource&lt;HANDLE,KernelReleasePolicy,DuplicateHandleCopyPolicy&gt; auto_kernelobj;  
#   ifdef WINSOCK_VERSION
    typedef simple_auto_resource&lt;SOCKET,SocketReleasePolicy&gt; auto_socket;
#   endif

    typedef auto_kernelobj auto_mutex;
    typedef auto_kernelobj auto_event;
    typedef auto_kernelobj auto_filehandle;
    typedef simple_auto_resource&lt;HANDLE,KernelReleasePolicy&gt; auto_localkernelobj;   
    typedef simple_auto_resource&lt;HANDLE,KernelReleasePolicy&gt; auto_localmutex;   
    typedef simple_auto_resource&lt;HANDLE,KernelReleasePolicy&gt; auto_localevent;   
    typedef simple_auto_resource&lt;HANDLE,KernelReleasePolicy&gt; auto_thread;   
    typedef simple_auto_resource&lt;HMODULE,KernelReleasePolicy&gt; auto_hmodule;
</code></pre>

<p>If your answer is 'no, way too complicated,' that's precisely my point.</p>
"
"8293834","<pre><code>DateFormat df = DateFormat.getDateTimeInstance(DateFormat.FULL, DateFormat.FULL);
df.setTimeZone(TimeZone.getTimeZone(""PST""));
final String dateTimeString = df.format(new Date());
</code></pre>
"
"2124398","<pre><code>for (Car car : carsList) {  // carsList is the object of List&lt;Car&gt;
    System.out.println(car);
}
</code></pre>

<p>Note: The above will display the meaningful message only when you have overridden the toString() method of Car class.</p>

<p>e.g</p>

<pre><code>public class Car {

    private String carName;

    ....
    ....

    public String toString() {
        return carName;
    }
}
</code></pre>

<p>The toString() method should be overridden to return meaningful information about the object in the string form.</p>

<p>In your case, I think the meaningful info would be all the details of the car. So overriding toString() method is best approach instead of using getCarName() or similar methods.</p>
"
"8720608","<pre><code>package javagame;

import java.awt.BorderLayout;
import javax.swing.JFrame;

/**
 *
 * @author stuart
 */
public class Main {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        JFrame frame= new JFrame();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setBounds(100, 100, 500, 400);

        frame.add(new GamePanel(), BorderLayout.CENTER);
        frame.setVisible(true);
    }

}
</code></pre>
"
"9047776","<p>Running code in JAVA without using predefined function</p>

<pre><code>class sqrt{
    public static void main(String [] args){
        double n=9;
        double x=1;
        double a=n;
        for(int i=0;i&lt;n;i++)
            x=0.5*(x+a/x);
        System.out.println(x);
    }
}
</code></pre>
"
"2165513","<p>The question as I read it (but then it's strangely formulated) is not if interface should be in their own directory or not.  The question is if you should recreate your complete directory <strong>structure</strong> (bold to emphasis what is in the question's title) where one branch would contain only interfaces, like this:</p>

<pre><code>pureooabstraction/
 |
 |_com/
   |
   |_example/
     |
     |__SomeInterface.java
     |__SomeOtherInterface.java

src/
 |
 |_com/
   |
   |_example/
     |
     |__SomeClass.java
     |__...
</code></pre>

<p>Where the <em>pureooabstraction/</em> directory <em>structure</em> would contain only ""pure abstract classes"" (from an OO point of view, not the Java 'abstract' definition), aka interfaces in Java.</p>

<p>And the petty implementation details (which don't exist at the OOA/OOD level) where ""code"" lies would go in the <em>src/</em> directory.</p>

<p>It certainly makes sense if your development process goes from OOA to OOD to OOP.</p>
"
"3788486","<p>Here is another way to solve the problem:</p>

<pre><code>/**
 * Last item of haystack can be minimum integer (Integer.MIN_VALUE) 
 * to check later whether a match was found or not
 */
public static int siz(int needle,int haystack[],int pos){
  return (needle&gt;haystack[pos])? ++pos: siz(needle,haystack,++pos);
}
</code></pre>

<p>Example usage:</p>

<pre><code>int arr[] = {145,117,68,51,22,10,Integer.MIN_VALUE};
int size = siz(118,arr,0);

//Check if the item was found
if(arr.length!=size){
  //success
}else{
  //handle error
}
</code></pre>
"
"9969526","<p>I know its a bit late but I wanted to share this because I think the simplest solution is do something like this (removing try catch code for brevity+clarity):</p>

<pre><code>ByteArrayOutputStream out = new ByteArrayOutputStream();

byte[] buffer = new byte[1024]; //you can configure the buffer size
while (in.read(buffer) != -1) out.write(buffer); //copy streams

byte[] result = out.toByteArray();
</code></pre>
"
"3791181","<p>I don't know about in Java, but in C++ (although yes this test would be silly to do at the start of a function) later on it may make sense as it is possible that an object can delete itself halfway through its own code and then continue running that code. For example, the following compiles with no errors under gcc 3.4.4 but if run will crash with a NULL access error due to 'this' becoming a NULL pointer.</p>

<pre><code>void foo::bar()
{
    delete this;
    this-&gt;some_function();
}
</code></pre>
"
"10138421","<p>This worked <strong>for me</strong>:</p>

<pre><code>&lt;bean id=""mailSender"" class=""org.springframework.mail.javamail.JavaMailSenderImpl""&gt;
    &lt;property name=""host"" value=""smtp.gmail.com"" /&gt;
    &lt;property name=""port"" value=""465"" /&gt;
    &lt;property name=""protocol"" value=""smtps"" /&gt;
    &lt;property name=""username"" value=""my_email@domain.tld"" /&gt;
    &lt;property name=""password"" value=""my_password"" /&gt;
    &lt;property name=""javaMailProperties""&gt;
    &lt;props&gt;
        &lt;prop key=""mail.smtps.auth""&gt;true&lt;/prop&gt;
    &lt;/props&gt;
    &lt;/property&gt;
&lt;/bean&gt;
</code></pre>

<p>See Google support for further information: <a href=""http://support.google.com/mail/bin/answer.py?hl=en&amp;answer=78799"" rel=""nofollow"">http://support.google.com/mail/bin/answer.py?hl=en&amp;answer=78799</a></p>
"
"3811330","<p>This is one option, not in header part tough</p>

<pre><code>private void DownloadFile()

{

//Download file here...

//Refresh this page.
this.Response.Redirect(Request.Url.AbsolutePath);

}
</code></pre>
"
"3813736","<p>Define a Java <a href=""http://cupi2.uniandes.edu.co/site/images/recursos/javadoc/j2se/1.5.0/docs/api/java/awt/geom/Line2D.html"" rel=""nofollow"">Line2D</a>, and then use <code>yourLine2D.contains(double x, double y)</code>.</p>
"
"10687425","<p>Another easy answer:</p>

<pre><code>defaultTableModel.getDataVector().removeAllElements();
</code></pre>
"
"10976555","<p>I wrote the following as this problem isn't just specific to Integer. My conclusion is that more often than not if you use the API incorrectly, you sill see incorrect behavior. Use it correctly and you should see the correct behavior:</p>

<pre><code>public static void main (String[] args) {
    Byte b1=127;
    Byte b2=127;

    Short s1=127; //incorrect should use Byte
    Short s2=127; //incorrect should use Byte
    Short s3=128;
    Short s4=128;

    Integer i1=127; //incorrect should use Byte
    Integer i2=127; //incorrect should use Byte
    Integer i3=128;
    Integer i4=128;

    Integer i5=32767; //incorrect should use Short
    Integer i6=32767; //incorrect should use Short

    Long l1=127L;           //incorrect should use Byte
    Long l2=127L;           //incorrect should use Byte
    Long l3=13267L;         //incorrect should use Short
    Long l4=32767L;         //incorrect should use Short
    Long l5=2147483647L;    //incorrect should use Integer 
    Long l6=2147483647L;    //incorrect should use Integer
    Long l7=2147483648L;
    Long l8=2147483648L;

    System.out.print(b1==b2); //true  (incorrect) Used API correctly
    System.out.print(s1==s2); //true  (incorrect) Used API incorrectly
    System.out.print(i1==i2); //true  (incorrect) Used API incorrectly
    System.out.print(l1==l2); //true  (incorrect) Used API incorrectly

    System.out.print(s3==s4); //false (correct) Used API correctly
    System.out.print(i3==i4); //false (correct) Used API correctly
    System.out.print(i5==i6); //false (correct) Used API correctly
    System.out.print(l3==l4); //false (correct) Used API correctly
    System.out.print(l7==l8); //false (correct) Used API correctly
    System.out.print(l5==l6); //false (correct) Used API incorrectly

}
</code></pre>
"
"3847776","<p>Not using Java, but it's not exactly hard to convert from C++
PS. Shame on anyone using string conversion.</p>

<pre><code>bool Contains0InBase10( unsigned int i, unsigned int&amp; next )
{
 unsigned int divisor = 10;
 unsigned int remainder = 0;
 while( divisor &lt;= i )
 {
  unsigned int newRemainder = i%divisor;
  if( newRemainder - remainder == 0)
  {
   // give back information allowing a program to skip closer to the next
   // number that doesn't contain 0
   next = i + (divisor / 10) - remainder;
   return true;
  }
  divisor *= 10;
  remainder = newRemainder;
 }
 return false;
}
</code></pre>
"
"11170379","<p>My suggestion is to check length of the file. <code>if file.length() returns 0</code> that means file doesn't exist.</p>
"
"2251409","<p>Before JDK update 18 you could run:</p>

<pre><code>public static void main(String[] args) {

    new SwingWorker&lt;Void, Void&gt;() {
        @Override
        protected Void doInBackground() throws Exception {
            System.out.println(""ok"");
            return null;
        }
    }.execute();

}
</code></pre>

<p>This code doesn't work anymore, simply because SwingWorkers must be executed on EDT.</p>

<p>Therefore, you can't nest SwingWorkers (sw2 will never run in you sample code in newer JDKs).</p>

<p>I guess replacing nested swingWorkers with executorService java.util.concurrent.Future calls is a good workaround.</p>
"
"11632692","<p>I was reviewing code this morning and one of my colleagues had a different approach, just pass the parameter using <code>setString(""name1','name2','name3"")</code>.</p>

<p><strong>Note:</strong> I skipped the single quote at the beginning and end because these are going to be added by the <code>setString</code>. </p>
"
"2283473","<p>If a class has an <code>abstract</code> modifier on its declaration it becomes <code>abstract</code> class.</p>
"
"11714199","<p>Try this code it's only 2 methods out of the class I use to load images but it works fine for loading when using an applet.</p>

<pre><code>private URL getURL(String filename) {
    URL url = null;
    try 
    {
        url = this.getClass().getResource("""" + extention + filename); //extention isn't needed if you are loading from the jar file normally. but I have it for loading from files deeper within my jar file like say. gameAssets/Images/ 
    }
    //catch (MalformedURLException e) { e.printStackTrace(); }
    catch (Exception e) { }

    return url;
}
</code></pre>

<p>//observerwin in this case would be an applet. Simply have the class have something like this: Applet observerwin</p>

<pre><code>public void load(String filename) {

    Toolkit tk = Toolkit.getDefaultToolkit();
    image = tk.getImage(getURL(filename));
    while(getImage().getWidth(observerwin) &lt;= 0){loaded = false;}
    double x = observerwin.getSize().width/2  - width()/2;
    double y = observerwin.getSize().height/2 - height()/2;
    at = AffineTransform.getTranslateInstance(x, y);
    loaded = true;
}
</code></pre>

<p>I can post the rest of the class I use if needed</p>
"
"2307963","<p>Could it be something like</p>

<pre><code>&lt;T extends MySuperClass implements MyInterface&gt;
</code></pre>

<p>I'm just guessing here...</p>
"
"12826550","<pre><code>if(antennaHeight.compareTo(Double.valueOf(0))&gt;=0)
</code></pre>

<p>In the above code,
<code>antennaHeight.compareTo(Double.valueOf(0))</code>  --- this 'll return int, comparing this with 0 gives the solution.</p>
"
"2349676","<p>Instead of breaking you <em>could</em> raise an exception and catch it outside the loop. I forget the syntax in Java but Python would be something like this:</p>

<pre><code>broken = False

try:
    for i in list:
        if i.condition == True:
            raise Exception
except Exception:
    # you know something has broken the flow
    broken = True
</code></pre>

<p>Although what if the last item broke? Technically speaking every item was inspected.</p>
"
"3936514","<p>The <a href=""http://java.sun.com/docs/books/jls/third_edition/html/packages.html"" rel=""nofollow"">Java Language Specification</a> defines a <a href=""http://en.wikipedia.org/wiki/Java_package#Package_naming_conventions"" rel=""nofollow"">package naming convention</a> that says that package names should include a domain name, as it provides a globally-rooted namespace.</p>

<p>The source files need to be in subfolders that match the package name, because the Sun Java compiler, <code>javac</code>, <strike>enforces</strike> strongly encourages it.  Additionally, many other build tools and IDEs also either strongly encourage or require that the source .java files are stored in paths that match the package.</p>
"
"13462778","<p>Your question:
I think that wastes 4 byte (on 32-bit machines) for the size of the entry itself.</p>

<p>Just one Object variable is created for the entire datastructure of hashset and doing that would save yourself from re-writing the entire hashMap kind of code again.</p>

<p><code>private static final Object PRESENT = new Object();</code></p>

<p>All the keys are having one value i.e PRESENT object. </p>
"
"13518283","<p>This will solve purpose in fast and simple code.
It gives result in <code>O(n)</code>.</p>

<pre><code>void removeduplicate(char *str)
{
    int checker = 0;
    int cnt = 0;
    for(int i = 0; i &lt; strlen(str); i++)
    {
        int val = *(str + i) - (int)'a';
        if ((checker &amp; (1 &lt;&lt; val)) &gt; 0) continue;
        else {
            *(str + cnt) = *(str + i);
            cnt++;
        }
        checker |= (1 &lt;&lt; val);
    }
    *(str+cnt) = '\0';
}
</code></pre>
"
"2387228","<pre><code>IF MENU == NULL THEN 
    MENU = POPUPMENU 
ELSE 
   MENU=MENU
</code></pre>
"
"3981932","<h2>Elegant? Use an atomic variable</h2>

<pre><code>final AtomicReference&lt;String&gt; host = new AtomicReference&lt;String&gt;();
SwingUtilities.invokeAndWait(new Runnable() {
    public void run() {
        host.set(JOptionPane.showInputDialog(""Enter host name: ""));
    }
});
openConnection(host.get());
</code></pre>
"
"3981944","<h2>Hack: Use an array</h2>

<pre><code>final String[] host = new String[1];
SwingUtilities.invokeAndWait(new Runnable() {
    public void run() {
        host[0] = JOptionPane.showInputDialog(""Enter host name: "");
    }
});
openConnection(host[0]); //maybe not guaranteed to be visible by the memory model?
</code></pre>
"
"14065399","<pre><code>package com.nisarg.threads;


public class CurrentlyActiveThreads {
    public static void main(String[] args) {
        ThreadGroup threadGroup = Thread.currentThread().getThreadGroup();
        ThreadGroup parent;
        while((parent = threadGroup.getParent()) != null) {
            if(null != threadGroup) {
                threadGroup = parent;
                if(null != threadGroup) {
                    Thread [] threadList = new Thread[threadGroup.activeCount()];
                    threadGroup.enumerate(threadList);
                    for (Thread thread : threadList)
                        System.out.println(new StringBuilder().append(thread.getThreadGroup().getName())
                                .append(""::"").append(thread.getName()).append(""::PRIORITY:-"")
                                .append(thread.getPriority()));
                }
            }
        }
    }
}
</code></pre>
"
"14313391","<pre><code>public String getDaySuffix(int inDay)
{
  String s = String.valueOf(inDay);

  if (s.endsWith(""1""))
  {
    return ""st"";
  }
  else if (s.endsWith(""2""))
  {
    return ""nd"";
  }
  else if (s.endsWith(""3""))
  {
    return ""rd"";
  }
  else
  {
    return ""th"";
  }
}
</code></pre>
"
"4051942","<p>It isn't pretty, but it works. If you have access apache commons i would suggest that use that</p>

<pre><code>if (val.length() &lt; 8) {
  for (int i = 0; i &lt; val - 8; i++) {
    val = ""0"" + val;
  }
}
</code></pre>
"
"14737639","<p>Yet another solution similar to the ""prefix"" solution above avoids multiple prefix assignments in the loop. i.e. Just in case the optimizer does not unroll the first loop iteration.</p>

<pre><code>    StringBuilder sb = new StringBuilder();
    boolean firstEntry = true;
    for (String serverId : serverIds) {
      if (firstEntry)
        firstEntry = false;
      else
        sb.append("","");      
      sb.append(serverId);
    }
</code></pre>
"
"4060084","<p>I've just made some experiments with <code>InetAddress</code> class and also read its javadocs.</p>

<p>After the first touch I can tell that I get <code>UnknownHostException</code> in 2 cases: either when I pass illegal formated string (like <code>http://stackoverflow.com</code> instead of <code>stackoverflow.com</code>) or when I pass URL that cannot be resolved in browser too (i.e. something like <code>aosjdfk23423.com</code>).</p>

<p>Both cases are documented in javadocs (although it's not explicitely said anywhere anything strict about the parameter format). Here are related javadocs parts:</p>

<blockquote>
  <p>The host name can either be a machine name, such as
       <code>java.sun.com</code>, or a textual representation of its
        IP address. If a literal IP address is supplied, only the
        validity of the address format is checked.</p>
</blockquote>

<p><p></p>

<blockquote>
  <p>@exception  UnknownHostException  if no IP address for the
                <code>host</code> could be found, or if a scope_id was specified
             for a global IPv6 address.</p>
</blockquote>

<p>Summary:</p>

<p>this works:</p>

<pre><code>InetAddress.getByName(""google.com"");
InetAddress.getByName(""74.125.87.99"");
</code></pre>

<p>and this throws <code>UnknownHostException</code>:</p>

<pre><code>InetAddress.getByName(""http://google.com"");
InetAddress.getByName(""unexistingresourse234234.com"");
</code></pre>

<p>UPD (as an answer to the comments: there should be something like this:</p>

<pre><code>List&lt;String&gt; hosts = getPossibleHosts(); //these are all hosts you want to transform into inet addresses
final List&lt;InetAddress&gt; inetAddresses = new LinkedList&lt;InetAddress&gt;();
final List&lt;String&gt; badHosts = new LinkedList&lt;String&gt;();

for(String host : hosts) {
    try {
        inetAddresses.add(InetAddress.getByName(host));
    } catch (UnknownHostException e) {
        badHosts.add(host);
    }
}
</code></pre>

<p>After that you can process both lists as you wish. But it's a mistake to try to put them in the same list - they are not same. </p>
"
"2445505","<pre><code>import java.io.*;
public class FileTest
{
    public static void main (String [] args) throws IOException
    {
        BufferedReader wow = new BufferedReader(new InputStreamReader(System.in));
        System.out.print(""Enter File Name: "");
        String fileInput = wow.readLine();

        FileInputStream in = new FileInputStream(fileInput);
        //FileInputStream out = new FileInputStream(fileOutput);
    }
}
</code></pre>
"
"14884481","<p>chubbsondubs came closest to giving a correct answer to this question</p>

<p>What he missed is that his algorithm is incorrect because it contains two tests, when only one is needed. The correct code requires only 3 statements and is as follows:</p>

<pre><code>   public boolean zLibaryContains( String title ) {
       books[bookCount] = title;
       int xBook = 0;
       while( true )
           if( books[xBook].getTitle().equals( title ) )
               return xBook != bookCount;
           else xBook++;              
   }
</code></pre>

<p>Noticeably smaller and faster than all other solutions. Simplify, simplify, simplify.</p>

<p>Object-oriented code is a crutch to support poor designs that would otherwise be too complex to understand. The goal is write code that is so easy to understand and maintain that OO is unnecessary and would make the program <em>worse</em>. When your program can be improved by adding OO, it means you are doing something wrong to begin with.</p>
"
"15676007","<p>You can use a boolean array</p>

<pre><code>final boolean[] values = { false };
values[0] = true;
</code></pre>
"
"15764803","<pre><code>for(int value=0;value&lt;=10;value++)
{
 DBCollection tableDetails = db.getCollection(""Collection Name"");
 BasicDBObject queryDetails = new BasicDBObject();
 queryDetails.put(""_id"", value);
 DBCursor cursorDetails =tableDetails.find(queryDetails);
 DBObject oneDetails;
 boolean Name=cursorDetails.hasNext();
 while(Name)
  { 
    oneDetails=cursorDetails.next();        
    String data=oneDetails.get(""HomeTown"").toString();
    System.out.println(data);
  }
}
</code></pre>
"
"15819247","<pre><code>package p;

import java.sql.Connection;

public final class ProtectedTest {
    String currentUser;
    Connection con = null;

    protected Object ProtectedMethod(){
        return new Object();
    }
    public ProtectedTest(){
    }
    public ProtectedTest(String currentUser){
        this.currentUser = currentUser;
    }
}
</code></pre>

<hr>

<pre><code>package p;

public class CallProtectedTest {
    public void CallProtectedTestMethod() {
        System.out.println(""CallProtectedTestMethod called :::::::::::::::::"");
        ProtectedTest p = new ProtectedTest();
        Object obj = p.ProtectedMethod();
        System.out.println(""obj &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;""+obj);
    }
}
</code></pre>

<hr>

<pre><code>package p1;

import p.CallProtectedTest;

public class CallProtectedTestFromp2 {
    public void CallProtectedTestFromp2Method(){
        CallProtectedTest cpt = new CallProtectedTest();
        cpt.CallProtectedTestMethod();
    }

    public static void main(String[] args) {
        CallProtectedTestFromp2 cptf2 = new CallProtectedTestFromp2();
        cptf2.CallProtectedTestFromp2Method();
    }
}
</code></pre>
"
"4148421","<p>I don't think you are capturing the correct pieces. The regex <code>(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3},)</code> captures the ENTIRE date. If you add capturing groups around each piece, then you can loop through each captured group. As to the two groups, the way Java regexes work is that group 0 is the entire matched string, then the groups thereafter are the captured groups.</p>
"
"4154812","<p>Here is the corrected code. Try this and observe what was wrong. In case of any query, feel free to ask,</p>

<p>import java.awt.BorderLayout;
import java.awt.Component;
import javax.swing.*;</p>

<p>public class testt {</p>

<pre><code>static JFrame jj = new JFrame(""Test frame"");

public static void main (String[] args) {

    jj.setBounds(100, 200, 400, 300);
    jj.setVisible(true);
    jj.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    jj.add(new JButton(""My JButton""), ""North"");
}
</code></pre>

<p>}</p>
"
"16849815","<blockquote>
<pre><code>if (v &lt; 0) System.out.println(""negative""); else System.out.println(""positive"");
</code></pre>
</blockquote>
"
"2502708","<p>You're simply using invalid syntax.  You can't declare the variable b this way.  Try:</p>

<pre><code>TestAO b = new TestAO();
Z[1] = b;
</code></pre>

<p>In general, I'd advise against trying to write lots of compound statements like this.  They only make your code more confusing.</p>
"
"17062396","<h2>Batch insert using statement</h2>

<pre><code>int a= 100;
            try {
                        for (int i = 0; i &lt; 10; i++) {
                            String insert = ""insert into usermaster""
                                    + ""(""
                                    + ""userid""
                                    + "")""
                                    + ""values(""
                                    + ""'"" + a + ""'""
                                    + "");"";
                            statement.addBatch(insert);
                            System.out.println(insert);
                            a++;
                        }
                      dbConnection.commit();
                    } catch (SQLException e) {
                        System.out.println("" Insert Failed"");
                        System.out.println(e.getMessage());
                    } finally {

                        if (statement != null) {
                            statement.close();
                        }
                        if (dbConnection != null) {
                            dbConnection.close();
                        }
                    }
</code></pre>
"
"17212074","<p>You can use:</p>

<pre><code>string finalString=sb.Remove(sb.Length - 1, 1).ToString();
</code></pre>
"
"17230677","<p>The one of easiest ways:</p>

<pre><code>public String reverse(String post)
{       
    String backward = """";
    for(int i = post.length()-1; i &gt;= 0; i--) {
        backward = backward + post.substring(i, i+1);
    }        
    return backward;
} 
</code></pre>
"
"4196253","<p>Here's what you can do for say yyyy-mm-dd comparison:</p>

<pre><code>GregorianCalendar gc= new GregorianCalendar();
gc.setTimeInMillis(System.currentTimeMillis());
gc.roll(GregorianCalendar.DAY_OF_MONTH, true);

Date d1 = new Date();
Date d2 = gc.getTime();

SimpleDateFormat sf= new SimpleDateFormat(""yyyy-MM-dd"");

if(sf.format(d2).hashCode() &lt; sf.format(d1).hashCode())
{
    System.out.println(""date 2 is less than date 1"");
}
else
{
    System.out.println(""date 2 is equal or greater than date 1"");
}
</code></pre>
"
"17473895","<p>This reverses the words in the given string. Words are assumed to be separated by a single space. Reversal is done in place (in the character buffer).</p>

<pre><code>public static String reversePhrases(String s)
{
    char[] buf = s.toCharArray();
    int len = buf.length;
    int start = 0;
    for (int i = 0; i &lt; len; i++) {
        if (buf[i] == ' ' || i == (len-1)) {
            if (i == (len-1)) {
                i = len;
            }
            int end = (start + i)/2;
            for (int j = start; j &lt; end; j++) {
                char c = buf[j];
                int pos = (start + i) - j - 1;
                buf[j] = buf[pos];
                buf[pos] = c;
            }
            start = i + 1;    
        }
    }
    return new String(buf);
}
</code></pre>
"
"4205065","<p>remove the <code>+</code></p>

<blockquote>
  <p>jString =
  someArrayList.get(i).getText() + ""\n"";</p>
</blockquote>

<p>Will stop appending it. And just replace jString each time, but I doubt if this is what you want either. </p>
"
"17912384","<p>Easy way:</p>

<pre><code>String reverseString(String string)
{
    String newString = """";
    for(int x = string.length() - 1; x &gt; -1; x ++)
        newString += string.charAt(x);
    return newString;
}
</code></pre>
"
"4218734","<p>Im not sure what you mean by property editor.  Are you talking about an IDE?</p>

<p>In any event, if your List is private, you have 2 options for allowing access to it.</p>

<p>1)  Return a reference to the list, which a caller can then operate on.<br>
2)  Create a method add/removeListElement, and pass in the Strings you want to add or remove.</p>

<p>I like option 2 better, because it provides better encapsulation/data hiding of the List.</p>

<p>Something like the following, which is pseudo but you get the idea....</p>

<pre><code>class TheBean {
    private List strings = ....

    getStrings(){
        return Collections.unmodifiableList(this.strings) // so if you return the reference people cant muck with it.
    }

    addListElement(String toAdd) {
        // possibly validate toAdd
        this.strings.add(toAdd);
    }
    // you also need removeListelement
}
</code></pre>
"
"2616094","<pre><code>while (true) {
   System.out.println(""Enter the number of stones to play with: "");
   BufferedReader br = new BufferedReader(new InputStreamReader(System.in));  
   key = Integer.parseInt(br.readLine());
   if (key &gt; -1 &amp;&amp; key &lt; 10)
      break;
   else
      System.out.println(""Invalid number of stones. Choose from 0 - 9"");
}
</code></pre>
"
"18610749","<p>I hope this will be useful for someone.</p>

<pre><code>public class ReverseString {

public static void main(String[] args) {
    String a=""abrakadabra"";
    String b=reverse(a);
    System.out.print(b);
}
    public static String reverse(String b){
        String j="""";
        int a=b.length();           
        for (int x=a;x&gt;0;x--){          
        j=j+b.substring(x-1,x);}

        return j;
    }
}
</code></pre>
"
"18771662","<pre><code>package practice;

import java.io.IOException;

class Practice
{
    public static void main(String args[])
    {
        Exception n=new NullPointerException();
        if(n instanceof RuntimeException)
        {
            System.out.println(""this is a runtime(unchecked) exception"");
        }
        else
        {
            System.out.println(""this is not a compiletime(checked) exception"");
        }

    }

}
</code></pre>
"
"18954807","<p>I solved your problem overriding the code in the method ""public void keyTyped(KeyEvent e)"" instead of ""public void keyPressed(KeyEvent e)"" and it works.
Here the code:</p>

<pre><code>package versione1;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class WhiteEnter {
    final JFrame frame = new JFrame();
    private JTextArea area = new JTextArea();


    public static void main(String[]args) {

        WhiteEnter prova = new WhiteEnter();
        prova.run();
    }

    public void run(){
        area.setPreferredSize(new Dimension(200, 200));
        area.addKeyListener(new PressEnterKeyListener());

        frame.add(area);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    public class PressEnterKeyListener implements KeyListener{

        @Override
        public void keyPressed(KeyEvent e) {
        }

        @Override
        public void keyReleased(KeyEvent e) {
        }

        @Override
        public void keyTyped(KeyEvent e) {

            if (e.getKeyChar() == (KeyEvent.VK_ENTER)){
                try{
                    area.setText(null);
                    area.setCaretPosition(0);
                } catch(Exception ex){
                    ex.printStackTrace();
                }
            }
        }
    }
}
</code></pre>
"
"2636691","<p>Try adding the <code>@Documented</code> annotation, see <i>Note:</i> in this <a href=""http://docs.oracle.com/javase/tutorial/java/annotations/declaring.html"" rel=""nofollow"">link</a>.</p>
"
"4291337","<p>You are always passing an array <em>by reference</em> in java. The only objects not passed by reference (but passed by value) are the primitives, <code>int, long, boolean, double, float</code> etc. Everything else is an object and passed by reference. So your code will work fine.</p>

<p><strong>Edit:</strong> I humbly admit my foolish mistake. You are always passing <em>by value</em> in java. But objects are always passed with <em>reference as value</em>.</p>
"
"19419132","<p>You should covert String to float. It is working.</p>

<pre><code>float result = 0;
 if (TextUtils.isEmpty(et.getText().toString()) {
  return;
}

result = Float.parseFloat(et.getText().toString());

tv.setText(result); 
</code></pre>
"
"20115174","<p>To compare <code>Strings</code> you have to use the <strong>equals</strong> keyword. </p>

<pre><code>if(c.equals(""""))
{
}
</code></pre>
"
"4324379","<p>I would use an ArrayList like this:</p>

<pre><code>ArrayList&lt;Name&gt; listOne = new ArrayList&lt;Name&gt;();
listOne.add(new Name(""Nellai"", 10);
listOne.add(new Name(""Gujarath"", 10);
listOne.add(new Name(""Delhi"", 30);
listOne.add(new Name(""Nellai"", 5);
listOne.add(new Name(""Delhi"", 20);

Collection.sort(listOne);
</code></pre>

<p>Then create the Name class</p>

<pre><code>    class name implements Comparable
{
private String name;
private int number;

public Name(String name, int number)
{
this.name= name;
this.number= number;
}

public String getName()
{
        return this.name;
}
public int getNumber()
{
        return this.number;
} 
public int compareTo(Object otherName) //  must be defined if we are implementing //Comparable interface
{
 if(otherName instanceif Name)
{
throw new ClassCastException(""Not valid Name object""):
}
Name tempName = (Name)otherName;
// eliminate the duplicates when you sort 
if(this.getNumber() &gt;tempName.getNumber())
  {
     return 1;
  }else if (this.getNumber() &lt; tempName.getNumber()){
     return -1;
  }else{
     return 0;
  }
}

}
</code></pre>

<p>I didn't compiled the code, it's edited here so you should fix the code. And also to figure out how to eliminate the duplicates and print only the lowest one.</p>

<p>You need to sweat too.  </p>
"
"20297646","<pre><code>import java.util.Scanner;

public class onlinelab2task4{

  public static void main(String[]args){

    Scanner abir=new Scanner(System.in);

    System.out.println(""Enter raw"");

    double r=abir.nextDouble();

    double [][] a=new double[(int)r][(int)r];

    int c=0;

    while(c&lt;a.length){

      //System.out.print(""[""+a[c][0]+""]"");
      int d=0;

      while(d&lt;a[c].length){

        if(c==d)
        {
          a[c][d]=1;
        }
        System.out.print(""[""+a[c][d]+""]"");
        d++;
      }
      c++;
      System.out.println();
    }
  }
}
</code></pre>
"
"20341442","<p>if its to reverse each letter than this for loop works nicely:</p>

<pre><code>for(int i = 0; i &lt; input.length(); i++){
    output = output + input.substring((input.length()-i)-1, input.length()-i);
}
</code></pre>
"
"21169259","<p>This is probably the best answer you'll find:</p>

<pre><code>while(True){
    System.out.println(""\""Hello\"""");
}
</code></pre>
"
"21900100","<p>This will show you the tables of the current schema (which you are logged in): </p>

<pre><code>select table_name from user_tables order by table_name;
</code></pre>

<p>This will show you the tables of schema , for which you have select rights at least: </p>

<pre><code>select owner, table_name from all_tables where owner='&lt;owner&gt;' order by owner, table_name;
</code></pre>
"
"22044043","<p>Have you tried the <a href=""https://github.com/tzinfo/tzinfo"" rel=""nofollow"">TZInfo</a> gem?</p>

<p>You can get the timezones of a country this way:</p>

<pre><code>&gt;&gt; TZInfo::Country.get(""DE"").zone_identifiers
=&gt; [""Europe/Berlin"", ""Europe/Busingen""]
&gt;&gt; TZInfo::Country.get(""CN"").zone_identifiers
=&gt; [""Asia/Shanghai"", ""Asia/Harbin"", ""Asia/Chongqing"", ""Asia/Urumqi"", ""Asia/Kashgar""]
&gt;&gt; TZInfo::Country.get(""US"").zone_identifiers
=&gt; [""America/New_York"", ""America/Detroit"", ""America/Kentucky/Louisville"",   ""America/Kentucky/Monticello"", ""America/Indiana/Indianapolis"", ""America/Indiana/Vincennes"", ""America/Indiana/Winamac"", ""America/Indiana/Marengo"", ""America/Indiana/Petersburg"", ""America/Indiana/Vevay"", ""America/Chicago"", ""America/Indiana/Tell_City"", ""America/Indiana/Knox"", ""America/Menominee"", ""America/North_Dakota/Center"", ""America/North_Dakota/New_Salem"", ""America/North_Dakota/Beulah"", ""America/Denver"", ""America/Boise"", ""America/Phoenix"", ""America/Los_Angeles"", ""America/Anchorage"", ""America/Juneau"", ""America/Sitka"", ""America/Yakutat"", ""America/Nome"", ""America/Adak"", ""America/Metlakatla"", ""Pacific/Honolulu""]
</code></pre>
"
"4415419","<p>Here is a pseudocode function that interpolates linearly between 2 colors <code>(staying in RGB space</code>).  I'm using a class called Color here instead of ints for clarity.</p>

<p>bAmount is between 0 and 1 (for interpolation)</p>

<pre><code>Color interpolate(Color colorA, Color colorB, float bAmount) {
    Color colorOut;
    float aAmount = 1.0 - bAmount;
    colorOut.r =  colorA.r * aAmount + colorB.r * bAmount;
    colorOut.g =  colorA.g * aAmount + colorB.g * bAmount;
    colorOut.b =  colorA.b * aAmount + colorB.b * bAmount;
    return colorOut;
}
</code></pre>
"
"2712897","<p>If the Exception is never caught, the thread is terminated. If this is your main thread, the application ends. Try the following:</p>

<pre><code>try
{
   props.load(...);
}
catch (FileNotFoundException ex)
{
   Thread.sleep(x * 1000);
   props.load(...);
}
</code></pre>
"
"22411227","<p>The above suggestion works, but only if the annotation is used on the getter method. If the annotations is used where the member is declared, nothing will happen.</p>

<pre><code>public String getStringValue(){
     return (this.stringValue == null) ? ""Default"" : stringValue;
}
</code></pre>
"
"22697547","<pre><code>SimpleDateFormat format1 = new SimpleDateFormat(""yyyy/MM/dd"");
System.out.println(format1.format(date));
</code></pre>
"
"4443850","<p>I think there might be some sort of mouse drag listener, but if not...</p>

<p>Capture the mouse button down and up events.  In those events, set a boolean such as <code>leftButtonIsDown = true</code> (unless there's already some easy way to query that) and then in the mouse movement events use a block like <code>if (leftButtonIsDown)</code></p>
"
"23700145","<p>Here a quick example that works:</p>

<p><strong>JSON:</strong></p>

<pre><code>[{""function"":{""name"":""Function 1""}},
 {""function"":{""name"":""Function 2""}}]
</code></pre>

<p><strong>Java:</strong></p>

<pre><code>import java.util.Map;

import javax.xml.bind.annotation.XmlRootElement;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

import org.codehaus.jackson.annotate.JsonIgnoreProperties;
import org.codehaus.jackson.annotate.JsonProperty;
@Getter
@Setter
@ToString
@JsonIgnoreProperties(ignoreUnknown = true)
public class Function {
    @JsonProperty(""name"")
    private String name;

    @JsonProperty(""function"")
    public void setFunction(Map&lt;String, Object&gt; function) {
      name = (String) function.get(""name"");
    }
}
</code></pre>
"
"23893451","<p>Because there a so many ways to achieve the same effect I thought I'd add my solution too :).
I use the following code to retrieve settings from ini-style files:</p>

<pre><code>/**
 * Returns the content of a string or null if there is no actual content. The original string is trimmed so
 * whitespace inside the string counts as content.
 *
 * @param string String to check
 * @return the content or null if there is only whitespace, control characters or no string at all
 */
public static String getContent(String string) {
    if (string != null) {
        string = string.trim();
        if (string.isEmpty() == false) {
            return string;
        }
    }
    return null;
}
</code></pre>

<p>You can use it to test for null or only whitespace strings:</p>

<pre><code>string = Utils.getContent(string);
if (string != null) {
    // String is usable and has actual content!
}
</code></pre>
"
"24531107","<p>Other method :</p>

<pre><code>public void setValues(PreparedStatement ps) throws SQLException {
    // first param inside IN clause with myList values
    ps.setObject(1 , myList.toArray(), 2003); // 2003=array in java.sql.Types
}
</code></pre>
"
"4469173","<p>This syntax is not allowed in java</p>

<pre><code>memory + turn = memory+turn + count;
</code></pre>
"
"2787795","<p>Second is better for speed.</p>

<p>Reason is that in the first case, the scope of <code>j</code> is limited to the inner <code>for</code> loop.</p>

<p>As such, the moment, the inner loop is completed, the memory for <code>j</code> is de-allocated, and again allocated for the next iteration of the outer loop.</p>

<p>Because the memory allocation and deallocation take some time, even though it's on stack, the performance of the first one is slower.</p>
"
"4472625","<p>Suggest using <code>fromRGB()</code> - see <a href=""http://download.oracle.com/javase/1.4.2/docs/api/java/awt/color/ColorSpace.html"" rel=""nofollow"">http://download.oracle.com/javase/1.4.2/docs/api/java/awt/color/ColorSpace.html</a></p>

<p>Sample code:</p>

<pre><code>java.awt.color.ColorSpace

ColorSpace cmyk = new ColorSpace(ColorSpace.TYPE_CMYK, 4);
float[] values = cmyk.fromRGB(rgbFloatArray);
</code></pre>

<p><strong>public abstract float[] fromRGB(float[] rgbvalue)</strong></p>

<p>Transforms a color value assumed to be in the default CS_sRGB color space into this ColorSpace.</p>

<p>This method transforms color values using algorithms designed to produce the best perceptual match between input and output colors. In order to do colorimetric conversion of color values, you should use the toCIEXYZ method of the CS_sRGB color space to first convert from the input color space to the CS_CIEXYZ color space, and then use the fromCIEXYZ method of this color space to convert from CS_CIEXYZ to the output color space. See toCIEXYZ and fromCIEXYZ for further information. </p>
"
"25069996","<p>This works for me</p>

<pre><code>    public static String convertUTF8Units_version2(String input) throws UnsupportedEncodingException
    {
         return URLDecoder.decode(input.replaceAll(""\\\\x"", ""%""),""UTF-8"");
    }
</code></pre>
"
"4497333","<p>I think you need this.</p>

<p>100 T(Your Object) Objects in 200x100 matrix(array)</p>

<pre><code>T[][][] t = new T[200][100][100] ; 

t[0][0][1] = new T();
t[0][0][2] = new T();
...
t[0][0][99] = new T();
</code></pre>
"
"2804056","<p>Use the System command... </p>

<pre><code>system(""java -version"");
</code></pre>

<p>If you are going to export a new Java </p>

<pre><code>system('export PATH=/usr/java1.6/bin:$PATH');
</code></pre>
"
"25920877","<blockquote>
  <p>public String removeDuplicateChar(String data){  </p>

<pre><code>  String rs="""";
   for(char a:data.toCharArray()){
       if(!rs.contains(""""+a)){
          rs+=a;
       }
   }
   return rs;        
</code></pre>
  
  <p>}</p>
</blockquote>
"
"26088324","<p><code>median = (a+b+c) - Math.min(min(a,b),c) - Math.max(max(a,b),c)</code></p>

<p>This is the basic one, i don't know how efficient this would work but these functions use if conditions after all. If you would like you can turn this statement into if-else statements, yet it will take time. Why so lazy?</p>
"
"26309490","<p>As many others have answered: Java doesn't support user-defined operator overloading.</p>

<p>Maybe this is off-topic, but I want to comment on some things I read in some answers.</p>

<p><strong>About readability.</strong><br>
Compare:</p>

<ol>
<li>c = a + b </li>
<li>c = a.add(b)</li>
</ol>

<p>Look again!<br>
<strong>Which one is more readable?</strong></p>

<p>A programming language that allows the creation of user-defined types, should allow them to act in the same way as the built-in types (or primitive types).</p>

<p>So Java breaks a fundamental principle of Generic Programming:<br>
<strong><em>We should be able to interchange objects of built-in types with objects of user-defined types.</em></strong><br>
(You may be wondering: ""Did he say 'objects of built-in'?"". Yes, <a href=""http://componentsprogramming.com/writing-min-function-part1/#Ref5"" rel=""nofollow"" title=""object practical definition"">see here</a>.)</p>

<p><strong>About String concatenation:</strong></p>

<p>Mathematicians use the symnol + for commutative operations on sets.<br>
So we can be sure that a + b = b + a.<br>
String concatenation (in most programming languages) doesn't respect this common mathematical notation.</p>

<blockquote>
<pre><code>a := ""hello"";
b := ""world"";
c := (a + b = b + a);
</code></pre>
</blockquote>

<p>or in Java:</p>

<blockquote>
<pre><code>String a = ""hello"";
String b = ""world"";
boolean c = (a + b).equals(b + a);
</code></pre>
</blockquote>

<p>Extra:<br>
Notice how in Java equality and identity are confused. 
The == (equality) symbol means:<br>
a. Equality for primitive types<br>
b. Identity-check for user-defined types, therefore, we are forced to use the <em>function</em> equals() for equality.<br>
But... What has this to do with  operator overloading?<br>
If language allows operator overloading the user could give the proper meaning to the equality operator.</p>
"
"4557372","<p><code>/etc/init.d/networking restart</code></p>
"
"26728125","<p>It could be a simple jar problem. may be you are using a old <code>mysql-connector-java-XXX-bin.jar</code> which is not supported by your current mysql version. i used   <code>mysql-connector-java-5.1.18-bin.jar</code> as i am using <code>mysql 5.5</code> and this problem is resolved for me.</p>
"
"27046307","<p>it works for me !!</p>

<p>in mysql table</p>

<pre><code>DATETIME
</code></pre>

<p>in entity:</p>

<pre><code>private Date startDate;
</code></pre>

<p>in process:</p>

<pre><code>objectEntity.setStartDate(new Date());
</code></pre>

<p>in preparedStatement:</p>

<pre><code>pstm.setDate(9, new java.sql.Date(objEntity.getStartDate().getTime()));
</code></pre>
"
"4591920","<p>Is possible to define urlBasedViewResolver in properties file:</p>

<pre><code>excel.(class)=fi.utu.seurantaraporttisuodatin.service.Raportti  
index.(class)=org.springframework.web.servlet.view.urlBasedView  
index.viewClass =org.springframework.web.servlet.view.JstlView  
index.prefix = /WEB-INF/jsp/  
index.suffix =.jsp
</code></pre>
"
"2861456","<p>The documentation is not exactly clear on this but it does say this:</p>

<blockquote>
  <p>The behavior of the WeakHashMap class
  depends in part upon the actions of
  the garbage collector, so several
  familiar (though not required) Map
  invariants do not hold for this class.
  Because the garbage collector may
  discard keys at any time, a
  <strong>WeakHashMap may behave as though an
  unknown thread is silently removing
  entries</strong>. In particular, even if you
  synchronize on a WeakHashMap instance
  and invoke none of its mutator
  methods, it is possible for the size
  method to return smaller values over
  time, for the isEmpty method to return
  false and then true, for the
  containsKey method to return true and
  later false for a given key, for the
  get method to return a value for a
  given key but later return null, for
  the put method to return null and the
  remove method to return false for a
  key that previously appeared to be in
  the map, and for successive
  examinations of the key set, the value
  set, and the entry set to yield
  successively smaller numbers of
  elements. - <a href=""http://java.sun.com/j2se/1.4.2/docs/api/java/util/WeakHashMap.html"" rel=""nofollow"">Java API</a></p>
</blockquote>

<p>I think given that description you should expect to occasionally receive <code>ConcurrentModificationException</code>s while iterating the map.  I would design your cache so you do as little iterating as possible.</p>
"
"27917003","<pre><code>else if(user.contains(""rv:11.0""))
            {
                String substring=userAgent.substring(userAgent.indexOf(""rv"")).split(""\\)"")[0];
                browser=substring.split("":"")[0].replace(""rv"", ""IE"")+""-""+substring.split("":"")[1];

            }
</code></pre>
"
"27967649","<p><code>arr.length</code>      This will give you the number of rows in your 2D Array</p>

<p><code>arr[i].length</code>   This will give you the number of colums of a particular row....</p>

<p>Hence <code>arr[i].length</code> reduces the time taken when it is used within a loop...</p>

<p>This means If Row 0 has 3 values &amp;  Row 1 has 2 values...</p>
"
"28528293","<p>Many of the examples here will not work for 11, 12, 13. This is more generic and will work for all case.</p>

<pre><code>switch (date) {
                case 1:
                case 21:
                case 31:
                    return """" + date + ""st"";

                case 2:
                case 22:
                    return """" + date + ""nd"";

                case 3:
                case 23:
                    return """" + date + ""rd"";

                default:
                    return """" + date + ""th"";
}
</code></pre>
"
"4676756","<ol>
<li>Yes.</li>
<li>Yes.</li>
<li>because a constructor is called by <code>new</code>.  What returns the object is the <code>new</code>, the constructor simply sets up the internal state.</li>
<li>Public.</li>
</ol>
"
"29075933","<pre><code>package com.test;

public class Test {

    public static void main(String[] args) {

        String str = ""TestCode "";
        if (str.indexOf("" "") &gt; -1) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""Noo"");
        }
    }
}
</code></pre>
"
"29812052","<pre><code>public static StringBuffer removeDuplicateCharsInPlace(StringBuffer sb)
{   
    if (sb==null|| sb.equals(""""))
        return new StringBuffer(""String empty or null."");

    if(sb.length()==1)
        return sb;

    // iterate through the entire string
    for (int i=0;i&lt;sb.length();i++)
    {   
        //Save one character as string
        String subString = sb.substring(i, i+1);

        // Find the first index of the selected character
        int startIndex = sb.indexOf(subString);
        int nextIndex;

        do
        {   //find the next index of the selected character
            nextIndex = sb.indexOf(subString, startIndex + 1);

            // If found, delete the character
            if(nextIndex!=-1)
                sb.deleteCharAt(nextIndex);

            // Set the next start of the index to the last found index - 1 (minus one because a character has been deleted)
            startIndex=nextIndex-1;

        }while(nextIndex!=-1);  // Keep repeating until we keep finding repeated characters' indexes
    }
    return sb;
}
</code></pre>
"
"29917397","<p>OracleXETNSListener  - this service has to be started if it was disabled.</p>

<pre><code>run -&gt; services.msc 
</code></pre>

<p>and  look out for that services</p>
"
"2981789","<p>Just use your head, quote-escape* everything from an outside (or inside for that matter) source before it gets put in an SQL statement, and check data as it goes in. Or, use prepared statements.</p>

<p>*<strong>Edit:</strong> By ""quote-escape"" I meant functions like PHP's <a href=""http://www.php.net/manual/en/function.mysql-escape-string.php"" rel=""nofollow""><code>mysql_escape_string()</code></a></p>
"
"3010032","<p>There is no single way to do this, however you can use the Classloader, ProtectionDomain, and CodeSource to get close.</p>

<pre><code>URL url = Test.class.getProtectionDomain().getCodeSource().getLocation();
// if your Test.java is on the filesystem and not in a jar...
File testJava = new File(url.toURI());
String directory = testJava.getParent();
</code></pre>

<p>If it's in a jar, you'll have to parse the URL</p>

<p>edit: fixed a couple typos</p>
"
"5985479","<p>This generates a random integer of size psize</p>

<pre><code>public static Integer getRandom(Integer pSize) {

    if(pSize&lt;=0) {
        return null;
    }
    Double min_d = Math.pow(10, pSize.doubleValue()-1D);
    Double max_d = (Math.pow(10, (pSize).doubleValue()))-1D;
    int min = min_d.intValue();
    int max = max_d.intValue();
    return RAND.nextInt(max-min) + min;
}
</code></pre>
"
"3061210","<p>The Java machine allocates your program a specific quantity of memory. The error is caused by your program using too much memory. The examples above are good, but if you are trying to create a very large array that can cause it to overflow as well.
You can Allocate more memory(this example of 200MB) to your program by using command line arguments</p>

<pre><code>java -Xmx200m YOUR_PROGRAM_CLASS
</code></pre>

<p>This will decrease the chance of you getting a StackOverFlowException.</p>

<p><a href=""http://java.sun.com/j2se/1.4.2/docs/tooldocs/windows/java.html#Xms"" rel=""nofollow"">This Explains the command line options </a></p>

<p>(http://java.sun.com/j2se/1.4.2/docs/tooldocs/windows/java.html#Xms)</p>
"
"3065986","<pre><code>boolean isFileSystemCaseSensitive = !new File( ""a"" ).equals( new File( ""A"" ) );
</code></pre>
"
"3072035","<p>Use the <a href=""http://en.wikipedia.org/wiki/Composite_pattern"" rel=""nofollow"">Composite pattern</a>: create a new implementation of the <code>Iterator</code> interface that is a wrapper around the iterator from the <code>HashSet</code>, but instead of passing through calls to <code>remove</code> throw an <code>UnsupportedOperationException</code>.</p>
"
"6867396","<p>Why not make it explicit?</p>

<p>I'm for adding it in - not everyone ""implicitly"" knows that every Java class implicitly extends <code>Object</code>.  By writing it explicitly they don't have to guess.</p>
"
"3089172","<p>Using your code, the following should work:</p>

<pre><code>response.setContentType(""Your MIME type"");
</code></pre>
"
"3106189","<p>It's not a good idea.</p>

<p>It forces your class to inherit from a concrete class <code>Enum</code>. That pollutes your type hierarchy.</p>

<p>The type of the <code>INSTANCE</code> must be exactly <code>Elvis</code>; it cannot be some subtype of <code>Elvis</code>.</p>

<p>More generally you have no freedom to choose how the instance is instantiated.</p>

<p>And syntax-wise, is this really too much typing?</p>

<pre><code>public class Elvis {
    static public Elvis INSTANCE = new Elvis();
</code></pre>
"
"7315168","<p>you can use this code.. this will help you...</p>

<p>//main class</p>

<pre><code>public class Main {
public static void main(String[] args){

    CKL ckl = new CKL();
    String equation = ""2*2+12-6/5"";
    String ans = equation;
    StringTokenizer sto = new StringTokenizer(equation,""0123456789"");
    StringBuffer buf = new StringBuffer();
    while(sto.hasMoreTokens()){
        buf.append(sto.nextToken());
    }
    String opCheck = buf.toString();
    if(opCheck.contains(""/"")){
        ckl.resultDiv(equation);
        ans = ckl.resultFinal;
    }
    if(ans.contains(""*"")){
        ckl.resultMul(ans);
        ans = ckl.resultFinal;
    }
    if(ans.contains(""-"")){
        ckl.resultMin(ans);
        ans = ckl.resultFinal;
    }
    if(ans.contains(""+"")){
        ckl.resultPlu(ans);
        ans = ckl.resultFinal;
    }
    else ans=equation;
    System.out.println(ans);
}
</code></pre>

<p>}</p>

<p>// another evaluating class</p>

<pre><code>public class CKL {
public String resultFinal;
public void resultDiv(String string){
    StringTokenizer stkn = new StringTokenizer(string, ""+-*/"");
    int length = 0;
    while(stkn.hasMoreTokens()){
        stkn.nextToken();
        length++;
    }
    if(length==1){           
    }
    else{
        int[] numbersList = new int[length];
        StringTokenizer noToken = new StringTokenizer(string, ""-/*+"");
        int i=0;
        while(noToken.hasMoreTokens()){
            numbersList[i] = Integer.parseInt(noToken.nextToken());
            i++;
        }

        StringBuffer noop = new StringBuffer();
        StringTokenizer noOp = new StringTokenizer(string, ""[0123456789]"");
        while(noOp.hasMoreTokens()){
            noop.append(noOp.nextToken());
        }
        for(int k=0;k&lt;1;k++){
            int divIndexFind = string.indexOf(""/"");
            if(divIndexFind!=-1){
                int indexOp = noop.indexOf(""/"");
                int temp = numbersList[indexOp++]/numbersList[indexOp];
                indexOp--;
                int firstLength = String.valueOf(numbersList[indexOp++]).length();
                int secondLength = String.valueOf(numbersList[indexOp]).length();
                StringBuffer b = new StringBuffer();
                b.append(string);
                b.replace(divIndexFind-firstLength,divIndexFind+secondLength+1, String.valueOf(temp));
                String finalNewString = """";
                finalNewString = b.toString();
                resultFinal = finalNewString;
                resultDiv(finalNewString);
            }
        }
    }
}
public void resultMul(String string){
    StringTokenizer stkn = new StringTokenizer(string, ""+-*/"");
    int length = 0;
    while(stkn.hasMoreTokens()){
        stkn.nextToken();
        length++;
    }
    if(length==1){
    }
    else{
        int[] numbersList = new int[length];
        StringTokenizer noToken = new StringTokenizer(string, ""-/*+"");
        int i=0;
        while(noToken.hasMoreTokens()){
            numbersList[i] = Integer.parseInt(noToken.nextToken());
            i++;
        }
        StringBuffer noop = new StringBuffer();
        StringTokenizer noOp = new StringTokenizer(string, ""[0123456789]"");
        while(noOp.hasMoreTokens()){
            noop.append(noOp.nextToken());
        }
        for(int k=0;k&lt;1;k++){
            int divIndexFind = string.indexOf(""*"");
            if(divIndexFind!=-1){
                int indexOp = noop.indexOf(""*"");
                int temp = numbersList[indexOp++]*numbersList[indexOp];
                indexOp--;
                int firstLength = String.valueOf(numbersList[indexOp++]).length();
                int secondLength = String.valueOf(numbersList[indexOp]).length();
                StringBuffer b = new StringBuffer();
                b.append(string);
                b.replace(divIndexFind-firstLength,divIndexFind+secondLength+1, String.valueOf(temp));
                String finalNewString = """";
                finalNewString = b.toString();
                resultFinal = finalNewString;
                resultMul(finalNewString);
            }
        }
    }
}
public void resultPlu(String string){
    StringTokenizer stkn = new StringTokenizer(string, ""+-*/"");
    int length = 0;
    while(stkn.hasMoreTokens()){
        stkn.nextToken();
        length++;
    }
    if(length==1){
    }
    else{
        int[] numbersList = new int[length];
        StringTokenizer noToken = new StringTokenizer(string, ""-/*+"");
        int i=0;
        while(noToken.hasMoreTokens()){
            numbersList[i] = Integer.parseInt(noToken.nextToken());
            i++;
        }

        StringBuffer noop = new StringBuffer();
        StringTokenizer noOp = new StringTokenizer(string, ""[0123456789]"");
        while(noOp.hasMoreTokens()){
            noop.append(noOp.nextToken());
        }
        for(int k=0;k&lt;1;k++){
            int divIndexFind = string.indexOf(""+"");
            if(divIndexFind!=-1){
                int indexOp = noop.indexOf(""+"");
                int temp = numbersList[indexOp++]+numbersList[indexOp];
                indexOp--;
                int firstLength = String.valueOf(numbersList[indexOp++]).length();
                int secondLength = String.valueOf(numbersList[indexOp]).length();
                StringBuffer b = new StringBuffer();
                b.append(string);
                b.replace(divIndexFind-firstLength,divIndexFind+secondLength+1, String.valueOf(temp));
                String finalNewString = """";
                finalNewString = b.toString();
                resultFinal = finalNewString;
                resultPlu(finalNewString);
            }
        }
    }
}
public void resultMin(String string){
    StringTokenizer stkn = new StringTokenizer(string, ""+-*/"");
    int length = 0;
    while(stkn.hasMoreTokens()){
        stkn.nextToken();
        length++;
    }
    if(length==1){
    }
    else{
        int[] numbersList = new int[length];
        StringTokenizer noToken = new StringTokenizer(string, ""-/*+"");
        int i=0;
        while(noToken.hasMoreTokens()){
            numbersList[i] = Integer.parseInt(noToken.nextToken());
            i++;
        }

        StringBuffer noop = new StringBuffer();
        StringTokenizer noOp = new StringTokenizer(string, ""[0123456789]"");
        while(noOp.hasMoreTokens()){
            noop.append(noOp.nextToken());
        }
        for(int k=0;k&lt;1;k++){
            int divIndexFind = string.indexOf(""-"");
            if(divIndexFind!=-1){
                int indexOp = noop.indexOf(""-"");
                int temp = numbersList[indexOp++]-numbersList[indexOp];
                indexOp--;
                int firstLength = String.valueOf(numbersList[indexOp++]).length();
                int secondLength = String.valueOf(numbersList[indexOp]).length();
                StringBuffer b = new StringBuffer();
                b.append(string);
                b.replace(divIndexFind-firstLength,divIndexFind+secondLength+1, String.valueOf(temp));
                String finalNewString = """";
                finalNewString = b.toString();
                resultFinal = finalNewString;
                resultMin(finalNewString);
            }
        }
    }
}
</code></pre>

<p>}</p>
"
"3137987","<p>You could just use a <code>Map&lt;MobileSuit, Pilot&gt;</code>, where a <code>null</code> value mapped to a <code>MobileSuit</code> indicates no pilot. The <code>Iterator</code> could just be an <code>Iterator&lt;Map.Entry&lt;MobileSuit, Pilot&gt;&gt;</code> retrieved by <code>map.entrySet().iterator()</code>.</p>
"
"3137989","<p>Isn't that enough ?</p>

<pre><code>for(MobileSuit ms : MobileSuits) {
    for(Pilot p : pilots){
        //TODO
    }
}
</code></pre>
"
"7665711","<p><a href=""http://stackoverflow.com/a/4837230"">Daniel's answer</a> was good except I had to change this code...</p>

<pre><code>    SchemeRegistry registry = new SchemeRegistry();
    registry.register(new Scheme(""http"", PlainSocketFactory.getSocketFactory(), 80));
    registry.register(new Scheme(""https"", sf, 443));

    ClientConnectionManager ccm = new ThreadSafeClientConnManager(params, registry);
</code></pre>

<p>to this code...</p>

<pre><code>    ClientConnectionManager ccm = new ThreadSafeClientConnManager(params, registry);
    SchemeRegistry registry = ccm.getShemeRegistry()
    registry.register(new Scheme(""http"", PlainSocketFactory.getSocketFactory(), 80));
    registry.register(new Scheme(""https"", sf, 443));
</code></pre>

<p>to get it to work.</p>
"
"7702135","<pre><code>import java.io.*;
public class Upch2
{
   BufferedReader br= new BufferedReader( new InputStreamReader(System.in));
   public void main()throws IOException
    { 
        System.out.println(""Pl. Enter A Line"");
        String s=br.readLine();
        String s1="" "";
        s="" ""+s;
        int len=s.length();
        s= s.toLowerCase();
        for(int j=1;j&lt;len;j++)
         {
           char  ch=s.charAt(j);

           if(s.charAt(j-1)!=' ')
           {
             ch=Character.toLowerCase((s.charAt(j)));
           }
           else
           {
             ch=Character.toUpperCase((s.charAt(j)));
            }
            s1=s1+ch;
          }
     System.out.println("" ""+s1);
  }
}
</code></pre>
"
"7967307","<p>You can also try this syntax.</p>

<pre><code>static public String generateCollection(List list){
    if(list == null || list.isEmpty())
        return ""()"";
    String result = ""( "";
    for(Iterator it = list.iterator();it.hasNext();){
        Object ob = it.next();
        result += ob.toString();
        if(it.hasNext())
            result += "" , "";
    }
    result += "" )"";
    return result;
}
</code></pre>

<p>And put into query, <code>""Select * from Class where field in "" + Class.generateCollection(list);</code></p>
"
"7985834","<p>you can apply the same logic as the SimpleDateFormat solution without relying on SimpleDateFormat</p>

<pre><code>date1.getFullYear()*10000 + date1.getMonth()*100 + date1.getDate() == 
date2.getFullYear()*10000 + date2.getMonth()*100 + date2.getDate()
</code></pre>
"
"8656188","<p>There is no need to do the reader loop yourself. The JsonTokener has this built in. E.g.</p>

<pre><code>ttpResponse response; // some response object
BufferedReader reader = new BufferedReader(new    
JSONTokener tokener = new JSONTokener(reader);
JSONArray finalResult = new JSONArray(tokener);
</code></pre>
"
"8751585","<p>Maybe some like this:</p>

<pre><code>public class JdbcActorDao implements ActorDao {
private SimpleJdbcTemplate simpleJdbcTemplate;
private SimpleJdbcInsert insertActor;

public void setDataSource(DataSource dataSource) {
    this.simpleJdbcTemplate = new SimpleJdbcTemplate(dataSource);
    this.insertActor =
            new SimpleJdbcInsert(dataSource)
                    .withTableName(""t_actor"")
                    .usingGeneratedKeyColumns(""id"");
}

public void add(Actor actor) {
    Map&lt;String, Object&gt; parameters = new HashMap&lt;String, Object&gt;(2);
    parameters.put(""first_name"", actor.getFirstName());
    parameters.put(""last_name"", actor.getLastName());
    Number newId = insertActor.executeAndReturnKey(parameters);
    actor.setId(newId.longValue());
}

//  ... additional methods
}
</code></pre>
"
"9419890","<pre><code>int lcm(int x,int y){

    int i=1;    

    while(true){

        if(!(x*i)%y)
             return x*i;

        i++;
    }
</code></pre>
"
"3276846","<p>Commons Configuration do manipulate configuration files.</p>

<p>Even it gives an option to save the manipulated properties in a new file also.</p>

<pre><code>PropertiesConfiguration config = new PropertiesConfiguration(""usergui.properties"");
config.setProperty(""colors.background"", ""#000000);
config.save(""usergui.backup.properties);
</code></pre>

<p>Refer following link </p>

<p><a href=""http://commons.apache.org/configuration/userguide/howto_filebased.html#File-based_Configurations"" rel=""nofollow"">http://commons.apache.org/configuration/userguide/howto_filebased.html#File-based_Configurations</a></p>

<p>Even, Apache Ant can also help you in manipulating the existing configuration files using your own PropertyHelper Implementation.</p>

<p><a href=""http://ant.apache.org/manual/properties.html#propertyHelper"" rel=""nofollow"">http://ant.apache.org/manual/properties.html#propertyHelper</a></p>

<blockquote>
  <p><strong>EDITED</strong> after response in comments</p>
</blockquote>

<p>Apache configuration do provide extensibility using bean Factory , you need to create the Apache config file httpd.conf domain class yourself , to make it working.</p>

<p>Defining the Apache modules in java you can have a look at Netloony source , service/apache/modules to have an idea on this. </p>

<p><a href=""http://netloony.sourceforge.net/userguide/intro.html"" rel=""nofollow"">http://netloony.sourceforge.net/userguide/intro.html</a></p>

<p>In netloony the config files values are presented in JTable, you need to use any configuration framework to persist it in file.</p>

<p>Hope this helps, I understand there is nothing out of Box in java presently to read apache conf files. I was trying to give a pointer where you can start with..</p>
"
"10030334","<p>Re-write the MessageBodyWriterJSON with this</p>

<pre><code>import javax.ws.rs.core.MediaType; 
import javax.ws.rs.ext.Provider; 

import org.codehaus.jackson.jaxrs.JacksonJsonProvider; 
import org.codehaus.jackson.map.ObjectMapper; 
import org.codehaus.jackson.map.SerializationConfig; 

@Provider 
public class MessageBodyWriterJSON extends JacksonJsonProvider { 
            public MessageBodyWriterJSON (){ 
            } 

        @Override 
            public ObjectMapper locateMapper(Class&lt;?&gt; type, MediaType mediaType) 
        { 
        ObjectMapper mapper = super.locateMapper(type, mediaType); 
        //DateTime in ISO format ""2012-04-07T17:00:00.000+0000"" instead of 'long' format 
            mapper.configure(SerializationConfig.Feature.WRITE_DATES_AS_TIMESTAMPS, false); 
            return mapper; 
        } 
}
</code></pre>
"
"10388275","<p>Probably you are missing a forward slash (<code>/</code>) after update and before question mark.</p>

<p>Current query: </p>

<pre><code>http://localhost:8983/solr/update?stream.body=&lt;delete&gt;&lt;query&gt;*:*&lt;/query&gt;&lt;/delete&gt;&amp;commit=true
</code></pre>

<p>Revised query: </p>

<pre><code>http://localhost:8983/solr/update/?stream.body=&lt;delete&gt;&lt;query&gt;*:*&lt;/query&gt;&lt;/delete&gt;&amp;commit=true
</code></pre>
"
"10506036","<p>Add a flush followed by a <code>Thread.sleep(1)</code>, 99.9% output order will be correct.</p>

<p>For example, this will display as expected.</p>

<pre><code>System.out.println( ""stdout 1"" ); System.out.flush(); Thread.sleep( 1 );
System.err.println( ""stderr 1"" ); System.err.flush(); Thread.sleep( 1 );
System.out.println( ""stdout 2"" ); System.out.flush(); Thread.sleep( 1 );
System.err.println( ""stderr 2"" ); System.err.flush(); Thread.sleep( 1 );
</code></pre>

<p>The only drawback is the sleep for 1 millisecond, i.e. 1/1000 second</p>
"
"3318472","<p>Strings are immutable so You need to do</p>

<pre><code>string = string.replaceAll(""&amp;nbsp;"","""")
</code></pre>
"
"3318559","<p><a href=""http://download.oracle.com/docs/cd/E17476_01/javase/1.5.0/docs/api/java/lang/String.html#replace(char,%20char)"" rel=""nofollow""><code>String.replace(char, char)</code></a> takes <code>char</code> inputs (or <code>CharSequence</code> inputs)</p>

<p><a href=""http://download.oracle.com/docs/cd/E17476_01/javase/1.5.0/docs/api/java/lang/String.html#replaceAll(java.lang.String,%20java.lang.String)"" rel=""nofollow""><code>String.replaceAll(String, String)</code></a> takes <code>String</code> inputs and matches by regular expression.</p>

<p>For example:</p>

<pre><code>String origStr = ""bat"";
String newStr = str.replace('a', 'i');
// Now:
// origStr = ""bat""
// newStr = ""bit""</code></pre>

<p>The key point is that the return value contains the new edited <code>String</code>.  The original <code>String</code> variable that invokes <code>replace()</code>/<code>replaceAll()</code> doesn't have its contents changed.</p>

<p>For example:</p>

<pre><code>String origStr = ""how&amp;nbsp;are&amp;nbsp;you?"";
String newStr = origStr.replaceAll(""&amp;nbsp;"","" "");
String anotherStr = origStr.replaceAll(""&amp;nbsp;"","""");
// origStr = ""how&amp;nbsp;are&amp;nbsp;you?""
// newStr = ""how are you?""
// anotherStr = howareyou?""
</code></pre>
"
"3318593","<p><code>String</code>s in Java are immutable. You have to do:</p>

<pre><code>String newStr = cleaned.replaceAll(""&amp;nbsp;"", """");
</code></pre>
"
"11104652","<p>Sometimes, if you got errors in the referenced source files, then the bindings to these types are not resolved. For instance, make sure that you use the correct encoding and Java version of the source.</p>

<pre><code>    ASTParser parser = ASTParser.newParser(AST.JLS3);
    parser.setKind(ASTParser.K_COMPILATION_UNIT);
    parser.setResolveBindings(true);
    parser.setBindingsRecovery(true);
    Hashtable&lt;String, String&gt; options = JavaCore.getDefaultOptions();
    options.put(JavaCore.COMPILER_SOURCE, JavaCore.VERSION_1_6);
    parser.setCompilerOptions(options);
    parser.setEnvironment(classpath, sources, new String[] { ""UTF-8"", ""UTF-8"" }, true);
    parser.setSource(fileContents.toCharArray());
    CompilationUnit compilationUnit = (CompilationUnit) parser.createAST(null);
    IProblem[] problems = compilationUnit.getProblems();
    if (problems != null &amp;&amp; problems.length &gt; 0) {
        logger.warn(""Got {} problems compiling the source file: "", problems.length);
        for (IProblem problem : problems) {
            logger.warn(""{}"", problem);
        }
    }
    return compilationUnit;
</code></pre>
"
"12020618","<p>I have tried them all: they don't help. The BEST way ever is to make a new table model without the column you want to delete. This is how you do it:</p>

<pre><code>table = (DefaultTableModel) &lt;table name&gt;.getModel();
DefaultTableModel table1 = new DefaultTableModel();
Vector v = table.getDataVector();
Vector v1 = newvector(v,&lt;column index you want to delete&gt;);

Vector newvector(Vector v,int j){
    Vector v1= new Vector();
    try{
        Vector v2;
        Object[] o = v.toArray();
        int i =0;
        while(i&lt;o.length){
            v2 = (Vector) o[i];
            v2.remove(j);
            v1.add(v2);
            i++;
        }
    }
    catch(Exception e){
        JOptionPane.showMessageDialog(null,""Error in newvector \n""+e);
    }
    return v1;
}

Vector getColumnIdentifiers(int i) {
    Vector columnIdentifiers = new Vector();
    int j=0;
    while(j&lt;i){
        columnIdentifiers.add((""c""+(j+1)));
        j++;
    }
    return columnIdentifiers;
}
table1.setDataVector(v1,getColumnIdentifiers((&lt;column count&gt;-1)));
&lt;table name&gt;.setModel(table1);
</code></pre>
"
"12592313","<pre><code>import java.util.HashSet;
import java.util.Set;
import java.util.TreeSet;

public class HashTreeSetCompare {

    //It is generally faster to add elements to the HashSet and then
    //convert the collection to a TreeSet for a duplicate-free sorted
    //Traversal.

    //really? 
    O(Hash + tree set) &gt; O(tree set) ??
    Really???? Why?



    public static void main(String args[]) {

        int size = 80000;
        useHashThenTreeSet(size);
        useTreeSetOnly(size);

    }

    private static void useTreeSetOnly(int size) {

        System.out.println(""useTreeSetOnly: "");
        long start = System.currentTimeMillis();
        Set&lt;String&gt; sortedSet = new TreeSet&lt;String&gt;();

        for (int i = 0; i &lt; size; i++) {
            sortedSet.add(i + """");
        }

        //System.out.println(sortedSet);
        long end = System.currentTimeMillis();

        System.out.println(""useTreeSetOnly: "" + (end - start));
    }

    private static void useHashThenTreeSet(int size) {

        System.out.println(""useHashThenTreeSet: "");
        long start = System.currentTimeMillis();
        Set&lt;String&gt; set = new HashSet&lt;String&gt;();

        for (int i = 0; i &lt; size; i++) {
            set.add(i + """");
        }

        Set&lt;String&gt; sortedSet = new TreeSet&lt;String&gt;(set);
        //System.out.println(sortedSet);
        long end = System.currentTimeMillis();

        System.out.println(""useHashThenTreeSet: "" + (end - start));
    }
}
</code></pre>
"
"13050922","<p>You can do so by overriding hashcode as given below:</p>

<pre><code>public class Test  
{  
    static int a=0;  

    @Override  
    public int hashCode()  
    {  
        a++;  
        return a;  
    }

    public static void main(String[] args)
    {
        Set&lt;Test&gt; s=new HashSet&lt;Test&gt;();
        Test t1=new Test();
        Test t2=t1;
        s.add(t1);
        s.add(t2);
        System.out.println(s);
        System.out.println(""--Done--"");
    }
}
</code></pre>
"
"3465681","<p>use <code>string.replace("","","""");</code></p>

<p>i.e. your code should look like -</p>

<pre><code>double hectare = Double.parseDouble(cultivationSize.replaceAll("","",""""));
</code></pre>
"
"13370775","<p>Abandoning streams will cause idle TCP connections. The response stream should be read completely. Another thing I overlooked initially, and have seen overlooked in most answers on this topic is forgetting to deal with the error stream in case of exceptions. Code similar to this fixed one of my apps that wasn't releasing resources properly:</p>

<pre><code>HttpURLConnection connection = (HttpURLConnection)new URL(uri).openConnection();
InputStream stream = null;
BufferedReader reader = null;
try {
        stream = connection.getInputStream();
        reader = new BufferedReader(new InputStreamReader(stream, Charset.forName(""UTF-8"")));

        // do work on part of the input stream

} catch (IOException e) {

    // read the error stream
    InputStream es = connection.getErrorStream();
    if (es != null) {
        BufferedReader esReader = null;
        esReader = new BufferedReader(new InputStreamReader(es, Charset.forName(""UTF-8"")));
        while (esReader.ready() &amp;&amp; esReader.readLine() != null) {
        }
        if (esReader != null)
            esReader.close();
    }

    // do something with the IOException
} finally {

    // finish reading the input stream if it was not read completely in the try block, then close
    if (reader != null) {
        while (reader.readLine() != null) {
        }
        reader.close();
    }

    // Not sure if this is necessary, closing the buffered reader may close the input stream?
    if (stream != null) {
        stream.close();
    }

    // disconnect
    if (connection != null) {
        connection.disconnect();
    }
}
</code></pre>

<p>The buffered reader isn't strictly necessary, I chose it because my use case required reading one line at a time.</p>

<p>See also: <a href=""http://docs.oracle.com/javase/1.5.0/docs/guide/net/http-keepalive.html"" rel=""nofollow"">http://docs.oracle.com/javase/1.5.0/docs/guide/net/http-keepalive.html</a></p>
"
"13478017","<pre><code>            if (v &lt;= 10)
                return size;
            else {
                size = 1;

                if (v &gt; 145)
                    return size;
                else if (v &gt; 117)
                    return ++size;
                else if (v &gt; 68)
                    return (size+2);
                else if (v &gt; 51)
                    return (size+3);
                else if (v &gt; 22)
                    return (size+4);
                else if (v &gt; 10)
                    return (size+5);
            }
</code></pre>

<p>This will execute the necessary if statements only.</p>
"
"13629643","<pre><code>public class SET { 

    public static void main(String[] args) { 
        Set set=new HashSet(); 
        set.add(new AB(10, ""pawan@email"")); 
        set.add(new AB(10, ""pawan@email"")); 
        set.add(new AB(10, ""pawan@email"")); 
        Iterator it=set.iterator(); 
        while(it.hasNext()){ 
            Object o=it.next(); 
            System.out.println(o);
        }
    }
} 

public class AB{ 

    int id;
    String email;

    public AB() { 
        System.out.println(""DC"");
    } 

    AB(int id,String email){ 
        this.id=id;
        this.email=email;
    } 

    @Override public String toString() { 
        // TODO Auto-generated method stub return """"+id+""\t""+email;}
    }
}
</code></pre>
"
"3490014","<ul>
<li><p>You class must be named ""thesame"" if you store it in a file called ""thesame.java"", as you have.   Either rename your class to ""thesame"" or change the file to be ""apples.java"".</p></li>
<li><p>You should move the ""[]"" to be before ""args"".  So, <code>String[] args</code>.</p></li>
<li><p>Either select ""apples"" at the bottom of the menu you posted and run it, or right-click on the Java file and make it the default thing to run for this project.  Or launch it by right-clicking on the file and selecting ""run"".</p></li>
</ul>
"
"13637063","<p>Yet another variation (less pronounced than the answer by <a href=""http://stackoverflow.com/a/3902142/544463"">George</a>)</p>

<pre><code>  //int v = 9;
  int[] arr = {145, 117, 68, 51, 22, 10};
  int size = 7; for(;7 - size &lt; arr.length &amp;&amp; v - arr[size - 2] &gt; 0; size--) {};
  return size;
</code></pre>
"
"3491716","<p>If you have d1 and d2 as your dates, the best solution is probably the following:</p>

<pre><code>int days1 = d1.getTime()/(60*60*24*1000);//find the number of days since the epoch.
int days2 = d2.getTime()/(60*60*24*1000);
</code></pre>

<p>then just say</p>

<pre><code>days2-days1
</code></pre>

<p>or whatever</p>
"
"3495756","<pre><code>null instanceof T
</code></pre>

<p>is true for any type T.</p>
"
"14025119","<pre><code>textfield.addKeyListener(new KeyAdapter()
{
      public void keyTyped(KeyEvent ke)
{


    char c = ke.getKeyChar();
    if((!(Character.isDigit(c))) &amp;&amp; // Only digits
    (c ! '\b') ) // For backspace
    {
         ke.consume();
    }
 }

public void keyReleased(KeyEvent e){}
public void keyPressed(KeyEvent e){}
}); 
</code></pre>
"
"14385259","<pre><code>private void WaitTimer(long ms)
{
    long t = 0;
    long x = System.currentTimeMillis();

    while(t &lt; ms)
    {
       t = System.currentTimeMillis() - x;
    }
}
</code></pre>
"
"14419212","<p>I use interface constants when dealing with shared constants between classes.</p>

<pre><code>public interface TestConstants
{
    String RootLevelConstant1 = ""RootLevelConstant1"";

    interface SubGroup1
    {
        String SubGroupConstant1 = ""SubGroup1Constant1"";
        String SubGroupConstant2 = ""SubGroup1Constant2"";
    }

    interface SubGroup2
    {
        String SubGroupConstant1 = ""SubGroup2Constant1"";
        String SubGroupConstant2 = ""SubGroup2Constant2"";
    }
}
</code></pre>

<p>The grouping is a huge asset, especially with a large set of constants.  </p>

<p>To use, you simply chain them together:</p>

<pre><code>System.out.println(TestConstants.SubGroup1.SubGroupConstant1);
System.out.println(TestConstants.SubGroup2.SubGroupConstant1);
System.out.println(TestConstants.RootLevelConstant1);
</code></pre>
"
"14478989","<pre><code>int n1 = 12; // you can make the user insert n1,n2 using Scanner or JOptionPane
int n2 = 26;
int gcd = 1;
int k = 1;

while ((k &lt;= n1) &amp;&amp; (k &lt;= n2)) {
    if ((n1 % k == 0) &amp;&amp; (n2 % k == 0)) {
        gcd = k;
    }
    k++;
}

System.out.print(""The Greatest Common divisor of The Two numbers IS :   "" + gcd);
</code></pre>
"
"14577274","<p>I encountered the same problem and came up with the following solution (it should implement the Set interface but not all methods are here)</p>

<pre><code>public class MySet&lt;T&gt; implements Set&lt;T&gt;{

    private HashMap&lt;T,T&gt; items = new HashMap&lt;T,T&gt;();


    public boolean contains(Object item) 
    {
        return items.containsKey(item);
    }

    public boolean add(T item) 
    {
        if (items.containsKey(item))
            return false;
        else
        {
            items.put(item, item);
            return true;
        }
    }

    public T get(T item) 
    {
        return items.get(item);
    }
}
</code></pre>
"
"3541156","<p>CMake has no concept of dependencies (only on dependencies of sources to object files or shared libraries) but not on the artifact level (like jar's in Java) or RPM's etc. I would call this a module dependencies. CMake does not has a concept of transitive dependencies etc. 
CMake has no concept of defined structure of a project (Convention over configuration). CMake has no concept of a repository (like Maven has). CMake has no support of Unit/Integration tests integrated. No defined build life cycle. CMake has no concept of Release Management (which maven has) etc. </p>

<pre><code>but it still doesn't give so much flexibility as cmake at all!
</code></pre>

<p>What exactly do you miss here in Maven?</p>
"
"15396772","<p>Here's one way, which I've had to use once or twice:</p>

<pre><code>public abstract class GenericClass&lt;T&gt;{
    public abstract Class&lt;T&gt; getMyType();
}
</code></pre>

<p>Along with</p>

<pre><code>public class SpecificClass extends GenericClass&lt;String&gt;{

    @Override
    public Class&lt;String&gt; getMyType(){
        return String.class;
    }
}
</code></pre>
"
"15559135","<p>I do it this way using a StringBuilder:</p>

<pre><code>public static String join(String[] source, String delimiter) {
    if ((null == source) || (source.length &lt; 1)) {
        return """";
    }

    StringBuilder stringbuilder = new StringBuilder();
    for (String s : source) {
        stringbuilder.append(s + delimiter);
    }
    return stringbuilder.toString();
} // join((String[], String)
</code></pre>
"
"15617046","<p>Modulo API consistency, why JUnit didn't provide <code>assertNotEquals()</code> is the same reason why JUnit never provided methods like</p>

<ul>
<li><code>assertStringMatchesTheRegex(regex, str)</code> vs. <code>assertStringDoesntMatchTheRegex(regex, str)</code></li>
<li><code>assertStringBeginsWith(prefix, str)</code> vs. <code>assertStringDoesntBeginWith(prefix, str)</code></li>
</ul>

<p>i.e. there's no end to providing a specific assertion methods for the kinds of things you might want in your assertion logic!</p>

<p>Far better to provide composable test primitives like <code>equalTo(...)</code>, <code>is(...)</code>, <code>not(...)</code>, <code>regex(...)</code> and let the programmer piece those together instead for more readability and sanity.</p>
"
"3582872","<p><code>Serializable</code> is NOT an <code>A</code>, so it throws <code>ClassCastException</code>.</p>
"
"15778990","<p>You can try:</p>

<pre><code>String beforeAndAfter = ""%"" + yourVariable + ""%"";
</code></pre>
"
"15902842","<blockquote>
  <p>There is simple shorthand technique I use most of the times..</p>
</blockquote>

<pre><code>String op = new String;
for (int i : is) 
{
    op += candidatesArr[i-1]+"","";
}
op = op.substring(0, op.length()-1);
</code></pre>
"
"16011142","<p>Create this <code>class</code>: </p>

<pre><code>public class StdOutErrLog {

private static final Logger logger = Logger.getLogger(StdOutErrLog.class);

public static void tieSystemOutAndErrToLog() {
    System.setOut(createLoggingProxy(System.out));
    System.setErr(createLoggingProxy(System.err));
}

public static PrintStream createLoggingProxy(final PrintStream realPrintStream) {
    return new PrintStream(realPrintStream) {
        public void print(final String string) {
            logger.info(string);
        }
        public void println(final String string) {
            logger.info(string);
        }
    };
}
}
</code></pre>

<p>Call this in your code</p>

<pre><code>StdOutErrLog.tieSystemOutAndErrToLog();
</code></pre>
"
"16204945","<p>work with all https</p>

<pre><code>httpClient = new DefaultHttpClient();

SSLContext ctx = SSLContext.getInstance(""TLS"");
X509TrustManager tm = new X509TrustManager() {
    public void checkClientTrusted(X509Certificate[] xcs, String string) throws CertificateException { }

    public void checkServerTrusted(X509Certificate[] xcs, String string) throws CertificateException { }

    public X509Certificate[] getAcceptedIssuers() {
        return null;
    }
};

ctx.init(null, new TrustManager[]{tm}, null);
SSLSocketFactory ssf = new SSLSocketFactory(ctx, SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);

httpClient.getConnectionManager().getSchemeRegistry().register(new Scheme(""https"", 443, ssf));
</code></pre>
"
"3615923","<p>because <code>number</code> is not volatile, and <code>getInt()</code> is not synchronized, <code>getInt()</code> may return stale values. For more information, read about the java memory model.</p>
"
"16454176","<p>If no zero argument constructor of an object  it will also create an object and it will not throw any exception, please find the below code snippets. </p>

<pre><code>try {
    Class o = Class.forName(""com.myCompany.MyClass"");

    Constructor m = o.getConstructor(Integer.class,String.class);
    m.newInstance(new Integer(0),new String(""""));

} catch (ClassNotFoundException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
} catch (InstantiationException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
} catch (IllegalAccessException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
} catch (SecurityException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
} catch (NoSuchMethodException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
} catch (IllegalArgumentException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
} catch (InvocationTargetException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
}
</code></pre>
"
"3634769","<p>you can use this simple code to remove all html tags...</p>

<pre><code>htmlString.replaceAll(""\\&lt;.*?\\&gt;"", """"))
</code></pre>
"
"17312956","<pre><code>    import java.io.*;
    class BufferedInputStream
    {
            public static void main(String arg[])throws IOException
            {
                FileInputStream fin=new FileInputStream(""abc.txt"");
                BufferedInputStream bis=new BufferedInputStream(fin);
                int size=bis.available();
                while(true)
                {
                        int x=bis.read(fin);
                        if(x==-1)
                        {
                                bis.mark(size);
                                System.out.println((char)x);
                        }
                }
                        bis.reset();
                        while(true)
                        {
                                int x=bis.read();
                                if(x==-1)
                                {
                                    break;
                                    System.out.println((char)x);
                                }
                        }

            }

    }
</code></pre>
"
"17526301","<p>Simply use this - </p>

<pre><code>public DefaultHttpClient wrapClient(HttpClient base) {
    try {
        SSLContext ctx = SSLContext.getInstance(""TLS"");
        X509TrustManager tm = new X509TrustManager() {
        public void checkClientTrusted(X509Certificate[] xcs, String string) throws CertificateException { }

        public void checkServerTrusted(X509Certificate[] xcs, String string) throws CertificateException { }

        public X509Certificate[] getAcceptedIssuers() {
            return null;
        }
    };
    ctx.init(null, new TrustManager[]{tm}, null);
    SSLSocketFactory ssf = new SSLSocketFactory(ctx);
    ssf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
    ClientConnectionManager ccm = base.getConnectionManager();
    SchemeRegistry sr = ccm.getSchemeRegistry();
    sr.register(new Scheme(""https"", ssf, 443));
    return new DefaultHttpClient(ccm, base.getParams());
} catch (Exception ex) {
    return null;
}
}
</code></pre>
"
"3673686","<p>All top level classes are implicitly <code>static</code>, meaning they can be accessed by everybody. So it makes sense only to make inner classes optionally <code>static</code>.</p>
"
"17630306","<p>try it like follow:</p>

<pre><code>    public Bitmap stringtoBitmap(String string) {
    Bitmap bitmap = null;
    try {
        YuvImage yuvimage = new YuvImage(base64.getBytes(),ImageFormat.YUY2, 120, 30, null);
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        yuvimage.compressToJpeg(new Rect(0, 0, 20, 20), 100, baos);
        byte[] jdata = baos.toByteArray();
        bitmap = BitmapFactory.decodeByteArray(jdata, 0, jdata.length);
    } catch (Exception e) {

    }
    return bitmap;
}
</code></pre>
"
"17981472","<p>That is correct - LinkedList is not synchronized and thus not thread safe. If you do not want to use the newer synchronized analogies of LinkedList, namely, ConcurrentLinkedQueue or LinkedBlockingQueue, you can initialize LinkedList like this:</p>

<pre><code>LinkedList&lt;RawDataset&gt; samples = (LinkedList)Collections.synchronizedList(new LinkedList&lt;RawDataset&gt;());
</code></pre>
"
"18246204","<p>I usually do it by creating a code formatter by copying the built in eclipse formatter, here:</p>

<pre><code>Windows &gt; Preferences &gt; Java &gt; Code Style &gt; Formatter 
</code></pre>

<p>Select the profile that you have just created. and click on Edit and go to ""Braces"" tab.</p>

<p>Change the braces placement as you like (it's a WYSIWYG kind of editor, makes it easy) .</p>

<p>When I need to format, I just select all the text and <code>Ctrl+Shift+F</code> and it works fine for me.</p>
"
"3701397","<p>Just something very usefull for a webcrawler is to use the PHP Fork function.</p>

<pre><code>pcntl_fork
</code></pre>

<p>Then you can give some tasks your crawler has to do to children,</p>

<p>Pcntl_fork will increase the speed of your crawler if you apply it the good way!</p>

<p>pcntl_fork let you be able to split your tasks to multiple processes, now 1 process is running and have to do everything written in your crawlingscript.</p>

<p>I saw you're using JAVA , maybe their is some workaround to get something like the fork function.</p>

<p>Second your ISP is the first problem you will reconize: Your connectionspeed! <br>
You also have the problem when you send to much requests within a limit of time at some site they will ban your IP-Address and its game-over on that site.</p>
"
"18848086","<p>There a many answers above but I wasn't able to get any of them working correctly (with my limited time), so for anyone else in the same situation you can try the code below which worked perfectly for my java testing purposes:</p>

<pre><code>    public static HttpClient wrapClient(HttpClient base) {
    try {
        SSLContext ctx = SSLContext.getInstance(""TLS"");
        X509TrustManager tm = new X509TrustManager() {
            public void checkClientTrusted(X509Certificate[] xcs, String string) throws CertificateException { }

            public void checkServerTrusted(X509Certificate[] xcs, String string) throws CertificateException { }

            public X509Certificate[] getAcceptedIssuers() {
                return null;
            }
        };
        ctx.init(null, new TrustManager[]{tm}, null);
        SSLSocketFactory ssf = new SSLSocketFactory(ctx);
        ssf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
        ClientConnectionManager ccm = base.getConnectionManager();
        SchemeRegistry sr = ccm.getSchemeRegistry();
        sr.register(new Scheme(""https"", ssf, 443));
        return new DefaultHttpClient(ccm, base.getParams());
    } catch (Exception ex) {
        return null;
    }
}
</code></pre>

<p>and call like:</p>

<pre><code>DefaultHttpClient baseClient = new DefaultHttpClient();
HttpClient httpClient = wrapClient(baseClient );
</code></pre>

<p>Reference: <a href=""http://tech.chitgoks.com/2011/04/24/how-to-avoid-javax-net-ssl-sslpeerunverifiedexception-peer-not-authenticated-problem-using-apache-httpclient/"" rel=""nofollow"">http://tech.chitgoks.com/2011/04/24/how-to-avoid-javax-net-ssl-sslpeerunverifiedexception-peer-not-authenticated-problem-using-apache-httpclient/</a></p>
"
"19022123","<p><strong>Multiplication with shift and add</strong> is easy </p>

<ul>
<li>saw some solutions here but not explained </li>
<li>so here it is in full</li>
<li>basic formula: <strong>a * b = c</strong> </li>
<li>rewrite <strong>b</strong> to binary number form</li>
<li>for 32 bit numbers you get: </li>
<li><strong>a * ( b0*(2^0) + b1*(2^1) + ... + b31*(2^31) ) = c</strong></li>
<li><strong>2^i</strong> is the same as <strong>1 &lt;&lt; i</strong></li>
<li><strong>b0,...,b31</strong> are the bits from <strong>b</strong></li>
</ul>

<p>Now the obvious code (tested for unsigned 32bit ints):</p>

<pre><code>DWORD mul(DWORD a,DWORD b)
    {
    DWORD c=0,i,m;
    for (m=1,i=0;i&lt;32;i++,m&lt;&lt;=1,a&lt;&lt;=1)
     if (DWORD(b&amp;m))
      c+=a;
    return c;
    }
</code></pre>

<p>and also can be further optimized </p>

<ul>
<li>reset all used bits in b </li>
<li>then the loop can end if b==0 </li>
<li>so no need for i</li>
<li>for more speed also a>=b so swap them if not (less bits of b means less iterations)</li>
</ul>

<p>optimized code</p>

<pre><code>DWORD mul(DWORD a,DWORD b)
    {
    DWORD c;
    if (a&lt;b) { c=a; a=b; b=c; }
    for (c=0;b;b&gt;&gt;=1,a&lt;&lt;=1)
     if (DWORD(b&amp;1))
      c+=a;
    return c;
    }
</code></pre>

<p>if you need bigint multiplication have a look here <a href=""http://stackoverflow.com/questions/18465326/fast-bignum-square-computation"">Fast bignum square computation</a></p>

<ul>
<li>there are some ideas</li>
<li>the use of NTT is also possible </li>
<li>have speed it up 40x times so its usable, but still for veeeery big numbers</li>
<li>for more info look here <a href=""http://stackoverflow.com/questions/18577076/ntt-finite-field-dft-optimization"">NTT (finite field DFT) optimization</a></li>
</ul>

<p>if you need signed numbers then handle signum separately</p>

<pre><code>int mul(int a,int b)
    {
    int c,s;
    s=+1;
    if (a&lt;0) { s=-s; a=-a; }
    if (b&lt;0) { s=-s; b=-b; }
    if (a&lt;b) { c=a; a=b; b=c; }
    for (c=0;b;b&gt;&gt;=1,a&lt;&lt;=1)
     if (DWORD(b&amp;1))
      c+=a;
    if (s&lt;0) c=-c;
    return c;
    }
</code></pre>

<p>And last but not least <strong>Do not forget about OVERFLOW !!!</strong></p>

<ul>
<li>(n0)bits * (n1)bits = (n0+n1)bits</li>
<li>to avoid overflow you need to use 2N-bit shift and add arithmetics</li>
<li>so the result is also 2N-bit long</li>
</ul>

<p>hope it helps</p>
"
"19366597","<p>If you choose to work with Joda DateTime objects on your server and want to serialize to ISO8601 you could use <a href=""https://github.com/FasterXML/jackson-datatype-joda"" rel=""nofollow"">Jackson's JodaModule</a>. You can register a Jersey Provider as follows:</p>

<pre><code>import javax.ws.rs.ext.ContextResolver;
import javax.ws.rs.ext.Provider;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.datatype.joda.JodaModule;

@Provider
public class MyObjectMapperProvider implements ContextResolver&lt;ObjectMapper&gt; {

  final ObjectMapper objectMapper;

  public MyObjectMapperProvider() {
    objectMapper = new ObjectMapper();
    /* Register JodaModule to handle Joda DateTime Objects. */
    objectMapper.registerModule(new JodaModule());
    /* We want dates to be treated as ISO8601 not timestamps. */
    objectMapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);
  }

  @Override
  public ObjectMapper getContext(Class&lt;?&gt; arg0) {
    return objectMapper;
  }
}
</code></pre>

<p>More information available on <a href=""https://jersey.java.net/documentation/latest/user-guide.html#json.jackson"" rel=""nofollow"">Jersey's website</a>.</p>
"
"19610200","<pre><code>&lt;c:if test=""${fn:contains(task.subscribers, customer)}""&gt;
</code></pre>

<p>This works fine for me.</p>
"
"20035532","<p>The % going to give us the gcd Between two numbers, it means:-
% or mod of big_number/small_number are =gcd,
and we write it on java like this  <code>big_number % small_number</code>.</p>

<p>EX1: for two integers</p>

<pre><code>  public static int gcd(int x1,int x2)
    {
        if(x1&gt;x2)
        {
           if(x2!=0)
           {
               if(x1%x2==0)     
                   return x2;
                   return x1%x2;
                   }
           return x1;
           }
          else if(x1!=0)
          {
              if(x2%x1==0)
                  return x1;
                  return x2%x1;
                  }
        return x2;
        } 
</code></pre>

<p>EX2: for three integers</p>

<pre><code>public static int gcd(int x1,int x2,int x3)
{

    int m,t;
    if(x1&gt;x2)
        t=x1;
    t=x2;
    if(t&gt;x3)
        m=t;
    m=x3;
    for(int i=m;i&gt;=1;i--)
    {
        if(x1%i==0 &amp;&amp; x2%i==0 &amp;&amp; x3%i==0)
        {
            return i;
        }
    }
    return 1;
}
</code></pre>
"
"20304911","<pre><code>    function shuffle(str) {
      return str.split("""").sort(function () {return Math.random()-0.5}).join("""");
    }
</code></pre>

<p>This is the easiest way to shuffle a string. The function call sorts ascending when positive or descending when negative. The Math.random function yields numbers between 0 and 1 and when 0.5 is subtracted, the result is randomly positive or negative. Thus pairs are randomly put in descending or ascending order. The split function converts a string into an array and the join function puts the final array back into a string.</p>

<p>Hope that helps </p>
"
"3785965","<p>Instead of a long running loop (as suggested by nanda), it's probably faster and easier to simply create a huge primitive array to allocate more memory than available to the VM, then catch and ignore the OutOfMemoryError:</p>

<pre><code>    try {
        long[] foo = new long[Integer.MAX_VALUE];
    }
    catch(OutOfMemoryError e) {
        // ignore
    }
</code></pre>

<p>This will clear all weak and soft references, unless your VM has more than 16GB heap available.</p>
"
"3789292","<p>I just do this to clear out the cache headers set by the web container and it has worked fine</p>

<pre><code>response.reset(); //workaround IE restriction against streaming to cache from SSL
response.setContentType(""myMIMEType"");
response.setHeader(""Content-Disposition"", ""attachment; filename=\"""" + whateverGoesHere + ""\"""");
</code></pre>

<p>Then send the file to output stream.  Obviously if you want it rendered inside the browser window rather than a file save dialog, you wouldn't put do the <code>attachment;</code> disposition type.</p>
"
"3790327","<p>Try using:</p>

<pre><code>Pragma: no-cache
</code></pre>

<p>From the <a href=""http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.32"" rel=""nofollow"">HTTP Spec</a></p>
"
"21327842","<p>public class NumberToKhmerWords</p>

<p>{</p>

<pre><code>  static public boolean HelperConvertNumberToText(int num, String[] result)

  {

      String [] strones = {

              ""មួយ"", ""ពីរ"", ""បី"", ""បួន"", ""ប្រាំ"", ""ប្រាំមួយ"", ""ប្រាំពីរ"", ""ប្រាំបី"",

              ""ប្រាំបួន"", ""ដប់"", ""ដប់មួយ"", ""ដប់ពីរ"", ""ដប់បី"", ""ដប់បួន"",

              ""ដប់ប្រាំ"", ""ដប់ប្រាំមួយ"", ""ដប់ប្រាំពីរ"", ""ដប់ប្រាំបី"", ""ដប់ប្រាំបួន"",

            };



      String [] strtens = {

          ""ដប់"", ""ម្ភៃ"", ""សាមសឺប"", ""សែសឺប"", ""ហាសឺប"", ""ហុកសឺប"",

          ""ចិតសឺប"", ""ប៉ែតសឺប"", ""កៅសឺប"", ""មួយរយ""

      };



      result[0] = """";

      int single, tens, hundreds;



      if(num &gt; 1000)

          return false;



      hundreds = num / 100;

      num = num - hundreds * 100;

      if( num &lt; 20)

      {

          tens = 0; // special case

          single = num;

      }

      else

      {

          tens = num / 10;

          num = num - tens * 10;

          single = num;

      }



      if(hundreds &gt; 0)

      {

         result[0] += strones[hundreds-1];

         result[0] += ""រយ"";

      }

      if(tens &gt; 0)

      {

         result[0] += strtens[tens - 1];

         result[0] += """";

      }

      if(single &gt; 0)

      {

         result[0] += strones[single - 1];

         result[0] += """";

      }

      return true;

  }



  static public boolean ConvertNumberToText(int num, String[] result)

  {

      String tempString[] = new String[1];

      tempString[0] = """";

      int thousands;

      int temp;

      result[0] = """";

      if(num &lt; 0 || num &gt; 100000)

      {

          System.out.println(num + "" \tNot Supported"");

          return false;

      }



      if( num == 0)

      {

         System.out.println(""សូន្យ"");

         return false;

      }



      if(num &lt; 1000)

      {  

          HelperConvertNumberToText(num, tempString);

          result[0] += tempString[0];

      }

      else

      {

          thousands = num / 1000;

          temp = num - thousands * 1000;

          HelperConvertNumberToText(thousands, tempString);

          result[0] += tempString[0];

          result[0] += ""ពាន់"";             

          HelperConvertNumberToText(temp, tempString);

          result[0] += tempString[0];

      }

      return true;

  }
public static String[] convertToString(double value){
      BigDecimal bd = new BigDecimal(Double.toString(value));
      String [] rawSplit = bd.toPlainString().split(""\\."");
      return rawSplit;
  }
public static String getDoubleToword(double value) {
    String afterPoint = """";
    String strWord = """";
    String[] strArray = new String[1];
    strArray = NumberToKhmerWords.convertToString(value);
    String[] result = new String[1];
    result[0] = """";
    String zero = """";
    if (!strArray[1].equals(""0"")) {
        if (NumberToKhmerWords.ConvertNumberToText(
                Integer.parseInt(strArray[1].substring(0, 2)), result)) {
            if (Integer.parseInt(strArray[1].substring(0, 1)) == 0) {
                zero = ""សូន្យ"";
            }
            afterPoint = ""ក្បៀស​"" + zero + result[0];
        }

    }
    if (NumberToKhmerWords.ConvertNumberToText(Integer.parseInt(strArray[0]),
            result)) {
        strWord = result[0] + afterPoint;
    }
    return strWord;
}
</code></pre>

<p>}</p>

<p>// Convert double to khmer word  EX: NumberToKhmerWords.getDoubleToword(39.07) = សាមសឹបប្រាំបួនក្បៀសសូន្យប្រាំពីរ</p>
"
"3846797","<p>Use TemporalType.TIMESTAMP beside your Temporal annonation.</p>

<p>Please check the example below.</p>

<pre><code>@Temporal(TemporalType.TIMESTAMP)
public Date getCreated() {
    return this.created;
}
</code></pre>
"
"21631441","<p>There are two ways to do it..Say <strong>String==null</strong> or <strong>string.equals()</strong>..</p>

<pre><code>public class IfElse {

    public int ifElseTesting(String a){
        //return null;
        return (a== null)? 0: a.length();
    }

}

public class ShortCutifElseTesting {

    public static void main(String[] args) {

        Scanner scanner=new Scanner(System.in);
        System.out.println(""enter the string please:"");
        String a=scanner.nextLine();
        /*
        if (a.equals(null)){
            System.out.println(""you are not correct"");
        }
        else if(a.equals(""bangladesh"")){
            System.out.println(""you are right"");
        }
        else
            System.out.println(""succesful tested"");

        */
        IfElse ie=new IfElse();
        int result=ie.ifElseTesting(a);
        System.out.println(result);

    }

}
</code></pre>

<p>Check this example..Here is an another example of shortcut version of If Else..</p>
"
"21753886","<p>for loop is same like loop in javascript so no need to afraid</p>

<p>example:</p>

<pre><code>for(int i=0;i&lt;10;i++)
{
    System.out.Println(i);
}
</code></pre>
"
"3874454","<p>Does this help?</p>

<pre><code>Boolean equal = (temp == answers[i]);
</code></pre>

<p>I'm not sure that would be an issue, but I always enclose my conditions in parenthesis.</p>
"
"3874671","<p>As others have shown you should use <code>equals</code>.</p>

<p>But I would also use the <code>booleanValue</code> of the Boolean object.</p>

<p>Here is your code correctly done</p>

<pre><code>String temp = """"+(num1*num2);
Boolean equal = temp.equals(answers[i]);

if(equal.booleanValue()) {
    correct[i] = true;
    num_correct ++;
}else{
    correct[i] = false;
}
</code></pre>
"
"22350055","<pre><code>Iterator&lt;Map.Entry&lt;String,String&gt;&gt; iterator = map.entrySet().iterator();
while (iterator.hasNext()) {
    Map.Entry&lt;String,String&gt; entry = iterator.next();
    if (entry.getValue().equals(value_you_look_for)) {
        String key_you_look_for = entry.getKey();
}
} 
</code></pre>
"
"22918499","<p>I had the same error. Setting the system property</p>

<pre><code>-Dorg.apache.catalina.loader.WebappClassLoader.ENABLE_CLEAR_REFERENCES=false
</code></pre>

<p>solved the symptom.</p>

<p>However, there's probably an underlying error. In my case there was a <code>ClassNotFoundException</code>. Check your tomcat logs.</p>

<p>For explanations see this <a href=""https://issues.apache.org/bugzilla/show_bug.cgi?id=43867#c10"" rel=""nofollow"">bug report</a>, which says it happens during shutdown, but it seems to be the same bug. Also try <a href=""https://tomcat.apache.org/tomcat-6.0-doc/config/systemprops.html"" rel=""nofollow"">this page</a>.</p>
"
"23414191","<p>Why not do you use a simple 'for' ?</p>

<pre><code>            for (int i=n;i&lt;n+1024;i++)
            {
                if(n&lt;44100){
                buffer2[i]=buffer[i];
                }
            }
        }
</code></pre>
"
"23473194","<p>I have used 2 dimensional array...</p>

<pre><code>   import java.util.Scanner;


   public class numberEnglish {
   public static void main(String args[])
        {
    String[ ][ ] aryNumbers = new String[9][4];
    aryNumbers[0][0] = ""one"";
    aryNumbers[0][1] = ""ten"";
    aryNumbers[0][2] = ""one hundred and"";
    aryNumbers[0][3] = ""one thousand"";

    aryNumbers[1][0] = ""two"";
    aryNumbers[1][1] = ""twenty"";
    aryNumbers[1][2] = ""two hundred and"";
    aryNumbers[1][3] = ""two thousand"";

    aryNumbers[2][0] = ""three"";
    aryNumbers[2][1] = ""thirty"";
    aryNumbers[2][2] = ""three hundred and"";
    aryNumbers[2][3] = ""three thousand"";

    aryNumbers[3][0] = ""four"";
    aryNumbers[3][1] = ""fourty"";
    aryNumbers[3][2] = ""four hundred and"";
    aryNumbers[3][3] = ""four thousand"";

    aryNumbers[4][0] = ""five"";
    aryNumbers[4][1] = ""fifty"";
    aryNumbers[4][2] = ""five hundred and"";
    aryNumbers[4][3] = ""five thousand"";

    aryNumbers[5][0] = ""six"";
    aryNumbers[5][1] = ""sixty"";
    aryNumbers[5][2] = ""six hundred and"";
    aryNumbers[5][3] = ""six thousand"";

    aryNumbers[6][0] = ""seven"";
    aryNumbers[6][1] = ""seventy"";
    aryNumbers[6][2] = ""seven hundred and"";
    aryNumbers[6][3] = ""seven thousand"";

    aryNumbers[7][0] = ""eight"";
    aryNumbers[7][1] = ""eighty"";
    aryNumbers[7][2] = ""eight hundred and"";
    aryNumbers[7][3] = ""eight thousand"";

    aryNumbers[8][0] = ""nine"";
    aryNumbers[8][1] = ""ninty"";
    aryNumbers[8][2] = ""nine hundred and"";
    aryNumbers[8][3] = ""nine thousand"";


    //System.out.println(aryNumbers[0] + "" ""+aryNumbers[0] + "" "");

    int number=0;
    Scanner sc = new Scanner(System.in);
    System.out.println("" Enter Number 4 digited number:: "");
    number = sc.nextInt();
    int temp = number;
    int count=1;
    String english="""";
    String tenglish = """";
    if(number == 0)
    {
        System.out.println(""*********"");
        System.out.println(""Zero"");
        System.out.println(""*********"");
        sc.close();
        return;
    }
    while(temp !=0)
    {

        int r = temp%10;
        if(r==0)
        {
            tenglish = "" zero "";
            count++;
        }
        else
        {

            int t1=r-1;
            int t2 = count-1;
            //System.out.println(t1 +"" ""+t2);
            count++;
            tenglish = aryNumbers[t1][t2];

            //System.out.println(aryNumbers[t1][t2]);
        }
        english = tenglish +"" ""+ english;
        temp = temp/10;

    }
    //System.out.println(aryNumbers[0][0]);
    english = english.replace(""ten  zero"", ""ten"");
    english = english.replace(""twenty  zero"", ""twenty"");
    english = english.replace(""thirty  zero"", ""thirty"");
    english = english.replace(""fourty  zero"", ""fourty"");
    english = english.replace(""fifty  zero"", ""fifty"");
    english = english.replace(""sixty  zero"", ""sixty"");
    english = english.replace(""seventy  zero"", ""seventy"");
    english = english.replace(""eighty  zero"", ""eighty"");
    english = english.replace(""ninety  zero"", ""ninety"");

    english = english.replace(""ten one"", ""eleven"");
    english = english.replace(""ten two"", ""twelve"");
    english = english.replace(""ten three"", ""thirteen"");
    english = english.replace(""ten four"", ""fourteen"");
    english = english.replace(""ten five"", ""fifteen"");
    english = english.replace(""ten six"", ""sixteen"");
    english = english.replace(""ten seven"", ""seventeen"");
    english = english.replace(""ten eight"", ""eighteen"");
    english = english.replace(""ten nine"", ""nineteen"");
    english = english.replace("" zero "", """");
    int length = english.length();
    String sub = english.substring(length-6,length-3);
    //System.out.println(length);
    //System.out.println(sub);
    if(sub.equals(""and""))
    {
        //System.out.println(""hello"");
        english=english.substring(0,length-6);
    }
    System.out.println(""********************************************"");
    System.out.println(english);
    System.out.println(""********************************************"");
    sc.close();
}
</code></pre>

<p>}</p>
"
"3950367","<p>Firstly make map synchronized</p>

<pre><code>this.fileservers = Collections.synchronizedMap(Map)
</code></pre>

<p>then use the strategy which is used in Singleton classes </p>

<pre><code>if( time &gt; fileserverTimeout )
    {
        synchronized(this.fileservers)
        {
             if( time &gt; fileserverTimeout )
                  this.fileservers.remove( server );
        }
    }
</code></pre>

<p>Now this makes sure that once you inside the synchronized block, no updates can occur. This is so because once the lock on the map is taken, map(synchronized wrapper) will not have itself available to provide a thread lock on it for update, remove etc.</p>

<p>Checking for time twice makes sure that synchronization is used only when there is a genuine case of delete</p>
"
"3957526","<p>If the <code>java.library.path</code> (assigned using LD_LIBRARY_PATH env. variable) is wrong you should actually get something like: ""failure in load of t2 native library"".</p>

<p>You can check the <code>java.library.path</code> to se if the path is included like this.</p>

<p><code>System.out.println(System.getProperty(""java.library.path""));</code></p>

<p>Could you be missing another jar like <code>db2jcc_license_cu.jar</code></p>

<p>Maybe post your classpath. You can get it by reading the property <code>java.class.path</code> from the coide (like above).</p>
"
"23956619","<pre><code>int[] arr = {10,2,3,4,5,2,3,23,109,209};
int[] temparr = new int[arr.length];
int i;
for(i=0;i&lt;arr.length;i++)
{
    temparr[i] = arr[arr.length-i-1];
    //System.out.println(arr[i]);
}
</code></pre>
"
"3981460","<p>That doesn't work because the call to <code>shuffle</code> is operating on the <code>List</code> returned by <code>Arrays.asList</code>, not on the underlying array. Thus, when you iterate over the array to print out the values, nothing has changed. What you want to do is save a reference to the <code>List</code> returned by <code>Arrays.asList</code>, and then print out the values of that <code>List</code> (rather than the values of the array) after you <code>shuffle</code> it.</p>
"
"3981482","<p>Store the list resturned by Arrays.asList and shuffle that...</p>

<pre><code>List myShuffledList = Arrays.asList(arr);
Collections.shuffle(myShuffledList);
</code></pre>
"
"24438150","<p>Move to first of next month and subtract a day.</p>

<pre><code>Calendar  cal=Calendar.getInstance();
cal.add(Calendar.MONTH,1);
cal.set(Calendar.DAY_OF_MONTH,1);
cal.add(Calendar.DATE, -1);
</code></pre>
"
"24443685","<pre><code>import java.util.Scanner;

public class SeparatingDigits {

    public static void main( String[] args )
    {

        System.out.print( ""Enter the digit to print separately :- "");
        Scanner scan = new Scanner( System.in );

        int element1 = scan.nextInt();
        int divider;

        if( ( element1 &gt; 9999 ) &amp;&amp; ( element1 &lt;= 99999 ) )
        {
            divider = 10000;
        }
        else if( ( element1 &gt; 999 ) &amp;&amp; ( element1 &lt;= 9999 ) )
        {
            divider = 1000;
        }
        else if ( ( element1 &gt; 99) &amp;&amp; ( element1 &lt;= 999 ) )
        {
            divider = 100;
        }
        else if( ( element1 &gt; 9 ) &amp;&amp; ( element1 &lt;= 99 ) )
        {
            divider = 10;
        }
        else 
        {
            divider = 1;
        }

        quotientFinder( element1, divider );




    }

     public static void quotientFinder( int elementValue, int dividerValue )
     {
         for( int count = 1;  dividerValue != 0; count++)
         {
            int quotientValue = elementValue / dividerValue ;
            elementValue = elementValue % dividerValue ;
            System.out.printf( ""%d  "", quotientValue );

            dividerValue /= 10;

         }
     }
    }
</code></pre>

<p>Without using arrays and Strings . ( digits 1-99999 )</p>

<p>output :</p>

<p>Enter the digit to print separately :- 12345</p>

<p>1  2  3  4  5 </p>
"
"4020221","<p>Oracle's JDK as well as OpenJDK both ship with an AOT Java compiler called <code>javac</code>.</p>
"
"24822569","<p>""sealed and readonly"" cannot used for variables. For variables use <code>const</code> keyword to get an equivalent effect.</p>
"
"25327642","<p>Just in case you use store a variable using the generic type you can easily solve this problem adding a getClassType method as follows:</p>

<pre><code>public class Constant&lt;T&gt; {
  private T value;

  @SuppressWarnings(""unchecked"")
  public Class&lt;T&gt; getClassType () {
    return ((Class&lt;T&gt;) value.getClass());
  }
}
</code></pre>

<p>I use the provided class object later to check if it is an instance of a given class, as follows:</p>

<pre><code>Constant&lt;?&gt; constant = ...;
if (constant.getClassType().equals(Integer.class)) {
    Constant&lt;Integer&gt; integerConstant = (Constant&lt;Integer&gt;)constant;
    Integer value = integerConstant.getValue();
    // ...
}
</code></pre>
"
"4057903","<pre><code>public class Products {
private Brands brand;
...
}
public class Brands {
private long id;
...
}
...

DetachedCriteria dc=DetachedCriteria.forClass(Products.class, ""prod"");

dc.add(Restrictions.ge(""prod.brand.id"", Long.parseLong(""12345"")));
</code></pre>
"
"26194665","<pre><code>public String join(String[] str, String separator){
    String retval = """";
    for (String s: str){ retval+= separator + s;}
    return retval.replaceFirst(separator, """");
}
</code></pre>
"
"26222666","<p>""Java SE8 for Programmers"" claims that the <em>Java</em> will cope with either. (pp. 480, last paragraph).
The example claims that:  </p>

<pre><code>c:\Program Files\Java\jdk1.6.0_11\demo/jfc
</code></pre>

<p>will parse just fine.  Take note of the last (Unix-style) separator.  </p>

<p>It's tacky, and probably error-prone, but it is what they (Deitel and Deitel) claim.  </p>

<p>I think the confusion for people, rather than Java, is reason enough not to use this (mis?)feature.</p>
"
"4115250","<p>Java has no built in <code>sizeof</code> operator. </p>

<p>You could try and use a serialization method, by serializing an object to memory and getting the size of that data, but that wouldn't necessarily be the size you want.</p>

<p>You could also have a method called <code>sizeOf()</code>, like this:</p>

<pre><code>// returns the size of this object in bytes
int sizeOf()
{
     int size = 0;
     size += name.Length * 2; // each character in name is 2 bytes, no?
     size += 4; // for n, which is 32 bits = 4 bytes
}
</code></pre>

<p>Note that this implementation doesn't include the metadata inside name, only the number of bytes necessary to make the <code>char[]</code> for it.</p>
"
"4122511","<pre><code>new DiskFileItem(fieldName, contentType, isFormField, fileName, sizeThreshold, file);
</code></pre>

<p>results in a <code>null</code> value. Look into the <a href=""http://commons.apache.org/fileupload/apidocs/org/apache/commons/fileupload/disk/DiskFileItem.html"" rel=""nofollow"">docs</a> to see what's wrong or maybe you pass some <code>null</code> as parameters</p>
"
"4134174","<p>You want</p>

<pre><code>round(new MathContext(0));  // or perhaps another math context with rounding mode HALF_UP
</code></pre>
"
"27564498","<pre><code>public static int calc(String string){
    int result=0; 
    String numbers=""0123456789"";
    String operations=""+-/*"";
    for (int i=0;i&lt;string.length();i++){
        if (numbers.contains(string.charAt(i)+"""")){
            result=result*10+(Integer.parseInt(string.charAt(i)+""""));
            }
        else {
            if (string.charAt(i)=='+'){ result+=calc(string.substring(i+1));}
            if (string.charAt(i)=='-'){ result-=calc(string.substring(i+1));}
            if (string.charAt(i)=='*'){ result*=calc(string.substring(i+1));}
            if (string.charAt(i)=='/'){ try{result/=calc(string.substring(i+1));}
                catch (ArithmeticException e){
                    System.err.println(""You cannot devide by Zero!"");}
            }  
            break;
        }        
    }
    return result;
}
</code></pre>
"
"4153756","<p>what i understand that you wana eleminate this u can do some thing like </p>

<pre><code>string myString = ""hello example &gt;&gt; hai man"";
string mySecondString = mystring.Replace(""hai man"", """"); 
</code></pre>

<p>You will get only <code>hello example &gt;&gt;</code></p>
"
"28829869","<pre><code>File filePath=new File(""your_file_path"");
String dir="""";
if (filePath.isDirectory())
{
    dir=filePath.getAbsolutePath();
}
else
{
    dir=filePath.getAbsolutePath().replaceAll(filePath.getName(), """");
}
</code></pre>
"
"28853021","<p>I'm following the <a href=""http://www.vogella.com/tutorials/REST/article.html"" rel=""nofollow"">http://www.vogella.com/tutorials/REST/article.html</a> tutorial and get the following when I deploy the final CRUD application.
I'm using the WebContent directory and have set it in my war plugin.
I'm using 1.19 Jersey and 3.1 servlet API versions.</p>

<pre><code>04-Mar-2015 11:10:11.287 INFO [localhost-startStop-1] com.sun.jersey.api.core.ScanningResourceConfig.init No provider classes found.
04-Mar-2015 11:10:11.429 INFO [localhost-startStop-1] com.sun.jersey.server.impl.application.WebApplicationImpl._initiate Initiating Jersey application, version 'Jersey: 1.19 02/11/2015 05:39 AM'
04-Mar-2015 11:10:12.102 SEVERE [localhost-startStop-1] com.sun.jersey.spi.inject.Errors.processErrorMessages The following errors and warnings have been detected with resource and/or provider classes:
  SEVERE: Missing dependency for constructor public com.enigma.restful.TodoService(javax.ws.rs.core.UriInfo,javax.ws.rs.core.Request,java.lang.String) at parameter index 0
  SEVERE: Missing dependency for constructor public com.enigma.restful.TodoService(javax.ws.rs.core.UriInfo,javax.ws.rs.core.Request,java.lang.String) at parameter index 1
  SEVERE: Missing dependency for constructor public com.enigma.restful.TodoService(javax.ws.rs.core.UriInfo,javax.ws.rs.core.Request,java.lang.String) at parameter index 2
</code></pre>
"
"29537016","<p>As <a href=""http://[1]http://stackoverflow.com/users/157882/balusc"">Balusc</a> answered, we cannot get response twice from a single request.</p>

<p>To refresh a page after download, better use the following java script in download link(<code>p:commandbutton</code>) <em>onclick tag</em>.</p>

<p><strong>Example:</strong></p>

<pre><code>&lt;p:commandButton ajax=""false"" icon=""ui-icon-arrowstop-1-s"" onclick=""setTimeout('location.reload();', 1000);"" action=""#{managedBean.downloadMethod}"" /&gt;
</code></pre>

<p>this will automatically refresh the page after 1 second, at the same time i.e. before refresh, you will get the download file, based on your download response time, increase the seconds in that script. <strong>Seconds should not less than that download response time.</strong></p>
"
"30028195","<p>I'm using Windows 8.1 Pro. You can run ""As Administrator"" the CMD. After that, simply, find your jar file and execute it, like that:</p>

<pre><code>C:\yourFile.jar [enter]
</code></pre>
"
"4267607","<p>I do not think that it is possible but you have a good workaround.</p>

<ol>
<li>cut the end of your UUID using substring()</li>
<li>use code <code>new Random(System.currentTimeMillis()).nextInt(99999999);</code>
this will generate random ID up to 8 characters long. </li>
<li><p>generate alphanumeric id:</p>

<pre><code>char[] chars = ""abcdefghijklmnopqrstuvwxyzABSDEFGHIJKLMNOPQRSTUVWXYZ1234567890"".toCharArray();
Random r = new Random(System.currentTimeMillis());
char[] id = new char[8];
for (int i = 0;  i &lt; 8;  i++) {
    id[i] = chars[r.nextInt(chars.length)];
}
return new String(id);
</code></pre></li>
</ol>
"
"4366817","<p>You don't need a constructor:</p>

<pre><code>public class Dummy
{
    private int credits = 0;
    private int contactHours=0;
    private String name="""";
/*
    public Dummy()
    {
        name = """";
        credits = 0;
        contactHours = 0;
    }
*/  
    // More stuff here, e.g. property accessors
}
</code></pre>
"
"4387645","<p>I found this <a href=""http://java.itags.org/java-programming/175538/"" rel=""nofollow"">link</a> which has some code that might be of use. I tried your code with a few of my images but I couldn't reproduce the issue. I tried the last answer by devyn_a and it didn't break anything. Here's your code modified with devyn_a's solution. </p>

<pre><code>String url = ""file:///d:/teststuff/IMG_0393.JPG"";
String to = ""d:/teststuff/out.jpg"";
BufferedImage oldImage = ImageIO.read(new URL(url));
BufferedImage buffer = new BufferedImage (oldImage.getWidth(),
                 oldImage.getHeight(), BufferedImage.TYPE_INT_RGB);
ImageIO.write(ImageIO.read(new URL(url)), ""jpg"", new File(to));
</code></pre>

<p>It would be interesting to know if this resolves the issue.</p>
"
"4390832","<p>Agree with Ignacio...syntax is:</p>

<pre><code>boolean b = Pattern.matches(""REGEX"", ""VALUE TO TEST"");
</code></pre>
"
"4441123","<pre><code>int theArray[] = new int[20];
System.out.println(theArray.length);
</code></pre>
"
"4543354","<p>Take a look at this forum <a href=""http://htmlcoderhelper.com/why-is-using-a-wild-card-with-a-java-import-statement-bad/"" rel=""nofollow"">http://htmlcoderhelper.com/why-is-using-a-wild-card-with-a-java-import-statement-bad/</a>. Theres a discussion on how using wildcards can lead to conflicts if you add new classes to the packages and if there are two classes with the same name in different packages where only one of them will be imported.</p>

<p><h2>Update</h2><br />
It gives that warning because your the line should actually be <br /></p>

<pre><code>List&lt;Integer&gt; i = new ArrayList&lt;Integer&gt;(Arrays.asList(0,1,2,3,4,5,6,7,8,9,10));
List&lt;Integer&gt; j = new ArrayList&lt;Integer&gt;();
</code></pre>

<p>You need to specify the type for array list or the compiler will give that warning because it cannot identify that you are using the list in a type safe way.</p>
"
"4594587","<p>Im not sure about what you want, but...</p>

<p>SimpleDateFormat example:</p>

<pre><code>SimpleDateFormat sdf = new SimpleDateFormat(""MM/dd/yy"");
Date date = sdf.parse(""12/31/10"");
String str = sdf.format(new Date());
</code></pre>
"
"4656444","<p>You're looking for the (n-1)th smallest number in a list, the algorithm to solve this problem is the <a href=""http://en.wikipedia.org/wiki/Selection_algorithm"" rel=""nofollow""><code>selection algorithm</code></a>. But selection by sorting is good enough for most cases (performance O(n log n)).</p>

<hr>

<p>The following <strong>does not work</strong>. Thanks for reviewing my answer :-)</p>

<pre><code>  // doesn't work in general!!!
  int[] tal = {3, 8, 5, 8, 2, 3, 9, 12, 21};
  int max=tal[0];
  int previous = max;
  for(int i=0;i&lt;tal.length;i++){
      if(tal[i]&gt;max){      // &lt;- fixed the if statement 
          previous = max;
          max=tal[i];
      }
  }
  System.out.println(""Biggest: ""+ max);
  System.out.println(""2nd Biggest: ""+ previous);
</code></pre>

<p><strike>This should give 21 (Biggest) and 12 (next biggest)</strike></p>

<p>(answer according to my understanding of the question ;-) )</p>
"
"4656448","<p>Option 1:</p>

<pre><code>int[] tal = {3, 8, 5, 8, 2, 3, 9, 12, 21};
int nextMax = tal[0];
int max=tal[0];
for(int i=0;i&lt;tal.length;i++){
  if(tal[i]&gt;max){
      nextMax = max;
      max = tal[i];
  }
}
System.out.println(""Biggest: ""+ max);
System.out.println(""Next biggest: "" + nextMax);
</code></pre>

<p>Option 2:
Run a sort function on the array, and print out the first 2 numbers.</p>
"
"4671811","<p>Is something like this what you are looking for?</p>

<pre><code>public static byte[] getBytesFromDataHandler(final DataHandler data) throws IOException {
    final InputStream in = data.getInputStream();
    byte out[] = new byte[0];
    if(in != null) {
        out = new byte[in.available()];
        in.read(out);
    } 
    return out;
}
</code></pre>

<p>UPDATE:</p>

<p>Based on dkarp's comment this is incorrect. According to the docs for <code>InputStream</code>:</p>

<blockquote>
  <p>Returns the number of bytes that can be read (or skipped over) from this input stream without blocking by the next caller of a method for this input stream. The next caller might be the same thread or or another thread.</p>
</blockquote>

<p>It looks like Costi has the correct answer here.</p>
"
"4695193","<p>In complement to my comment, you can verify that a file is correctly created using this appender in your sift appender (taken from the Logback Tutorial about RollingFileAppender configuration).</p>

<pre><code>  &lt;appender name=""FILE"" class=""ch.qos.logback.core.rolling.RollingFileAppender""&gt;
    &lt;file&gt;test.log&lt;/file&gt;

    &lt;rollingPolicy class=""ch.qos.logback.core.rolling.FixedWindowRollingPolicy""&gt;
      &lt;fileNamePattern&gt;tests.%i.log.zip&lt;/fileNamePattern&gt;
      &lt;minIndex&gt;1&lt;/minIndex&gt;
      &lt;maxIndex&gt;3&lt;/maxIndex&gt;
    &lt;/rollingPolicy&gt;

    &lt;triggeringPolicy class=""ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy""&gt;
      &lt;maxFileSize&gt;5MB&lt;/maxFileSize&gt;
    &lt;/triggeringPolicy&gt;

    &lt;encoder&gt;
      &lt;pattern&gt;%-4relative [%thread] %-5level %logger{35} - %msg%n&lt;/pattern&gt;
    &lt;/encoder&gt;
  &lt;/appender&gt;
</code></pre>
"
"4699325","<p>you may use <code>myGcalEarlier.getTimeInMillis()</code> and <code>myGcalLater.getTimeInMillis()</code> and then convert to days by dividing on milliseconds in a day count. 24*60*60*1000.
and your first set call is wrong.</p>

<pre><code>set(int year, int month, int date)
</code></pre>

<p>month is 0-based 0 for january</p>
"
"4699348","<p>I think it is not important but the most common pronunciations are :</p>

<pre><code>    i'm a jay two ee ee programmer
</code></pre>

<p>and</p>

<pre><code>    i'm a jay two ee programmer
</code></pre>

<p>The main thing is that everyone understands what you mean and the four forms are understandable !</p>
"
"4736385","<p>If you have no way of knowing which interface an object might be implementing I would suggest you make an umbrella interface.</p>

<pre><code>public interface MyGeneralInterface {}
public interface SpecificInterface1 implements MyGeneralInterface {}
public interface SpecificInterface2 implements MyGeneralInterface {}
public class SpecificClass1 implements SpecificInterface1 {}
public class SpecificClass2 implements SpecificInterface2 {}
</code></pre>

<p>Then as Jigar said, use <code>instanceof</code>.</p>

<pre><code>if(myobj instanceof MyGeneralInterface) {}
</code></pre>
"
"4753394","<p>That's because the <code>myText.getText()</code> is <code>11,5</code> (not numeric) and not <code>11.5</code> (double).</p>

<p>Try doing, </p>

<pre><code>Double.parseDouble(myText.getText().replaceAll("","", "".""));
</code></pre>

<p>This replaces <code>,</code> to <code>.</code>.</p>

<p>Alternatively, uses <code>NumberFormat</code> to do your number conversion.</p>

<hr>

<p>Also, I've noticed you're using <code>Integer.parseInt()</code> when parsing <code>double</code> numbers. That's why you're having exceptions thrown.</p>

<p>You should use <code>NumberFormat.getInstance(locale).parse(myText.getText())</code> to get your required result. Don't forget that <code>parse()</code> returns a <code>Number</code> object, so to get a double, do this:</p>

<pre><code>double d = NumberFormat.getInstance(locale).parse(myText.getText()).doubleValue();
</code></pre>
"
"4779833","<p>You can always check if a given instance is type of a given type with the following code</p>

<pre><code>        if( selectedPerson instanceof Student)
        ...
</code></pre>
"
"4827496","<p><code>Thread.Sleep()</code> has a slightly larger overhead because it creates a system that includes some kind of timer that will wake the process. (Depends on implementation basically)<br>
Bottom line it will call a <code>Yield()</code> in the end.</p>

<p><code>Thread.Yield()</code> Will just give-up the thread's turn, and gain it in the next round.</p>

<p><code>Thread.Sleep(0)</code> might have an optimization to just call yield. (Again, implementation) </p>
"
"4832464","<p>Have you tried:</p>

<pre><code>public static byte[] toBytes(DataHandler dh) {
    return (byte[]) dh.getContent();
}
</code></pre>
"
"4839015","<p>You can use unicode escapes in the code to refer to the variables, i. e. </p>

<pre><code>int a\u0000 = 9;
</code></pre>

<p>is valid Java code. That way you don't have to need the ""evil"" characters in the source code.</p>

<p>(You can use Unicode escapes everywhere else, too, for example for the whitespace or even inside keywords... That can be confusing, as <code>\u0022</code> will end a string, but I guess it is just that the Java designers decided to keep it consistent.)</p>
"
"4844078","<p>replace the word ""this"" inside the AlertDilaog with ""context"" -- the first parameter on you onRecieve method.</p>

<pre><code> public void onReceive(Context context, Intent intent)
</code></pre>
"
"4863071","<p>OK, I'm not too hot on regexes and I'm sure someone will correct this, but here goes;</p>

<pre><code>.*\.&lt;[(5)(10)]&gt;\.\d*\.\d*
</code></pre>
"
"4903637","<p>I believe a <a href=""http://download.oracle.com/javase/1.5.0/docs/api/java/util/PriorityQueue.html"" rel=""nofollow"">Priority Queue</a> will do the job.</p>

<p>Caveat (from the same doc page):</p>

<blockquote>
  <p>This class and its iterator implement
  all of the <em>optional</em> methods of the
  <code>Collection</code> and Iterator interfaces.
  The <code>Iterator</code> provided in method
  <code>iterator()</code> is not guaranteed to
  traverse the elements of the priority
  queue in any particular order. If you
  need ordered traversal, consider using
  <code>Arrays.sort(pq.toArray())</code>.</p>
</blockquote>
"
"5126788","<p>You can use this:</p>

<pre><code>FlexTable ft=new FlexTable();
ft.setWidget(5, 5, new Label());
ft.getCellFormatter().getElement(5, 5).setId(""containerArea"");
</code></pre>
"
"1444806","<p>The solution is not in Spring, but in Oracle: you need to set the <code>OPEN_CURSORS</code> initialization parameter to some value higher than the default 50.</p>

<p>Oracle -- at least as-of 8i, perhaps it's changed -- would reparse JDBC PreparedStatement objects unless you left them open. This was expensive, and most people end up maintaining a fixed pool of open statements that are resubmitted.</p>

<p>(taking a quick look at the 10i docs, they explicitly note that the OCI driver will cache PreparedStatements, so I'm assuming that the native driver still recreates them each time)</p>
"
"1448132","<p>You can use the <a href=""http://www.cplusplus.com/reference/std/iterator/"" rel=""nofollow"">header file </a> and specify the minimum requirements that the iterator must support.</p>

<p>So in the above example, you might want to rewrite the function as such:</p>

<pre><code>template&lt;typename T&gt;
void some_function(std::forward_iterator&lt;T&gt; data) {
   ...
}
</code></pre>

<p>for something that requires to be able to only move the iterator forward (++) through a collection.</p>
"
"5613124","<p>I recommend you use strip_tags (a PHP function)</p>

<pre><code>string strip_tags ( string $str [, string $allowable_tags ] )

    &lt;?php
$text = '&lt;p&gt;Test paragraph.&lt;/p&gt;&lt;!-- Comment --&gt; &lt;a href=""#fragment""&gt;Other text&lt;/a&gt;';
echo strip_tags($text);
echo ""\n"";

// Allow &lt;p&gt; and &lt;a&gt;
echo strip_tags($text, '&lt;p&gt;&lt;a&gt;');
?&gt;
</code></pre>

<p>OUTPUT</p>

<pre><code>Test paragraph. Other text
&lt;p&gt;Test paragraph.&lt;/p&gt; &lt;a href=""#fragment""&gt;Other text&lt;/a&gt;
</code></pre>
"
"1475877","<p>It is better if you find quotation marks by using the <code>indexof()</code> method and then add a string behind that index.</p>

<pre><code>string s=""hai"";
int s=s.indexof("""""");
</code></pre>
"
"6194853","<p>or </p>

<pre><code>   SimpleDateFormat dateFormat = new SimpleDateFormat(""EEE MMM d');
    dateFormat.format(date);
</code></pre>
"
"1515251","<p>I think you want <code>java.awt.image.PixelGrabber</code>. (IIRC, that was behind the massive slowdown is Java graphics performance from 1.1 to 1.2, although I might be wrong.)</p>
"
"6959998","<p>I have an idea, you can pack all php data in web services <code>mode(xml)</code> to send to <code>java(axis2)</code> <code>server.bu</code> </p>
"
"7219749","<pre><code>private void f(Button b, final int a[]) {

    b.addClickHandler(new ClickHandler() {

        @Override
        public void onClick(ClickEvent event) {
            a[0] = a[0] * 5;

        }
    });
}
</code></pre>
"
"1549726","<blockquote>
  <p>I could just do (value / (Integer.MAX_VALUE / 255)) but that will cause many low values to be zero. </p>
</blockquote>

<p>One approach you could take is to use the modulo operator (<code>r = value%256;</code>).  <strike>Although this wouldn't ensure that <code>Integer.MAX_VALUE</code> turns out as 255,</strike> it would guarantee a number between 0 and 255.  It would also allow for low numbers to be distributed across the 0-255 range.</p>

<p>EDIT:</p>

<p>Funnily, as I test this, <code>Integer.MAX_VALUE % 256</code> does result in <code>255</code>  (I had originally mistakenly tested against <code>%255</code>, which yielded the wrong results).  This seems like a pretty straight forward solution. </p>
"
"1575376","<pre><code>public enum Direction
{
    NORTH,EAST,SOUTH,WEST;

    public Direction opposite()
    {
        return Direction.values()[ (this.ordinal() + 2) &amp; 3 ];
    }
}
</code></pre>
"
"1600070","<p>You never need to convert a string to bytes and then to a String java, it is completely pointless. Once a series of bytes have been decoded to a String it is in Java String encoding (UTF-16E I think).</p>

<p>The problem you have is that the application server is making an assumation about the encoding of the incoming HTTP request, usually the platform encoding. You can give the application server a hint as to the expected encoding by calling <a href=""http://java.sun.com/products/servlet/2.3/javadoc/javax/servlet/ServletRequest.html#setCharacterEncoding%28java.lang.String%29"" rel=""nofollow""><code>ServletRequest.setCharacterEncoding(String)</code></a> before anything else calls <code>getParameter()</code>.</p>

<p>Browser's assume that form fields should be submitted back to the server using the same encoding that the page was served with. This is a general rule as the HTTP spec doesn't have a way to specify the encoding of the incoming request, only the response.</p>

<p>Spring has a nice Filter to do this for you <a href=""http://static.springsource.org/spring/docs/2.5.x/api/org/springframework/web/filter/CharacterEncodingFilter.html"" rel=""nofollow"">CharacterEncodingFilter</a> if you define this as the every first filter in web.xml most of your encoding issue will go away. </p>
"
"1632103","<pre><code>	double d = 56789;
	String s = d+"""";
</code></pre>
"
"1636851","<p>Reads and writes to <code>int</code> variables are already atomic, so there is no need to synchronize the getter and setter (see <a href=""http://java.sun.com/docs/books/tutorial/essential/concurrency/atomic.html"" rel=""nofollow"">http://java.sun.com/docs/books/tutorial/essential/concurrency/atomic.html</a>).</p>

<p>Likewise, you don't need to synchronize <code>equals</code> here. While you could prevent another thread from changing one of the <code>i</code> values during comparison, that thread would simply block until the <code>equals</code> method completes and change it immediately afterwards.</p>
"
"1642172","<p>I would use a <code>StringBuffer</code> to implement this feature. <code>String</code> is immutable so everytime you concat two <code>String</code>s, a new object is created.</p>

<p>More efficient is the use of <code>StringBuffer</code>:</p>

<pre><code>String[] list = new String[] {""abc"",""def"",""ghi"",""jkl""};
StringBuffer str = new StringBuffer();
for (String s : list) {
   str.append(s);
   str.append("","");
}
str.deleteCharAt(str.length());
System.out.println(str); //automatically invokes StringBuffer.toString();
</code></pre>
"
"1642193","<pre><code>for (int i = 0; i &lt; list.length-1; i++) {
    str = str + list[i];
    str = str + "","";    
}
str = str + list[list.length-1] 
</code></pre>
"
"9537902","<pre><code>$ javaws

Usage:   javaws [-run-options] &lt;jnlp file&gt;
         javaws [-control-options]

control-options:
  -about                Shows a sample application.
  -viewer               Shows the trusted certificate viewer.

run-options:
  -arg arg              Adds an application argument before launching.
  -param name=value     Adds an applet parameter before launching.
  -property name=value  Sets a system property before launching.
  -update seconds       Update check if seconds since last checked.
  -license              Display the GPL license and exit.
  -verbose              Enable verbose output.
  -nosecurity           Disables the secure runtime environment.
  -noupdate             Disables checking for updates.
  -headless             Disables download window, other UIs.
  -strict               Enables strict checking of JNLP file format.
  -Xnofork              Do not create another JVM.
  -Xclearcache          Clean the JNLP application cache.
  -help                 Print this message and exit.
</code></pre>
"
"1660009","<p>Runnable isn't meant to be called directly by client code like <code>foo.run()</code> which would run sequentially in the current thread.</p>

<p>From the <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/Runnable.html"" rel=""nofollow"">Runnable API</a>:</p>

<blockquote>
  <p>The Runnable interface should be
  implemented by any class whose
  instances are intended to be executed
  by a thread. The class must define a
  method of no arguments called run.</p>
  
  <p>This interface is designed to provide
  a common protocol for objects that
  wish to execute code while they are
  active. For example, Runnable is
  implemented by class Thread. Being
  active simply means that a thread has
  been started and has not yet been
  stopped.</p>
  
  <p>In addition, Runnable provides the
  means for a class to be active while
  not subclassing Thread. A class that
  implements Runnable can run without
  subclassing Thread by instantiating a
  Thread instance and passing itself in
  as the target. In most cases, the
  Runnable interface should be used if
  you are only planning to override the
  run() method and no other Thread
  methods. This is important because
  classes should not be subclassed
  unless the programmer intends on
  modifying or enhancing the fundamental
  behavior of the class.</p>
</blockquote>

<p>Instead, you create a new Thread instance based on your runnable, and then call <code>bar.start()</code>. It is then the JVM's responsibility to call <code>run()</code> in this separate thread.</p>

<p>Example:</p>

<pre><code> public class Foo&lt;E&gt; implements Runnable {
     private final E e;
     public Foo(E e) { ... }
     @Override
     public void run() {
         do something with e.
     }
 }

 Foo&lt;String&gt; foo = new Foo(""hello"");
 Thread bar = new Thread(foo);
 bar.start();
</code></pre>
"
"1674312","<p><b>Business classes</b> are classes that are designed and used for specific project and hardly reusable to other project.</p>

<p><b>Domain classes</b> are classes that are designed and used for specific domain which can be used by multiple projects that do similar thing.</p>

<p>For example, JDBC classes are domain classes for Database access. Swing classes are domain classes for GUI construction and manipulation. <code>Form1</code> which contains a set of component used to display ""Hello World"" messsage is business class.</p>
"
"1689528","<p>IMO the best option is to get to have 
<code>public interface Mapper extends Cloneable {
public Object clone();
}</code></p>

<p>And have that method call <code>super.clone()</code> and perform deep cloning if relevant (only the implementation class knows about that, in principle).</p>

<p>Resorting to reflectivity will probably hit performance and make extension design a bit more (too?) complex. Another option here would be to provide with an abstract class that features the copy constructor instead of an interface, but that has obvious limitations that could be a show stopper.</p>
"
"10950838","<pre><code>String str=""iai"";

StringBuffer sb=new StringBuffer(str);
String str1=sb.reverse().toString();
if(str.equals(str1)){
   System.out.println(""polindrom"");
} else {
   System.out.println(""not polidrom"");
}
</code></pre>
"
"11227109","<p>Reason : ""Don't know why there is no descendingIterator with ArrayList...""</p>

<p>Since array list doesnot keep the list in the same order as data has been added to list. So, never use Arraylist .</p>

<p>Linked list will keep the data in same order of ADD to list.</p>

<p>So , above in my example, i used ArrayList() in order to make user to twist their mind and make them to workout something from their side.</p>

<p>Instead of this</p>

<pre><code>List&lt;String&gt; list = new ArrayList&lt;String&gt;();
</code></pre>

<p>USE:</p>

<pre><code>List&lt;String&gt; list = new LinkedList&lt;String&gt;();

list.add(""ravi"");

list.add(""kant"");

list.add(""soni"");

// Iterate to disply : result will be as ---     ravi kant soni

for (String name : list) {
  ...
}

//Now call this method

Collections.reverse(list);

// iterate and print index wise : result will be as ---     soni kant ravi

for (String name : list) {
  ...
}
</code></pre>
"
"11325546","<p>You can use <code>str = str.replace(""X"", """");</code> as mentioned before and you will be fine. For your information <code>''</code> is not an empty (or a valid) character but <code>'\0'</code> is. </p>

<p>So you could use <code>str = str.replace('X', '\0');</code> instead.</p>
"
"11697533","<p>Maybe this trick gives u an idea</p>

<pre><code>Boolean var= new anonymousClass(){
    private String myVar; //String for example
    @Overriden public Boolean method(int i){
          //use myVar and i
    }
    public String setVar(String var){myVar=var; return this;} //Returns self instane
}.setVar(""Hello"").method(3);
</code></pre>
"
"11883746","<p>use character-set ""<code>ISO-8859-1</code>"" for URLEncoder</p>
"
"12900796","<pre><code>public class Swap
{
    public static void main (String[]args)
    {
        int y = 5;
        int x = 4;
        int c;

        System.out.println(""y = ""+y);
        System.out.println(""x = ""+x);

        c=x; //c = 4
        x=y; //x = 5;
        y=c;

        System.out.println(""\n"");
        System.out.println(""y= ""+y);
        System.out.println(""x= ""+x);
    }    
}
</code></pre>
"
"1830008","<p>i have found that for-loops with a counter should <em>only</em> go from zero and up to some limit.</p>

<pre><code>for(int i = 0; i &lt; MAX; i++) {
....
}
</code></pre>

<p>This is so well established that you can expect that anybody who sees this immediately understand what is going on.  This also means that any DEVIATION from that form, by counting backwards or starting at one or stepping by three, makes it hard to understand because you need to recognize it is dfifferent, parse it and understand it.  This includes all your examples.</p>

<p>I would suggest writing it clearly:</p>

<pre><code>for(int i = 0; i &lt; MAX; i++) {
  indexFromEnd = (MAX - 1) - i;
....
 }
</code></pre>
"
"13749133","<p>try this ;)</p>

<pre><code>Long a = 100;    
int ai = Integer.parseInt(a.toString());
</code></pre>
"
"1832448","<p>If you have a list use a ListIterator:</p>

<p>Following example based on <a href=""http://www.java-samples.com/showtutorial.php?tutorialid=235"" rel=""nofollow"">http://www.java-samples.com/showtutorial.php?tutorialid=235</a></p>

<pre><code>class ListIter {
    public static void main(String args[]) {
    	// create an array list
    	ArrayList al = new ArrayList();
    	// add elements to the array list
    	al.add(""A"");
    	al.add(""B"");
    	al.add(""C"");
    	al.add(""D"");
    	al.add(""E"");
    	al.add(""F"");
    	// use ListIterator to display contents of al backwards
    	ListIterator litr = al.listIterator(al.size());
    	while (litr.hasPrevious()) {

    		Object element = litr.previous();
    		System.out.print(element + "" "");

    	}
    	System.out.println();
    }
}
</code></pre>
"
"275787","<p>I don't know Java too well, but if you can't find a Split method that does that, I suggest you just make your own.</p>

<pre><code>string[] mySplit(string s,string delimiter)
{
    string[] result = s.Split(delimiter);
    for(int i=0;i&lt;result.Length-1;i++)
    {
    	result[i] += delimiter; //this one would add the delimiter to each items end except the last item, 
    				//you can modify it however you want
    }
}
string[] res = mySplit(myString,myDelimiter);
</code></pre>

<p>Its not too elegant, but it'll do.</p>
"
"1164828","<p>Simply run the Python interpreter as a subprocess from within Java.</p>

<p>Write your Python functionality as a proper script, which reads from stdin and writes to stdout.</p>

<p>Use the Java <code>Runtime</code> class to spawn a subprocess that runs your Python script.  This is very simple to do and provides a very clean interface.</p>

<p><hr /></p>

<p><strong>Edit</strong></p>

<pre><code>import simplejson
import sys
for request in sys.stdin.readlines():
    args = simplejson.loads( request )
    result = myFunction( args['this'], args['that'] )
    sys.stdout.writeline( simplejson.dumps( result ) + ""\n"" )
</code></pre>

<p>The interface is simple, structured and very low overhead.</p>
"
"15040515","<pre><code>public  String compareDate( PaymentTxnRequest request ) throws ParseException { 
        Date debitDate= request.getPaymentTxn().getCrValDt();
        Date now = new Date();
        String response="""";
        SimpleDateFormat sdfDate = new SimpleDateFormat(""dd/MM/yyyy"");
        String strCurrDate = sdfDate.format(now);
        String strDebitDate = sdfDate.format(debitDate);
        System.out.println(""Current Date: "" + strCurrDate);
        Date currentDate =  new SimpleDateFormat(""dd/MM/yyyy"").parse(strCurrDate);
        Date txnDate =  new SimpleDateFormat(""dd/MM/yyyy"").parse(strDebitDate);
        System.out.println(""C -&gt; ""+currentDate);
        System.out.println(""C -&gt; ""+txnDate); 
         if (txnDate!=null){
         if (currentDate.equals(txnDate))
         {
             System.out.println(""Valid Txn"");
             response=""valid"";
         }
         if (currentDate.after(txnDate))
         {
            System.out.println(""--&gt; Not  Valid TXN Past"");   
            response=""notValid"";
         }
        if (currentDateenter code here.before(txnDate)){
            System.out.println(""Future Valid TXn"");
             response=""future"";
        }
     }
        return response;
    }
</code></pre>
"
"15089100","<p>In case you are attempting to have your app behave differently depending on the orientation check out another question like this related to Android orientation that I answered <a href=""http://stackoverflow.com/questions/9566633/how-to-use-onconfigurationchanged-and-newconfig-orientation-configuration-o/15085272#15085272"">here</a>.</p>

<p>It utilises <a href=""http://vapor-api.com"" rel=""nofollow"">Vapor API</a>, a new jQuery style framework I recently released for Android which is designed to simplify app dev.</p>

<p>In the examples I show how you can listen out for global callbacks related to the orientation of a device, and have your app execute custom code depending on the current orientation of the user's device. For example:</p>

<pre><code>$.hook(""orientationLandscape"").hookIn(
     new $$hookee&lt;Activity&gt;(this){

         @Override
         public void call(String hookName, VaporBundle args){
             // landscape code here
         }

     });

$.hook(""orientationPortrait"").hookIn(
     new $$hookee&lt;Activity&gt;(this){

         @Override
         public void call(String hookName, VaporBundle args){
             // portrait code here
         }

     });
</code></pre>

<p>You can also combine things like hook listeners using <a href=""http://vapor-api.com/core/vaporx"" rel=""nofollow"">VaporX</a> too, which is basically jQuery style selectors for Android dev.</p>

<p>Hope it helps someone!</p>
"
"15193006","<p>In java ,there is a rigorous way to convert a long to int</p>

<p>not only lnog can convert into int,any type of class extends Number can convert to other Number type in general,here I will show you how to convert a long to int,other type vice versa.</p>

<pre><code>Long l = 1234567L;
int i = org.springframework.util.NumberUtils.convertNumberToTargetClass(l, Integer.class);
</code></pre>

<p><img src=""http://i.stack.imgur.com/BElEq.jpg"" alt=""convert long to int""></p>
"
"1455226","<p>To add to @subtenante, Java is designed so that Java will always be backwards compatible. Generics disallow puts of the wrong type, as this does not break backwards compatibility. The easy way to make sure that the right key is being used is to do this.</p>

<pre><code>K key = null;
V value = null;

Map&lt;K,V&gt;  mapped = new HashMap&lt;K,V&gt;()
.......//set the key and value..........
mapped.put(key, value)
.....
V var = mapped.get(key);
</code></pre>

<p>Problem solved.<br />
One more caveat to generics,  any child of a class can also be placed into a collection. </p>

<pre><code>Number k= null;
Number v= null;

Map&lt;Number,Number&gt;  mapped = new HashMap&lt;Number,Number&gt;()
.......//set the key and value..........
k = double someDouble;
v = int someInt;
mapped.put(k, v)
.....
</code></pre>

<p>This could cause some big bugs!!</p>
"
"1908735","<p>My only 2 cents is that if you want a generated ID, you may call</p>

<pre><code>pstmt.getGeneratedKeys( );
</code></pre>

<p>If it's going to return anything valid depends on your JDBC driver implementation though.</p>
"
"15763377","<p>This is insert operation:</p>

<pre><code>DBCollection table1 = db.getCollection(""Collection name"");
BasicDBObject document = new BasicDBObject();
document.put(""_id"",value);      
document.put(""Name"", name);
table1.insert(document);
</code></pre>

<p>After insert u get last inserted id:</p>

<pre><code>DBCollection tableDetails = db.getCollection(""collection name"");
BasicDBObject queryDetails = new BasicDBObject();
queryDetails.put(""_id"", value);
DBCursor cursorDetails =tableDetails.find(queryDetails);
DBObject oneDetails;
oneDetails=cursorDetails.next();        
String data=oneDetails.get(""_id"").toString();
System.out.println(data);
</code></pre>

<p>after getting value convert to inter type.</p>
"
"15840607","<p>You can use AOP and a <a href=""http://www.jcabi.com/jcabi-aspects/apidocs-0.7.16/com/jcabi/aspects/Timeable.html"" rel=""nofollow""><code>@Timeable</code></a> annotation from <a href=""http://www.jcabi.com/jcabi-aspects/annotation-timeable.html"" rel=""nofollow"">jcabi-aspects</a> (I'm a developer):</p>

<pre><code>@Timeable(limit = 1, unit = TimeUnit.SECONDS)
String yourMethod() {
  // execution as usual
}
</code></pre>

<p>Make sure that you somewhere in your method you check for <code>Thread#isInterrupted()</code>:</p>

<pre><code>if (Thread.currentThread.isInterrupted()) {
  throw new IllegalStateException(""time out"");
}
</code></pre>

<p>When time limit is reached your thread will get <code>isInterrupted()</code> flag set to <code>true</code> and it's your job to handle this situation correctly and to stop execution.</p>
"
"1935523","<p>Note that the drawbacks listed do not hold for <code>static</code> inner classes as they do not have implicit access to their enclosing class (or object really.)</p>

<p>So if this rule is going to help up in your company, it might be an idea to get static inner classes excempted as they offer a way for encapsulation which is useful in many cases.</p>

<p>@Tom, quoting the <a href=""http://java.sun.com/docs/books/jls/third_edition/html/classes.html"" rel=""nofollow"">Java language specification</a>, ""Member classes may be <strong>static</strong>, in which case they have <strong>no access</strong> to the instance variables of the surrounding class""</p>
"
"16162810","<pre><code>StringBuffer stringBuffer = new StringBuffer(Double.toString(ratioGrossYield));
int i; // general purpose character index
int exponent;
int decimalPlaces;
if ((i = stringBuffer.indexOf(""E"")) &gt; -1) { // scientific notation...
    // turn scientific notation exponent into an integer
    exponent = Integer.parseInt(stringBuffer.substring(i + 1));
    // truncate the exponent from the StringBuffer
    stringBuffer = stringBuffer.delete(i, stringBuffer.length());
} else { // decimal notation, could be trailing zero
    exponent = 0; // no exponent, so zero
    // point i to trailing zero and truncate it, if there is one
    if (stringBuffer.charAt((i = stringBuffer.length() - 1)) == '0') {
        stringBuffer = stringBuffer.deleteCharAt(i); // delete trailing zero
    }
}
// stringBuffer now contains only significant digits to the
// right of the decimal point, if there are any
decimalPlaces = stringBuffer.length() - 1 - stringBuffer.indexOf(""."") - exponent;
// zero or positive number is decimal places
// negative number is number of zeroes to the left of the decimal point
// between the decimal point and the least significant digit
if (stringBuffer.charAt(stringBuffer.length() - 1) == '0') {

    return decimalPlaces-1;

} else {

    return decimalPlaces;
}
</code></pre>
"
"16522166","<p>Try </p>

<pre><code>Properties prop = new Properties();

prop.setProperty( ""myKey"", ""value"" );

prop.store( new FileOutputStream( new File( d:\\myProp.properties)), ""First line.\n#e.g second line"" );
</code></pre>
"
"16574944","<pre><code>String cmd1[] = {""attrib"",""+h"",file/folder path};
Runtime.getRuntime().exec(cmd1);
</code></pre>

<p>Use this code it might solve you problem</p>
"
"1973594","<p>Delegates in C# look ugly to me. (declaring something as variable, and then adding <code>()</code> after it feels bad in OOP)</p>

<p>Besides, if you want : ""The delegate object can then be passed to code which can call the referenced method, without having to know at compile time which method will be invoked.</p>

<p>you can simply use <code>java.lang.reflect.Method</code></p>

<p>Edit: As you said, using reflection is not a good approach. This is true, but using delegates, in an OOP perspective, is not a better approach, in my opinion. It is a functional-language construct.</p>
"
"17022216","<p>What I usually use (NetBeans, but I believe it is simple to use in any IDE) is <code>find&amp;replace</code>.</p>

<p>You just find <code>;\n</code> and replace it with <code>+ $foo;\n</code> then you don't apply to ALL lines but you place cursor on the first line and you just hit ""replace"" button (depends on your IDE I suppose) 7 times to change 7 lines in no time. Easy and simple and it should be done with the most basic and the most advanced IDE you can find.</p>

<p>EDIT:
In IntelliJ (don't know if it works in other IDEs too) you can use your regexp search&amp;replace to selection only so you can actually use ""replace all""</p>
"
"17087778","<p>Try something like this:</p>

<pre><code>    //locations to calculate difference with 
    Location me   = new Location(""""); 
    Location dest = new Location(""""); 

    //set lat and long of comparison obj 
    me.setLatitude(_mLat); 
    me.setLongitude(_mLong); 

    //init to circumference of the Earth 
    float smallest = 40008000.0f; //m 

    //var to hold id of db element we want 
    Integer id = 0; 

    //step through results 
    while(_myCursor.moveToNext()){ 

        //set lat and long of destination obj 
        dest.setLatitude(_myCursor.getFloat(_myCursor.getColumnIndexOrThrow(DataBaseHelper._FIELD_LATITUDE))); 
        dest.setLongitude(_myCursor.getFloat(_myCursor.getColumnIndexOrThrow(DataBaseHelper._FIELD_LONGITUDE))); 

        //grab distance between me and the destination 
        float dist = me.distanceTo(dest); 

        //if this is the smallest dist so far 
        if(dist &lt; smallest){ 
            //store it 
            smallest = dist; 

            //grab it's id 
            id = _myCursor.getInt(_myCursor.getColumnIndexOrThrow(DataBaseHelper._FIELD_ID)); 
        } 
    } 
</code></pre>

<p>After this, id contains the item you want from the database so you can fetch it:</p>

<pre><code>    //now we have traversed all the data, fetch the id of the closest event to us 
    _myCursor = _myDBHelper.fetchID(id); 
    _myCursor.moveToFirst(); 

    //get lat and long of nearest location to user, used to push out to map view 
    _mLatNearest  = _myCursor.getFloat(_myCursor.getColumnIndexOrThrow(DataBaseHelper._FIELD_LATITUDE)); 
    _mLongNearest = _myCursor.getFloat(_myCursor.getColumnIndexOrThrow(DataBaseHelper._FIELD_LONGITUDE)); 
</code></pre>

<p>Hope that helps!</p>
"
"1984961","<p>The below code searchs the line or fields in a single text file reads the file line by line
then the line or fields can be replaced by "" "" or any other string. Here we use the pattern and Matcher classes.</p>

<p>If this not clearing your question do let me know.</p>

<p>import java.io.<em>;
import java.util.regex.</em>;
import java.util.Properties;
public class DeleteLine
{</p>

<p>public static void main(String[] args)
  {
    BufferedReader br = null;
    try
    {
    String line=null;
    File f = new File(""d:/xyz.txt"");</p>

<pre><code>String replaceString=properties.getProperty(""replaceAll.String"");
</code></pre>

<p>;
               br = new BufferedReader(new FileReader(""d:/giri/scjp/"");</p>

<pre><code>          while ( (line = br.readLine()) != null )//BufferedReader contains readline method
  {

      Pattern p=Pattern.compile(searchString);/*here u an specify the line u want to delete */
      Matcher m=p.matcher(line);
      line=m.replaceAll(replaceString);/*here replace String u can "" "" so that it will be emptied */
      System.out.println(line);
    } 
      //System.out.println(line);
           } 

      }
</code></pre>

<p>}
      br = new BufferedReader(new FileReader(""d:/xyz.txt""));
     String line = null;</p>

<p>} </p>

<pre><code>catch (FileNotFoundException e)
{
    System.out.println(""File couldnt find"");

  e.printStackTrace();
}
catch (IOException e)
{
  e.printStackTrace();
}
</code></pre>

<p>}</p>

<p>}</p>
"
"17440035","<p>package com.test;</p>

<p>public class Equality {</p>

<pre><code>public static void main(String[] args) {

    Boolean flag;

    int[] arr={1,1,1,12};
    flag=check_equal(arr);
    System.out.println(flag);
}

public static Boolean check_equal(int[] arr){
    Boolean flag=true;

    outerloop:
    for(int i=1; i&lt; arr.length; i++)
        {
            for(int j=1; j&lt; arr.length; j++){
                if(arr[i]==arr[j]){
                    flag=true;
                }   
                else{
                    flag=false;
                    break outerloop;
                }

            }

        }
    return flag;
}
</code></pre>

<p>}</p>
"
"2002872","<p>I apologize for using the term override incorrectly and inconsistent with my description.  My description describes the scenario.  The following code extends Jon Skeet's example to portray my scenario:</p>

<pre><code>class Base {
   public void callFoo() {
     foo();
   }
   private void foo() {
   }
}

class Child extends Base {
    private void foo() {
    }
}
</code></pre>

<p>Usage is like the following:</p>

<pre><code>Child c = new Child();
c.callFoo();
</code></pre>

<p>The issue I experienced is that the parent foo() method was being called even though, as the code shows, I was calling callFoo() on the child instance variable.  I thought I was defining a new private method foo() in Child() which the inherited callFoo() method would call, but I think some of what kdgregory has said may apply to my scenario - possibly due to the way the derived class constructor is calling super(), or perhaps not.</p>

<p>There was no compiler warning in Eclipse and the code did compile.  The result was unexpected.</p>
"
"1540521","<p>I think you might be talking about <code>static</code> variables.
if you declare a static variable it will save it's value between executions of the methods.</p>
"
"17702969","<p>Here we are using two new keywords. For every new keyword a new object is generated. </p>

<p>The <code>==</code> method checks for the <code>hashcode</code> of the object, in this case we get <code>false</code> as the answer.</p>
"
"2027121","<p>When Java was invented, it came without iterators and collections utilities. The idea just wasn't there, yet. The only thing you had was <code>Enumeration</code> which felt clumsy, especially without the utility functions.</p>

<p>With Java 1.2, iterators and collections were added. That was a great improvement but from todays point of view, it leaves a lot of room for improvement.</p>

<p>To fill the gap, look at <a href=""http://groovy.codehaus.org/"" rel=""nofollow"">Groovy</a> which has <a href=""http://groovy.codehaus.org/JN1015-Collections"" rel=""nofollow"">excellent support for collections</a> at the language level or use helper frameworks like <a href=""http://commons.apache.org/collections/"" rel=""nofollow"">commons collections</a>.</p>

<p>[EDIT] If the code uses <code>ArrayList</code>, then traversing the list is pretty cheap (as is insertion and deleting, surprisingly; todays computers are really fast at copying memory around).</p>
"
"2027228","<p>I would not use <code>Date</code> but timestamps, using <code>-1</code> for never and <code>0</code> for immediately;</p>

<pre><code>public static final long IMMEDIATE = 0;
public static final long NEVER = -1L;
private long expires = NEVER;
</code></pre>

<p>interpretation of the attribute should be in a getter, like:</p>

<pre><code>public boolean isExpired() {

    return (NEVER == expires) ? false : (expires &lt; System.currentTimeMillies());
}
</code></pre>

<p>Deletion follows the same pattern.</p>

<p><strong>Update</strong> I know that 0 and -1 are valid timestamps, but as expiration and deletion of files and other resources rarely (never say never :-)) happen in 1970 or before, it is a useful constant, imho.</p>
"
"19147312","<p>Look to another Java generic example with using reflection:</p>

<pre><code>
    public class ArrayUtils
    {
        @SuppressWarnings(""unchecked"")
        public static  E[] appendToArray(E[] array, E item)
        {
            E[] result = (E[]) Array.newInstance(array.getClass().getComponentType().getClass(), array.length+1);
            result[array.length] = item;
            return result;
        }
    }
</code></pre>
"
"2057025","<p>Actually you may simulate this behavior in Java.</p>

<p><strong>WARNING: ugly solution below</strong></p>

<p>You can write a method in an utility class like the code below:</p>

<pre><code>public Object getProperty(String property, Object obj) {
  if (obj != null &amp;&amp; property != null) {
       Field field = obj.getClass().getDeclaredField(property);
       field.setAccessible(true);
       try {
          return field.get(obj);
       } catch (Exception ex) {
          return null;
       }
  }
  return null;
}
</code></pre>

<p>You may actually declare it as a static method and then just import this method into your classes which will need this behavior.</p>

<p>By the way, Groovy support this feature.</p>
"
"19584424","<pre><code>Long l = 100;
int i = Math.round(l);
</code></pre>
"
"2070117","<p>you can use iterators. and compare through iterating.
like this</p>

<pre><code>     HashSet h1 =  new HashSet();
     HashSet h2 =  new HashSet();
     Iterator it1 = h1.iterator();

     while(it1.hasNext()){
         if(!h2.contains(it1.next()))
             // do whatever u want
            boolean notequal = true ;
     }
</code></pre>
"
"19589074","<p>you may use the following process , i.e. using regex as follows-</p>

<pre><code>String[] splited = result.split(""\\s+"");
String[] splited1 = new String[splited.length];

for (int i = 0; i &lt; splited.length; i++) {
int l = splited[i].length();
result1 = """";
for (int j = 0; j &lt; splited[i].length(); j++) {
String next = splited[i].substring(j, j + 1);

if (j == 0) {
 result1 += next.toUpperCase();
} else {
 result1 += next.toLowerCase();
}
}
splited1[i] = result1;
}
result = """";
for (int i = 0; i &lt; splited1.length; i++) {
result += "" "" + splited1[i];
}
</code></pre>

<p>For more details , please refer to this post -</p>

<p><a href=""http://javacodingtutorial.blogspot.com/2013/10/converting-any-string-to-camel-case.html"" rel=""nofollow"">http://javacodingtutorial.blogspot.com/2013/10/converting-any-string-to-camel-case.html</a></p>
"
"19756941","<pre><code>System.err.println(""Someone is Restarting me..."");
setVisible(false);
try {
    Thread.sleep(600);
} catch (InterruptedException e1) {
    e1.printStackTrace();
}
setVisible(true);
</code></pre>

<p>I guess you don't really want to stop the application, but to ""Restart"" it.  For that, you could use this and add your ""Reset"" before the sleep and after the invisible window.</p>
"
"2081678","<pre><code>public class ListObject&lt;T implements Comparable&gt; {...}
</code></pre>
"
"1654709","<p><code>System.out.println(""always first"")</code> will always come first, because it comes <strong>before</strong> the 2nd thread starts, so it will never effect the concurrency.</p>

<p>try placing ""always first"" sentence <strong>after</strong> <code>t.start();</code>, you may get what you're expecting :)</p>
"
"2106359","<p>I agree, Constructors are created assuming there will be instances. If you have lot of common code you can think of creating a Constructor but it is much better to put it in a <code>init()</code> method.</p>
"
"1657692","<p>For steps 2 and 3 better create an OS shell script (bat or bash) that will execute mysql cli tool to create database and schema from your file</p>

<pre><code>mysql -u root -p superpwd &lt; create_database.sql
</code></pre>

<p>the create_database.sql better to create with help of mysqldump cli tool from your own database
Later you can include this script into your MySQL bundled installation.</p>
"
"2119126","<p>I saw many times the word <code>Clazz</code> used in the code to avoid the reserved word. Does that help?</p>
"
"21008496","<p>If you look at HashMap.get(key) method you will see a use of</p>

<p>Entry entry = <strong>getEntry</strong>(key);</p>

<p>Why is <strong>getEntry</strong>(key) method private?? It returns key and value for desired search. I will use this method by brute force, but it is ugly solution...</p>

<p>Implementation of method in HashMap follows</p>

<pre><code>/**
 * Returns the entry associated with the specified key in the
 * HashMap.  Returns null if the HashMap contains no mapping
 * for the key.
 */
final Entry&lt;K,V&gt; getEntry(Object key) {
    int hash = (key == null) ? 0 : hash(key);
    for (Entry&lt;K,V&gt; e = table[indexFor(hash, table.length)];
         e != null;
         e = e.next) {
        Object k;
        if (e.hash == hash &amp;&amp;
            ((k = e.key) == key || (key != null &amp;&amp; key.equals(k))))
            return e;
    }
    return null;
}
</code></pre>
"
"21015884","<p>check this at my blog hope this going to help <a href=""http://codeheaven.wordpress.com/"" rel=""nofollow"">http://codeheaven.wordpress.com/</a></p>

<p><strong>Here is the code from above link:</strong></p>

<pre><code>public class ArrayReversing {
public static void main(String a[]){
int arr[]={ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8  };
int temp;
int as = arr.length;
int k = as – 1;

System.out.println(“Array Before Reversing”);
printArray(arr);//method used to print array on screen

ArrayReverse://using loops with title
for(int i = 0; i &lt; arr.length/2 ; i++){
temp = arr[k];// swaping
arr[k] = arr[i];
arr[i] = temp;

k–;
}
System.out.println(“Array After Reversing”);
printArray(arr); // calling the method printArray to print the elements of array
}

static void printArray(int ar[]){
PrintArray:
for(int l:ar)
System.out.println(l);
}

}
</code></pre>

<p><strong>Output:</strong></p>

<pre><code>Array Before Reversing
1
2
3
4
5
6
7
8
Array After Reversing
8
7
6
5
4
3
2
1
</code></pre>
"
"1675803","<p>If your shell is tcsh or csh, you can set it in /etc/profile.  Open terminal, ""vim /etc/profile"" and add the following line:</p>

<p><code>setenv CLASSPATH (insert your classpath here)</code></p>
"
"1675809","<p>Normally there's no need for that. First of all </p>

<pre><code>echo $CLASSPATH
</code></pre>

<p>If there's something in there, you probably want to check Applications -> Utilites -> Java.</p>
"
"1676141","<p>BufferedReader has <code>read(char[] cbuf, int off, int len)</code> can't you use that, convert chars to bytes and wrap it with ByteArrayInputStream?</p>

<p>EDIT: why would someone downvote that? Give a comment please. This works perfectly fine:</p>

<pre><code>    ByteArrayOutputStream bos = new ByteArrayOutputStream();

    try {
        bos.write(""TEST1\n"".getBytes());
        bos.write(""10\n"".getBytes());
        for (int i = 0; i &lt; 10; i++)
            bos.write(i);
        bos.write(""TEST2\n"".getBytes());
        bos.write(""1\n"".getBytes());
        bos.write(25);

        ByteArrayInputStream bis = new ByteArrayInputStream(bos.toByteArray());
        BufferedReader br = new BufferedReader(new InputStreamReader(bis));

        while (br.ready()) {
            String s = br.readLine();
            String num = br.readLine();
            int len = Integer.valueOf(num);
            System.out.println(s + "", reading "" + len + "" bytes"");
            char[] cbuf = new char[len];
            br.read(cbuf);
            byte[] bbuf = new byte[len];
            for (int i = 0; i &lt; len; i++)
                bbuf[i] = (byte) cbuf[i];
            for (byte b: bbuf)
                System.out.print(b + "" "");
            System.out.println();
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
</code></pre>

<p>Output: </p>

<pre><code>TEST1, reading 10 bytes
0 1 2 3 4 5 6 7 8 9 
TEST2, reading 1 bytes
25
</code></pre>
"
"1691154","<p>I don't know if you can do this at compile time, but here's an idea.  Why not check at runtime by creating a class of type Foo and checking to see if it is an <code>instanceof</code> FooInterface?  Hope this helps.  I tried to think of some sort of solution with annotations, but nothing I can come up with works at compile time.</p>
"
"22024345","<pre><code>//constructor
     public Account(int id, double balance, Person owner){

        this.id = id;
        this.balance = balance;
        this.owner = owner;
</code></pre>
"
"1691345","<p>Using <strong>AOP</strong>, you can weave the students' classes and synthetically <strong>let them implement <code>FooInterface</code> at runtime</strong> and run your test suite against them. This can be done fairly easy and automated using custom class loaders for each student.</p>

<p>However, i'm unsure about how this will behave at runtime when the class does not actually implement all the methods with correct signature, e.g. if it just throws <code>MethodNotFoundErrors</code></p>

<pre><code>aspect MakeImplementFooAspect {
  // makes many classes implement FooInterface
  declare parents : edu.teaching.foo.* implements FooInterface;
}
</code></pre>
"
"1696849","<p>I think you can also do something like.</p>

<pre><code>public long[] parseString(String input)
{
            //1. Split with comma separated
            int nLength = input.Split(new char[] { ',' }).Length;
            long[] arList = new long[nLength];

            for (int i = 0; i &lt; nLength; i++)
            {
                arList[i] = long.Parse(input.Split(new char[] { ',' })[i].ToString());
            }

            return arList;
}
</code></pre>

<p>Usage:</p>

<pre><code>long[] l = parseString(""10, 30, 40, 50"");
</code></pre>
"
"22374659","<p>Assuming that, Firebug is installed. Your objective is to run Firebug. Firebug can be run/execute by pressing F12 key. So Firebug can be run by following command of Selenium WebDriver with Java:</p>

<pre><code>Actions action = new Actions(driver);
action.sendKeys(Keys.F12).build().perform();
</code></pre>
"
"22552698","<pre><code>Integer i= Integer.parseInt(text.substring(text.length() - 7));
</code></pre>

<p>This just worked for me. Very simple yet efficient and effective solution....</p>
"
"22656936","<p>I was getting error like:</p>

<p>nothing below this lineError 500: java.lang.IllegalStateException: SRVE0199E: OutputStream already obtained</p>

<p>Solved by setting: </p>

<pre><code>response.getOutputStream().write(bytes);
response.setContentLength(bytes.length);
</code></pre>

<p>Now output becomes:</p>

<p>nothing below this line</p>
"
"22690307","<p>i think that is the solution</p>

<pre><code>ArrayList&lt;table&gt; libel = new ArrayList&lt;table&gt;();
try {
SessionFactory sf = new Configuration().configure().buildSessionFactory();
Session s = sf.openSession();
s.beginTransaction();

String hql = ""FROM table "";

org.hibernate.Query query = s.createQuery(hql);
libel= (ArrayList&lt;table&gt;) query.list();
Iterator it = libel.iterator();
while(it.hasNext()) {
table cat = (table) it.next();

cat.getLibCat();//table colonm getter


combobox.addItem(cat.getLibCat());
}
s.getTransaction().commit();
s.close();
sf.close();
} catch (Exception e) {
System.out.println(""Exception in getSelectedData::""+e.getMessage());
</code></pre>
"
"23027019","<p>They are all wrong I just wrote this in about 10 seconds.
With this I managed to just call the object.getQuestion(""linenumber"") in the main method to return whatever line I want.</p>

<pre><code>public class Questions {

File file = new File(""Question2Files/triviagame1.txt"");

public Questions() {

}

public String getQuestion(int numLine) throws IOException {
    BufferedReader br = new BufferedReader(new FileReader(file));
    String line = """";
    for(int i = 0; i &lt; numLine; i++) {
        line = br.readLine();
    }
    return line; }}
</code></pre>
"
"23826487","<p>Try this:</p>

<pre><code>public class Node {

private int data; //holds an arbitrary integer
private Node next; //reference to the next node

public Node(int d,Node n)
{
    data=d;
    next=n;
}

// these methods let us use our variables
public void setNext(Node n)
{
    next=n;
}

public void setData(int d)
{
    data=d;
}
public Node getNext()
{
    return next;
}

public int getData()
{
    return data;
}
private static Node firstNode; //a reference to the first Node
private static Node lastNode=null; //a reference to the last Node

public static void display() //displays all the data in nodes
{
    Node n=firstNode;
    while(n!=null) // loops forward displaying 
    {
        System.out.print(n.getData()+"",  "");
        n=n.getNext(); //move to the next node in the list
    }
}

public static void create(int d) //inserts the node into the list
{
    Node n =new Node(d, null); // create node
    if(lastNode!=null) // if it is not the first node
    {
        lastNode.setNext(n);
        lastNode=n;
    }
    else //if n is the first node
    {
        firstNode=n;
        lastNode=n;
    }
}


 public static void removeLast(){
        if (firstNode == null || firstNode.next == null){
            firstNode = null;
            return;
        }
        Node current = firstNode;
        Node tmphead = current;
        while(current.next.next != null){
            current = current.next;
        }
        current.next = null;
        firstNode = tmphead ;
    }


 public static void removeFirst(){
     if(firstNode!=null)
     {
        firstNode= firstNode.next;
     }
    }

public static void main(String[] args) {

    create(10);
    create(20);
    create(30);
    create(40);
    create(50);
    create(60);
    display();
    System.out.println();
    removeLast();
    display();
    System.out.println();
    removeFirst();
    display();
}
}
</code></pre>
"
"23843692","<p>i've been searching the same solution which you seem to be looking for, and i resolved it in this way. if you occur mousePressed Event you can terminate it also reuse it, but it need to be initialized, as you can see below.</p>

<pre><code>class MouseHandler extends MouseAdapter{
    public void mousePressed(MouseEvent e) {            
        if(th.isAlive()){
            th.interrupt();
            th = new Thread();
        }
        else{
            th.start();
        }
    }

}
</code></pre>
"
"23847580","<p>I create this Methode and call it by closing the application:</p>

<pre><code>  public void deleteFiles(){

    File f = new File(""log"");
    File[] fileArray = f.listFiles();
    double timenow = System.currentTimeMillis();

    double olderTenDays = timenow - 864000000;// MS for ten days

    for (int i = 0; i &lt; fileArray.length; i++) {

        if(fileArray[i].lastModified()&lt; olderTenDays )
           fileArray[i].delete();
    }
 }
</code></pre>
"
"2223290","<p>set field's default value in your bean's empty constructor.</p>

<pre><code>    @Basic(optional=false)
    @Column(nullable=false)
    private String firstName;

    public MyBean()
    {
      this.firstName = ""defaultValue"";
    }
</code></pre>
"
"24115954","<p>You can try something like : </p>

<pre><code>LocalDate fromCustomPattern = LocalDate.parse(""20.01.2014"", DateTimeFormatter.ofPattern(""MM/dd/yy""))
</code></pre>
"
"24485408","<pre><code>URL url = Test.class.getResource(args[0]);  // reading demo file path from                                                   
                                            // same location where class                                    
File input=null;
try {
    input = new File(url.toURI());
} catch (URISyntaxException e1) {
    // TODO Auto-generated catch block
    e1.printStackTrace();
}
</code></pre>
"
"25137609","<p><strong>Enter the Number, and Create an arraylist, and the while loop will give add all number of digits into the array list then  we can take out the size of array, which will be the length of the integer value you entered....</strong></p>

<pre><code>ArrayList&lt;Integer&gt; a=new ArrayList&lt;&gt;();

   while(number &gt; 0) 
   { 
     remainder = num % 10; 

       a.add(remainder);
      number = number / 10; 
   } 

int m=a.size();
</code></pre>
"
"1823505","<p>This is an extension of the comments to the original question.</p>

<p>There are multiple problems with having a LOT of enums.</p>

<p>The main reason is that when you have a lot of data it tends to change, or if not you often want to add new items.  There are exemptions to this like unit conversions that would never change, but for the most part you want to read data like this from a file into a collection of classes rather than an enum.</p>

<p>To add new items is problematic because since it's an enum, you need to physically modify your code unless you are ALWAYS using the enums as a collection, and if you are ALWAYS using them as a collection, why make them enums at all?</p>

<p>The case where your data doesn't change--like ""conversion units"" where you are converting feet, inches, etc.  You COULD do this as enums and there WOULD be a lot of them, but by coding them as enums you lose the ability to have data drive your program.  For instance, a user could select from a pull-down list populated by your ""Units"", but again, this is not an ""ENUM"" usage, it's using it as a collection.</p>

<p>The other problem will be repetition around the references to your enum.  You will almost certainly have something very repetitive like:</p>

<pre><code>if(userSelectedCard() == cards.HEARTS)
    graphic=loadFile(""Heart.jpg"");
if(userSelectedCard() == cards.SPADES)
    graphic=loadFile(""Spade.jpg"");
</code></pre>

<p>Which is just wrong (If you can squint to where you can't read the letters and see this kind of pattern in your code, you KNOW you are doing it wrong). </p>

<p>If the cards were stored in a card collection, it would be easier to just use:</p>

<pre><code>graphic=cards.getGraphicFor(userSelectedCard());
</code></pre>

<p>I'm not saying that this can't be done with an enum as well, but I am saying that I can't see how you would use these as enums without having some nasty code-block like the one I posted above.</p>

<p>I'm also not saying that there aren't cases for enums--there are lots of them, but when you get more than a few (7 was a good number), you're probably better off with some other structure.</p>

<p>I guess the exception is when you are modeling real-world stuff that has that many types and each must be addressed with different code, but even then you are probably better off using a data file to bind a name to some code to run and storing them in a hash so you can invoke them with code like: hash.get(nameString).executeCode().  This way, again, your ""nameString"" is data and not hard-coded, allowing refactoring elsewhere.</p>

<p>If you get in the habit of brutally factoring your code like this, you can reduce many programs by 50% or more in size.</p>
"
"25794164","<p>Just use subtrings, and the contains method to find out.</p>

<pre><code>package nmelssx;
import java.util.Arrays;

public class Nmelssx {

    public static void main (String args[])
    {
        String text = ""004-034556"";
        String text1 = text.substring(0,3);
        String text2 = text.substring(5,10);

        if (text.contains(""-"")) {
            System.out.println(""It contains the -"");
        }
        else {
            System.out.println(""It doesn't contain the -"");
        }
    }
}
</code></pre>
"
"1835373","<p>You can use the Java <code>instanceof</code> operator to check what class implements your interface:</p>

<pre><code>if(obj instanceof A) {
    // do something
} else {
    // do something else
}
</code></pre>

<p>But a better approach is to have a method that will just take any object that is an instance of the interface you have created, as mentioned by Atmocreations.</p>
"
"26173996","<pre><code>public static void main(String[] args) {
    System.out.println(""Integer Value :"" +convertIntToString(new int[]{3,4,5}));
}

public static String convertIntToString(int intArray[]) {
    List&lt;Integer&gt; listInteger = new ArrayList&lt;Integer&gt;();

    for (int i = 0; i &lt; intArray.length; i++) {
        listInteger.add(intArray[i]);
    }

    Object o = listInteger;

    return String.valueOf(o).replace(""["", """").trim().replaceAll("", "","""").trim().replaceAll(""\\]"","""").trim();
}
</code></pre>
"
"26519745","<p>If am not wrong. Actually this happens with most beginners.Its not that SQL doesn't except spaces via java but its about taking character input via Scanner.next(). i think it happens only when you are trying to pass an input value with a space character from keyboard to a variable and use that variable in the query. As Java Scanner.next() always expects only the last word that you type as the input before pressing the return button you would be passing a half of the value(last past of input) to the variable that would be used in the WHERE clause query and that might return empty result set.
Here's a demonstration</p>

<pre><code>//This would work..Test it like this first
String f="" SELECT * FROM users WHERE username='adam villiam'"";
//but if you type adam villiam and press enter 
//to asign it to a variable via Scanner.next() 
//only villiam would be saved in the variable.
//you expect (adam villiam)
username=""adam villiam"";
//but result would be (only villiam)
username=""villiam""
//so if you do it like this it will not return as expected,
String f="" SELECT * FROM users WHERE username='""+username+""'"";
//because this clause mean to be like this(only villiam)
String f="" SELECT * FROM users WHERE username='villiam'"";
</code></pre>
"
"1861805","<pre><code>days = (date2.getTime() - date1.getTime())/86400000L
</code></pre>
"
"27164947","<p>You can try this.</p>

<pre><code>Main MainObject = new Main;

MainObject.main(args);
</code></pre>

<p>It will restart the class again and again until you stop the class.</p>
"
"27377041","<p>Isn't it just: <code>System.out.println(Array.length);</code>? Because this is what it seems like you are looking for.</p>
"
"1879314","<p>I agree with Anon, and in the case where I always want to instantiate the singleton I would use</p>

<pre><code>public class SingletonObject
{
public static SingletonObject REF = new SingletonObject();

private SingletonObject()
{
    // no code req'd
}
</code></pre>

<p>}</p>
"
"27616331","<pre><code>           import java.io.*;

                   class unique
                  {
                           public static int[] ascii(String s)
                           {
                                    int length=s.length();
                                    int asci[] = new int[length];
                                    for(int i=0;i&lt;length;i++)
                                    {
                                              asci[i]=(int)s.charAt(i);
                                     }
                              return asci;
                            }
                            public static int[] sort(int a[],int l)
                           {
                                       int j=1,temp;
                                       while(j&lt;=l-1)
                                       {
                                                 temp = a[j];
                                                  int k=j-1;
                                                  while(k&gt;=0 &amp;&amp; temp&lt;a[k])
                                                 {
                                                           a[k+1]= a[k];
                                                           k--;
                                                 }
                                                a[k+1]=temp;
                                                j++;
                                       } 
                           return a;
                    }
              public static boolean compare(int a[])
            { 
                     int length=a.length;
                     int diff[] = new int[length-1];
                     boolean flag=true;
                     for(int i=0;i&lt;diff.length;i++)
                    {
                             diff[i]=a[i]-a[i+1];
                             if(diff[i]==0)
                             {
                                        flag=false;
                                        break;
                             }
                             else
                             {
                                      flag=true;
                             }
                     }
                     return flag;
                }
                public static void main(String[] args)         throws IOException 
               {
                 BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
                 String str = null;
                 boolean result = true;
                 System.out.println(""Enter your String....."");
                 str = br.readLine();
                 str = str.toLowerCase();
                 int asc[]=ascii(str);
                 int len = asc.length;
                 int comp[]=sort(asc,len);
                 if(result==compare(comp))
                 {
                     System.out.println(""The Given String is Unique"");
                 }
                 else
                {
                        System.out.println(""The Given String is not Unique"");
                 }
              }
</code></pre>

<p>}</p>
"
"1892103","<p>you could use a </p>

<pre><code> long startTime = System.currentTimeMillis();
</code></pre>

<p>at the beggining</p>

<p>and</p>

<pre><code> long endTime = System.currentTimeMillis();
</code></pre>

<p>and finally to get the result</p>

<pre><code> long result = endTime - startTime; //Note, part might be backwards, I don't
                                    //Remember
</code></pre>
"
"2419466","<p>there is nothing wrong with the code you pasted, however you can use a non static inner class to make things (arguably) cleaner:</p>

<pre><code>public class ClassA {
    private boolean ClassAattr = false;

    public ClassA() {    
        ClassAHandler handler = new ClassAHandler();
    }

    class ClassAHandler extends GeneralHandler {

        // magically sees the instantiating ClassA members and methods
    }
}
</code></pre>
"
"1900335","<p>Well, the listener on the button reacts only when it is pushed down, because you listen for <code>ItemEvent.SELECTED</code> events only. How about adding another if clause to listen for <code>ItemEvent.DESELECTED</code> events here:</p>

<pre><code>    moreButton.addItemListener(new ItemListener() {
        public void itemStateChanged(ItemEvent e) {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                createAndShowMenu((JComponent) e.getSource(), moreButton);
            }
        }
    });
</code></pre>

<p>You could either store a reference to the <code>menu</code> somewhere, <em>or</em> you could make the menu itself add another listener to the button. The latter solution could be more straightforward, since you already seem to send a button reference to the menu.</p>
"
"2434077","<pre><code>Abc&lt;String&gt; abcInstance = new Abc&lt;String&gt; ();
</code></pre>

<p>..for example</p>
"
"28738944","<p>Good answers above explaining the actual question from the OP. </p>

<p>If anyone needs to pass around a number that needs to be globally updated, use the <code>AtomicInteger(</code>) instead of creating the various wrapper classes suggested or relying on 3rd party libs. </p>

<p>The <code>AtomicInteger(</code>) is of course mostly used for thread safe access but if the performance hit is no issue, why not use this built-in class. The added bonus is of course the obvious thread safety.</p>

<pre><code>import java.util.concurrent.atomic.AtomicInteger
</code></pre>
"
"28766182","<p>You can use <code>java.util.concurrent.atomic.AtomicInteger</code>.</p>
"
"1917406","<p>I'd make a WidgetCollection class with an abstract Widget inner class.</p>

<p>You can extend the WidgetCollection.Widget class for each of your types of Widget.</p>

<p>No static methods necessary.</p>

<p>Example (not compiled or tested):</p>

<pre><code>class WidgetCollection&lt;W extends Widget&gt; {
    Set&lt;W&gt; widgets = new HashSet&lt;W&gt;();

    Set&lt;W&gt; getAll() {
        return widgets;
    }

    abstract class Widget {

       Widget() {
           widgets.add(this);
       }

       abstract String getName();
    }

    public static void main(String[] args) {
         WidgetCollection&lt;AWidget&gt; aWidgets = new WidgetCollection&lt;AWidget&gt;();
         a.new AWidget();

         Set&lt;AWidget&gt; widgets = aWidgets.getAll();
    }
}

class AWidget extends Widget {
    String getName() {
        return ""AWidget"";
    }
}
</code></pre>
"
"29890463","<p>Try:</p>

<pre><code>try
{
    int cnt= m.getSmartPhoneCount(""HTC"",true);      
    System.out.println(""total count of HTC=""+cnt);
}  
catch (NoSuchBrandSmartPhoneAvailableException e)
{
    // TODO Auto-generated catch 
    e.printStackTrace();
}
</code></pre>
"
"29890601","<pre><code> SmartPhone[] sp=new SmartPhone[4];
 sp[0]=new SmartPhone(1,""HTC"",""desire"",""black"",20000,10,true,true);
 sp[1]=new SmartPhone(2,""samsung"",""grand"",""black"",5000,10,false,true);
 sp[2]=new SmartPhone(14,""google nexus"",""desire"",""black"",2000,30,true,false);
 sp[3]=new SmartPhone(13,""HTC"",""desire"",""white"",50000,40,false,false);
</code></pre>
"
"29890619","<pre><code>while (itr.hasNext()) {
    Vehicle vc=(Vehicle) itr.next();
    if(vc.getVehicleType().equalsIgnoreCase(s)) {
        count++;
    }
}
</code></pre>
"
"1949889","<p>While I cannot figure a way to improve the design, at least we can pull out the generic component into a utility class.  With the threading code pulled out, BulkCalc3 is sufficiently concise.</p>

<pre><code>class BulkCalc3
{
    final Calc calc;

    public BulkCalc3(Calc calc)
    {
        this.calc = calc;
    }

    public TreeMap&lt;Integer, Double&gt; calc(Iterator&lt;BigThing&gt; in)
    {
        final ConcurrentMap&lt;Integer, Double&gt; resultMap = new MapMaker().makeMap();
        ThreadedIteratorProcessor&lt;BigThing&gt; processor = new ThreadedIteratorProcessor&lt;BigThing&gt;();
        processor.processIterator(in, new ThreadedIteratorProcessor.ElementProcessor&lt;BigThing&gt;()
        {
            @Override
            public void processElement(BigThing o)
            {
                resultMap.put(o.getId(), calc.calc(o));
            }
        });
        return new TreeMap&lt;Integer, Double&gt;(resultMap);
    }
}
</code></pre>

<p>Here's the utility class:</p>

<pre><code>import com.google.common.collect.Lists;
import com.google.common.util.concurrent.MoreExecutors;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

/**
 * A utility class to process each element in an iterator in an efficient manner.
 */
public class ThreadedIteratorProcessor&lt;T&gt;
{
    public static interface ElementProcessor&lt;T&gt;
    {
        /**
         * Process an element.
         * @param element The element to process.
         */
        public void processElement(T element);
    }
    private final int numThreads;

    /**
     * Create an instance which uses a specified number of threads.
     * @param numThreads The number of processing threads.
     */
    public ThreadedIteratorProcessor(int numThreads)
    {
        this.numThreads = numThreads;
    }

    /**
     * Create an instance which uses a number of threads equal to the number of system processors.
     */
    public ThreadedIteratorProcessor()
    {
        this(Runtime.getRuntime().availableProcessors());
    }

    /**
     * Process each element in an iterator in parallel.  The number of worker threads depends on how this object was
     * constructed.  This method will re-throw any exception thrown in the supplied ElementProcessor.  An element will
     * not be requested from the iterator any earlier than is absolutely necessary.  In other words, the last element in
     * the iterator will not be consumed until all of the other elements are completely processed, excluding elements
     * currently being processed by the worker threads.
     * @param iterator The iterator from which to get elements.  This iterator need not be thread-safe.
     * @param elementProcessor The element processor.
     */
    public void processIterator(Iterator&lt;T&gt; iterator, ElementProcessor&lt;T&gt; elementProcessor)
    {
        // Use an ExecutorService for proper exception handling.
        ExecutorService e = Executors.newFixedThreadPool(numThreads, MoreExecutors.daemonThreadFactory());
        List&lt;Future&lt;?&gt;&gt; futures = Lists.newLinkedList();

        // Get a thread-safe iterator
        final SafeIterator&lt;T&gt; safeIterator = new SafeIterator&lt;T&gt;(iterator);

        // Submit numThreads new worker threads to pull work from the iterator.
        for (int i = 0; i &lt; numThreads; i++)
        {
            futures.add(e.submit(new Consumer&lt;T&gt;(safeIterator, elementProcessor)));
        }

        e.shutdown();

        // Calling .get() on the futures accomplishes two things:
        // 1. awaiting completion of the work
        // 2. discovering an exception during calculation, and rethrowing to the client in this thread.
        for (Future&lt;?&gt; future : futures)
        {
            try
            {
                future.get();
            }
            catch (InterruptedException ex)
            {
                // swallowing is OK
            }
            catch (ExecutionException ex)
            {
                // Re-throw the underlying exception to the client.
                throw Throwables.propagate(ex.getCause());
            }
        }
    }

    // A runnable that sits in a loop consuming and processing elements from an iterator.
    private static class Consumer&lt;T&gt; implements Runnable
    {
        private final SafeIterator&lt;T&gt; it;
        private final ElementProcessor&lt;T&gt; elementProcessor;

        public Consumer(SafeIterator&lt;T&gt; it, ElementProcessor&lt;T&gt; elementProcessor)
        {
            this.it = it;
            this.elementProcessor = elementProcessor;
        }

        @Override
        public void run()
        {
            while (true)
            {
                T o = it.nextOrNull();
                if (o == null)
                {
                    return;
                }
                elementProcessor.processElement(o);
            }
        }
    }

    // a thread-safe iterator-like object.
    private static class SafeIterator&lt;T&gt;
    {
        private final Iterator&lt;T&gt; in;

        SafeIterator(Iterator&lt;T&gt; in)
        {
            this.in = in;
        }

        synchronized T nextOrNull()
        {
            if (in.hasNext())
            {
                return in.next();
            }
            return null;
        }
    }
}
</code></pre>
"
"1950903","<p>Trust your guts... :)
With StringTokenizer: <pre><code>import java.io.*;
import java.util.StringTokenizer;
public class Test {
  public Test() {
  }</p>

<p>public void execute(String str) {
    String date, time, firstName, lastName, cardNo;
    StringTokenizer st = new StringTokenizer(str, "" "");
    date = st.nextToken();
    time = st.nextToken();
    st.nextToken(); //Admitted
    lastName = st.nextToken("","").trim();
    firstName = st.nextToken("",("").trim();
    st.nextToken(""#""); //Card
    cardNo = st.nextToken("")#"");
    System.out.println(""date = "" + date +""\ntime = "" + time +""\nfirstName = "" + firstName +""\nlastName = ""+ lastName +""\ncardNo = "" +cardNo);
  }</p>

<p>public static void main(String args[]) {
    Test t = new Test();
    String record1 = ""12/18/2009 02:08:26 Admitted Doe, John (Card #111) at South Lobby [In]"";
    String record2 = ""12/18/2009 02:08:26 Admitted Van Halen, Eddie (Card #222) at South Lobby [In]"";
    String record3 = ""12/18/2009 02:08:26 Admitted Thoreau, Henry David (Card #333) at South Lobby [In]"";
    t.execute(record1);
    t.execute(record2);
    t.execute(record3);
  }
}</code></pre></p>
"
"2525600","<p>It's working correctly; it should work with + as well as it would with %20.</p>

<p>Maybe try <code>java.net.URLEncoder(""url"", ""UTF-8"")</code>?</p>
"
"2000753","<p>Try to add the buttons first and then call <code>hp.setHorizontalAlignment(""your aligment here"")</code>.</p>

<p>Good luck!</p>
"
"2009834","<p>It's because the parameter <code>T</code> (as the parameter for the <code>BinaryNode&lt;T&gt;</code> class) is the same as that used for <code>AVLTree&lt;T&gt;</code> -- the parameter used for <code>AVLTree</code> is normally in scope for the definition of the inner class <code>BinaryNode</code>, but because you're giving a new parameter the same name, it will be hidden.  You could instead use:</p>

<pre><code>private class BinaryNode&lt;U extends Comparable&lt;? super T&gt;&gt; { ... }
</code></pre>
"
"2567580","<p>Overloading: same method name, same parameter list, different classes
Overriding: same method name, different parameter list, same or different classes. </p>

<pre><code>Class A {

    bool Equals(Document d) {...} 

    bool Equals(A a) {...} // overloaded method
}

Class B extends A {
    bool Equals(Document d) {...} // overridden method

    bool Equals(B b) {...} // overloaded method
}
</code></pre>

<p>One thing to note, the return type does not matter, it's the name of the method and the parameter list that make all the difference.</p>
"
"2568874","<p>using any padding mechanisms to fill the empty bits</p>

<pre><code>Cipher cipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
</code></pre>
"
"2622961","<p>You should get the proper results if you take the string and call the string's
 <code>.getBytes(""UTF-8"")</code> function.  This will force it back to a byte array using the same char set that you get the string with.<br>
From there you should be able to send the byte array back to a string using the <code>new String(byte[] bytes], String charset)</code> constructor, passing in the appropriate char set.</p>

<p>See <a href=""http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html"" rel=""nofollow"">javadocs</a> for details.</p>
"
"2623578","<p>import java.util.Scanner;</p>

<p>class Example{</p>

<p>//Checks to see if a string is consider an integer.</p>

<pre><code>public static boolean isInteger(String s){

    if(s.isEmpty())return false;

    for (int i = 0; i &lt;s.length();++i){

        char c = s.charAt(i);

        if(!Character.isDigit(c) &amp;&amp; c !='-')

            return false;
    }

    return true;
}

//Get integer. Prints out a prompt and checks if the input is an integer, if not it will keep asking.

public static int getInteger(String prompt){
    Scanner input = new Scanner(System.in);
    String in = """";
    System.out.println(prompt);
    in = input.nextLine();
    while(!isInteger(in)){
        System.out.println(prompt);
        in = input.nextLine();
    }
    return Integer.parseInt(in);
}

public static void main(String[] args){
    int [] a = new int[6];
    for (int i = 0; i &lt; a.length;++i){
        int tmp = getInteger(""Enter integer for array_""+i+"": "");//Force to read an int using the methods above.
        a[i] = tmp;
    }

}
</code></pre>

<p>}</p>
"
"2061641","<p>I can't think of any specific cases where omitting the parens would actually cause any ambiguity, but there is probably a corner case somewhere.</p>

<p>It might be related to locally declared variables (as in <code>if (bool b = foo())...</code> where without the parentheses, it'd be harder to determine if <code>bool</code> is a type declaration or the the entire condition. In the latter case, <code>b</code> would then be the first token of the if-statements body, rather than part of the condition.</p>
"
"2061654","<p><strike>I think you are confusing ""brackets"" with ""parenthesis""</p>

<p>This is possible in  C:</p>

<pre><code>void doSomething(){}
void doSomethingElse(){}

void main() {
    int val = 0;
    if( val ) 
        doSomething();
    else
        doSomethingElse();
}
</code></pre>

<p></strike></p>

<p>Not all ""C"" languages force the parethesis usage and and leave braces as optional.   Go ( Issue) programming language does exactly the <a href=""http://stackoverflow.com/questions/1712172/whats-your-take-on-the-programming-language-go/1716703#1716703"">opposite</a>. </p>

<p>The correct way to write that same sentence in Issue9 would be:</p>

<pre><code>if val {
    doSomething();
} else {
    doSomethingElse();
}
</code></pre>

<p>That way the following is not valid:</p>

<pre><code>if x * x * b = NULL; 
</code></pre>

<p>It should be one of:</p>

<pre><code>if x*x {
    *b=NULL;
}
</code></pre>

<p>or
   if x {
       *x*b=NULL;
   }</p>

<p>Here the braces remove the ambiguity created by the lack of parenthesis. </p>
"
"2061663","<p>I can give at least one example why in C there are paranthesis around conditions, </p>

<p>For example consider the following</p>

<pre><code>while(1) do_something();
</code></pre>

<p>The above will call do_something() for ever in an infinite loop</p>

<p>The reason the parenthis are required is because the following would be ambiguous</p>

<p><code>while 1 ; do_something();</code> 
does that mean, evaluate do_something and do nothing in the while loop? or does it mean the same as the code sample above?</p>

<p>I guess that showes one way why in the C syntax parenthis are required around condition evaluations, and by extending the same syntax (for the sake of consitency) it is extended to the if statements.</p>

<p>Discalaimer: I could be completely wrong and the reason behind having the pranthesis could be completely different, but at least I've shown one example of how it can be useful</p>
"
"2704164","<p>You could read the byte array and turn it into a String.  </p>

<p>The problem will be the InputStream.  There's a StringBufferInputStream, but it's deprecated in favor of StringReader.</p>

<pre><code>byte [] b = Assets.get();
InputStream is = new StringBufferInputStream(new String(b));
Pattern.load(is);
</code></pre>
"
"2704190","<p>You don't want to use <code>File</code>, you want to use <code>java.io.ByteArrayInputStream</code></p>
"
"2722028","<blockquote>
  <p>Strings are more commonly concatenated
   with the + operator, as in 
  <code>""Hello,"" + "" world"" + ""!""</code></p>
</blockquote>

<p><a href=""http://java.sun.com/docs/books/tutorial/java/data/strings.html"" rel=""nofollow"">Source</a></p>
"
"2724796","<p>You could try using <code>screen</code> (Launch screen, then launch the java program, then close[not quit] the screen)</p>
"
"2743882","<p>Seems like you should look to implement some sort of <code>Model View Controller Pattern</code>.
Have a look <a href=""http://java.sun.com/developer/technicalArticles/javase/mvc/"" rel=""nofollow"">here</a></p>

<p>The basic idea is that you should fire an event when the boolean is changed, and then that event is fired, your listener should handle that.</p>
"
"2165341","<p>In the first case :</p>

<pre><code>Subtype foo = (Subtype)input;
</code></pre>

<p>it is determined at compile time, so no cost at runtime.</p>

<p>In the second case :</p>

<pre><code>((Subtype)input).methodA();
</code></pre>

<p>it is determined at run time because compiler will not know. The jvm has to check if it can converted to a reference of <code>Subtype</code> and if not throw <code>ClassCastException</code> etc. So there will be some cost.</p>
"
"2780148","<p>how about:</p>

<pre><code>TestEnum[] arr = new TestEnum[]{null, ONE,TWO,THREE};

TestEnum one = arr[1];
</code></pre>
"
"2816218","<p>When I place the following code and run it, I don't receive any exceptions:</p>

<pre><code>import java.io.UnsupportedEncodingException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.InvalidParameterSpecException;
import java.security.spec.KeySpec;

import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.PBEKeySpec;
import javax.crypto.spec.SecretKeySpec;


public class Main 
{
    public static void main(String[] args)
    {
        String pass = ""this is the pass"";
        char[] pw = new char[pass.length()];
        for(int k=0; k&lt;pass.length();++k)
        {
            pw[k] = pass.charAt(k); 
        }
        try {
            byte[] q = encrypt(pw,""asdf"".getBytes(),""der text"");
            System.out.println(new String(q));
        } catch (InvalidKeyException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (NoSuchAlgorithmException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (InvalidKeySpecException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (NoSuchPaddingException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (InvalidParameterSpecException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IllegalBlockSizeException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (BadPaddingException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (UnsupportedEncodingException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

    }

    public static SecretKey getSecretKey(char[] password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException{
        SecretKeyFactory factory = SecretKeyFactory.getInstance(""PBEWithMD5AndDES"");
        // NOTE: last argument is the key length, and it is 256
        KeySpec spec = new PBEKeySpec(password, salt, 1024, 256);
        SecretKey tmp = factory.generateSecret(spec);
        SecretKey secret = new SecretKeySpec(tmp.getEncoded(), ""AES"");
        return(secret);
    }


    public static byte[] encrypt(char[] password, byte[] salt, String text) throws NoSuchAlgorithmException, InvalidKeySpecException, NoSuchPaddingException, InvalidKeyException, InvalidParameterSpecException, IllegalBlockSizeException, BadPaddingException, UnsupportedEncodingException{
        SecretKey secret = getSecretKey(password, salt);

        Cipher cipher = Cipher.getInstance(""AES"");

        // NOTE: This is where the Exception is being thrown
        cipher.init(Cipher.ENCRYPT_MODE, secret);
        byte[] ciphertext = cipher.doFinal(text.getBytes(""UTF-8""));
        return(ciphertext);
    }
}
</code></pre>

<p>I was never able to recreate the exception that you had.  I'm running J2SE 1.6 and developing on Eclipse.</p>

<p>Could it be that your password is not 16 bytes long?</p>
"
"2218197","<p>The not requiring a prototype before using the function caused horrible problems.  It would allow you do such bad things as:</p>

<pre><code>malloc(""foo"");
</code></pre>

<p>if the compiler does not have a declaration, it doesn't know that this is a bad way to call it.</p>

<p>As for requiring a prototype even when you see the definition before using it, that is not a requirement of the C++ spec.  gcc has an option (<code>-Wmissing-prototypes</code>) that enables that behavior but you can turn it off.</p>
"
"2221792","<p>Because C allows one to do :</p>

<pre><code>if (x) { // As opposed to java where you need to do if (x == something)
   // your code
}
</code></pre>

<p>As you can see above flexibility gives rise to ambiguity as others have shown.</p>
"
"2867413","<p>Here is my Code:</p>

<pre><code>public void setPartner(Person partner) {
    if (this.partner != null)
       this.partner.partner = null;
    this.partner = partner;
    if (partner.partner != null)
       partner.partner.partner = null;
    partner.partner = this;
}
</code></pre>
"
"2255532","<p>There's no shortcut for doing this in Java like the example you gave in Python.</p>

<p>You'd have to do this:</p>

<pre><code>for (;i &gt; 0; i--) {
    somenum = somenum + ""0"";
}
</code></pre>
"
"2256059","<p>Or, you use something like this (but it's not a Criteria query):</p>

<p><code>
String query = ""Select s.&lowast;, fl.&lowast;, fvl.&lowast;, fv.&lowast;, ffv.&lowast; from table1 s JOIN blah blah Order BY ..."":;<br>
String[] aliasesArr = {""s"",""fl"",""fvl"",""fv"",""ffv""};<br>
Class[] classesArr = {Table1.class,Table2.class, blah blah};<br>
SQLQuery sqlquery = session.createSQLQuery(query);<br>
for(int i=0; i &lt; aliasesArr.length; i++){sqlquery .addEntity(aliasesArr[i], classesArr[i]);}<br>
List hibernateResults = sqlquery.list();
<br>
if(hibernateResults.size() > 0){<br>
            for(int i=0; i &lt; hibernateResults.size(); i++){//for every row<br>
                Object[] currResult = (Object[])hibernateResults.get(i);//get the current row<br>
((Table1)currResult[0])//this is the first table/alias/pojo</p>

<p></code></p>

<p>The result is a List where each entry is an array that corresponds to the types in classesArr (the array indices correspond to the order of the aliases/classes).</p>
"
"2279866","<blockquote>
  <p>In my experience, cases where a try-catch-finally would be appropriate, i.e., where the block in which I want to catch some particular exception is exactly the same block in which I use some disposable resource, are extremely rare. Yet, the language designers of C#, VB and Java seem to consider this to be a highly common scenario; the VB designers even think about adding catch to using.</p>
</blockquote>

<p>you:</p>

<pre><code>try {
   //use resource
} catch (FirstException e) {
   // dispose resource
   // log first exception
} catch (SecondException e) {
   // dispose resource
   // log first exception
} catch (ThirdException e) {
   // dispose resource
   // log first exception
}
</code></pre>

<p>me:</p>

<pre><code>try {
  //use resource
} catch (FirstException e) {
  // log first exception
} catch (SecondException e) {
  // log first exception
} catch (ThirdException e) {
  // log first exception
} finally {
  // dispose resource
}
</code></pre>

<p>feel defference?)</p>
"
"1174708","<p>I wrote this up real quick, I think it solves your problem accurately.  I used the BigInteger class to avoid that cast from double to integer, which <em>could</em> be causing you problems.  I tested it on several large numbers over 25, such as 101, which accurately returned 24 zeros.</p>

<p>The idea behind the method is that if you take 25! then the first calculation is 25 * 24 = 600, so you can knock two zeros off immediately and then do 6 * 23 = 138.  So it calculates the factorial removing zeros as it goes.</p>

<pre><code>public static int count(int number) {
	final BigInteger zero = new BigInteger(""0"");
	final BigInteger ten = new BigInteger(""10"");
	int zeroCount = 0;
	BigInteger mult = new BigInteger(""1"");
	while (number &gt; 0) {
		mult = mult.multiply(new BigInteger(Integer.toString(number)));
		while (mult.mod(ten).compareTo(zero) == 0){
			mult = mult.divide(ten);
			zeroCount += 1;
		}
		number -= 1;
	}
	return zeroCount;
}
</code></pre>

<p>Since you said you don't care about run time at all (not that my first was particularly efficient, just slightly more so)  this one just does the factorial and then counts the zeros, so it's cenceptually simpler:</p>

<pre><code>public static BigInteger factorial(int number) {
	BigInteger ans = new BigInteger(""1"");
	while (number &gt; 0) {
		ans = ans.multiply(new BigInteger(Integer.toString(number)));
		number -= 1;
	}
	return ans;
}

public static int countZeros(int number) {
	final BigInteger zero = new BigInteger(""0"");
	final BigInteger ten = new BigInteger(""10"");
	BigInteger fact = factorial(number);
	int zeroCount = 0;
	while (fact.mod(ten).compareTo(zero) == 0){
		fact = fact.divide(ten);
		zeroCount += 1;
	}
}
</code></pre>
"
"1175098","<p>My 2 cents: avoid to work with double since they are error-prone. <strong>A better datatype in this case is BigInteger</strong>, and here there is a small method that will help you:</p>

<pre><code>public class CountTrailingZeroes {

    public int countTrailingZeroes(double number) {
        return countTrailingZeroes(String.format(""%.0f"", number));
    }

    public int countTrailingZeroes(String number) {
        int c = 0;
        int i = number.length() - 1;

        while (number.charAt(i) == '0') {
            i--;
            c++;
        }

        return c;

    }

    @Test
    public void $128() {
        assertEquals(0, countTrailingZeroes(""128""));
    }

    @Test
    public void $120() {
        assertEquals(1, countTrailingZeroes(""120""));
    }

    @Test
    public void $1200() {
        assertEquals(2, countTrailingZeroes(""1200""));
    }

    @Test
    public void $12000() {
        assertEquals(3, countTrailingZeroes(""12000""));
    }

    @Test
    public void $120000() {
        assertEquals(4, countTrailingZeroes(""120000""));
    }

    @Test
    public void $102350000() {
        assertEquals(4, countTrailingZeroes(""102350000""));
    }

    @Test
    public void $1023500000() {
        assertEquals(5, countTrailingZeroes(1023500000.0));
    }
}
</code></pre>
"
"2958869","<p>You don't say what tool you're using to do your finding (perl? sed? text editor ctrl-F etc etc). But a general regex would be:</p>

<pre><code>\"".*?\""
</code></pre>

<p><strong>Edit:</strong> this is a quick &amp; dirty answer, and doesn't cope with escaped quotes, comments etc </p>
"
"2295999","<p><code>null</code>, <code>true</code> and <code>false</code>. They are arguably keywords, but when you get down to it, they're constants evaluating to 0x00, 0x01 and 0x00 respectively.</p>
"
"2959685","<p>Use this:</p>

<pre><code>String REGEX = ""\""[^\""]*\"""";
</code></pre>

<p>Tested with</p>

<pre><code>String A = ""I went to the store to buy a \""coke\"" and a box of \""kleenex\"""";
String B = A.replaceAll(REGEX,""Pepsi"");
</code></pre>

<p>Yields the following 'B' </p>

<pre><code>I went to the store to buy a Pepsi and a box of Pepsi
</code></pre>
"
"2296168","<p>Why not just change your code to get a doubles decimal places?</p>

<pre><code>public static int getNumberOfDecimalPlace(double value) {
    //For whole numbers like 0
    if (Math.round(value) == value) return 0;
    final String s = Double.toString(value);
    System.out.println(s);
    final int index = s.indexOf('.');
    if (index &lt; 0) {
       return 0;
    }
    return s.length() - 1 - index;
}
</code></pre>
"
"2296457","<p>Michael Borgwardt answer is the correct one. As soon as you use any double or float, your values are already corrupted.</p>

<p>To provide a code example:</p>

<pre><code>System.out.println(""0 = "" + BigDecimalUtil.getNumberOfDecimalPlace(""0"")); // 0
System.out.println(""1.0 = "" + BigDecimalUtil.getNumberOfDecimalPlace(""1.0"")); // 0
System.out.println(""1.01 = "" + BigDecimalUtil.getNumberOfDecimalPlace(new BigDecimal(""1.01""))); // 2
System.out.println(""1.012 = "" + BigDecimalUtil.getNumberOfDecimalPlace(new BigDecimal(""1.012""))); // 3
System.out.println(""0.01 = "" + BigDecimalUtil.getNumberOfDecimalPlace(""0.01"")); // 2
System.out.println(""0.012 = "" + BigDecimalUtil.getNumberOfDecimalPlace(""0.012"")); // 3
System.out.println(""0.00000000000000000012 = "" + BigDecimalUtil.getNumberOfDecimalPlace(""0.00000000000000000012"")); // 20
</code></pre>

<p>And an overloaded version of getNumberOfDecimalPlace so you could use it with BigDecimal or String:</p>

<pre><code>public static int getNumberOfDecimalPlace(String value) {
    final int index = value.indexOf('.');
    if (index &lt; 0) {
        return 0;
    }
    return value.length() - 1 - index;
}

public static int getNumberOfDecimalPlace(BigDecimal value) {
    return getNumberOfDecimalPlace(value.toPlainString());
}
</code></pre>
"
"2302026","<p>Why not to have follower of type java.lang.Enum. It is parent of all enums in java.
So following code works just fine.</p>

<p><code></p>

<p>package com.test;</p>

<p>enum NewEnum {
    one, two;
}</p>

<p>enum Another {
    three, four;
}</p>

<p>public class TestMe {</p>

<pre><code>static Enum num = NewEnum.one;

public static void main(String[] args) {
    System.out.println(num.toString());
    num = Another.three;
    System.out.println(num.toString());

}
</code></pre>

<p>}
</code></p>
"
"1516235","<p>If you need to do anything more with office documents in Java, go for POI as mentioned.</p>

<p>For simple reading/writing an excel document like you requested, you can use the CSV format (also as mentioned):</p>

<pre><code>import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;

public class CsvWriter {
 public static void main(String args[]) throws IOException {

  String fileName = ""test.xls"";

  PrintWriter out = new PrintWriter(new FileWriter(fileName));
  out.println(""a,b,c,d"");
  out.println(""e,f,g,h"");
  out.println(""i,j,k,l"");
  out.close();

  BufferedReader in = new BufferedReader(new FileReader(fileName));
  String line = null;
  while ((line = in.readLine()) != null) {

   Scanner scanner = new Scanner(line);
   String sep = """";
   while (scanner.hasNext()) {
    System.out.println(sep + scanner.next());
    sep = "","";
   }
  }
  in.close();
 }
}
</code></pre>
"
"1523844","<p><code>tr</code> is a pretty simple way to replace a newline:</p>

<pre><code>cat addresses.xml | tr -d '\n'
</code></pre>

<p>Googling for ""shell replace newline"" will yield plenty of other options too.</p>
"
"1524042","<p>The regular expression</p>

<pre><code>(?&lt;=&gt;)\r?\n[ \t]*(?!&lt;address)
</code></pre>

<p>will match a CRLF + spaces/tags between tags unless followed by <code>&lt;address&gt;</code>. Although I usually would advise against regular expressions and for a parser, in this case it looks like this gets the job done a lot easier.</p>
"
"3044133","<p><code>yourString.split(""\\*"");</code> should give you an array with name, address1 and address2, where as adress1 and address2 can be empty Srings. More information: <a href=""http://java.sun.com/javase/6/docs/api/java/lang/String.html#split%28java.lang.String%29"" rel=""nofollow"">here</a></p>
"
"1548873","<p>Just to reiterate, don't use try/catch blocks for logical flow. The catch block should be used for handling exceptions/errors gracefully. Secondly, any function that is NOT declared void must return some form of the declared type, in your case a boolean value.</p>

<p><em>Possible solution</em></p>

<pre><code>private static boolean isTransientField(String name, Class beanClass) 
{
    try 
    {
        Field field = beanClass.getDeclaredField(name);
        if((field.getModifiers() &amp; Modifier.TRANSIENT) == Modifier.TRANSIENT)
        {
            return true;
        }
        else
        {
            return false;
        }

    } 
    catch (Exception e) 
    {
        e.printStackTrace();
    }
}
</code></pre>
"
"2410348","<p>I've never actually used this, but try <code>view.getClass().getGenericSuperclass()</code></p>
"
"2441875","<p>I think findbugs is right.</p>

<pre><code>} finally {
    try {
        fileReader.close();
    } finally {
        fileWriter.close();
    }
}
</code></pre>

<p>In this block you try to close your FileReader. This however can throw an exception and in the nested finally you close the fileWriter. Have you tried closing both readers in the same finally block? What does findbugs say then?</p>

<pre><code>} finally {
    try {
        fileReader.close();
        fileWriter.close();
    } finally {
        //dunno maybe log that something went wrong.
    }
}
</code></pre>
"
"2497723","<p>Attempt a read in a loop.  If a message is found, process it, then sleep and iterate again. Also put some sort of terminator logic in there (interrupt the thread).  You could terminate after X attempts, read from a file, kill the JVM, read a terminator msg from the queue, etc., etc.</p>

<pre><code>public static void main(String[] args) {
    while(true) {
        // look for some terminator
        // attempt to read off queue
        // process message
        try {
            TimeUnit.SECONDS.sleep(5);
        } catch (Exception e) {
            break;
        }
    }
}
</code></pre>
"
"2498296","<p>In your main() do something like this:</p>

<pre><code>// gather config files
String[] configs = { ""classpath:applicationContext-myutil.xml"" };

// create the app context
ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext(configs);

// obtain reference to your utility bean
MyUtilityBean utility = (MyUtilityBean) ctx.getBean(""utility"");

// invoke methods on your utility bean
utility.doSomething()
</code></pre>

<p>You would inject your Utiltity bean with <a href=""http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/jms.html"" rel=""nofollow"">Spring's JMS template</a> to do the gruntwork for your usecase.</p>
"
"3203156","<pre><code>for(;;);
</code></pre>

<p>But it's very unlikely that hanging the thread is what you want.  Instead, you should consider options like joining on the other threads.</p>
"
"1674446","<p>Get rid of the BufferedOutputStream, it's not useful in that context. If you think you <strong>must</strong> use it, at least you need to <code>flush()</code> it.</p>
"
"1683194","<blockquote>
  <p>So I improved compare()...</p>
</blockquote>

<p>sure you did.</p>

<p>first, the Comparator interface doesn't specify what happens with nulls.  if your null checking if statement works for your use case, that's great, but the general solution is throwing an npe.</p>

<p>as to cleaner...  why final?  why all the catch/throws?  why use compareTo for a primitive wrapper?</p>

<pre><code>class NumericComparator implements Comparator&lt;String&gt; {
 public int compare(String s1, String s2) throws NullPointerException, NumberFormatException {

  double test = Double.parseDouble(s1) - Double.parseDouble(s2);

  int retVal = 0;
  if (test &lt; 0) retVal = -1;
  else if (test &gt; 0) retVal = 1;

  return retVal;  
 }
}
</code></pre>

<p>seems you might find it clearer renaming <em>test</em> to <em>t1</em> and <em>retVal</em> to <em>q</em>.</p>

<p>as to repeating the pattern...  eh.  you might be able to use generics with reflection to invoke appropriate <em>parseX</em> methods.  seems like that'd not be worth it though.  </p>
"
"3235422","<p>It looks pretty much like deadlock. Try to switch from <code>Hashtable</code> to <code>ConcurrentHashMap</code> or investigate your application and add additional locks to resolve deadlocking. </p>
"
"3235450","<p>Consider the following method which receives a list of 'intfaces', you don't have to know if you handle clas1 or clas2, you just want to handle something that 'is a' intface. You may add clas3 implement intface later on and it will stil work...</p>

<pre><code>  public void callMethods(List&lt;intface&gt; intfaces){
    for(Interface intface : intfaces) {
      intface.methodOne();
      intface.methodTwo();
    }
  }
</code></pre>
"
"1715561","<p>String variable str is given the null value.</p>

<p>When you print it, the String#toString() converts that to the string 'null', and appends the string ""Added"".  The result is</p>

<pre><code>nullAdded
</code></pre>
"
"1501443","<pre><code>java.util.StringTokenizer tokenizer = new java.util.StringTokenizer(line, "" "");
while (tokenizer.hasMoreTokens()) {
    String token = tokenizer.nextToken();
    int index = token.indexOf('=');
    String key = token.substring(0, index);
    String value = token.substring(index + 1);
}
</code></pre>
"
"3281418","<p>Like skaffman says, <code><a href=""http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/util/concurrent/Executors.html"" rel=""nofollow"">Executors</a></code> is only a collection of factory method. if you need a particular instance, you can always check all existing <code><a href=""http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/util/concurrent/Executor.html"" rel=""nofollow"">Executor</a></code> implementors. In your case, i think that calling one of the various constructors of <a href=""http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/util/concurrent/ScheduledThreadPoolExecutor.html"" rel=""nofollow"">ScheduledThreadPoolExecutor</a> would be a good idea.</p>
"
"3293104","<p>""Javascript is out, because most browser don't allow cross domain calls.""</p>

<p>Unfortunately, Javascript is most definitely in. You just have to add a new script to the page with whatever <code>src</code> url you like. It's called <a href=""http://www.openajax.org/runtime/wiki/Better_Security_for_Cross-site_Scripts"" rel=""nofollow""><strong>Cross-Site Scripting</strong></a> (or XSS). IMO, the vulnerability it introduces renders moot all the other attempts by browsers to regulate a ""same-origin"" policy. They're just trying to patch a hole in a pair of pants that have already fallen down around your ankles.</p>
"
"2587960","<p>You're not able to convert between a byte array and a String without providing an encoding method. </p>

<p>Try <code>System.out.println(new String(f, ""UTF8""));</code></p>
"
"3340643","<p>Placement of <code>try-catch-finally</code> does <em>not</em> affect the performance in any way you should worry about. However, it <em>does affect the control flow</em> and what you would want to/can do in <code>try</code> and <code>finally</code> blocks.</p>
"
"3346790","<p>If <code>foo()</code> doesn't have anything to do with Object <code>A</code> then why is the method in there? </p>

<p>Static methods should still be relevant. If there isn't anything going on then why have you written a method that has no association with it?</p>
"
"2627050","<pre><code>   Random randomGenerator = new Random();

   int i = randomGenerator.nextInt(256);
   System.out.println((char)i);
</code></pre>

<p>Should take care of what you want, assuming you consider '0,'1','2'.. as characters.</p>
"
"2653163","<p>You should not be calling release in your finally block. Finally blocks are always executed. What you want to do is release the lock in the exception, or when your client disconnects:</p>

<pre><code>    while (keepProcessing) {
        try {
            sem.acquire();
            Socket socket = serverSocket.accept();
            process(socket, getNextConnectionNumber());
        } catch (Exception e) {
            //Here the client hasn't been connected, so release the lock.
            sem.release();
        } finally {
           //code here always executes, exception or not
        }
    }
</code></pre>

<p>Then in an appropriate place in your client code release the lock:</p>

<pre><code>...
//The client is shutting down / disconnecting
serverInstance.sem.release(); //not good OOP

OR 

serverInstance.clientFinished(); //callback, where clientFinished in your server class will release the lock
...
</code></pre>

<p>Of course there are various ways to release the lock depending on how your code is orgnized, but the key is that when you call release in the finally block it will always execute (making the permit available for the next incoming connection). So only release it a) in the server when there is an exception (you know a connection hasn't been made) or b) in the client (possibly via some kind of callback/listener on the server) when you know the connection is finished / disconnected / otherwise terminated.</p>
"
"1842239","<p>The method that contains the code</p>

<pre><code>while (true) {    
 int totalFoos = getTotalFoos();    
 int barredFoos = getBarredFoos();    
 if (totalFoos == getTotalFoos()) {        
  int nonBarredFoos = totalFoos - barredFoos;        
  break;    
 }
</code></pre>

<p>}</p>

<p>Should be synchronized</p>

<pre><code>private synchronized void getFoos()
</code></pre>
"
"2653229","<p><strong>A semaphore will not limit number of connections to server.</strong> </p>

<p>A semaphore limits the number of threads accessing a particular section of code. Ergo, your server will accept as many incoming socket requests as are made, <strong>but</strong> each socket thread will block on the semaphore.</p>

<p>Furthermore, your <code>run</code>  method contains a loop which is acquiring and releasing the semaphore, which results in all sockets round-robin-ing on the semaphore.</p>

<p>To see this in action, add a few log statements. One before acquiring the semaphore, one more immediately after acquiring it, another before releasing, and a final one immediately after releasing it.</p>

<p><strong>So how does one limit connections to a server?</strong></p>

<p>Check the <code>backlog</code> constructor parameter on <code>ServerSocket</code></p>

<pre><code>public EServer (int port) 
        throws IOException 
{
    // 'backlog' is in fact a listening queue length. 
    // if more than 2 socket requests are made at a time,
    // they are refused. probably want to parameterize 
    // this :)
    serverSocket = new ServerSocket (port, 2); 
}
</code></pre>
"
"3398147","<p>Polymorphism, not conditionals.</p>

<pre><code>class User {
    final Print print;
    User(Print print) {
        this.print = print;
    }
}

interface Print {
    void print();
}

class CanPrint implements Print {
    public void print() { do whatever it takes to print a user }
}

class CannotPrint implements Print {
    public void print() { throw null; }
}
</code></pre>
"
"2678791","<p>Using getters and setters is the way to go.</p>

<ul>
<li>It's commonly accepted practise</li>
</ul>

<p>So other programmers are more likely to understand your code.</p>

<ul>
<li>It gives the class author options in the future</li>
</ul>

<p>Say you want to prevent someone setting a to null. Expose the member and you can never do it.</p>

<p>As for whether to use <code>this</code> - I try to use <code>this</code> consistently to make it very clear to anyone else which are instance members and which are local variables at any point - also helps avoid accidental shadowing, but I think this is less important and more a style thing. </p>

<p>Also - <code>this.a</code> is an instance member (one per instance) not a class member (one-per-class, would be static). Another reason to use <code>this</code> to be clear.</p>
"
"2678829","<p>I would go with</p>

<pre><code>System.out.println(getA());
</code></pre>

<p>and</p>

<pre><code>setA(b + c);
</code></pre>

<p>for the simple reason that if you wanted to generally change the way an attribute is accessed or enforce any constraints as to what you could set a variable to, you can just change the getA or setA methods.</p>

<p>I don't like using this unless I need to explicitly distinguish between variables of the same name.</p>
"
"1649466","<p>It's wrong because you're accessing a private member (you declared <code>private int yearOfBirth</code>) of another object although the class type is the same. You should use the public getter you defined instead: <code>yearOfBirth = other.getYearOfBirth()</code></p>
"
"1649470","<p><code>yearofBirth</code> is a private int.  Therefore the call to <code>other.yearOfBirth</code> would presumably fail...</p>
"
"2678862","<p>Solution 2 or 3 are best practice as they provide encapsulation to the field.  For example, what if the field <code>'a'</code> is a user's postcode and your application has a new requirement to always return the postcode as uppercase.  With solutions 2 or 3 this becomes trivial.  E.g.</p>

<pre><code>private String postcode;
public String getPostcode()
{
   return postcode;
}
</code></pre>

<p>becomes</p>

<pre><code>private String postcode;
public String getPostcode()
{
   return postcode != null? postcode.toUppercase() : null;
}
</code></pre>

<p>and you will only have made the change in one place instead of anywhere where the field is accessed.  The addition of <code>this</code> is purely up to your own personal style or project standards.  Personally, I don't like it as it is unnecessary and just gets in the way of readability, but for others it makes the owner of method/field clearer.</p>
"
"2679112","<p><strong>Using <code>setA(b + c)</code> is silly.</strong></p>

<p>Getters and setters are part of the <em>interface</em>. Methods already have full access to the state. Be frank about it.</p>

<p><strong>If you're worried that you might break an invariant then your class is too complex for you.</strong> (Admit it and refactor.)</p>
"
"1874715","<p>You can run a single test class, but not a single method within a test class.   You use the simple name of the class not the fully-qualified name of the class.   So, if you have a test in ""org.sonatype.test.MyTest"" and that is the only test you want to run, your command line would look like this:</p>

<pre><code>mvn test -Dtest=MyTest
</code></pre>
"
"2724966","<p>Why don't you write something and examine the bytecode? Make some functions that depend on random numbers but are almost complete improbable to execute. This way the compiler can't optimize and you'll see more 'junk'. </p>

<pre><code>def myfunc(num):
    if (num &gt; 1):
        return 1
    else:
        return 0

&gt;&gt;&gt; dis.dis(myfunc)
  2           0 LOAD_FAST                0 (num)
              3 LOAD_CONST               1 (1)
              6 COMPARE_OP               4 (&gt;)
              9 JUMP_IF_FALSE            5 (to 17)
             12 POP_TOP

  3          13 LOAD_CONST               1 (1)
             16 RETURN_VALUE
        &gt;&gt;   17 POP_TOP

  5          18 LOAD_CONST               2 (0)
             21 RETURN_VALUE
             22 LOAD_CONST               0 (None)
             25 RETURN_VALUE
</code></pre>
"
"2727794","<p>You have to extend the <code>javac</code> compiler for this, which means building your program won't be as portable as a regular application. See <a href=""http://weblogs.java.net/blog/cayhorstmann/archive/2006/06/say_no_to_prope.html"" rel=""nofollow"">http://weblogs.java.net/blog/cayhorstmann/archive/2006/06/say_no_to_prope.html</a> for more details on how someone achieved this.</p>
"
"3467010","<p>Some containers (like resin) define an extension to filter mapping definition in web.xml which allows specifying <code>url-regexp</code> which allows matching the urls based on regular expression. (<a href=""http://www.kqfy.go.cn/resin-doc/config/webapp.xtp#filter-mapping"" rel=""nofollow"">reference</a>). See if your container has something like this. </p>
"
"1700405","<p>Since there is no way to access the bean in a JSR 303 validator, this is not possible.</p>

<p>A workaround would be to supply your own <code>ConstraintValidatorContext</code> and extend it with a reference to the bean you're currently validating. But I'm not sure whether you can modify/override the respective factory.</p>
"
"1700562","<p>2 important questions:</p>

<ol>
<li><p>Which web technology are you using? JSF, Struts, SpringMVC or just plain servlets/JSPs.</p>

<ul>
<li><p>Servlets/JSPs already give you the session support you need.<br> JSP Example: <code>Hello, &lt;%= session.getAttribute( ""theName"" ) %&gt;</code></p></li>
<li><p>I really don't think you have something to worry about cookies, since the data is stored safely in the server and handeling the cookie is done automaticlly.</p></li>
</ul></li>
<li><p>Is your application installed on a single server?</p>

<ul>
<li><p>If YES than you have no problem, use the servlet session option.</p></li>
<li><p>if NO than you gotta find another way to do this. Like using a sticky session, or maybe parse the entire session object in the requests/responses as a field. This option indeed requires you to take security measures.     </p></li>
</ul></li>
</ol>
"
"2766665","<p>I think you can try with this one:</p>

<pre><code>String s = ""b"";
for (int i = 0; i &lt; 1000 000; i++) {
  s+=""b"";
}
</code></pre>

<p>Because new string will be allocated everytime the line s+=""b"" is run, it should run out of java heap. </p>
"
"2766823","<pre><code>List&lt;Object&gt; leak = new ArrayList&lt;Object&gt;();
while(true) {
    leak.add(new Object());
}
</code></pre>
"
"3491163","<p><code>A.java</code> cannot contain two classes.</p>
"
"1737368","<p>function average() {</p>

<pre><code>var total = 0;

if(arguments.length &gt; 0) {

 for(var i = 0, n = arguments.length; i &lt; n; i++) {

  total += parseFloat(arguments[i]);

 }

 total /= arguments.length;

}

return total;
</code></pre>

<p>}</p>
"
"2766870","<p>You can use up an arbitrary amount of memory by running a number of scripts that look like this:</p>

<pre><code>public static void main(String[] args)
{
    List&lt;String&gt; l = new ArrayList&lt;String&gt;();
    for (long i = 0 ; i &lt; 100000000l ; i++)
    {
        l.add(new String(""AAAAAAA""));
    }
}
</code></pre>

<p>With sufficiently large heap space (e.g. -Xmx1024M). The problem with this is that any modern OS will attempt to use virtual memory to allow the application to still function, which will cause your hard drive to thrash rather than run out of memory for the JVM. You may need to set your OS total swap space to something fixed to actually encounter this scenario.</p>
"
"2767920","<p>Here is a tiny C program for you that will consume the number of bytes specified on the command line:</p>

<pre><code>#include &lt;stdlib.h&gt;
int main(int argc, char *argv[]) {
  int bytes = atoi(argv[1]);
  char *buf = malloc(bytes);
  while (1) {
    int i;
    for (i = 0; i &lt; bytes; i++) buf[i] += 1;
  }
}
</code></pre>
"
"1741203","<p>This will be the easiest one :)</p>

<pre><code>String char_group = ""abcdefghijklmnopqrstuvwxyz"";
String digit_group = ""123456789"";

// first choose a len of pwd
Random ran = new Random();
int pwd_len = ran.nextInt(50); //50 is the max length of password,say
// check that pwd_len is not less than 6
// do the check here

// finally create the password..
StringBuffer pwd = new StringBuffer();
Random RNG = new Random();
for (int i = 0; i &lt; pwd_len ; i++) {
    int randomNum = RNG.nextInt(100);
    char c = '';
    // Here 25% is the ratio of mixing digits
    // in the password, you can change 4 to any
    // other value to change the depth of mix
    // or you can even make it random. 
    if (randomNum % 4 == 0) {
        c = digit_group[randomNum  % digit_group.length];
    } else {
        c = char_group[randomNum  % char_group.length];
    }
    pwd.append(c);
}
return pwd.toString();
</code></pre>
"
"1984427","<p>As others have pointed out the WindowListener is what you are after... but you should do this from now on when overriding a method:</p>

<pre><code>this.addWindowStateListener(
    new WindowAdapter() 
    {
        @Overrides
        public void windowClosing(WindowEvent e) 
        {
            ExitAction.getInstance().actionPerformed(null);
        }

    });
</code></pre>

<p>Then the compiler will tell you when you are not actually overriding a method and are instead adding a new method (that in this case will never be called).</p>
"
"2777909","<p>Lets use an example:</p>

<pre><code>int guess = 20;
int min = guess - 5 = 15;
int max = guess + 5 = 25;
</code></pre>

<p>therefore</p>

<pre><code>min &lt; guess &lt; max
</code></pre>

<p>Why?</p>

<p>Because you're comparing guess to its self! I think you need to have the actual answer, not the guess</p>
"
"2777922","<p>I can't put the full thing in a comment, so here's what your code should be:</p>

<pre><code>    public static void giveHint (int guess, int actual) {
    int min = actual - 5;
    int max = actual + 5;
    if ((guess &gt; min) &amp;&amp; (guess &lt; max)) {
        System.out.println(""Hot.."");
    } else {
        System.out.println(""Cold.."");
    }
</code></pre>
"
"1757124","<p>I would do something like this:</p>

<pre><code>boolean foundQuote = false;

if(charAtIndex(currentStringIndex) == '""')
{
   foundQuote = true;
}

if(foundQuote == true)
{
   //do nothing
}

else 

{
  string[] split = currentString.split(',');  
}
</code></pre>
"
"2787466","<p>You should let DrumKit handle the logic and let the main class just do the settings on DrumKit.
Something like this:</p>

<pre><code>class DrumKit
{
    boolean topHat=true;
    boolean snare=true;
    void playSnare() {
            System.out.println(""bang bang ba-bang"");
    }
    void playTopHat() {
            System.out.println(""ding ding da-ding"");
    }

    void play(){
            if (snare){
                     playSnare();
            }
            if (topHat){
                     playTopHat();
            }
    }
}

public class DrumKitTestDriver {

    public static void main(String[] args) {
            DrumKit d =new DrumKit();
            d.snare = false;
            d.play();
         }
}
</code></pre>
"
"1766947","<p>Could AnotherObject have a member or property that has a type of SomeObject?  That would be another way to handle this too.</p>

<p>So, if there was a ""SomeObjectMember"" member of the AnotherObject class:</p>

<pre><code>xRef.SomeObjectMember = aRef;
</code></pre>
"
"2007923","<p>basically you just need ot use the iterator:</p>

<pre><code>void print(collection c) 
{ 
    for (object tmp:c.iterator()) 
    { 
        System.out.println(tmp); 
    } 
} 
</code></pre>
"
"3542872","<p>I use this with AWT (not 100% sure whether it's working in Swing too...)</p>

<pre><code>Graphics g = _yourcomponent_.getGraphics();
if (g != null) {
    _yourcomponent_.paint(g);
    // below the estimated code for Swing:
    _yourcomponent_.paintComponent(g);
}
</code></pre>
"
"3553985","<p>use <code>Calendar.get(Calendar.MINUTE)</code> and write some code to do the rounding.</p>
"
"1786096","<p>Why not just:</p>

<pre><code>public String readLine(BufferedReader pReader) {
    try {
        return pReader.readLine();
    } catch(IOException IOE) {
        /* Not a very good practice but let say ""We don't care!"" */
        // Return null if the line is not there (like there was no 4 lines in the file)
        return null;
    }
}

public void importContacts() {
    try {
        BufferedReader infoReader = new BufferedReader(new FileReader(""../files/example.txt""));
        txtName   .setText(readLine(infoReader));
        txtPhone  .setText(readLine(infoReader));
        txtMobile .setText(readLine(infoReader));
        txtAddress.setText(readLine(infoReader));
    } catch (IOException ioe) {
        JOptionPane.showMessageDialog(null, ioe.getMessage());
    }
}
</code></pre>

<p>Hope this helps.</p>
"
"2809608","<p>Not Perl code (no code = no bugs :) but doesn't </p>

<pre><code>export CLASSPATH=.:lib/*
</code></pre>

<p>work? In my bash script that starts Java app I set this and app can ""see"" all .jars I want, but you can set it ""globally"":</p>

<pre><code>mn@test:~# export CLASSPATH=.:/usr/local/jars/*
mn@test:~# echo $CLASSPATH
.:/usr/local/jars/*
mn@test:~# ls /usr/local/jars/*.jar
/usr/local/jars/activation.jar ...

mn@test:/home# cat show_cp.java
public class show_cp
{
    public static void main(String[] args)
        {
        System.out.println(System.getProperty(""java.class.path"", "".""));
        }
}

mn@test:/home# java show_cp
.:/usr/local/jars/postgresql-8.4-701.jdbc4.jar:/usr/local/jars/RmiJdbc.jar:/usr/local/...
</code></pre>

<hr>

<p><strong>EDIT:</strong></p>

<p>You can use wildcards in CLASSPATH as described in <a href=""http://java.sun.com/javase/6/docs/technotes/tools/windows/classpath.html"" rel=""nofollow"">Setting the class path</a></p>

<hr>

<p>And Perl code to join file names:</p>

<pre><code>my @files = glob ""/jars/*.jar"";
my $cp = join("":"", @files);
print($cp)
</code></pre>
"
"2809636","<p>You can try:</p>

<pre><code>$CP = '.';
foreach(&lt;lib/*.jar&gt;) {
  $CP .= "":$_"";
}
$ENV{'_CLASSPATH'} = $CP;
</code></pre>
"
"2044114","<p>Try :</p>

<pre><code>int i = 1;
System.out.println(i++);
System.out.println(i++);
System.out.println(i++);
....
</code></pre>
"
"3628257","<p>I think this is what you need. Note i don't think you need to specify the key-type and value-type attributes. Spring should be able to work that out.</p>

<pre><code>&lt;bean id=""genericEntityFactory"" class=""com.xx.xx.common.index.GenericEntityFactoryImpl""&gt;
  &lt;property name=""indexEntityMap"" ref=""indexEntityMapBean""/&gt;
&lt;/bean&gt;

&lt;util:map id=""indexEntityMapBean"" 
       map-class=""java.util.HashMap"" 
       key-type=""com.xx.xx.common.index.IndexType"" 
       value-type=""com.xx.xx.common.index.GenericEntityFactoryImpl""&gt;
           &lt;entry key=""com.xx.xx.common.index.IndexType.CELL""&gt;
                &lt;ref bean=""cell""/&gt;
           &lt;/entry&gt;
&lt;/util:map&gt;
</code></pre>

<p>The only reason you would use <code>&lt;util:map</code> instead of the cleaner annonomous <code>&lt;map&gt;</code>(see section <a href=""http://static.springsource.org/spring/docs/1.2.9/reference/beans.html"" rel=""nofollow"">3.3.3.3</a>) is if you wanted to wire the same map into multiple places or you wanted to use a different underlying map implementation eg ConcurrentHashMap.</p>
"
"2081921","<p>Use anonymous classes of type <code>Callable</code> (which, in contrast to <code>Runnable</code>, can return values) and execute them using an <code>Executor</code>. If the logic to retrieve informationA and informationB is very similar, you may of course refactor that and use a single, parameterizes inner class of Callables.</p>

<p>I'm not sure if Callable and Executor are part of J2ME spec though. In standard Java, i'd go for a <code>Proxy</code> approach anyway and encapsulate the external resource as interface.</p>

<pre><code>public class AsyncMethodsTest {

    public class OnlineResourceAdapter {

        private final ExecutorService executor = Executors.newFixedThreadPool(2);

        public String getInformationOfTypeA() throws InterruptedException, ExecutionException,
                TimeoutException {
            Callable&lt;String&gt; callable = new Callable&lt;String&gt;() {
                @Override
                public String call() throws Exception {
                    // Connect to external resource
                    Thread.sleep(500);
                    return ""A"";
                }

            };
            Future&lt;String&gt; submit = executor.submit(callable);
            return submit.get(1000, TimeUnit.MILLISECONDS);
        }

        public String getInformationOfTypeB() throws InterruptedException, ExecutionException,
                TimeoutException {
            Callable&lt;String&gt; callable = new Callable&lt;String&gt;() {
                @Override
                public String call() throws Exception {
                    // Connect to external resource
                    Thread.sleep(1500);
                    return ""B"";
                }

            };
            Future&lt;String&gt; submit = executor.submit(callable);
            return submit.get(1000, TimeUnit.MILLISECONDS);
        }

    }

    @Test
    public void testMethodCalls() throws Exception {
        OnlineResourceAdapter adapter = new OnlineResourceAdapter();
        assertNotNull(adapter.getInformationOfTypeA());
        assertNotNull(adapter.getInformationOfTypeB());
    }
}
</code></pre>
"
"3640138","<p>Probably something like this will do what you need (I did not test it):</p>

<pre><code>OutputStream notToBeClosed = ...
OutputStream guard = new FilterOutputStream(notToBeClosed) {
    public void close() { flush(); /*  don't close this.out */ }
};
GZIPOutputStream zip = new GZIPOutputStream(guard);

// will call guard.close(), but that won't propagate to notToBeClosed.close()
zip.close();
</code></pre>
"
"2088435","<p>Hand made for the first option: </p>

<pre><code>public class Rep {
    public static void main( String [] args ) {
       System.out.println( trimChar( '\\' , ""\\\\\\joe\\jill\\\\\\\\"" )  ) ;
       System.out.println( trimChar( '\\' , ""joe\\jill"" )  ) ;
    }
    private static String trimChar( char toTrim, String inString ) { 
        int from = 0;
        int to = inString.length();

        for( int i = 0 ; i &lt; inString.length() ; i++ ) {
            if( inString.charAt( i ) != toTrim) {
                from = i;
                break;
            }
        }
        for( int i = inString.length()-1 ; i &gt;= 0 ; i-- ){ 
            if( inString.charAt( i ) != toTrim ){
                to = i;
                break;
            }
        }
        return inString.substring( from , to );
    }
}
</code></pre>

<p>Prints</p>

<p><code>joe\jil</code></p>

<p><code>joe\jil</code></p>
"
"1834800","<p>as far I know, given an enum named <code>Operation</code> you will get additional class files, excluding the obvious <code>Operation.class</code>, and one per enum value, if you are using <code>abstract method</code> like this one:</p>

<pre><code>enum Operation {

   ADD {
      double op(double a, double b) { 
          return a + b;
      }
   },

   SUB {
      double op(double a, double b) { 
          return a - b;
      }
   };

   abstract double op(double a, double b);
}
</code></pre>
"
"2896136","<p>Java and C# don't have named parameters so you can't do:</p>

<pre><code>myfunction(param1='Meh', optionalParam=2)
</code></pre>

<p>You have to do:</p>

<pre><code>myfunction('Meh', 2)
</code></pre>

<p>Otherwise</p>

<pre><code>myFunction(2, 'Meh')
</code></pre>

<p>Is ambiguous. How is the compiler supposed to know that you meant 2 to be in the optional parameter set?</p>
"
"2106720","<p>Tom has the right idea, but you need to use BigDecimal methods, since you ostensibly are using BigDecimal because your values are not amenable to a primitive datatype.  Something like:</p>

<pre><code>BigDecimal num = new BigDecimal(0.23);
BigDecimal twenty = new BigDecimal(20);
//Might want to use RoundingMode.UP instead,
//depending on desired behavior for negative values of num.
BigDecimal numTimesTwenty = num.multiply(twenty, new MathContext(0, RoundingMode.CEILING)); 
BigDecimal numRoundedUpToNearestFiveCents
  = numTimesTwenty.divide(twenty, new MathContext(2, RoundingMode.UNNECESSARY));
</code></pre>
"
"3697870","<p>You best should use <a href=""http://en.wikipedia.org/wiki/Regular_expression"" rel=""nofollow"">Regular Expressions</a> for this kind of search.
As a easy/dirty workaround you could modify your stringSearch from</p>

<pre><code>String stringSearch = ""the"";
</code></pre>

<p>to</p>

<pre><code>String stringSearch = "" the "";
</code></pre>
"
"1914357","<p>I see that the only way is to check if regexp matches multiple times for particular input.</p>

<pre><code>package com;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class AAA {
    public static void main(String[] args) throws Exception {
        String input = ""123 321 443 52134 432"";
        Pattern pattern = Pattern.compile(""\\d+"");
        Matcher matcher = pattern.matcher(input);
        int i = 0;
        while (matcher.find()) {
            ++i;
        }
        System.out.printf(""Matched %d times%n"", i);
    }
}
</code></pre>
"
"3746905","<p>The quote you posted, is just something you have to keep in mind if you want to be the ideal programmer. Programming is not thinking ""what can go wrong"", but is think how to do something the best way and program it. If it is a personal project, just write what the method does.</p>

<p>However, there are three possible solutions:</p>

<ul>
<li>Do not document the method.</li>
<li>Think a minute of what your code does and find out what the most common possible unchecked exceptions could be. Add them to the Java-doc. And if you encounters a new one, find out what the problem is and add it as possible exception.</li>
<li>Do not care about the possible exceptions and document only the exceptions <strong>you</strong> throw in the method body (like: <code>if (obj == null) { throw new NullPointerException(); }</code>).</li>
</ul>
"
"1931064","<p>Here's the solution I have in place at the moment.</p>

<p>Special thanks to Pascal's diligent conversation here, but I ultimately decided to make a change to how I was loading my environment-specific config files throughout the goals and now I believe I'm getting most of what I initially wanted. </p>

<p>I removed the config files from <code>&lt;webResources&gt;</code> from the WAR plugin and the test config from <code>&lt;testResources&gt;</code> and am now manually managing the resource-copying with the the maven-resources-plugin to copy them directly into <code>target/classes</code> at the goal they're needed. This way Tomcat can see the config, but the tests aren't broken by having duplicate or differing config files on the path. </p>

<p>It's definitely a mess, but it works. Listing:</p>

<pre><code>&lt;plugin&gt;
    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
    &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;
    &lt;version&gt;2.4.1&lt;/version&gt;
    &lt;executions&gt;
        &lt;execution&gt;
            &lt;id&gt;copy-env-resources&lt;/id&gt;
            &lt;phase&gt;process-resources&lt;/phase&gt;
            &lt;goals&gt;
                &lt;goal&gt;copy-resources&lt;/goal&gt;
            &lt;/goals&gt;
            &lt;configuration&gt;
                &lt;resources&gt;
                    &lt;resource&gt;
                        &lt;directory&gt;${basedir}/src/main/resources-env/${env}&lt;/directory&gt;                                 
                        &lt;filtering&gt;true&lt;/filtering&gt;
                    &lt;/resource&gt;
                &lt;/resources&gt;
                &lt;outputDirectory&gt;${basedir}/target/classes&lt;/outputDirectory&gt;
            &lt;/configuration&gt;
        &lt;/execution&gt;
        &lt;execution&gt;
            &lt;id&gt;copy-testEnv-resources&lt;/id&gt;
            &lt;phase&gt;process-test-resources&lt;/phase&gt;
            &lt;goals&gt;
                &lt;goal&gt;copy-resources&lt;/goal&gt;
            &lt;/goals&gt;
            &lt;configuration&gt;
                &lt;resources&gt;
                    &lt;resource&gt;
                        &lt;directory&gt;${basedir}/src/main/resources-env/${testEnv}&lt;/directory&gt;
                        &lt;filtering&gt;true&lt;/filtering&gt;
                    &lt;/resource&gt;
                &lt;/resources&gt;
                &lt;outputDirectory&gt;${basedir}/target/classes&lt;/outputDirectory&gt;
            &lt;/configuration&gt;
        &lt;/execution&gt;
        &lt;execution&gt;
            &lt;id&gt;copy-env-resources-again&lt;/id&gt;
            &lt;phase&gt;prepare-package&lt;/phase&gt;
            &lt;goals&gt;
                &lt;goal&gt;copy-resources&lt;/goal&gt;
            &lt;/goals&gt;
            &lt;configuration&gt;
                &lt;resources&gt;
                    &lt;resource&gt;
                        &lt;directory&gt;${basedir}/src/main/resources-env/${env}&lt;/directory&gt;
                        &lt;filtering&gt;true&lt;/filtering&gt;
                    &lt;/resource&gt;
                &lt;/resources&gt;
                &lt;outputDirectory&gt;${basedir}/target/classes&lt;/outputDirectory&gt;
            &lt;/configuration&gt;
        &lt;/execution&gt;                            
    &lt;/executions&gt;
&lt;/plugin&gt;
</code></pre>

<p>So a <code>mvn clean install</code> will build and test with ${env} and ${testEnv} appropriately. A <code>mvn -Denv=someLocalConfig tomcat:run</code> (which in my case is identical to my default ${testEnv} will make sure the <code>src/main/resources-env/someLocalConfig</code> gets loaded for Tomcat's dynamic execution, but without requiring that I do a clean before successfully rebuilding.</p>

<p>Like I said, messy that I'm rewriting the same cluster of files to the same target location at each phase, but it accomplishes what I'd meant to.</p>
"
"3751590","<p>I think they pulled <code>BufferUtil</code> a while back (it looks like it never did anything super useful anyway) but since the code just allocates a new <code>ByteBuffer</code>, you don't need it. Just do a <code>ByteBuffer unpackedPixels = ByteBuffer.allocate(packedPixels.length * bytesPerPixel);</code> instead. </p>

<p>There's also a newer JOGL class that does something similar called <a href=""http://jogamp.org/deployment/archive/jogl-latest/javadoc_dev/com/jogamp/opengl/util/texture/TextureIO.html"" rel=""nofollow""><code>com.jogamp.opengl.util.texture.TextureIO</code></a> with a few <code>newTexture(...)</code> methods.</p>
"
"2177751","<p>In your case it has to be non static unless you change signature to <code>public static Point add(Point point1, Point point2)</code>.</p>

<p><strong>EDIT</strong> : I got down voted. That's fine. I was not trying to give trivial suggestion like putting static in front method. In this case, an instance method is better, but there is really not singe answer. It just depends on your preference.</p>
"
"3796203","<p>The reason why it isn't matching is because your third line has TWO spaces between the <code>v</code> and <code>-12.1892</code>. Try this: </p>

<p><code>^(\w+) +(([\S]+)( [\S]+)*) *$</code> (the added + sign allows for multiple spaces)</p>

<p>Here is the jsfiddle to test it: <a href=""http://jsfiddle.net/xewys/"" rel=""nofollow"">http://jsfiddle.net/xewys/</a></p>
"
"3096095","<p>In my experience, Swing is a very picky thing. I'd try <code>setMaximumSize</code> and <code>setPreferedSize</code>. As a side note though: when ever I used <code>GridLayout</code>, it always stretches whatever is in each of the cells (to make it symmetrical I guess). Flow, Box, Border, and I think GridBag don't have that problem though.</p>

<p>-Brett</p>
"
"3101223","<p>I don't know how sophisticated you want this to be, but if you just want to change expressions like ""It's whatever"" to ""Isn't it whatever!"", then this is very simple:</p>

<pre><code>String text = ""It's cold"";
String result = ""Isn't it "" + text.substring(5) + ""!"";
</code></pre>

<p>(Even simpler than polygenelubricant's solution with regular expressions).</p>
"
"2234156","<p>Perhaps by checking the object type at runtime, maybe something like:</p>

<pre><code>if (o.getClass() == List.class) ...
</code></pre>

<p>Obviously, you'll have to dig deeper into the object's class type to see if it's an exact match to <code>List&lt;&gt;</code> and the list's element types.</p>
"
"3113769","<p>I'm not sure why you are having this problem, but I think if I were you I would choose to use the newer Generic List to create your list like this:</p>

<pre><code>List&lt;Playlist&gt; mPlaylists = new List&lt;Playlist&gt;();

p = new Playlist(&lt;some parameters&gt;);
mPlaylists.Add(p);
</code></pre>
"
"2243491","<p>You can define a static block in the class</p>

<pre><code>class X {
 static {
  System.out.println(""class X has been loaded"");
 }
 ...
}
</code></pre>

<p>that will be called once when the class object is loaded.</p>

<p>If you cannot edit the code, and you have a JRE 6, you might try the <a href=""http://java.sun.com/javase/6/docs/technotes/tools/share/jmap.html"" rel=""nofollow"">jmap</a> tool</p>

<pre><code>jmap -histo &lt;pid&gt;
</code></pre>

<p>it will print a histogram of your heap, including all loaded classes.</p>

<p>Using <code>jps</code> you can find out the pid </p>
"
"3129155","<p>JavaAssist is a class library to manipulate your Java Byte Code without touching the source. Let's take an example of measuring
time taken to execute a method.</p>

<pre><code>public class Subject {
    /**
     * Timetaken for start &amp; end of the method
     * 
     * @throws InterruptedException
     */
    public void method2() throws InterruptedException {
        // Some business logic :)
        Thread.sleep(2000);
    }
}
</code></pre>

<p>To measure time taken for executing <code>subject.method2()</code>, you could enhance the <code>Subject.methods()</code> by adding code start and end of the method as shown.</p>

<pre><code>public class JavaAssist {
    public static void main(String[] args) {
        timeTaken();
    }

    public static void timeTaken() {
        try {
            ClassPool p = ClassPool.getDefault();
            CtClass cc = p.get(""Subject"");
            CtMethod meth2 = cc.getDeclaredMethod(""method2"");
            meth2.insertBefore(""System.out.println(\"" Start : \""+new java.util.Date());"");
            meth2.insertAfter(""System.out.println(\"" End : \""+new java.util.Date());"");
            // cc.writeFile(""."");
            Class c = cc.toClass();
            Subject s = (Subject) c.newInstance();
            s.method2();
            cc.detach();
        } catch (Exception e) {
            // suppressed
        }
    }
}
</code></pre>

<p>Output:
Start : Wed May 26 17:24:18 EDT 2010
End : Wed May 26 17:24:20 EDT 2010</p>

<p>Reference
<a href=""http://www.csg.is.titech.ac.jp/~chiba/javassist/tutorial/tutorial.html#read"" rel=""nofollow"">http://www.csg.is.titech.ac.jp/~chiba/javassist/tutorial/tutorial.html#read</a></p>

<p><a href=""http://www.csg.is.titech.ac.jp/~chiba/javassist/html/"" rel=""nofollow"">http://www.csg.is.titech.ac.jp/~chiba/javassist/html/</a></p>

<p>Origin Post from:
<a href=""http://www.senthilb.com/2010/05/javaassist-byte-code-enhancement.html"" rel=""nofollow"">http://www.senthilb.com/2010/05/javaassist-byte-code-enhancement.html</a></p>
"
"2028180","<p>I think you are looking for something along this lines </p>

<pre><code>private final static Map&lt;Class&lt;?&gt;, Class&lt;?&gt;&gt; simpleTypes = new Hashtable&lt;Class&lt;?&gt;, Class&lt;?&gt;&gt;();
static {
    simpleTypes.put(String.class, String.class);
    simpleTypes.put(Boolean.class, Boolean.class);
    simpleTypes.put(boolean.class, boolean.class);
    simpleTypes.put(Byte.class, Byte.class);
    simpleTypes.put(byte.class, byte.class);
    simpleTypes.put(Short.class, Short.class);
    simpleTypes.put(short.class, short.class);
    simpleTypes.put(Integer.class, Integer.class);
    simpleTypes.put(int.class, int.class);
    simpleTypes.put(Long.class, Long.class);
    simpleTypes.put(long.class, long.class);
    simpleTypes.put(Float.class, Float.class);
    simpleTypes.put(float.class, float.class);
    simpleTypes.put(Double.class, Double.class);
    simpleTypes.put(double.class, double.class);
    simpleTypes.put(Character.class, Character.class);
    simpleTypes.put(char.class, char.class);
    simpleTypes.put(BigDecimal.class, BigDecimal.class);
    simpleTypes.put(StringBuffer.class, StringBuffer.class);
    simpleTypes.put(BigInteger.class, BigInteger.class);
    simpleTypes.put(Class.class, Class.class);
    simpleTypes.put(java.sql.Date.class, java.sql.Date.class);
    simpleTypes.put(java.util.Date.class, java.util.Date.class);
    simpleTypes.put(Time.class, Time.class);
    simpleTypes.put(Timestamp.class, Timestamp.class);
    simpleTypes.put(Calendar.class, Calendar.class);
    simpleTypes.put(GregorianCalendar.class, GregorianCalendar.class);
    simpleTypes.put(URL.class, URL.class);
    simpleTypes.put(Object.class, Object.class);
}


public static boolean isSimpleType(final Object object) {
    if (object == null) { return false; }
    return isSimpleType(object.getClass());
}

public static boolean isSimpleType(final Class&lt;?&gt; clazz) {
    if (clazz == null) { return false; }
    return simpleTypes.containsKey(clazz);
}



public static boolean isMapType(final Class&lt;?&gt; clazz) {
    boolean lvReturn = false;
    if (clazz != null) {
        lvReturn = (Map.class.isAssignableFrom(clazz));
    }
    return lvReturn;
}

public static boolean isMapType(final Object object) {
    boolean lvReturn = false;
    if (object == null) { 
        lvReturn = false;
    }
    else if (object instanceof Map) {
        lvReturn = true;
    }

    return lvReturn;
}

public static boolean isCollection(final Object object) {
    boolean lvReturn = false;
    if (object == null) { 
        lvReturn = false;
    }else{
        lvReturn=isCollection(object.getClass());
    }
    return lvReturn;
}

public static boolean isCollection(final Class&lt;?&gt; clazz) {
    boolean lvReturn = false;
    if (clazz == null) {
        lvReturn = false;
    }
    else if (Collection.class.isAssignableFrom(clazz)) {
        lvReturn = true;
    } 
    return lvReturn;
}

public static boolean isArray(final Object obj) {
    if (obj == null) {
        return false;
    }       
    return isArray(obj.getClass());
}

public static boolean isArray(final Class&lt;?&gt; clazz) {
    boolean lvReturn = false;
    if (clazz == null) {
        lvReturn = false;
    }else if(clazz.isArray()) {
        lvReturn = true;
    }
    return lvReturn;
}


public static boolean isEnum(final Object obj) {
    if (obj == null) {
        return false;
    }       
    return isEnum(obj.getClass());
}

public static boolean isEnum(final Class&lt;?&gt; clazz) {
    boolean lvReturn = false;
    if (clazz == null) {
        lvReturn = false;
    }else if (clazz.isEnum()) {
        lvReturn = true;
    }
    return lvReturn;
}
</code></pre>
"
"3888216","<p>Break the code like mentioned below and the eclipse will accept that,</p>

<pre><code>Thread.currentThread();
Thread.sleep(x);
</code></pre>
"
"2268796","<p><code>HashMap</code> for local variables or method parameters because they are thread safe.</p>
"
"2268994","<p>Or you can done it by the hand, using only only java by</p>

<pre><code>List triple = new ArrayList(3);    
for (String word: inputFileWords) {
  if (triple.size == 3) {
      resultFile.println(StringUtils.join("" "", triple));
      triple.remove(0);
  }
  triple.add(line);
}
</code></pre>

<p>then sort this file and sum all duplicate lines (manually or from some command line utility), it will be fast as possible.</p>
"
"2047836","<p>Your <code>outFilename</code>  must be found in the web. Like: ""http://www.sample.com/sms.zip"" or the likes..</p>
"
"2053170","<p>Better to avoid it. A comma is preferable, for example: <code>example/key,value/key,value</code></p>

<p>Or a slash and calculate which ones are keys and values.</p>
"
"3174227","<p>What you definitly can do is a loop something like this:</p>

<pre><code>while (true) {
  Thread.sleep(1000);
}
</code></pre>

<p>And if you wan't to stop the process you just kill it. Not an elegant solution, however.</p>

<p>Better would be, to listen on some port and wait till you get some command on that port:</p>

<pre><code>ServerSocket socket = new ServerSocket(4444);
while (true) {
  Socket clientSocket = socket.accept();
  // get input stream, etc.
  // if(STOP keywoard read) break
}
</code></pre>
"
"3930402","<p>In the command line you can type <code>java -version</code></p>
"
"2074568","<p>Whether a getter on the returned map happens to twiddle with some internal state is unimportant, as long as the object honors its contract (which is to be a map that cannot be modified). So your question is ""barking up the wrong tree"".</p>

<p>You are right to be cautious of UnmodifiableMap, in the case where you do not have ownership and control over the map it wraps. For example</p>

<pre><code>Map&lt;String,String&gt; wrapped = new HashMap&lt;String,String&gt;();
wrapped.add(""pig"",""oink"");
Map&lt;String,String&gt; wrapper = Collections.unmodifiableMap(wrapped);
System.out.println(wrapper.size());
wrapper.put(""cow"", ""moo""); // throws exception
wrapped.put(""cow"", ""moo"");
System.out.println(wrapper.size()); // d'oh!
</code></pre>
"
"3205139","<p>Did you try</p>

<p><code>Integer.valueOf(5)</code> to pass 5 along as an Integer instead of an int?</p>
"
"3214522","<p>you cannot call</p>

<pre><code>number.equals(number2);
</code></pre>

<p>because, if number is a Double and number2 is an Integer, they will not be of the same class and you will get an exception telling you of that fact. </p>

<p>You could write a comparison class yourself that accepts Number objects, but you will have to take into account the different subclasses of Number</p>
"
"2340839","<p>You can use getline for reading a string from a stream, using the specified delimiter:</p>

<pre><code>istream&amp; getline ( istream&amp; is, string&amp; str, char delim );
</code></pre>

<p>(defined in the  header)</p>
"
"2362762","<p>Yes, you can throw the exception further</p>

<pre><code>try {
   stmt = createStatement();
   doSomething(stmt);
}
 catch (Exception e) {
    throw e;
}
finally {
   if(stmt != null) 
      stmt.close();
}
</code></pre>
"
"2118080","<p>Reasons why Object needs to be concrete.</p>

<ol>
<li><p>reflection<br>
see Object.getClass()</p></li>
<li><p>generic use (pre Java 5)  </p></li>
<li><p>comparison/output<br>
see Object.toString(), Object.equals(), Object.hashCode(), etc.</p></li>
<li><p>syncronization<br>
see Object.wait(), Object.notify(), etc.</p></li>
</ol>

<p>Even though a couple of areas have been replaced/deprecated, there was still a need for a concrete parent class to provide these features to every Java class.</p>

<p>The Object class  is used in reflection so code can call methods on instances of indeterminate type, i.e. 'Object.class.getDeclaredMethods()'. If Object were to be Abstract then code that wanted to participate would have to implement all abstract methods before client code could use reflection on them.</p>

<p>According to Sun, <a href=""http://java.sun.com/docs/books/tutorial/java/IandI/abstract.html"" rel=""nofollow"">An abstract class is a class that is declared abstract—it may or may not include abstract methods. Abstract classes cannot be instantiated, but they can be subclassed.</a> This also means you can't call methods or access public fields of an abstract class.</p>

<p>Example of an abstract root class:  </p>

<pre><code>abstract public class AbstractBaseClass
{
    public Class clazz;

    public AbstractBaseClass(Class clazz)
   {
       super();
       this.clazz = clazz;
   }
}
</code></pre>

<p>A child of our AbstractBaseClass: </p>

<pre><code>public class ReflectedClass extends AbstractBaseClass  
{
    public ReflectedClass() 
    {
       super(this);
    }

    public static void main(String[] args)  
    {
        ReflectedClass me = new ReflectedClass();
    }
}
</code></pre>

<p>This will not compile because it's invalid to reference 'this' in a constructor unless its to call another constructor in the same class. I can get it to compile if I change it to:  </p>

<pre><code>   public ReflectedClass()
   {
       super(ReflectedClass.class);
   }  
</code></pre>

<p>but that only works because ReflectedClass has a parent (""Object"") which is 1) concrete and 2) has a field to store the type for its children.</p>

<p>A example more typical of reflection would be in a non-static member function:    </p>

<pre><code>public void foo()
{
    Class localClass = AbstractBaseClass.clazz;  
}
</code></pre>

<p>This fails unless you change the field 'clazz' to be static.  For the class field of Object this wouldn't work because it is supposed to be instance specific. It would make no sense for Object to have a static class field.</p>

<p>Now, I did try the following change and it works but is a bit misleading. It still requires the base class to be extended to work.  </p>

<pre><code>public void genericPrint(AbstractBaseClass c)
{
    Class localClass = c.clazz;
    System.out.println(""Class is: "" + localClass);
}

public static void main(String[] args)
{
    ReflectedClass me = new ReflectedClass();
    ReflectedClass meTwo = new ReflectedClass();

    me.genericPrint(meTwo);
}
</code></pre>

<p>Pre-Java5 generics (like with arrays) would have been impossible</p>

<pre><code>Object[] array = new Object[100];
array[0] = me;
array[1] = meTwo;
</code></pre>

<p>Instances need to be constructed to serve as placeholders until the actual objects are received.</p>
"
"2382247","<p>The ternary operator has to return the same type from the ""then"" or ""else"" clause.  If you can deal with <code>Double</code> instead of <code>double</code>, then you could try</p>

<pre><code>Object o = (myValue != null ? someDouble : someString);
writeToCell(2, 4, o);
</code></pre>

<p>and change the <code>writeToCell</code> method to accept arguments <code>(int, int, Object)</code>.</p>
"
"2132389","<p>what ever values you use in equals to determine if two objects are the same, are the the values that you need to use to create a hash code.</p>

<pre><code>public boolean equals(Object o) {

    boolean result = false;

    if(o instanceof CategoryEnum) {

        CategoryEnum ce = (CategoryEnum) o;
        result = ce.toString().equals(name);

    }       
    return result;

}


public int hashCode()
{
  int hash = 6;
  hash += 32 * name.hashCode();
  return hash;
}   
</code></pre>
"
"2132536","<p>I think what you want to do is have it scroll down when you add stuff to your messageList, rather then on adjustment.  So your code could look like this: </p>

<pre><code>Adjustable sb = messageScrollList.getVerticalScrollBar()
boolean onBottom = sb.getValue() == sb.getMaximum();
//
// add your message to the JList.
//
if(onBottom)  sb.setValue(sb.getMaximum());
</code></pre>

<p>Otherwise you would need to tell if the adjustment was caused by a model change, or by the mouse, and looking through the API docs I'm not sure if there's a way to do that easily. Although you could see if the <a href=""http://java.sun.com/javase/6/docs/api/java/awt/event/AdjustmentEvent.html#getAdjustmentType%28%29"" rel=""nofollow""><code>AdjustmentEvent.getAdjustmentType()</code></a> returns different values in those cases, if that's true then you could just have an if statement in your anonymous inner class.</p>

<p>Another thing you could try would be to have a boolean variable somewhere that gets set when you add something to the list. Then, in your handler you check to see if the variable is set. If so, you do the adjustment (and unset the variable) otherwise, you ignore it.   That way, there will be only one scroll-down per item being added to the list.</p>
"
"2132761","<p>equals()and hashcode(),They have a lot of different places.
equals(),if we don't Override it from Object,it represent  that whether two variables are pointing to the same object heap?</p>

<pre><code>public  Class Student(){
  private int id;
  private  name;
  public Student(int id,String name){
  this.name=name;
  this.id=id; 
}

public void main(String[] args){
  Student A=new Student(20,'Lily');
  Student B=new Student(20,'Lily');
  boolean flag=A.equals(B)//flag=flase;
/*
 *Although they attribute the same, but they are two different objects, they point to     different memory
 */


@Override
public boolean equals(Object obj) {


  if (obj == null) {
    return false;
  }
  if (this == obj) {
    return true;
  }

  if (this.getClass() != obj.getClass()) {
    return false;
  }
  Student s=(Student)obj;
  return new Integer(this.id).equals(new Integer(s.id))&amp;&amp;this.name.equals(s.name);
  }

/**
  *Sometimes even though we Override  the equals, but we still can not determine whether   the *two objects the same,
  *In the collection object, such as HashSet, this time we have to Override the hashoCode ()
  */

public int hashCode(){
  return id + name.hashCode() ;
}
</code></pre>
"
"3282567","<p>You could try to execute the <a href=""http://en.wikipedia.org/wiki/Uname"" rel=""nofollow""><code>uname</code></a> command - should be available on all unixoid systems.</p>
"
"2136310","<p>I have never used CGI based proxies but JDK based proxies requires interface to do AOP. If interface is an issue, try below solution.</p>

<p>.</p>

<p>Typical struts action classes are as given below. Note that it does not implements any interface.</p>

<pre><code>public class MyAction extends Action {
 public ActionForward execute(ActionMapping mapping, ActionForm form,
   HttpServletRequest request, HttpServletResponse response) {
              :
 }
}
</code></pre>

<p>.</p>

<p>To resolve this issue, create an interface with <code>execute()</code> method same as that in Struts Action class.</p>

<pre><code>public interface IAction {
 public ActionForward execute(ActionMapping mapping, ActionForm form,
   HttpServletRequest request, HttpServletResponse response);
}
</code></pre>

<p>.</p>

<p>Implement this interface in all of your actions</p>

<pre><code>public class MyAction extends Action implements IAction {
 public ActionForward execute(ActionMapping mapping, ActionForm form,
   HttpServletRequest request, HttpServletResponse response) {
              :
 }
}
</code></pre>
"
"4075157","<p>I agree with both answers. But if the idea is to instantiate on demand then I'd go with Joshua's suggestion with a slight modification using double-checked-locking:  </p>

<pre><code>if (!singleton)  
   @synchronized(something)  
      if (!singleton)  
         instantiate;
</code></pre>

<p>This way you avoid unnecessary locking after the object has been instantiated.</p>
"
"2451962","<p>This sample Java program connects to MySQL database using JDBC, executes a query and retrieves and prints the value of the database field.</p>

<p>This same sample code can be used to connect to any type of database, all you need to do is change the connection url (dbUrl in the sample). For this code to work properly, you will need to download the mysql driver for JDBC in other words Java Connectors from mysql.com site.</p>

<p>If after downloading the URL it still doesn't work then it is probably due to the classpath. You will have to add the driver jar file in the classpath.</p>

<pre><code>import java.sql.*;
import javax.sql.*;

public class jdbcdemo{

public static void main(String args[]){
String dbtime;
String dbUrl = ""jdbc:mysql://your.database.domain/yourDBname"";
String dbClass = ""com.mysql.jdbc.Driver"";
String query = ""Select * FROM users"";

try {

Class.forName(""com.mysql.jdbc.Driver"");
Connection con = DriverManager.getConnection (dbUrl);
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery(query);

while (rs.next()) {
dbtime = rs.getString(1);
System.out.println(dbtime);
} //end while

con.close();
} //end try

catch(ClassNotFoundException e) {
e.printStackTrace();
}

catch(SQLException e) {
e.printStackTrace();
}

}  //end main

}  //end class
</code></pre>
"
"3355185","<p>As others said, you need to implement <code>equals</code>/<code>hashCode</code> for the other two classes as well. Where's an example:</p>

<pre><code>class Relation {
  String name;
  Role roleFrom;
  Role roleTo;

  public int hashCode() {
    // Just a sample. super.hashCode() would probably be better
    return name.hashCode() &amp; roleFrom.hashCode() | roleTo.hashCode();
  }

  public boolean equals(Object o) {
    if(!(o instanceof Relation)) return false;
    Relation other = (Relation)o;

    return name.equals(other.name)
      &amp;&amp; roleFrom.equals(other.roleFrom)
      &amp;&amp; roleTo.equals(other.roleTo);
  }
}

class Role {
  RoleType roleType;
  String details;

  public int hashCode() {
    // Just a sample. super.hashCode() would probably be better
    return roleType.hashCode();
  }

  public boolean equals(Object o) {
    if(!(o instanceof Role)) return false;
    Role other = (Role)o;

    return roleType.equals(other.roleType);
  }
}
class RoleType {
  String typeName;
  String details;

  public int hashCode() {
    // Just a sample. super.hashCode() would probably be better
    return typeName.hashCode();
  }

  public boolean equals(Object o) {
    if(!(o instanceof RoleType)) return false;
    RoleType other = (RoleType)o;

    return typeName.equals(other.typeName);
  }
}
</code></pre>

<p>With regard to <code>if(!(o instanceof XYZWK)) return false;</code>: this is basically just fail-fast for the <code>equals</code> method, without generating (or needing a <code>try</code>/<code>catch</code> for) a <code>ClassCastException</code>.</p>
"
"2201755","<p>Why do you care? Nobody calls the main method by hand. It is internal to Java.</p>

<p>EDIT : I guess it doesn't matter now as you can define main method as :</p>

<pre><code>public static void main(String... args);
</code></pre>

<p>My point is still valid as no one calls main explicitly.</p>
"
"2207105","<p>I use this to generate UUIDs (Universally Unique IDs) for my DTOs which act as surrogate keys for transient collections. Don't know if it's the same thing, but it may point you in the right direction.</p>

<pre><code>import java.util.UUID;
...
    private String uuid=null;
...
    protected String getUuid() {
        synchronized (this) {
          if (null ==uuid) {
            uuid = UUID.randomUUID().toString();
          }
          return uuid;
        }
      }
</code></pre>
"
"2229198","<p>One suggestion: If your properties are named with a dot delimited hierarchical format you could dynamically build a <code>JTree</code> to represent the various groups of properties.  When a user clicks on a given node in the tree you could display the properties in that category within a <code>JTable</code> on a separate <code>JPanel</code> (e.g. as name-value pairs).  You could also enrich the GUI by adding a <code>JTextField</code> where the user could search for a property.</p>

<p>This way, at least you don't present a mass of information all on the same screen ... although the downside is your GUI will end up looking like Regedit :-)</p>

<p>When editting properties you could use reflection to determine the type of property and hence applicable cell editor; e.g.</p>

<ul>
<li>For enums you could present a <code>JComboBox</code> based editor.</li>
<li>For numerical values you could present a <code>JSpinner</code> or <code>JFormattedTextField</code>.</li>
<li>For boolean values you could present a <code>JCheckBox</code> based editor.</li>
</ul>
"
"4140096","<p>Yeahhhhh.....dumb question it would turn out.</p>

<p>You're passed a class - you're comparing it to a class.  </p>

<p>its call '=='.</p>

<pre><code>if (incomingClass == SomeRelatedClass.class)
</code></pre>
"
"2236652","<p>Strings are immutable, so actully you can't change the String afterwards (you can only make the variable that held the String object point to a different String object).</p>

<p>However, that is not the reason why you can bind any variable to a <code>final</code> parameter. All the compiler checks is that the parameter is not reassigned <em>within</em> the method. This is good for documentation purposes, arguably good style, and may even help optimize the byte code for speed (although this seems not to do very much in practice). </p>

<p>But even if you do reassign a parameter within a method, the caller doesn't notice that, because java does all parameter passing by value. After the sequence</p>

<pre><code>  a = someObject();
  process(a);
</code></pre>

<p>the fields of a may have changed, but a is still the same object it was before. In pass-by-reference languages this may not be true.</p>
"
"4155336","<pre><code>Type genericType = lst.getType();

if(genericType instanceof ParameterizedType){
    ParameterizedType aType = (ParameterizedType) genericType;
    Type[] fieldArgTypes = aType.getActualTypeArguments();
    for(Type fieldArgType : fieldArgTypes){
        Class fieldArgClass = (Class) fieldArgType;
        System.out.println(""fieldArgClass = "" + fieldArgClass);
    }
}
</code></pre>
"
"2516785","<p>Setting <code>stuff</code> to <code>null</code> is surely necessary, but it wouldn't be sufficient without forcing garbage collection. I suppose the <code>runExecutable</code> function would wait before the execution finishes, so I'd run <code>System.gc()</code> in a different thread so the garbage collection happened while waiting.</p>
"
"2254841","<p>Try this...</p>

<pre><code>&lt;c:if test=""${bean.name1 ne bean.name2}""&gt;
     fields that are supposed to appear _only_ when name1 is different from name2
&lt;/c:if&gt;
</code></pre>

<p>ne = not equal</p>

<p>Also </p>

<p># should be $</p>
"
"2516933","<p>Since payroll is an array it would need to be</p>

<pre><code>payroll[index].add(employee);
</code></pre>
"
"2324057","<p>If the <code>thread</code> is finished, sure one can reuse it again. You can make sure it is not running by calling <code>isAlive()</code> or something similar.</p>

<p><strong>EDIT</strong> : If someone has suspended a <code>thread</code>, one cannot start again. I don't why it cannot be started if it has finished normally. But I give the benefit of doubt and say <strong>it cannot be reused.</strong></p>
"
"3418584","<p>Consider bundling a jar file with the java code.</p>

<p>A makefile is just an executable script so you could check if java is in the $PATH of the executing environment.</p>

<p>You could also do something like:</p>

<pre><code>#!/bin/bash
java&gt;/dev/null
if [ $? -eq 0 ]
then 
   echo ""java is installed""
else
   echo ""java is not installed""
fi
</code></pre>

<p>But this, again, checks if java exist in the $PATH of the script. </p>
"
"4240175","<p>I won't give you a direct answer. Have some tests instead. This is a perfect example question for test-driven development...</p>

<p>Given</p>

<pre><code>public List&lt;Character&gt; jumble(String characters) ...
</code></pre>

<p>Implement it such that these tests pass. Do the tests in order, one at a time. Make sure the first tests continue to pass when you do subsequent ones. Refactor as you go</p>

<pre><code>Assert.assertTrue(jumble().isEmpty());
// this first one should have been very easy, just return an empty list
Assert.assertEquals(Arrays.asList(""a""), jumble(""a""));
// this one is easy too, just return the input string in a list and it will work
Assert.assertEquals(Arrays.asList(""ab"", ""ba""), jumble(""ab""));
// now it has started to get a bit harder, return a list with the input string normally and reversed
Assert.assertEquals(Arrays.asList(""abc"", ""acb"", ""bac"", ""bca"", ""cab"", ""cba""), jumble(""abc""));
// with the above you need to start treating the characters separately.
// Try building upon the existing solution so that you break down this problem recursively...
Assert.assertEquals(Arrays.asList(""abb"", ""abb"", ""bab"", ""bba"", ""bab"", ""bba""), jumble(""abb""));
// or, instead of the one above, you might want to test for ...
Assert.assertEquals(Arrays.asList(""abb"", ""bab"", ""bba""), jumble(""abb""));
// depending upon whether one 'b' is the same as another.
// (in which case the return type should probably be Set&lt;Character&gt;, not List&lt;Character&gt;
</code></pre>

<p>If you get these tests to pass, without assuming the length of the input in your algorithm, you should be OK for much larger strings.</p>
"
"2327981","<p><a href=""http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html"" rel=""nofollow"">The API says</a>:</p>

<p>""Strings are constant; their values cannot be changed after they are created. <a href=""http://java.sun.com/j2se/1.4.2/docs/api/java/lang/StringBuffer.html"" rel=""nofollow"">String buffers</a> support mutable strings. Because String objects are immutable they can be shared. For example:</p>

<pre><code>     String str = ""abc"";
</code></pre>

<p>""is equivalent to:</p>

<pre><code>     char data[] = {'a', 'b', 'c'};
     String str = new String(data);
</code></pre>
"
"3461935","<p>Use Java reflection.</p>

<pre><code>List&lt;String&gt; args = new ArrayList&lt;String&gt;();
// add the args to the list here
Method method = myClass.getClass().getMethod(method, List.class);
Object o = method.invoke(myClass, args);
</code></pre>
"
"2574740","<p>May be you would like to try this solution:</p>

<p>class MyDialog {</p>

<pre><code>private static String[] returnValues = new String[10]
private static MyDialog dialog;

private MyDialog() {
  initDialog()
}

private void closeDialog()
{
     dispose();
}

private initDialog()
{

 //....
 btnOk = new JButton(""OK"");
  jTextField1 = new JTextField();
  ...
  jTextField10 = new JTextField();
  ...
  ActionListener btnOK_click = new ActionListener() {

        public void actionPerformed(ActionEvent e)
        {
            returnValues[0] = jTextField1.getText();
            ...
            returnValues[9] = jTextField10.getText();
            closeDialog();  
        }
  }
  btnOk.addActionListener(btnOk_click);
}

public static String[] showMyDialog() {
    dialog = new MyDialog();
    dialog.setVisible(true);
    return returnValues;
}
</code></pre>

<p>}</p>
"
"2397072","<pre><code>dummyInt = dummyInt + 1;
</code></pre>

<p>This statement is actually 3 separate operations:</p>

<ol>
<li>Read the value of dummyInt</li>
<li>Add 1</li>
<li>Write the value back to dummyInt</li>
</ol>

<p>So yes you do need to synchronize this. It is possible for one thread to read the value, then another thread does all three operations, and when the first thread finishes the value is only increased by 1 (I hope this makes sense :P).<code>dummyBoolean</code> is similar. You read it in the if statement and the write the new value.</p>

<p>EDIT</p>

<p>Sorry for not reading the question correctly. 
According to the javadoc this shouldn't need sync.</p>
"
"4324644","<p>I dont think there is a method call you could use. Try it like this</p>

<pre><code>List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
  for (int index = 0; index &lt; array.length; index++)
  {
    list.add(array[index]);
  }
</code></pre>
"
"3513536","<p>You have to ""wire"" (or ""inject"") the exception handler in your spring beans. I'm not sure which of your Spring bean actually needs the exception handler. </p>

<p>Personally, I use <code>default-autowire=""byName""</code>, which cause my exceptionHandler to be wired in my Controller class automatically. Your approach actually use manual wiring. So you need to find out which bean should actually use the exception handler. Have you tried (just on top of my head):</p>

<pre><code>&lt;bean class=""org.springframework.ws.server.endpoint.adapter.MarshallingMethodEndpointAdapter""&gt;
    &lt;constructor-arg ref=""marshaller""/&gt;
    &lt;property name=""exceptionHandler"" ref=""exceptionHandler"" /&gt;
&lt;/bean&gt;
</code></pre>

<p>Or you could just add the autowired mechanism of Spring and let it wire the beans automatically. :)</p>
"
"2624757","<p>You cant change value of <code>n</code> at any time by using:</p>

<pre><code>  Holder h = new Holder(5);
  Field f = h.getClass().getDeclaredField(""n"");
  f.setAccessible(true);
  f.setInt(h, 10);
  h.assertSanity();
</code></pre>
"
"4356923","<p>Since the only way to do this is to keep a set value for each word, you'd be using arrays, or some other form of data storage. </p>

<p>Here is an example where you just keep the words, and their corresponding values in two arrays (note, they must be in the same order, so the first word corresponds with the first number, etc). </p>

<pre><code>public static String[] words = {""cat"",""dog"",""banana""};
public static int[] value = {3,4,5};
public static void main(String[] args){
    if(valOf(""Cat"") &gt; valOf(""Dog"")){
        System.out.print(""Cat is greater than Dog"");
    }
    else{
        System.out.print(""Cat is not greater than Dog"");
    }
}
public static int valOf(String str){
    for(int x=0;x&lt;words.length;x++){
        if(str.equalsIgnoreCase(words[x])){
            return value[x];
        }
    }
    return -1;
}
</code></pre>
"
"3544530","<p>Not that elegant, but I think in most similar case, that's what we can do:</p>

<pre><code>static &lt;T extends Number&gt; T zeroIfNull(T value, Class&lt;T&gt; clazz) {...}
</code></pre>

<p>and when used:</p>

<pre><code>BigDecimal v = zeroIfNull(orignalVal, BigDecimal.class);
</code></pre>
"
"3544623","<pre><code>import java . math . * ;

class Numbers
{
    public static &lt; T extends Number &gt; T zeroIfNull ( T number , Class&lt;T&gt; clazz ) throws IllegalArgumentException
    {
    if ( clazz == Integer . class )
        {
        return zeroIfNull ( number , clazz , 0 ) ;
        }
    else if ( clazz == Double . class )
        {
        return zeroIfNull ( number , clazz , 0 ) ;
        }
    else if ( clazz == BigInteger . class )
        {
        return zeroIfNull ( number , clazz , BigInteger . ZERO ) ;
        }
    // add a whole bunch more if statements
    throw new IllegalArgumentException ( ""Unexpected Number Class "" + clazz . getName ( ) + "" with possibly undefined zero value."" ) ;
    }

    private static &lt; T extends Number &gt; T zeroIfNull ( T number , Class&lt;T&gt; clazz , Object zero )
    {
    if ( number == null )
        {
        return ( clazz . cast ( zero ) ) ;
        }
    else
        {
        return ( number ) ;
        }
    }
}
</code></pre>
"
"3544891","<p>The following is an improvement on my first answer.</p>

<pre><code>import java . math . * ;
import java . util . * ;

class Numbers
{
    private static final Map&lt;Class&lt;? extends Number&gt;,Object&gt; zeroes = new HashMap&lt;Class&lt;? extends Number&gt;,Object&gt; ( ) ;

    static
    {
         zeroes . put ( Integer . class , new Integer ( 0 ) ) ;
         zeroes . put ( Double . class , new Double ( 0.0 ) ) ;
         zeroes . put ( BigInteger . class , BigInteger . ZERO ) ;
         // fill it up with all supported classes
    }

    public static &lt; T extends Number &gt; T zeroIfNull ( T number , Class&lt;T&gt; clazz ) throws IllegalArgumentException
    {
    if ( number == null ) // return zero (if we know what zero is)
        {
        if ( zeroes . containsKey ( clazz ) )
            {
            return ( clazz . cast ( zeroes . get ( clazz ) ) ) ;
            }
        throw new IllegalArgumentException ( ""Unexpected Number Class "" + clazz . getName ( ) + "" with undefined zero value."" ) ;
        }
    return number ;
    }
}
</code></pre>
"
"2454417","<p>There are some subtle ways to that (each of those being subjects to discussions)</p>

<ul>
<li>Make all your application's Exception <code>RuntimeException</code> subclasses. This way, there is no try/catch in your application, and you can easily see (at the thread level) what problème broke the thread. Unfortunatly, this has no effect on the developper that wrote this code block precisely to get rid of an exception he didn't bother to manage.</li>
<li>Use <a href=""http://checkstyle.sourceforge.net/"" rel=""nofollow"">Checkstyle</a>, or an other static code checker, to ensure no empty catch block exists in your application. Unfortunatly, this do not works when no continous integration process exists in your team (since errors notification won't go to the developper responsible for them).</li>
<li>Provide default catch template code with a sensible value (like a <code>logger.log(Level.WARN, ""something went wrong here"", e)</code>) allowing user to not have to worry about exception management, however having a reasoably good code.</li>
</ul>
"
"1235304","<p>To reduce CPU, you want to sleep your threads inside of common <strong>if</strong> and <strong>while</strong> loops.</p>

<pre><code>while(whatever) {
    //do something
    //Note the capitol 'T' here, this sleeps the current thread.
    Thread.sleep(someNumberOfMilliSeconds);
}
</code></pre>

<p>Sleeping for a few hundred milliseconds will greatly reduce CPU usage with little to no noticeable result on performance.</p>

<p>As for the memory, I'd run a profiler on the individual threads and do some performance tuning. If you out throttled the amount of memory available to thread I think an out of memory exception or starved thread is likely. I would trust the JVM to provide as much memory as the thread needed and work on reducing the memory usage by keeping only essential objects in scope at any given time.</p>
"
"4388874","<p>If you just want to test, if a String contains an integer value only, write a method like this:</p>

<pre><code>public boolean isInteger(String s) {
  boolean result = false;
  try {
    Integer.parseInt(""-1234"");
    result = true;
  } catch (NumberFormatException nfe) {
    // no need to handle the exception
  }
  return result;
}
</code></pre>

<p><code>parseInt</code> will return the <code>int</code> value (-1234 in this example) or throw an exception.</p>
"
"3577872","<p>Can't really dereference a constant like that.</p>

<p>Use <code>Color.getColor(""Color.RED"".split(""\."")[1])</code> to get the same thing.</p>

<p>If you were to try and use the string you'd have to do something like:</p>

<pre><code>String[] parts = myColor.split(""\."");
String className = parts[0];
String fieldName = parts[1];
Class c = Class.forName(className);
Field f = c.getField(fieldName);
Object o = f.get(null);
Color col = (Color) o;
</code></pre>

<p>In conclusion - don't.</p>
"
"1532616","<p>For simple strings like that I prefer to use </p>

<pre><code>""string"".concat(""string"").concat(""string"");
</code></pre>

<p>In order, I would say the preferred method of constructing a string is using StringBuilder, String#concat(), then the overloaded + operator.  StringBuilder is a significant performance increase when working large strings just like using the + operator is a large decrease in performance (exponentially large decrease as the String size increases).  The one problem with using .concat() is that it can throw NullPointerExceptions.</p>
"
"1535206","<p>How about this:</p>

<pre><code>static int[]     SCORES =
    { 90, 80, 70, 60, 0 };  

static String[]  GRADES =
    { ""A"", ""B"", ""C"", ""D"", ""F"" };  

String letterGrade(int pct)
{
    for (int i = 0;  i &lt; SCORES.length;  i++)
        if (pct &gt;= SCORES[i])
            return GRADES[i];
}
</code></pre>

<p>This assumes that <code>pct</code> is positive. It uses a single <code>if</code> statement, so I'm not sure if this qualifies as a valid solution or not.</p>
"
"3589554","<pre><code>int x;
public static void main(String args[]){
    E a = new E();
    System.out.println(a.hashcode());
    E b = new E();
    System.out.println(b.hashcode());
}

public int hashcode(){
    return x*17;
}
</code></pre>
"
"1573366","<p>You need to be using javax.xml.parsers.DocumentBuilderFactory</p>

<pre><code>DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
factory.setValidating(false);
DocumentBuilder builder = factory.newDocumentBuilder();
InputSource src = new InputSource(""http://de.wikipedia.org/wiki/Right_Livelihood_Award"")
Document xmlDocument = builder.parse(src.getByteStream());
DOMSource source = new DOMSource(xmlDocument);
TransformerFactory tf = TransformerFactory.newInstance();
Transformer transformer = tf.newTransformer(xsltSource);
transformer.transform(source, new StreamResult(System.out));
</code></pre>
"
"4450041","<p>here is the sample to do that</p>

<pre><code>                   import officetools.OfficeFile; // this is my tools package
        ...
        FileInputStream fis = new FileInputStream(new File(""test.html""));
        FileOutputStream fos = new FileOutputStream(new File(""test.pdf""));

        // suppose OpenOffice.org runs on localhost, port 8100
        OfficeFile f = new OfficeFile(fis,""localhost"",""8100"", true); 

        f.convert(fos,""pdf"");
        ...
</code></pre>
"
"2500579","<pre><code>public class Base
{
   public object BaseMethod()
   { 
      return new String(""From Base"");
   }

}

public class Child extends Base
 {
   public object BaseMethod
   {
      return new String(""From Child.BaseMethod (overridden)"");
   }

   public object ChildMethod
   {
      return new String(""From Child.ChildMethod"");
   }
}

public class Test
{
   public static void main(String[] args)
   {
       Base base = new ChildMethod();
       System.out.println(base.BaseMethod()); //prints ""From Child.BaseMethod (overridden)""

       System.out.println(base.ChildMethod()); //Will not compile as ChildMethod as reference is of type Base, and ChildMethod is not specified.

       Child child = (Child) base; //But I can cast it.
       System.out.println(child.ChildMethod()); // This will work.
   }
}
</code></pre>
"
"2509678","<p>If you don't specify the encoding, Tomcat is free to encode your characters however it feels, and the browser is free to guess what encoding Tomcat picked.  You are correct in that the way to solve the problem is <code>response.setCharacterEncoding(""UTF-8"")</code>.</p>

<p>You shouldn't worry about the chance that the browser won't understand the encoding, as virtually all browsers released in the past 10 years support UTF-8.  Though if you're really worried, you can inspect the ""Accept-Encoding"" headers provided by the user agent.</p>
"
"2518410","<p>Im not sure why you want to do this, but you could have two classes implement the same interface, then reference the objects by the interface.  For example:  </p>

<blockquote>
  <p>class A implements something...<br>
  class B implements something...    </p>
</blockquote>

<pre><code>something = new A();    
something = new B();
</code></pre>
"
"3658197","<p><code>d += Double.MIN_VALUE</code></p>

<p>(or <code>-=</code> if you want to take away)</p>
"
"2625587","<p><strong>Critical</strong></p>

<ul>
<li>Clean text editor ( Textmate, gVim ) </li>
<li>JDK ( java, javac, javap etc. ) </li>
<li>A webbrowser to read the javadocs</li>
</ul>

<p><strong>Non-critical</strong></p>

<p>All those you mention but <code>s/Eclipse/IntelliJ Idea/g</code> </p>
"
"1654591","<p>usually, risky codes are put <strong>all</strong> in one try-catch block. nested try-catch blocks are not a very good idea, IMO (or just try to avoid nested try-catch blocks as much as possible, unless you really need them).</p>

<p>because the risky codes are exceptional scenario, so putting exceptional codes for exceptional case for even more exceptional case, that's alot of unnecessary work.</p>

<p>for example in <code>example1()</code>, place all risky codes in one try-catch block:</p>

<pre><code>try{
FileWriter out = new FileWriter(“test.txt”);
out.write(“example”);
out.close();
} catch(Exception e) {
    //handle exception
}
</code></pre>

<p>OR, another good idea is to place several catch(s) for the same try:</p>

<pre><code>try{
    FileWriter out = new FileWriter(“test.txt”);
    out.write(“example”);
    out.close();
} catch(FileNotFoundException e) {
        //if IOException, do this..
} catch(IOException e) {
        //if FileNotFound, do this..
} catch(Exception e) {
        //completely general exception, do this..
}
</code></pre>
"
"4574271","<p>So the implementation of such array can be like this</p>

<pre>
import java.util.AbstractList;
import java.util.List;
import java.util.RandomAccess;

public class IntArrayList extends AbstractList&lt;Integer&gt;
implements List&lt;Integer&gt; , RandomAccess /* todo , Cloneable, java.io.Serializable */{

    private static final int INT_SIZE_MINUS_ONE = 15;
    private static final int RIGHT_SHIFT = 4;

    private int size;
    private int isNull[];
    private int data[];

    IntArrayList(int size) {
        if (size &lt; 0) {
            throw new RuntimeException(""invalid size"");
        }
        this.size = size;
        isNull = new int[(size + INT_SIZE_MINUS_ONE) &gt;&gt;&gt; RIGHT_SHIFT];
        data = new int[size];
    }

    private void rangeCheck(int index) {
        if (index &lt; 0 || index &gt;= size) {
            throw new IndexOutOfBoundsException();
        }
    }

    public Integer set(int index, Integer element) {
        rangeCheck(index);

        Integer oldValue = get(index);
        if (element == null) {
            isNull[index &gt;&gt;&gt; RIGHT_SHIFT] &= ~(1 &lt;&lt; (index & INT_SIZE_MINUS_ONE));
        } else {
            isNull[index &gt;&gt;&gt; RIGHT_SHIFT] |= (1 &lt;&lt; (index & INT_SIZE_MINUS_ONE));
            data[index] = element;
        }
        return oldValue;
    }

    @Override
    public Integer get(int index) {
        rangeCheck(index);
        if ((isNull[index &gt;&gt;&gt; RIGHT_SHIFT] & (1 &lt;&lt; (index & INT_SIZE_MINUS_ONE))) == 0) {
            return null;
        }
        return new Integer(data[index]);
    }

    @Override
    public int size() {
        return size;
    }

    public boolean isEmpty() {
        return size == 0;
    }
}

</pre>

<p>It can be used anywhere as <code>List&lt;Integer&gt;</code></p>

<p>Such kind of object can be useful for long term storage of information that rarely used. It will decrease fragmentation of heap at a cost of increased garbage generation on access to elements.</p>
"
"2825948","<pre><code>    ByteArrayInputStream stream  = &lt;&lt;Assign stream&gt;&gt;;
    byte[] bytes = new byte[1024];
    stream.read(bytes);
    BufferedWriter writer = new BufferedWriter(new FileWriter(new File(""FileLocation"")));
    writer.write(new String(bytes));
    writer.close();
</code></pre>

<p>Buffered Writer will improve performance in writing files compared to FileWriter.</p>
"
"3658243","<p>Use Double.MIN_VALUE. </p>

<p>The javadoc for it:</p>

<p><code>A constant holding the smallest positive nonzero value of type double, 2-1074. It is equal to the hexadecimal floating-point literal 0x0.0000000000001P-1022 and also equal to Double.longBitsToDouble(0x1L).</code></p>
"
"4576298","<p>In Java, the BufferWriter is very slow: Use the native methods directly, and call them as little as possible (give them as much data per call as you can).</p>

<pre><code>    try{
        FileOutputStream file=new FileOutputStream(file);
        file.write(content);
        file.close();
    }catch(Throwable e){
        D.error(e);
    }//try
</code></pre>

<p>Also, deleting the file can take a while (maybe it is being copied to the recycle bin first).  Just overwrite the file, like in the above code.</p>
"
"2830735","<p>You don't have to distribute your source code. You can distribute compiled <code>.class</code> files, which contain human-unreadable bytecode. You can bundle them into <code>.jar</code> files, which are just zip files, and are roughly Java equivalent of native .dll files.</p>

<p>Note taht <code>.class</code> files can be easily decompiled (although decompilers cannot recover 100% of information from sources). To make decompilation more difficult, you can use obfuscator to make sources much less legible.</p>
"
"4588098","<p>You can always get a Connection object directly in case you want to do the inserts outside of hibernate.</p>

<pre><code>Connection connection = DB.getConnection();
</code></pre>
"
"3694204","<p>I can't  cite a reference, but by design the <code>List</code> and <code>Set</code> implementations of the <code>Collection</code> interface are basically extendable <code>Array</code>s. As <code>Collections</code> by default offer methods to dynamically <em>add</em> and <em>remove</em> elements at any point -- which <code>Array</code>s don't -- insertion order might not be preserved. 
Thus, as there are more methods for content manipulation, there is a need for special implementations that do preserve order.</p>

<p>Another point is performance, as the most well performing <code>Collection</code> might not be that, which preserves its insertion order. I'm however not sure, how exactly <code>Collections</code> manage their content for performance increases.</p>

<p>So, in short, the two major reasons I can think of why there are order-preserving <code>Collection</code> implementations are:</p>

<ol>
<li>Class architecture</li>
<li>Performance</li>
</ol>
"
"3696463","<p>The easiest solution for your case - change the first line, let it do just the opposite thing:</p>

<pre><code>String lower = Name.toUpperCase ();
</code></pre>

<p>Of course, it's worth to change its name too.</p>
"
"1664057","<p>This doesn't exactly answer your question, but I see the opposite of domain-driven design as database-driven design. In database-driven design, the database schema is created first, and then you create your classes with full knowledge of what the schema looks like. The advantage is that you have a better understanding of what's going on 'under the hood', and minimize the effects of impedance mismatch. However, the downside is that the database schema, because it's relational rather than object-oriented, doesn't translate very to objects (for example, there's no concept of a collection in relational databases).</p>

<p>In domain-driven design, in theory you create your data objects just like you would any other class, and treat the database as simply a persistence layer. In Layman's terms, the database is only a storage container and you don't care HOW the objects are stored, only that they are stored somehow. This eliminates the impedance mismatch and you have one less thing to worry about. In practice, however, you still have to be aware of how the objects are stored, and there can be performance issues when the ORM you're using is trying to spit out a complex SQL query.</p>

<p><strong>Edit:</strong></p>

<p>Here's an example of what domain-driven design should be like, in principle. Let's say you have a Person class, like so (in C#):</p>

<pre><code>public class Person
{
    public int Id { get; set; }
    public string Name { get; set; }
    public Address Address { get; set; }
    public ICollection&lt;Person&gt; Relatives { get; set; }
    public Company Employer { get; set; }
}
</code></pre>

<p>Now, in a relational database, this will probably translate to 3 tables, a Person table, Address table, and Company table, with a bunch of relationships between them. However, this is vastly different than how the programmer sees this object. The programmer sees it as an instance of a Person object with 4 parameters, one of which is a <code>ICollection</code>. This doesn't match up very well with the database table structure, hence the 'impedance mismatch', or in Laymen's terms, a difference in layout between the relational model and object model.</p>

<p>In domain-driven design, I should be able to do this:</p>

<pre><code>Person person = new Person();
// set each property to something
Database.Save(person);
</code></pre>

<p>Now, the person object is saved. I can retrieve it like so:</p>

<pre><code>Person databasePerson = Database.Get&lt;Person&gt;(idOfPerson);
</code></pre>

<p>And it'll return my <code>Person</code> object, just like how it was before I saved it. This way, I'm not concerned at all with how the databse is saving it, or worry about the impedance mismatch. I simply save it and retrieve it as needed.</p>

<p>This is all in theory though. In practice, you'll probably have to manually specify the 'mapping', or how the classes know which table/column in the database to get data from. It can get pretty complex when you're trying to map to more complex types such as dictionaries and other ADTs, and also when you're trying to pull data from multiple tables into one class.</p>
"
"1667585","<p>You say ""Java"" but ""not Java EE"". Do you mean you are using JSP and/or servlets but not a full Java EE stack? If that's the case, then you should still have request.getParameter() available to you.</p>

<p>If you mean you are writing Java but you are not writing JSPs nor servlets, or that you're just using Java as your reference point but you're on some other platform that doesn't have built-in parameter parsing ... Wow, that just sounds like an unlikely question, but if so, the principle would be:</p>

<pre><code>xparm=0
word=""""
loop
  get next char
  if no char
    exit loop
  if char=='='
    param_name[xparm]=word
    word=""""
  else if char=='&amp;'
    param_value[xparm]=word
    word=""""
    xparm=xparm+1
  else if char=='%'
    read next two chars
    word=word+interpret the chars as hex digits to make a byte
  else
    word=word+char
</code></pre>

<p>(I could write Java code but that would be pointless, because if you have Java available, you can just use request.getParameters.)</p>
"
"4651563","<p>You should be able to just use the @Autowired annotation on your instance variable that your setter is setting, without having to declare a TheClass bean in your XML.  That is:</p>

<pre><code>public class TheClass {
  @Autowired
  private TheData theData;
}
</code></pre>
"
"4672036","<p>JTextPane will take an HTML document as text. Have you considered adding your text to the JTextPane via an HTML document?</p>

<pre><code>JTextPane pane = new JTextPane();
pane.setContentType(""text/html"");

String text = /*some html table or set of divs for formatting */

pane.setText(text);

myJFrame.add(pane);
</code></pre>

<p>When you build the text string, you can set the alternating colors with css, or hard code it directly into you created document. This will help you avoid having to override the repaint methods.</p>

<p>This will work good in instances where you will not allow the user to edit the box (ie setEditable to false) If you expect this to repaint the line each time the user hits the enter key, you will have to adapt the solution</p>
"
"2920060","<p>Here is some trick how to find out is some file (not mandatory property file) exists in class path </p>

<pre><code>public class FileUtil {
    public static boolean isFileExists(String fileName){
         return null != FileUtil.class.getResourceAsStream(fileName);
    }
}
</code></pre>

<p>Sure it not always works as long it depends on class loading aspects</p>
"
"1756072","<p>I guess you want</p>

<pre><code>public void increment() 
{
   if(value &gt;= limit)
     value = 0;
   else
     value = value + 1;
}
</code></pre>

<p>but it definitely smells like homework...</p>
"
"1756139","<pre><code>public void increment()
{
    value++;
    if(value &gt;= limit)
        value = 0;
}
</code></pre>
"
"3833080","<p>Iterators were created to step through all the objects in a collection one at a time, using data backed by said collection.</p>

<p><code>Iterator&lt;T&gt;</code> is almost always implemented using a private inner class that may use state that is part of the outer class.  Thus, you can't really modify an <code>Iterator</code>'s behavior without writing your own <code>Collection</code> (or whatever) as well.</p>

<p>Copying the Iterator could cause a host of new problems, such as falling out of sync with the backing collection.</p>
"
"1764388","<pre><code>Class clazz = Class.forName(""ReflectionTest"");    
Method m = clazz.getDeclaredMethod(""getArray"");
Object o1 = m.invoke(o, arg);
int array[][] = (int[][])o1;
System.out.println(""Array length: "" + array.length);
System.out.println(""Array length: "" + array[0].length);
</code></pre>
"
"2782620","<p>As long the thread you're starting doesn't have a reference to <code>this</code> then you're okay. If the thread does have a reference to <code>this</code> (either passed to the thread of indirectly via an inner class) then it's a bad idea to start it from the constructor as the object isn't fully initialized.</p>
"
"4732376","<p>Create a new runnable. In the run method ""start"" countdownlatch is waiting and will not allow execution unless it is released using calling countdown on that latch for a predefined time. In this case 1. (since start is passed 1 as concurrent no)</p>

<p>// Revised Answer. 
// A runnable class. </p>

<pre><code>public  class WorkerThread implements Runnable
    {
        CountDownLatch start;

        CountDownLatch end;

        String name;

        WorkerThread(CountDownLatch startLatch, CountDownLatch stopLatch)
        {
            this.start = startLatch;
            this.end = stopLatch;

        }

        public void run()
        {
            try
            {

                start.await();
            } catch (InterruptedException ex)
            {
                ex.printStackTrace();
            }
            System.out.println(""Will run when start is released "");
            end.countDown();
        }
    }
</code></pre>

<p>// This is the entry point method that executes the worker thread. </p>

<pre><code>public  void  initiateProcess (final int count) {
           CountDownLatch start = new CountDownLatch(1);
        CountDownLatch stop = new CountDownLatch(count);
        for (int i = 0; i &lt; count; i++)
        {
            new Thread(new WorkerThread(start, stop))
                    .start();
        }
        System.out.println(""Go"");
// This is where start latch is released. Now worked thread can complete its function.
        start.countDown();
        try
        {


 // Stop will wait until stop latch is countdowned to zero from count param. (see count param)
            stop.await();
        } catch (InterruptedException ex)
        {
            ex.printStackTrace();
        }
        System.out.println(""Finished"");
    }
</code></pre>
"
"1791707","<p>If the exception being thrown is always going to be of a specific type, like OracleException, you can catch just that exception.</p>

<p>For example:</p>

<pre><code>try {

    ...

} catch(OracleException oe) {

    ...

}
</code></pre>

<p>This would only apply if there are specific Oracle exceptions being thrown. I don't know much about Oracle, so before attempting this you will probably want to find out if that's what's happening.</p>
"
"2987344","<p>The <a href=""http://java.sun.com/docs/books/tutorial/networking/urls/readingWriting.html"" rel=""nofollow"">Sun Microsystems article</a> linked to by SB would be a good place to start. However, I definitely wouldn't call it the preferred way. First it unnecessarily throws Exception, then it doesn't close the streams in a finally. Additionally, it uses the <a href=""http://java.sun.com/j2se/1.4.2/docs/api/java/net/URL.html#openStream%28%29"" rel=""nofollow"">url.openStream</a> method which I disagree with as it may still receive output even if a <a href=""http://stackoverflow.com/questions/2986767/is-url-openstream-harmful"">HTTP error is returned</a>.</p>

<p>Instead of <code>url.openStream</code> we write:</p>

<pre><code>HttpURLConnection conn=(HttpURLConnection) url.openConnection()
//Any response code starting with 2 is acceptable
if(!String.valueOf(conn.getResponseCode()).startsWith('2'))
    //Provide a nice useful exception
    throw new IOException(""Incorrect response code ""+conn.getResponseCode()+"" Message: "" +getResponseMessage());
InputStream rawIn=conn.getInputStream()
OutputStream rawOut=conn.getOutputStream()
//You may want to add buffering to reduce the number of packets sent
BufferedInputStream bufIn=new BufferedInputStream(rawIn);
BufferedOutputStream bufOut=new BufferedInputStream(rawOut);
</code></pre>

<p><strong>DO NOT USE THIS CODE WITHOUT HANDLING EXCEPTIONS OR CLOSING THE STREAMS!</strong>. This is actually quite hard to do correctly. If you want to see how to do this properly, please look at <a href=""http://stackoverflow.com/questions/2909280/android-image-fetching/2909460#2909460"">my answer</a> to the much more specific question of <a href=""http://stackoverflow.com/questions/2909280/android-image-fetching/2909460"">fetching images in Android</a> as I don't want to rewrite it all here. </p>

<p>Now, when retrieving input from the server, unless you are writing a command line tool, you'll want to have run this in a separate thread and display a loading dialogue. <a href=""http://stackoverflow.com/questions/2909280/android-image-fetching/2909379#2909379"">Sgarman's answer</a> demonstrates this using basic Java threads, while my <a href=""http://stackoverflow.com/questions/2909280/android-image-fetching/2909460#2909460"">an answer</a> to that question using the <a href=""http://developer.android.com/reference/android/os/AsyncTask.html"" rel=""nofollow"">AsyncTask</a> class from Android to make it neater. The <a href=""http://www.google.com/codesearch/p?hl=en#uX1GffpyOZk/core/java/android/os/AsyncTask.java&amp;d=3"" rel=""nofollow"">class file</a> doesn't have any Android dependencies and the license is Apache, so you can use it in non-Android projects.</p>
"
"3907884","<pre><code>myBool = myBool ? false : true;
</code></pre>
"
"1802588","<p>There is a sun class that will do it for you (although it will generate compiler warnings:</p>

<pre><code>import sun.misc.BASE64Encoder;

BASE64Encoder encoder = new BASE64Encoder();

String toEncode = ""encodeMe"";

String encoded = encodeBuffer(toEncode.getBytes());
</code></pre>

<p>From memory, there's also a BASE64Decoder, but I've not used that, I only go one way for comparison of usernames over-the-wire.</p>
"
"2993670","<p>There is little use in having a generic on an array. Before generics existed (prior to 1.5) an array explicitly on declaration expressed what type of element it was meant to store...</p>

<p><code>String[] array = new String[5];</code></p>

<p>Collections however did not have the same benefit. Generics where brought into the language to help with that (among other less used features). If you look at the equivalent list construct...</p>

<p><code>List&lt;String&gt; list = new ArrayList&lt;String&gt;(5);</code></p>

<p>You'll notice that the object type is List. The generic helps at compile time decide what kind of elements to insert at said list. Without it, there would be no compile time control as to the elements that could be put into the list.</p>

<p>Arrays never had that problem. At compile time they know exactly what type of elements they will hold, making generics unnecessary in their context.</p>
"
"4745447","<p>No my friend</p>

<pre><code>    Jsp and Php Are two different thigs 
</code></pre>

<p>for creating webapplication sercurea and not accessable from out side world 
we have to put our jsp in </p>

<p>TOMCAT/PROJECT/WEB-INF/JSP</p>

<p>here WEB-INF<br>
and MATA-INF 
folder is protect by defaluts so if you want to open your application
like</p>

<p><a href=""http://localhost:8080/PROJECT/one.jsp"" rel=""nofollow"">http://localhost:8080/PROJECT/one.jsp</a>
then it will give you 404 error</p>

<p>so you need controller servlet to run your Jsp file
So It different Then writing php application and diployment </p>
"
"1803804","<p>It's not fancy, but </p>

<pre><code>resourceIds.removeAll(null);
</code></pre>

<p>will remove all the nulls from the collection. Depending on the size of the collection, it maybe quicker than using predicates and other higher level constructs.</p>

<p>Edit: Answer updated from remove() to removeAll(), as suggested by Kevin.</p>
"
"2840251","<p>As mihi said, it depends on where you are getting those bytes from, but this code might be of use:</p>

<pre><code>int myNumber = (((int)byteOne) &lt;&lt; 0) |
    (((int)byteTwo) &lt;&lt; 8) |
    (((int)byteThree) &lt;&lt; 16) |
    (((int)byteFour) &lt;&lt; 24);
</code></pre>
"
"3932405","<p>According to the <a href=""http://docs.jboss.org/hibernate/core/3.3/reference/en/html/performance.html"" rel=""nofollow"">hibernate docs</a>, you should be able to disable lazy property loading by setting the <code>lazy</code> attribute on your particular property mappings: </p>

<pre><code>&lt;class name=""Document""&gt;
  &lt;id name=""id""&gt;
    &lt;generator class=""native""/&gt;
  &lt;/id&gt;
  &lt;property length=""50"" name=""name"" not-null=""true""/&gt;
  &lt;property lazy=""false"" length=""200"" name=""summary"" not-null=""true""/&gt;
  &lt;property lazy=""false"" length=""2000"" name=""text"" not-null=""true""/&gt;
&lt;/class&gt;
</code></pre>
"
"3092079","<p>Use this</p>

<pre><code>int targetNumber = (int) (Math.round(Math.random()* 10))
</code></pre>
"
"1820963","<p>This hack works:</p>

<pre><code>String x = ""s"" + //Formatter Hack
    ""a"" + //
    ""c"" + //
    ""d"";
</code></pre>

<p>I would suggest not to use the formatter. <strong>Bad code should look bad not artificially good.</strong> Good code takes time. You cannot cheat on quality. Formatting is part of source code quality.</p>
"
"4792121","<p>You can try to get ""*JAVA_HOME*"" environment variable. </p>

<p>It's could be helpful.</p>

<p><strong>EDIT:</strong></p>

<p>Better idea look por ""<em>CLASSPATH</em>"" variable.</p>

<pre><code>------- start --------
C:\Documents and Settings\david&gt;set
ALLUSERSPROFILE=...
APPDATA=...
CLASSPATH=.;C:\Archivos de programa\Java\jre6\lib\ext\QTJava.zip
CommonProgramFiles=...
...
----- end ----
</code></pre>
"
"2840286","<p>A solution in functional style (just for variety, imho not very convinient in use):</p>

<pre><code>private int addByte (int base, byte appendix) {
    return (base &lt;&lt; 4) + appendix;
}

public void test() {
    byte b1 = 5, b2 = 5, byte b3 = 0, b4 = 1;
    int result = addByte (addByte (addByte (addByte (0, b1), b2), b3), b4);
}
</code></pre>
"
"3099724","<p>Setting the classpath (using -cp) is the best way, as you can have a different classpath for each application. The CLASSPATH environment variable is global for all Java applications running on the machine, as is the extension mechanism so you probably don't want to use those.</p>

<p>If your code is executable (ie it has a <code>public static void main(String[] args)</code> method) then you can also specify the class that the main method is in, and the associated classpath within the manifest file inside the Jar file. Once you have done that you can do this:</p>

<p>java -jar myJar.jar</p>

<p>And Java will work out the rest.</p>
"
"2849509","<p>The correct answer for Java is use a <a href=""http://java.sun.com/javase/6/docs/api/java/util/Set.html"" rel=""nofollow"">Set</a>. If you already have a <code>List&lt;Customer&gt;</code> and want to de duplicate it</p>

<pre><code>Set&lt;Customer&gt; s = new HashSet&lt;Customer&gt;(listCustomer);
</code></pre>

<p>Otherise just use a <code>Set</code> implemenation <code>HashSet</code>, <code>TreeSet</code> directly and skip the <code>List</code> construction phase.</p>

<p>You will need to override <a href=""http://www.ibm.com/developerworks/java/library/j-jtp05273.html"" rel=""nofollow""><code>hashCode()</code> and <code>equals()</code></a> as well to make sure that the behavior you want actually what you get. <code>equals()</code> can be as simple as comparing unique ids of the objects to as complex as comparing every field. <code>hashCode()</code> can be as simple as returning the <code>hashCode()</code> of the unique id' <code>String</code> representation or the <code>hashCode()</code>.</p>
"
"1849613","<pre><code>LanePair.class
</code></pre>

<p>?</p>
"
"3980871","<p>No restriction that I know of.  Here's a better way of doing it:</p>

<pre><code>BufferedReader reader = null;  
try {  
    reader = new BufferedReader( new FileReader( ""/homes/output_train_2000.txt"") );  
    String line = null;  
    do {  
        line = reader.readLine();  
        if( line != null ) {  
            // Do something     
        }  
    } while( line != null );  
} catch (Exception e) {  
    e.printStackTrace();  
} finally {  
    if( reader != null )  
    try {  
        reader.close();  
    } catch (IOException e) {  
}  
</code></pre>
"
"4823578","<p>Personally I dont think it is useful except for IDE's that do the compile-time error checking, but that is my opinion. Reason: suppose you have</p>

<pre><code>Class A { 
    methodName() { System.out.println (""A""); }
}

class B extends A { 
    methodName() { System.out.println (""B""); }
}
</code></pre>

<p>At runtime, you will probably call B.methodName() - it doesnt matter to B whether B.methodName() overrides the same name of class A(). To class B, it shouldn't even matter if the superclass (A) implements methodName(). What I mean is that inheritance is a one-way street - You cannot un-inherit something by using a @override - all the compiler can check is if there is a method with the same signature in the superclass - which will not be used anyways.</p>

<p>For the other answers, if someone edits A.java to delete or rename methodName() or change its signature, you can still call B.methodName() without a problem, but only if you do not use that @override. I think this is also why it is <strong>not</strong> a part of the Java language.</p>
"
"3126061","<p>I know you asked about Java, but here is a solution in PHP as an example:</p>

<pre><code>abstract class Singleton
{
    protected function __construct()
    {
    }

    final public static function getInstance()
    {
        static $instances = array();

        $calledClass = get_called_class();

        if (!isset($instances[$calledClass]))
        {
            $instances[$calledClass] = new $calledClass();
        }

        return $instances[$calledClass];
    }

    final private function __clone()
    {
    }
}
</code></pre>

<p>Then you just write:</p>

<pre><code>class Database extends Singleton {}
</code></pre>
"
"3143692","<p>If you install a 64-bit Ubuntu, I believe that </p>

<pre><code>sudo apt-get install sun-java6-jdk
</code></pre>

<p>gives you a 64-bit Java.</p>

<hr>

<p>EDIT:  The 64 bit Java can give you as much memory as you need with the appropriate switches.  The limit is with the 32-bit JVM's which cannot go over 2-4 Gb depending on operating system.</p>
"
"3152320","<pre><code>java.lang.reflect.Array.newInstance(Class&lt;?&gt; componentType, int length)
</code></pre>
"
"4006219","<p>to get the current date:</p>

<p>Calendar calendar = Calendar.getInstance();
        SimpleDateFormat dateFormat = new SimpleDateFormat(""dd/MM/yyyy"");</p>

<pre><code>    try {

        System.out.println(""Today: "" + dateFormat.format(calendar.getTime()));

    } catch (Exception e) {
        e.printStackTrace();
    }
</code></pre>
"
"4844645","<p>(Repost from your first question. Shameless self-plug)
Don't fiddle around with URLConnection yourself, let <a href=""http://beders.github.com/Resty/"" rel=""nofollow"">Resty</a> handle it.</p>

<p>Here's the code you would need to write (I assume you are getting text back):</p>

<pre><code>import static us.monoid.web.Resty.*;
import us.monoid.web.Resty;  
...    
new Resty().text(TEST_URL, content(""HELLO WORLD"")).toString();
</code></pre>
"
"1885047","<p>An alternative, more verbose way</p>

<pre><code>List&lt;SomeObject&gt; toRemove = new ArrayList&lt;SomeObject&gt;();
for (SomeObject key: map.keySet()) {
    if (something) {
        toRemove.add(key);
    }
}

for (SomeObject key: toRemove) {
    map.remove(key);
}
</code></pre>
"
"4010116","<p>Many have clarified that point about <code>?</code> but noone has really answered the main question yet, so here it is:</p>

<p>It is possible to call <code>A#foo</code> like this:</p>

<pre><code>((A) new B()).foo(new Object());
</code></pre>

<p>The cast then is done <strong>inside</strong> of <code>foo</code>.</p>
"
"1921248","<p><strong>[EDIT]</strong> This is really wrong... I understood.</p>

<p>My first answer was:</p>

<blockquote>
  <p>That's java : String is not an object.</p>
  
  <p>Try with</p>

<pre><code>obj.getData().put(""key"",new String(""value""));
</code></pre>
</blockquote>

<p>But String extends Object... while I thought String was a primitive. I learned something ^^</p>
"
"3228762","<p>Why not just save the object to the SD Card? You can see an example of how I use this at my blog >> <a href=""http://androidworkz.com/2010/07/06/source-code-imageview-flipper-sd-card-scanner/"" rel=""nofollow"">http://androidworkz.com/2010/07/06/source-code-imageview-flipper-sd-card-scanner/</a></p>

<pre><code>public void saveArray(String filename, String[] output_field) {
         try {
            FileOutputStream fos = new FileOutputStream(filename);
            GZIPOutputStream gzos = new GZIPOutputStream(fos);
            ObjectOutputStream out = new ObjectOutputStream(gzos);
            out.writeObject(output_field);
            out.flush();
            out.close();
         }
         catch (IOException e) {
             e.getStackTrace(); 
         }
      }

    public String[] loadArray(String filename) {
          try {
            FileInputStream fis = new FileInputStream(filename);
            GZIPInputStream gzis = new GZIPInputStream(fis);
            ObjectInputStream in = new ObjectInputStream(gzis);
            String[] read_field = (String[])in.readObject();
            in.close();
            return read_field;
          }
          catch (Exception e) {
              e.getStackTrace();
          }
          return null;
      }
</code></pre>
"
"1942431","<p>For JInternalFrames...</p>

<pre><code>javax.swing.plaf.InternalFrameUI ifu= this.getUI();
((javax.swing.plaf.basic.BasicInternalFrameUI)ifu).setNorthPane(null);
</code></pre>
"
"3252940","<p>JSON library usefule to make JSON objects:
<a href=""http://www.json.org/java/"" rel=""nofollow"">http://www.json.org/java/</a> ,
Lib: <a href=""http://json-lib.sourceforge.net/"" rel=""nofollow"">http://json-lib.sourceforge.net/</a></p>

<p>First thing is, JSON call will be AJAX call to some URL. The URL must return JSON content with content type set to ""application/json"".</p>

<p>You can make a new servlet, in response set above content type, Make new <code>JSONObject</code>, put your objects in it and write the <code>JSONObject.toString()</code> to response.</p>

<p>So the client will get the JSON String. You can access it using simple Javascript OR jQuery.</p>

<p>You can make a special servlet only for JSON support which only haqndles JSON AJAX requests and returns proper JSON responses.</p>

<p>parth.</p>
"
"4898227","<pre><code>new String(password).matches("".*[""+NOT_ALLOWED.replace(']','\\').replace(""\\"",""\\\\\"")+""].*"");
</code></pre>

<p>Beware... you have to escape some of your not allowed characters, like <code>]</code> and <code>\</code>!</p>
"
"1957689","<p>This may work try</p>

<pre><code>
public static String intToIp(int i) {
        return ((i >> 24 ) & 0xFF) + ""."" +
               ((i >> 16 ) & 0xFF) + ""."" +
               ((i >>  8 ) & 0xFF) + ""."" +
               ( i        & 0xFF);
    }
</code>
</pre>
"
"4917129","<p><code>const</code> was in C++. Java apparently ditched it on purpose. And now people growing up without really experienced <code>const</code> think it's a good idea.</p>

<p>Once you marked one method as <code>const</code>, it'll spread like cancer, pretty soon you'll find yourself <code>const</code> almost everything. It would have been better to have a <code>not-const</code>.</p>

<p>Utterly it's useless. It's only appealing academically, doesn't help anybody in real programmnig.</p>
"
"3013670","<p>If your method takes more than 4 parameters then you got an ugly API. </p>

<p>Why are all your parameter types Strings. Does it make sense to create classes to represent those String like values, instead of just using String for everthing.</p>

<p>For example use a Name class rather String, so creating a Person might look like this...</p>

<pre><code>Person create( FirstName firstName, LastName lastName, Address address );   
</code></pre>

<p>Often programs use String as a container for all sorts of data, whcih leads to poor programs that rarely validate their data. By creating specialist classes even if they hold a single String property, one can add some validation to the factory and know for sure that its a valid value. Naturally your string containers should also be immutable - getters only no setters.</p>

<p>Take a look at <a href=""http://www.javapuzzlers.com/"" rel=""nofollow"">Java Puzzlers</a> from Josh Bloch to learn more tips and wisdom.</p>
"
"3013738","<p>Your best bet in Java is to create a simple parameter JavaBean - that is, a plain old Java object (POJO), with getters and setters for each one of the parameters. Then, your method signature could be:</p>

<pre><code>void mymethod (Parameters parametersObject)
</code></pre>

<p>and the Parameters JavaBean would have setParam1(...), setParam2(...), setParam3(...), and so on, and could even do some basic internal validation, provide default values, and so on.</p>

<p>If you do not want to go through with creating the Parameters object, use a Map, but then you would have to do additional checking inside of your method for missing parameters. Also, the keys to the map would have to be well-known - that is, known both outside of the method, as well as inside the method.</p>
"
"1985566","<p>kdgregory is correct that <code>Node</code> is just an interface, and <code>TinyElementImpl</code> implements that interface. <code>expression.evaluate()</code> can't return an instance of <code>Node</code>, it has to return a concrete class which <em>implements</em> node.</p>

<p>It might be useful to point out that you can use an instance of <code>TinyElementImpl</code> <em>as</em> as <code>Node</code>, and you can easily cast instances of <code>TinyElementImp</code> to <code>Node</code>.</p>

<p>For example, this should work just fine:</p>

<pre><code>Node result = (Node) expression.evaluate(someXML, XPathConstants.NODE);
</code></pre>

<p>You can then use <code>result</code> by calling any of the methods of <code>Node</code>, and by passing it to any method which accepts a <code>Node</code>.</p>
"
"3016582","<p>Actually, your proposed approach makes sense even without using 'volatile' keyword. Because reference assignment (<code>mappings = tmp;</code>) is an atomic operation (translates to one machine command) there's no chance of memory inconsistence:<br>
<a href=""http://java.sun.com/docs/books/tutorial/essential/concurrency/atomic.html"" rel=""nofollow"">http://java.sun.com/docs/books/tutorial/essential/concurrency/atomic.html</a><br>
<em>Reads and writes are atomic for reference variables and for most primitive variables (all types except long and double).</em></p>

<p>The idea behind 'volatile' keyword is that if you change such variable at time T, any other thread accessing it at time T + x  (x > 0) will see new value. Otherwise, even after value is changed, there's still some time period during which other threads may see old value. But that doesn't seem to be a problem for you.<br>
<strong>edit</strong><br>
Same idea is described in the link above.</p>
"
"3346947","<p>You don't need the Iterator at this point, just use a keyset at iterate this</p>

<pre><code>Set&lt;String&gt; keys = hashMap.keySet();
for(String key : keys){
 out.println(hashMap.get(key));
}
</code></pre>

<p>should do it.</p>
"
"4149553","<p>The simplest way is:</p>

<pre><code>String someNum = ""123000"";
System.out.println(someNum);
</code></pre>
"
"2008227","<p>In the past, I ran <a href=""http://www.videolan.org/"" rel=""nofollow"">VLC</a> from the command-line and used it to do my conversions (it's free, supports nearly all audio and video formats, and works on many different platforms).  If you have VLC installed on the server, you can access it this way using any language that has a <code>system()</code> command or equivalent.</p>
"
"4936857","<p><code>enum</code> are pretty powerful in Java. You could easily add a <code>contains</code> method to your enum (as you would add a method to a class):</p>

<pre><code>enum choices {
  a1, a2, b1, b2;

  public boolean contains(String s)
  {
      if (s.equals(""a1"") || s.equals(""a2"") || s.equals(""b1"") || s.equals(""b2"")) 
         return true;
      return false;
  } 

};
</code></pre>
"
"2011470","<p>Sounds like you’re not trying to create a <code>jar</code> file which will be run from the command line but an applet which will be executed in the browser. If that is true, you’re pretty much out of luck because applets are only allowed to access the server they have been loaded from. If you really want to access other servers from an applet, you have to sign your applet; Google can help you find more information.</p>
"
"3351095","<p>Actually, the date in database is a string like ""yyyy-mm-dd"".<br /></p>

<p>Why not to try:<br /></p>

<p><code>
String date = ""2010-07-28"";</p>

<p>stmt.executeUpdate(""INSERT INTO MYTABLE(time) "" + s);
</code></p>

<p>It's just for the date which you want.</p>

<p>If you want insert now, use the command like:</p>

<p>INSERT INTO mytable(now());</p>
"
"2017371","<p>You can start <code>counter</code> from <code>Integer.MAX_VALUE</code> and go down. You can stop at <code>Zero</code> or go upto <code>-Integer.MAX_VALUE</code>. </p>
"
"4949190","<p>You forgot unity.</p>

<p>Unity is an up-coming client-side application development platform. It does require installing just like flash but it's a lot more powerful then flash and seems to be picking up popularity. </p>

<p>Unity has a lot more inbuild framework rather then doing it in HTML5+JavaScript. I would say these are your two main options. For an example of javascript &amp; html5 in action look at <a href=""http://www.cloud9ide.org/"" rel=""nofollow""><code>cloud9ide</code></a></p>

<p>One of the big advantages of unity is the 3D engines. </p>

<p>Java applets are so 1998 and are not an option.</p>
"
"3052359","<p>The xor swap method is fine for integers, but calculating <code>a.length-1-j</code> 3 times each iteration is what's killing you.</p>
"
"3064461","<p><code>new HashSet&lt;Object&gt;(Arrays.asList(Object[] a));</code></p>

<p>But I think this would be more efficient:</p>

<pre><code>final Set s = new HashSet&lt;Object&gt;();
for (Object o : a) { s.add(o); }
</code></pre>
"
"3371753","<p>it should be: </p>

<pre><code>List&lt;? extends Node&gt; nodes = Arrays.asList(n,m,subclass);
</code></pre>

<p>bear in mind that : </p>

<pre><code>List&lt;Sub Class&gt; is not a sub class for List&lt;Parent Class&gt;
</code></pre>

<p>they are different classes.</p>
"
"4962126","<p>I switched to Apache HttpClient 4.x and solved it like this instead:</p>

<pre><code>public class Main {

    private static String GOOGLE_TRANSLATE_URL = ""https://www.googleapis.com/language/translate/v2"";
    private static String GOOGLE_API_KEY = ""xxxx"";

    private static String translateString(String sourceString, String sourceLanguage, String targetLanguage) {

        String response = null;

        // prepare call
        HttpClient client = new DefaultHttpClient();
        HttpPost post = new HttpPost(GOOGLE_TRANSLATE_URL+""?q=""+sourceString+""&amp;source=""+sourceLanguage+""&amp;target=""+targetLanguage+""&amp;key=""+GOOGLE_API_KEY);
        post.setHeader(""X-HTTP-Method-Override"", ""GET"");

        try {

            // make the call
            ResponseHandler&lt;String&gt; responseHandler = new BasicResponseHandler();
            response = client.execute(post, responseHandler);

        } catch (IOException e) {
            // todo: proper error handling
        }

        return response;
    }

    public static void main(String[] args) {
        System.out.println(translateString(""hello"", ""en"", ""sv""));
    }

}
</code></pre>

<p>Don't really know why this works better than Jersey, but it works. Thanks for trying to help!</p>
"
"4962346","<pre><code>String str= 21*90'89;
String part= str.split(""[*|']"");
System.out.println(part[0] +""""+part[1]);
</code></pre>
"
"2046428","<blockquote>
  <p><em>The hashCode of a java Hashtable element is always unique?</em></p>
</blockquote>

<p>They should. At least within the same class. </p>

<blockquote>
  <p><em>If not, how can I guarantee that one search will give me the right element?</em></p>
</blockquote>

<p>By specifying your self a good <code>hasCode</code> implementation for your class: <a href=""http://www.ibm.com/developerworks/java/library/j-jtp05273.html"" rel=""nofollow"">Override equals() and hashCode</a></p>
"
"3395982","<p>Create a static list of possibilities you've already gotten.</p>

<pre><code>static ArrayList&lt;int&gt; listIdontWantAnymore = new ArrayList&lt;int&gt;();

int NextRandomNumber() {
    Random random = new Random();
    int myRandomInt;

    do {
        myRandomInt = random.NextInt(6) + 1;
    } while(listIdontWantAnymore.Contains(myRandomInt));

    listIdontWantAnymore.Add(myRandomInt);

    // now your 'myRandomInt' is what you want it to be.
    return myRandomInt;
}
</code></pre>
"
"3088163","<p>My first thought was</p>

<pre><code>return (a||b)&amp;&amp;(b||c)
</code></pre>

<p>but for ease of reading I liked the proposed a+b+c>=2 solution that you guys suggested better</p>
"
"4278344","<p>the length of the array is 36. And you use the method <code>r.nextInt(length)</code>
it means that the max value of the random number is 36,from 0 to 35. so at most you can get 8 index 36.</p>
"
"2096184","<p>You can put a @requestMappings annotation on your class.  The @requestMapping annotations on methods are then relative to this:</p>

<pre><code>@Controller
@RequestMapping(value=""/modules/tips"")
public class TipsController{

    @RequestMapping(value=""{tipId}/{viewName}"",method=RequestMethod.GET)
    public ModelAndView get(
        @PathVariable String tipId,
        @PathVariable String viewName) {
        Tip tip = findTip(tipId);
        return new ModelAndView(""modules/tips/"" + viewName,""tip"",tip);
    }
}
</code></pre>
"
"3450618","<p>For some reason, Eclipse inserts ""? super Type"" when you create a <code>Comparable</code> type but that doesn't make sense (which superclass of Type will work in the <code>compareTo()</code>?).</p>

<p>Just get rid of ""? super"" and it will compile.</p>
"
"4288669","<p>Switch selector can be only integer, short, char or enum. String cannot be used as a switch selector. </p>

<p>If I understood you correctly you would like to control your flow using words entered by user. If you have predefined list of words I'd suggest you to use enum:</p>

<p>enum Words {
    start, stop, beep,
}</p>

<p>Now user enters a word beep. You can say:</p>

<pre><code>Words command = Words.valueOf();
///
switch (command) {
    case start: /* start something */ break;
    case stop: /* stop something */ break;
    case beep: /* beep!!! */ break;
    default: throw new IllegalArgumentException(""Unknown command "" + command);
}
</code></pre>
"
"5019082","<pre><code>public boolean isDescendant(member currentRoot, member x){
    //check the current level
    if (currentRoot.children().contains(x)){
        return true;
    }

    //leaf
    if( currentRoot.children().isEmpty() ){ return false; }

    //try all my children
    boolean found = false;
    for( Member child : currentRoot.children() ){
       found = isDescendant( child, x );
       if( found ) break;
    }

    return found;
}
</code></pre>

<p>You need to recurse over the current root, most likely.</p>
"
"2103213","<p>Switch has two relevant disadvantages:</p>

<ul>
<li>it is limited to primitive types and enums</li>
<li>you have to remember ""break"", what could lead to not so obvious bugs</li>
</ul>

<p>Often switch is a sign for poor OO design, because you'd better use polymorphism.</p>

<p>The only possible advantage of switch is, that it is more readable. But is</p>

<pre><code>switch (i) {
  case 1:
    // do something
    break;
  case 2:
    // do something
    break;
}
</code></pre>

<p>more readable than this:</p>

<pre><code>if (i == 1)
  //do something
else if (i == 2)
  // do something else
</code></pre>

<p>I'd say: no! And you wouldn't have the disadvantages of switch.</p>

<p>My suggestion: Try to avoid switch.</p>
"
"3142617","<p>If you don't want to swap the solution to use Callable objects then you can use also queues and return the result from the threads that way.<br>
I re-wrote your example like this:</p>

<pre><code>import java.util.PriorityQueue;
import java.util.Queue;

public class GetResultFromThread {
    public static void main(String[] args) throws Exception {
        Queue&lt;String&gt; queue = new PriorityQueue&lt;String&gt;();
        int expectedResults = 2;
        for (int i = 0; i &lt; expectedResults; i++) {
            new Example(queue).start();
        }

        int receivedResults = 0;
        while (receivedResults &lt; expectedResults) {
            if (!queue.isEmpty()) {
                System.out.println(queue.poll());
                receivedResults++;
            }
            Thread.sleep(1000);
        }
    }
}

class Example extends Thread {
    private final Queue&lt;String&gt; results;

    public Example(Queue&lt;String&gt; results) {
        this.results = results;
    }

    @Override
    public void run() {
        results.add(""result from thread"");
    }
}
</code></pre>

<p>Note that you shall think of synchronization and concurrency!</p>
"
"4315117","<p>What I can think of is to avoid confusion by the compiler.</p>

<p>If we had only, </p>

<pre><code>public static ImmutableList&lt;E&gt; of(E element); //Option 1
</code></pre>

<p>and </p>

<pre><code>public static ImmutableList&lt;E&gt; of(E... elements);  //Option 2
</code></pre>

<p>and in your code we had</p>

<pre><code>ImmutableList&lt;String&gt; list = ImmutableList.of(""Value"");
</code></pre>

<p>The compiler wouldn't know whether to call option 1 or option 2.</p>

<p>There must be a valid reason why Josh Bloch, Kevin Bourrillion and his team thought of having ""ridiculous"" <code>of(...)</code> method.</p>
"
"5019555","<p><strong>Edit:</strong> If your data structure has parent pointers, use these instead of searching your descendants in the tree. If not, consider adding them. See the answer from whiskeysierra for a solution with parent pointers. Only if adding them is not possible, consider this answer.</p>

<hr>

<p>The current answers all have two loops through children (one in <code>children.contains()</code>, one later).</p>

<p>This variant may be a bit more efficient (but it does not change the O-class), and is a bit shorter. (If children is a set with fast contains-check (like HashSet) and often the hierarchy is not so deep (so you don't need to recurse at all), the other answers are better.)</p>

<pre><code>public boolean isDescendant(Member x) {
   for(Member child : children) {
      if(child.equals(x) || child.isDescendant(x))
        return true;
   }
   return false;
}
</code></pre>

<p>If a node is considered a descendant of itself, you can write it like this:</p>

<pre><code>public boolean isDescendant(Member x) {
   if(equals(x))
      return true;
   for(Member child : children) {
      if(child.isDescendant(x))
        return true;
   }
   return false;
}
</code></pre>
"
"2111927","<p>I would do something with a BufferedReader along the lines of:</p>

<pre><code>Collection&lt;String&gt; lines = new ArrayList&lt;String&gt;();
BufferedReader reader = new BufferedReader( new InputStreamReader( Foo.getInputStream()));
while(reader.ready())
{
    lines.add( reader.readLine());
}

myClass.processData(lines); //Process the data after it is off the network.
</code></pre>

<p><em>Depending on your situation you could have an additional thread that processes the items in 'lines' as its getting filled, but then you would need to use a different structure to back the collection- one that can be used concurrently.</em> </p>
"
"4348827","<p>I'm not sure if this would be faster, but I have a feeling it would be.  </p>

<pre><code>private Map&lt;String, Integer&gt; getTetagramCount( final String text) {

    final List&lt;String&gt; list = new ArrayList&lt;String&gt;();

    for( int i =0; i &lt; text.length() - 4; i++) {
        list.add( text.substring( i, i+4);
    }

    Collections.sort( list);

    Map&lt;String, Integer&gt; map = new HashMap&lt;String, Integer&gt;( list.size());
    String last = null;
    int count = 0;
    for( String tetagram : list) {
        if( tetagram != last &amp;&amp; last != null) {
            map.put( tetagram, count);
            count = 0;
        }
        count++;
        last = tetagram;
    }
    if( tetagram != null) {
        map.put( tetagram, count);
    }
    return map;
}
</code></pre>

<p>Depending on what you are doing with the Map when you are done, you may not need the conversion to a Map at the end.</p>
"
"3572629","<p>HashMap doesn't maintain order what you add, if you want your output be the order what you add, you should use LinkedHashMap, so <code>deterministic</code> means output orderdly what you add in. </p>

<p>Here is example:
1.non-deterministic</p>

<pre><code>    HashMap&lt;String, Integer&gt; map = new HashMap&lt;String,Integer&gt;();
    map.put(""a"",5);
    map.put(""b"",16);
    map.put(""c"",46);
    System.out.println(map); //ouptput:{a=5, c=46, b=16}
</code></pre>

<p>2.deterministic</p>

<pre><code>HashMap&lt;String, Integer&gt; map = new LinkedHashMap&lt;String,Integer&gt;();
            map.put(""a"",5);
            map.put(""b"",16);
            map.put(""c"",46);
            System.out.println(map); //output:{a=5, b=16, c=46}
</code></pre>
"
"3185638","<p>According to Dr Heinz Kabutz, he said this in one of his <a href=""http://www.javaspecialists.eu/archive/Issue183.html"" rel=""nofollow"">newsletters</a>.</p>

<p>The old Vector class implements serialization in a naive way. They simply do the default serialization, which writes the entire <code>Object[]</code> as-is into the stream. Thus if we insert a bunch of elements into the List, then clear it, the difference between Vector and ArrayList is enormous.</p>

<pre><code>import java.util.*;
import java.io.*;

public class VectorWritingSize {
  public static void main(String[] args) throws IOException {
    test(new LinkedList&lt;String&gt;());
    test(new ArrayList&lt;String&gt;());
    test(new Vector&lt;String&gt;());
  }

  public static void test(List&lt;String&gt; list) throws IOException {
    insertJunk(list);
    for (int i = 0; i &lt; 10; i++) {
      list.add(""hello world"");
    }
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    ObjectOutputStream out = new ObjectOutputStream(baos);
    out.writeObject(list);
    out.close();
    System.out.println(list.getClass().getSimpleName() +
        "" used "" + baos.toByteArray().length + "" bytes"");
  }

  private static void insertJunk(List&lt;String&gt; list) {
    for(int i = 0; i&lt;1000 * 1000; i++) {
      list.add(""junk"");
    }
    list.clear();
  }
}
</code></pre>

<p>When we run this code, we get the following output: </p>

<pre><code>LinkedList used 107 bytes
ArrayList used 117 bytes
Vector used 1310926 bytes
</code></pre>

<p>Vector can use a staggering amount of bytes when being serialized. The lesson here? <strong>Don't ever use Vector as Lists in objects that are Serializable</strong>. The potential for disaster is too great.</p>
"
"3188255","<p>It's a bad habit and there's no reason to do it since the compile will generate the <code>Integer.valueOf()</code> for you.</p>
"
"3583862","<pre><code>public class Test {
    static int a=3; 
       static int b; 
    static void meth(int x) { 
       System.out.println(""x = "" + x); 
       System.out.println(""a = "" + a); 
       System.out.println(""b = "" + b); 
    } 

    static { 
      System.out.println(""Static block initialized.""); 
      b = a * 4; System.out.println(""a = "" + a); 
       System.out.println(""b = "" + b); 

    } 
    public static void main(String args[]) { 
      meth(42); 
     } 

}
</code></pre>

<p>output willl be--</p>

<pre><code>Static block initialized.
a = 3
b = 12
x = 42
a = 3
b = 12
</code></pre>
"
"5065184","<p><strong>EDITED:</strong>
Because contents is mixed:</p>

<pre><code>private void setSomething(final List someListOfObjects)
{
   for(Object n : someListOfObjects){
     if(n instanceof Double) {}
     else if(n instanceof Long) {}
     ...
   }
}
</code></pre>
"
"5068654","<p>You should use the Singleton pattern. You create a static instance of SomeObject and work with that instance.</p>

<pre><code>   private static class SingletonHolder { 
     public static final SomeObject INSTANCE = new SomeObject();
   }

   public static SomeObject getInstance() {
     return SingletonHolder.INSTANCE;
   }
</code></pre>

<p>But don't fall in the Singleton trap, limit calls to getInstance()!</p>
"
"4434731","<p>Try setting the domain """" to the properties of the imap store :</p>

<pre><code>properties.setProperty(""mail.imap.auth.ntlm.domain"","""");
</code></pre>

<p>Since in SMTP you are login using LOGIN, the use of the domain is not necessary. But in NTLM the domain is mandatory. </p>
"
"3629844","<p>You don't need array's. You can do that with recursion.<br>
Try this:</p>

<pre><code>public class TestFile {
    /**
     * @param args
     */
    public static void main(String[] args) throws Exception {
        TestFile f = new TestFile();
        f.print(100);
    }

    public void print(int x) {
        if (x &gt; 0) {
            System.out.println(x);
            x--;
            print(x);
        }
    }
}
</code></pre>
"
"5098673","<p>To assign a variable String value do the following:</p>

<pre><code>classification = new String(""whatever"");
</code></pre>
"
"2198983","<p>If you want to check what will do some method, you can use <a href=""http://beanshell.org/"" rel=""nofollow"">BeanShell</a>. It is a scripting language designed to be as close to Java as possible. Generally speaking it is interpreted Java with some relaxations. Another option of this kind is <a href=""http://groovy.codehaus.org/"" rel=""nofollow"">Groovy</a> language. Both these scripting languages provide convenient Read-Eval-Print loop know from interpreted languages. So you can run console and just type:</p>

<pre><code>""     content     "".trim();
</code></pre>

<p>You'll see <code>""content""</code> as a result after pressing <code>Enter</code> (or <code>Ctrl+R</code> in Groovy console).</p>
"
"4493074","<pre><code>ArrayList&lt;Integer&gt; a = new ArrayList&lt;Number&gt;(); 
</code></pre>

<p>Does not work because the fact that Number is a super class of Integer does not mean that <code>List&lt;Number&gt;</code> is a super class of <code>List&lt;Integer&gt;</code>. Generics are removed during compilation and do not exist on runtime, so parent-child relationship of collections cannot be be implemented: the information about element type is simply removed. </p>

<pre><code>ArrayList&lt;? extends Object&gt; a1 = new ArrayList&lt;Object&gt;();
a1.add(3);
</code></pre>

<p>I cannot explain why it does not work. It is really strange but it is a fact. Really syntax <code>&lt;? extends Object&gt;</code> is mostly used for return values of methods. Even in this example <code>Object o = a1.get(0)</code> is valid.</p>

<pre><code>ArrayList&lt;?&gt; a = new ArrayList&lt;?&gt;()
</code></pre>

<p>This does not work because you cannot instantiate list of unknown type...</p>
"
"5131164","<p>If your alphabet is 26 characters then your words correspond to numbers from 1 through 26^6 - 1. So one approach is:</p>

<pre><code>int val = 1 + new java.util.Random().nextInt(308915774); // [0 to 26^6 - 1)
String word = Integer.toString(val, 26).toUpperCase(); // from [0-9,A-P]
word = word.replace('0', 'Q');
// etc for '1', through '9', where '9' -&gt; Z
</code></pre>

<p>If you want to include 0-9 (36-character alphabet), then this trick isn't going to work because <code>36^6 - 1 &gt; Integer.MAX_VALUE</code>. I suggest then that you use <code>Random.nextInt()</code> to decide how many characters are going to be in your word and then generate exactly that many by using <code>Random.nextInt()</code> to generate random indices into your alphabet array.</p>
"
"3334291","<p>Try cloning your object before putting it into the ArrayList:</p>

<pre><code>ftsedata.add(data1.clone());
</code></pre>
"
"5132156","<p>There are also another way to get the count from DB.</p>

<p>Note :
This column gets updated when DBA'S do realtime statistics</p>

<pre><code>select num_rows from all_Tables where table_name ='&lt;TABLE_NAME&gt;';
</code></pre>
"
"4553312","<p>Use <code>String.valueOf(floatNumber)</code><br />
Suggest use double instead of float</p>
"
"3396561","<p>You could check for the whitespace like this:</p>

<pre><code>if (character.equals(' ')){ // }
</code></pre>
"
"3777649","<p>Assuming that you only have a finite set of seperators before the words in your string (eg ;, : etc) you can use the following technique. (apologies for any syntax errors, but its been a while since I used Java)</p>

<pre><code>String toSplit = "":alpha;beta:gamma;delta ""
toSplit = toSplit.replace("":"", ""~:"")
toSplit = toSplit.replace("";"", ""~;"")
//repeat for all you possible seperators
String[] splitStrings = toSplit.split(""~"")
</code></pre>
"
"2292985","<p>Someone might well come up with a more elegant solution than this, but here we go:</p>

<pre><code>boolean isFirstLine = true;
do{
      String line = in.readLine();
      if(isFirstLine){
         //this is the first line
         isFirstLine = false; 
      }
      else if(line==null){ //previous line was the last line
         in.reset();
         line = in.readLine();
         //do last line specific stuff
         break;
      }
      else {
          //do stuff for lines in between
      }
      in.mark(100);

}while (line!=null);
</code></pre>

<p>I haven't tested this, so there might be minor errors. I haven't sorted out exception handling in this code. <code>readLine()</code>, <code>mark()</code> and <code>reset()</code> throw <code>IOException</code> and <code>mark()</code> can also throw <code>IllegalArgumentException</code></p>
"
"2314147","<p>As per you comments. </p>

<p>Call <code>start</code> not <code>run</code> as mmyers points, using the former is the correct. </p>

<p>So it should be:</p>

<pre><code>Thread t = new Thread( this.table ); // or new Thread( this )

t.start(); // call start on the read 
</code></pre>

<p>and not </p>

<pre><code>this.table.run();
</code></pre>

<p>or </p>

<pre><code>t.run();
</code></pre>
"
"5205354","<p>I'll say something like <code>([\w]+\.)*[\w]+</code></p>

<p>But maybe I can be more specific knowing what you want to do with it ;)</p>
"
"2346842","<p>By inheriting you are actually creating common type for several classes  . Here you have a common animal type . you are using it by creating an array in type of Animal and keeping values of similar types(inherited types dog, cat ,etc..).</p>

<p>Eg:</p>

<pre><code> dim animalobj as new List(Animal)
  animalobj(0)=new dog()
   animalobj(1)=new Cat()
</code></pre>

<p>.......</p>

<p>Got it?</p>
"
"3869272","<p>If you don't pass any argument then even in that case args gets initialized but without any item/element.
Try the following one, you will get the <strong>same effect</strong>:</p>

<pre><code> 
public static void main(String[] args) throws InterruptedException {
        String [] dummy= new String [] {};
        if(dummy[0] == null)
        {
            System.out.println(""Proper Usage is: java program filename"");
            System.exit(0);
        }

    }
</code>
</pre>
"
"3515656","<p>Your question is too vague without sample code. There is no <code>finally</code> in C++. </p>

<p><strong>EDIT</strong>  In general, you don't want to use <code>exceptions</code> as a means to control the flow. <code>Exceptions</code> are supposed to be used only for exceptional (unexpected situations) cases.</p>
"
"4672972","<p>To do this, you need an ActionListener for each of the menu items. Then have each listener pass the instance of the JFrame you want to a method that controls where you want to position the window and show it.</p>

<pre><code>//Make menu items
JMenuItem font = new JMenuItem();
font.addActionListener(new ActionListener() {
  showWindow(new FontFrame());
});
JMenuItem admin = new JMenuItem();
admin.addActionListener(new ActionListener() {
  showWindow(new AdminFrame());
});
...
//define frame handling method
void showWindow(JFrame f) {
  ...
  f.setVistible(true);
}
</code></pre>
"
"5225357","<p>You could just put all the numbers you want in a List and then order the List randomly and then convert the randomly ordered list to an array, e.g.</p>

<pre><code>List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();

for (int i = 1; i &lt;= 12; i++) {
    list.add(i);
}

Collections.sort(list, new Comparator&lt;Integer&gt;() {

    @Override
    public int compare(Integer o1, Integer o2) {
          return Math.random() &gt; 0.5 ? 1 : -1;
    }
);
Integer[] array = list.toArray(new Integer[list.size()]);
</code></pre>
"
"2377510","<p>You can use <a href=""http://commons.apache.org/lang/api-release/org/apache/commons/lang/text/StrTokenizer.html"" rel=""nofollow"">Strtokenizer</a> from Commons Lang and specify multiple delimiters to split on:</p>

<p>There are a number of built in types that is supports via <a href=""http://commons.apache.org/lang/api-release/org/apache/commons/lang/text/StrMatcher.html"" rel=""nofollow"">StrMatcher</a>.</p>

<pre><code>StrTokenizer(char[] input, StrMatcher delim) 
</code></pre>

<p>e.g. </p>

<pre><code>StrMatcher delims = StrMatcher.charSetMatcher(new char[] {' ', ',', '\n'});
StrTokenizer str = new StrTokenizer(match.toString(), delims);
while (str.hasNext()) {
    System.out.println(""Token:["" + str.nextToken() + ""]"");
}
</code></pre>

<p>will give (from the example above):</p>

<pre><code>Token:[3/3/2010]
Token:[11:00:46]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:04:04]
Token:[AM]
Token:[2]
Token:[YaserAlNaqeb]
Token:[BASEMENT-OUT]
Token:[3/3/2010]
Token:[11:04:06]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:04:18]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:14:32]
Token:[AM]
Token:[4]
Token:[Dhileep]
Token:[BASEMENT-OUT]
Token:[3/3/2010]
Token:[11:14:34]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:14:41]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:15:33]
Token:[AM]
Token:[4]
Token:[Dhileep]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:15:42]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:15:42]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:30:22]
Token:[AM]
Token:[34]
Token:[KumarRaju]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:31:28]
Token:[AM]
Token:[39]
Token:[Eldrin]
Token:[BASEMENT-OUT]
Token:[3/3/2010]
Token:[11:31:31]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:31:39]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:32:38]
Token:[AM]
Token:[39]
Token:[Eldrin]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:32:47]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:32:47]
Token:[AM]
Token:[BASEMENT-IN]
Token:[3/3/2010]
Token:[11:33:26]
Token:[AM]
Token:[34]
Token:[KumarRaju]
Token:[BASEMENT-OUT]
Token:[3/3/2010]
Token:[11:33:28]
Token:[AM]
Token:[BASEMENT-IN]
</code></pre>
"
"3559435","<p>my solution:</p>

<ol>
<li>put the Sun's tools.jar to the <code>$JAVA_HOME/lib</code></li>
<li>make a symlink in the <code>$JAVA_HOME/..</code> named lib where target will be <code>$JAVA_HOME/lib</code></li>
</ol>
"
"5243517","<p>If regex is <code>_.*(\s|\n)</code> using Java, you'll have to write the same as <code>_.*(\\s|\\n)</code></p>

<p><strong>Update</strong>:</p>

<p>Resulting groups are those parts of the regex within brackets. So currently get only the last space or line break.</p>

<p>Try with this regex:</p>

<p><code>(_.*\\s+)</code></p>
"
"2397815","<p>c[k]=c[k] (mod M) with |c[k]|&lt;=M/2</p>

<pre><code>if(Math.abs(c[k]) &lt;= M/2){
  c[k] %= M;
}
</code></pre>

<p>The ""With"" comes from mathematics, and means ""If the condition is true, then do so""</p>

<p>You've tagged this ""java"", so I used the Java math library.</p>
"
"2398070","<p>If you want to use <code>class A</code> from <code>class B</code>, and <code>class B</code> is <strong>not</strong> in the same <em>package</em> with <code>class A</code>, you <strong>must</strong> import <code>class B</code>, even if the <code>class B</code> is <code>public</code>.</p>

<p>If public classes didn't need to be imported, there could be no way of declaring two classes with the same name.</p>
"
"2398542","<p>You do not need to import a path or a class to make it visible.</p>

<p>To make classes or paths visible, you have to specify at classpath declaration during compilation or execution.</p>

<p>""import"" directive (""using"" directive in C#) merely helps us to be lazy.</p>

<p>If you have classes</p>

<pre><code>why.does.the.sun.go.on.Shining.java,
rather.be.ahammer.thana.Nail.java,
</code></pre>

<p>you could always refer them with their full paths without importing them:</p>

<pre><code>public java.util.Hashtable&lt;rather.be.ahammer.thana.Nail&gt; bornFree(
 java.lang.String shiningKey,
 why.does.the.sun.go.on.Shining shiningPath){

 rather.be.ahammer.thana.Nail nailed =
   new rather.be.ahammer.thana.Nail(shiningPath);

 java.util.Hashtable&lt;rather.be.ahammer.thana.Nail&gt; nailedHash =
   new java.util.Hashtable&lt;rather.be.ahammer.thana.Nail&gt;();
 nailedHash.put(shiningKey, nailed);

 return nailedHash;
}
</code></pre>

<p>However, laziness being the virtue of creativity, I would rather do</p>

<pre><code>import java.util.Hashtable;
import why.does.the.sun.go.on.Shining.java;
import rather.be.ahammer.thana.Nail.java;

public Hashtable&lt;Nail&gt; bornFree(
 String shiningKey,
 Shining shiningPath){

 Nail nailed =
   new Nail(shiningPath);

 HashTable&lt;Nail&gt; nailedHash =
   new Hashtable&lt;Nail&gt;();
 nailedHash.put(shiningKey, nailed);

 return nailedHash;
}
</code></pre>

<p>Which, you probably have already realised.</p>

<h1>1 - The question would then be,</h1>

<p>if there are two classes of the same name but different namespace, which would be used by the compiler?</p>

<pre><code>import java.util.Date;
import java.sql.Date;
</code></pre>

<p>The compiler would complain with error message - <em>conflicting classes for Date</em><br>
and you would not be able to compile successfully.</p>

<p>So you have to import one of them and use the other with its full path.</p>

<p>In C# we could import</p>

<pre><code>using Dayhawk = hello.day.Hawk;
using Nitehawk = hello.nite.Hawk;
</code></pre>

<p>So that we could do,</p>

<pre><code>DayHawk dhawk = new DayHawk(new NiteHawk());
</code></pre>

<p>However, either as always, the java authoritarians are either to shy/proud to allow themselves to allow java immitate Microsoft or that Microsoft has a patent on such form of import.</p>

<h1>2 - The second question would be,</h1>

<p>if we had a class</p>

<pre><code>atlantic.salmon.are.trouts.String.java
</code></pre>

<p>Then you did an import</p>

<pre><code>import atlantic.salmon.are.trouts.String;
</code></pre>

<p>And when you declare</p>

<pre><code>String salmon = new String();
</code></pre>

<p>which String would be used? java.lang.String or atlantic.salmon.are.trouts.String?</p>

<p>The compiler would pick and obey the import statement and use atlantic.salmon.are.trouts.String.</p>

<h1>3 - the third issue,</h1>

<p>private, protected, public visibility modifiers and default visibility are not to be confused with the import directive at all. Nothing to do except being in the same language.</p>

<ul>
<li>private references are visible only
within the same file.</li>
<li>protected references are visible only
within the same namespace packages or
by an extension class.</li>
<li>public references are visible to all.</li>
<li>Undeclared, i.e. default, references
are visible only within the same
namespace packages.</li>
</ul>

<p>Import directive does not change these behaviours at all.</p>

<h1>In conclusion,</h1>

<ul>
<li>The import directive is merely for
the continuance of the virtue of
laziness.</li>
<li>The import directive is not for the
purpose of making classes visible or
changing the visibility of their
contents.</li>
<li>The classpath argument is for making
classes visible to the whole project.</li>
<li>Noting else can change the behaviour
of visibility modifiers in a Java
compilation.</li>
</ul>
"
"4731649","<p>Use of whitespace in RE is a pain, but I believe they work. The OP's problem can also be solved using StringTokenizer or the split() method. However, to use RE (uncomment the println() to view how the matcher is breaking up the String), here is a sample code:</p>

<pre><code>import java.util.regex.*;

public class Two21WS {
    private String  str = """";
    private Pattern pattern = Pattern.compile (""\\s{2,}"");  // multiple spaces

    public Two21WS (String s) {
            StringBuffer sb = new StringBuffer();
            Matcher matcher = pattern.matcher (s);
            int startNext = 0;
            while (matcher.find (startNext)) {
                    if (startNext == 0)
                            sb.append (s.substring (0, matcher.start()));
                    else
                            sb.append (s.substring (startNext, matcher.start()));
                    sb.append ("" "");
                    startNext = matcher.end();
                    //System.out.println (""Start, end = "" + matcher.start()+"", ""+matcher.end() +
                    //                      "", sb: \"""" + sb.toString() + ""\"""");
            }
            sb.append (s.substring (startNext));
            str = sb.toString();
    }

    public String toString () {
            return str;
    }

    public static void main (String[] args) {
            String tester = "" a    b      cdef     gh  ij   kl"";
            System.out.println (""Initial: \"""" + tester + ""\"""");
            System.out.println (""Two21WS: \"""" + new Two21WS(tester) + ""\"""");
}}
</code></pre>

<p>It produces the following (compile with javac and run at the command prompt):</p>

<p>% java Two21WS
Initial: "" a    b      cdef     gh  ij   kl""
Two21WS: "" a b cdef gh ij kl""</p>
"
"5265340","<p>Try this</p>

<pre><code>&lt;c:forEach var=""entry"" items=""${mapOnValueStack}""&gt;
    Name:  ${entry.key} &lt;br/&gt;
    Value: ${entry.value}
&lt;/c:forEach&gt;
</code></pre>

<p>Hope it will work.</p>
"
"5275572","<p>How about something like this:</p>

<pre><code>import java.util.regex.*;

class Test {
    public static void main(String args[]) {
        for (String tel : new String[]{
            ""Tel: (011) 1234-1234 blah blah blah"",
            ""Tel: (011) 123-1 blah blah blah""
        }) {
            System.err.println(tel + "" "" + (test(tel) ?
                ""matches"" : ""doesn't match""));
        }
    }

    public static boolean test(String tel) {
        return Pattern.compile(""^(\\D*(\\d+?)\\D*){8,}$"").matcher(tel).matches();
    }
}
</code></pre>

<p>will produce:</p>

<pre><code>Tel: (011) 1234-1234 blah blah blah matches
Tel: (011) 123-1 blah blah blah doesn't match
</code></pre>
"
"5317578","<p>Preceed the line with:</p>

<pre><code>@SuppressWarnings(""unchecked"")
</code></pre>

<p>This will turn off the compiler warning.</p>
"
"5317644","<p>Is the return type of <code>getSpecialCharMap()</code> non-generic HashMap? Unchecked conversion warning typically happens because of <a href=""http://download.oracle.com/javase/tutorial/java/generics/erasure.html"" rel=""nofollow"">Type Erasure in Generics</a>. In order to get around this, you need to annonate the method with <code>@SuppressWarnings(""unchecked"")</code> or change the return type of <code>getSpecialCharMap()</code> to <code>HashMap&lt;String, String&gt;</code>.</p>
"
"3664037","<pre><code>public class ListTree&lt;String&gt; {
</code></pre>

<p>That was the answer. </p>

<p>To clarify, I removed the generic type specifier. That was causing the problem. The code now looks like:</p>

<pre><code>public class ListTree {
</code></pre>
"
"4013129","<p>String d = ""11""</p>

<pre><code>if (d.length() &lt;= 2 &amp;&amp; d.length() &gt;=1) {
try {
 Integer i = Integer.valueOf(d);
   return i &lt;= 99 &amp;&amp; i &gt;= 0
 }
catch (NumberFormatException e)
{
 return false;
}
}
</code></pre>
"
"4762435","<p>One thing you can do is use a Debug flag to change this as you like:</p>

<pre><code>public String toString(boolean debug) {
    if (debug) return debugStringVersion;
    else return humanVersion;
}

public String toString() {
    return toString(Util.DEBUG);
}
</code></pre>

<p>Of course this assumes that you have a utility class suet up with a debug flag in it.</p>
"
"4022069","<p>thank you all for your reply.
In fact I missed a little detail in my question, I wanted to run Quartz Job just after loading the application context..
I tried the solution stakfeman, but I had some problems running the Quartz Jobs.
Finally I found that solution: Use Quartz within Spring ,here is the code:</p>

<pre><code>&lt;!--
        ===========================Quartz configuration====================
    --&gt;
    &lt;bean id=""jobDetail""
        class=""org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean""&gt;
        &lt;property name=""targetObject"" ref=""processLauncher"" /&gt;
        &lt;property name=""targetMethod"" value=""execute"" /&gt;
    &lt;/bean&gt;

    &lt;bean id=""simpleTrigger"" class=""org.springframework.scheduling.quartz.SimpleTriggerBean""&gt;
        &lt;!-- see the example of method invoking job above --&gt;
        &lt;property name=""jobDetail"" ref=""jobDetail"" /&gt;
        &lt;!-- 10 seconds --&gt;
        &lt;property name=""startDelay"" value=""10000"" /&gt;
        &lt;!-- repeat every 50 seconds --&gt;
        &lt;property name=""repeatInterval"" value=""50000"" /&gt;
    &lt;/bean&gt;

    &lt;bean class=""org.springframework.scheduling.quartz.SchedulerFactoryBean""&gt;
        &lt;property name=""triggers""&gt;
            &lt;list&gt;
                &lt;ref bean=""simpleTrigger"" /&gt;
            &lt;/list&gt;
        &lt;/property&gt;
    &lt;/bean&gt;
</code></pre>

<p>thank you again for the help and I apologize if the question was not very clear ':(</p>
"
"2456376","<p>The singleton thing is mostly a red herring. Nothing to do with concurrency issues you are considering. As far as synchronisation goes, I think you are ok. Making the method synchronized will also work despite the fact that <code>myObjects</code> is static <strong>because</strong> it is a singleton. </p>
"
"5358863","<p>The keyword <code>final</code> in you <code>List&lt;card&gt;</code> definition is for object that will have an starting value that cannot be changed.</p>

<p>Check it <a href=""http://en.wikipedia.org/wiki/Final_%28Java%29"" rel=""nofollow"">here</a></p>
"
"4816382","<p>What is the background for this requirement?</p>

<p>If the range of x, y values is unlimited, then there is no way to do this in a unique way (so that you can always reverse the process).</p>

<p>If the range of the numbers is limited, then you could do the following: Suppose that x and y are <code>int</code> values both in the range 0 to 99. Then you calculate the result by: <code>z = 100 * x + y</code>. The reverse would be: <code>x = z / 100</code> and <code>y = z % 100</code>.</p>
"
"4031525","<p>You can try <code>allowCoreThreadTimeOut(true);</code></p>
"
"3688595","<p>You can also use the binary form of negation as shown here.</p>

<pre><code>if ((v == true) &amp;&amp; !(v = false)) {
    v != true;   /* negate with true if true. */
} else {
    v =! false;  /* negate with false if false. */
}
</code></pre>
"
"2491995","<pre><code>a.replace(""Yeahh"", ""Yehh"");
</code></pre>

<p>Is it just replacing the a in Yeah? or the first a in the string?</p>
"
"3693808","<p>Usually if want to ensure a size of the component in Swing you need to call <code>setMinimumSize()</code>, <code>setMaximumSize()</code>, and <code>SetPrefferedSize()</code> with the same value.</p>
"
"5378198","<p>If you are dealing with an error condition which is actually a part of the business logic, it is OK to use Exceptions. For example:</p>

<pre><code>try{
   // register new user
   if(getUser(name) != null)
      throw new MyAppException(""Such user already exists"");
   //other registration steps......
}catch(MyAppException ex){
   sendMessage(ex.getMessage());
}
</code></pre>
"
"2537730","<blockquote>
  <p>What I want is that, someFunction() be
  called once every 10 seconds.</p>
</blockquote>

<p>Then why do you call <code>Thread.sleep()</code> with 1000 as parameter? That's in milliseconds, so you're explicitly saying ""wait 1 second"".</p>
"
"2543521","<p>This is one way to sorting.</p>

<pre><code>package com.java;


import java.util.ArrayList;

import java.util.Collections;


public class b{

public static void main(String[] args) {
//create an ArrayList object

ArrayList arrayList = new ArrayList();


//Add elements to Arraylist

arrayList.add(""9"");
arrayList.add(""3"");
arrayList.add(""5"");
arrayList.add(""2"");
arrayList.add(""4"");

Collections.sort(arrayList);


//display elements of ArrayList

System.out.println(""ArrayList elements after sorting in ascending order : "");

for(int i=0; i&lt;arrayList.size(); i++)

System.out.println(arrayList.get(i));



}

}
</code></pre>
"
"3770516","<p>A really simple solution would be to use Base64 encoding, see example below:</p>

<pre><code>import sun.misc.BASE64Decoder;
import sun.misc.BASE64Encoder;

private String encode(String str) {
    BASE64Encoder encoder = new BASE64Encoder();
    str = new String(encoder.encodeBuffer(str.getBytes()));
    return str;
}

private String decode(String str) {
    BASE64Decoder decoder = new BASE64Decoder();
    try {
        str = new String(decoder.decodeBuffer(str));
    } catch (IOException e) {
        e.printStackTrace();
    }       
    return str;
}
</code></pre>
"
"4125796","<pre><code>Cat cat;

for (cat : myCats) {
  feedDryFood(cat);
}

alsoFeedTuna(cat);
</code></pre>
"
"5849952","<p><code>setPreferredSize</code> will not change the size of the button until dimension is set by using Dimension.</p>

<p>Example:-</p>

<p><code>Dimension dim = new Dimension(20,20), then use setPerferredSize(dim).</code></p>
"
"4130466","<pre><code> system(""seq 1 100"");
</code></pre>

<p>in  C will give the desired result. Find the equivalent Java call to run a shell command.</p>
"
"4134516","<p>You could use a switch statement</p>

<pre><code>StringBuffer buffer = null;
switch (category) {
    case ""game"": buffer = gameList;
    case ""apps"": buffer = appsList;
    case ""movie"": buffer = movieList;
    default: return;
}
</code></pre>
"
"2559825","<p>RegEx should work, something like <code>([A-Z]{1})</code>. This will capture all Capital Letters, after that you could replace them with <code>\1</code> or how ever you can refer to RegEx Groups in Java.</p>
"
"6043581","<p>In Java there is no Access Specifiers. In Java sun Microsoft give Modifiers.</p>

<p>According to Sun Microsoft there are lot of Modifiers are there</p>

<ul>
<li><code>private</code></li>
<li><code>protected</code></li>
<li><code>public</code></li>
<li><code>static</code></li>
<li><code>final</code></li>
<li><code>abstract</code></li>
<li><code>synchronized</code></li>
<li><code>transient</code></li>
<li><code>volatile</code></li>
<li><code>strictfp</code></li>
<li>etc</li>
</ul>

<p>Some people are believe <code>private</code>, <code>public</code>, <code>protected</code> are Access specifiers. But According to Sun Microsoft there are called Modifiers. </p>
"
"6082778","<p>I did it like this in my Jtable its autorefreshing after 300 ms;</p>

<pre><code>DefaultTableModel tableModel = new DefaultTableModel(){
public boolean isCellEditable(int nRow, int nCol) {
                return false;
            }
};
JTable table = new JTable();

Timer t = new Timer(300, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                addColumns();
                remakeData(set);
                table.setModel(model);
            }
        });
        t.start();

private void addColumns() {
        model.setColumnCount(0);
        model.addColumn(""NAME"");
            model.addColumn(""EMAIL"");} 

 private void remakeData(CollectionType&lt; Objects &gt; name) {
    model.setRowCount(0);
    for (CollectionType Objects : name){
    String n = Object.getName();
    String e = Object.getEmail();
    model.insertRow(model.getRowCount(),new Object[] { n,e });
    }}
</code></pre>

<p>I doubt it will do good with large number of objects like over 500, only other way is to implement TableModelListener in your class, but i did not understand how to use it well. look at <a href=""http://download.oracle.com/javase/tutorial/uiswing/components/table.html#modelchange"" rel=""nofollow"">http://download.oracle.com/javase/tutorial/uiswing/components/table.html#modelchange</a></p>
"
"4920195","<p>so, what's the problem?</p>

<pre><code>String text = ""Dear [[user.firstname]] [[user.lastname]]"";
for (String key : data.keySet()) {
    String pattern = key.replace(""["", ""\\["").replace(""]"", ""\\"");
    text = text.replaceAll(pattern, data.get(key));
}
</code></pre>

<p>Be careful with . Probably you have to duplicate them, i.e. write \\ instead of \. Just debug your code a couple of minutes and the solution is ready.</p>
"
"2579706","<p>I don't think there is a out-of-the-box way to do it.</p>

<p>You could use an <strong>observer pattern</strong> that notifies the treeset whenever you change a value inside an element, then it removes and re-inserts it.</p>

<p>In this way you can implicitly keep the list sorted without caring of doing it by hand.. of course this approach will need to extend <code>TreeSet</code> by modifying the behaviour of insertion (setting the observed/notify mechanics on the just added item)</p>
"
"6213588","<p>I think it's because interfaces can't be instantiated, so all variables are declared as <code>static</code>.
Use of the <code>final</code> keyword means it doesn't have a body.             </p>
"
"4932857","<p>On MSWindows try:</p>

<pre><code>exec(""start java -jar c:\edu.uniroma3.jar c:\parameter2BPassed"");
</code></pre>
"
"2587523","<blockquote>
  <p>Is there any reason why Java could not
  do this automatically i.e. switch to
  BigInteger if an int was too small?</p>
</blockquote>

<p>This is one of the advantage of <strong>dynamic typing</strong>, but Java is <strong>statically typed</strong> and prevents this.</p>

<p>In a dynamically type language when two <code>Integer</code> which are summed together would produce an overflow, the system is free to return, say, a <code>Long</code>. Because dynamically typed language rely on duck typing, it's fine. The same can not happen in a statically typed language; it would break the type system. </p>

<p><strong>EDIT</strong></p>

<p>Given that my answer and comment was not clear, here I try to provide more details why I think that static typing is the <em>main</em> issue:</p>

<p>1) the very fact that we speak of primitive type <em>is</em> a static typing issue; we wouldn't care in a dynamically type language.</p>

<p>2) with primitive types, the result of the overflow can not be converted to another type than an <code>int</code> because it would not be correct w.r.t static typing</p>

<pre><code>   int i = Integer.MAX_VALUE + 1; // -2147483648
</code></pre>

<p>3) with reference types, it's the same except that we have autoboxing. Still, the addition could not return, say, a <code>BigInteger</code> because it would not match the static type sytem (A <code>BigInteger</code> can not be casted to <code>Integer</code>).</p>

<pre><code>  Integer j = new Integer( Integer.MAX_VALUE ) + 1; // -2147483648
</code></pre>

<p>4) what could be done is to subclass, say, <code>Number</code> and implement at type <code>UnboundedNumeric</code> that optimizes the representation internally (representation independence).</p>

<pre><code> UnboundedNum k = new UnboundedNum( Integer.MAX_VALUE ).add( 1 ); // 2147483648
</code></pre>

<p>Still, it's not really the answer to the original question.</p>

<p>5) with dynamic typing, something like </p>

<pre><code>var d = new Integer( Integer.MAX_VALUE ) + 1; // 2147483648
</code></pre>

<p>would return a <code>Long</code> which is ok.</p>
"
"6350401","<p>Quick way of renaming. But its not removing the "",""</p>

<pre><code>   private void convertFile(String fileold) {
                    int len = fileold.length();
                    int newlen = len - 4;
                    String Subvalue = fileold.substring(0, newlen);
                    String str2 = Subvalue + "".xls"";
                    File oldfile = new File(fileold);
                    File newfile = new File(str2);
                    oldfile.renameTo(newfile);
   }
</code></pre>
"
"4951336","<p>I think nanda was the correct answer.</p>

<pre><code>List&lt;T&gt; toRemove = new LinkedList&lt;T&gt;();
for (T t : masterList) {
  if (t.shouldRemove()) {
    toRemove.add(t);
  }
}

masterList.removeAll(toRemove);
</code></pre>
"
"3843126","<pre><code>Calendar calendar = new GregorianCalendar(TimeZone.getTimeZone(""America/Los_Angeles""), Locale.US);
calendar.setTimeInMillis(1245613885 * 1000);
int year = calendar.get(Calendar.YEAR);
int day = calendar.get(Calendar.DAY_OF_YEAR);
int hour = calendar.get(Calendar.HOUR_OF_DAY);
int minute = calendar.get(Calendar.MINUTE);
</code></pre>

<p>Change the <code>TimeZone</code> value you're passing into the <code>Calendar</code> object's constructor if you need a different time zone.</p>
"
"2630994","<p>Yes you can call a static method without the class name. For example, if you are calling it within another static method of the same class.</p>

<p>public class TestStatic{</p>

<pre><code>static void hello()
{
   System.out.println(""Hello World"");
}
static void hello2()
{
   hello();
   System.out.println(""Welcome to java"");
}
public static void main(String[] args)
{
   hello2();
}
</code></pre>

<p>}</p>
"
"4273108","<p>Assuming you are using ANT to build your WAR file. You need to do something like below to include jars under WEB-INF/lib in your WAR. Modify the directory structure as it fits your app directory structure.</p>

<pre><code>&lt;war warfile=""yourApp.war"" webxml=""WEB-INF/web.xml""&gt;
            &lt;fileset dir=""yourWarDir""&gt;
                &lt;include name=""**/*.jsp""/&gt;  
                &lt;include name=""**/include/**""/&gt;
            &lt;/fileset&gt;
            &lt;include name=""WEB-INF/lib/*""/&gt;
            &lt;include name=""WEB-INF/classes/**""/&gt;

&lt;/war&gt;
</code></pre>
"
"7014271","<p>checking the message count every 5 minutes works for me:</p>

<pre><code>new Thread()
{
    @Override
    public void run()
    {
        startTimer();
    }
    private void startTimer()
    {
        int seconds = 0;
        while (true)
        {
            try
            {
                Thread.sleep(300000);
                int c = folder.getMessageCount();    
            }
            catch (InterruptedException ex)
            {
            }
            catch (MessagingException me)
            {
            }
        }
    }
}.start();
</code></pre>
"
"2670483","<pre><code>  public int[] reverse3(int[] nums) {
  int[] values = new int[nums.length];
  for(int i=0; i&lt;nums.length; i++) {
   values[nums.length  - (i + 1)]=nums[i];
  }
  return values;
  }
</code></pre>
"
"2670521","<p>In your code, for each value of i, you are setting target array elements at i to value in ""nums"" at j. That is how you end up with same value for all the elements at the end of all iterations.
First of all, very bad logic to have two loops for a simple swap algorithm such as :</p>

<pre><code>public static void reverse(int[] b) {
   int left  = 0;          // index of leftmost element
   int right = b.length-1; // index of rightmost element

   while (left &lt; right) {
      // exchange the left and right elements
      int temp = b[left]; 
      b[left]  = b[right]; 
      b[right] = temp;

      // move the bounds toward the center
      left++;
      right--;
   }
}//endmethod reverse
</code></pre>

<p>or simplified:</p>

<pre><code>for (int left=0, int right=b.length-1; left&lt;right; left++, right--) {
    // exchange the first and last
    int temp = b[left]; b[left]  = b[right]; b[right] = temp;
}
</code></pre>

<p>Why go through all this pain, why dont you trust Java's built-in APIs and do something like</p>

<pre><code>public static Object[] reverse(Object[] array)
{
List&lt;Object&gt; list = Arrays.asList(array);
Collections.reverse(list);
return list.toArray();
}
</code></pre>
"
"4358579","<p>Have you looked at the Jersey <code><a href=""http://jersey.java.net/nonav/apidocs/1.4/jersey/com/sun/jersey/api/client/filter/ClientFilter.html"" rel=""nofollow"">ClientFilter</a></code> class ?</p>

<p>We are currently using this to intercept and perform API versioing etc.. There is built in logging filters - so you can look at the code for them to get an idea of what to write.</p>

<p>The signature is:</p>

<p><code>
public ClientResponse handle(final ClientRequest cr) throws ClientHandlerException...
</code></p>

<p>So you can start by doing stuff like: <br>
<code>
....<br>
cr.getHeaders()<br>
....<br>
return getNext().handle(cr);
</code></p>
"
"4363231","<p>just follow the singleton pattern class diagram,</p>

<p>SingletonClass
- singletonObject: SingletonClass
- SingletonClass()
+ getObject(): SingletonClass    </p>

<p>Key point, </p>

<ul>
<li>private your constructor</li>
<li>the instance of your class should be inside the class</li>
<li>provide the function to return your instance</li>
</ul>

<p>Some code,    </p>

<pre><code>public class SingletonClass {
    private static boolean hasObject = false;
    private static SingletonClass singletonObject = null;

    public static SingletonClass getObject() {
        if (hasObject) {
            return singletonObject;
        } else {
            hasObject = true;
            singletonObject = new SingletonClass();
            return singletonObject;
        }
    }

    private SingletonClass() {
        // Initialize your object.
    }
}
</code></pre>
"
"7763961","<p>if you have parent and client frame and you want to make child frame as model.</p>

<pre><code>&lt;YOUR_CHILD_FRAME_INSTANCE&gt;.setAlwaysOnTop(true);
</code></pre>

<p>And it will Do.</p>
"
"3953810","<p>You cannot put wait() and notify() in the same synchronized block because that will just cause a deadlock. Make sure only the wait and notify functions are wrapped with a synchronized block like this:</p>

<pre><code>synchronized (i) {
    i.wait(); // or i.notify();
}
</code></pre>
"
"4397748","<p>just create an enum xDD</p>

<blockquote>
<pre><code>public enum EnumName
{
  Foo(),Bar();
} 

switch (baz)
{
   case : EnumName.Foo
    code
    break;
}
</code></pre>
</blockquote>
"
"7939500","<p>There is @XmlSeeAlso annotation to tell to bind subclasses.</p>

<p>For example, with the following class definitions: </p>

<pre><code> class Animal {}
 class Dog extends Animal {}
 class Cat extends Animal {}
</code></pre>

<p>The user would be required to create JAXBContext as JAXBContext.newInstance(Dog.class,Cat.class) (Animal will be automatically picked up since Dog and Cat refers to it.) </p>

<p>XmlSeeAlso annotation would allow you to write: </p>

<pre><code> @XmlSeeAlso({Dog.class,Cat.class})
 class Animal {}
 class Dog extends Animal {}
 class Cat extends Animal {}
</code></pre>
"
"2735532","<p>For starters, I don't think Hibernate can map a <code>List&lt;String&gt;</code>. However, it can map a list of other entities.</p>

<p>So if your code was something like this:</p>

<pre><code>@Entity
public class Foobar {

    private List&lt;EntityObject&gt; uuids;
    ...
}
</code></pre>

<p>And the <code>EntityObject</code> has a <code>String</code>-property called <code>str</code>, the criteria could look like this:</p>

<pre><code>List&lt;Foobar&gt; returns = (List&lt;Foobar&gt;) session
                .createCriteria.(Foobar.class, ""foobars"")
                .createAlias(""foobars.uuids"", ""uuids"")
                  .add(Restrictions.like(""uuids.str"", ""%abc123%""))
                .list();
</code></pre>
"
"4406870","<p>Your code is correct. If <code>someMethod1()</code> method does not declare any other Exceptions, they are RuntimeExceptions and you are supposed to catch <code>RuntimeException</code>.</p>
"
"2742134","<p>There is a wrongly typed question
java -Xms128m -Xms256m myapp.jar  </p>

<p>this is supposed to be 
java -Xms128m <strong>-Xmx256m</strong> myapp.jar  </p>

<p>Then the following line explains your query</p>

<p>The heap size may be configured with the following VM options:</p>

<pre><code>* -Xmx&lt;size&gt; - to set the maximum Java heap size
* -Xms&lt;size&gt; - to set the initial Java heap size
</code></pre>

<p>Which settings will apply for JVM Minimum memory (Xms option) : 128m or 256m ?
256 Mb would be your maximum Memory 
128 Mb would be initial set Memory.</p>

<p>Along with this, if you want to determine programmatically you can use the following Sample code</p>

<pre><code> Runtime runtime = Runtime.getRuntime();

    NumberFormat format = NumberFormat.getInstance();

    StringBuilder sb = new StringBuilder();
    long maxMemory = runtime.maxMemory();
    long allocatedMemory = runtime.totalMemory();
    long freeMemory = runtime.freeMemory();
</code></pre>
"
"8078322","<p>I tried the following code</p>

<pre><code>    public class Spring3HelloWorldTest {
    public static void main(String[] args) {        
        DefaultListableBeanFactory  beanFactory = new DefaultListableBeanFactory ((BeanFactory) new ClassPathResource(""SpringHelloWorld.xml""));     
        Spring3HelloWorld myBean = (Spring3HelloWorld) beanFactory.getBean(""Spring3HelloWorldBean"");
        myBean.sayHello();
    }
}
</code></pre>

<p>and it works</p>
"
"4415839","<pre><code>if(hm.put(""John"",""1"") != null)
{
  // ""John"" was already a key in the map.  The sole value for this key is now ""1"".
}
</code></pre>
"
"4415873","<pre><code>List&lt;Object&gt; yourElements = new ... // 10000000
for(Object O : yourElements) {
 if(myMap.get(O.key)==null) {
    myMap.put(O.key,O);
 }
}
</code></pre>
"
"8581541","<p>Use <code>countDistinct</code> instead of <code>count</code>.</p>
"
"2768985","<p>I'm not aware of that sort of counterpart to <code>substring()</code>, but it's not really necessary. You can't efficiently find the last index with a given value using <code>indexOf()</code>, so <code>lastIndexOf()</code> is necessary. To get what you're trying to do with <code>lastSubstring()</code>, you can efficiently use <code>substring()</code>.</p>

<pre><code>String str = ""aaple"";
str.substring(str.length() - 2, str.length() - 1).equals(""e"");
</code></pre>

<p>So, there's not really any need for <code>lastSubstring()</code>.</p>
"
"2768999","<pre><code>public string LastSubString(this string str) {
    return str.Reverse().Substring(0,1);
}
</code></pre>
"
"4448934","<p>It's faster to create a method for this rather than using regular expression</p>

<pre><code>/**
 * This method takes String as parameter
 * and checks if it is null or empty.
 * 
 * @param value - The value that will get checked. 
 * Returns the value of """".equals(value). 
 * This is also trimmed, so that ""     "" returns true
 * @return - true if object is null or empty
 */
public static boolean empty(String value) {
    if(value == null)
        return true;

    return """".equals(value.trim());
}
</code></pre>
"
"4024190","<p>The results of the calculation are defined by the <a href=""http://download.oracle.com/javase/tutorial/java/nutsandbolts/operators.html"" rel=""nofollow"">Operator Order of Precedence</a>. So parentheses have highest precedence here, multiplication and division next highest, and addition and subtraction lowest. Operators with equal precedence are evaluated left to right. So the expression in the question is equivalent to:</p>

<pre><code>    a + (b  * c) / ( d - e ))
</code></pre>

<p>However there is a slight difference between what is normally meant by ""being evaluated first"" and the operator precedence for getting the correct answer. </p>

<p>""d-e"" is not necessarily actually calculated before ""a"" is calculated. This pretty much doesn't make any difference unless one of the 'variables' in the expression is actually a function. <a href=""http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#4779"" rel=""nofollow"">The Java standard does not specify the order of evaluation of components of an expression.</a></p>
"
"9195086","<p>When user try to enter non-numeric data, it rejects an deletes the input that is not an integer.</p>

<pre><code>public class NumericTextField extends JTextField implements KeyListener{

    private int value;

    public NumericTextField(int value) {
        super(value+ """");
        this.addKeyListener(this);
    }
    public NumericTextField() {
        super();
        this.addKeyListener(this);
    }
    public Object getValue() {
        return value;
    }

    public void setText(int value) {
        super.setText(value + """");
        this.value = value;
    }

    @Override
    public void keyPressed(KeyEvent evt) {
    }
    @Override
    public void keyReleased(KeyEvent arg0) {
        isValidChar(arg0.getKeyChar());
    }
    @Override
    public void keyTyped(KeyEvent arg0) {
    }

     //it is not good solution but acceptable
    private void isValidChar(char ch){
        if(this.getText().length() == 1 &amp;&amp; this.getText().equals(""-"") ){
            this.setText(""-"");
        }
        else {
            if(!isNumeric(Character.toString(ch))){
                try{
                    this.setText(removeNonnumericChar(this.getText(), ch));
                }catch(Exception e){
                }
            }
        }
    }

    private boolean isNumeric(String text) {
        try {
            Integer.parseInt(text);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
    //remove nonnumeric character
    private String removeNonnumericChar(String text, char ch){
        StringBuilder sBuilder = new StringBuilder();
        for (int i = 0; i &lt; text.length(); i++) {
            if(text.charAt(i) != ch){
                sBuilder.append(text.charAt(i));
            }
        }
        return sBuilder.toString();
    }
}
</code></pre>

<p>And this is the test class</p>

<pre><code>public class NumericTextFieldTest extends JFrame {

    private JPanel contentPane;

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    NumericTextFieldTest frame = new NumericTextFieldTest();
                    frame.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }
    public NumericTextFieldTest() {
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 200, 150);
        contentPane = new JPanel();
        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
        setContentPane(contentPane);
        contentPane.setLayout(null);

        NumericTextField numericText = new NumericTextField();
        numericText.setBounds(25, 27, 158, 19);
        contentPane.add(numericText);
        numericText.setColumns(10);

        JLabel lblNumericTextfield = new JLabel(""Numeric textField"");
        lblNumericTextfield.setBounds(37, 12, 123, 15);
        contentPane.add(lblNumericTextfield);

    }
}
</code></pre>
"
"5087696","<p>Try</p>

<pre><code>double one = 0.0;
double two = 0.0;
 try {
   one = Double.parseDouble(field1.getText());
 }
 catch(Exception ex) {
    field1.setText(""0"");
 }

 try {
    two = Double.parseDouble(field2.getText());
 }
 catch(Exception ex) {
   field2.setText(""0"");
 }

numSum.setText("""" + (one + two));
</code></pre>
"
"4024748","<pre><code>a + b * c / ( d - e )
      1         1
          2
  3
</code></pre>

<p>The whole point of operator precedence is to convert the expression into a syntax tree. Here the <code>*</code> and <code>-</code> are at the same level of the tree. Which one is evaluated first is irrelevant for the result <strike>and not warrantied</strike>.</p>

<p><strong>Edit</strong>: Sorry, I got confused by my C background. As others have pointed out, Java has an ""Evaluate Left-Hand Operand First"" rule. Applying this rule to <code>/</code> tells you that <code>*</code> is evaluated first (your first answer).</p>
"
"2780103","<p>JSONObject typically uses <code>HashMap</code> internally to store the data. So, you can use it as Map in your code. </p>

<p>Example,</p>

<pre><code>JSONObject obj = JSONObject.fromObject(strRepresentation);
Iterator i = obj.entrySet().iterator();
while (i.hasNext()) {
   Map.Entry e = (Map.Entry)i.next();
   System.out.println(""Key: "" + e.getKey());
   System.out.println(""Value: "" + e.getValue());
}
</code></pre>
"
"4043131","<pre><code>List &lt;String&gt; list = ...
String[] array = new String[list.size()];
int i=0;
for(String s: list){
  array[i++] = s;
}
</code></pre>
"
"2802909","<p>It is totaly wrong to write Fibonacci with recursive methods!!</p>

<p>It is an old famous example for how a good/bad Algorythm affect any project</p>

<p>if you write Fibonatcci recursive, for calculating <code>120</code> you need 36 year toget the result!!!!!!</p>

<pre><code>public static int Fibonacci(int x)
{  // bad fibonacci recursive code
if (x &lt;= 1)
      return 1;
return Fibonacci(x - 1) + Fibonacci(x - 2);
}
</code></pre>

<p>in dot net 4.0 there is a new type name BigInteger and you can use it to make a better function</p>

<p>using System;
using System.Collections.Generic;
using System.Numerics; //needs a ref. to this assembly</p>

<pre><code>namespace Fibonaci
{
 public class CFibonacci
 {
   public static int Fibonacci(int x)
   {
       if (x &lt;= 1)
           return 1;
       return Fibonacci(x - 1) + Fibonacci(x - 2);
   }

   public static IEnumerable&lt;BigInteger&gt; BigFib(Int64 toNumber)
   {
       BigInteger previous = 0;
       BigInteger current = 1;

       for (Int64 y = 1; y &lt;= toNumber; y++)
       {
           var auxiliar = current;
           current += previous;
           previous = auxiliar;
           yield return current;
       }
   }
 }
}
</code></pre>

<p>and you can use it like</p>

<pre><code>using System;
using System.Linq;

namespace Fibonaci
{
 class Program
 {
   static void Main()
   {
       foreach (var i in CFibonacci.BigFib(10))
       {
           Console.WriteLine(""{0}"", i);
       }

       var num = 12000;
       var fib = CFibonacci.BigFib(num).Last();
       Console.WriteLine(""fib({0})={1}"", num, fib);

       Console.WriteLine(""Press a key..."");
       Console.ReadKey();
   }
 }
}
</code></pre>

<p>and in this case you can calculate <code>12000</code> less than a second. so </p>

<p><strong>Using Recursive methos is not always a good idea</strong></p>

<p>Above code imported from <a href=""http://vahidnasiri.blogspot.com/2010/04/4.html"" rel=""nofollow"">Vahid Nasiri blog whiche wrote in Persian</a></p>
"
"9645870","<p>The only way to make it works in ALL circumstances is the following setting:</p>

<pre><code>setBorder (BorderFactory.createLineBorder (new Color (0, 0, 0, 0), 2));
</code></pre>

<p>otherwise (when you have null background of the parent container) you will see the ""I"" cursor remaining forever at the left edge of your JTextField. (Simply make some tests for different border thickness and observe quite strange way the JTextField places the cursor when you activate it first time.)</p>

<p>Alternatively you can set:</p>

<pre><code>setBorder (BorderFactory.createLineBorder (getBackground (), 2));
</code></pre>

<p>but you will obtain the field opticaly larger by 2 pixels in all four directions. If you don't specify the border thickness, you will see the cursor BETWEEN this border and the field remaining forever.</p>
"
"2806144","<p>You could also use singleton design pattern:</p>

<pre><code>public interface SingletonFactoryFunctor {
   /**
    * @return An instance of the Singleton.
    */
   public Singleton makeInstance();
}
</code></pre>
"
"5108182","<p>You can use a comparator which comares the Character.toLowerCase() of each of the bytes in the array (Assuming the byte[] is in ASCII) if not you will need to do the character decoding yourself or use <code>new String(bytes, charSet).toLowerCase()</code> but this is not likely to be efficient.</p>
"
"5108372","<p>I'm assuming the problem is just with the ""byte vs. byte"" comparison.  Dealing with the arrays is straightforward, so I won't cover it.  With respect to byte vs. byte, my first thought is to do this:</p>

<pre><code>public class ByteComparator implements Comparator&lt;byte&gt; {
  public int compare(byte b1, byte b2) {
    return new Byte(b1).compareTo(b2);
  }
}
</code></pre>

<p>But that won't be lexicographic:  0xFF (the signed byte for -1) will be considered smaller than 0x00, when lexicographically it's bigger.  I think this should do the trick:</p>

<pre><code>public class ByteComparator implements Comparator&lt;byte&gt; {
  public int compare(byte b1, byte b2) {
    // convert to unsigned bytes (0 to 255) before comparing them.
    int i1 = b1 &lt; 0 ? 256 + b1 : b1;
    int i2 = b2 &lt; 0 ? 256 + b2 : b2;
    return i2 - i1;
  }
}
</code></pre>

<p>Probably there is something in Apache's commons-lang or commons-math libraries that does this, but I don't know it off hand.</p>
"
"9816914","<p>Just update your batch (.bat) file with a new line and type in that new line : <code>exit</code>.</p>
"
"4069801","<p>You're using a leading zero for decimal manipulation. Bad practise, because it can be interpreted as an octal number. You're also mentioning years. If you're trying to manipulate dates, then don't use ints. Use a library like <a href=""http://joda-time.sourceforge.net/"" rel=""nofollow"">Joda time</a>. I assume you need something like:</p>

<pre><code>String string = ""09asdasdas"";
String dateString = string.substring(0, 2);
DateTimeFormatter formatter = DateTimeFormat.forPattern(""YY"");
DateTime date = formatter.parseDateTime(dateString);  
System.out.println(date);
</code></pre>
"
"10103106","<p>With <code>System.getProperty(""user.dir"")</code> you get the <strong>""Base of non-absolute paths""</strong> look at</p>

<p><a href=""http://developer.android.com/reference/java/lang/System.html#getProperty%28java.lang.String%29"" rel=""nofollow"">Java Library Description</a></p>
"
"5119965","<p>This is what worked for me:</p>

<pre><code>var Date1 = new Date(dateObject1.toDateString()); //this sets time to 00:00:00
var Date2 = new Date(dateObject2.toDateString()); 
//do a normal compare
if(Date1 &gt; Date2){ //do something }
</code></pre>
"
"2825125","<pre><code>package newstract;

import java.io.File;
import java.util.Date;
import com.drew.imaging.jpeg.JpegMetadataReader;
import com.drew.metadata.Directory;
import com.drew.metadata.Metadata;
import com.drew.metadata.exif.ExifDirectory;
import java.text.SimpleDateFormat;
import com.drew.metadata.exif.GpsDirectory;

public class GetTagInfo {
    public static void main(String[] args) 
    {
        System.out.println(""Picture Tagged Details"");
        try{
        File jpegFile = new File(""DSC_0060.JPG""); 
        Metadata metadata = JpegMetadataReader.readMetadata(jpegFile);
        Directory exifDirectory = metadata.getDirectory(ExifDirectory.class);
        SimpleDateFormat sdf = new SimpleDateFormat(""MM/dd/yyyy hh:mm:ss"");
        Date myDate = exifDirectory.getDate(ExifDirectory.TAG_DATETIME); 
        System.out.println(sdf.format(myDate));  
        SimpleDateFormat sdf1 = new SimpleDateFormat(""MM/dd/yyyy"");
        Date myDate1 = exifDirectory.getDate(ExifDirectory.TAG_DATETIME); 
        System.out.println(sdf1.format(myDate1));  
        SimpleDateFormat sdf2 = new SimpleDateFormat(""hh:mm:ss"");
        Date myDate3 = exifDirectory.getDate(ExifDirectory.TAG_DATETIME); 
        System.out.println(sdf2.format(myDate3));  


        Directory gpsDirectory = metadata.getDirectory(GpsDirectory.class);
       // Boolean b = (gpsDirectory.containsTag(GpsDirectory.TAG_GPS_LATITUDE));
       // System.out.println(GpsDirectory.TAG_GPS_LATITUDE);+
        String s = gpsDirectory.getDescription(2);
        System.out.println(s);
        SplitString1 w = new SplitString1();
        w.doit(s);



        Iterator directories = metadata.getDirectoryIterator();
        while (directories.hasNext()) {
        GpsDescriptor directory = (GpsDescriptor) directories.next();
        System.out.print(directory.getGpsLatitudeDescription());
        }

        } // close of catch
        catch (Exception e) {
            System.err.println(e.getMessage());
            //System.err.println(tag.getDirectoryName() + "" "" + tag.getTagName() + "" (error)"");
        }

}

}

 class SplitString1 {

    public void doit(String lat) {

        String str = lat;
        String [] temp = null;
        String dtemp = null;
        //temp = str.split(""[\""]|\""[\']"");
        temp = str.split(""[\""]|[\']"" ); 
        dtemp = str.replace(""\"""", ""°"");
        System.out.println(""Formated DCM : ""+dtemp);
        dump(temp);


    }

    public void dump(String []s) {
        for (int i = 0 ; i &lt; s.length ; i++) {
            System.out.println(""\ndegree : ""+s[0]);
            System.out.println(""\nminutes : ""+s[1]);
            System.out.println(""\nsecond : ""+s[2]);

            String deg = s[0] ;
            int ndeg = Integer.parseInt(deg);
            String min = s[1] ;
            double nmin = Double.parseDouble(min);
            String sec = s[2] ;
            double nsec = Double.parseDouble(sec);
            double decimaldms = (ndeg+(nmin/60)+(nsec/3600));
            System.out.println(""\nfinaldecimal : ""+decimaldms);
        }
    }

    // Decimal degrees = whole number of degrees, plus minutes divided by 60, 
    //plus seconds divided by 3600
}
</code></pre>
"
"10356996","<pre><code>int number = 0;
try { 
   number = Integer.parseInt(string); 
}
catch(NumberFormatException e) {}
</code></pre>
"
"10373712","<pre><code>public class OccurenceOfWords {
 public static void main(String args[]){    
   String file = ""c:\\customer1.txt"";
   TreeMap &lt;String ,Integer&gt; index = new TreeMap();

    String []list = null;
      try(    FileReader fr = new FileReader(file);//using arm jdk 7.0 feature
                BufferedReader br = new BufferedReader(fr))
        {
            String line = br.readLine();
            while(line!= null){
                list = line.split(""[ \n\t\r:;',.(){}]"");
                for(int i = 0 ; i &lt; list.length;i++)
                {
                  String word = list[i].toLowerCase();  
                    if(word.length() != 0)
                    {
                        if(index.get(word)== null)
                        { index.put(word,1);
                         }
                        else    
                        {
                            int occur = index.get(word).intValue();
                            occur++;
                            index.put(word, occur);
                        }
                        line = br.readLine();
                    }  
                }
         }}
                         catch(Exception ex){
                       System.out.println(ex.getMessage());
                       }
                    for(String item : index.keySet()){
                        int repeats = index.get(item).intValue();
                       System.out.printf(""\n%10s\t%d"",item,repeats);
                 }   
             }               
  }
</code></pre>
"
"10465844","<p>This Solution for me, work's very good:</p>

<pre><code>try {           
                // Getting The Array ""Courses"" from json1 &amp; json2   
                Courses1 =json1.getJSONArray(TAG_COURSES1);
                Courses2 = json2.getJSONArray(TAG_COURSES);

                //LOOP FOR JSON1
                for(int i = 0; i &lt; Courses1.length(); i++){
                    //LOOP FOR JSON2
                    for(int ii = 0; ii &lt; Courses2.length(); ii++){
                        JSONObject courses1 = Courses1.getJSONObject(i);
                        JSONObject courses2 = Courses2.getJSONObject(ii);

                        // Storing each json1 item in variable
                        int courseID1 = courses1.getInt(TAG_COURSEID1);
                        Log.e(""COURSEID2:"", Integer.toString(courseID1));
                        String Rating1 = courses1.getString(TAG_RATING1);
                        int Status1 = courses1.getInt(TAG_STATUS1);
                        Log.e(""Status1:"", Integer.toString(Status1));      //Put the actual value for Status1 in log.             

                        // Storing each json2 item in variable
                        int courseID2 = courses2.getInt(TAG_COURSEID);
                        Log.e(""COURSEID2:"", Integer.toString(courseID));   //Put the actual value for CourseID in log
                        String Title2 = courses2.getString(TAG_TITLE);                      
                        String instructor2 = courses2.getString(TAG_INSTRUCTOR);
                        String length2 = courses2.getString(TAG_LENGTH);
                        String rating2 = courses2.getString(TAG_RATING);
                        String subject2 = courses2.getString(TAG_SUBJECT);
                        String description2 = courses2.getString(TAG_DESCRIPTION);

                        //Status1 = 5 from json1; Incomplete, Status1 =-1 Complete 
                        if(Status1 == 5 &amp;&amp; courseID2 == courseID1){                                  

                        // creating new HashMap
                        HashMap&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();         
                        //Storing the elements if condition is true.
                        map.put(TAG_COURSEID, Integer.toString(courseID2)); //pend for compare
                        map.put(TAG_TITLE, Title2);
                        map.put(TAG_INSTRUCTOR, instructor2);
                        map.put(TAG_LENGTH, length2);
                        map.put(TAG_RATING, rating2);
                        map.put(TAG_SUBJECT, subject2); //show it
                        map.put(TAG_DESCRIPTION, description2);

                        //adding HashList to ArrayList
                        contactList.add(map);
                        }//if
                    }//for2 (json2)
                } //for1 (json1)                
            }//Try
</code></pre>

<p>Hope this help others.</p>
"
"10472806","<p>I was able to send very long text like this!</p>

<p>Client:</p>

<pre><code>MultivaluedMap&lt;String,String&gt; formData = new MultivaluedMapImpl();
formData.add(""text"", text);

WebResource resource = Client.create().resource(getBaseURI()).path(""text2rdf"");
return resource.type(""application/x-www-form-urlencoded"").post(String.class, formData);
</code></pre>

<p>Server:</p>

<pre><code>@POST
@Produces(""text/whatever"")
public String textToRdf (
        @FormParam(""text"") String text) {...
</code></pre>
"
"2841047","<p>This is super common knowledge. This is not a problem.</p>

<ol>
<li><p>Use Google and search for special words ""java compile tutorial""</p></li>
<li><p>Java is created by Sun, so it's logical to check their tutorials and examples - they are good!</p></li>
<li><p>What is your environment setup? What have you tried and not succeeded? You haven't provided that info.</p></li>
<li><p>Use special tools IDE - good example is Eclipse and NetBeans. They will help you compile - special button.</p></li>
<li><p>command using console:</p>

<p><code>javac &lt;path-to-java-file&gt;</code>
If you need special help use <code>javac -help</code></p></li>
</ol>
"
"4566731","<p>The second one is more widely used. Neither is better.</p>

<p>It's the same idea as </p>

<pre><code>if (1 == x)
</code></pre>

<p><strike>but without a specific reason.</strike> but for a different reason. (Null pointer as noted by others).</p>
"
"4212420","<p>Simply way of checking is:</p>

<pre><code>int[] ar = new int[10];

if (ar.length &lt; 0) {
    System.out.println(""Not initialized "");
} else {
    System.out.println(""Initialized"");
}
</code></pre>
"
"5146143","<pre><code>SELECT fromUser, timeStamp, messageBody FROM messages ORDER BY timeStamp LIMIT 10
</code></pre>
"
"2847339","<p>it could be the <code>int pos</code> create/destroy thats causing the GC.</p>

<p>Try declaring it outside the for loop and just resetting it to -1 as the first line inside the for loop.</p>

<pre><code> public static String removeAccents(String s) { 
    if (s == null) 
        return null; 
    StringBuilder sb = new StringBuilder(); 
    int n = s.length(); 
    int pos = -1;
    for (int i = 0; i &lt; n; i++) { 
        pos = -1; //set it here just in case.
        char c = s.charAt(i); 
        pos = UNICODE.indexOf(c); 
        if (pos &gt; -1) { 
            sb.append(PLAIN_ASCII.charAt(pos)); 
        } else { 
            sb.append(c); 
        } 
    } 
    return sb.toString(); 
} 
</code></pre>

<p>Same goes for char c, create it outside the for loop and reset it inside it each time you need it.</p>
"
"10956330","<pre><code>yourMethod(int a){..} // example
//..................
boolean b = true;    //&lt;-  input
yourMethod(b?1:0);   //output -&gt; yourmethod(1)
</code></pre>
"
"10960078","<p>Yes you can. The jvm is smart enough to know which one to load as it looks at the method declaration that matches your main method and is logical. The parts of the main method declaration make perfect sense when you think like the 'jvm' and picture what the main method does (starts the application):</p>

<ul>
<li><code>public</code>, because this method must be accessible by the jvm (not written by you).</li>
<li><code>static</code>, implying this method can be accessed without having an object (because it's representation never changes), but here the logic is easily understood if you think like the jvm again; ""I don't have any objects to create (instantiate) objects, so I need a static method to start the application as there simply isn't any logical way to get an instance specific method up yet as I don't have anything up yet to create objects"".</li>
<li><code>void</code> This method can't logically return anything because there is nothing up yet to return anything to. It is the start point of the application.</li>
<li><code>main</code> I am the main method as without me you won't have an application.</li>
<li><code>String[] args</code> Send me data you may feel useful for my start up.</li>
</ul>
"
"11036803","<p>If you want to compare two Maps then, below code may help you</p>

<pre><code>(new TreeMap&lt;String, Object&gt;(map1).toString().hashCode()) == new TreeMap&lt;String, Object&gt;(map2).toString().hashCode()
</code></pre>
"
"5158347","<p>The usual way of accomplishing this in a high-level API is either let the user provide an <code>OutputStream</code> and fill it with your data (which can be a ByteArrayOutputStream or something completely different), or have an <code>InputStream</code> as return value, that the user can read to get the data (which will dynamically load the correct parts from the file and stop when finished).</p>
"
"5165170","<p>Does this help?</p>

<pre><code>System.setProperty(""https.proxyHost"", proxy_host);
System.setProperty(""http.proxyHost"", proxy_host);
System.setProperty(""https.proxyPort"", proxy_port);
System.setProperty(""http.proxyPort"", proxy_port);
</code></pre>

<p>Or ofcourse you can pass the same properties via the commandline</p>
"
"5165672","<p>You <strong>need</strong> to make <code>WutServer</code> implement the interface that clients will access it by, which in turn should inherit from the marker interface <code>Remote</code>. You also probably want to make the <code>WutServer</code> class inherit from <code>UnicastRemoteObject</code>; while there are other ways to build the remoting support, inheriting from <code>UnicastRemoteObject</code> is definitely the easiest way to get something going.</p>

<p>Try this instead (though you should probably separate the remote interface into another file and have it be redistributed separately):</p>

<pre><code>public class WutServer extends UnicastRemoteObject implements WutServer.Wut {
    interface Wut extends Remote {
        String wut() throws RemoteException;
    }
    // Because of the exception...
    public WutServer() throws RemoteException {}
    public String wut() { return ""wut""; }
    public static void main(String[] args) throws RemoteException {
        LocateRegistry.createRegistry(1099).rebind(""WutManager"",new WutServer());
        System.out.println(""Ready..."");
    }
}
</code></pre>
"
"4269239","<p>Instead of iterating over your list with an integer, use the for each construct supported by the Collections interface.</p>

<pre><code>public void listOfExternalPoints(List&lt;Point&gt; list) { 
    for (Point pointListEntry : pointList) { 
        for (Point listEntry : list) { 
            if (pointListEntry == listEntry) { 
                pointList.remove(pointListEntry); 
            } 
        } 
    } 
}
</code></pre>

<p>I haven't debugged this, but it looks right to me.</p>
"
"11207379","<p>I have not tried this myself, but it seems Spring Security has a solution to this with the <a href=""http://static.springsource.org/spring-security/site/docs/3.1.x/apidocs/org/springframework/security/web/authentication/SavedRequestAwareAuthenticationSuccessHandler.html"" rel=""nofollow""><code>SavedRequestAwareAuthenticationSuccessHandler</code></a> shown in the update of <a href=""http://roguecoder.wordpress.com/2010/05/14/jasig-cas-spring-security-and-bookmarking"" rel=""nofollow"">Bob's blog</a>.</p>
"
"2873200","<p>Simple thumb rule for garbage collection in java is,</p>

<ul>
<li>Use memory cleanup techniques like cleaning up resources, members and instances when not needed.</li>
<li>Close what you open. (W.R.T. connection, hibernate session etc...)</li>
<li>Use buffering techniques while using file IO.</li>
<li>Use new NIO instead of older File IO.</li>
<li>Use <code>Collections</code> class from java utils for collection manipulations.</li>
<li>Use Array when possible.</li>
<li><p>Learn techniques specific to frameworks. Say in hibernate, do not use <code>ArrayList</code> for one-to-many relationships, because Lists are ordered so it will make extra column for children's ordering. Use <code>Set</code> instead.</p></li>
<li><p>Do not use Hsql. Use some sort of relational database like postgres etc... HSQL will eat more memory. I have faced issues regarding this.</p></li>
<li><p>Also keep in mind that when you using XML handling, do not use DOM when you just want to read small amount of data form XML. DOM will make whole structure of XML in memory, so will take more memory.</p></li>
<li><p>Try not to keep objects in memory which will grow with time. Otherwise the applications can be out of memory.</p></li>
<li><p>define sizes for your lists, maps etc...</p></li>
<li><p>Just do not use any framework for small needs. If so then carefully check how you can tweak configurations for better and smaller heap area.</p></li>
</ul>

<p>Just calling <code>System.gc()</code> doen't free your memory and cleaning up objects.</p>

<p>Guys, please add more details on this if i missed. So Others can check it out for better performance.
thanks.</p>
"
"4609540","<pre><code>Button button = new Button(this);
Button = (Button) findViewById(R.id.button01);
</code></pre>

<p>Use <code>Button.setHeight()</code> or <code>Button.setWeight()</code> and set a value.</p>
"
"11543678","<p>Create a class called Round and try using the method round as <strong>Round.round(targetValue, roundToDecimalPlaces)</strong> in your code</p>

<pre><code>public class Round {

        public static float round(float targetValue, int roundToDecimalPlaces ){

            int valueInTwoDecimalPlaces = (int) (targetValue * Math.pow(10, roundToDecimalPlaces));

            return (float) (valueInTwoDecimalPlaces / Math.pow(10, roundToDecimalPlaces));
        }

    }
</code></pre>
"
"5190460","<p>It is safe. But what made you think it may not??</p>

<p>tested with the following code.</p>

<pre><code>public static void main(String[] args) {
        // TODO Auto-generated method stub

        Hashtable siCache = new Hashtable();
        siCache.put(""key"", ""value"");
        siCache.put(""key1"", ""value1"");
        Enumeration keys = siCache.keys();  //siCache is Hashtable

        while(keys.hasMoreElements())
        {
            String k = (String) keys.nextElement();
            Object v = siCache.get(k);

           if(true) siCache.remove(k);

        }
        System.out.println(siCache.size());
    }
</code></pre>

<p>output : 0</p>
"
"4645574","<p>If you are using linux shell or cygwin on windows I'd recommend you to use grep with flags -a (after) and -b (before):</p>

<p><code>grep -a 2 ""The SQL command completed successfully"" mylog.log</code></p>

<p>Will print 2 lines after the line that matches the given pattern. </p>

<p>if you wish to write your own I'd recommend you to do the following:</p>

<p>Iterate over the lines until you meet line that meets your pattern. Then continue reading N lines (e.g. 2 lines) and print them somewhere. Then continue reading. </p>
"
"4656940","<p>My last job I made a tracking module and I was using this formula to calculate the distance between 2 coordinates.</p>

<pre><code>//Location lat and lon
double locLat = -23.548333;
double locLon = -46.636111;

//Destination lat and lon
double dstLat = -22.902778;
double dstLon = -43.206667;

double arcoAB = 90 - (dstLat);
double arcoAC = 90 - (locLat);

double difLon = locLon - (dstLon);

double cosA = Math.cos(Math.toRadians(arcoAC)) * Math.cos(Math.toRadians(arcoAB)) + Math.sin(Math.toRadians(arcoAC)) * Math.sin(Math.toRadians(arcoAB)) * Math.cos(Math.toRadians(difLon));
double acosCosA = Math.toDegrees(Math.acos(cosA));

double raio = 2 * Math.PI * 6371;
double distance = (raio * acosCosA) / 360;

return distance; //Distance in KM, convert to anything else (miles, meters..) if you need..
</code></pre>

<p>You can get the mid point dividing the distance by 2.</p>

<p>Ah, this another formula works too:</p>

<pre><code>double dLat = Math.toRadians(dstLat - locLat);
double dLon = Math.toRadians(dstLon - locLon);

double a = Math.sin(dLat / 2) * Math.sin(dLat / 2)
           + Math.cos(Math.toRadians(locLat)) * Math.cos(Math.toRadians(dstLat))
           * Math.sin(dLon / 2) * Math.sin(dLon / 2);
double c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
double d = 6371 * c;

return d; //Distance in KM
</code></pre>
"
"4321970","<p>For the <code>max()</code> function in hibernate:</p>

<pre><code>criteria.setProjection(Projections.max(""e.encounterId""));
</code></pre>
"
"4661176","<p>You can't override methods in such way.</p>

<p>In your case the solution is to add try-catch block and return false. Also you can add a <code>String</code> field tou your task and fill it with error description. Then you can use it in <code>onPostExecute()</code> method.</p>
"
"4331419","<p>Try this:</p>

<pre><code>JTextArea textArea = new JTextArea();
textArea.setText(getText());
textArea.setSize(limit, Short.MAX_VALUE); // limit = width in pixels, e.g. 500
textArea.setWrapStyleWord(true);
textArea.setLineWrap(true);
</code></pre>
"
"12181889","<p>Alternatively you could make the class static, so that all your global variables are static by default without repetition of the static keyword.</p>

<pre><code>static class Global {

    public int globalStuff = 0;

}
</code></pre>
"
"5237416","<pre><code>class BlockingSet extends ArrayBlockingQueue&lt;E&gt; {
   /*Retain all other methods except put*/
   public void put(E o) throws InterruptedException {
      if (!this.contains(o)){
         super.put(o);
      }
   }
}
</code></pre>
"
"3044551","<blockquote>
  <p>The goal is performance!</p>
</blockquote>

<p>Yes, that is in very many cases the goal. But what you are doing now with the PropertyAccessor your performance goes downwards! Every time you want to get or set a property, you will have to create a new instance for <code>customer_Field</code>. Or you have to keep your instance. I don't see what the problem is with a simple getter or setter.</p>

<pre><code>public class PurchaseOrder {

   @Property
   private Customer customer;

   @Property
   private String name;

   pulic void setCustomer(Customer c)
   {
       this.customer = c;
   }

   public Customer getCustomer()
   {
       return customer;
   }

   // The same for name
}
</code></pre>

<p>This is performance! Native code is maybe 14 times faster, but do you really need that fast? Java is great. Why? Because of it platform independence. And if you are going to make native stuff, the power of Java is gone. So and what is the difference between waiting one minute for doing everything what the programs needs to do and waiting 50 seconds. ""Where is my 14 times faster?"" You don't only need to get and set. You need to do something with all the data.</p>

<p>And I don't think it would be faster, because you are just getting and setting object instances and primitives. Native Java is created for:</p>

<ul>
<li>methods which have to calculate something that would be really faster in machine code than with Java Runtime Environment (A lot of <code>java.lang.Math</code> methods, like <code>sqrt()</code>. They could program it in Java but it would be slower)</li>
<li>things Java can't do by himself, like: exit application, create sockets, write/read files , invoking other processes, etc... That isn't pure Java that is Native Machine code that that does.</li>
</ul>

<p>So I hope I persuaded you and you will keep it by Java.</p>
"
"4679593","<p>Well, in most cases, close() doesn't actually throw an IOException. Here's the code for <a href=""http://www.google.com/codesearch/p?hl=en#t4cUIrRdV2U/gnu/mingw/gcc-java-3.4.4-20050522-1-src.tar.gz%7C3YH8A_Grjzg/gcc-3.4.4-20050522-1/libjava/java/io/InputStream.java&amp;q=%22filereader.java%22&amp;d=7&amp;l=86"" rel=""nofollow"">InputStream.java</a>:</p>

<pre><code>  public void close() throws IOException
  {
    // Do nothing
  }
</code></pre>

<p>Errors from closing a network resource should really be of some type of <code>RuntimeException</code>, since you can disconnect a networked resource after the program connects to it.</p>

<p>You can see some example of various implementations of <a href=""http://www.google.com/codesearch/p?hl=en#t4cUIrRdV2U/gnu/mingw/gcc-java-3.4.5-20051220-1-src.tar.gz%7COr8cB4InGpA/gcc-3.4.5-20051220-1/libjava/java/io/PipedReader.java&amp;q=.%2aReader.java"" rel=""nofollow"">Reader</a>/Writer and Streams using Google Code Search. Neither BufferedReader nor PipedReader actually throw an IOException, so I think you're mostly in the safe by not worrying about it. If you're really worried, you can check the implementation of the libraries you're using to see if you ever need to worry about the exception.</p>

<p>Like others mentioned, you can't do much about the IOException other than log it.</p>

<p>After all, <code>try/catch blocks</code> in the <code>finally</code> clause are pretty ugly.</p>

<p><strong>Edit:</strong></p>

<p>Further inspection reveals subclasses of <code>IOException</code> like <code>InterruptedIOException</code>, <code>SyncFailedException</code>, and <code>ObjectStreamException</code>, along with classes that inherit from it. So just catching an <code>IOException</code> would be too general -- you wouldn't know what to do with the information other than logging it because it could be from a whole range of errors.</p>

<p><strong>Edit 2:</strong></p>

<p>Urk, <code>BufferedReader</code> was a bad example, since it takes a <code>Reader</code> as input. I've changed it to <code>InputStream.java</code></p>

<p>However, there's a hierarchy with <code>InputStream</code> &lt;= <code>FilterInputStream</code> &lt;= <code>BufferedInputStream</code> &lt;= <code>InputStreamReader</code> (via inheritance and private instances) that all trickle up to the <code>close()</code> method in <code>InputStream</code>.</p>
"
"4383839","<p>A <code>foreach</code> also notifies you if the collection you're enumerating through changes (i.e. you HAD 7 items in your collection...until another operation on a separate thread removed one and now you only have 6 @_@)</p>
"
"5242587","<pre><code>while (true) {
    try {
        Thread.sleep(60 * 1000);
    }
    catch (InterruptedException ie) {
        ie.printStackTrace();
    }
    yourMethod();
}
</code></pre>

<p>Something as simple as this, or if you need accurate precision, you've to use <a href=""http://download.oracle.com/javase/6/docs/api/java/util/Timer.html"" rel=""nofollow"">Timer</a> and <a href=""http://download.oracle.com/javase/6/docs/api/java/util/TimerTask.html"" rel=""nofollow"">TimerTask</a></p>
"
"13982419","<p>Instead of <code>setResizable(true)</code> use <code>setResizable(false)</code> 
Infact setResizable(false) did the trick for me. <strong>It even disabled maximization (dimmed the icon)</strong></p>
"
"5242606","<p>one simple way of doing it is </p>

<pre><code>while (...) { Thread.sleep(60000); //do something }
</code></pre>
"
"4386286","<p>Just wanted to add that whoever thinks that foreach gets translated into for and therefore has no performance difference is dead wrong. There are many things that happen under the hood, i.e. the enumeration of the object type which is NOT in a simple for loop. It looks more like an iterator loop:</p>

<pre><code>Iterator iter = o.getIterator();
while (iter.hasNext()){
     obj value = iter.next();
     ...do something
}
</code></pre>

<p>which is significantly different than a simple for loop. If you dont understand why, then lookup vtables. Furthermore, who knows whats in the hasNext function? For all we know it could be:</p>

<pre><code>while (!haveiwastedtheprogramstimeenough){
}
now advance
</code></pre>

<p>Exageration aside, there are function of unknown implementation and efficiency being called. Since compilers dont optimize accross function boundaries, there is NO optimization happening here, just your simple vtable lookup and function call. This is not just theory, in practice, i have seen significant speedups by switching from foreach to for on the standard C# ArrayList. To be fair, it was an arraylist with about 30,000 items, but still.</p>
"
"5250988","<p>Er, you were right until the last paragraph. </p>

<p>Your total complexity is <code>O(n logn)</code>, <code>logn</code> to look up the type and <code>n</code> to list all the values in that type.</p>

<p>If you're talking about listing everything, it's definitely not <code>O(n^2 logn)</code>, since getting all the values in your tree is linear. It would be <code>O(n^2)</code>. </p>

<p>Doing the same thing with a flat list would be <code>O(n logn)</code>, so you're definitely losing performance (not to mention memory) by using a tree for this.</p>
"
"5259781","<p>The implementation of that static method looks like this. </p>

<pre><code>public static &lt;T&gt; List&lt;T&gt; asList(T... a) {
return new ArrayList&lt;T&gt;(a);
}
</code></pre>

<p>The equivalent for You wold be write same utility class with method asList in C# or use the solution presented by Massif. </p>

<pre><code>public static class Arrays {
      public static List&lt;T&gt; asList&lt;T&gt;(params T[] a)
        {
            return new List&lt;T&gt;(a);

        }
}
</code></pre>
"
"5284286","<p>I think in Java your best shot is to get the <a href=""http://ss64.com/nt/tasklist.html"" rel=""nofollow"">tasklist</a> before and after spawning your child process. Make a diff and get your PID.</p>

<p>you can get the Tasklist by issuing a <code>Runtime.getRuntime.exec(""tasklist"");</code><br>
Notice that tasklist.exe is not included with Windows XP Home edition, but still you can download it.</p>
"
"3159505","<p>Java is <strong>not</strong> a pass-by-value language. On the contrary - it is a <strong>pass-by-reference</strong> language.  (passing-by-reference does not mean you can change the original ""pointer"" to point elsewhere like C++ allows). 
The only things which are passed by value are primitives (<code>int</code>, <code>long</code>, <code>char</code> etc.)<br>
Object references are always passed by reference - so if your Object is able to support change to its contents (e.g. via getter and setter methods) - it can be changed.  </p>

<p><code>String</code> specifically is immutable - meaning that its contents may never be changed. So for your specific question, if you want the String referred to by the local variable 's' to change you need to provide it with a reference to a new instance of a <code>String</code> object.</p>

<p>Example:</p>

<pre><code>public void one()  
{
    String s = ""one"";
    s = two(); // Here your local variable will point to a new instance of a String with the value ""two""
    System.out.println(s);
}

public String two() 
{
  return ""two"";
}
</code></pre>

<p>If you use objects other than <code>String</code> - you can define setter methods on them that will update their contents for you.</p>
"
"4491579","<p>Try this:</p>

<pre><code>f(x) = log&lt;sub&gt;2&lt;/sub&gt;(x/5) + 6
</code></pre>
"
"14795350","<p>This is a <strong>very</strong> interesting question, which has profound implications on the theory and practice of OOP. First I will tell you the quick and dirty way to (almost) accomplish what you requested. In general I don't recommend this solution, but since nobody mentioned it and (if memory doesn't fail me) it <em>is</em> mentioned in a book from Martin Fowler (UML Distilled), it is probably worth talking about; you can change the definition of the <strong>setCustomer</strong> method from:</p>

<pre><code>public void setCustomer (Customer c) {
    customer = c;
}
</code></pre>

<p>to:</p>

<pre><code>void setCustomer (Customer c) {
    customer = c;
}
</code></pre>

<p>and make sure <strong>Customer</strong> and <strong>Order</strong> are in the same package. If you don't specify an access modifier, <strong>setCustomer</strong> defaults to <strong>package</strong> visibility, which means it will be only accessible from classes within the same package. Obviously this does not protect you from illegitimate access from classes other than <strong>Customer</strong> within the same package. Also, your code will break if you decide to move <strong>Customer</strong> and <strong>Order</strong> in two different packages.</p>

<p>Package visibility is largely tolerated in common programming practice in Java; I feel like within the C++ community the <strong>friend</strong> modifier is not as tolerated as package visibility in Java, despite the fact that it serves a similar purpose. I can't really understand why, because <strong>friend</strong> is much more selective: basically for each class you can specify other friend classes and functions which will be able to access the private members of the first class.</p>

<p>However, there are no doubts that neither Java's package visibility nor C++'s <strong>friend</strong> are good representatives of what OOP means, and not even of what Object-Based Programming means (OOP is basically OBP plus inheritance and polymorphism; I'll use the term OOP from now on). The core aspect of OOP is that there are entities called <em>objects</em>, and they communicate by sending messages to each other. Objects have an internal state, but this state can only be altered by the object itself. State is typically <em>structured</em> i.e. it is basically a collection of <em>fields</em> such as <em>name</em>, <em>age</em> and <em>orders</em>. In most languages messages are synchronous and they can't be dropped by mistake, like a mail or a UDP packet. When you write <strong>c.placeOrder(o)</strong> it means that <em>sender</em>, which is <strong>this</strong>, is sending a message to <strong>c</strong>. The contents of this message are <strong>placeOrder</strong> and <strong>o</strong>.</p>

<p>When an object receives a message it must handle it. Java, C++, C# and a lot of other languages assume that an object can handle a message only if its class defines a <em>method</em> with an appropriate name and list of formal parameters. The set of the methods of a class is called its <em>interface</em>, and languages such as Java and C# also have an appropriate construct, namely <strong>interface</strong> to model the concept of a set of methods. The handler for the message <strong>c.placeOrder(o)</strong> is the method:</p>

<pre><code>public void placeOrder(Order o) {
    orders.add(o);
    o.setCustomer(this);
}
</code></pre>

<p>The <em>body</em> of the method is where you write the instructions that will alter the state of object <strong>c</strong>, if necessary. In this example the <strong>orders</strong> field is modified.</p>

<p>This is, in essence, what OOP means. OOP was developed in the context of simulations, in which you basically have a lot of black boxes that communicate with each other, and each box is responsible for its own internal state.</p>

<p>Most modern languages adhere perfectly to this scheme, but only if you restrict yourself to <strong>private</strong> fields and <strong>public/protected</strong> methods. There are a few gotchas, though. For instance, within a method of class <strong>Customer</strong> you could access the private fields, such as <strong>orders</strong>, of <em>another</em> <strong>Customer</strong> object.</p>

<p>The two answers on the page you linked are actually very good, and I upvoted both. However, I think, it is completely reasonable with respect to OOP, to have a real bidirectional association, as you described. The reason is that to send a message to someone, you must have a reference to him. That is why I'll try to outline what the problem is, and why we OOP programmers sometimes struggle with this. Long story short, <em>real</em> OOP is sometimes tedious, and very akin to a complex formal method. But it produces code that is easier to read, modify and extend, and in general saves you from a lot of headaches. I've been wanting to write this down for a while, and I think your question is a good excuse to do it.</p>

<p>The main problem with OOP techniques arises whenever a group of object must alter the internal state simultaneously, as a result of an external request, dictated by <em>business logic</em>. For instance, when a person is hired, lots of stuff happen. 1) The employee must be configured to point to his department; 2) he must be added to the list of hired employees in the department; 3) something else must be added somewhere else, like a copy of the contract (maybe even a <em>scan</em> of it), insurance information and so on. The first two actions that I cited are exactly an example of establishing (and maintaining, when the employee is fired or transferred) a bidirectional association, like the one you described between customers and orders.</p>

<p>In procedural programming <strong>Person</strong>, <strong>Department</strong> and <strong>Contract</strong> would be structures, and a global procedure like <em>hirePersonInDepartmentWithContract</em> associated to the click of a button in an user interface would manipulate 3 instances of these structures by the means of three pointers. The entire business logic is inside this function, and it must take into consideration <em>every</em> possible special case while updating the state of these three objects. For instance, there is the possibility that when you click the button to hire someone, he is already employed in another department, or even worse in the same. And computer scientists know that <a href=""http://luigigobbi.com/jokesaboutmathematicians.htm"" rel=""nofollow"">special cases are bad</a>. Hiring a person is basically a very complex use case, with lots of <a href=""http://blog.casecomplete.com/post/Writing-Use-Case-Extensions.aspx"" rel=""nofollow"">extensions</a> which don't happen very often, but that must be considered.</p>

<p><em>Real</em> OOP mandates instead that objects must exchange messages to accomplish this task. The business logic is split among the <em>responsibilities</em> of several objects. <a href=""http://en.wikipedia.org/wiki/Class-responsibility-collaboration_card"" rel=""nofollow"">CRC cards</a> are an informal tool to study business logic in OOP.</p>

<p>To get from  the <em>valid</em> state where John is unemployed, to the other valid state where he is a project manager at the R&amp;D department, it is necessary to go through a number of invalid states, at least one. So there is an initial state, an invalid state and a final state, and at least two messages exchanged between a person and a department. You can also be sure that one message must be received by the department, to give it a chance of altering its internal state, and another one must be received by the person, for the same reason. The middle state is invalid in the sense that it doesn't really exist in the real world, or maybe exists but is of no importance. However, the logical model in your application must in a way keep track of it.</p>

<p>Basically the idea is that when the human resource guy fills the ""New Employee"" <strong>JFrame</strong> and clicks the ""Hire"" <strong>JButton</strong>, the selected department is retrieved from a <strong>JComboBox</strong>, which in turn may have been populated from a database, and a new <strong>Person</strong> is created based on the information inside the various <strong>JComponents</strong>. Maybe a job contract is created containing at least the name of the position and the salary. Finally there is appropriate business logic that wires all the objects together and triggers updates for all the states. This business logic is triggered by a method called <strong>hire</strong> defined in class <strong>Department</strong>, which takes as arguments a <strong>Person</strong> and a <strong>Contract</strong>. All of this may happen in the <strong>ActionListener</strong> of the <strong>JButton</strong>.</p>

<pre><code>Department department = (Department)cbDepartment.getSelectedItem();
Person person = new Person(tfFirstName.getText(), tfLastName.getText());
Contract contract = new Contract(tfPositionName.getText(), Integer.parseInt(tfSalary.getText()));
department.hire(person, contract);
</code></pre>

<p>I would like to stress what's going on at line 4, in OOP terms; <strong>this</strong> (which in our case is the <strong>ActionListener</strong>, is sending a message to <strong>department</strong>, saying they must hire <strong>person</strong> under <strong>contract</strong>. Let's have a look at a plausible implementation of these three classes.</p>

<p><strong>Contract</strong> is a very simple class.</p>

<pre><code>package com.example.payroll.domain;

public class Contract {

    private String mPositionName;
    private int mSalary;

    public Contract(String positionName, int salary) {
        mPositionName = positionName;
        mSalary = salary;
    }

    public String getPositionName() {
        return mPositionName;
    }

    public int getSalary() {
        return mSalary;
    }

    /*
        Not much business logic here. You can think
        about a contract as a very simple, immutable type,
        whose state doesn't change and that can't really
        answer to any message, like a piece of paper.
    */
}
</code></pre>

<p><strong>Person</strong> is way more interesting.</p>

<pre><code>package com.example.payroll.domain;

public class Person {

    private String mFirstName;
    private String mLastName;
    private Department mDepartment;
    private boolean mResigning;

    public Person(String firstName, String lastName) {
        mFirstName = firstName;
        mLastName = lastName;
        mDepartment = null;
        mResigning = false;
    }

    public String getFirstName() {
        return mFirstName;
    }

    public String getLastName() {
        return mLastName;
    }

    public Department getDepartment() {
        return mDepartment;
    }

    public boolean isResigning() {
        return mResigning;
    }

    // ========== Business logic ==========

    public void youAreHired(Department department) {
        assert(department != null);
        assert(mDepartment != department);
        assert(department.isBeingHired(this));

        if (mDepartment != null)
            resign();

        mDepartment = department;
    }

    public void youAreFired() {
        assert(mDepartment != null);
        assert(mDepartment.isBeingFired(this));

        mDepartment = null;
    }

    public void resign() {
        assert(mDepartment != null);

        mResigning = true;
        mDepartment.iResign(this);
        mDepartment = null;
        mResigning = false;
    }
}
</code></pre>

<p><strong>Department</strong> is quite cool.</p>

<pre><code>package com.example.payroll.domain;

import java.util.Collection;
import java.util.HashMap;
import java.util.Map;

public class Department {

    private String mName;
    private Map&lt;Person, Contract&gt; mEmployees;
    private Person mBeingHired;
    private Person mBeingFired;

    public Department(String name) {
        mName = name;
        mEmployees = new HashMap&lt;Person, Contract&gt;();
        mBeingHired = null;
        mBeingFired = null;
    }

    public String getName() {
        return mName;
    }

    public Collection&lt;Person&gt; getEmployees() {
        return mEmployees.keySet();
    }

    public Contract getContract(Person employee) {
        return mEmployees.get(employee);
    }

    // ========== Business logic ==========

    public boolean isBeingHired(Person person) {
        return mBeingHired == person;
    }

    public boolean isBeingFired(Person person) {
        return mBeingFired == person;
    }

    public void hire(Person person, Contract contract) {
        assert(!mEmployees.containsKey(person));
        assert(!mEmployees.containsValue(contract));

        mBeingHired = person;
        mBeingHired.youAreHired(this);
        mEmployees.put(mBeingHired, contract);
        mBeingHired = null;
    }

    public void fire(Person person) {
        assert(mEmployees.containsKey(person));

        mBeingFired = person;
        mBeingFired.youAreFired();
        mEmployees.remove(mBeingFired);
        mBeingFired = null;
    }

    public void iResign(Person employee) {
        assert(mEmployees.containsKey(employee));
        assert(employee.isResigning());

        mEmployees.remove(employee);
    }
}
</code></pre>

<p>The messages I defined have, at the very least, very <em>pittoresque</em> names; in a real application you might not want to use names like these, but in the context of this example they help to model the interactions between objects in a meaningful and intuitive way.</p>

<p><strong>Department</strong> can receive the following messages:</p>

<ul>
<li><em>isBeingHired</em>: the sender wants to know whether a particular person is in the process of being hired by the department.</li>
<li><em>isBeingFired</em>: the sender wants to know whether a particular person is in the process of being fired by the department.</li>
<li><em>hire</em>: the sender wants the department to hire a person with a specified contract.</li>
<li><em>fire</em>: the sender wants the department to fire an employee.</li>
<li><em>iResign</em>: the sender is likely an employee, and is telling the department that he is resigning.</li>
</ul>

<p><strong>Person</strong> can receive the following messages:</p>

<ul>
<li><em>youAreHired</em>: the department sends this message to inform the person that he is hired.</li>
<li><em>youAreFired</em>: the department sends this message to inform the employee that he is fired.</li>
<li><em>resign</em>: the sender wants the person to resign from his current position. Note that an employee who was hired by another department can send the <em>resign</em> message to himself in order to quit the old job.</li>
</ul>

<p>The fields <strong>Person.mResigning</strong>, <strong>Department.isBeingHired</strong>, <strong>Department.isBeingFired</strong> are what I use to encode the aforementioned <em>invalid</em> states: when either one of them is ""non-zero"", the application is in an <em>invalid</em> state, but is on its way to a valid one.</p>

<p>Also note that there are no <em>set</em> methods; this contrasts with the common practice of working with <a href=""http://en.wikipedia.org/wiki/JavaBeans"" rel=""nofollow"">JavaBeans</a>. JavaBeans are in essence very similar to C structures, because they tend to have a set/get (or set/is for boolean) pair for every private property. However they do allow for validation of set, for instance you can check that a <strong>String</strong> being passed to a set method is not-null and not empty and eventually raise an exception.</p>

<p>I wrote this little library in less than a hour. Then I wrote a driver program and it worked correctly with the JVM -ea switch (enable assertions) at the very first run.</p>

<pre><code>package com.example.payroll;

import com.example.payroll.domain.*;

public class App {

    private static Department resAndDev;
    private static Department production;
    private static Department[] departments;

    static {
        resAndDev = new Department(""Research &amp; Development"");
        production = new Department(""Production"");
        departments = new Department[] {resAndDev, production};
    }

    public static void main(String[] args) {

        Person person = new Person(""John"", ""Smith"");

        printEmployees();
        resAndDev.hire(person, new Contract(""Project Manager"", 3270));
        printEmployees();
        production.hire(person, new Contract(""Quality Control Analyst"", 3680));
        printEmployees();
        production.fire(person);
        printEmployees();
    }

    private static void printEmployees() {

        for (Department department : departments) {
            System.out.println(String.format(""Department: %s"", department.getName()));

            for (Person employee : department.getEmployees()) {
                Contract contract = department.getContract(employee);

                System.out.println(String.format(""  %s. %s, %s. Salary: EUR %d"", contract.getPositionName(), employee.getFirstName(), employee.getLastName(), contract.getSalary()));
            }
        }

        System.out.println();
    }
}
</code></pre>

<p>The fact that it worked is not the cool thing though; the cool thing is that only the hiring or firing department is authorized to send <em>youAreHired</em> and <em>youAreFired</em> messages to the person that is being hired or fired; in a similar way, only a resigning employee can send the <em>iResign</em> message to its department, and only to that department; any other illegitimate message sent from <strong>main</strong> would trigger an assertion. In a real program you would use exceptions instead of assertions.</p>

<p>Is all of this overkill? This example is admittedly a little extreme. But I feel like this is the essence of OOP. Objects must <em>cooperate</em> to achieve a certain goal i.e. changing the <em>global state</em> of the application according to predetermined pieces of business logic, in this case <em>hiring</em>, <em>firing</em> and <em>resign</em>. Some programmers think that business problems are not suited for OOP, but I disagree; business problems are basically <em>workflows</em>, and they are very simple tasks by themselves, but they involve a lot of actors (i.e. <em>objects</em>), which communicate through messages. Inheritance, polymorphism, and all the patterns are welcome extensions, but they are not the base of the object-oriented process. In particular, reference-based associations are often preferred to <em>implementation inheritance</em>.</p>

<p>Note that by using static analysis, design-by-contract and automatic theorem provers, you would be able to verify that your program is correct, for any possible input, <em>without</em> running it. OOP is the abstraction framework that enables you to think this way. It is not necessarily more compact than procedural programming, and it does not automatically lead to code reuse. But I insist that it is easier to read, modify and extend; let's have a look at this method:</p>

<pre><code>    public void youAreHired(Department department) {
        assert(department != null);
        assert(mDepartment != department);
        assert(department.isBeingHired(this));

        if (mDepartment != null)
            resign();

        mDepartment = department;
    }
</code></pre>

<p>The business logic relevant to the use case is the assignment at the end; the <strong>if</strong> statement is an extension, a special case that only occurs when the person is already an employee in another department. The first three assertions describe <em>forbidden</em> special cases. If one day we want to forbid this automatic resign from the previous department we only need to modify this method:</p>

<pre><code>    public void youAreHired(Department department) {
        assert(department != null);
        assert(mDepartment == null);
        assert(department.isBeingHired(this));

        mDepartment = department;
    }
</code></pre>

<p>We can also extend the application by making <strong>youAreHired</strong> a boolean function, which returns <strong>true</strong> only if the old department is ok with the new hiring. Obviously we may need to change something else, in my case I made <strong>Person.resign</strong> a boolean function, which in turn may require <strong>Department.iResign</strong> to be a boolean function:</p>

<pre><code>    public boolean youAreHired(Department department) {
        assert(department != null);
        assert(mDepartment != department);
        assert(department.isBeingHired(this));

        if (mDepartment != null)
            if (!resign())
                    return false;

        mDepartment = department;

        return true;
    }
</code></pre>

<p>Now the current employeer has the final word in determining whether an employee can be transferred to another department. The current department could delegate the responsibility of determining this to a <a href=""http://en.wikipedia.org/wiki/Strategy_pattern"" rel=""nofollow"">Strategy</a> which may in turn take into consideration the projects in which the employee is involved, their deadlines and various contractual constraints.</p>

<p>In essence, adding an order to a customer really is part of business logic. If a bidirectional association is required, and reflection is not an option, and none of the solutions proposed on this and the linked question are satisfactory, I think the only solution is something like this.</p>
"
"5322678","<pre><code>Setter: public void setCurrent(boolean val)
Getter: public boolean getCurrent()
</code></pre>

<p>For booleans you can also use </p>

<pre><code>public boolean isCurrent()
</code></pre>
"
"3171626","<p>I would propose to wrap a private method and use function object pattern:</p>

<p>Interface for function object:</p>

<pre><code>interface Filter&lt;T&gt;{
    boolean eligible(T t);
}
</code></pre>

<p>Count higher wrapper method to show the idea:</p>

<pre><code>public int countHigher(final SomeObject a) 
{ 
 return coun(a, new Filter&lt;SomeObject&gt;()
           {   
                 public boolean eligible(SomeObject b){
                      return a.compareTo(b) == -1;
                 }
           }); 
} 
</code></pre>

<p>private helper method that counts eligible objects</p>

<pre><code>private int coun(SomeObject a, Filter&lt;SomeObject&gt; filter){ 
     //...
}
</code></pre>
"
"4776899","<p>The problem might be your usage of ==, which doesnt quite have the meaning you intend. In java it checks that two objects are the same object, and the color you get from your picture will never be equal to the value recorded in Color.BLACK</p>

<p>What you want to do is check that the color's values are the same, the red, green, blue, and alpha channels.  This is a context dependent equality, which is usually implemented as the .equals() function of an object.</p>

<p>Try this one:</p>

<pre><code>c.equals(Color.BLACK)
</code></pre>

<p>instead of </p>

<pre><code>c == Color.BLACK
</code></pre>
"
"15342485","<p>Better understanding of why this test does not fail can come from understanding of what actually happens when constructor is invoked. Java is a stack-based language. <code>TestClass.f = new TestClass();</code> consists of four action. First <code>new</code> instruction is called, its like malloc in C/C++, it allocates memory and places a reference to it on the top of the stack. Then reference is duplicated for invoking a constructor. Constructor in fact is like any other instance method, its invoked with the duplicated reference. Only after that reference is stored in the method frame or in the instance field and becomes accessible from anywhere else. Before the last step reference to the object is present only on the top of creating thread's stack and no body else can see it. In fact there is no difference what kind of field you are working with, both will be initialized if <code>TestClass.f != null</code>. You can read x and y fields from different objects, but this will not result in <code>y = 0</code>. For more information you should see <a href=""http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.10.2.4"" rel=""nofollow"">JVM Specification</a> and <a href=""http://en.wikipedia.org/wiki/Stack-oriented_programming_language"" rel=""nofollow"">Stack-oriented programming language</a> articles.</p>

<p><strong>UPD</strong>: One important thing I forgot to mention. By java memory there is no way to see partially initialized object. If you do not do self publications inside constructor, sure.</p>

<p><a href=""http://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html#jls-17.5"" rel=""nofollow"">JLS</a>:</p>

<blockquote>
  <p>An object is considered to be completely initialized when its
  constructor finishes. A thread that can only see a reference to an
  object after that object has been completely initialized is guaranteed
  to see the correctly initialized values for that object's final
  fields.</p>
</blockquote>

<p><a href=""http://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html#jls-17.4.5"" rel=""nofollow"">JLS</a>:</p>

<blockquote>
  <p>There is a happens-before edge from the end of a constructor of an
  object to the start of a finalizer for that object.</p>
</blockquote>

<p><a href=""http://jeremymanson.blogspot.ru/2010/01/garbage-collection-references.html"" rel=""nofollow"">Broader explanation of this point of view</a>:</p>

<blockquote>
  <p>It turns out that the end of an object's constructor happens-before
  the execution of its finalize method. In practice, what this means is
  that any writes that occur in the constructor must be finished and
  visible to any reads of the same variable in the finalizer, just as if
  those variables were volatile.</p>
</blockquote>

<p><strong>UPD</strong>: That was the theory, let's turn to practice.</p>

<p>Consider the following code, with simple non-final variables:</p>

<pre><code>public class Test {

    int myVariable1;
    int myVariable2;

    Test() {
        myVariable1 = 32;
        myVariable2 = 64;
    }

    public static void main(String args[]) throws Exception {
        Test t = new Test();
        System.out.println(t.myVariable1 + t.myVariable2);
    }
}
</code></pre>

<p>The following command displays machine instructions generated by java, how to use it you can find in a <a href=""https://wikis.oracle.com/display/HotSpotInternals/PrintAssembly"" rel=""nofollow"">wiki</a>:</p>

<blockquote>
  <p>java.exe -XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly -Xcomp
  -XX:PrintAssemblyOptions=hsdis-print-bytes -XX:CompileCommand=print,*Test.main Test</p>
</blockquote>

<p>It's output:</p>

<pre><code>...
0x0263885d: movl   $0x20,0x8(%eax)    ;...c7400820 000000
                                    ;*putfield myVariable1
                                    ; - Test::&lt;init&gt;@7 (line 12)
                                    ; - Test::main@4 (line 17)
0x02638864: movl   $0x40,0xc(%eax)    ;...c7400c40 000000
                                    ;*putfield myVariable2
                                    ; - Test::&lt;init&gt;@13 (line 13)
                                    ; - Test::main@4 (line 17)
0x0263886b: nopl   0x0(%eax,%eax,1)   ;...0f1f4400 00
...
</code></pre>

<p>Field assignments are followed by <a href=""http://en.wikipedia.org/wiki/NOP"" rel=""nofollow"">NOPL</a> instruction, one of it's purposes is to <a href=""http://programmers.stackexchange.com/a/165269"">prevent instruction reordering</a>.</p>

<p><strong>Why does this happen?</strong> According to specification finalization happens after constructor returns. So GC thread cant see a partially initialized object. On a CPU level GC thread is not distinguished from any other thread. If such guaranties are provided to GC, than they are provided to any other thread. This is the most obvious solution to such restriction.</p>

<p><strong>Results:</strong></p>

<p><strong>1) Constructor is not synchronized, synchronization is done by <a href=""http://www.infoq.com/articles/memory_barriers_jvm_concurrency"" rel=""nofollow"">other instructions</a>.</strong> </p>

<p><strong>2) Assignment to object's reference cant happen before constructor returns.</strong></p>
"
"15354657","<p>What if one changes the scenario into</p>

<pre><code>public class TestClass {

    final int x;
    static TestClass f;

    public TestClass() {
        x = 3;
    }

    int y = 4;

    // etc...

}
</code></pre>

<p>?</p>
"
"15403825","<p>What about you modified the constructor to do this:</p>

<pre><code>public TestClass() {
 Thread.sleep(300);
   x = 3;
   y = 4;
}
</code></pre>

<p>I am not an expert on JLF finals and initializers, but common sense tells me this should delay setting x long enough for writers to register another value?</p>
"
"5392730","<p>Generate a random number (which is always between 0-1) and multiply by 1000000</p>

<pre><code>Math.round(Math.random()*1000000);
</code></pre>
"
"5392765","<p>Would that work for you?</p>

<pre><code>public class Main {

public static void main(String[] args) {
    Random r = new Random(System.currentTimeMillis());
    System.out.println(r.nextInt(100000) * 0.000001);
}
</code></pre>

<p>}</p>

<p>result e.g. 0.019007</p>
"
"15460131","<p>What's going on in this thread? Why should that code fail in the first place?</p>

<p>You launch 1000s of threads that will each do the following:</p>

<pre><code>TestClass.f = new TestClass();
</code></pre>

<p>What that does, in order:</p>

<ol>
<li>evaluate <code>TestClass.f</code> to find out its memory location</li>
<li>evaluate <code>new TestClass()</code>: this creates a new instance of TestClass, whose constructor will initialize both <code>x</code> and <code>y</code></li>
<li>assign the right-hand value to the left-hand memory location</li>
</ol>

<p><strong>An assignment is an atomic operation which is always performed after the right-hand value has been generated</strong>. <a href=""http://docs.oracle.com/javase/specs/jls/se5.0/html/expressions.html#15.26.1"" rel=""nofollow"">Here is a citation</a> from the Java language spec (see the first bulleted point) but it really applies to any sane language.</p>

<p>This means that while the <code>TestClass()</code> constructor is taking its time to do its job, and <code>x</code> and <code>y</code> could conceivably still be zero, the reference to the partially initialized <code>TestClass</code> object only lives in that thread's stack, or CPU registers, and has not been written to <code>TestClass.f</code></p>

<p>Therefore <code>TestClass.f</code> will always contain:</p>

<ul>
<li>either <code>null</code>, at the start of your program, before anything else is assigned to it,</li>
<li>or a fully initialized <code>TestClass</code> instance.</li>
</ul>
"
"15681628","<pre><code>//--------------------------linklist class------------------------------------------------

import java.util.Stack;

public class Linklist {
    Stack &lt;Character&gt; a = new Stack &lt;Character&gt;();
    Node front; 
    Node back;
    Node Temp;

    public void insert (char d){
        Node newNode = new Node (d);
    if (front == null){
        front = newNode;
        back = newNode;
    }


    else {
        Temp = front;
        while (Temp != null){

            back= Temp;
        Temp = Temp.next ;
        }

        back.next = newNode;
    }


    }





    public void display(){
        Node T=front;
        System.out.print(T.data);
        T=T.next;
        while(T!=front)
        {
            System.out.print(T.data);
            T=T.next;
            if (T == null ){
                break;
            }
        }
    }


    public void reverse(){
    Linklist bb = new Linklist ();


        Node temp = front;
        while(temp != null ){
            if (temp.data != '_'){
 a.push(temp.data);

            }


            else{
        //char x =  
while (!a.isEmpty()){
    char pop = a.pop();
bb.insert(pop);


            }
bb.insert('_');
            }
            temp = temp.next;
        }// while end

        bb.display();

    }


}
//-------------------------------------------------------------------------------------


//------------------ test class
public class Test {

    /**
     * @param args
     */
    public static void main(String[] args) {

        queueLinklist a = new queueLinklist ();
a.insert('m');
a.insert('y');
a.insert('_');
a.insert('n');
a.insert('a');
a.insert('m');
a.insert('e');
a.insert('_');
a.insert('i');
a.insert('s');
a.insert('_');
a.insert('s');
a.insert('a');
a.insert('m');
a.insert('_');

a.display();
System.out.println("" "");
    a.reverse();
    a.reverse();
    }

}
// ---------- node class

public class Node {
char data;
Node next;

Node (){
    data= (Character) null ;
    next = null;
}

Node (char d){
    data = d;
    next = null;
}
}
</code></pre>
"
"3264608","<p>I would take advantage of java's String Formatter:</p>

<pre><code>String queryFormat = ""select * from table1 where col1 between %1$s and %2$s "" +
                     ""union all "" +
                     ""select * from table2 where col1 between %1$s and %2$s "" +
                     ""union all "" +
                     ""select * from table3 where col1 between %1$s and %2$s"";
String query = String.format(queryFormat,""5"",""10"");
</code></pre>

<p>The first argument passed to the format method is the format string.  The <code>%1$s</code> means to insert the <b>1</b>st argument of type <b>s</b>tring (""5""), and the <code>%2$s</code> means to insert the <b>2</b>nd argument of type <b>s</b>tring (""10"").</p>

<p>The query string will then contain:</p>

<pre><code>select * from table1 where col1 between 5 and 10 union all select * from table2 where col1 between 5 and 10 union all select * from table3 where col1 between 5 and 10
</code></pre>

<p>You can read more about the Formatter class <a href=""http://download.oracle.com/docs/cd/E17476_01/javase/1.5.0/docs/api/java/util/Formatter.html"" rel=""nofollow"">here</a>.</p>

<p>Hope this helps.</p>
"
"4871135","<p>Current working directory is defined differently in different Java implementations For certain prior to Java 7 there was no consistent way to get the working directory. You could work around this by launching Java with <code>-D</code> and defining a variable to hold the info</p>

<p>Something like</p>

<pre><code>java -Dcom.mycompany.workingDir=""%0""
</code></pre>

<p>That's not quite right, but you get the idea. Then <code>System.getProperty(""com.mycompany.workingDir"")</code>...</p>
"
"16494334","<p>If i is your primitive int, you can write just below</p>

<pre><code>String a = """" + i;
</code></pre>

<p>That's it. </p>
"
"3320559","<p>I prefer first one, because <code>String myString = """"</code> will create additional object in the pool</p>
"
"3320589","<pre><code>String mystring = null;
mystring.length() 
// Cause error
</code></pre>

<p>Above will cause error due to null pointer.</p>

<pre><code>string myString = new String();
myString.length()
// will not cause error
</code></pre>

<p>I like to use later, but I think it's personal preference.</p>
"
"3324654","<p>How about this follwing code ,anyways he wants to set something.</p>

<pre><code>String myString = (someCondition)  ? ""something "" : ""else something"";
</code></pre>

<p>or this</p>

<pre><code>String myString = ""else something""; 

if (someCondition)
   myString = ""something"";
</code></pre>

<p>in the above case , if you are 90% sure that someCondition is always true. otherwise unnecessary object creation in declaration.Expecting comments from Gurus.</p>
"
"5702051","<p>I am trying to get this feature into official SLF4J API. Please support/vote/contribute: <a href=""https://issues.jboss.org/browse/JBLOGGING-62"" rel=""nofollow"">https://issues.jboss.org/browse/JBLOGGING-62</a></p>

<p>(this feature is already implemented by JBoss Logging + Seam Solder, see <a href=""http://docs.jboss.org/seam/3/latest/reference/en-US/html/solder-logging.html"" rel=""nofollow"">http://docs.jboss.org/seam/3/latest/reference/en-US/html/solder-logging.html</a>)</p>

<blockquote>
  <p>11.4. Native logger API</p>
  
  <p>You can also inject a ""plain old"" Logger (from the JBoss Logging API):</p>

<pre><code>import javax.inject.Inject;
import org.jboss.logging.Logger;

public class LogService {

    @Inject
    private Logger log;

    public void logMessage() {
        log.info(""Hey sysadmins!"");
    }

}
</code></pre>
  
  <p>Log messages created from this Logger will have a category (logger name) equal to the fully-qualified class name of the bean implementation class. You can specify a category explicitly using an annotation.</p>

<pre><code>@Inject @Category(""billing"")
private Logger log;
</code></pre>
  
  <p>You can also specify a category using a reference to a type:</p>

<pre><code>@Inject @TypedCategory(BillingService.class)
private Logger log;
</code></pre>
</blockquote>

<p>Sorry for not providing a relevant answer.</p>
"
"4671260","<pre><code>for(int aValue : aList) {
    if (aValue != aList.Count - 1)
    {
          tmpString += aValue + "","";
    }
    else
    {
          tmpString += aValue + "")"";
    }
}
</code></pre>

<p>Perhaps?</p>
"
"17314933","<pre><code>if(set.size()==1){
   set.toArray(new Element[0])[0];
}
</code></pre>
"
"3384337","<p>Since a <code>Dividend</code> is being returned, users will probably know it is a new <code>Dividend</code> instance. Even then, you might reconsider the name.</p>
"
"4943764","<p>This is possible using Reflection API !</p>

<pre><code>public class StackTrace {
    public static void main(String args[]) {
        StackTrace st = new StackTrace();
        st.func();
    }
    public void func() {
        OtherClass os =new OtherClass();
        os.getStackTrace(this);
    }
}

class OtherClass {
    void getStackTrace(Object obj)  {
        System.out.println(obj.getClass());
    }
}
</code></pre>
"
"6546903","<pre><code>while(true)
{
   if(   )
   {
        break;
   }
   else if()
   {
        break;
   }
   else
   {
        do something;
        break;
   }
}
</code></pre>
"
"3393214","<p>You are trying to fork the entire JVM. </p>

<ol>
<li>That is extremely inefficient, mainly because of the heaviness of yet another java process. If your heavily doing this, then your program is going to be really slow</li>
<li>Threads exist for this very reason</li>
</ol>

<p>But if you <em>really</em> must, you can try just executing <code>java -arguments</code> directly, since most standard java installations put java on the cli path. </p>
"
"17537328","<p>//Loop thro' the entire character array and keep 'i' as the basis of your permutation and keep finding the combination like you swap [ab, ba]</p>

<pre><code>public class Permutation {
    //Act as a queue
    private List&lt;Character&gt; list;
    //To remove the duplicates
    private Set&lt;String&gt; set = new HashSet&lt;String&gt;();

    public Permutation(String s) {
        list = new LinkedList&lt;Character&gt;();
        int len = s.length();
        for(int i = 0; i &lt; len; i++) {
            list.add(s.charAt(i));
        }
    }

    public List&lt;String&gt; getStack(Character c, List&lt;Character&gt; list) {
        LinkedList&lt;String&gt; stack = new LinkedList&lt;String&gt;();
        stack.add(""""+c);
        for(Character ch: list) {
            stack.add(""""+ch);
        }

        return stack;
    }

    public String printCombination(String s1, String s2) {
        //S1 will be a single character
        StringBuilder sb = new StringBuilder();
        String[] strArr = s2.split("","");
        for(String s: strArr) {
            sb.append(s).append(s1);
            sb.append("","");
        }       
        for(String s: strArr) {
            sb.append(s1).append(s);
            sb.append("","");
        }

        return sb.toString();
    }

    public void printPerumtation() {
        int cnt = list.size();

        for(int i = 0; i &lt; cnt; i++) {
            Character c = list.get(0);
            list.remove(0);
            List&lt;String&gt; stack = getStack(c, list);

            while(stack.size() &gt; 1) {
                //Remove the top two elements
                String s2 = stack.remove(stack.size() - 1);
                String s1 = stack.remove(stack.size() - 1);
                String comS = printCombination(s1, s2);
                stack.add(comS);
            }

            String[] perms = (stack.remove(0)).split("","");
            for(String perm: perms) {
                set.add(perm);
            }

            list.add(c);
        }

        for(String s: set) {
            System.out.println(s);
        }
    }
}
</code></pre>
"
"4739784","<pre><code>(\w+\.)+
</code></pre>

<p>Apparently, the body has to be at least 30 characters. I hope this is enough.</p>
"
"4947088","<pre><code>super.run();
</code></pre>

<p>to </p>

<pre><code>handler.postDelayed(this, 10000);
</code></pre>

<p>Hope it's help.</p>
"
"6646353","<pre><code>class Widen {
    private static widen(long k) {
        System.out.println(""Converted to long: "" + k);
    }
    private static widen(int ... k) {
        System.out.println(""Converted to varargs: "" + k);
    }
    private static widen(Integer k) {
        System.out.println(""Converted to Integer: "" + k);
    }
    public static void main(String ... args) {
        int value = 3;
        widen(value);  // Output: Converted to long: 3
    }
} 
</code></pre>

<p>to solve above mind this:</p>

<p>widening beats boxing, boxing beats  varargs</p>

<p>the out put will be 
<strong><em>Converted to long:3</em></strong></p>
"
"4744378","<p>If you use a different monitor, there is no synchronization. No other code is requesting the monitor of this or other_static_final_object_monitor.</p>

<p>Using a static object to synchronize is only useful, if you want to synchronize across classes and within methods.</p>

<p>Also, NEVER use a String as a lock/monitor. Always use something like this:</p>

<pre><code> static final Object LOCK = new Object();
</code></pre>
"
"6790020","<p>Another solution : </p>

<pre><code>    public static void giveHint (int actual, int guess) {
         if(Math.abs(actual - guess) &lt;= 5) {
             System.out.println(""Hot"");
             return;
         }

         System.out.println(""Cold"");
    }
</code></pre>
"
"4744861","<p>foreach is order of magnitude slower for implementation heavy collection. </p>

<p>I have proof. These are my findings</p>

<p>I used the following simple profiler to test their performance</p>

<pre><code>static void Main(string[] args)
{
    DateTime start = DateTime.Now;
    List&lt;string&gt; names = new List&lt;string&gt;();
    Enumerable.Range(1, 1000).ToList().ForEach(c =&gt; names.Add(""Name  = "" + c.ToString()));
    for (int i = 0; i &lt; 100; i++)
    {
        //For the for loop. Uncomment the other when you want to profile foreach loop
        //and comment this one
        //for (int j = 0; j &lt; names.Count; j++)
          //  Console.WriteLine(names[j]);
        //for the foreach loop
        foreach (string n in names)
        {
            Console.WriteLine(n);
        }
    }
    DateTime end = DateTime.Now;
    Console.WriteLine(""Time taken = "" + end.Subtract(start).TotalMilliseconds + "" milli seconds"");
</code></pre>

<p>And I got the following results</p>

<p><strong>Time taken = 11320.73 milli seconds (for loop)</strong></p>

<p><strong>Time taken = 11742.3296 milli seconds (foreach loop)</strong></p>
"
"6871838","<p>Get the Row Count using <code>ResultSetMetaData</code> class.</p>

<p>From your code u can create <code>ResultSetMetaData</code> like :</p>

<pre><code>ResultSetMetaData rsmd = resultSet.getMetaData();   //get ResultSetMetaData
rsmd.getColumnCount();       // get row count from resultsetmetadata
</code></pre>
"
"17847296","<p>To define Global Variable you can make use of static Keyword</p>

<pre><code>public final class Tools {
  public static int a;
  public static int b;
}
</code></pre>

<p>now you can access a and b from anywhere by calling</p>

<pre><code>Tools.a;
Tools.b;
</code></pre>

<p>Yoy are right...specially in J2ME...
  You can avoid NullPointerException by putting inside your MidLet constructor
(proggy initialization) this line of code:</p>

<pre><code>new Tools();
</code></pre>

<p>This ensures that Tools will be allocated before any instruction
that uses it.</p>

<p>That's it!</p>
"
"4970610","<p>No, beans created by the <code>FactoryBean</code> are also managed by spring.</p>
"
"4765945","<p>You could write a wrapper to take the cli and re-format it to use -DPROP=VAL</p>

<pre><code>int main(int argc, char*argv[])
{
std::vector&lt;std::string&gt; in (argv+1,argv+argc), out();

out.push_back(""java.exe"");
out.push_back(""-cp"");
out.push_back(""my-jar.jar"");
out.push_back(""main.class"")

for( auto it = in.begin(); it!=in.end(); ++in)
{
//process CLI args. turn ""-abc"",""BLAH"" into ""-Darg.a=true"",""-Darg.b=true"",""-Darg.c=BLAH"" and push to out
//Do additional processing. Maybe evn use get_opt() or Boost.ProgramOptions
}
//use exec or CreateProcess to launch java with the proper args
//or even use something like WinRun4J's methods to load the jvm.dll
//Then your program shows up as ""MyExe.exe"" instead of ""java.exe""

//Use System.getProperty(""arg.a"",""false"") to get the value of a
}
</code></pre>

<p>Of course, you could always just tell you users to invoke a bash/batch script with the proper -DA=true type arguments</p>
"
"7205422","<p>To create a jdbc connection in java , you need to know about some classes and interfaces required to establish a connection which are provided in java.sql package.</p>

<p>Classes are Drivermanager and Types.</p>

<p>Interfaces are Connection, Statement, PreparedStatement, CallableStatement, ResultSet...etc</p>

<p>This is the program to establish a jdbc connection</p>

<pre><code>import java.sql.*;
class Sssm
{
public static void main(String aaa[])throws SqlException
{
Drivermanager d=new oracle.jdbc.driver.OracleDriver();
DriverManager.getconnection(d);
Connection c=Drivermanager.getconnection(""jdbc:oracle:thin:@localhost:1521:xe"",""scott"",""tiger"");
c.close();
}
}
</code></pre>

<p><strong>Note</strong> : Instead of scott and tiger.. please write the login credentials that you have provided for oracle database.</p>
"
"3435591","<p>Use the <code>Show line numbers</code> feature.</p>
"
"4775248","<p>If Thread A definitely dies before Thread B starts reading then it would be possible to avoid using volatile</p>

<p>eg.</p>

<pre><code>public class MyClass {

   volatile int x = 0;

   public static void main(String[] args) {

      final int i = x;
      new Thread() {
         int j = i;
         public void run() {
            j = 10;
            final int k = j;
            new Thread() {
               public void run() {
                  MyClass.x = k;
               }               
            }.start();
         }
      }.start();
   }
}
</code></pre>

<p>However, the problem is that whichever Thread starts Thread B will need to now that the value that Thread A is writing to has changed and to not use its own cached version. The easiest way to do this is to get Thread A to spawn Thread B. But if Thread A has nothing else to do when it spawns Thread B then this seems a little pointless (why not just use the same thread).</p>

<p>The other alternative is that if no other thread is dependent on this variable then maybe Thread A could initial a local variable with the volatile variable, do what it needs to do, and then finally write the contents of its local variable back to the volatile variable. Then when Thread B starts it initialises its local variable from the volatile variable and reads only from its local variable thereafter. This should massively reduce the amount of time spent keeping the volatile variable in sync. If this solution seems unacceptable (because of other threads writing to the volatile variable or whatever) then you definitely need to declare the variable volatile.</p>
"
"18238311","<p>String pincode = ""589877"";</p>

<pre><code>    Pattern pattern = Pattern.compile(""\\d{6}"");
</code></pre>

<p>\d indicates the digits. inside the braces the number of digits
        Matcher matcher = pattern.matcher(pincode);</p>

<pre><code>    if (matcher.matches()) {
        System.out.println(""Pincode is Valid"");
        return true;
    } else {
        System.out.println(""pincode must be a 6 digit Number"");
</code></pre>
"
"18332395","<p>You can also wrap the ""datasource"" bean with the ""IsolationLevelDataSourceAdapter"", by simply doing this:</p>

<pre><code>&lt;bean id=""dataSource"" class=""org.springframework.jdbc.datasource.IsolationLevelDataSourceAdapter""&gt;
    &lt;property name=""isolationLevelName"" value=""ISOLATION_READ_COMMITTED""/&gt;
    &lt;property name=""targetDataSource"" ref=""_dataSource""/&gt;
&lt;/bean&gt;
</code></pre>

<p>where ""_dataSource"" is a ref to an actual datasource.</p>
"
"4785647","<pre><code>It is said that we cannot force the garbage collection process in java.
</code></pre>

<p>That is a very popular belief, which is totally wrong.</p>

<p>Several applications do that on a regular basis and some even have shiny buttons you can click that do <strong>really</strong> perform a GC.  In other words: they don't ""hint"" the GC that they'd like the GC to trigger but they do really force a GC.</p>

<p>So that belief is both popular and wrong.  What is less popular is the knowledge as to how you actually trigger such a GC, as shown by the unique (and very vague) answer to my +6 times upvoted question here:</p>

<p><a href=""http://stackoverflow.com/questions/2178296/java-how-do-you-really-force-a-gc-using-jvmtis-forcegargabecollection"">http://stackoverflow.com/questions/2178296/java-how-do-you-really-force-a-gc-using-jvmtis-forcegargabecollection</a></p>
"
"5007032","<p>I don't think that would compile. A method cannot have two return types (<code>&lt;T&gt;</code> and <code>boolean</code>) at the same time.</p>
"
"7879894","<p>A relatively old question, but I figured I would take a shot at it, to maybe help out the random Google Searches.</p>

<p>Another approach someone could take to minimise code and reduce the number of additional classes is to add a <code>KeyListener</code> for the keyType event and check for the <em>Char</em> value. This isn't very portable (you can't use region specific formatting such as numerical punctuation), but this could be quite helpful for straight integers.
You could also do a relative length here as well:</p>

<pre><code>textField.addKeyListener(new KeyAdapter()
{
    @Override
    public void keyTyped(KeyEvent keyEvent)
    {
        if (textField.getText().length() &lt; 3 &amp;&amp; keyEvent.getKeyChar() &gt;= '0' &amp;&amp; keyEvent.getKeyChar() &lt;= '9')
        {
            // Optional
            super.keyTyped(keyEvent);
        }
        else
        {
            // Discard the event
            keyEvent.consume();
        }
    }
});
</code></pre>

<p>You can also add another event listener to validate the entire integer for further processing (the entire number must be > 800 and &lt; 5220 for example).
A good place for this would be on the focusLost event(?).</p>

<p><em>If you are doing these features frequently, it would be best to subclass the JTextField class to provide this functionality.</em></p>

<p><strong>EDIT: Using <code>Character.isLetter(keyEvent.getKeyChar())</code> is even more clear.</strong></p>
"
"5019799","<p>Immutability of the object means it can't transform it's state... i.e. can't mutate... For examle </p>

<pre><code>final class Person {
  private int age = 0;

  public Person(int age) { this.age = age; }
}
</code></pre>

<p>The object to this type are immutable objects since you can't change it's state.... (forget Reflection for a moment)</p>

<p>Constant at the other hand in Programming means inline... Even the compiler does that they inline the values of the constant variables for primative types... for object types it means the ref variable can't be reassigned.</p>
"
"18981016","<p>In Java, you can use char value with "":</p>

<pre><code>char quotes ='""';

String =""""+quotes+""ROM""+""""+quotes+"""";
</code></pre>
"
"19297757","<p>You need to restart the container if <em>/etc/hosts</em> was changed as far as JVM caches local addresses/names on the first <code>InetAddress</code> call. It looks like <code>InetAddress</code> implementation bug, but still not fixed.</p>
"
"19353548","<p>You could store by creating an object that hold a string value number to store in an array list.
by example: <code>BigInt objt = new BigInt(""999999999999999999999999999999999999999999999999999"");</code></p>

<p>objt is created by the constructor of BigInt class. Inside the class look like.</p>

<pre><code>BigInt{

ArrayList&lt;Integer&gt; myNumber = new ArrayList &lt;Integer&gt;();        

public BigInt(){}

public BigInt(String number){ for(int i; i&lt;number.length; i++){ myNumber.add(number.indexOf(i)); } }

}
</code></pre>
"
"3528371","<p>Jvm will allocate memory when you do <code>new</code> unless you are calling <code>static</code> method in which case also it will create the class.</p>
"
"3531927","<pre><code>String test = classProperties.getProperty(""prop_allowed_extensions"", ""txt, jpeg"");
String[] splitString = StringUtils.split(test, ',');
for(String s : splitString) {
    s = StringUtils.trim(s);
}
</code></pre>

<p>would be slightly more elegant, but Java does not support LINQ like .net where you would be able to avoid the explicit loop altogether.</p>
"
"8448912","<p>To avoid having to change the settings in 2 places and just rely on the global settings this works nicely:</p>

<pre><code>ln -s /etc/maven2/settings.xml ~/.m2/settings.xml
</code></pre>
"
"19955758","<p>You could always use Googles Guava</p>

<pre><code>String text = ""13567"";
CharMatcher charMatcher = CharMatcher.DIGIT;
int output = charMatcher.countIn(text);
</code></pre>
"
"3570087","<p>There is not, as of Java 7, any package <strong><em>built into</em></strong> the <s>Sun</s> Oracle Java distribution for parsing JSON; for android there is at least <code>org.json</code>, though apparently some developers don't like it.</p>

<p>There are, of course, many third-party options.</p>

<p>I have a very lightweight JSON parser which you can use to parse an HTTP content stream.  It's completely free, use at your own risk, etc, etc,.  Details and download on my <a href=""http://www.softwaremonkey.org/Code/JsonParser"" rel=""nofollow"">website</a>.  It should work just fine in the Android VM.</p>
"
"20717297","<p>just do something like this:</p>

<pre><code>for (AbstractDevice device : mDevicesList){
int curIndex = mDevicesList.indexOf(device));

            }
</code></pre>
"
"20797290","<p>among the power of Maven we find the POM file wich we will add the list of dependency like the code bellow. then open <strong>POM.XML</strong> file, and add:</p>

<pre><code>&lt;dependency&gt;
&lt;groupId&gt;jstl&lt;/groupId&gt;
&lt;artifactId&gt;jstl&lt;/artifactId&gt;
&lt;version&gt;[version of JSTL you want to add][1]&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p>i hope this help you :)</p>
"
"21008542","<p><a href=""http://docs.oracle.com/javase/1.5.0/docs/tooldocs/windows/javadoc.html"" rel=""nofollow"">Link to JavaDoc</a></p>

<p>I believe this will surely help you. </p>

<pre><code>javadoc -d C:/javadoc/test com.mypackage
</code></pre>
"
"3598507","<p>Obviously my question is not clear.</p>

<p>I have many unit tests and all methods are throwing same exception with different error message. ""SomeException"" is exception I must catch and read error message from it.</p>

<p>What I want to achive is to write one method which will be common to all unit tests and where I could print error message.</p>

<p>Now unit tests looks like this</p>

<pre><code> public void test_something()
    {     
        try
        {
            assertTrue(bw.doSomething(""test""));
        }
        catch (SomeException e)
        {
            fail(""exception = "" + e.getReason());
        }
    }

public void test_something1()
    {
        IBroadworks bw = getSomehting1();
        try
        {
            assertTrue(bw.doSomething1(""test1""));
        }
        catch (SomeException e)
        {
            fail(""exception = "" + e.getReason());
        }
    }
...
</code></pre>

<p>So below code is repeating in all unit tests and that is not ok.</p>

<pre><code>...
try{
assertTrue(condition);
}

catch (SomeException e)
        {
            fail(""exception = "" + e.getReason());
        }
...
</code></pre>
"
"4906921","<p>I'm using Spring 3 and load a properties like that:</p>

<pre><code>&lt;context:property-placeholder location=""/WEB-INF/my.properties"" /&gt;
</code></pre>
"
"21130752","<p>To do it in a generic JPA way using getter annotations, the example below works for me with Hibernate 3.5.4 and Oracle 11g. Note that the mapped getter and setter (<code>getOpenedYnString</code> and <code>setOpenedYnString</code>) are private methods. Those methods provide the mapping but all programmatic access to the class is using the <code>getOpenedYn</code> and <code>setOpenedYn</code> methods.</p>

<pre><code>private String openedYn;

@Transient
public Boolean getOpenedYn() {
  return toBoolean(openedYn);
}

public void setOpenedYn(Boolean openedYn) {
  setOpenedYnString(toYesNo(openedYn));
}

@Column(name = ""OPENED_YN"", length = 1)
private String getOpenedYnString() {
  return openedYn;
}

private void setOpenedYnString(String openedYn) {
  this.openedYn = openedYn;
}
</code></pre>

<p>Here's the util class with static methods <code>toYesNo</code> and <code>toBoolean</code>:</p>

<pre><code>public class JpaUtil {

    private static final String NO = ""N"";
    private static final String YES = ""Y"";

    public static String toYesNo(Boolean value) {
        if (value == null)
            return null;
        else if (value)
            return YES;
        else
            return NO;
    }

    public static Boolean toBoolean(String yesNo) {
        if (yesNo == null)
            return null;
        else if (YES.equals(yesNo))
            return true;
        else if (NO.equals(yesNo))
            return false;
        else
            throw new RuntimeException(""unexpected yes/no value:"" + yesNo);
    }
}
</code></pre>
"
"4913213","<p>Use properties files just for static content, like labels, messages etc. </p>

<p>For dynamic content start with a database table that includes a language-code-id for every language you want to use. All the dynamic content entries that are already translated go with their respective language-code-id added to their primary key. If a translation is missing, you can program your application to fall back to your default language in order to make things easier until the right translation is present. </p>

<p>Let your users provide their contributions in the language they like and store it with the appropriate language-id. Someone should provide the translation to the other languages in order to make the contribution complete.</p>

<pre><code>...
PRIMARY KEY  (`subject_id`,`language_id`),
...
</code></pre>
"
"4916879","<pre><code>for (int i = 0; i &lt; a[2].Length; i++)
{
    string ss = (8S8Q4D1SKCQC2C4S6H4C6DJS2S1C6C).Substring(i, 2);
    Console.Write(ss);
    i++; 
}
</code></pre>
"
"21214143","<p>My reputation is less then required to comment, but I think that <strong>chaiyachaiya's</strong> and <strong>Pablo Santa Cruz</strong> answers are completely wrong. 
Firstly, Enum overwrites hashcode with <code>==</code> operator, as it's instances are guaranteed to be singletons and so it doesn't compare logical equality of operands. That's why if we use <code>MyEnum.values()</code> and check with <code>contains()</code>, we will always get <code>false</code>.
Secondly, <code>MyEnum.values().toString()</code> will call <code>toString()</code> on the <code>MyEnum</code> class object, rather then on instances of the <code>MyEnum</code> class (if you override this method in the class of cause). 
So, what will you get with <code>Lists.newArrayList(MyEnum.values().toString()).contains(myString)</code>?</p>
"
"21256042","<pre><code>public static void main(String[] args) throws IOException
    {
        //String s1=""parasanna"";
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        System.out.println(""enter string:"");
        String s1 = br.readLine();
        StringBuffer sb=new StringBuffer(s1);

        while(sb.length() != 0)
        {
           char c = sb.charAt(0);
           int cnt = 0;
           for(int i=0; i&lt; sb.length(); i++)
           {
           if(c == sb.charAt(i))
           {
               cnt++;
               sb.deleteCharAt(i);
               i--;
           }

           }

           System.out.println(c + ""     occurance is:"" + cnt);
        }

    }
</code></pre>
"
"5110424","<pre><code>public enum GenericEnum&lt;T&gt; {
  SIMPLE, COMPLEX;

  public T parse(String s) {
    return T.parse(s);
  }
}

public void doSomething() {
  GenericEnum&lt;Long&gt; longGE = GenericEnum&lt;Long&gt;.SIMPLE;
  GenericEnum&lt;Integer&gt; intGE = GenericEnum&lt;Integer&gt;.SIMPLE;

  List&lt;Long&gt; longList = new LinkedList&lt;Long&gt;();
  List&lt;Integer&gt; intList = new LinkedList&lt;Integer&gt;();

  assert(longGE == intGE);              // 16
  assert(stringList.equals(intList));   // 17

  Object x = longGE.parse(""1"");  // 19
}
</code></pre>

<p>The asserts at line 16 and 17 are both true.  The generic types are not available at run time.</p>

<p>One of the advantages of an enum is that you can use == to compare them.  The assert at line 16 will evaluate to true.</p>

<p>At line 19 we run into a problem though.  longGE and intGE are the same object (as the assert at line 16 shows.) What will be returned by the parse(""1"")?  The generic type information is not available at run time.  So there would be no way to determine T for the parse method at run time.</p>

<p>Enums are basically static, they only exist once.  And it doesn't make sense to apply generic typing to static types.</p>

<p>I hope this helps.</p>

<p>Note - this is not meant to be working code.  It is using the syntax suggested in the original question.  </p>
"
"4943378","<p>You can query to the database and retrieve all data into a RESULTSET and use the following code to start off a root element.</p>

<pre><code>DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
Document document  = documentBuilder.newDocument();

Element Element_root  = document.createElement(""rootElement""); 
</code></pre>

<p>Thereafter you can add on as many as child elements using </p>

<pre><code>Element Element_childnode      = document.createElement(""childnode"");//create child node                
Element_childnode.appendChild(document.createTextNode(""Enter the value of text here""));//add data to child node
Element_root.appendChild(Element_childnode);//close the child node
</code></pre>

<p><strong>Do not forget to close the opened node close the root at the end WITHOUT FAIL</strong> </p>

<p>Use this to close root.</p>

<pre><code>document.appendChild(Element_causelist);
</code></pre>

<p>At the end if you have a XSD validate it your xml against it.....googling the validation online will provide good results....  <a href=""http://tools.decisionsoft.com/schemaValidate/"" rel=""nofollow"">http://tools.decisionsoft.com/schemaValidate/</a> </p>

<p>NOTE : <strong>TIME !!! It will take time when data is huge nos...
But I think this is one and the most easiest way of doing it....Taking in consideration the data, I think one should run the program during down time when there is less traffic....</strong></p>

<p>Hope this helps....Good Luck Gauls....</p>
"
"10198203","<p>Really funny to see so many answers on such a ""simple"" thing :D
So, I want to add my approach here as well. I usually have my own Utils-Class containing some static methods, like the string-checking-one:</p>

<pre><code>public static boolean isCool(String param) {
    if (param == null) {
        return false;
    }
    if (param.trim().equals("""")) {
        return false;
    }
    return true;
}
</code></pre>
"
"5117494","<pre><code>public static Date getDateGWT(final String strDate, final int style) {
        Date date = null;
        int useStyle = style;
        if (!validStyle(style)) {
            useStyle = DEFAULT_DATE_STYLE;
        }

        if ((strDate != null) &amp;&amp; (strDate.trim().length() &gt; 0)) {
            DateTimeFormat df = getDateFormatGWT(useStyle);
            try {
                date = df.parse(strDate);
            } catch (Exception e) {
                date = df.parse(date.toString());
            }
        }
        return date;
    }

     private static DateTimeFormat getDateTimeFormatGWT(final int style) {
        switch(style) {
        case SHORT:
            return DateTimeFormat.getShortDateTimeFormat();
        case MEDIUM:
            return DateTimeFormat.getMediumDateTimeFormat();
        case LONG:
            return DateTimeFormat.getLongDateTimeFormat();
        case FULL:
            return DateTimeFormat.getFullDateTimeFormat();
        default :
            return DateTimeFormat.getMediumDateTimeFormat();
        }        
   }
</code></pre>

<p>Try This </p>
"
"3754943","<p>As I see there is a <a href=""http://download.oracle.com/javase/1.4.2/docs/api/javax/swing/JSlider.html#setLabelTable%28java.util.Dictionary%29"" rel=""nofollow"">setLabelTable</a> method in JSlider with a Dictionary parameter.
I have not used it but I guess that if you set it to an empty dictionary (or empty labels for every possible value) then no labels will appear.</p>

<p>A better solution is the usage of <a href=""http://download.oracle.com/javase/1.4.2/docs/api/javax/swing/JSlider.html#setPaintLabels%28boolean%29"" rel=""nofollow"">setPaintLabels</a> with a <code>false</code> value.</p>
"
"10199757","<p>You could also use the toArray(T[] contents) variant of the toArray() method.  Create an empty array of ints of the same size as the HashSet, and then pass it to the toArray() method:</p>

<pre><code>int[] myarray = new int[hashset.size()];
doSomething(hashset.toArray(myarray));
</code></pre>
"
"21704099","<p>Try this:</p>

<pre><code>public static boolean jsonsEqual(Object obj1, Object obj2) throws JSONException

    {
        if (!obj1.getClass().equals(obj2.getClass()))
        {
            return false;
        }

        if (obj1 instanceof JSONObject)
        {
            JSONObject jsonObj1 = (JSONObject) obj1;

            JSONObject jsonObj2 = (JSONObject) obj2;

            String[] names = JSONObject.getNames(jsonObj1);
            String[] names2 = JSONObject.getNames(jsonObj1);
            if (names.length != names2.length)
            {
                return false;
            }

            for (String fieldName:names)
            {
                Object obj1FieldValue = jsonObj1.get(fieldName);

                Object obj2FieldValue = jsonObj2.get(fieldName);

                if (!jsonsEqual(obj1FieldValue, obj2FieldValue))
                {
                    return false;
                }
            }
        }
        else if (obj1 instanceof JSONArray)
        {
            JSONArray obj1Array = (JSONArray) obj1;
            JSONArray obj2Array = (JSONArray) obj2;

            if (obj1Array.length() != obj2Array.length())
            {
                return false;
            }

            for (int i = 0; i &lt; obj1Array.length(); i++)
            {
                boolean matchFound = false;

                for (int j = 0; j &lt; obj2Array.length(); j++)
                {
                    if (jsonsEqual(obj1Array.get(i), obj2Array.get(j)))
                    {
                        matchFound = true;
                        break;
                    }
                }

                if (!matchFound)
                {
                    return false;
                }
            }
        }
        else
        {
            if (!obj1.equals(obj2))
            {
                return false;
            }
        }

        return true;
    }
</code></pre>
"
"21719733","<p>Simple!!!</p>

<pre><code>public class A{
private String a;
private String b;
//getter and setter are here
}
</code></pre>

<hr>

<pre><code>public class B extends A{
public B(String a, String b){ //constructor
super(a,b)//from here you got access with private variable of class A
}
}
</code></pre>

<p>thanks</p>
"
"3760572","<p>If getPasswordAuthentication() is an actual method and not just you wording what you need to happen, it's actually not currently a line in your code at all. I would assume you mean to call it after this line:</p>

<pre><code>Authenticator.setDefault(new MyAuthenticator(username, password));
</code></pre>

<p>I see it being declared but never called.</p>
"
"3760619","<p>Use url that ask for login. In your case you can change yahoo url to</p>

<pre><code>https://login.yahoo.com/config/login_verify2?&amp;.src=ym
</code></pre>
"
"21847406","<pre><code>import java.io.*;
public class Anagram {

public static void main(String[] args) {
      java.util.Scanner sc=new java.util.Scanner(System.in);
            PrintWriter p=new PrintWriter(System.out,true);
            p.println(""Enter Word"");
            String a[],s="""",st;boolean flag=true;
            int in[],n,nf=1,i,j=0,k,m=0;
            char l[];
            st=sc.next();
            p.println(""Anagrams"");
            p.println(""1 . ""+st);
            l=st.toCharArray();
            n=st.length();
            for(i=1;i&lt;=n;i++){
                nf*=i;
            }

            i=1;
            a=new String[nf];
            in=new int[n];
            a[0]=st;
            while(i&lt;nf){
                for(m=0;m&lt;n;m++){
                    in[m]=n;
                }j=0;
                while(j&lt;n){
                    k=(int)(n*Math.random());

                    for(m=0;m&lt;=j;m++){
                        if(k==in[m]){
                            flag=false;
                            break;          
                        }
                    }
                    if(flag==true){
                        in[j++]=k;
                    }flag=true;
                }s="""";
                for(j=0;j&lt;n;j++){
                    s+=l[in[j]];
                }

                //Removing same words
                for(m=0;m&lt;=i;m++){
                        if(s.equalsIgnoreCase(a[m])){
                            flag=false;
                            break;          
                        }
                    }
                    if(flag==true){
                        a[i++]=s;
                        p.println(i+"" . ""+a[i-1]);
                    }flag=true;

            }

    }
}
</code></pre>
"
"3781766","<p>You can't compile.</p>

<p>Your <code>HondaCivic</code> class implements <code>car1</code> which doesn't exists. It could be <code>Car1</code> but <code>Car1</code> is a class and should be extended.</p>

<p>Plus having two classes declared in your main method isn't really a good idea. You can't access them from outside the method.</p>

<p>And in the end you have two <code>main(String...)</code> method. I suppose that it's the <code>Main.main(String...)</code> that is called. This method does nothing except declaring two classes.</p>
"
"4964217","<p>@dontocsata
you can go back to your teacher and school him a little :)</p>

<p>few notes from the real world and regardless what you see or be told. 
Please NOTE, the words below are regarding this particular case in the exact order shown.</p>

<p>The following 2 variable will reside on the same cache line under virtually any know architecture.</p>

<pre><code>private static boolean ready;  
private static int number;  
</code></pre>

<p><code>Thread.exit</code> (main thread) is guaranteed to exit and <code>exit</code> is guaranteed to cause a memory fence, due to the thread group thread removal (and many other issues). (it's a synchronized call, and I see no single way to be implemented w/o the sync part since the ThreadGroup must terminate as well if no daemon threads are left, etc).</p>

<p>The started thread <code>ReaderThread</code> is going to keep the process alive since it is not a daemon one! 
Thus <code>ready</code> and <code>number</code> will be flushed together (or the number before if a context switch occurs) and there is no real reason for reordering in this case at least I can't even think of one. 
You will need something truly weird to see anything but <code>42</code>. Again I do presume both static variables will be in the same cache line. I just can't imagine a cache line 4 bytes long OR a JVM that will not assign them in a continuous area (cache line).</p>
"
"5151258","<p>The problem in your code is that your remove() method calls itself recursively infinetly to die with a <a href=""http://stackoverflow.com/questions/5151205/creating-a-remove-method-to-remove-an-item-from-an-arraylist-java"">StackOverflow</a></p>

<pre><code>public void remove(int ID){
 boolean found = false;
 int i = 0;
 for(i=0; i&lt;size ; i++)
    if (ID[i].equals(ID)
 {
   found = true;
   break;

 }
 if (found) {
    // remove the item and push all subsequent items to save space.
    while (i &lt; size - 1; i++) {
       ID[i] = ID[i + 1];
    }
 }
 return found;
}
</code></pre>
"
"4964798","<p>nothing is wrong</p>

<pre><code>String int2string(int i)

User findUser4Id(long id)

void startHibern8();
</code></pre>

<p>wow! this website doesn't like these method names! I got captchaed!</p>
"
"3806800","<p>you can use it to enable something during dev, then disable it completely on live site. for example</p>

<pre><code>...
assert debug(""xxx"");
...

static boolean debug(String format, Object... args){ print(...); return true; }
</code></pre>

<p>the debug statement will add zero overhead on live site. </p>
"
"22820555","<p>Try this code:</p>

<pre><code>BigDecimal decimal = new BigDecimal(""100.25"");

BigDecimal decimal2 = new BigDecimal(""1000.70"");

BigDecimal decimal3 = new BigDecimal(""10000.00"");

DecimalFormat format = new DecimalFormat(""###,###,###,###,###.##"");

format.setDecimalSeparatorAlwaysShown(true);

format.setMinimumFractionDigits(2);

System.out.println(format.format(decimal));

System.out.println(format.format(decimal2));

System.out.println(format.format(decimal3));
</code></pre>

<p>Result: </p>

<pre><code>100.25

1,000.70

10,000.00
</code></pre>
"
"4977965","<p>Hi I don't know what exactly would you like to achive especially in terms of thread-safety but maybe below pseudocode could be used as a draft. </p>

<pre><code>public interface Filterable {
     List&lt;?&gt; returnResults(FilterChain chain);
} 

public class Tree&lt;T extends Filterable&gt;{
   private final T data;
   private Tree&lt;T&gt; parent;
   private List&lt;Tree&lt;T&gt;&gt; children;
   private List&lt;FilterChain&lt;T&gt;&gt; filterChain;
   private boolean readonly = false;  
   /*package*/ Tree(T data) {...} 
   /*package*/ Tree(Tree&lt;T&gt; parent, T data) {...}

   //freeze mtd makes object read-only
   /*package*/ void freeze(){         
          readonly = true;
      for(Tree&lt;T&gt; child: children){
          child.freeze();
      }
   }
   public void addChild(Tree&lt;T&gt; child){
       if(readonly){
           throws new NonModifiableException(...);
       }
       children.add(child);
   }
   public List&lt;?&gt; getResults(){
       return data.returnResults(filterChain);
   }

}
</code></pre>

<p>Instead of making synchronization on the Tree maybe you could focus on making synchronization on the builder of the tree</p>

<pre><code>public class TreeBuilder&lt;T&gt;{
    public synchronized TreeNode createRoot(T data);
    public synchronized void addSubElement(TreeNode parentNode ,T data);
    public synchronized void addFilter(TreeNode node, Filter&lt;T&gt; filter);
    public Tree&lt;T&gt; synchronized build(){
       Tree&lt;T&gt; tree= ... 
       //build your tree
       //build filter chain for specific tree node
       tree.freeze(); //make your tree readonly
       return tree;
    }
}
</code></pre>
"
"11237837","<p>Try this code...</p>

<pre><code>    &lt;dependency&gt;
        &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
        &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;
        &lt;version&gt;3.0-alpha-1&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre>
"
"23118145","<p>Try using: </p>

<pre><code>System.out.println()
</code></pre>

<p>Instead of: </p>

<pre><code>System.out.print()
</code></pre>
"
"11587694","<p>Try this</p>

<pre><code>           JComboBox CB = new JComboBox();
           CB.setPreferredSize(new Dimension(int, int)); 
           p.add(CB);// which p is a JPanel
</code></pre>
"
"11635217","<p>worked for me: </p>

<pre><code>#{request.contextPath}
</code></pre>
"
"11928431","<p>Use this code:</p>

<pre><code>StringBuilder querySelect = new StringBuilder(""select * from messages "");
StringBuilder queryWhere = new StringBuilder(""where msg_id=?"");

if (fileRSVO.getFileName()!= null){
    queryWhere.append(""and descr LIKE %?% "");
}
querySelect.append(queryWhere);

List&lt;Map&lt;String, Object&gt;&gt; list = getJdbcTemplate().queryForList(querySelect.toString(), params.toArray()); 
...
</code></pre>
"
"12047065","<p>it seems that you should set your command as an <code>String[]</code>,for example:</p>

<pre><code>String[] command = new String[]{""rmiregistry"",""2020""};
Runtime.getRuntime().exec(command);
</code></pre>

<p>it just like the style of <code>main(String[] args)</code>.</p>
"
"12054493","<pre><code> import java.util.UUID;

 public class IdGenerator {
    public static int generateUniqueId() {      
        UUID idOne = UUID.randomUUID();
        String str=""""+idOne;        
        int uid=str.hashCode();
        String filterStr=""""+uid;
        str=filterStr.replaceAll(""-"", """");
        return Integer.parseInt(str);
    }

    // XXX: replace with java.util.UUID

    public static void main(String[] args) {
        for (int i = 0; i &lt; 5; i++) {
            System.out.println(generateUniqueId());
            //generateUniqueId();
        }
    }

}
</code></pre>

<p>Hope this helps you.</p>
"
"5036404","<p>a non-static inner class will fulfill all your desires:</p>

<pre><code>public class Foo {
  protected String member;
  public Foo(String member) {
    this.member = member;
  }
  public class Bar {
    protected String member;
    public Bar(String member) {
      this.member = member;
    }
    public void show() {
      System.out.println(""this.member: "" + this.member + ""; Foo.this.member: "" + Foo.this.member);
    }
  }
  public static void main(String[] args) throws javax.mail.MessagingException, java.io.IOException {
    Foo foo_a = new Foo(""a"");
    Foo foo_b = new Foo(""b"");
    Bar bar_a1 = foo_a.new Bar(""1"");
    Bar bar_a2 = foo_a.new Bar(""2"");
    Bar bar_b1 = foo_b.new Bar(""1"");
    Bar bar_b2 = foo_b.new Bar(""2"");
    bar_a1.show();
    bar_a2.show();
    bar_b1.show();
    bar_b2.show();
  }
}
</code></pre>

<p>Well, well, well, (-2 votes later):</p>

<p>Firstly, none of the above solutions address the part of the original question that there may not be exactly 1 file shared by all objects.  One group of objects may need to share file A, and another group file B, and so forth.  The inner class solution above is intended to fulfill exactly that requirement.  You instantiate the outer class once per file/group, and you instantiate inner objects for a group from the same outer object.</p>

<p>Secondly, static is a poor choice:  it is quite likely that the file might need to be specified later during the run-time rather than at program startup.  The outer/inner class structure above addresses exactly that issue.  You instantiate the outer class whenever you need to.  No static initialization is needed (nor any complicated schemes for deferred static initialization).</p>

<p>Thirdly, thread paranoia was simply not an issue in this problem (or this solution).  It is pretty clear that the file is a read-only, hence immutable, so going all concurrent on the problem will only detract from elegant solutions.</p>

<p>Finally, speaking of elegant, this one is, and probably the only one.</p>

<p>This update is mostly for someone new who comes and looks at the thread, since the negative voters in this thread will probably get this to -5.</p>
"
"3878515","<p>I would start with something far simpler, like:</p>

<pre><code>-server -Xms3072m -Xmx3072m -XX:+UseParallelOldGC -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps 
</code></pre>

<p>And see if this meets your needs.</p>
"
"24331830","<p>Keep it simple in this way:</p>

<pre><code>&lt;%= java.net.URLEncoder.encode(request.getAttribute(""user.name"").toString() , ""UTF-8"") %&gt;
</code></pre>
"
"24369473","<p>I don't think Java returns 51 in this case. I am running Java 8 on a Mac and I get:</p>

<pre><code>-13 % 64 = -13
</code></pre>

<p>Program:</p>

<pre><code>public class Test {
    public static void main(String[] args) {
        int i = -13;
        int j = 64;
        System.out.println(i % j);
    }
}
</code></pre>
"
"24623614","<p>With <a href=""http://www.joda.org/joda-time/"" rel=""nofollow"">Joda-Time</a> since version 2.0 you can use <code>LocalDate.toDate()</code>.</p>

<p>Simply
</p>

<pre><code>// someDatetime is whatever java.util.Date you have.
Date someDay = new LocalDate(someDatetime).toDate();
</code></pre>
"
"3898621","<p>You need to build a parser by hand. It's not hard, but it will take up time.
In the previous comment you said you want an ArrayList of ArrayList... hmmm... good</p>

<p>Just parse the string char by char and recognize each token by first defining recursive parsing rules. Recursive descendant parser rules are usually graphical, but I can try to use ABNF for you</p>

<pre><code>LIST = NIL / LIST_ITEM *( ',' SP LIST_ITEM)
LIST_ITEM = NIL / '[' STRING_ITEM *(, SP STRING ITEM) ']'
STRING_ITEM = '""' ANYCHAR '""'
SP = space
ANYCHAR = you know, anything that is not double quotes
NIL = ''
</code></pre>

<p>Another approach is to use Regular Expressions. Here are a couple of samples. First capture outer elements by</p>

<pre><code>(\[[^\]]*\])
</code></pre>

<p>The above regex capture everything from '[' to the first ']', but you need to modify it or cut the brackets from your string (just drop first and last char)</p>

<p>Then capture inner elements by</p>

<pre><code>(\""[^\""]\"")
</code></pre>

<p>Simple as the above</p>
"
"5210797","<p>You need:</p>

<ol>
<li>Catenate all Strings from your array</li>
<li>Put this at 0 index in your ArrayList</li>
</ol>

<p>Something like this:</p>

<pre><code>String addData[] = new String[6];
ArrayList&lt;String&gt; data = new ArrayList&lt;String&gt;();    
addData[0] = ""a"";
addData[1] = ""b"";

// 1. catenate all strings
String str = """";
for (String s : addData) {
    str += (s != null)?s:"""";
}

// 2. put it into 0 index in your arraylist     
data.add(0, str);
System.out.println(data.get(0));
</code></pre>
"
"12667756","<pre><code>public class Test extends Thread {

    private static Test thread1, thread2, thread3; //static added since tested from main()

    public static void main(String... arguments){
    try{    
        thread1 = new Test();
        thread2 = new Test();
        thread3 = new Test();
        // Add Names
        thread1.setName(""A"");
        // Add Sleep
        thread2.sleep(2000); //in milisecs - here it is 2sec
        // Add priority
        thread3.setPriority(Thread.MAX_PRIORITY);

        // Infinite loop
        while(true){    
            thread1.start();
            thread2.start();
            thread3.start();    
        }
    }catch(Throwable t){
        System.err.println(t.getMessage());
    }
}

    public void run() {
        System.out.println(Thread.currentThread().getName());
    }
}
</code></pre>
"
"5223440","<p>This is at the following <a href=""http://download.oracle.com/javase/tutorial/essential/regex/pattern.html"" rel=""nofollow"">Java Tutorials</a></p>

<pre><code>import java.util.regex.Pattern;
import java.util.regex.Matcher;

public class SplitDemo2 {

    private static final String REGEX = ""\\d"";
    private static final String INPUT = ""one9two4three7four1five"";

    public static void main(String[] args) {
        Pattern p = Pattern.compile(REGEX);
        String[] items = p.split(INPUT);
        for(String s : items) {
            System.out.println(s);
        }
    }
}

OUTPUT:

one
two
three
four
five
</code></pre>

<p>The regex for whitespace is \s</p>

<p>Hope that helps.</p>
"
"13008561","<p>HI Nwaman i think you answer is wrong i have tested it in windows appliaction, i found if u write a program like the below one</p>

<pre><code>try
{
    string s = ""hu"";
    int i = int.Parse(s);
}
catch (Exception ex)
{
    string s = ""hu"";
    int i = int.Parse(s);
    throw new Exception();
}
finally
{
    MessageBox.Show(""hi"");
}
</code></pre>

<p>and this will not result finally to excute,</p>
"
"25402898","<p>@Dougnukem answer helped me a lot. I have taken the Groovy approach (suing groovy 2.3.3)</p>

<p>I did some changes on Dougnukem code.
This will work with java 7 and will print two attributes to stdout evet 10 sec.</p>

<pre><code>        package com.my.company.jmx
        import groovy.util.GroovyMBean;
        import javax.management.remote.JMXServiceURL
        import javax.management.remote.JMXConnectorFactory
        import java.lang.management.*

            class Monitor {
                static main(args) {
                    def serverUrl = 'service:jmx:rmi:///jndi/rmi://localhost:5019/jmxrmi'
                    String beanName = ""Catalina:type=DataSource,class=javax.sql.DataSource,name=\""jdbc/CommonDB\""""
                    println  ""numIdle,numActive""

                    while(1){
                        def server = JMXConnectorFactory.connect(new JMXServiceURL(serverUrl))
                       //make sure to reconnect in case the jvm was restrated 
                        server.connect()
                        GroovyMBean mbean = new GroovyMBean(server.MBeanServerConnection, beanName)
                        println  ""${mbean.numIdle},${mbean.numActive}""
                        server.close()
                        sleep(10000)
                    }

                }
            }
</code></pre>

<p>Compile this code into a jar using maven-compiler-plugin so you will not require groovy installation only the groovy-all.jar 
Below is the relevant plugin definition and dependency.</p>

<pre><code>&lt;plugins&gt;
    &lt;plugin&gt;
        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
        &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
        &lt;configuration&gt;
            &lt;compilerId&gt;groovy-eclipse-compiler&lt;/compilerId&gt;
            &lt;source&gt;1.7&lt;/source&gt;
            &lt;target&gt;1.7&lt;/target&gt;
        &lt;/configuration&gt;
        &lt;dependencies&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.codehaus.groovy&lt;/groupId&gt;
                &lt;artifactId&gt;groovy-eclipse-compiler&lt;/artifactId&gt;
                &lt;version&gt;2.8.0-01&lt;/version&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.codehaus.groovy&lt;/groupId&gt;
                &lt;artifactId&gt;groovy-eclipse-batch&lt;/artifactId&gt;
                &lt;version&gt;2.3.4-01&lt;/version&gt;
            &lt;/dependency&gt;
        &lt;/dependencies&gt;
    &lt;/plugin&gt;
    &lt;plugins&gt;
        &lt;dependencies&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.codehaus.groovy&lt;/groupId&gt;
                &lt;artifactId&gt;groovy-all&lt;/artifactId&gt;
            &lt;/dependency&gt;
        &lt;/dependencies&gt;
</code></pre>

<p>Wrap it with a bat or a shell and it will print the data to stdout.</p>
"
"25529684","<p>Generally we want to add images, txt, doc and etc files inside our Java project and specific folder such as /images.
I found in search that in JAVA, we can get path from Root to folder which we specify as,</p>

<pre><code>String myStorageFolder= ""/images""; // this is folder name in where I want to store files.

String getImageFolderPath= request.getServletContext().getRealPath(myStorageFolder);
</code></pre>

<p>Here, request is object of HttpServletRequest. It will get the whole path from Root to /images folder. You will get output like,</p>

<blockquote>
  <p>C:\Users\STARK\Workspaces\MyEclipse.metadata.me_tcat7\webapps\JavaProject\images</p>
</blockquote>
"
"5242324","<p>Yes, there is only way to exit the thread is <code>Thread.Interrup</code>. Also, check the below conditions on exiting your thread.</p>

<blockquote>
  <ol>
  <li>Is your thread is main thread or Parent thread for some other threads?
  If yes, Please prone child's resources
  before exiting the parent.</li>
  <li>If you are running more than a thread in parallel manner, make sure
  all your threads are mutually
  exclusive in order to avoid dead
  locks.</li>
  </ol>
</blockquote>

<p>Use the below code:</p>

<pre><code>public void run() {
    while(!isInterrupted()) {
        // doStuff
    try {
    } catch (InterruptedException ex) {
        interrupt();
    }
}
</code></pre>

<p>HTH</p>
"
"13665519","<p>A single line can do the job I think. </p>

<pre><code>Math.pow(bigInt.doubleValue(), (1/n));
</code></pre>
"
"26288246","<p><code>DateMidnight</code> is now deprecated.  Instead you can do:</p>

<pre><code>LocalDate firstOfMonth = new LocalDate(date).withDayOfMonth(1);
LocalDate lastOfMonth = firstOfMonth.plusMonths(1).minusDays(1);
</code></pre>

<p>If you know the time zone use <code>new LocalDate(date, timeZone)</code> instead for greater accuracy.</p>

<p>You can also do <code>.dayOfMonth().withMinimumValue()</code> instead of <code>.withDayOfMonth(1)</code></p>

<p>EDIT:</p>

<p>This will give you <code>12/1/YYYY 00:00</code> and <code>12/31/YYYY 00:00</code>.  If you rather the last of the month be actually the first of the next month (because you are doing a between clause), then remove the <code>minusDays(1)</code> from the lastOfMonth calculation</p>
"
"13715422","<p>c / c ++ (long * long):</p>

<pre><code>const int64_ w = (int64_) a * (int64_) b;    
if ((long) (w &gt;&gt; sizeof(long) * 8) != (long) w &gt;&gt; (sizeof(long) * 8 - 1))
    // overflow
</code></pre>

<p>java (int * int, sorry I didn't find int64 in java):</p>

<pre><code>const long w = (long) a * (long) b;    
int bits = 32; // int is 32bits in java    
if ( (int) (w &gt;&gt; bits) ！= (int) (w &gt;&gt; (bits - 1))) {
   // overflow
}
</code></pre>

<p>1.save the result in large type (int*int put the result to long, long*long put to int64)</p>

<p>2.cmp  result >> bits and result >> (bits - 1) </p>
"
"4000354","<p>I would also go with the object answer by Ed.C, but this seems to work:</p>

<pre><code>@SuppressWarnings(""unchecked"")
protected Vector&lt;Person&gt;[][][] position = new Vector[10][10][10];
</code></pre>

<p>ie, you skip the diamond on the right.</p>
"
"26613070","<p>I had a problem similar to your, and I used an <code>ExecutorCompletionService</code> that works with an <code>Executor</code> to complete collections of tasks.
Here is an extract from java.util.concurrent API, since Java7:</p>

<blockquote>
  <p>Suppose you have a set of solvers for a certain problem, each returning a value of some type Result, and would like to run them concurrently, processing the results of each of them that return a non-null value, in some method use(Result r). You could write this as:</p>
</blockquote>

<pre><code>void solve(Executor e, Collection&lt;Callable&lt;Result&gt;&gt; solvers)
        throws InterruptedException, ExecutionException {
    CompletionService&lt;Result&gt; ecs = new ExecutorCompletionService&lt;Result&gt;(e);
    for (Callable&lt;Result&gt; s : solvers)
        ecs.submit(s);
    int n = solvers.size();
    for (int i = 0; i &lt; n; ++i) {
        Result r = ecs.take().get();
        if (r != null)
            use(r);
    }
}
</code></pre>

<p>So, in your scenario, every task will be a single <code>Callable&lt;Result&gt;</code>, and tasks will be grouped in a <code>Collection&lt;Callable&lt;Result&gt;&gt;</code>.</p>

<p>Reference:
<a href=""http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ExecutorCompletionService.html"" rel=""nofollow"">http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ExecutorCompletionService.html</a></p>
"
"4014112","<p>This is the actual String.hashCode() implementation:</p>

<pre><code>public int hashCode() {
int h = hash;    // hash is a field in String
if (h == 0) {
    int off = offset;
    char val[] = value;
    int len = count;

        for (int i = 0; i &lt; len; i++) {
            h = 31*h + val[off++];
        }
        hash = h;
    }
    return h;
}
</code></pre>

<p>So:</p>

<ol>
<li>Strings are immutable, you can not change it's value. You can only create a new String.</li>
<li>String hashcode gets calculated on first use of String.hashCode(). Later invocations return precalculayed value:</li>
<li><strong>YES, it will be faster.</strong> If you call .hashCode() then subsequent comparisons will be faster for a tiny amount of time of one-time calculating hachcode. The question is if this is substantial. Do your own benchmark. </li>
</ol>
"
"13990771","<p>A more generic way could also be using the Object class so that you aren't type bound, but be careful when using:</p>

<pre><code>Object[][] table;
</code></pre>
"
"5121267","<p>do not <code>synchronized(thread)</code>, don't do it, do not <code>synchronized(thread)</code>.. repat: no <code>synchronized(thread)</code> :)</p>

<p>And if you need to wait for the thread 'b' to finish, use b.join(), now your code is free to hang in b.wait()</p>

<p>--</p>

<p>Hopefully the source below can grant you an insight while sync(thread)/notify() I consider bad practice. (cut-cut)</p>

<p>Enjoy</p>

<hr>

<p><strong>To proceeed below you make sure you have accepted Oracle's License aggreement, found there:</strong>
<a href=""https://cds.sun.com/is-bin/INTERSHOP.enfinity/WFS/CDS-CDS_Developer-Site/en_US/-/USD/ViewLicense-Start?LicenseUUID=7HeJ_hCwhb4AAAEtmC8ADqmR&amp;ProductUUID=pGqJ_hCwj_AAAAEtB8oADqmS&amp;cnum=&amp;evsref=&amp;sln="" rel=""nofollow"">https://cds.sun.com/is-bin/INTERSHOP.enfinity/WFS/CDS-CDS_Developer-Site/en_US/-/USD/ViewLicense-Start?LicenseUUID=7HeJ_hCwhb4AAAEtmC8ADqmR&amp;ProductUUID=pGqJ_hCwj_AAAAEtB8oADqmS&amp;cnum=&amp;evsref=&amp;sln=</a></p>

<p>Java sources (incl), called in init(), effectively called by any java c-tor, since java 1.5</p>

<pre><code>private static **synchronized int** nextThreadNum() {
return threadInitNumber++;
}
</code></pre>

<p>//join (the method w/ nanos only increase millis by one, if nanos>500000, millis==0 and nanos>0</p>

<pre><code>public final **synchronized** void join(long millis) 
throws InterruptedException {
long base = System.currentTimeMillis();
long now = 0;

if (millis &lt; 0) {
        throw new IllegalArgumentException(""timeout value is negative"");
}

if (millis == 0) {
    while (isAlive()) {
    wait(0);
    }
} else {
    while (isAlive()) {
    long delay = millis - now;
    if (delay &lt;= 0) {
        break;
    }
    wait(delay);
    now = System.currentTimeMillis() - base;
    }
}
}


public **synchronized** void start() {
    /**
 * This method is not invoked for the main method thread or ""system""
 * group threads created/set up by the VM. Any new functionality added 
 * to this method in the future may have to also be added to the VM.
 *
 * A zero status value corresponds to state ""NEW"".
     */
    if (threadStatus != 0)
        throw new IllegalThreadStateException();
    group.add(this);
    start0();
    if (stopBeforeStart) {
    stop0(throwableFromStop);
}
}
</code></pre>

<p>//stop1 is called after stop ensures proper priviledges</p>

<pre><code>private final **synchronized** void stop1(Throwable th) {
SecurityManager security = System.getSecurityManager();
if (security != null) {
    checkAccess();
    if ((this != Thread.currentThread()) ||
    (!(th instanceof ThreadDeath))) {
    security.checkPermission(SecurityConstants.STOP_THREAD_PERMISSION);
    }
}
    // A zero status value corresponds to ""NEW""
if (threadStatus != 0) {
    resume(); // Wake up thread if it was suspended; no-op otherwise
    stop0(th);
} else {

        // Must do the null arg check that the VM would do with stop0
    if (th == null) {
    throw new NullPointerException();
    }

        // Remember this stop attempt for if/when start is used
    stopBeforeStart = true;
    throwableFromStop = th;
    }
}
</code></pre>
"
"5121354","<p><code>Constructor</code> has to be created on a as needed basis. A default <code>Constructor</code> is always provided by the compiler if no other <code>Constructor</code> is created.</p>
"
"27193860","<pre><code>We can move all zeros in order of  o(n). The idea is to move all the number along with their corresponding positions and put zero after shifting the numbers on the newly available indexes.
   private static int[] reArrangeNonZeroElementInBack(int arr[]) {
            int count = arr.length - 1;
            int len = arr.length;
            if (len == 0)
                return arr;
            for (int i = len - 1; i &gt;= 0; i--) {
                if (arr[i] != 0) {
                    arr[count--] = arr[i];

                }
            }
            for (; count &gt;= 0;) {
                arr[count--] = 0;``

            }
            return arr;
        }
</code></pre>
"
"14378516","<p>There is some option to achieve the same, Follow the below points.</p>

<p>1) Open Macro explorer:</p>

<p>2) Create new macro:</p>

<p>3) Name it ""OutlineRegions"" (Or whatever you want)</p>

<p>4) Right Click on the ""OutlineRegions"" (Showing on Macro Explorer) select the ""Edit"" option and paste the following VB code into it:</p>

<pre><code>    Imports System
Imports EnvDTE
Imports EnvDTE80
Imports EnvDTE90
Imports EnvDTE90a
Imports EnvDTE100
Imports System.Diagnostics
Imports System.Collections

Public Module OutlineRegions

    Sub OutlineRegions()
        Dim selection As EnvDTE.TextSelection = DTE.ActiveDocument.Selection

        Const REGION_START As String = ""//#region""
        Const REGION_END As String = ""//#endregion""

        selection.SelectAll()
        Dim text As String = selection.Text
        selection.StartOfDocument(True)

        Dim startIndex As Integer
        Dim endIndex As Integer
        Dim lastIndex As Integer = 0
        Dim startRegions As Stack = New Stack()

        Do
            startIndex = text.IndexOf(REGION_START, lastIndex)
            endIndex = text.IndexOf(REGION_END, lastIndex)

            If startIndex = -1 AndAlso endIndex = -1 Then
                Exit Do
            End If

            If startIndex &lt;&gt; -1 AndAlso startIndex &lt; endIndex Then
                startRegions.Push(startIndex)
                lastIndex = startIndex + 1
            Else
                ' Outline region ...
                selection.MoveToLineAndOffset(CalcLineNumber(text, CInt(startRegions.Pop())), 1)
                selection.MoveToLineAndOffset(CalcLineNumber(text, endIndex) + 1, 1, True)
                selection.OutlineSection()

                lastIndex = endIndex + 1
            End If
        Loop

        selection.StartOfDocument()
    End Sub

    Private Function CalcLineNumber(ByVal text As String, ByVal index As Integer)
        Dim lineNumber As Integer = 1
        Dim i As Integer = 0

        While i &lt; index
            If text.Chars(i) = vbCr Then
                lineNumber += 1
                i += 1
            End If

            i += 1
        End While

        Return lineNumber
    End Function
End Module
</code></pre>

<p>5) Save the macro and close the editor.</p>

<p>6) Now let's assign shortcut to the macro. Go to Tools->Options->Environment->Keyboard and search for your macro in ""show commands containing"" textbox (Type: Macro into the text box, it will suggest the macros name, choose yours one.)</p>

<p>7) now in textbox under the ""Press shortcut keys"" you can enter the desired shortcut. I use Ctrl+M+N.</p>

<p>Use: </p>

<pre><code>return
{
//Properties
//#region
Name:null,
Address:null
//#endregion
}
</code></pre>

<p>8) Press the saved shortcut key</p>

<p>See below result: </p>

<p><img src=""http://i.stack.imgur.com/c8gtK.png"" alt=""enter image description here""></p>
"
"27479250","<p>whats up with the hassle if you can just do this </p>

<pre><code>word = (String) word.subSequence(0, word.length() -1);
</code></pre>

<p>this returns new String without the last part of a String.</p>
"
"5134587","<p>You can't ""convert"" a 1D array to a 2D array, but an array can be multi-dimensionnal when you declare it.</p>

<pre><code>int myArray2d[][] = new int[10][3]
</code></pre>
"
"27632909","<p>Beginners needs practical examples. so try the following code.</p>

<pre><code>public class Not_a_Number {

public static void main(String[] args) {
    // TODO Auto-generated method stub

    String message = ""0.0/0.0 is NaN.\nsimilarly Math.sqrt(-1) is NaN."";        
    String dottedLine = ""------------------------------------------------"";     

    Double numerator = -2.0;
    Double denominator = -2.0;      
    while (denominator &lt;= 1) {
        Double x = numerator/denominator;           
        Double y = new Double (x);
        boolean z = y.isNaN();
        System.out.println(""y =  "" + y);
        System.out.println(""z =  "" + z);
        if (z == true){
            System.out.println(message);                
        }
        else {
            System.out.println(""Hi, everyone""); 
        }
        numerator = numerator + 1;
        denominator = denominator +1;
        System.out.println(dottedLine);         
    } // end of while

} // end of main

} // end of class
</code></pre>
"
"14705779","<pre><code>package com.appspot.x19290;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

public class UnixCheck {
    public static void main(String[] args) {
        UnixCheck s = UnixCheck.S;
        String isUnix = s.unix ? ""is Unix"" : ""not Unix"";
        try {
            System.out.println(isUnix + "", devnull: "" + s.devnull.getPath());
        } catch (NullPointerException e) {
            System.out.println(isUnix + "", devnull: unknown"");
        }
    }

    public static final UnixCheck S = new UnixCheck();
    public static final UnixCheck TEST = new UnixCheck(true);

    public final boolean unix;
    public final File devnull;

    private UnixCheck() {
        this(false);
    }

    private UnixCheck(boolean testing) {
        String path;
        path = testing ? ""/&lt;dev&gt;/&lt;no&gt;&lt;such&gt;&lt;null&gt;&lt;device&gt;"" : ""/dev/null"";
        File devnull = devnullOrNone(path);
        if (devnull == null) {
            this.unix = false;
            path = testing ? ""&lt;no&gt;&lt;such&gt;&lt;null&gt;&lt;device&gt;"" : ""nul"";
            this.devnull = devnullOrNone(path);
        } else {
            this.unix = true;
            this.devnull = devnull;
        }
    }

    private static File devnullOrNone(String name) {
        File file = new File(name);
        if (file.isFile())
            return null;
        if (file.isDirectory())
            return null;
        try {
            FileInputStream i = new FileInputStream(file);
            try {
                i.read();
            } finally {
                i.close();
            }
        } catch (IOException e) {
            return null;
        }
        return file;
    }
}
</code></pre>
"
"4061990","<p>yup! <code>setLength(0)</code> is a great idea! that's what its for. anything quicker would be to discard the <code>stringBuffer</code> &amp; make a new one. its faster, can't say anything about it being memory efficient :)</p>
"
"27989342","<p>I realize this is an old thread but here is a quick and dirty way to do it:</p>

<pre><code>import java.io.File;
import java.util.Arrays;
import java.util.Collections;

public class Shuffle {
   public static void main(String[] argv) 
   throws Exception {

      File dir = new File(""."");
      String[] children = dir.list();
      Collections.shuffle(Arrays.asList(children));
      System.out.println(children[0]);
   }   
}
</code></pre>
"
"5332079","<p>Something like this:</p>

<pre><code>return new Pair &lt;Integer, Boolean&gt; (newStamina, bear.isAlive());
</code></pre>

<p>Not so good: return 2 ints, one representing the bool: </p>

<pre><code>return new int [] {newStamina, bear.isAlive() ? 1 : 0};
</code></pre>
"
"5159328","<p>use JOptionPane :</p>

<pre><code>int res = JOptionPane.showConfirmDialog(null,""Do you want to continue ?"");
if (int == 0){
   // code for continue
}
else {

}
</code></pre>
"
"28373814","<p>I was looking for te same solution and came up with simply use an argument so when i run my program from comandline the args differs in length</p>

<pre><code>if(args.length &gt; 0) {
    System.out.println(""command line mode"");
}
</code></pre>
"
"5166046","<pre><code>while (t1.isAlive()) {
  try {
    Thread.currentThread().sleep();
  }
  catch (InterruptedException e) {
    //check again
  }
}
initCache();
</code></pre>

<p>That should do it. Although actually the <code>t1.join()</code> method is a hell of a lot simpler.</p>
"
"15523953","<p>In case you are into functional this is a function written in Scala showing how you could copy an input stream to an output stream using only vals (and not vars).</p>

<pre><code>def copyInputToOutputFunctional(inputStream: InputStream, outputStream: OutputStream,bufferSize: Int) {
  val buffer = new Array[Byte](bufferSize);
  def recurse() {
    val len = inputStream.read(buffer);
    if (len &gt; 0) {
      outputStream.write(buffer.take(len));
      recurse();
    }
  }
  recurse();
}
</code></pre>

<p><em>Note that this is not recommended to use in a java application with little memory available because with a recursive function you could easily get a stack overflow exception error</em></p>
"
"5358428","<p>Does Clojure count because it runs on the JVM?</p>

<pre><code>(range 1 101)
</code></pre>

<p>or:</p>

<pre><code>(take 100 (iterate inc 1))
</code></pre>

<p>Both work directly at the REPL (which includes an implied print).</p>
"
"28941119","<p>I used Strings and i converted initially the integer to string .Then i used the reverse method!i found the reverse of the number in String and then i converted the string back to integer!!Here is the programm!</p>

<pre><code>importjava.util.*;

public class Panathinaikos{

   public static void my_try()
{
    Scanner input = new Scanner(System.in) ;
    System.out.println(""Enter the number you want to be reversed"" ) ;
    int number = input.nextInt() ;
    String sReverse = Integer.toString(number) ;
    String reverse =new StringBuffer(sReverse).reverse().toString() ;
    int Reversed = Integer.parseInt(reverse) ;
    System.out.print(""The number "" + number+ "" reversed is "" + Reversed) ;
}
</code></pre>

<p>}</p>
"
"29201883","<pre><code>/apps/jboss-eap-6.2/bin/standalone.sh -version
</code></pre>

<p>Sample output:</p>

<pre><code>=========================================================================

  JBoss Bootstrap Environment

  JBOSS_HOME: /apps/jboss-eap-6.2

  JAVA: /apps/jdks/jdk_1.7/bin/java

  JAVA_OPTS:  -server -XX:+UseCompressedOops -Xms1303m -Xmx1303m -XX:MaxPermSize=256m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true

=========================================================================

21:07:20,380 INFO  [org.jboss.modules] (main) JBoss Modules version 1.3.3.Final-redhat-1
21:07:22,206 INFO  [stdout] (main) JBoss EAP 6.2.2.GA (AS 7.3.2.Final-redhat-2)
</code></pre>
"
"4109048","<p>You could use reflection, and do something like this:</p>

<pre><code>      Method m = clazz.getDeclaredMethod(""valueOf"", String.class);
      T str = (T) m.invoke(null, from);
      return str;
</code></pre>

<p>Untested and possible slow.</p>
"
"29219475","<p>Besides executeUpdate() on the parentheses, you must also add a variable to use an SQL statement.</p>

<p>For example:</p>

<pre><code>PreparedStatement pst =  connection.prepareStatement(sql);
int numRowsChanged = pst.executeUpdate(sql);
</code></pre>
"
"29702965","<p>You can try the free Lemmatizer API here: <a href=""http://twinword.com/lemmatizer.php"" rel=""nofollow"">http://twinword.com/lemmatizer.php</a></p>

<p>Scroll down to find the Lemmatizer endpoint.</p>

<p>This will allow you to get ""dogs"" to ""dog"", ""abilities"" to ""ability"".</p>

<p>If you pass in a POST or GET parameter called ""text"" with a string like ""walked plants"":</p>

<pre><code>// These code snippets use an open-source library. http://unirest.io/java
HttpResponse&lt;JsonNode&gt; response = Unirest.post(""[ENDPOINT URL]"")
.header(""X-Mashape-Key"", ""[API KEY]"")
.header(""Content-Type"", ""application/x-www-form-urlencoded"")
.header(""Accept"", ""application/json"")
.field(""text"", ""walked plants"")
.asJson();
</code></pre>

<p>You get a response like this:</p>

<pre><code>{
  ""lemma"": {
    ""plant"": 1,
    ""walk"": 1
  },
  ""result_code"": ""200"",
  ""result_msg"": ""Success""
}
</code></pre>
"
"16048274","<p>Try <strong>LinkedHashMap</strong>, sample:</p>

<pre><code>Map&lt;String,String&gt; map = new LinkedHashMap&lt;String,String&gt;();    
map.put('1','linked');map.put('1','hash');    
map.put('2','map');map.put('3','java');.. 
</code></pre>

<p>output:   </p>

<blockquote>
  <p>keys: 1,1,2,3</p>
  
  <p>values: linked,hash, map, java</p>
</blockquote>
"
"29894791","<p><code>ArithmeticUtils.factorial</code> is apparently deprecated now. Please try  <code>CombinatoricsUtils.binomialCoefficientDouble(n,r)</code></p>
"
"5199710","<p>There is a performance impact for allocating the integer. However, it is so ridiculously small that I wouldn't bother doing it different. A well-known saying goes ""premature optimization is the root of all evil"". </p>

<p>EDIT: tested it with <code>System.nanoTime()</code> after Jon's comment. Not one bit of difference whether you ""pre-declare"" it or not. So I was wrong about there being any impact.</p>
"
"4125384","<p>Try this code:</p>

<pre><code>public static void main(String... args) {
    JFrame f = new JFrame(""Test"");
    f.setVisible( true );
}
</code></pre>
"
"30208961","<pre><code>package main;

public class A {
public void f1(String str) {
    System.out.println(""A.f1(String)"");
    if (this instanceof B)
        new A().f1(1, str);
    else
        this.f1(1, str);
}

public void f1(int i, String str) {
    System.out.println(""A.f1(int, String)"");
}

}

class B extends A {
@Override
public void f1(String str) {
    System.out.println(""B.f1(String)"");
    super.f1(str);
}

@Override
public void f1(int i, String str) {
    System.out.println(""B.f1(int, String)"");
    super.f1(i, str);
}

public static void main(String[] args) {
A a = new B();
    a.f1(""Hello"");
}
}
</code></pre>
"
"4144315","<p>You can do a search in Eclipse.</p>

<p>All you need to search for is <code>/*</code> and <code>//</code></p>

<p>However, you will only find the files which contain that expression, and not the actual content which I believe you are after.</p>

<p>However, if you are using <code>Linux</code> you can easily get all the comments with a one liner.</p>
"
"17392631","<p>This post will give you description about how you can run your project using Apache Tomcat Server.</p>

<p>I would like to define these terms before proceeding:</p>

<p>Apache Tomcat Server(Jakarta Tomcat): It is an open source web server and servlet container developed by the Apache Software Foundation (ASF). It implements the Java Servlet and the JavaServer Pages (JSP) specifications and provides a pure Java HTTP web server environment for java code to run.</p>

<p>JavaServerPages(JSP): It is a technology that helps in creating dynamically generated web pages.</p>

<p><strong>Step1</strong></p>

<p>Install Java.</p>

<p><strong>Step2</strong></p>

<p>Install Apache Tomcat</p>

<p>At the time of installation, it will by-default recognize JRE path.</p>

<p>(under installed java location directory)</p>

<p><strong>Step3</strong></p>

<p>Now Go-To:</p>

<p>Start</p>

<p>Programs</p>

<p>APACHE TOMCAT</p>

<p>MONITOR TOMCAT</p>

<p><strong>Step4</strong></p>

<p>An icon will appear on the taskbar, this icon will automatically appear after following </p>

<p>above step:</p>

<p><strong>Step5</strong></p>

<p>Click on that icon and START TOMCAT, you can see the following dialog box:</p>

<p><strong>Step6</strong></p>

<p>Now open Mozilla Firefox(or any other browser)</p>

<p><strong>Step7</strong></p>

<p>Type<br>
        <code>[http://localhost:8080/][1]</code>  on address bar and press enter.</p>

<p>The same can be seen here:</p>

<p><strong>Step8</strong></p>

<p>It will show tomcat, as shown in above window.</p>

<p>(if not, then try again, may be a problem in installation or you’re not following above </p>

<p>steps correctly</p>

<p><strong>Step9</strong></p>

<p>Now, go to:</p>

<p>C:drive</p>

<p>Programs Files</p>

<p>Apache Software Foundation</p>

<p>tomcat</p>

<p>web-apps</p>

<p>(or navigate where you have installed APACHE TOMCAT)</p>

<p><strong>Step10</strong></p>

<p>Open web-apps and “copy your project” or “make new folder”, which you want to run in JSP.</p>

<p>Example: amit2012PROJECT</p>

<p>Now, go back :</p>

<p>Tomcat</p>

<p>Root</p>

<p>Copy Web-inf from root</p>

<p>Paste this “web-inf” in your project folder i.e. amit2012PROJECT</p>

<p><strong>Step11</strong></p>

<p>Create a text file and name it as first.jsp, use the code shown below:</p>

<pre><code>&lt;html&gt;
&lt;head&gt;
 &lt;title&gt;blog post:ApacheTomcatServer&lt;/title&gt;
 &lt;/head&gt;
 &lt;body&gt;

 &lt;%-- START --%&gt;
  &lt;%
   out.println(""UserName = amit2012, "");
   out.println(""Running first program in JSP."");
 %&gt;
 &lt;%-- END --%&gt;

 &lt;/body&gt;
 &lt;/html&gt;
</code></pre>

<p>It includes HTML tags and encloses a JSP scriptlet which is a fragment of Java code           that is run when the user requests the page.
<strong>Step12</strong></p>

<p>Now for running your folder [ Eg. amit2012PROJECT as shown above]</p>

<pre><code>[http://localhost:8080/][2]foldername.extension in any WebBrowser i.e:

[http://localhost:8080/amit2012PROJECT/first.jsp][3]
</code></pre>

<p>The Project will run successfully</p>

<p>Now, you can successfully try running JSP with ApacheTomcatServer.</p>
"
"5474949","<p>Why don't you use <code>DecimalFormat</code>?</p>

<pre><code>DecimalFormat f = new DecimalFormat();
f.setMaximumFractionDigits( 2 );
System.out.println(f.format( 0.126 )); //output is 0.13
</code></pre>
"
"17581092","<p>One that I use often:</p>

<pre><code> Integer.parseInt(""1234"");
</code></pre>

<p>Point is, there are plenty of ways to do this, all equally valid. As to which is most optimum/efficient, you'd have to ask someone else.</p>
"
"17996434","<p>Convert from a 24-bit image to a 48-bit one is rather straightforward. Because each channel in the 24 bit image is the MSB of the 48-bit image's corresponding channel, you only need to pad one zero byte between each other.</p>

<blockquote>
  <p>RGB → R0G0B0</p>
</blockquote>

<pre><code>char img24[PIXELCOUNT*3];
short img48[PIXELCOUNT*3];
unsigned int i;

for (i = 0; i &lt; PIXELCOUNT; i++)
    img48[i] = img24[i];
</code></pre>

<p>or</p>

<pre><code>char img24[PIXELCOUNT*3], img48[PIXELCOUNT*6];
unsigned int i;

for (i = 0; i &lt; PIXELCOUNT; i++)
{
    img48[i*2] = img24[i];
    img48[i*2 + 1] = 0;
}
</code></pre>
"
"18301793","<pre><code> import java.util.*;
 import java.io.*;
 import java.util.*;
 class WordFrequencyCountTest
 {
 public static void main( String args[])
 {
System.out.println("" enter the file name"");
Scanner sc = new Scanner(System.in);
String fname= sc.next();    
     File f1 = new File(fname);


    if(!f1.exists())
    {
        System.out.println("" Source file doesnot exists"");
        System.exit(0);
    }
    else{
        try{                
            FileReader fis = new FileReader(f1);
            BufferedReader br = new BufferedReader(fis);
            String str = """";
            int count=0;  
        Map&lt;String, Integer&gt; map = new TreeMap&lt;String, Integer&gt;(); 
            while((str = br.readLine()) != null )
            {
                String[] strArray = str.split(""\\s"");
                count=1;
                for(String token : strArray)   // iteration of strArray []
                {                       
                if(map.get(token)!=null )
            {
                        count=map.get(token);
                        count++;
                        map.put(token, count);
                        count=1;
                    }else{
                        map.put(token, count);

                    }
                }
            }

            Set set=map.entrySet();
            Iterator itr = set.iterator();    
            System.out.println(""========"");

            while(itr.hasNext())
            {
                Map.Entry entry = (Map.Entry)itr.next();

                System.out.println( entry.getKey()+ "" ""+entry.getValue());
            }               
            fis.close();            
        }catch(Exception e){}
           }
        }
    }
</code></pre>
"
"5499842","<pre><code>if(string != null)
</code></pre>

<p>or</p>

<pre><code>if(string.length() == 0)
</code></pre>

<p>or</p>

<pre><code>if(("""").equals(string))
</code></pre>
"
"5499871","<p>u can try this</p>

<pre><code>if(string != null)
</code></pre>
"
"5503094","<p>Recursive answer just for the hell of it... also I wouldn't post this is there weren't already valid answers. Make an attempt and post what you tried.</p>

<pre><code>public boolean array220(int[] nums, int index){
    if(index &gt;= nums.length - 1)
        return false;
    if(nums[index] * 10 == nums[index + 1]){
        return true;
    } else {
        return array220(nums, ++index);
    }
}
</code></pre>
"
"4271588","<p>You can should try using the submit function and then watching the Future's that are returning checking them to see if the thread has finished.</p>

<p>Terminate doesn't return until there is a shutdown.</p>

<p>Future  submit(Runnable task)
          Submits a Runnable task for execution and returns a Future representing that task.</p>

<p>isTerminated()
          Returns true if all tasks have completed following shut down.</p>

<p>Try this...</p>

<pre><code>public static void main(String[] args) {
    long lDateTime = new Date().getTime();
    parseArgs(args);
    List&lt;Thread&gt; threads = new ArrayList&lt;Thread&gt;();
    List&lt;Future&gt; futures = new ArrayList&lt;Future&gt;();

    ExecutorService executor = Executors.newFixedThreadPool(NTHREADS);
    for (int i = 0; i &lt; (N / RANGESIZE); i++) {
        Runnable worker = new MyRunnable(i * RANGESIZE + 1, (i + 1) * RANGESIZE);
        futures.add(executor.submit(worker));
    }
    boolean done = false;
    while (!done) {
        for(Future future : futures) {
            done = true;
            if( !future.isDone() ) {
                done = false;
                break;
            }
        }
        try {
            Thread.sleep(100);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }

    System.out.println(""Finished all threads"");
    long fDateTime = new Date().getTime();
    System.out.println(""time in milliseconds for checking to "" + N + "" is "" +
            (fDateTime - lDateTime) +
            "" ("" + N / (fDateTime - lDateTime) + "" per ms)"");
    System.exit(0);
}
</code></pre>
"
"4277278","<p>You can let the thread to sleep for 1 second:</p>

<pre><code>Thread.sleep(1000); //1000 milliseconds = 1 second
</code></pre>

<p>If you're using Swing, best to use <strong>Swing timer</strong>: <a href=""http://download.oracle.com/javase/tutorial/uiswing/misc/timer.html"" rel=""nofollow"">http://download.oracle.com/javase/tutorial/uiswing/misc/timer.html</a></p>

<p>In your case, maybe you should use <strong>Timer</strong>: <a href=""http://download.oracle.com/javase/6/docs/api/javax/swing/Timer.html"" rel=""nofollow"">http://download.oracle.com/javase/6/docs/api/javax/swing/Timer.html</a></p>
"
"4280370","<p>No it won't work, as explained in the other posts. But you could do </p>

<pre><code>if (turtles.get(h).getX() - turtles.get(g).getX() + 450 == 0) 
</code></pre>
"
"18846486","<p>If you only want to use JLabel than you can try this approach,</p>

<p>just display the number of characters you want to display on label using substring method.</p>

<pre><code>public void setLabel(String label){
    String dispLabel=label.substring(0, numOfCharacter);
    labelComponent.setText(dispLabel);
}
</code></pre>
"
"5351477","<p>More complete and more correct code - object is important since it change class model - contructor in this case is not since not input parameters - python have faster initialization in this case.</p>

<p>Have a fun ...</p>

<pre><code>class Bicycle(object):
  cadence = 0
  speed = 0
  gear = 1

  def changeCadence(self, newValue):
    self.cadence = newValue

  def changeGear(self, newValue):
    self.gear = newValue

  def speedUp(self, increment):
    speed += increament

  def applyBrakes(self, descrement):
    speed -= decreament

  def printStates(self):
    print 'cadence: %s speed: %s gear: %s' % (self.cadence, self.speed, self.gear)

if __name__ == ""__main__"":
  # Create two different Bicycle objects
  bike1 = Bicycle()
  bike2 = Bicycle()

  # Invoke methods on those objects
  bike1.changeCadence(50)
  bike1.speedUp(10)
  bike1.changeGear(2)
  bike1.printStates()

  bike2.changeCadence(50)
  bike2.speedUp(10)
  bike2.changeGear(2)
  bike2.changeCadence(40)
  bike2.speedUp(10)
  bike2.changeGear(3)
  bike2.printStates()
</code></pre>
"
"19238577","<p>I did it this way. it's easy :)</p>

<pre><code>Date d1 = jDateChooserFrom.getDate();
Date d2 = jDateChooserTo.getDate();

Calendar day1 = Calendar.getInstance();
day1.setTime(d1);

Calendar day2 = Calendar.getInstance();
day2.setTime(d2);

int from = day1.get(Calendar.DAY_OF_YEAR);
int to = day2.get(Calendar.DAY_OF_YEAR);

int difference = to-from;
</code></pre>
"
"4319559","<p>One option is to use classes like java.lang.Integer, then you're not passing a primitive at all.</p>

<p>On the other hand, you can just use code like:</p>

<pre><code>int a = 5;
a = func(a);
</code></pre>

<p>and have func return the modified value.</p>
"
"19627286","<p>This is the method which i used to convert the integer to string.Correct me if i did wrong.</p>

<pre><code>/**
 * @param a
 * @return
 */
private String convertToString(int a) {

    int c;
    char m;
    StringBuilder ans = new StringBuilder();
    // convert the String to int
    while (a &gt; 0) {
        c = a % 10;
        a = a / 10;
        m = (char) ('0' + c);
        ans.append(m);
    }
    return ans.reverse().toString();
}
</code></pre>
"
"5562107","<p>When you use curly braces to enclose a block of code, you don't need semicolon:</p>

<pre><code>namespace Some
{
  void fun(int i)
  { 
    while(i != 0)
    {
      cout&lt;&lt;""i = ""&lt;&lt;i&lt;&lt;endl;
      i --;
    }  // semicolon not needed
  }  // semicolon not needed
} // semicolon not needed
</code></pre>

<p>In other cases, you need semicolon (like initialization, declaration etc.):</p>

<pre><code>struct A {
// ... declare members
}; // declaration; put semicolon
int a[] = {0, 1, 2};  // initialization; put semicolon
</code></pre>
"
"19702577","<p>the following method reverses the order of bits in a byte value:</p>

<pre><code>public static byte reverseBitOrder(byte b) {
    int converted = 0x00;
    converted ^= (b &amp; 0b1000_0000) &gt;&gt; 7;
    converted ^= (b &amp; 0b0100_0000) &gt;&gt; 5;
    converted ^= (b &amp; 0b0010_0000) &gt;&gt; 3;
    converted ^= (b &amp; 0b0001_0000) &gt;&gt; 1;
    converted ^= (b &amp; 0b0000_1000) &lt;&lt; 1;
    converted ^= (b &amp; 0b0000_0100) &lt;&lt; 3;
    converted ^= (b &amp; 0b0000_0010) &lt;&lt; 5;
    converted ^= (b &amp; 0b0000_0001) &lt;&lt; 7;

    return (byte) (converted &amp; 0xFF);
}
</code></pre>
"
"19860885","<p>In Eclipse, under <code>Java Build path &gt; Order and export</code>, select <code>export jna.jar</code>.</p>
"
"19872458","<p>Just use .intValue()
If your BigInteger is named BigValue2, then it would be BigValue2.intValue()</p>

<p>So to answer your question, it's</p>

<pre><code>BigValue1.pow(BigValue2.intValue())
</code></pre>
"
"4338279","<p>Here's the closest I can see to doing what you want. This makes the big assumptions that you know the class at the time you write the code and that all the objects in the list are the same class, i.e. no subclasses. I'm sure this could be made more sophisticated to relieve the assumption about no subclasses, but I don't see how in Java you could get around the assumption of knowing the class at coding time.</p>

<pre><code>package play1;

import java.util.*;

public class Play
{
  public static void main (String args[])
  {
    List&lt;String&gt; list=new ArrayList&lt;String&gt;();
    list.add(""Hello"");
    list.add(""Shalom"");
    list.add(""Godspidanya"");

    ArrayTool&lt;String&gt; arrayTool=new ArrayTool&lt;String&gt;();
    String[] array=arrayTool.arrayify(list);

    for (int x=0;x&lt;array.length;++x)
    {
      System.out.println(array[x]);
    }
  }
}
class ArrayTool&lt;T&gt;
{
  public T[] arrayify(List&lt;T&gt; list)
  {
    Class clazz=list.get(0).getClass();
    T[] a=(T[]) Array.newInstance(clazz, list.size());
    return list.toArray(a);
  }
}
</code></pre>
"
"20038248","<p>You have to upgrade android API to level 9, or use <code>String.trim().length()==0</code> or <code>String.equals("""")</code> instead, it should work for your android API level and your JDK version.</p>
"
"5994853","<p>Being new to the Struts2 framework, I recently came across the same (or very similar) error.  In my case I was using annotations within the Action class rather than the struts.xml file.</p>

<p>For example</p>

<pre><code>@Action(value=""/jsp/edit-file"",
   results={@Result(name=""success"",location=""/jsp/edit-success.jsp""),
            @Result(name=""failure"",location=""/jsp/edit-failure.jsp"")})
public String execute() { ... }
</code></pre>

<p>However when I changed the action value to include the *.action extension (see below) Struts would throw the ""SEVERE: Exception starting filter struts2"" error noted above.  </p>

<pre><code>@Action(value=""/jsp/edit-file.action"",
   results={@Result(name=""success"",location=""/jsp/edit-success.jsp""),
            @Result(name=""failure"",location=""/jsp/edit-failure.jsp"")})
public String execute() { ... }
</code></pre>

<p>The cause of this error wasn't obvious as it didn't manifest itself immediately.  Looking through the Tomcat localhost..log file I found the stacktrace for the error and was able to remedy the issue.</p>
"
"21132965","<p>You can do this:</p>

<pre><code>class MyStudentDetails{
    public static void main (String args[]){
         Scanner s = new Scanner(System.in);
         System.out.println(""Enter Your Name: "");
         String name = s.nextLine();
         System.out.println(""Enter Your Age: "");
         String age = s.nextLine();
         System.out.println(""Enter Your E-mail: "");
         String email = s.nextLine();
         System.out.println(""Enter Your Address: "");
         String address = s.nextLine();


         System.out.println(""Name: ""+name);
         System.out.println(""Age: ""+age);
         System.out.println(""E-mail: ""+email);
         System.out.println(""Address: ""+address);

    }
}
</code></pre>
"
"4431790","<p>Why dont you put the variables in request</p>

<pre><code>request.setAttribute(""string1"",rs.getString(1));
</code></pre>

<p>then call it in your jsp</p>

<pre><code>&lt;td&gt;&lt;%=request.getParameter(""string1"")%&gt;;
</code></pre>
"
"5464656","<p>You could just keep a reference to the latest entity in  a separate table (with one row). Something like:</p>

<pre><code>@Entity
public class CurrentElement {

    @OneToOne        
    private Element currentVersion;

    public static Element getCurrentVersion(EntityManager em) {
         return em.createQuery(""select x from Element x "").getSingleResult().currentVersion;
    }

    public static void setCurrentVersion(EntityManager em, Element newVersion) {
         em.remove(getCurrentVersion(em));
         CurrentElement ce = new CurrentElement();
         ce.currentVersion = newVersion;
         em.persist(ce);
    }
}
</code></pre>
"
"21227967","<p>I think that the reason behind using PrintWriter is already mentioned above but one of the important reason is you an pass a file object directly to the PrintWriter constructor which makes it easy to use it.</p>

<pre><code>File file=new File(“newfile.txt”);
PrintWriter pw=new PrintWriter(file);
</code></pre>
"
"21566270","<p>you forget a <code>)</code> and you should've <code>put System.out.println(xspacing);</code></p>

<p>fyi you can also just type <code>syso</code> and <code>ctrl spacebar</code> and it will print out the print statement for you.</p>
"
"21670770","<p>byte=<code>8 bit</code></p>

<p>short=<code>2 byte</code>=<code>16 bit</code></p>

<p>int=<code>4 byte</code> =<code>32 bit</code></p>

<p>long    =<code>8 byte</code>    =<code>64 bit</code></p>

<p>float    =<code>4 byte</code>    =<code>32 bit</code></p>

<p>double    =<code>8 byte</code>    =<code>64 bit</code></p>

<p>easy calculation:</p>

<p>2 byte    =<code>1 short</code></p>

<p>2 int    =<code>1 long</code></p>

<p>2 short    =<code>1 int</code></p>

<p>float    =<code>int</code></p>

<p>2 float    =<code>double</code></p>
"
"4457064","<p>You do not want to do this.  Every request runs in its own thread.  If the code that gets executed on a browser action modifies the list, then two requests can possibly modify the list at the same time, and corrupt the data.  That is why it is not a good idea to access static resources from a non-static context, and probably why your tool is warning you.</p>

<p>Look at this</p>

<p><a href=""http://download.oracle.com/javase/6/docs/api/index.html?java/util/concurrent/package-summary.html"" rel=""nofollow"">http://download.oracle.com/javase/6/docs/api/index.html?java/util/concurrent/package-summary.html</a></p>

<p>specifically the part about how the ArrayList is not synchronized.  Also note that the paragraph I mention has a solution, specifically</p>

<pre><code>List list = Collections.synchronizedList(new ArrayList(...));
</code></pre>

<p>Thats one way to do it.  But its still not a good idea, namely because it can be slow. If its not a commercial-grade application, and you are not dealing in high volume, you can probably get by not making it better.  If this is the type of app that only gets hit a few times per day, you can ignore the warning, with the understanding that its is <em>possible</em> that something bad will happen if two requests munge each other.</p>

<p>A better solution: Since you have database, I would just get the information from the db as you need it, i.e. as the requests come in.  You can use some caching technologies for performance.</p>

<p>The reason I don't like the Singleton Pattern idea is that even if it makes the warning go away, it doesn't address the fundamental synchronization problem, by itself.  There are thread safe <a href=""http://en.wikipedia.org/wiki/Singleton_pattern#Traditional_simple_way_using_synchronization"" rel=""nofollow"">http://en.wikipedia.org/wiki/Singleton_pattern#Traditional_simple_way_using_synchronization</a>, however, which might work in this case.</p>
"
"5497101","<p>Yes, you need a for loop:</p>

<pre><code>public static int countItems(HashMap&lt;String, ArrayList&lt;Item&gt;&gt; yourMap){
    int counter = 0;
    for(ArrayList&lt;Item&gt;&gt; list: yourMap.values()){
        counter += list.size();
    }
    return counter;
}
</code></pre>
"
"22305276","<p>I will propose even shorter and simplest answer to the problem and it contains 2 lines of code in the method (<code>import java.util.Arrays</code> is required):</p>

<pre><code>    public static int secMax(int[] num){
    Arrays.sort(num);
    temp = num[num.length-2];

    return temp;
}
</code></pre>
"
"4475962","<p>PHP is the easiest!</p>

<pre><code>$firstFile = file('file1.txt');
$secodFile = file('file2.txt');

$findKey='/article/';
$output='';

if (count($firstFile)==count($secodFile)) 
                    or die('record counts dont match');

for($i=0;$i&lt;count($firstFile);$i++)
{
    $output.=str_replace($findKey,$findKey.trim($secodFile[$i]),$firstFile[$i]);
}

file_put_contents('output.txt',$output);
</code></pre>
"
"7645148","<p>How about using java.util.Arrays?</p>

<pre><code>List&lt;String&gt; list = Arrays.asList((String[])jsonArray.toArray())
</code></pre>
"
"5539252","<p>Sender (php json encode): </p>

<pre><code>{""natip"":""127.0.0.1"",""natport"":""4446""}
</code></pre>

<p>Receiver (java json decode):</p>

<pre><code>/**
 * @comment:  I moved  all over and could not find a simple/simplicity java json
 *            finally got this one working with simple working model.
 * @download: http://json-simple.googlecode.com/files/json_simple-1.1.jar
 */

JSONObject obj = (JSONObject) JSONValue.parse(line); //line = {""natip"":""127.0.0.1"",""natport"":""4446""}
System.out.println( obj.get(""natport"") + "" "" + obj.get(""natip"") );     // show me the ip and port please      
</code></pre>

<p>Hope it helps for web developer and simple minded JSON searcher.</p>
"
"8324073","<p>I tried this for the delicious api and it worked like a charm</p>

<pre><code>import urllib2,base64
req=urllib2.Request(""https://api.del.icio.us/v1/posts/update"")
username=""Replace with your Username""
password=""Replace with your password""
base64string = base64.encodestring('%s:%s' % (username, password)).replace('\n', '')
req.add_header(""Authorization"", ""Basic %s"" % base64string) 
response=urllib2.urlopen(req)
print response.read()
</code></pre>
"
"5562579","<p><code>display</code> is not a static method inside Base. So, you have to first create an instance of Base and then call display.</p>

<pre><code>Base base = new Base();
base.display();
</code></pre>
"
"8663697","<p>my php cookie value encode function:</p>

<pre><code>&lt;?
function encode_cookie_value($value)
         {return strtr($value,
                       array_combine(str_split($tmp="",; \t\r\n\013\014""),
                                     array_map('rawurlencode', str_split($tmp))
                                    )
                      );
         }
setrawcookie('kk', encode_cookie_value('jk=jk?jk-/"":jk;jk jk,jk'));
?&gt;
</code></pre>
"
"5569946","<p>I'm not sure if it is different for unit tests, but you should be able to use onActivityResult as seen here: <a href=""http://developer.android.com/reference/android/app/Activity.html#StartingActivities"" rel=""nofollow"">StartingActivities</a>. You just start the Activity with startActivityForResult(intent, requestCode) and then use </p>

<pre><code>@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data)
</code></pre>

<p>back in the activity that used startActivityForResult.</p>
"
"8770322","<p>There is a workaround if it helps your cause. </p>

<pre><code>      @ModelAttribute(""users"")
      public Collection&lt;String&gt; getUsers(){
           return this.users;
      }
</code></pre>

<p>Here you have made it return Collection of String. Make it a Collection of User (it may be a class wrapping string representing a user, or a class with a bunch of data regarding a user). The problem happens with strings only. If the returned Collection contains any other object, this never happens. However, this is just a workaround, and may be, not required at all. Just my two cents. Just make it like -</p>

<pre><code>      @ModelAttribute(""users"")
      public Collection&lt;User&gt; getUsers(){
           return this.users;
      }
</code></pre>
"
"8880773","<ul>
<li><code>public</code> means you can access the class from anywhere in the class/object or outside of the package or class</li>
<li><code>static</code> means constant in which block of statement used only 1 time</li>
<li><code>void</code> means no return type</li>
</ul>
"
"8922020","<p>Recently, I had a program batch processing files, I have certainly closed each file in the loop, but the error still there.</p>

<p>And later, I resolved this problem by garbage collect eagerly every hundreds of files:</p>

<pre><code>int index;
while () {
    try {
        // do with outputStream...
    } finally {
        out.close();
    }
    if (index++ % 100 = 0)
        System.gc();
}
</code></pre>
"
"5616101","<pre><code>public static int toInt( byte[] bytes ) {
int result = 0;
for (int i=0; i&lt;3; i++) {
  result = ( result &lt;&lt; 8 ) - Byte.MIN_VALUE + (int) bytes[i];
}
return result;
}
</code></pre>
"
"4655419","<p>I'm not sure if you have can use writeUTF instead, instead you may need to use <code>writeBytes</code>. Also, you need to terminate each line with a <code>'\n'</code>.</p>
"
"9541091","<p>For those claiming <code>""""</code> and <code>String.Empty</code> are interchangeable or that <code>""""</code> is better, you are very wrong.</p>

<p>Each time you do something like myVariable = """"; you are creating an instance of an object.
If Java's String object had an EMPTY public constant, there would only be 1 instance of the object """"</p>

<p>E.g: -</p>

<pre><code>String.EMPTY = """"; //Simply demonstrating. I realize this is invalid syntax

myVar0 = String.EMPTY;
myVar1 = String.EMPTY;
myVar2 = String.EMPTY;
myVar3 = String.EMPTY;
myVar4 = String.EMPTY;
myVar5 = String.EMPTY;
myVar6 = String.EMPTY;
myVar7 = String.EMPTY;
myVar8 = String.EMPTY;
myVar9 = String.EMPTY;
</code></pre>

<p>10 (11 including String.EMPTY) Pointers to 1 object</p>

<p>Or: -</p>

<pre><code>myVar0 = """";
myVar1 = """";
myVar2 = """";
myVar3 = """";
myVar4 = """";
myVar5 = """";
myVar6 = """";
myVar7 = """";
myVar8 = """";
myVar9 = """";
</code></pre>

<p>10 pointers to 10 objects</p>

<p>This is inefficient and throughout a large application, can be significant.</p>

<p>Perhaps the Java compiler or run-time is efficient enough to automatically point all instances of """" to the same instance, but it might not and takes additional processing to make that determination.</p>
"
"6070291","<pre><code>String s="""";
for (int i = 0; i &lt; mac.length; i++) { 
  s += String.format(""%02X%s"", mac[i], (i &lt; mac.length - 1) ? ""-"" : """");
}
</code></pre>
"
"9957300","<p>I did this in C if anyone cares.  It assumes ASCII values and uses the characters ordinal value:</p>

<pre><code>bool is_permutation(const char *a, const char *b)
{                                                
    if (a == NULL || b == NULL)              
            return false;                    

    if (strlen(a) != strlen(b))              
            return false;                    

    int sum_a = 0, sum_b = 0;                

    while (*a != '\0')                       
            sum_a += (int)*a++;              

    while (*b != '\0')                       
            sum_b += (int)*b++;              

    return (sum_a == sum_b);                 
}                                                
</code></pre>
"
"9989772","<p>how about this? </p>

<pre><code>public String fillSpaces(int len) {
    /* the spaces string should contain spaces exceeding the max needed */  
    String spaces = ""                                                   "";
    return spaces.substring(0,len);
}
</code></pre>

<p>EDIT: I've written a simple code to test the concept and here what i found. </p>

<p>Method 1: adding single space in a loop:</p>

<pre><code>  public String execLoopSingleSpace(int len){
    StringBuilder sb = new StringBuilder();

    for(int i=0; i &lt; len; i++) {
        sb.append(' ');
    }

    return sb.toString();
  }
</code></pre>

<p>Method 2: append 100 spaces and loop, then substring:</p>

<pre><code>  public String execLoopHundredSpaces(int len){
    StringBuilder sb = new StringBuilder(""          "")
            .append(""          "").append(""          "").append(""          "")
            .append(""          "").append(""          "").append(""          "")
            .append(""          "").append(""          "").append(""          "");

    for (int i=0; i &lt; len/100 ; i++) {
        sb.append(""          "")
            .append(""          "").append(""          "").append(""          "")
            .append(""          "").append(""          "").append(""          "")
            .append(""          "").append(""          "").append(""          "");
    }

    return sb.toString().substring(0,len);
  }
</code></pre>

<p>The result I get creating 12,345,678 spaces:</p>

<pre><code>C:\docs\Projects&gt; java FillSpace 12345678
method 1: append single spaces for 12345678 times. Time taken is **234ms**. Length of String is 12345678
method 2: append 100 spaces for 123456 times. Time taken is **141ms**. Length of String is 12345678
Process java exited with code 0
</code></pre>

<p>and for 10,000,000 spaces:</p>

<pre><code>C:\docs\Projects&gt; java FillSpace 10000000
method 1: append single spaces for 10000000 times. Time taken is **157ms**. Length of String is 10000000
method 2: append 100 spaces for 100000 times. Time taken is **109ms**. Length of String is 10000000
Process java exited with code 0
</code></pre>

<p>combining direct allocation and iteration always takes less time, on average 60ms less when creating huge spaces. For smaller sizes, both results are negligible. </p>

<p>But please continue to comment :-)</p>
"
"6828533","<p>if you want to declare <code>enum</code> public then save the <code>enum</code> file with the name of the <code>enum</code>. </p>

<p>Suppose you make an enum <code>Book{}</code> then save it by <code>Book.java</code> and make a seperate file for class</p>

<p>this is the only way to declare <code>enum</code> public.</p>
"
"4710347","<p>You can create an temporary Map using <code>Collections.UnmodifiableMap</code>, then iterate the keyset .</p>
"
"10625108","<p>Create a getter/setter for the class Variable and set it yo null to re-instantiate an object
Ex: </p>

<pre><code>//Singleton support ...
private static A singleton = null;
    public static A get() {
        if (singleton == null){
        singleton = new A();
    }
        return singleton;
}
public static A getSingleton() {
    return singleton;
}
public static void setSingleton(A singleton) {
    A.singleton = singleton;
}

//Re instantiate 
public class Test(){
....
....
    A.setSingleton(null);

}
</code></pre>
"
"10925597","<p>The following code shows that it is possible:  </p>

<pre><code>class OverridenStaticMeth {   

static void printValue() {   
System.out.println(""Overriden Meth"");   
}   

}   

public class OverrideStaticMeth extends OverridenStaticMeth {   

static void printValue() {   
System.out.println(""Overriding Meth"");   
}   

public static void main(String[] args) {   
OverridenStaticMeth osm = new OverrideStaticMeth();   
osm.printValue();   

System.out.println(""now, from main"");
printValue();

}   

} 
</code></pre>
"
"4741498","<p>You can try using a <a href=""http://download.oracle.com/javase/6/docs/api/java/io/DataInputStream.html#readChar%28%29"" rel=""nofollow"">DataInputStream</a> and the readChar() method.</p>

<pre><code>  DataInputStream in = new DataInputStream(myinput);
  //where muinput is your BufferedInputStream.

  char c = in.readChar();
</code></pre>

<p>should do what you want.</p>
"
"7712174","<p>Try this:</p>

<pre><code>ListView lv = getListView();
  lv.setTextFilterEnabled(true);
   lv.setOnItemClickListener(new OnItemClickListener() {
public void onItemClick(AdapterView&lt;?&gt; parent, View view,
        int position, long id) {
      // When clicked, show a toast with the TextView text
      Toast.makeText(getApplicationContext(), ((TextView) view).getText(),
          Toast.LENGTH_SHORT).show();
    }
  });
</code></pre>

<p>for more information :
<a href=""http://developer.android.com/resources/tutorials/views/hello-listview.html"" rel=""nofollow"">http://developer.android.com/resources/tutorials/views/hello-listview.html</a></p>
"
"7737437","<pre><code>public class MouseDrag extends Component implements MouseListener,
    MouseMotionListener {
  /** The Image we are to paint */
  Image curImage;

  /** Kludge for showStatus */
  static Label status;

  /** true if we are in drag */
  boolean inDrag = false;

  /** starting location of a drag */
  int startX = -1, startY = -1;

  /** current location of a drag */
  int curX = -1, curY = -1;

  // ""main"" method
  public static void main(String[] av) {
    JFrame f = new JFrame(""Mouse Dragger"");
    Container cp = f.getContentPane();

    if (av.length &lt; 1) {
      System.err.println(""Usage: MouseDrag imagefile"");
      System.exit(1);
    }
    Image im = Toolkit.getDefaultToolkit().getImage(av[0]);

    // create a MouseDrag object
    MouseDrag j = new MouseDrag(im);

    cp.setLayout(new BorderLayout());
    cp.add(BorderLayout.NORTH, new Label(
        ""Hello, and welcome to the world of Java""));
    cp.add(BorderLayout.CENTER, j);
    cp.add(BorderLayout.SOUTH, status = new Label());
    status.setSize(f.getSize().width, status.getSize().height);
    f.pack();
    f.setVisible(true);
    f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  }

  // ""Constructor"" - creates the object
  public MouseDrag(Image i) {
    super();
    curImage = i;
    setSize(300, 200);
    addMouseListener(this);
    addMouseMotionListener(this);
  }

  public void showStatus(String s) {
    status.setText(s);
  }

  // Five methods from MouseListener:
  /** Called when the mouse has been clicked on a component. */
  public void mouseClicked(MouseEvent e) {
  }

  /** Called when the mouse enters a component. */
  public void mouseEntered(MouseEvent e) {
  }

  /** Called when the mouse exits a component. */
  public void mouseExited(MouseEvent e) {
  }


  // And two methods from MouseMotionListener:
  public void mouseDragged(MouseEvent e) {
    Point p = e.getPoint();
    // System.err.println(""mouse drag to "" + p);
    showStatus(""mouse Dragged to "" + p);
    curX = p.x;
    curY = p.y;
    if (inDrag) {
      repaint();
    }
  }

  public void paint(Graphics g) {
    int w = curX - startX, h = curY - startY;
    Dimension d = getSize();
    g.drawImage(curImage, 0, 0, d.width, d.height, this);
    if (startX &lt; 0 || startY &lt; 0)
      return;
    System.err.println(""paint:drawRect @["" + startX + "","" + startY
        + ""] size "" + w + ""x"" + h);
    g.setColor(Color.red);
    g.fillRect(startX, startY, w, h);
  }

}
</code></pre>
"
"8005182","<p>Main is basically a universal indicator of the central method so Java automatically makes it the central method when provided with public static</p>

<pre><code>public static void main
</code></pre>
"
"8590324","<p>Try This,</p>

<pre><code>SimpleDateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ss.SSSSSSSZ"");
        String date=sdf.format (new Date() );
</code></pre>

<p>Its For  ISO 8601 format</p>
"
"4801420","<pre><code>public class ImageButton extends JButton {

    protected ImageButton(){
    }

    @Override
        public void paint(Graphics g) {
        Graphics2D g2 = (Graphics2D) g;
        Image img = Toolkit.getDefaultToolkit().getImage(""water.bmp"");

        g2.drawImage(img, 45, 35, this);
        g2.finalize();
    }
}
</code></pre>

<hr>

<p><strong>OR use this code</strong></p>

<pre><code>class MyButton extends JButton {

    Image image;
    ImageObserver imageObserver;


    MyButtonl(String filename) {
            super();
            ImageIcon icon = new ImageIcon(filename);
            image = icon.getImage();
            imageObserver = icon.getImageObserver();
        }

     public void paint( Graphics g ) {
            super.paint( g );
            g.drawImage(image,  0 , 0 , getWidth() , getHeight() , imageObserver);
        }
    }
</code></pre>
"
"8710093","<p>One other solution can be: </p>

<pre><code>public int longToInt(Long longVariable)
{
    try { 
            return Integer.valueOf(longVariable.toString()); 
        } catch(IllegalArgumentException e) { 
               Log.e(e.printstackstrace()); 
        }
}
</code></pre>

<p>I have tried this for cases where the client is doing a POST and the server DB understands only Integers while the client has a Long. </p>
"
"9348104","<p>You can use the below code if you are working with Integer array:</p>

<pre><code>public class DuplicateInteger {

    private static int countDuplicate;

    public static int[] getDuplicateIntegers(int[] integerArray){
        int duplicateIntegers[] = new int[integerArray.length];
        countDuplicate = 0;
        for(int i=0;i&lt;integerArray.length;i++){
            for(int j=i+1;j&lt;integerArray.length;j++){
                int replicaTest = 0;
                if(integerArray[i]==integerArray[j]){
                    for(int k=0;k&lt;countDuplicate;k++){
                        if(duplicateIntegers[k]==integerArray[i]){
                            replicaTest = 1;
                        }
                    }
                    if(replicaTest==0){
                        duplicateIntegers[countDuplicate] = integerArray[i];
                        countDuplicate++;
                    }
                }
            }
        }
        return duplicateIntegers;
    }

    public static void printDuplicateIntegers(int[] duplicateIntegers){
        System.out.println(""Duplicate Integers:"");
        System.out.println(""-------------------"");
        for(int i=0;i&lt;countDuplicate;i++){
            System.out.println(duplicateIntegers[i]);
        }   
    }

    public static void main(String[] args){
        int numberArray[] = {1, 2, 3, 4, 5, 6, 7, 1, 3, 5, 7};
        printDuplicateIntegers(getDuplicateIntegers(numberArray));
    }

}
</code></pre>
"
"10009379","<p>If you take the else out it will give you the desired functionality.</p>

<pre><code>List&lt;String&gt; l = new ArrayList&lt;String&gt;();
l.add(""1"");
l.add(""2"");
l.add(""3"");
l.add(""4"");

for (int i = 0; i &lt; l.size(); i++) {

    if(l.get(i).equals(""1""))
        l.remove(l.get(i));

    System.out.println(l.get(i));
}
</code></pre>
"
"4895267","<p>(The question in its current form is a little confusing - my answer is assuming that the question is about finding two numbers in an array that sum to a given value)</p>

<p>Since the given array is unsorted, I am assuming that we are not allowed to sort the array (i.e. the given order of the array cannot be changed).</p>

<p>The simplest solution IMHO is to iterate over each number <code>x</code> and check if <code>I-x</code> occurs anywhere in the arrays. This is essentially what your O(n^2) solution is doing.</p>

<p>This can be brought down to O(n) or O(nlogn) by making the search faster using some sort of fast set data structure. Basically, as we iterate over the array, we query to see if <code>I-x</code> occurs in the set. </p>

<p>Code (in Python):</p>

<pre><code>l=[1,2,3,4,5,6,7,8,9]
seen=set()

I=11
for item in l:
        if I-item in seen:
                print ""(%d,%d)""%(item,I-item)
        seen.add(item)
</code></pre>

<p>The complexity of the solution depends on the insert/lookup complexity of the <code>set</code> data structure that you use. A hashtable based implementation has a O(1) complexity so it gives you a O(n) algorithm, while a tree based <code>set</code> results in a O(nlogn) algorithm.</p>

<p>Edit:</p>

<p>The equivalent data structure to Python's <code>set</code> would be <code>stl::set</code> in C++ and <code>TreeSet</code>/<code>HashSet</code> in Java. The line <code>I-x in seen</code> would translate to <code>seen.contains(I-x)</code> in Java and <code>seen.find(I-x)==seen.end()</code> in C++.</p>
"
"10632053","<p>have you looked into the decorator pattern in java you pass a button into a method which decorates it depending on whether the button is the current active one, for example if it hovered over.</p>

<pre><code>public Jbutton decorateButton(JButton b, boolean isHoveredOver){
    if(isHoveredOver)
        b.setBackground(getContentPane().getBackground().GREEN);
    return b;
}
</code></pre>

<p>you call this method from the MouseEvent or ActionEvent methods and just issue a repaint() after. put all your buttons into an array or vector and loop through it passing each one in to the decorateButton method and give the initail boolean value of false then on event set it to true. 
This way the initial value is default and the button is then decorated upon action the buttons will appear to be acting as part of a group</p>
"
"4924820","<p><strong>first know this</strong>  - To use the package in other programs, compile the .java files as usual and then move the resulting .class files into the appropriate subdirectory of one of the directories referenced in your CLASSPATH environment variable. </p>

<p>For instance if /home/name/classes is in your CLASSPATH and your package is called package1, then you would make a directory called package1 in /home/name/classes and then put all the .class files in the package in /home/name/classes/package1. </p>

<p>Now suppose your classpath is /home/name/classes then compile </p>

<pre><code>package abc.def;

public class test {

public void test() {} public void disp() { System.out.println(""in disp""); }

}
</code></pre>

<p>using <code>$ javac -d /home/name/classes test.java</code></p>

<p>Now put this code</p>

<pre><code>import abc.def.*;

public class checktest {

public static void main(String a[]) {

test t = new test();

}

}
</code></pre>

<p>inside the folder </p>
"
"10821438","<p>To start off:</p>

<pre><code>String path = null;
FileChooser fc=new FileChooser(path);
fc.showOpenDialog(null);
</code></pre>

<p>Then in another class:</p>

<pre><code>public FileChooser(){
    this(null);
}

public  FileChooser(String path) {
    super(path);
    try {
        UIManager.setLookAndFeel(""com.sun.java.swing.plaf.windows.WindowsLookAndFeel"");
        SwingUtilities.updateComponentTreeUI(this);
        this.pack();
    } catch (Exception ex) {
        Logger.getLogger(FileChooser.class.getName()).log(Level.SEVERE, null, ex);
    }

    JFileChooser chooser = new JFileChooser();
}

private void pack() {
    try{
    }catch(UnsupportedOperationException eu){
    };
}
</code></pre>
"
"4950138","<p>As for rewriting the https -> http, I'm not sure that's possible(yet) without using mod_jk, see <a href=""http://www.java.net/forum/topic/glassfish/glassfish/glassfish-behind-https-reverse-proxy"" rel=""nofollow"">here</a>
, but see also this <a href=""http://www.manorrock.com/documents/glassfish/proxy-ssl.html"" rel=""nofollow"">little guide</a></p>

<p>Though, generally, you'll need configure Glassfish and set http.proxyPort (and probably http.proxyHost too). Hopefully that should reflect in the autogenerated WSDL URL.</p>

<p>Here's 3 different ways to do this:</p>

<p><strong>1</strong>
Use asadmin (in the Glassfish bin/ directory, run</p>

<pre><code>asadmin create-jvm-options ""-Dhttp.proxyPort=80""
asadmin create-jvm-options ""-Dhttp.proxyHost=our.server.com""
</code></pre>

<p><strong>2</strong> 
Edit domain.xml and add under the <code>&lt;java-config&gt;</code> element</p>

<pre><code> &lt;jvm-options&gt;-Dhttp.proxyPort=80&lt;/jvm-options&gt;
 &lt;jvm-options&gt;-Dhttp.proxyHost=our.server.com&lt;/jvm-options&gt;
</code></pre>

<p><strong>3.</strong> 
Open the Glassfish admin web page, under Application Server -> VM Settings -> JVM Options and add these options</p>

<pre><code>http.proxyPort=80
http.proxyHost=our.server.com
</code></pre>
"
"11735209","<p>The execution flow not shown - may be the 3rd code:</p>

<pre><code>while(c&lt;5){
    Thread.sleep(delay);                
    protocol.onSending(3,prm.PARAMETER_DRIVE_MODE.ordinal(),dataToRead,dataToRead.length);//read drive mode
    System.out.println(Helper.paramDriveMod+""  drive mode is ..........in wile loop"");//here it shows null value  ""
</code></pre>

<p>is executed before the second code </p>

<pre><code>switch(ms)
{
    case READ_PARAMETER_VALUE:  // read parameter values
        switch(prm){
            case PARAMETER_DRIVE_MODE:  // paramet drive mode
                Helper.paramDriveMod =(Integer.toString(((USB_RXBuffer[4]&lt;&lt; 8)&amp;0xff00)));
</code></pre>
"
"11980986","<p>Hi you can use the following method to generate 10 digit random number</p>

<pre><code>private static int getRndNumber() {
    Random random=new Random();
    int randomNumber=0;
    boolean loop=true;
    while(loop) {
        randomNumber=random.nextInt();
        if(Integer.toString(randomNumber).length()==10 &amp;&amp; !Integer.toString(randomNumber).startsWith(""-"")) {
            loop=false;
        }
        }
    return randomNumber;
}
</code></pre>
"
"4972487","<p><strong>EDIT:</strong> As others pointed out, you should n't be doing anything special to pass empty string to a parametrized query.</p>

<p>But, <strong>just in case</strong> if you happen to be using Dynamic SQLs in a query like:</p>

<pre><code>Declare sqlText VARCHAR(MAX)
set sqlText = 'SELECT ....'
EXEC(sqlText)
</code></pre>

<p>then you would need to escape each of the single quotes as <code>''''</code> to get an equivalent to an empty string. So, a total of 4 quotes. The first 2 single quotes would be equivalent to getting a single quote at runtime. Another 2 single quotes will get the closing quote at runtime.</p>
"
"12486248","<p>try this:</p>

<pre><code>@ManyToMany(cascade = CascadeType.ALL, orphanRemoval=true, fetch = FetchType.LAZY, mappedBy = ""yourObject"")
</code></pre>
"
"4994116","<p>As JB nizet suggested I am wondering if the answer might be something such as a single query, possibly with a temporary table, or anonymous intermediate table (I don't know what google supports to this end) using a group by (thus eliminating extra transfer of data and the need for Java to do the processing). I am thinking something along the lines of</p>

<pre><code>CREATE TEMPORARY TABLE temp1 AS
SELECT * FROM car_journey
WHERE start_date &gt; ? AND
end_date &lt; ?

SELECT car_id, journey_id
FROM temp1 t1, (
  SELECT car_id, MIN(start_date)
  FROM temp1
  GROUP BY car_id 
) t2
WHERE t1.car_id = t2.car_id AND
t1.start_date = t2.start_date
</code></pre>

<p>With the temporary table you can greatly reduce the time for the secondary query, since theoretically the data will be much smaller than the full table.</p>

<p>Finally, again not knowing what google supports, I would ask if you have indices defined on the appropriate columns, which may help speed up the query.</p>
"
"5009987","<p>This may be not optimal, but relatively easy ;)</p>

<pre><code>String testString = ""Hello World."";

testString = testString.replace('o', '\u0001');
testString = testString.replace('e', 'o');
testString = testString.replace('\u0001', 'e');
</code></pre>

<p>The idea is to take a character that you are sure is not used in string and use it as temporary replace.</p>
"
"5020101","<p>Yes, as others have said, initialize inFile to null</p>

<p>However, you will also need to check that inFile actually points a valid file and is not NULL when you get to your loop 
e.g.</p>

<pre><code>while(inFile!=null &amp;&amp; inFile.hasNext()) {
}
</code></pre>

<p>Otherwise, you perhaps want to place the whole try-catch in a different loop to make the user select another file? Or just exit the program if the file is invalid? The missing element to the question is how you wish to handle invalid files. Does the program exit or re-prompt the user?</p>
"
"5023561","<p>one type, with two properties</p>

<pre><code>type Edge
    boolean directed = false;
    number  weight = 1;
</code></pre>
"
"22406864","<p>The sample code, which is approved as an answer here is correct, but I disagree with it. It does not shows what is happening and I'm going to show you a good example to understand how actually the JVM works:</p>

<pre><code>package test;

    class A {
        A() {
            print();
        }

        void print() {
            System.out.println(""A"");
        }
    }

    class B extends A {
        static int staticVariable2 = 123456;
        static int staticVariable;

        static
        {
            System.out.println(staticVariable2);
            System.out.println(""Static Initialization block"");
            staticVariable = Math.round(3.5f);
        }

        int instanceVariable;

        {
            System.out.println(""Initialization block"");
            instanceVariable = Math.round(3.5f);
            staticVariable = Math.round(3.5f);
        }

        B() {
            System.out.println(""Constructor"");
        }

        public static void main(String[] args) {
            A a = new B();
            a.print();
            System.out.println(""main"");
        }

        void print() {
            System.out.println(instanceVariable);
        }

        static void somethingElse() {
            System.out.println(""Static method"");
        }
    }
</code></pre>

<p>Before to start commenting on the source code, I'll give you a short explanation of static variables of a class:</p>

<p>First thing is that they are called class variables, they belong to the class not to particular instance of the class. All instances of the class share this static(class) variable. Each and every variable has a default value, depending on primitive or reference type. Another thing is when you reassign the static variable in some of the members of the class (initialization blocks, constructors, methods, properties) and doing so you are changing the value of the static variable not for particular instance, you are changing it for all instances. To conclude static part I will say that the static variables of a class are created not when you instantiate for first time the class, they are created when you define your class, they exist in JVM without the need of any instances. Therefor the correct access of static members from external class (class in which they are not defined) is by using the class name following by dot and then the static member, which you want to access (template: <code>&lt;CLASS_NAME&gt;.&lt;STATIC_VARIABLE_NAME&gt;</code>).</p>

<p>Now let's look at the code above:</p>

<p>The entry point is the main method - there are just three lines of code. I want to refer to the example which is currently approved. According to it the first thing which must be printed after printing ""Static Initialization block"" is ""Initialization block"" and here is my disagreement, the non-static initialization block is not called before the constructor, it is called before any initializations of the constructors of the class in which the initialization block is defined. The constructor of the class is the first thing involved when you create an object (instance of the class) and then when you enter the constructor the first part called is either implicit (default) super constructor or explicit super constructor or explicit call to another overloaded constructor (but at some point if there is a chain of overloaded constructors, the last one calls a super constructor, implicitly or explicitly). </p>

<p>There is polymorphic creation of an object, but before to enter the class B and its main method, the JVM initializes all class(static) variables, then goes through the static initialization blocks if any exist and then enters the class B and starts with the execution of the main method. It goes to the constructor of class B then immediately (implicitly) calls constructor of class A, using polymorphism the method(overridden method) called in the body of the constructor of class A is the one which is defined in class B and in this case the variable named instanceVariable is used before reinitialization. After closing the constructor of class be the thread is returned to constructor of class B but it goes first to the non-static initialization block before printing ""Constructor"". For better understanding debug it with some IDE, I prefer Eclipse.</p>
"
"13911751","<pre><code>Calendar cal2 = Calendar.getInstance();
cal2.add(Calendar.YEAR, -1);
Date dt2 = new Date(cal2.getTimeInMillis());
System.out.println(dt2);
</code></pre>
"
"5034184","<blockquote>
  <p>what I don't like is making any sacrifices when it comes to information hiding</p>
</blockquote>

<p>First, work with Python for a few years.</p>

<p><code>private</code> is not particularly helpful.  It makes extension of the class hard and it makes testing hard.</p>

<p>Consider rethinking your position on ""hiding"".</p>
"
"13953187","<p>No need to do anything just chnage in POM file like below</p>

<pre><code>&lt;configuration&gt;
    &lt;maxmemory&gt;1024M&lt;/maxmemory&gt;
&lt;/configuration&gt;
</code></pre>
"
"14213444","<p>in addition to Fathah solution you can use this code, also note that because its a memory pointer this solution has no performance issues:</p>

<pre><code>int totalRows = 0;
if(rowSet.last()) {
   totalRows = rowSet.getRow();
}
rowSet.beforeFirst();
</code></pre>
"
"11989348","<p>You could always do</p>

<pre><code>if (str == null || str.equals(null))
</code></pre>

<p>This will first check the object reference and then check the object itself providing the reference isnt null.</p>
"
"12019833","<p>you could clone or if you can't clone you can write your own function for it.</p>

<pre><code>function (variable){
   clone = JSON.parse(JSON.stringify(variable))
   return clone;
}
</code></pre>
"
"12053940","<p>Just joined the coded from all answers:</p>

<pre><code>private static String txtToHtml(String s) {
        StringBuilder builder = new StringBuilder();
        boolean previousWasASpace = false;
        for (char c : s.toCharArray()) {
            if (c == ' ') {
                if (previousWasASpace) {
                    builder.append(""&amp;nbsp;"");
                    previousWasASpace = false;
                    continue;
                }
                previousWasASpace = true;
            } else {
                previousWasASpace = false;
            }
            switch (c) {
                case '&lt;':
                    builder.append(""&amp;lt;"");
                    break;
                case '&gt;':
                    builder.append(""&amp;gt;"");
                    break;
                case '&amp;':
                    builder.append(""&amp;amp;"");
                    break;
                case '""':
                    builder.append(""&amp;quot;"");
                    break;
                case '\n':
                    builder.append(""&lt;br&gt;"");
                    break;
                // We need Tab support here, because we print StackTraces as HTML
                case '\t':
                    builder.append(""&amp;nbsp; &amp;nbsp; &amp;nbsp;"");
                    break;
                default:
                    builder.append(c);

            }
        }
        String converted = builder.toString();
        String str = ""(?i)\\b((?:https?://|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}/)(?:[^\\s()&lt;&gt;]+|\\(([^\\s()&lt;&gt;]+|(\\([^\\s()&lt;&gt;]+\\)))*\\))+(?:\\(([^\\s()&lt;&gt;]+|(\\([^\\s()&lt;&gt;]+\\)))*\\)|[^\\s`!()\\[\\]{};:\'\"".,&lt;&gt;?«»“”‘’]))"";
        Pattern patt = Pattern.compile(str);
        Matcher matcher = patt.matcher(converted);
        converted = matcher.replaceAll(""&lt;a href=\""$1\""&gt;$1&lt;/a&gt;"");
        return converted;
    }
</code></pre>
"
"23037591","<p>To add to Jeremiah Willcock's answer, if you want the value of the power of 2 itself, then you will want:</p>

<pre><code>(int) Math.pow(2, (a == 0) ? 0 : 32 - Integer.numberOfLeadingZeros(numWorkers));
</code></pre>
"
"12154698","<p>Make sure that you give trust=""true""</p>

<pre><code>&lt;sshexec trust=""true""
           host=""host_ip""        
           verbose=""true/false""
           username=""UserName""
           keyfile=""KeyFile_location""                     
           command=""some_command""&gt;
&lt;/sshexec&gt;
</code></pre>
"
"23715826","<p>There are two types of methods. They are <code>class methods</code> and <code>object methods</code>. <code>Class methods</code> are identified with the key word <code>static</code>. Any method that does not have a key word <code>static</code> is  called an <code>object method</code>.  Either can be applied <i>to a method</i> or <i>to a variable</i>. </p>
"
"23765158","<p>It's this one.</p>

<pre><code>buttonPanel = new JPanel();
buttonPanel.setSize(new Dimension(30, 100));
</code></pre>

<p>Don't let the layout manager adjust your sizes. </p>
"
"15309783","<pre><code>button.setMaximumSize(getMaximumSize());
</code></pre>
"
"5081858","<p>Without checking the link posted and assuming that an array list is 3 times slower as you say then the speed difference is likely to vary accross JVMs, several things could influence the speed of getting a value back. The results from that article are likely to vary depending on the control variables in effect when performing the tests. A collection should not be surprisingly a bit slower either considering that various checks are completed before completing the operation. Adding to an arraylist for example calls</p>

<pre><code> public void ensureCapacity(int minCapacity) {
    modCount++;
    int oldCapacity = elementData.length;
    if (minCapacity &gt; oldCapacity) {
        Object oldData[] = elementData;
        int newCapacity = (oldCapacity * 3)/2 + 1;
            if (newCapacity &lt; minCapacity)
        newCapacity = minCapacity;
            // minCapacity is usually close to size, so this is a win:
            elementData = Arrays.copyOf(elementData, newCapacity);
    }
    }
</code></pre>

<p>As that clearly shows there are checks and data is copied and replaced.
So to put it simply there is no one answer, the test conditions are likely to affect the results.</p>
"
"13009901","<p>Although I do like PicoContainer for it's simplicity and it's lack of dependencies.  I would recommend using CDI instead because it is part of the Java EE standard so you have no vendor lock-in.</p>

<p>In terms of intrusiveness, it's main problem is the requirement of a container and the use of a relatively empty META-INF/beans.xml file (needed to indicate that the jar is using CDI) and the use of annotations (though they are standard)</p>

<p>The lightweight CDI container I use for my own projects is Apache Open Web Beans.  Though it took a while to figure out how to create a simple app (unlike Pico) which looks like this.</p>

<pre><code>public static void main(final String[] args) {
    final ContainerLifecycle lifecycle = WebBeansContext.currentInstance()
            .getService(ContainerLifecycle.class);
    lifecycle.startApplication(null);

    final BeanManager beanManager = lifecycle.getBeanManager();
    // replace Tester with your start up class
    final Bean&lt;?&gt; bean = beanManager.getBeans(Tester.class).iterator()
            .next();

    final Tester b = (Tester) lifecycle.getBeanManager().getReference(bean,
            Tester.class, beanManager.createCreationalContext(bean));
    b.doInit();
}
</code></pre>
"
"15584751","<p>Here's my solution, albeit the function names aren't nicely named, just think of them as abstract (not in the Java abstract keyword sense) functions that perform their task.</p>

<pre><code>public int count8(int n) {
    return g(n, 0); 
}

public int g(int n, int prev) {
    int rest = n/10;
    int digit = n % 10;
    if (rest == 0) {
       return h(digit, prev);
    }

    int toAdd = h(digit, prev);
    return toAdd + g(rest, digit);
}


    public int h(int digit, int prev) {
        return prev == 8 &amp;&amp; digit == 8 ? 
                                       2 : digit == 8 ? 
                                                      1 : 0;    
}
</code></pre>
"
"24305274","<p>I was trying to test an extjs application and after sucessfully setting a testingAuthenticationToken this suddenly stopped working with no obvious cause.</p>

<p>I couldn't get the above answers to work so my solution was to skip out this bit of spring in the test environment. I introduced a seam around spring like this: </p>

<pre><code>public class SpringUserAccessor implements UserAccessor
{
    @Override
    public User getUser()
    {
        SecurityContext context = SecurityContextHolder.getContext();
        Authentication authentication = context.getAuthentication();
        return (User) authentication.getPrincipal();
    }
}
</code></pre>

<p>User is a custom type here.</p>

<p>I'm then wrapping it in a class which just has an option for the test code to switch spring out.</p>

<pre><code>public class CurrentUserAccessor
{
    private static UserAccessor _accessor;

    public CurrentUserAccessor()
    {
        _accessor = new SpringUserAccessor();
    }

    public User getUser()
    {
        return _accessor.getUser();
    }

    public static void UseTestingAccessor(User user)
    {
        _accessor = new TestUserAccessor(user);
    }
}
</code></pre>

<p>The test version just looks like this:</p>

<pre><code>public class TestUserAccessor implements UserAccessor
{
    private static User _user;

    public TestUserAccessor(User user)
    {
        _user = user;
    }

    @Override
    public User getUser()
    {
        return _user;
    }
}
</code></pre>

<p>In the calling code I'm still using a proper user loaded from the database:</p>

<pre><code>    User user = (User) _userService.loadUserByUsername(username);
    CurrentUserAccessor.UseTestingAccessor(user);
</code></pre>

<p>Obviously this wont be suitable if you actually need to use the security but I'm running with a no-security setup for the testing deployment.  I thought someone else might run into a similar situation.  This is a pattern I've used for mocking out static dependencies before.  The other alternative is you can maintain the staticness of the wrapper class but I prefer this one as the dependencies of the code are more explicit since you have to pass CurrentUserAccessor into classes where it is required.</p>
"
"5097825","<pre><code>for (int i = 1; i &lt; length; i+=2)
{
    panel[i].setBackground(red);
    panel[i+1].setBackground(white);
}
</code></pre>
"
"25006986","<p>We use clazz because class is a type header. For example, you use class here:</p>

<pre><code>public class HelloWorld {
</code></pre>

<p>and here:</p>

<pre><code>Object.class.getName();
</code></pre>

<p>So unfortunately, we have to use alternate names such as clazz.</p>
"
"15741240","<p>Unfortunately, <code>JSR 308</code> will not add more values than this project local Not Null suggestion here</p>

<p><code>Java 8</code> will not come with a single default annotation or its own <code>Checker</code> framework.
Similar to Find-bugs or <code>JSR 305</code>, this JSR is poorly maintained by a small bunch of mostly academic teams. </p>

<p>No commercial power behind it, thus <code>JSR 308</code> launches <code>EDR 3</code> (Early Draft Review at <code>JCP</code>) NOW, while <code>Java 8</code> is supposed to ship in less than 6 months:-O
Similar to <code>310</code> btw. but unlike <code>308 Oracle</code> has taken charge of that now away from its founders to minimize harm it'll do to the Java Platform.</p>

<p>Every project, vendor and academic class like the ones behind the <code>Checker Framework</code> and <code>JSR 308</code> will create its own proprietary checker annotation.</p>

<p>Making source code incompatible for years to come, until a few popular compromises could be found and maybe added to <code>Java 9</code> or <code>10</code>, or via frameworks like <code>Apache Commons</code> or <code>Google Guava</code>;-)</p>
"
"13208462","<p>You could check if the internet is on</p>

<pre><code>public class ConnectionDetector {

private Context _context;

public ConnectionDetector(Context context){
    this._context = context;
}

public boolean isConnectingToInternet(){
    ConnectivityManager connectivity = (ConnectivityManager) _context.getSystemService(Context.CONNECTIVITY_SERVICE);
      if (connectivity != null)
      {
          NetworkInfo[] info = connectivity.getAllNetworkInfo();
          if (info != null)
              for (int i = 0; i &lt; info.length; i++)
                  if (info[i].getState() == NetworkInfo.State.CONNECTED)
                  {
                      return true;
                  }

      }
      return false;
}
</code></pre>

<p>}</p>
"
"15786988","<p>For Travers an String you can also use <code>charAt()</code> with the string.</p>

<p>like :</p>

<pre><code>String str = ""xyz""; // given String
char st = str.charAt(0); // for example we take 0 index element 
System.out.println(st); // print the char at 0 index 
</code></pre>

<p><code>charAt()</code> is method of string handling in java which help to Travers the string for specific character. </p>
"
"15967320","<p>For creating your own exception you need to extend the Exception class. Once you have extended this class you can raise your exception independent of their type (checked or unchecked exception)</p>

<p>Example:</p>

<pre><code>class MyException extends Exception {
    public MyException(final String message) {
        super(message);
    }
}

public class aa {
    public static void main(String arg[]) {
        int x;
        x = Integer.parseInt(arg[0]);
        try {
            if (x == 0) {
                throw new MyException(""User Exception"");
            }
        } catch (MyException ee) {
            System.out.println(ee.getMessage());
        }

    }
}
</code></pre>
"
"5123613","<p>Try using a <code>long</code> which will not overflow in this case (but will for large enough numbers)</p>

<pre><code>System.out.println((long) n1 + n2);
</code></pre>
"
"16308564","<pre><code>for (int i = 0; i &lt; s.length(); i++)
    if (s.charAt(i) == ' ') {
        your code....
    }
</code></pre>
"
"16414602","<pre><code>mysz = mysz.replace("" "","""");
</code></pre>

<p>First with space, second without space. </p>

<p>Then it is done. </p>
"
"14371587","<p>just:</p>

<pre><code>kill -SIGQUIT &lt;PID&gt;
</code></pre>
"
"14415778","<p>I would suggest the use of <code>System.currentTimeMillis()</code>. It returns the amount of milliseconds elapsed since the UNIX epoch.</p>
"
"16522189","<p>YourString=""yadayada"";</p>

<pre><code>if(Character.isUpperCase(YourString.charAt(0))==true)
    print something//
else
    print somethingelse//
</code></pre>
"
"16541089","<p>Here a answer for nested class (static inner):
In my case i need to acquire the type by its fully qualified name</p>

<pre><code>Class.forName(somePackage.innerClass$outerClass).getConstructor().newInstance();
</code></pre>

<p>the '<strong>$</strong>' is crucial!</p>

<p>with a dot you'll get ClassNotFoundException for class ""package.innerClass.outerClass"". The exception is missleading :-(.</p>
"
"26421198","<p>I want to complement polygenelubricants answer:</p>

<p>I personally prefer equals(). But it lake the type compatibility check. Which I think is an important limitation.</p>

<p>To have type compatibility check at compilation time, declare and use a custom function in your enum.</p>

<pre><code>public boolean isEquals(enumVariable) // compare constant from left
public static boolean areEqual(enumVariable, enumVariable2) // compare two variable
</code></pre>

<p>With this, you got all the advantage of both solution: NPE protection, easy to read code and type compatibility check at compilation time.</p>

<p>I also recommend to add an UNDEFINED value for enum.</p>
"
"16635505","<p>HashSet does not allows duplicate values, why because HashSet Class contain add() method, it will check before while adding elements inside HashSet. if we are trying adding duplicate values it returns false, so not allowed.</p>

<p>here  present, e both are equal returns false.<code>Object PRESENT;
   public boolean add(E e) {
    return map.put(e, PRESENT)==null;
    }</code></p>
"
"26438735","<p>try this </p>

<pre><code>public boolean isPrebuiltTestButtonVisible() {
    try {

        if (preBuiltTestButton.isEnabled()) {

            return true;

        } else {

            return false;
        }

    } catch (Exception e) {

        e.printStackTrace();
        return false;
    }
}
</code></pre>
"
"26472691","<p>Unique at any time:</p>

<pre><code>int uniqueId = (int) (System.currentTimeMillis() &amp; 0xfffffff);
</code></pre>
"
"16653297","<p>The <a href=""http://grabz.it/"" rel=""nofollow"">GrabzIt</a> service provides a <a href=""http://grabz.it/api/java/"" rel=""nofollow"">Java API</a> that allows you to take sscreenshots of web pages. To take a screenshot just do something like:</p>

<pre><code>GrabzItClient grabzIt = new GrabzItClient(""APPLICATION KEY"", ""APPLICATION SECRET"");
grabzIt.SetImageOptions(""http://www.google.com""); 
grabzIt.Save(""http://www.example.com/handler"");

//Or to save straight to disk 
grabzit.SaveTo(""test.jpg"");
</code></pre>
"
"5162235","<p>There's a little method called ""charAt()"" that'll do what you want.</p>

<pre><code> char c = someString.charAt(someString.length - 2);
</code></pre>

<p>Then you need to convert the character to an integer.</p>

<p>Pick @Andrew White's answer because that makes the integer conversion easier. You can do it from a char, but it's a little icky (well not to me because I'm a C programmer at heart).</p>
"
"5162240","<p>If you want the second to last:</p>

<pre><code>if (number.length() &gt;= 2) {
    int myNumber = number.charAt(number.length() - 2) - '0';
}
</code></pre>

<p>Or for your loop:</p>

<pre><code>for (int i = number.length()-2; i&gt;-1; i-=2)
    int x = number.charAt(i) - '0';
</code></pre>
"
"16834636","<p>The code you want is</p>

<pre><code>str.replaceAll(""\\s"","""");
</code></pre>

<p>This will remove all the white spaces.</p>
"
"14701959","<p>Use this code ;</p>

<pre><code>String mydate = java.text.DateFormat.getDateTimeInstance().format(Calendar.getInstance().getTime());
</code></pre>

<p>This will shown as :</p>

<p>Feb 5, 2013 12:39:02PM</p>
"
"26901261","<p>From intelliJ IDEA, simply go to <code>Run</code> -><code>Stop</code>.</p>

<p>This will stop the server as well if you are not able to change the port number</p>
"
"17117620","<p>Alternatively, if you don't want to deal with threads, try this method:</p>

<pre><code>public static void pause(int seconds){
    Date start = new Date();
    Date end = new Date();
    while(end.getTime() - start.getTime() &lt; seconds * 1000){
        end = new Date();
    }
}
</code></pre>

<p>It starts when you call it, and ends when the number of seconds have passed.</p>
"
"14998346","<pre><code>public class nub
 {

 static int i=1;

 public static void main(String...a)
  {

    if(i&lt;=1000)//suppose my range is 10000
    {
        System.out.println(i);
        i++;
        main();
    }

  }

}    
</code></pre>
"
"15088115","<p>it's not eclipse jave (1.6 at least ) complilr it to </p>

<pre><code>switch (1.$SwitchMap$com$fullpath$nameOfMethod[Enum.ordinal()])
</code></pre>

<p>here U collapse couse null doesn't have ordinal ....</p>
"
"27260636","<p>You can set variable that changes depending on the card visibility</p>

<p>for example</p>

<pre><code>int cardShow;
</code></pre>

<p>and then you set your card visible</p>

<pre><code>cards.show(card1, ""card1"");
cardShow = 1;
</code></pre>

<p>and when you try to get which card is visible just use</p>

<pre><code>if (cardShow == 1)
//code in case of card1 is visible
</code></pre>
"
"17228316","<p>sorry but judging from your examples and your question you actually have problems understanding java persistence. Database-entities are self-managed via getters and setters - these can do any validation you would like them to have. If you really set attributes without them, you're missing core concepts of object-oriented development AND persistence -- managed entities in particular.
Methinks you need to re-engineer your project, having problems like these are a sure sign of fundamental design flaws ... just giving some advice here - and thats the solution :</p>

<pre><code>@Column(name=""doubleColumn""}
private Double doubleColumn = Double.NaN  //yes, this is intentional. Verily.

public void setDouble(Double d)
{
    if(d.isNan || d.isInfinite()
    {
       //do something nice here
    }
    else
       this.doubleColumn = d;
}
public Double getDouble()
{
   return !this.doubleColumn.isNaN() &amp;&amp; !this.doubleColumn.isInfinite() ? this.doubleColumn : new Double();
}
</code></pre>

<p>.... its that easy.</p>
"
"5196459","<p>Okay.  </p>

<p>You need to know the size of an array at the time that it is created, but you cannot change its size after it has been created. But, a list can grow dynamically after it has been created, and it has the <code>.Add()</code> function to do that.</p>

<p>Have you gone through this link ?  </p>

<p>A nice comparison of Arrays vs List.  </p>

<ul>
<li><a href=""http://stackoverflow.com/questions/716597/array-or-list-in-java-which-is-faster"">Array or List in Java. Which is faster ?</a>  </li>
<li><a href=""http://forums.create.msdn.com/forums/p/29960/168957.aspx"" rel=""nofollow"">List v/s Array</a></li>
</ul>
"
"27743482","<p>let 'name' be the name of the file with extension file.</p>

<pre><code>   int len=name.length();
   int i=0;
   String eXt;
   while(i&lt;len){
       if(name.charAt(i)=='.'){               
           eXt=(String) name.subSequence(i, len);
           break;
       }
       i++;
   }
</code></pre>
"
"15555013","<p>A simple method like below can also be used</p>

<pre><code>public static String padString(String str, int leng,char chr) {
        for (int i = str.length(); i &lt;= leng; i++)
            str += chr;
        return str;
    }
</code></pre>
"
"17681135","<p>I've reached to a pretty nice precision just dealing with cents.</p>

<p>Here is the class:</p>

<pre><code>public class Money implements Comparable&lt;Money&gt; {

private static Locale CURRENT_LOCALE = new Locale(""pt"", ""br"");

private Long amount = 0L;

public Money() { }

public Money(long cents) {
    super();
    this.setAmount(cents);
}

public Money(float cents) {
    super();
    this.setAmount(cents);
}

public Money(double cents) {
    super();
    this.setAmount(cents);
}

public void setAmount(Long cents) {
    this.amount = cents;
}

public void setAmount(Float amount) {
    this.amount = new Long(Math.round(amount * 100));
}

public void setAmount(Double amount) {
    this.amount = Math.round(amount * 100);
}

public Double amount() {
    return ((double) this.amount/100);
}

public Money add(Money portion) {
    if (amount != null) {
        this.amount += portion.amount;
    }
    return this;
}

public Money subtract(Money portion) {
    if (amount != null) {
        this.amount -= portion.amount;
    }
    return this;
}

public Money multiplyBy(double times) {
    this.amount = Math.round(this.amount * times);
    return this;
}

public Money divideBy(double divisor) {
    this.amount = Math.round(this.amount / divisor);
    return this;
}

@Override
public String toString() {
    return NumberFormat.getCurrencyInstance(currentLocale()).format(amount());
}

@Override
public int compareTo(Money value) {
    return (int) (amount - value.amount);
}

protected static void currentLocale(Locale locale) {
    CURRENT_LOCALE = locale;
}

protected static Locale currentLocale() {
    return CURRENT_LOCALE;
}
</code></pre>

<p>}</p>
"
"15609253","<p>Redefining and Overriding comes with in the same scenarios. Only difference is that if methods used are Static, its redefining. </p>

<p>ex:</p>

<p><strong>Overriding:</strong></p>

<pre><code>    Class A{
      public void show(){
             SOP(""class a"");
        }
   }

   Class B extends A{
     public void show(){
         SOP(""class B"");
     }
   }
</code></pre>

<p><strong>Redefining:</strong></p>

<pre><code>    Class A{
      public static void show(){
             SOP(""class a"");
        }
   }

   Class B extends A{
     public static void show(){
         SOP(""class B"");
     }
   }
</code></pre>

<p>Note: Static methods looks as if they are over-rided but they are actually redefined.</p>

<ol>
<li>Redefining is with Static Methods. </li>
<li>Static methods are associated with Class and not with Object, so we do not override as per instance for run-time.</li>
<li>In case of static we are just redefining the method.</li>
</ol>
"
"17764558","<p>By the way, you can try to use this function to be sure (for not too much number of decimal digits) that your number will be reformatted to keep only the decimals you need.</p>

<p><a href=""http://pastebin.com/CACER0xK"" rel=""nofollow"">http://pastebin.com/CACER0xK</a></p>

<p><code>n</code> is you number with lots of decimals (e.g. <code>Math.PI</code>),
<code>numberOfDecimals</code> is the maximum number of decimals you need (e.g. 2 for 3.14 or 3 for 3.151).</p>

<p>By theory, putting a negative value to <code>numberOfDecmals</code>, it will cut off the lower integer digits of the number too. E.g putting <code>n=1588.22</code> and <code>numberOfDecimals=-2</code>, the function will return <code>1500.0</code>.</p>

<p>Let me know if it is something wrong.</p>
"
"5220485","<p>For a set of 8 elements, there are 36 (8 + 7 + ... + 1) distinct pairs (if one ignores the order of elements in the pairs). So <code>diffs</code> may contain <em>up to</em> 36 elements. But apparently, some differences occur multiple times, e.g. 456-345 = 111 and 345-234 = 111. As a set can only contain each value at most once, only the 14 <em>distinct</em> differences remain.</p>
"
"28141764","<p>You can't <em>possibly</em> copy an iterator - it's basically meaningless. For some, this is obvious from the Iterator interface, but let's demonstrate it with a concrete example. In fact, let's demonstrate with an example about <em>concrete</em>.</p>

<p><img src=""http://i.stack.imgur.com/iV0Hn.jpg"" alt=""bar with pieces of concrete""></p>

<p>This is a picture of a concrete iterator over a bar of concrete. Iteration in our case means applying the crow bar to break a piece off of the bar. Now, note that:</p>

<ul>
<li>The bar is not a collection of pieces (though some of it has faults): We're creating pieces as we iterate.</li>
<li>The result of an iteration via the iterator (of <code>next()</code>) can never be the result of another iteration of the bar. The result has been removed from it.</li>
<li>The iteration may produce a different piece depending on the weather, on the amount of force you apply, or maybe on some kind of thermal noise (think: randomness).</li>
<li>The result of an iteration via the iterator (of <code>next()</code>) can never be the result of another iteration of the bar - as the probability space of exact iteration result is continuous, and no specific resulting piece has a non-zero probability measure.</li>
</ul>

<p>Any of the above should convince you not to try to ""copy the iterator"", that's silly...</p>
"
"28390007","<p>Since you know the chars are lower case, you can subtract the according ASCII value to make them uppercase:</p>

<pre><code>char a = 'a';
a -= 32;
System.out.println(""a is "" + a); //a is A
</code></pre>

<p>Here is an <a href=""https://www.cs.cmu.edu/~pattis/15-1XX/common/handouts/ascii.html"" rel=""nofollow"">ASCII table</a> for reference</p>
"
"16154981","<pre><code>public class Run3 
{
    public static void number(int i)
    {
    if(i==100)
    {
    return; 
    }
    else
    {
        i++;
        System.out.println(i);
        number(i);
    }
    }
public static void main(String[] args)
{
number(0);

}
}
</code></pre>
"
"18290704","<pre><code>    public class ArrayLimitedQueue&lt;E&gt; extends ArrayDeque&lt;E&gt; {

    private int limit;

    public ArrayLimitedQueue(int limit) {
        super(limit + 1);
        this.limit = limit;
    }

    @Override
    public boolean add(E o) {
        boolean added = super.add(o);
        while (added &amp;&amp; size() &gt; limit) {
            super.remove();
        }
        return added;
    }

    @Override
    public void addLast(E e) {
        super.addLast(e);
        while (size() &gt; limit) {
            super.removeLast();
        }
    }

    @Override
    public boolean offerLast(E e) {
        boolean added = super.offerLast(e);
        while (added &amp;&amp; size() &gt; limit) {
            super.pollLast();
        }
        return added;
    }
}
</code></pre>
"
"5230232","<p>do </p>

<pre><code>ArrayList&lt;ArrayList&lt;URL&gt;&gt; announces = new ArrayList&lt;ArrayList&lt;URL&gt;&gt;();
</code></pre>

<p>Use interfaces for variables is nonsense. Obviously you are going to insert stuff into it, do yourself a favor, use exact types and you'll be happy. (You cannot insert into a <code>List&lt;? extends List&lt;URL&gt;&gt;</code>)</p>

<p>Now, if we expose this thing, like returning it from a method, then it becomes a problem what should be the proper type. <code>List&lt;List&lt;URL&gt;&gt;</code> is perfect. <code>List&lt;? extends List&lt;URL&gt;&gt;</code> is you are stoned.</p>

<p>Can we return the previously declared <code>announces</code> as a <code>List&lt;List&lt;URL&gt;&gt;</code>? Sure, why not. Just do a cast, we know it's safe. What if caller inserts a <code>LinkedList&lt;URL&gt;</code> into it? Who cares?</p>
"
"18368153","<p>You can easily write one yourself.</p>

<p>given:</p>

<pre><code>int array[]={1,2};
</code></pre>

<p>you do:</p>

<pre><code>int temp=array[0];
array[0]=array[1];
array[1]=temp;
</code></pre>

<p>And you're done. <strong>3 lines of code.</strong></p>
"
"18510775","<p>//in pure c++</p>

<pre><code>int pos = 0;
for ( int i = 0; i &lt; N; ++i ) // N = nth position
{
  pos = STRING.find( delim, pos + size_of_delim );
}
</code></pre>
"
"28843134","<p>Don't touch the hibernate part. The model objects have the same structure as entity, so modify model and not in Entity. Do the changes in child model as below.</p>

<pre><code>@JsonIgnore
private ParentModel parentModel;
</code></pre>

<p>So after successful insertion the data retrieved won't be recursive.</p>

<p>It worked for me.</p>
"
"18567391","<p>Another simple example:</p>

<pre><code>public static void listFilesInDirectory(String pathString) {
  // A local class (a class defined inside a block, here a method).
  class MyFilter implements FileFilter {
    @Override
    public boolean accept(File file) {
      return !file.isHidden() &amp;&amp; file.getName().endsWith("".txt"");
    }
  }

  File directory = new File(pathString);
  File[] files = directory.listFiles(new MyFilter());

  for (File fileLoop : files) {
    System.out.println(fileLoop.getName());
  }
}

// Call it
listFilesInDirectory(""C:\\Users\\John\\Documents\\zTemp"");

// Output
Cool.txt
RedditKinsey.txt
...
</code></pre>
"
"18651876","<p>This is enough:</p>

<pre><code>int[] d = new int[list.size()];

for (int i = 0; i &lt; list.size(); i++) {
    d[i] = list.get(i);
}
</code></pre>
"
"29369534","<pre><code>public class Match {
 void comp(String s1, String s2) {
    char[] charArray1 = s1.toCharArray();
    char[] charArray2 = s2.toCharArray();

    int length1 = charArray1.length;        

    int length2 = charArray2.length;       
    int flag = 0;

    if (length1 == length2) {
        for (int i = 0; i &lt;= length1 - 1; i++) {
            if (charArray1[i] == charArray2[i]) {
                System.out.println(""index are matched:"" + "" "" + charArray1[i] + "" "" + ""in index-"" + i);

            } else {
                flag = 1;
                System.out.println(""index are not matched:"" + "" "" + charArray1[i] + "" "" + ""in index-"" + i);
                System.out.println(""index are not matched:"" + "" "" + charArray2[i] + "" "" + ""in index-"" + i);                    
            }
        }
    } else {
        System.out.println(""Your string are not matched by length"");
    }
    if (flag == 0) {
        System.out.println(""Your string  matched with other String"");
    } else {
        System.out.println(""Your string are not matched"");
    }
}
public static void main(String[] args) {
    java.util.Scanner sc = new java.util.Scanner(System.in);
    System.out.println(""Enter the 1st String:"");
    String s1 = sc.nextLine();
    System.out.println(""Enter the 2nd string"");
    String s2 = sc.nextLine();
    Match m = new Match();
    m.comp(s1, s2);
}
}
</code></pre>
"
"29470120","<p>You can do the same like this:</p>

<pre><code>@Override
public FaqQuestions getFaqQuestionById(Long questionId) {
    session = sessionFactory.openSession();
    tx = session.beginTransaction();
    FaqQuestions faqQuestions = null;
    try {
        faqQuestions = (FaqQuestions) session.get(FaqQuestions.class,
                questionId);
        Hibernate.initialize(faqQuestions.getFaqAnswers());

        tx.commit();
        faqQuestions.getFaqAnswers().size();
    } finally {
        session.close();
    }
    return faqQuestions;
}
</code></pre>

<p>Just use faqQuestions.getFaqAnswers().size()nin your controller and you will get the size if lazily intialised list, without fetching the list itself.</p>
"
"19067993","<p>I use this trick.</p>

<pre><code>private void myTextFieldKeyReleased(java.awt.event.KeyEvent evt) {
try{
int i = Integer.parseInt(myTextField.getText());
}
catch(Exception ex){
//Show error message here with 
JOptionPane.showMessageDialog(null, ""Invalid Input...!"");
myTexTField.setText("""");
}
}
</code></pre>
"
"17260213","<p>Second answer above is the most simple one.</p>

<pre><code>int n = Integer.parseInt(System.console().readLine());
</code></pre>

<p>The question is ""How to read from standard input"".</p>

<p>A console is a device typically associated to the keyboard and display from which a program is launched.</p>

<p>You may wish to test if no Java console device is available, e.g. Java VM not started from a command line or  the standard input and output streams are redirected.</p>

<pre><code>Console cons;
if ((cons = System.console()) == null) {
    System.err.println(""Unable to obtain console"");
    ...
}
</code></pre>

<p>Using console is a simple way to input numbers. Combined with parseInt()/Double() etc.</p>

<pre><code>s = cons.readLine(""Enter a int: "");
int i = Integer.parseInt(s);    

s = cons.readLine(""Enter a double: "");
double d = Double.parseDouble(s);
</code></pre>
"
"5271942","<p>Did you try </p>

<pre><code>URL some=Test.class.getClass().getClassLoader().getResource(""org/abc/bm/TestFile.xml"");
File file = new File(some.getFile());
</code></pre>
"
"5277954","<p>It's because you're using the <code>new</code> statement to construct the objetcs.</p>

<pre><code>Integer a = Integer.valueOf(10);
Integer b = Integer.valueOf(10);
System.out.println(""a == b: "" + (a == b));
</code></pre>

<p>That will print out <code>true</code>. Weird, but Java.</p>
"
"17637848","<pre><code>//%%%%%%%%%%%%%%%%%%%%%% HEX to ASCII %%%%%%%%%%%%%%%%%%%%%%
public String convertHexToString(String hex){

 String ascii="""";
 String str;

 // Convert hex string to ""even"" length
 int rmd,length;
 length=hex.length();
 rmd =length % 2;
 if(rmd==1)
 hex = ""0""+hex;

  // split into two characters
  for( int i=0; i&lt;hex.length()-1; i+=2 ){

      //split the hex into pairs
      String pair = hex.substring(i, (i + 2));
      //convert hex to decimal
      int dec = Integer.parseInt(pair, 16);
      str=CheckCode(dec);
      ascii=ascii+"" ""+str;
  }
  return ascii;
}

public String CheckCode(int dec){
  String str;

          //convert the decimal to character
        str = Character.toString((char) dec);

      if(dec&lt;32 || dec&gt;126 &amp;&amp; dec&lt;161)
             str=""n/a"";  
  return str;
}
</code></pre>
"
"17675210","<p>If you want to escape <code>'</code> or <code>""</code> in your string, you can use the following code:</p>

<pre><code>String text = ...

text = text.replaceAll(""('|\"")"", ""\\\\$1"");
</code></pre>
"
"5293450","<p>in java:</p>

<pre><code>String _directions[] = {""N"", ""NE"", ""E"", ""SE"", ""S"", ""SW"", ""W"", ""NW""};

public String getHeading(int hea) {
  return _directions[(int)Math.floor((hea % 360) / 45)];
}
</code></pre>

<p>In ""java"" case u must need to create a Class.</p>

<p>in javascript:</p>

<pre><code>var _directions = [""N"", ""NE"", ""E"", ""SE"", ""S"", ""SW"", ""W"", ""NW""];

function getDirection (hea) {
  return _directions[Math.floor((hea % 360) / 45)];
};
</code></pre>
"
"19681764","<p>If Any one still looking out for answers </p>

<p>Here is the code posted</p>

<pre><code>    Iterator&lt;Map.Entry&lt;Integer, ArrayList&lt;ShortListedFlats&gt;&gt;&gt; iter = rentShortListedFlats
            .entrySet().iterator();

    while (iter.hasNext()) {
        ArrayList&lt;ShortListedFlats&gt; shortLists = iter.next().getValue();

        counter = counter + shortLists.size();

    }
</code></pre>
"
"17878706","<p>For IntelliJ i do like:</p>

<pre><code>        public void ________________INIT__________________() {};
</code></pre>

<p>looking pretty in file structure!</p>
"
"17992582","<p>You can get name of caller method and its class, but you have to add some code in current method:</p>

<pre><code>    public static void main(String[] args) throws Exception {
    call();
}

private static void call() {
    Exception exception = new Exception();
    for(StackTraceElement trace : exception.getStackTrace()){
        System.out.println(trace.getMethodName());
    }
}
</code></pre>

<p>This will print ""call"" and ""main"", methods name in called order (reverse).</p>
"
"5303698","<p>To make something appear in paint(Graphics g) you need to call the drawing methods (like fillRect) on that Graphics. You are creating a bitmap and then drawing to the bitmap, not the screen.</p>

<pre><code>public void paint(Graphics g){
    g.setColor(new Color(255,0,0));
    g.fillRect(10,10,200,50);
}
</code></pre>
"
"18462035","<p>I know the question is solved but what about:</p>

<p><code>BitmapFactory.decodeStream(getResources().openRawResource(getResources().getIdentifier(""bitmapname"", ""drawable"", context.getPackageName())))</code></p>
"
"20582943","<p>Removing <code>.m2</code> folder is one option. You can also update your maven version to 3.x so it can resolve your maven plugins.
</p>
"
"18571503","<pre><code>public class Test {

static int x = 0;
public static void main(String[] args) {

    printTo100();

}
public static void printTo100(){
    if(x&lt;=100)
    {
    System.out.println(x+"""");
    x++;
    printTo100();
    }

}

}
</code></pre>
"
"18580676","<p>Try this: </p>

<pre><code>java.util.Arrays.toString(anArray).replaceAll("", "", "","")
                .replaceFirst(""^\\["","""").replaceFirst(""\\]$"","""");
</code></pre>
"
"21273086","<p>I would recommend Datastax java driver for Cassandra <a href=""http://www.datastax.com"" rel=""nofollow"">http://www.datastax.com</a>.</p>

<p>For JPA like support try my mapping tool.
<a href=""https://github.com/valchkou/cassandra-driver-mapping"" rel=""nofollow"">https://github.com/valchkou/cassandra-driver-mapping</a></p>

<p>Annotation driven.<br>
No mapping files, no scripts, no configuration files.<br>
No need for DDL scripts.<br>
Schema automatically synchronized with the entity definition.</p>

<p>Usage sample:</p>

<pre><code>   Entity entity = new Entity();
   mappingSession.save(entity);
   entity = mappingSession.get(Entity.class, id);
   mappingSession.delete(entity); 
</code></pre>

<p>available on maven central</p>

<pre><code>   &lt;dependency&gt;
      &lt;groupId&gt;com.valchkou.datastax&lt;/groupId&gt;
      &lt;artifactId&gt;cassandra-driver-mapping&lt;/artifactId&gt;          
    &lt;/dependency&gt;
</code></pre>
"
"5373942","<p>Try:</p>

<pre><code>""SELECT * FROM Tennis1294966077108.container_tbl WHERE parent_id = '"" 
+ par_id 
+ ""' ORDER BY creation_time asc"";
</code></pre>
"
"19994183","<pre><code>public boolean newEquals(String str1, String str2)
{
    int len = str1.length();
int len1 = str2.length();
if(len==len1)
{
    for(int i=0,j=0;i&lt;str1.length();i++,j++)
    {
        if(str1.charAt(i)!=str2.charAt(j))
        return false;
    }`enter code here`
}
return true;
}
</code></pre>
"
"5386084","<p>It really depends on your level of knowledge with the <code>java.nio</code> API. If you're not sure on how things work then you should probably use a 3rd party API. If you know how things work and are capable of writing code without a 3rd party API then you should definitely use your own code without any strings attached. You can achieve better performance without extra things (3rd party API) going on.</p>

<p>I like to live by the <a href=""http://en.wikipedia.org/wiki/KISS_principle"" rel=""nofollow"">KISS principle</a>.</p>
"
"22021725","<pre><code>public class Swap1 {
    public static void main(String[] args){
        int x =7;
        int y = 3;

        swap(x,y);

        System.out.println(""x = "" + x);
        System.out.println(""y = "" + y);
    }

    public static void swap(int x, int y) {
        int temp = x;
        x = y;
        y = temp;
    }
}
</code></pre>
"
"20091021","<p>this is current directory name    </p>

<pre><code>String path=""/home/prasad/Desktop/folderName"";
File folder = new File(path);
String folderName=folder.getAbsoluteFile().getName();
</code></pre>

<p>this is current directory path</p>

<pre><code>String path=folder.getPath();
</code></pre>
"
"20559454","<p>Cemeron, 
Neat code there!</p>

<p>I came across an interesting situation where our customer had given the <strong>IV</strong> the same as the <strong>key</strong>. </p>

<p>After trying out various combinations where I was getting bad padding exception, the solution that worked was</p>

<pre><code>byte[] iv=new byte[8]; // assuming RC2
System.arraycopy(key.getBytes(), 0, iv, 0, key.getBytes().length &gt; iv.length ? key.getBytes().length);

// Now decrypt and hopefully this should work
</code></pre>
"
"22613059","<p>In case of <strong>eclipse</strong>.</p>

<p>Just a hint. Your code could be correct, but your jre configuration not. I ran into the the same error, nothing helped, until i checked the eclipse settings.</p>

<p>Make sure, that you set your execution environment right.</p>

<pre><code>Preferences -&gt; Java -&gt; Installed JREs -&gt; use ""jdk..."" as compatible JRE 
</code></pre>
"
"5423205","<p>Like @barjak, but shorter</p>

<pre><code>public static &lt;E&gt; Collection&lt;E&gt; concat(Collection&lt;E&gt; ... es) {
    List&lt;E&gt; ret = new ArrayList&lt;E&gt;();
    for (Collection&lt;E&gt; e : es) ret.addAll(e);
    return ret;
}

public static &lt;E&gt; Iterable&lt;E&gt; viewOf(final Collection&lt;E&gt; ... es) {
    return new Iterable&lt;E&gt;() {
        public Iterator&lt;E&gt; iterator() {
            return concat(es).iterator();
        }
    };
}

Collection&lt; Integer &gt; foo = new ArrayList&lt; Integer &gt;();
Collection&lt; Integer &gt; bar = new ArrayList&lt; Integer &gt;();

// call as often as you like.
for(Integer i : concat(foo, bar))

// OR
Iterable&lt;Integer&gt; view = viewOf(foo, bar);

// call as often as you like.
for(Integer i : view)
</code></pre>
"
"21271679","<p>i cast the objects to java.util.Date and compare</p>

<pre><code>assertEquals((Date)timestamp1,(Date)timestamp2);
</code></pre>
"
"23198224","<pre><code>public class FindDuplicate {

public static void main(String[] args) {

    // assume the array is sorted, otherwise first we have to sort it.
    // time efficiency is o(n)
    int elementData[] = new int[] { 1, 2, 3, 3, 4, 5, 6, 8, 8 };
    int count = 1;
    int element1;
    int element2;

    for (int i = 0; i &lt; elementData.length - 1; i++) {
        element1 = elementData[i];
        element2 = elementData[count];
        count++;
        if (element1 == element2) {
            System.out.println(element2);
        }
    }

}
</code></pre>

<p>}</p>
"
"23310771","<p><code>finally</code> acts like a destructor, therefore we can restart an application like this. Warning : <code>finally</code> is a bad replacement to finalize, and also it is not a proper destructor.</p>

<pre><code>public class RestartDemo
{
    public void oddeven(int x)
    {
        if(x % 2 != 0)
        {
            try
            {
                this.restart();
            }
            catch(Exception e)
            { 
                 //do nothing
            }
        }
        else
        {
            System.out.println(x + "" is even"");
        }
    }

    public void restart()throws Exception
    {
        try
        {
            throw new Exception(""Force restart!"");
        }
        finally
        {
            RestartDemo.main(new String[0]);
        }
    }

    public static void main(String args[])
    {
        RestartDemo r = new RestartDemo();
        r.oddeven((int)(Math.random() * 100));
    }
}
</code></pre>
"
"5464657","<p>You are already catching <code>FileNotFoundException</code> and this is the very place where you know that the file you wanted to read doesn't exist and you can create it.</p>
"
"21659104","<p>Simple code for reading file in JAVA:</p>

<pre><code>import java.io.*;

class ReadData
{
    public static void main(String args[])
    {
        FileReader fr = new FileReader(new File(""&lt;put your file path here&gt;""));
        while(true)
        {
            int n=fr.read();
            if(n&gt;-1)
            {
                char ch=(char)fr.read();
                System.out.print(ch);
            }
        }
    }
}
</code></pre>
"
"24096843","<pre><code>        String expression = ""^[a-zA-Z]*$"";
        CharSequence inputStr = str;
        Pattern pattern = Pattern.compile(expression);
        Matcher matcher = pattern.matcher(inputStr);
        if(matcher.matches())
        {
              //if pattern matches 
        }
        else
        {
             //if pattern does not matches
        }
</code></pre>
"
"22055362","<p>This will write a JTable to a tab separated file that can be easily imported into Excel. This works.</p>

<p>If you save an Excel worksheet as an XML document you could also build the XML file for EXCEL with code. I have done this with word so you do not have to use third-party packages. </p>

<p>This could code have the JTable taken out and then just write a tab separated to any text file and then import into Excel. I hope this helps.</p>

<p>Code:</p>

<pre><code>import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JTable;
import javax.swing.table.TableModel;

public class excel {
    String columnNames[] = { ""Column 1"", ""Column 2"", ""Column 3"" };

    // Create some data
    String dataValues[][] =
    {
        { ""12"", ""234"", ""67"" },
        { ""-123"", ""43"", ""853"" },
        { ""93"", ""89.2"", ""109"" },
        { ""279"", ""9033"", ""3092"" }
    };

    JTable table;

    excel() {
        table = new JTable( dataValues, columnNames );
    }


    public void toExcel(JTable table, File file){
        try{
            TableModel model = table.getModel();
            FileWriter excel = new FileWriter(file);

            for(int i = 0; i &lt; model.getColumnCount(); i++){
                excel.write(model.getColumnName(i) + ""\t"");
            }

            excel.write(""\n"");

            for(int i=0; i&lt; model.getRowCount(); i++) {
                for(int j=0; j &lt; model.getColumnCount(); j++) {
                    excel.write(model.getValueAt(i,j).toString()+""\t"");
                }
                excel.write(""\n"");
            }

            excel.close();

        }catch(IOException e){ System.out.println(e); }
    }

    public static void main(String[] o) {
        excel cv = new excel();
        cv.toExcel(cv.table,new File(""C:\\Users\\itpr13266\\Desktop\\cs.tbv""));
    }
}
</code></pre>
"
"5504881","<p>You can use either of the following to improve the quality of the scaling.  I believe BiCubic gives better results but is slower than BILINEAR.</p>

<pre><code>g2d.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BICUBIC);
g2d.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
</code></pre>

<p>I would also not use Image.getScaledInstance() as it is very slow.  I'm not sure about the printing as I'm struggling with similar issues. </p>
"
"25548949","<p>The simple way to parse string to integer is using the <code>parseInt()</code> function as shown below:</p>

<pre><code>int nb = Integer.parseInt(""1234"");
</code></pre>

<p><a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html"" rel=""nofollow"">For references please check this link</a></p>
"
"22717353","<p>Easy solution: Use singleton instance. It will allow overrides and inheritance. </p>

<p>In my system, I have SingletonsRegistry class, which returns instance for passed Class. If instance is not found, it is created.</p>

<p>Haxe language class:</p>

<pre><code>package rflib.common.utils;
import haxe.ds.ObjectMap;



class SingletonsRegistry
{
  public static var instances:Map&lt;Class&lt;Dynamic&gt;, Dynamic&gt;;

  static function __init__()
  {
    StaticsInitializer.addCallback(SingletonsRegistry, function()
    {
      instances = null;
    });

  } 

  public static function getInstance(cls:Class&lt;Dynamic&gt;, ?args:Array&lt;Dynamic&gt;)
  {
    if (instances == null) {
      instances = untyped new ObjectMap&lt;Dynamic, Dynamic&gt;();      
    }

    if (!instances.exists(cls)) 
    {
      if (args == null) args = [];
      instances.set(cls, Type.createInstance(cls, args));
    }

    return instances.get(cls);
  }


  public static function validate(inst:Dynamic, cls:Class&lt;Dynamic&gt;)
  {
    if (instances == null) return;

    var inst2 = instances[cls];
    if (inst2 != null &amp;&amp; inst != inst2) throw ""Can\'t create multiple instances of "" + Type.getClassName(cls) + "" - it's singleton!"";
  }

}
</code></pre>
"
"26322334","<pre><code>class Node
{
  int data;
     Node link;

     public Node()
     {
         data=0;
         link=null;
        }

     Node ptr,start,temp;

    void create()throws  IOException
     {
         int n;
         BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
         System.out.println(""Enter first data"");
         this.data=Integer.parseInt(br.readLine());
         ptr=this;
         start=ptr;
         char ins ='y';
         do
         {
             System.out.println(""Wanna Insert another node???"");
             ins=(char)br.read();
             br.read();
             if(ins=='y')
             {
                 temp=new Node();
                 System.out.println(""Enter next data"");
                 temp.data=Integer.parseInt(br.readLine());
                 temp.link=null;
                 ptr.link=temp;
                 temp=null;
                 ptr=ptr.link;
                }
            }while(ins=='y');
        }

public static void main(String args[])throws IOException
     {
       Node first= new Node();
       first.create();
}
}
</code></pre>
"
"26671186","<pre><code>private static void iterateBetweenDates(Date startDate,Date endDate) {
    Calendar startCalemder = Calendar.getInstance();
    startCalemder.setTime(startDate);
    Calendar endCalendar = Calendar.getInstance();
    endCalendar.setTime(endDate);

    for(; startCalemder.compareTo(endCalendar)&lt;=0;
          startCalemder.add(Calendar.DATE, 1)) {
        // write you main logic here
    }

}
</code></pre>
"
"26727141","<p>I had this problem too.
My DOCTYPE was:</p>

<pre><code>&lt;!DOCTYPE hibernate-configuration PUBLIC ""-//Hibernate/Hibernate Configuration DTD 3.0//EN"" ""http://hibernate.org/dtd/hibernate-configuration-3.0.dtd""&gt;
</code></pre>

<p>It should be:</p>

<pre><code>&lt;!DOCTYPE hibernate-configuration PUBLIC ""-//Hibernate/Hibernate Configuration DTD 3.0//EN"" ""http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd""&gt;
</code></pre>

<p>Can you see the difference?
The first URI has NOT <code>www</code> and the second URI has <code>www</code></p>

<p>So, the <code>www</code> in the URI must be declared in the configuration file and in all the mapping files.</p>

<p>It is not your case (cause I can see you have the <code>http://www...</code> URI), but it may help somebody.</p>

<p>Regards.</p>
"
"26826505","<p>i found issue data 8 in a month. Here is the scenario.</p>

<pre><code>public static void main(String[] args) {

  DateTimeUtils obj = new DateTimeUtils();
  SimpleDateFormat simpleDateFormat = 
           new SimpleDateFormat(""M/dd/yyyy""); //M/dd/yyyy hh:mm:ss

    String d1 = ""11/01/2014 11:30:10""; 
    String d2 = ""12/08/2015 11:35:55"";

  try {

    Date date1 = simpleDateFormat.parse(d1);
    Date date2 = simpleDateFormat.parse(d2);

    obj.printDifference(date1, date2);  

  } catch (ParseException e) {
    e.printStackTrace();
  }

}

public void printDifference(Date startDate, Date endDate){

  Interval interval = 
           new Interval(startDate.getTime(), endDate.getTime());
  Period period = interval.toPeriod();

      System.out.printf(
       ""%d years, %d months, %d days, %d hours, %d minutes, %d seconds%n"", 
       period.getYears(), period.getMonths(), period.getDays(),
       period.getHours(), period.getMinutes(), period.getSeconds());

}
</code></pre>

<p>Result: 1 years, 1 months, 0 days, 0 hours, 0 minutes, 0 seconds
Expected: 1 years, 1 months, 7 days, 0 hours, 0 minutes, 0 seconds</p>
"
"5545630","<pre><code>//Do you think I'm sexy?
if(list1.length == list2.length){
    for (int i = 0; i &lt; list1.length; ++i) {
        doStuff(list1[i]);
        doStuff(list2[i]);
    }
}
</code></pre>
"
"26970703","<p>please try to make it as a character </p>

<pre><code>string str = ""Tigger"";
//then str[0] will return 'T' not ""T""
</code></pre>
"
"27124468","<h1>Java8</h1>

<pre><code> import java.time.format.DateTimeFormatter;         
 myDate.format(DateTimeFormatter.ofPattern(""dd-MMM-YYYY"",new Locale(""ar"")))
</code></pre>
"
"5554232","<p>Replace <code>new List&lt;MyClass&gt;(){}.getClass()</code> with <code>List.class</code></p>
"
"27464624","<p>To serialize somethiing you will need object in entry.  What you can do is put your object in collection of objects, and after that make loop to get iterator and put them in byte array.  Then, call <code>ByteBuffer.allocate(byte[].length)</code>.  That is what I did and it worked for me.</p>
"
"27640488","<pre><code>public static int getDifferenceIndays(long timestamp1, long timestamp2) {
    final int SECONDS = 60;
    final int MINUTES = 60;
    final int HOURS = 24;
    final int MILLIES = 1000;
    long temp;
    if (timestamp1 &lt; timestamp2) {
        temp = timestamp1;
        timestamp1 = timestamp2;
        timestamp2 = temp;
    }
    Calendar startDate = Calendar.getInstance(TimeZone.getDefault());
    Calendar endDate = Calendar.getInstance(TimeZone.getDefault());
    endDate.setTimeInMillis(timestamp1);
    startDate.setTimeInMillis(timestamp2);
    if ((timestamp1 - timestamp2) &lt; 1 * HOURS * MINUTES * SECONDS * MILLIES) {
        int day1 = endDate.get(Calendar.DAY_OF_MONTH);
        int day2 = startDate.get(Calendar.DAY_OF_MONTH);
        if (day1 == day2) {
            return 0;
        } else {
            return 1;
        }
    }
    int diffDays = 0;
    startDate.add(Calendar.DAY_OF_MONTH, diffDays);
    while (startDate.before(endDate)) {
        startDate.add(Calendar.DAY_OF_MONTH, 1);
        diffDays++;
    }
    return diffDays;
}
</code></pre>
"
"5588517","<p>You can write</p>

<pre><code>error();
return;
</code></pre>

<p>But you may reconsider your approach. This may not be a very object oriented one.</p>
"
"24661960","<p>My situation was a bit different. </p>

<ul>
<li><code>JAVA_HOME</code> was set properly to point to 1.7</li>
<li>Other Maven projects were working/building fine with 1.7 features.</li>
<li><code>PATH</code> was set properly.</li>
<li>Everything was up-to-date.</li>
</ul>

<p>Still my simple new Maven project was not working. What I noticed was the difference in the logs when I ran <code>mvn clean install</code>. For my older Maven projects, it showed </p>

<pre><code>[INFO] --- maven-compiler-plugin:2.3.2:compile (default-compile) @ oldProject---
</code></pre>

<p>But for my new project it showed:</p>

<pre><code>[INFO] --- maven-compiler-plugin:2.0.2:compile (default-compile) @ newProject ---
</code></pre>

<p>So, I looked at the <code>POM.xml</code> and noticed this thing in the old project's POM:</p>

<pre><code>&lt;build&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
            &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
            &lt;version&gt;2.3.2&lt;/version&gt;
            &lt;configuration&gt;
                &lt;source&gt;1.7&lt;/source&gt;
                &lt;target&gt;1.7&lt;/target&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;
    &lt;/plugins&gt;
&lt;/build&gt;
</code></pre>

<p>Basically, this plugin tells which compiler version to use for compilation. Just added it to the new project's <code>POM.xml</code> and things worked. </p>

<p>Hope it is useful to someone.</p>
"
"27937737","<p>The purpose of “final” keyword in JAVA can be defined in three level are Class, Method, variable</p>

<pre><code>Java final variable: If you make any variable as final, you cannot change the value of final variable (It will be constant).

Java final method: If you make any method as final, you cannot override it.

Java final class: If you make any class as final, you cannot extend it.
</code></pre>
"
"24753721","<p>you can use Jsch library. This is maven dependency</p>

<pre><code>     &lt;dependency&gt;
        &lt;groupId&gt;com.jcraft&lt;/groupId&gt;
        &lt;artifactId&gt;jsch&lt;/artifactId&gt;
        &lt;version&gt;0.1.51&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre>

<p>And this is sample code.</p>

<pre><code>@Test
    public void sftpClientTest() throws JSchException {

        JSch jsch = new JSch();

        Session session = jsch.getSession( ""root"", ""hostname"", 2port );
        java.util.Properties config = new java.util.Properties();
        config.put(""StrictHostKeyChecking"", ""no"");
        config.put(""PreferredAuthentications"",""password"");
        session.setConfig(config);

        session.setPassword( ""1234"" );
        session.connect( 60000 );
        com.jcraft.jsch.Channel channel = session.openChannel(""sftp"");
        ChannelSftp sftp = ( ChannelSftp ) channel;
        sftp.connect( 60000 );
        System.out.println(""bağlantı sağlandı"");
        sftp.disconnect();
        System.out.println(""bağlantı sonlandı"");

    }
</code></pre>
"
"24801376","<pre><code>/* This code is just for convert a single uppercase character to lowercase 
character &amp; vice versa.................*/

/* This code is made without java library function, and also uses run time input...*/



import java.util.Scanner;

class CaseConvert {
char c;
void input(){
//@SuppressWarnings(""resource"")  //only eclipse users..
Scanner in =new Scanner(System.in);  //for Run time input
System.out.print(""\n Enter Any Character :"");
c=in.next().charAt(0);     // input a single character
}
void convert(){
if(c&gt;=65 &amp;&amp; c&lt;=90){
    c=(char) (c+32);
    System.out.print(""Converted to Lowercase :""+c);
}
else if(c&gt;=97&amp;&amp;c&lt;=122){
        c=(char) (c-32);
        System.out.print(""Converted to Uppercase :""+c);
}
else
    System.out.println(""invalid Character Entered  :"" +c);

}


  public static void main(String[] args) {
    // TODO Auto-generated method stub
    CaseConvert obj=new CaseConvert();
    obj.input();
    obj.convert();
    }

}



/*OUTPUT..Enter Any Character :A Converted to Lowercase :a 
Enter Any Character :a Converted to Uppercase :A
Enter Any Character :+invalid Character Entered  :+*/
</code></pre>
"
"28209363","<p>you can go with this also</p>

<pre><code>request.getSession().invalidate();      
        response.setHeader(""Cache-Control"", ""no-cache, no-store, must-revalidate""); 
        response.setHeader(""Pragma"", ""no-cache"");
        response.setDateHeader(""Expires"", 0);
</code></pre>
"
"28592434","<pre><code>Integer.parseInt(someNumberString); 
</code></pre>

<p>or</p>

<pre><code>someNumberString.toInt(); 
</code></pre>

<p>works</p>
"
"5639409","<p>Thanks @jbx, I knew there was a simpler way :) However, that doesn't seem to work for the east and west walls and the paddles (if they're on those walls). This seems to work for me on the east and west walls though: </p>

<pre><code>(180 - (angle + 90)) - 90.
</code></pre>

<p>which simplifies to just <code>(180-angle)</code>.
Hope that helps.</p>
"
"29137704","<pre><code>Date d = new Date(i * 1000 + TimeZone.getDefault().getRawOffset());
</code></pre>
"
"29150241","<p>Use this code to open a specific file:</p>

<pre><code>String cmds[] = new String[] {""cmd"", ""/c"", ""C:\\Users\\PC\\Desktop\\EA01.pdf""};
try {
    Runtime.getRuntime().exec(cmds);
}
</code></pre>
"
"26028759","<p>You could make a method:</p>

<pre><code>public byte[] toBytes(char[] data) {
byte[] toRet = new byte[data.length];
for(int i = 0; i &lt; toRet.length; i++) {
toRet[i] = (byte) data[i];
}
return toRet;
}
</code></pre>

<p>Hope this helps</p>
"
"26173221","<pre><code>BufferedReader br = new BufferedReader(new FileReader(file));
String line;
while ((line = br.readLine()) != null) {
// process the line.
}
br.close(); // close bufferreader after use
</code></pre>
"
"29494914","<p>class Graph {
    private List> vertices;</p>

<pre><code>private static class Vertex&lt;E&gt; {
    E elem;
    List&lt;Vertex&lt;E&gt;&gt; neighbors;
}
</code></pre>

<p>}</p>
"
"29577271","<h2>Disable the Bytecode Verification</h2>

<p><b>java.lang.VerifyError - </b> Runtime Unchecked Exception 
once class file is loaded in Websphere JVM, then byte code varification is the next process.during byte code verification if our class in violating the JVM constraints ,then this error appears.</p>

<p>disable bytecode verification. Go to </p>

<p><b>admin console<code>-&gt;</code>server1<code>-&gt;</code>java and process management<code>-&gt;process definition-&gt;</code>JVM arguments`  </b></p>

<p>And in JVM arguments pass the following string </p>

<pre><code> -Xverify:none 
</code></pre>

<p>and in workspace open the ApplicationDeploymentDescriptor xml file, go to deployment tab, select PARENT_LAST for war, as well as for first option. this stops the xml validations errors.</p>
"
"26996611","<p>I'm only a high school student at the moment, but an easy solution that I got from a friend of mine should work. It goes like this (this is part of a project in my AP class):</p>

<pre><code>public String firstMiddleLast()
{
   //returns first, middle, and last names
    return (first + "" "" + middle + "" "" + last);
}
</code></pre>
"
"30000144","<pre><code>import java.net.*;

public class demo{

  public static void main(){

       String Data = ""data=Hello+World!"";
       URL url = new URL(""http://localhost:8084/WebListenerServer/webListener"");
       HttpURLConnection con = (HttpURLConnection) url.openConnection();
       con.setRequestMethod(""POST"");
       con.setDoOutput(true);
       con.getOutputStream().write(Data.getBytes(""UTF-8""));
       con.getInputStream();

    }

}
</code></pre>
"
"27264279","<p>It would be helpful.</p>

<pre><code>Random randomGenerator = new Random();
int red = randomGenerator.nextInt(255);
int green = randomGenerator.nextInt(255);
int blue = randomGenerator.nextInt(255); 
Color randomColour = new Color(red,green,blue);
</code></pre>
"
"30160224","<p>// perameterized constructor with Constructor overloading</p>

<pre><code>  public class Bike
  {
      int rollno;
      String name;
      int id;
   Bike(int n , String s)
  {
      rollno = n;
      name = s;

  }

   Bike(int n , String s , int i)
   {
       rollno = n;
      name = s;
      id = i;
   }

  void display()
  {
      System.out.println(rollno+"" ""+name+"" ""+id);
  }

  public static void main(String[] args)
  {
      Bike b1= new Bike (111,""harsh"");
      Bike b2= new Bike (161,""arpit"",65);

      b1.display();
      b2.display();

  }
  }
</code></pre>
"
"5681427","<p>A modified version of the same code, which more optimal IMO :) To answer you question, the analogy is wrong. gotos received a bad reputation because of the way they allowed control flows to escape, causing nightmares. Locks do not allow control to escape in the same sense. Well, you may ask what happens if I acquire a lock and refuse to release it. Not possible with sync blocks. The ideal pattern is to use a try-finally. BTW, concurrent programming is itself a nightmare which cannot be enhanced/reduced.</p>

<pre><code>while(true) {
    if(queue.size()==0){
        Thread.sleep(36000);
    }
    lock.lock();
    Vpacket p = null;
    try {
         p = null;
         if(queue.size()!=0) {
              p = queue.pop();
         }
    } finally {
         lock.unlock();
         if(p!=null) {
              return p;
         }
    }
}
</code></pre>
"
"30283007","<p>There is another way to iterate through enum values:</p>

<pre><code>for (TypesOfDogEnum dog : TypesOfDogEnum.values()) {
  // do what you want
}
</code></pre>
"
"30346635","<p>Try this : </p>

<p>Iterator rows = sheet.rowIterator();</p>

<pre><code>    while (rows.hasNext())
    {
        row=(HSSFRow) rows.next();
        Iterator cells = row.cellIterator();

        while (cells.hasNext())
        {
            cell=(HSSFCell) cells.next();

            if (cell.getCellType() == HSSFCell.CELL_TYPE_STRING)
            {
                System.out.print(cell.getStringCellValue()+"" "");
            }
            else if(cell.getCellType() == HSSFCell.CELL_TYPE_NUMERIC)
            {
                System.out.print(cell.getNumericCellValue()+"" "");
            }
            else
            {
                //U Can Handel Boolean, Formula, Errors
            }
        }
        System.out.println();
    }
</code></pre>
"
"30354388","<p>Another way to control headers and allow Spring to do the serialization is like this:</p>

<pre><code>@RequestMapping(method=RequestMethod.GET, value=""foo/bar"")
public ResponseEntity&lt;Bar&gt; fooBar() {
    Bar bar = barService.getBar();

    HttpHeaders headers = new HttpHeaders();
    headers.setContentType(MediaType.APPLICATION_JSON);
    headers.add(""Some-Custom-Header-Key"", ""12345"");
    return headers;

    return new ResponseEntity&lt;Bar&gt;(bar, headers, HttpStatus.OK);
}
</code></pre>
"
"27563905","<p>you can use OR concatenation</p>

<pre><code>switch(var)
{
  case 1 || 2 :   expression; break;
  case 3 :   expression; break;
  case 4 :   expression; break;

}  
</code></pre>
"
"27760556","<p><code>System.getProperty(""java.class.path"")</code></p>
"
"27831435","<pre><code>import java.util.Scanner;

public class userinput {
    public static void main(String[] args) {        
        Scanner input = new Scanner(System.in);

        System.out.print(""Name : "");
        String name = input.next();
        System.out.print(""Last Name : "");
        String lname = input.next();
        System.out.print(""Age : "");
        byte age = input.nextByte();

        System.out.println("" "" );
        System.out.println("" "" );

        System.out.println(""Firt Name: "" + name);
        System.out.println(""Last Name: "" + lname);
        System.out.println(""      Age: "" + age);
    }
}
</code></pre>
"
"5887103","<p>You could use a pair of <code>replaceAll()</code> calls to indicate the positive and negative matches of the input string.  Let's say, for example, you want to validate a hex string; the following will indicate the valid and invalid characters of the input string.</p>

<pre><code>String regex = ""[0-9A-F]""
String input = ""J900ZZAAFZ99X""
Pattern p = Pattern.compile(regex)
Matcher m = p.matcher(input)
String mask = m.replaceAll('+').replaceAll('[^+]', '-')
System.out.println(input)
System.out.println(mask)
</code></pre>

<p>This would print the following, with a <code>+</code> under valid characters and a <code>-</code> under invalid characters.</p>

<pre><code>J900ZZAAFZ99X
-+++--+++-++-
</code></pre>
"
"28176473","<p>I do realize that the given thread is very old, but there is a better way of solving it:</p>

<pre><code>class Toggle
{ 
    public static void main()
    { 
        String str = ""This is a String"";
        String t = """";
        for (int x = 0; x &lt; str.length(); x++)
        {  
            char c = str.charAt(x);
            boolean check = Character.isUpperCase(c);
            if (check == true)
                t = t + Character.toLowerCase(c);
            else
                t = t + Character.toUpperCase(c);
        }
        System.out.println (t);
    }
}
</code></pre>
"
"6224284","<pre><code>public boolean isCorrect() {
    data = new String[6];
    for (int i = 0; i &lt; informationLabel.length; i++) {
        if (i == 0) {
            if (!informationTextField[i].getText().equals("""")) {
                data[i] = informationTextField[i].getText();
            }
            else
                return false;
        }
        if (i == 1 || i == 2) {
            if (informationPasswordField[i - 1].getText().equals(""""))
                return false;
        }
        if (i == 3 || i == 4 || i == 5 || i == 6) {
            if (!informationTextField[i - 2].getText().equals("""")) {
                data[i - 1] = informationTextField[i - 2].getText();
            }
            else
                return false;
        }
    }
    return true;
}
</code></pre>
"
"28372892","<p>There is no need to run in headless mode. Selenium can be run locally or remotely using a current DISPLAY session variable as long as it is correct. See my post in <a href=""http://thinkinginsoftware.blogspot.com/2015/02/setting-display-variable-to-avoid-no.html"" rel=""nofollow"">http://thinkinginsoftware.blogspot.com/2015/02/setting-display-variable-to-avoid-no.html</a> but in short:</p>

<pre><code># Check current DISPLAY value
$ echo $DISPLAY
:0
# If xclock fails as below the variable is incorrect
$ xclock
No protocol specified
No protocol specified
Error: Can't open display: :0
# Find the correct value for the current user session
$ xauth list|grep `uname -n`
uselenium/unix:10  MIT-MAGIC-COOKIE-1  48531d0fefcd0a9bde13c4b2f5790a72
# Export with correct value
$ export DISPLAY=:10
# Now xclock runs
$ xclock
</code></pre>
"
"28783247","<h2>How to create HangMan Game</h2>

<blockquote>
  <p>package arr_game;</p>
</blockquote>

<pre><code>import java.util.Random;
import java.util.Scanner;
public class HangMan3 {
    public static char[] star;
        public static void main (String args[])
        {   
            char game[];
            Scanner input = new Scanner(System.in);
            Random r = new Random();
            String[] arr = { ""pakistan"", ""india"", ""jarmany"", ""america"", ""rashia"", ""iran"", ""iraq"", ""japan"", ""sudan"", ""canada""};

            String word = arr[r.nextInt(arr.length)];
            int count = word.length();
            char[] CharArr=word.toCharArray(); 
            char[] star = word.toCharArray();
        for(int i=0;i&lt;star.length;i++)
        {
            star[i] = '*';
            System.out.print(star[i]);
        }

        for (int i=1; i&lt;=3; i++)
        {
            System.out.printf (""\nGuess a Letter:"");
            char letter= input.next().charAt(0);

            for (int j=0;j&lt;CharArr.length; j++)
            {
                if(letter == star[j])
                {
                    System.out.println(""this word already exist"");
                }
                else
        {
                    if(letter==CharArr[j])
                    {
                        star[j]=letter;
                        i--;
                        System.out.printf(""CORRECT GUESS!\n"");
                    }
                }
            }
            System.out.print(star);
            switch(i+0)
            {
                    case 1: System.err.printf(""Strike 1\n"");
                        break;
                    case 2: System.err.printf(""Strike 2\n"");
                        break;
                    case 3: System.err.printf(""Strike 3\n"");
                        System.err.printf(""You're out!!! The word is Not_Matched\n"");
                        break;
            }   

            System.out.printf(""\n"");
            if((new String(word)).equals(new String(star))) 
            {
                System.err.printf(""Winner Winner, Chicken Dinner!\n"");
                break;
            }
        }
    }
}
</code></pre>
"
"28931639","<pre><code>//myFile should only be created using this method to ensure thread safety
public synchronized File getMyFile(){
  File file = new File(""path/to/myfile.ext"");
  if(!file.exists()){
     file.getParentFile().mkdirs();
     file.createNewFile();
  }
  return file;
}  
</code></pre>
"
"6371065","<pre><code>BufferedImage buffImg = new BufferedImage(176, 144, BufferedImage.TYPE_INT_RGB);

            /*Setting RGB values to BufferedImage*/
            int[] raw = new int[rgbCameraData.length * 4 / 3];
            for (int i = 0; i &lt; rgbCameraData.length / 3; i++) {
                raw[i] = 0xFF000000
                        | ((rgbCameraData[3 * i + 0] &amp; 0xFF) &lt;&lt; 16)
                        | ((rgbCameraData[3 * i + 1] &amp; 0xFF) &lt;&lt; 8)
                        | ((rgbCameraData[3 * i + 2] &amp; 0xFF));
            }
            buffImg.setRGB(0, 0, 176, 144, raw, 0, 176);
            System.out.println(""BufferedImage  :"" + img);
</code></pre>
"
"29193817","<pre><code>class ex1 {    
    public static void main(String args[]){
        int a, b, c;
        a = Integer.parseInt(args[0]);
        b = Integer.parseInt(args[1]);
        c = a + b;
        System.out.println(""c = "" + c);
    }
}
// Output  
javac ex1.java
java ex1 10 20 
c = 30
</code></pre>
"
"29858068","<p>There is the function in guava libraries:</p>

<pre><code>LongMath.log2()
</code></pre>

<p>So I suggest to use it.</p>
"
"29871787","<pre><code>new File(""/path/to/file"").exists(); 
</code></pre>

<p>will do the trick</p>
"
"6858099","<p>I had the same problem but got fixed</p>

<p>i dont know exactly how this problem gonna fix </p>

<p>Just try, It might be helpful</p>

<p>add this code at the top of ur code</p>

<pre><code>import com.MyFirstApp.activities.R;
</code></pre>

<p>here <code>com.MyFirstApp.activties</code> is my component name replace it with your component name</p>
"
"7172268","<pre><code>org.apache.commons.vfs.*;
</code></pre>

<p>this import also helps in this regard.</p>
"
"7207581","<p>And where would one declare this thread.  Please bear in mind any, any reference to a function that contains thread sleep will cause the main thread to pause.  Because the main thread will have to wait the the sub thread to pause.</p>

<p>The reality is that threads don't realy work as seperate independant thread because a thread must be started from another thread.  In other words if you are creating desktop application, and even if you don't work with other threads, your application is a one threaded application.  Now if you start working with threads &amp; putting them to sleep, you will soon find out that that you won't be able to do anything else in the application.  No &amp; no the other threads won't even run because they are waiting the first thread to finish sleeping.  Why is this?  Cause the thread are sub threads of the main thread and it is the main thread that is waiting for that sleep sub thread to wake up.  You can't design a threadless application either as java is single main threaded application.  Any, yes any, thread further defined in your application always runs inside in the main thread.</p>

<p>Unless somebody can prove me wrong, you obviously whould never pause your main thread as this would lock up your app.  However as soon you define another thread and suspend it with <code>sleep()</code> this also locks up your app as the thread was defined in subclass of the main application and therefore the main thread.</p>

<p>So to put a very very long story to bed, pausing a user defined thread, is almost exactly the same as if your called the <code>Thread.sleep()</code> for anywhere in your app, it 
pauses the entire application.  </p>
"
"7425140","<pre><code>public class cube{
    static int length=20;
    static int breath=30;
    static int height=10;

    public static int volume( final int i, final int j, final int k){
        System.out.println(""i="" + i + ""j= "" + j + ""k= "" + k);
        return length*breath*height;
    }

    public static void main(final String args[]){
        int a;
        a=volume(10, 20, 30);
          System.out.println("" area of cube "" + a);
    }
}</code></pre>
"
"7859054","<p>There is workaround to do so. We can use iframe where iframe will open in html page, iframe will hold the pdf report whereas the html page is independent of iframe. We can edit the title of html page that holds iframe.</p>

<pre><code>&lt;%@ page language=""java"" contentType=""text/html; charset=ISO-8859-1"" pageEncoding=""ISO-8859-1""%&gt;
&lt;%@taglib prefix=""form"" uri=""http://www.springframework.org/tags/form"" %&gt; 
&lt;%@taglib uri=""http://java.sun.com/jsp/jstl/core"" prefix=""c"" %&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;${reportName}&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;iframe src=""/fcWeb/ReportPDFServlet"" width=""100%"" height=""100%""&gt;&lt;/iframe&gt; 
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>
"
"8774716","<p>My annotation lib for implementing <code>Comparable</code> and <code>Comparator</code>:</p>

<pre><code>public class Person implements Comparable&lt;Person&gt; {         
    private String firstName;  
    private String lastName;         
    private int age;         
    private char gentle;         

    @Override         
    @CompaProperties({ @CompaProperty(property = ""lastName""),              
        @CompaProperty(property = ""age"",  order = Order.DSC) })           
    public int compareTo(Person person) {                 
        return Compamatic.doComparasion(this, person);         
    }  
}
</code></pre>

<p>Click the link to see more examples.
<a href=""http://code.google.com/p/compamatic/wiki/CompamaticByExamples"" rel=""nofollow"">http://code.google.com/p/compamatic/wiki/CompamaticByExamples</a></p>
"
"10005763","<pre><code>public String GetRandomPhone(){
    return  String.format(""(%03d) %03d-%04d"", 
        (int) Math.floor(999*Math.random()), 
        (int) Math.floor(999*Math.random()),
        (int) Math.floor(9999*Math.random()));
}
</code></pre>
"
"10515818","<pre><code>public static void main(String[] args) {

    int b,c,total = 15;
    int combos =1;
        for(int d=0;d&lt;total/7;d++)
           {
             b = total - d * 7;
            for (int n = 0; n &lt;= b /6; n++)
        {
                    combos++;

        }

        }

      System.out.print(""TOTAL COMBINATIONS  = ""+combos);
}
</code></pre>
"
"10595901","<p>i think its really easy way :p which we cant do in C but can do in java</p>

<pre><code>package javaapplication21;

import java.util.Scanner;
public class JavaApplication21 {
    public static void main(String[] args) {
       int a;
       Scanner obj=new Scanner(System.in);
       System.out.print(""Enter array size="");
       a=obj.nextInt();
       int b[]=new int[a];
       for(int i=0;i&lt;b.length;i++){
          System.out.println(b[i]+i);
       }
   }
}
</code></pre>
"
"10693861","<p>This code I programmed is much faster for very large files:</p>

<pre><code>public String readDoc(File f) {
    String text = """";
    int read, N = 1024 * 1024;
    char[] buffer = new char[N];

    try {
        FileReader fr = new FileReader(f);
        BufferedReader br = new BufferedReader(fr);

        while(true) {
            read = br.read(buffer, 0, N);
            text += new String(buffer, 0, read);

            if(read &lt; N) {
                break;
            }
        }
    } catch(Exception ex) {
        ex.printStackTrace();
    }

    return text;
}
</code></pre>
"
"10972579","<pre><code>public class Whatever_MainActivity extends Activity
{
    ImageButton button1, button2, button3, button4, button5;      // my buttons
    Button start, reroll, hold;

    Button reroll_dice1, reroll_dice2, reroll_dice3, reroll_dice4, reroll_dice5;

    Button ok_button1;

@Override
    public void onCreate(Bundle savedInstanceState) 
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        Buttons(); // ""Come here button""

        // Scoring_Method();
    }

public void Buttons()
    {
       ok_button1 = (Button)findViewById(R.id.ok_button1);
       ok_button1.setOnClickListener(new OnClickListener()
                        {
                            public void onClick(View buttonn)
                            {
                                reroll_dice1.setVisibility(View.INVISIBLE);
                                reroll_dice2.setVisibility(View.INVISIBLE);
                                reroll_dice3.setVisibility(View.INVISIBLE);
                                reroll_dice4.setVisibility(View.INVISIBLE);
                                reroll_dice5.setVisibility(View.INVISIBLE);
                                ok_button1.setVisibility(View.INVISIBLE);


                                reroll.setVisibility(View.VISIBLE);
                                hold.setVisibility(View.VISIBLE);
                            }
                        });
   }
</code></pre>
"
"11754143","<p>We can also use <code>addslashes</code> function for saving the file path,</p>

<pre><code>addslashes($filepath)
</code></pre>
"
"11767850","<p>Add Maven dependency :</p>

<pre><code>&lt;dependency&gt;
  &lt;groupId&gt;org.geotoolkit&lt;/groupId&gt;
  &lt;artifactId&gt;geotk-coverageio&lt;/artifactId&gt;
  &lt;version&gt;3.17&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p>Code example :</p>

<pre><code>import org.geotoolkit.image.io.plugin.RawTiffImageReader;

IIORegistry registry = IIORegistry.getDefaultInstance();   
registry.registerServiceProvider(new RawTiffImageReader.Spi());            

String[] a = ImageIO.getReaderFileSuffixes();    
for (int i=0; i&lt;a.length; i++) {
 System.out.println(a[i]);
}   

BufferedImage image = ImageIO.read(new File(""C:\\mypic.tiff""));

ImageIO.write(image, ""jpg"",new File(""C:\\out.jpg""));
ImageIO.write(image, ""gif"",new File(""C:\\out.gif""));
ImageIO.write(image, ""png"",new File(""C:\\out.png""));
ImageIO.write(image, ""tif"",new File(""C:\\out.tiff""));
</code></pre>
"
"11777376","<p>Apache Commons ftw.</p>

<pre><code>Arrays.asList(StringUtils.split(StringUtils.substringBetween(""[1, 2, 3]"", ""["", ""]""), "", ""))
</code></pre>
"
"12521287","<p><code>if (10 &lt; x || x &lt; 20)</code></p>

<p>This statement will evaluate true for numbers between 10 and 20.
This is a rough equivalent to <code>10 &lt; x &lt; 20</code></p>
"
"12543988","<p>You can make use of the following code. To add JTable to JPanel.</p>

<pre><code>JPanel panel = new JPanel();
this.setContentPane(panel);
panel.setLayout(null);
String data[][] = {{""1."", ""ABC""}, {""2."", ""DEF""}, {""3."", ""GHI"" }};
String col[] = {""Sr. No"", ""Name""};
JTable table = new JTable(data,col);
table.setBounds(100, 100, 100, 80);
panel.add(table);
setVisible(true);
setSize(300,300);
</code></pre>
"
"12608444","<p>To make Velocity look for the templates in classpath:</p>

<pre><code>VelocityEngine ve = new VelocityEngine();
ve.setProperty(RuntimeConstants.RESOURCE_LOADER, ""classpath"");
ve.setProperty(""classpath.resource.loader.class"",ClasspathResourceLoader.class.getName());
ve.init();
</code></pre>
"
"13500929","<p>TreeMap because in HashMap size of inner array can only increase </p>

<pre><code>public class Locker&lt;T&gt; {
    private final Object lock = new Object();
    private final Map&lt;T, Value&gt; map = new TreeMap&lt;T, Value&gt;();

    public Value&lt;T&gt; lock(T id) {
        Value r;
        synchronized (lock) {
            if (!map.containsKey(id)) {
                Value value = new Value();
                value.id = id;
                value.count = 0;
                value.lock = new ReentrantLock();
                map.put(id, value);
            }
            r = map.get(id);
            r.count++;
        }
        r.lock.lock();
        return r;
    }

    public void unlock(Value&lt;T&gt; r) {
        r.lock.unlock();
        synchronized (lock) {
            r.count--;
            if (r.count == 0)
                map.remove(r.id);
        }
    }

    public static class Value&lt;T&gt; {

        private Lock lock;
        private long count;
        private T id;
    }
}
</code></pre>
"
"13763377","<p><code>static int</code>, which can be accessed directly without using objects.
<code>int</code>, which cannot be accessed directly without using objects.  </p>
"
"13920796","<p>Another solution is to extend <code>LinkedList&lt;String&gt;</code> (or <code>ArrayList&lt;String&gt;</code>, etc.), then create an array of the subclass.</p>

<pre><code>private static class StringList extends LinkedList&lt;String&gt; {}

public static void main(String[] args)
{
    StringList[] strings = new StringList[2];
    strings[0] = new StringList();
    strings[1] = new StringList();
    strings[0].add(""Test 1"");
    strings[0].add(""Test 2"");
    strings[1].add(""Test 3"");
    strings[1].add(""Test 4"");
    System.out.println(strings[0]);
    System.out.println(strings[1]);
}
</code></pre>
"
"13930892","<pre><code>String formattedStr=unformattedStr;
formattedStr=formattedStr.trim().replaceAll(""\\s+"", "" "");
</code></pre>
"
"14125113","<p>I Hope this code can help others. Tested working fine. Thanks to above member to clarify it.</p>

<pre><code>/**
 * Get the free disk available space in boolean to download requested file 
 * 
 * @return boolean value according to size availability
 */

protected static boolean isMemorySizeAvailableAndroid(long download_bytes, boolean isExternalMemory) {
    boolean isMemoryAvailable = false;
    long freeSpace = 0;

    // if isExternalMemory get true to calculate external SD card available size
    if(isExternalMemory){
        try {
            StatFs stat = new StatFs(Environment.getExternalStorageDirectory().getPath());
            freeSpace = (long) stat.getAvailableBlocks() * (long) stat.getBlockSize();
            if(freeSpace &gt; download_bytes){
                isMemoryAvailable = true;
            }else{
                isMemoryAvailable = false;
            }
        } catch (Exception e) {e.printStackTrace(); isMemoryAvailable = false;}
    }else{
        // find phone available size
        try {
            StatFs stat = new StatFs(Environment.getDataDirectory().getPath());
            freeSpace = (long) stat.getAvailableBlocks() * (long) stat.getBlockSize();
            if(freeSpace &gt; download_bytes){
                isMemoryAvailable = true;
            }else{
                isMemoryAvailable = false;
            }
        } catch (Exception e) {e.printStackTrace(); isMemoryAvailable = false;}
    }

    return isMemoryAvailable;
}
</code></pre>
"
"14155716","<pre><code>public String TotalExtMemory()
{
    StatFs statFs = new StatFs(Environment.getExternalStorageDirectory().getAbsolutePath());   
    int Total = (statFs.getBlockCount() * statFs.getBlockSize()) / 1048576;

    String strI = Integer.toString(Total);
    return strI;
}

public String FreeExtMemory()
{
    StatFs statFs = new StatFs(Environment.getExternalStorageDirectory().getAbsolutePath());
    int Free  = (statFs.getAvailableBlocks() * statFs.getBlockSize()) / 1048576;
    String strI = Integer.toString(Free);
    return strI;
}

public String BusyExtMemory()
{
    StatFs statFs = new StatFs(Environment.getExternalStorageDirectory().getAbsolutePath());   
    int Total = (statFs.getBlockCount() * statFs.getBlockSize()) / 1048576;
    int Free  = (statFs.getAvailableBlocks() * statFs.getBlockSize()) / 1048576;
    int Busy  = Total - Free;
    String strI = Integer.toString(Busy);
    return strI;
}
</code></pre>
"
"14210792","<p>Add an event for <code>KeyPressed</code>.</p>

<pre><code>private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {
  if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
      // Enter was pressed. Your code goes here.
   }
} 
</code></pre>
"
"14571369","<p>The same problem for coins(1,5,10,25,50) has one of below solutions.
The solution should satisfy below equation:
1*a + 5*b + 10*c + 25*d + 50*e == cents</p>

<p>public static void countWaysToProduceGivenAmountOfMoney(int cents) {</p>

<pre><code>    for(int a = 0;a&lt;=cents;a++){
        for(int b = 0;b&lt;=cents/5;b++){
            for(int c = 0;c&lt;=cents/10;c++){
                for(int d = 0;d&lt;=cents/25;d++){
                    for(int e = 0;e&lt;=cents/50;e++){
                        if(1*a + 5*b + 10*c + 25*d + 50*e == cents){
                            System.out.println(""1 cents :""+a+"", 5 cents:""+b+"", 10 cents:""+c);
                        }
                    }
                }
            }
        }
    }
}
</code></pre>

<p>This can be modified for any general solutions.</p>
"
"14727937","<p>Try</p>

<pre><code>private void inText_UserIDKeyReleased( java.awt.event.KeyEvent evt ) {
    String UsrID=inText_UserID.getText().toUpperCase();
    inText_UserID.setText( UsrID );
}
</code></pre>
"
"14855225","<pre><code>value = (int)(value * 100 + 0.5) / 100.0;
</code></pre>
"
"16108688","<p>I am re-editing this answer to complete the proposed example and correct some typo.  </p>

<pre><code>import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import java.util.HashMap;
import java.util.Map;

@SuppressWarnings(""unchecked"")
public class Main {

    public static void main(String[] args) throws ParseException {

        //containing valid json
        String myDataToParse = ""{\n"" +
            ""   \""pageInfo\"": {\n"" +
            ""         \""pageName\"": \""abc\"",\n"" +
            ""         \""pagePic\"": \""http://example.com/content.jpg\""\n"" +
            ""    }\n"" +
            ""    \""posts\"": [\n"" +
            ""         {\n"" +
            ""              \""post_id\"": \""123456789012_123456789012\"",\n"" +
            ""              \""actor_id\"": \""1234567890\"",\n"" +
            ""              \""picOfPersonWhoPosted\"": \""http://example.com/photo.jpg\"",\n"" +
            ""              \""nameOfPersonWhoPosted\"": \""Jane Doe\"",\n"" +
            ""              \""message\"": \""Sounds cool. Can't wait to see it!\"",\n"" +
            ""              \""likesCount\"": \""2\"",\n"" +
            ""              \""comments\"": [],\n"" +
            ""              \""timeOfPost\"": \""1234567890\""\n"" +
            ""         }\n"" +
            ""    ]\n"" +
            ""}"";


        JSONParser JSON = new JSONParser();

        Map&lt;String, Object&gt; dataParsed = (HashMap&lt;String, Object&gt;)JSON.parse(myDataToParse);

        System.out.println(dataParsed.get(""pageInfo""));
        System.out.println(dataParsed.get(""posts""));


    }
</code></pre>

<p>}</p>
"
"16279142","<p>I opine it may be caused as a result in class/constructor access specifier mismatch. I just resolved a similar issue where the class was declared with a package access specifier but its constructor was declared public.</p>

<p>Simply making the constructor also have a package access specifier resolved the issue. </p>

<pre><code>class Ngram{

    public Ngram(String str, int count){
        ngram = str;
        freq = count;
    }

    String ngram;
    int freq;
}
</code></pre>
"
"16318447","<pre><code>public void keyReleased(KeyEvent e)
{
    int key=e.getKeyCode();
    if(e.getSource()==textField)
    {
        if(key==KeyEvent.VK_ENTER)
        { 
            Toolkit.getDefaultToolkit().beep();
            textField_1.requestFocusInWindow();                     
        }
    }
</code></pre>

<p>To write logic for 'Enter press' in <code>JTextField</code>, it is better to keep logic inside the <code>keyReleased()</code> block instead of <code>keyTyped()</code> &amp; <code>keyPressed()</code>.</p>
"
"16351927","<pre><code>    List&lt;Integer&gt;  listInt = new ArrayList&lt;Integer&gt;();

    StringBuffer strBuffer = new StringBuffer();

    for(Object o:listInt){
        strBuffer.append(o);
    }

    int [] arrayInt = new int[]{Integer.parseInt(strBuffer.toString())};
</code></pre>

<p>I think this should solve your problem</p>
"
"17309209","<p>Base Function Courtesy : @wrygiel. </p>

<p>This function can convert ISO8601 format to Java Date which can handle the offset values. As per the <a href=""http://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC"" rel=""nofollow"">definition of ISO 8601</a> the offset can be mentioned in different formats.</p>

<pre><code>±[hh]:[mm]
±[hh][mm]
±[hh]

Eg:  ""18:30Z"", ""22:30+04"", ""1130-0700"", and ""15:00-03:30"" all mean the same time. - 06:30PM UTC
</code></pre>

<p>This class has static methods to convert </p>

<ul>
<li>ISO8601 string to Date(Local TimeZone) object</li>
<li>Date to ISO8601 string</li>
<li>Daylight Saving is automatically calc</li>
</ul>

<p>Sample ISO8601 Strings</p>

<pre><code>/*       ""2013-06-25T14:00:00Z"";
         ""2013-06-25T140000Z"";
         ""2013-06-25T14:00:00+04"";
         ""2013-06-25T14:00:00+0400"";
         ""2013-06-25T140000+0400"";
         ""2013-06-25T14:00:00-04"";
         ""2013-06-25T14:00:00-0400"";
         ""2013-06-25T140000-0400"";*/


public class ISO8601DateFormatter {

private static final DateFormat DATE_FORMAT_1 = new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ssZ"");
private static final DateFormat DATE_FORMAT_2 = new SimpleDateFormat(""yyyy-MM-dd'T'HHmmssZ"");
private static final String UTC_PLUS = ""+"";
private static final String UTC_MINUS = ""-"";

public static Date toDate(String iso8601string) throws ParseException {
    iso8601string = iso8601string.trim();
    if(iso8601string.toUpperCase().indexOf(""Z"")&gt;0){
        iso8601string = iso8601string.toUpperCase().replace(""Z"", ""+0000"");
    }else if(((iso8601string.indexOf(UTC_PLUS))&gt;0)){
        iso8601string = replaceColon(iso8601string, iso8601string.indexOf(UTC_PLUS));
        iso8601string = appendZeros(iso8601string, iso8601string.indexOf(UTC_PLUS), UTC_PLUS);
    }else if(((iso8601string.indexOf(UTC_MINUS))&gt;0)){
        iso8601string = replaceColon(iso8601string, iso8601string.indexOf(UTC_MINUS));
        iso8601string = appendZeros(iso8601string, iso8601string.indexOf(UTC_MINUS), UTC_MINUS);
    }

    Date date = null;
    if(iso8601string.contains("":""))
        date = DATE_FORMAT_1.parse(iso8601string);
    else{
        date = DATE_FORMAT_2.parse(iso8601string);
    }
    return date;
}

public static String toISO8601String(Date date){
    return DATE_FORMAT_1.format(date);
}

private static String replaceColon(String sourceStr, int offsetIndex){
    if(sourceStr.substring(offsetIndex).contains("":""))
        return sourceStr.substring(0, offsetIndex) + sourceStr.substring(offsetIndex).replace("":"", """");
    return sourceStr;
}

private static String appendZeros(String sourceStr, int offsetIndex, String offsetChar){
    if((sourceStr.length()-1)-sourceStr.indexOf(offsetChar,offsetIndex)&lt;=2)
        return sourceStr + ""00"";
    return sourceStr;
}
</code></pre>

<p>}</p>
"
"17358167","<p>I just wrote this code . It works well . This is an example of the Java NIO as mentioned in the above answers but here i post the code . </p>

<pre><code>ServerSocketChannel ssc = null;
try {
    ssc = ServerSocketChannel.open();
    ssc.socket().bind(new InetSocketAddress(port));
    ssc.configureBlocking(false);
    while (true) {
        SocketChannel sc = ssc.accept();
        if (sc == null) {
            // No connections came .
        } else {
            // You got a connection. Do something
        }
    }
} catch (IOException e) {
    e.printStackTrace();
}
</code></pre>
"
"18380594","<p>An integer can't be null but there is a really simple way of doing what you want to do. Use an if-then statement in which you check the integer's value against all possible values.</p>

<p>Example:</p>

<pre><code>int x;

//Some Code...

if (x&lt;=0 || x&gt;0){
    //what you want the code to do if x has a value
} else {
    //what you want the code to do if x has no value 
}
</code></pre>

<p>Disclaimer:
I am assuming that Java does not automatically set values of numbers to 0 if it doesn't see a value.</p>
"
"18391151","<pre><code>//solve(""5+3""), solve(""10-4"")    
public int solve(String str)
    {
        int len = str.length();
        int i=0;
        String str1 = """", str2 = """";
        char op;
        int num1 = 0, num2 = 0, res=0;
        for(i=0; i&lt;len; i++)
        {
            if(str.charAt(i)=='+' || str.charAt(i)=='-')
                break;
            str1 = str1 + str.charAt(i);
        }

        op = str.charAt(i);
        i++;

        while(i&lt;len)
        {
            str2 = str2 + str.charAt(i);
            i++;
        }
        num1 = Integer.parseInt(str1);
        num2 = Integer.parseInt(str2);

        if(op=='+')
            res = num1+num2;
        else if(op=='-')
            res = num1-num2;

        return res;
    }
</code></pre>
"
"18423505","<p>I'm no expert, but I do believe that the <code>null</code> equivalent for an int is <code>0</code>.</p>

<p>For example, if you make an <code>int[]</code>, each slot contains <code>0</code> as opposed to <code>null</code>, unless you set it to something else.</p>

<p>In some situations, this may be of use.</p>
"
"19212883","<p>In version 2.2 all looks ok, so temporary you can add:    </p>

<pre><code>&lt;version&gt;2.2&lt;/version&gt;
</code></pre>
"
"19414112","<pre><code>public static void main(String[] args){   
    System.out.println(""=""+evaluate(args[2]));

}
public static String[] symbols = new String[]{""\\-"",""\\+"",""\\/"",""\\*""};

public static Integer evaluate(String exp){
    System.out.print(exp);
    exp = exp.trim(); 
    boolean isint = true;
    for(int i = 0; i&lt;exp.length() &amp;&amp; isint;i++){
        if(exp.charAt(i)&gt;'9' || exp.charAt(i) &lt;'0'){
            isint = false;
        }
    }
    if(isint) return Integer.parseInt(exp);

    for(String symbol:symbols){
        String[] split = exp.split(symbol);
        if(split.length&gt;1){
            int ev = evaluate(split[0]);
            for(int i = 1;i&lt;split.length;i++){
                System.out.print(symbol);
                int val = evaluate(split[i]);
                if(""\\*"".equals(symbol)) ev*=val;
                if(""\\/"".equals(symbol)) ev/=val;
                if(""\\+"".equals(symbol)) ev+=val;
                if(""\\-"".equals(symbol)) ev-=val;
            }
            return ev;
        }
    }
    return null;
}
</code></pre>
"
"19796131","<p>Calculations with short type are exteremly expensive.</p>

<p>Take the following useless loop for example:</p>

<pre><code>short t=0;
//int t=0;
//long t=0;
for(many many times...)
{
  t+=1;
  t-=1;
}
</code></pre>

<p>if t is a short it will take literally 1000s of times longer than if it's an int or a long.</p>

<p>checked on 64 bit jvms versions 6/7 on linux</p>
"
"19833609","<p>If you add a folder to build path you can retrieve the images either in eclipse and when you exported it in jar file, just remember to <strong>don't</strong> reference the image with the path like <code>img/myImage.gif</code> but only <code>myImage.gif</code> !</p>
"
"19978362","<pre><code>JTextArea jTextArea=new JTextArea();
JScrollPane jScrollPane=new JScrollPane();
jScrollPane.setViewport(jTextArea);
</code></pre>

<p>you can use them to solve peoblem .</p>
"
"20351199","<p>For an array variable you must provide either dimension expressions or an array initializer.</p>

<p>For Ex:- (Like u said)</p>

<p>u can initialize like this ,</p>

<pre><code>ArrayList[] arrl = new ArrayList[array size];
</code></pre>

<p>OR</p>

<pre><code>ArrayList&lt;String&gt; arrl = new ArrayList&lt;String&gt;(); //without giving the size
</code></pre>
"
"20578314","<p>This seemed to work best for me:</p>

<pre><code>public static Date fromISO8601_( String string ) {

    try {
            return new SimpleDateFormat ( ""yyyy-MM-dd'T'HH:mm:ssXXX"").parse ( string );
    } catch ( ParseException e ) {
        return Exceptions.handle (Date.class, ""Not a valid ISO8601"", e);
    }


}
</code></pre>

<p>I needed to convert to/fro JavaScript date strings to Java. I found the above works with the recommendation. There were some examples using SimpleDateFormat that were close but they did not seem to be the subset as recommended by: </p>

<p><a href=""http://www.w3.org/TR/NOTE-datetime"" rel=""nofollow"">http://www.w3.org/TR/NOTE-datetime</a></p>

<p>and supported by PLIST and JavaScript Strings and such which is what I needed.</p>

<p>This seems to be the most common form of ISO8601 string out there, and a good subset. </p>

<p>The examples they give are:</p>

<pre><code>1994-11-05T08:15:30-05:00 corresponds 
November 5, 1994, 8:15:30 am, US Eastern Standard Time.

 1994-11-05T13:15:30Z corresponds to the same instant.
</code></pre>

<p>I also have a fast version:</p>

<pre><code>final static int SHORT_ISO_8601_TIME_LENGTH =  ""1994-11-05T08:15:30Z"".length ();
                                            // 01234567890123456789012
final static int LONG_ISO_8601_TIME_LENGTH = ""1994-11-05T08:15:30-05:00"".length ();


public static Date fromISO8601( String string ) {
    if (isISO8601 ( string )) {
        char [] charArray = Reflection.toCharArray ( string );//uses unsafe or string.toCharArray if unsafe is not available
        int year = CharScanner.parseIntFromTo ( charArray, 0, 4 );
        int month = CharScanner.parseIntFromTo ( charArray, 5, 7 );
        int day = CharScanner.parseIntFromTo ( charArray, 8, 10 );
        int hour = CharScanner.parseIntFromTo ( charArray, 11, 13 );

        int minute = CharScanner.parseIntFromTo ( charArray, 14, 16 );

        int second = CharScanner.parseIntFromTo ( charArray, 17, 19 );

        TimeZone tz ;

         if (charArray[19] == 'Z') {

             tz = TimeZone.getTimeZone ( ""GMT"" );
         } else {

             StringBuilder builder = new StringBuilder ( 9 );
             builder.append ( ""GMT"" );
             builder.append( charArray, 19, LONG_ISO_8601_TIME_LENGTH - 19);
             String tzStr = builder.toString ();
             tz = TimeZone.getTimeZone ( tzStr ) ;

         }
         return toDate ( tz, year, month, day, hour, minute, second );

    }   else {
        return null;
    }

}
</code></pre>

<p>...</p>

<pre><code>public static int parseIntFromTo ( char[] digitChars, int offset, int to ) {
    int num = digitChars[ offset ] - '0';
    if ( ++offset &lt; to ) {
        num = ( num * 10 ) + ( digitChars[ offset ] - '0' );
        if ( ++offset &lt; to ) {
            num = ( num * 10 ) + ( digitChars[ offset ] - '0' );
            if ( ++offset &lt; to ) {
                num = ( num * 10 ) + ( digitChars[ offset ] - '0' );
                if ( ++offset &lt; to ) {
                    num = ( num * 10 ) + ( digitChars[ offset ] - '0' );
                    if ( ++offset &lt; to ) {
                        num = ( num * 10 ) + ( digitChars[ offset ] - '0' );
                        if ( ++offset &lt; to ) {
                            num = ( num * 10 ) + ( digitChars[ offset ] - '0' );
                            if ( ++offset &lt; to ) {
                                num = ( num * 10 ) + ( digitChars[ offset ] - '0' );
                                if ( ++offset &lt; to ) {
                                    num = ( num * 10 ) + ( digitChars[ offset ] - '0' );
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return num;
}


public static boolean isISO8601( String string ) {
      boolean valid = true;

      if (string.length () == SHORT_ISO_8601_TIME_LENGTH) {
          valid &amp;=  (string.charAt ( 19 )  == 'Z');

      } else if (string.length () == LONG_ISO_8601_TIME_LENGTH) {
          valid &amp;=  (string.charAt ( 19 )  == '-' || string.charAt ( 19 )  == '+');
          valid &amp;=  (string.charAt ( 22 )  == ':');

      } else {
          return false;
      }

    //  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
    // ""1 9 9 4 - 1 1 - 0 5 T 0 8 : 1 5 : 3 0 - 0 5 : 0 0

    valid &amp;=  (string.charAt ( 4 )  == '-') &amp;&amp;
                (string.charAt ( 7 )  == '-') &amp;&amp;
                (string.charAt ( 10 ) == 'T') &amp;&amp;
                (string.charAt ( 13 ) == ':') &amp;&amp;
                (string.charAt ( 16 ) == ':');

    return valid;
}
</code></pre>

<p>I have not benchmarked it, but I am guess it will be pretty fast. It seems to work. :)</p>

<pre><code>@Test
public void testIsoShortDate() {
    String test =  ""1994-11-05T08:15:30Z"";

    Date date = Dates.fromISO8601 ( test );
    Date date2 = Dates.fromISO8601_ ( test );

    assertEquals(date2.toString (), date.toString ());

    puts (date);
}

@Test
public void testIsoLongDate() {
    String test =  ""1994-11-05T08:11:22-05:00"";

    Date date = Dates.fromISO8601 ( test );
    Date date2 = Dates.fromISO8601_ ( test );

    assertEquals(date2.toString (), date.toString ());

    puts (date);
}
</code></pre>
"
"21123156","<pre><code>static Object jsonParser(String jsonStr, String key) throws JSONException {
    int i = 0;
    Object temp = null;
    Object json = new JSONObject(jsonStr);
    String[] keys = key.split(""[.]"");
    while (i &lt; keys.length) {

        if (json instanceof JSONArray) {
            int index = Integer.parseInt(keys[i]);
            temp = ((JSONArray) json).get(index);
        } else if (json instanceof JSONObject) {
            temp = ((JSONObject) json).get(keys[i]);
        }
        json = temp;
        i++;
    }
    return temp;
}
</code></pre>
"
"22068267","<p>For reading content of the table from pdf file,you have to do only just convert the pdf file into a text file by using any API(I have use PdfTextExtracter.getTextFromPage() of iText) and then read that txt file by your java program..now after reading it the major task is done.. you have to filter the data of your need. you can do it by continuously using split method of String class until you find record of your intrest.. here is my code by which I have extract part of record by an PDF file and write it into a .CSV file.. Url of PDF file is..<a href=""http://www.cea.nic.in/reports/monthly/generation_rep/actual/jan13/opm_02.pdf"" rel=""nofollow"">http://www.cea.nic.in/reports/monthly/generation_rep/actual/jan13/opm_02.pdf</a></p>

<p>Code:-</p>

<pre><code>public static void genrateCsvMonth_Region(String pdfpath, String csvpath) {
        try {
            String line = null;
            // Appending Header in CSV file...
            BufferedWriter writer1 = new BufferedWriter(new FileWriter(csvpath,
                    true));
            writer1.close();
            // Checking whether file is empty or not..
            BufferedReader br = new BufferedReader(new FileReader(csvpath));

            if ((line = br.readLine()) == null) {
                BufferedWriter writer = new BufferedWriter(new FileWriter(
                        csvpath, true));
                writer.append(""REGION,"");
                writer.append(""YEAR,"");
                writer.append(""MONTH,"");
                writer.append(""THERMAL,"");
                writer.append(""NUCLEAR,"");
                writer.append(""HYDRO,"");
                writer.append(""TOTAL\n"");
                writer.close();
            }
            // Reading the pdf file..
            PdfReader reader = new PdfReader(pdfpath);
            BufferedWriter writer = new BufferedWriter(new FileWriter(csvpath,
                    true));

            // Extracting records from page into String..
            String page = PdfTextExtractor.getTextFromPage(reader, 1);
            // Extracting month and Year from String..
            String period1[] = page.split(""PEROID"");
            String period2[] = period1[0].split("":"");
            String month[] = period2[1].split(""-"");
            String period3[] = month[1].split(""ENERGY"");
            String year[] = period3[0].split(""VIS"");

            // Extracting Northen region
            String northen[] = page.split(""NORTHEN REGION"");
            String nthermal1[] = northen[0].split(""THERMAL"");
            String nthermal2[] = nthermal1[1].split("" "");

            String nnuclear1[] = northen[0].split(""NUCLEAR"");
            String nnuclear2[] = nnuclear1[1].split("" "");

            String nhydro1[] = northen[0].split(""HYDRO"");
            String nhydro2[] = nhydro1[1].split("" "");

            String ntotal1[] = northen[0].split(""TOTAL"");
            String ntotal2[] = ntotal1[1].split("" "");

            // Appending filtered data into CSV file..
            writer.append(""NORTHEN"" + "","");
            writer.append(year[0] + "","");
            writer.append(month[0] + "","");
            writer.append(nthermal2[4] + "","");
            writer.append(nnuclear2[4] + "","");
            writer.append(nhydro2[4] + "","");
            writer.append(ntotal2[4] + ""\n"");

            // Extracting Western region
            String western[] = page.split(""WESTERN"");

            String wthermal1[] = western[1].split(""THERMAL"");
            String wthermal2[] = wthermal1[1].split("" "");

            String wnuclear1[] = western[1].split(""NUCLEAR"");
            String wnuclear2[] = wnuclear1[1].split("" "");

            String whydro1[] = western[1].split(""HYDRO"");
            String whydro2[] = whydro1[1].split("" "");

            String wtotal1[] = western[1].split(""TOTAL"");
            String wtotal2[] = wtotal1[1].split("" "");

            // Appending filtered data into CSV file..
            writer.append(""WESTERN"" + "","");
            writer.append(year[0] + "","");
            writer.append(month[0] + "","");
            writer.append(wthermal2[4] + "","");
            writer.append(wnuclear2[4] + "","");
            writer.append(whydro2[4] + "","");
            writer.append(wtotal2[4] + ""\n"");

            // Extracting Southern Region
            String southern[] = page.split(""SOUTHERN"");

            String sthermal1[] = southern[1].split(""THERMAL"");
            String sthermal2[] = sthermal1[1].split("" "");

            String snuclear1[] = southern[1].split(""NUCLEAR"");
            String snuclear2[] = snuclear1[1].split("" "");

            String shydro1[] = southern[1].split(""HYDRO"");
            String shydro2[] = shydro1[1].split("" "");

            String stotal1[] = southern[1].split(""TOTAL"");
            String stotal2[] = stotal1[1].split("" "");

            // Appending filtered data into CSV file..
            writer.append(""SOUTHERN"" + "","");
            writer.append(year[0] + "","");
            writer.append(month[0] + "","");
            writer.append(sthermal2[4] + "","");
            writer.append(snuclear2[4] + "","");
            writer.append(shydro2[4] + "","");
            writer.append(stotal2[4] + ""\n"");

            // Extracting eastern region
            String eastern[] = page.split(""EASTERN"");

            String ethermal1[] = eastern[1].split(""THERMAL"");
            String ethermal2[] = ethermal1[1].split("" "");

            String ehydro1[] = eastern[1].split(""HYDRO"");
            String ehydro2[] = ehydro1[1].split("" "");

            String etotal1[] = eastern[1].split(""TOTAL"");
            String etotal2[] = etotal1[1].split("" "");
            // Appending filtered data into CSV file..
            writer.append(""EASTERN"" + "","");
            writer.append(year[0] + "","");
            writer.append(month[0] + "","");
            writer.append(ethermal2[4] + "","");
            writer.append("" "" + "","");
            writer.append(ehydro2[4] + "","");
            writer.append(etotal2[4] + ""\n"");

            // Extracting northernEastern region
            String neestern[] = page.split(""NORTH"");

            String nethermal1[] = neestern[2].split(""THERMAL"");
            String nethermal2[] = nethermal1[1].split("" "");

            String nehydro1[] = neestern[2].split(""HYDRO"");
            String nehydro2[] = nehydro1[1].split("" "");

            String netotal1[] = neestern[2].split(""TOTAL"");
            String netotal2[] = netotal1[1].split("" "");

            writer.append(""NORTH EASTERN"" + "","");
            writer.append(year[0] + "","");
            writer.append(month[0] + "","");
            writer.append(nethermal2[4] + "","");
            writer.append("" "" + "","");
            writer.append(nehydro2[4] + "","");
            writer.append(netotal2[4] + ""\n"");
            writer.close();

        } catch (IOException ioe) {
            ioe.printStackTrace();
        }

    }
</code></pre>
"
"22070630","<pre><code>  public InetAddress intToInetAddress(Integer value) throws UnknownHostException
  {
    ByteBuffer buffer = ByteBuffer.allocate(32);
    buffer.putInt(value);
    buffer.position(0);
    byte[] bytes = new byte[4];
    buffer.get(bytes);
    return InetAddress.getByAddress(bytes);
  }
</code></pre>
"
"22818457","<p>This is the code to get the time out value:</p>

<pre><code>&lt;%= session.getMaxInactiveInterval() %&gt;
</code></pre>
"
"23011640","<p>In SQL</p>

<pre><code>x in ('Alice', 'Bob', 'Carol')
</code></pre>

<p>In Java:</p>

<pre><code>Arrays.asList(""Alice"", ""Bob"", ""Carol"").contains(x)
</code></pre>
"
"23910764","<p>There is a third party add on available.. <a href=""http://momentjs.com/"" rel=""nofollow"">moment.js</a>.</p>

<p>Just add it via nuget, move the scripts to your content scripts file. Add this line (example)</p>

<p>Javascript:</p>

<pre><code>&lt;script src=""@Url.Content(""~/Content/Scripts/moment.min.js"")"" type=""text/javascript""&gt;&lt;/script&gt;
</code></pre>

<p>And then we change our field declaration in jtable.</p>

<p>Javascript:</p>

<pre><code>DateAdded: {
                        title: 'Date added',
                        width: '20%',
                        sorting: false,
                        display: function (data) {
                            return moment(data.record.DateAdded).format('DD/MM/YYYY HH:mm:ss');
                        }
                    }
</code></pre>
"
"24778950","<pre><code>Map&lt;String, List&lt;User&gt;&gt; usersByCountry = new HashMap&lt;String, List&lt;User&gt;&gt;();
for(User user : listOfUsers) {
    List&lt;User&gt; users = usersByCountry.get(user.getCountry());
    if (users == null) {        
        usersByCountry.put(user.getCountry(), users = new ArrayList&lt;User&gt;());
    }
    users.add(user);
}
</code></pre>
"
"24994223","<pre><code>JPanel panel = new JPanel();
JTable table = new JTable(rowData, colData);
JScrollPane scrollPane = new JScrollPane(table);
panel.add(scrollPane, BorderLayout.CENTER);
panel.setSize(800, 150);
panel.add(table);
panel.setLocationRelativeTo(null);
panel.setVisible(true);
</code></pre>

<p>Hope this helps.</p>
"
"25400408","<blockquote>
  <p>This class is for simple Indian price formatter</p>
</blockquote>

<pre><code>public class Test {

public static void main (String a[]){
    System.out.println(priceFormatter(""10023""));    
}
/**
 * This method is to convert the price into Indian price
 * separator format
 * @param inputPrice
 * @return
 */
public static String priceFormatter(String inputPrice){
    try {
        if(!isNumeric(inputPrice)){
            return inputPrice;
        }
        // to check if the number is a decimal number
        String newPrice = """",afterDecimal = """";
        if(inputPrice.indexOf('.') != -1){
            newPrice = inputPrice.substring(0,inputPrice.lastIndexOf('.'));
            afterDecimal = inputPrice.substring(inputPrice.lastIndexOf('.'));
        }else{
            newPrice = inputPrice;
        }
        int length = newPrice.length();
        if (length &lt; 4) {
            return inputPrice;
        }
        // to check whether the length of the number is even or odd
        boolean isEven = false;
        if (length % 2 == 0) {
            isEven = true;
        }
        // to calculate the comma index
        char ch[] = new char[length + (length / 2 - 1)];
        if (isEven) {
            for (int i = 0, j = 0; i &lt; length; i++) {
                ch[j++] = inputPrice.charAt(i);
                if (i % 2 == 0 &amp;&amp; i &lt; (length - 3)) {
                    ch[j++] = ',';
                }
            }
        } else {
            for (int i = 0, j = 0; i &lt; length; i++) {
                ch[j++] = inputPrice.charAt(i);
                if (i % 2 == 1 &amp;&amp; i &lt; (length - 3)) {
                    ch[j++] = ',';
                }
            }
        }
        // conditional return based on decimal number check
        return afterDecimal.length() &gt; 0 ? String.valueOf(ch) + afterDecimal : String.valueOf(ch);

    } catch(NumberFormatException ex){
        ex.printStackTrace();
        return inputPrice;
    }
      catch (Exception e) {
        e.printStackTrace();
        return inputPrice;
    }
}

}
</code></pre>
"
"25477918","<pre><code>// you can also use imports, for example:
import java.util.*;

// you can use System.out.println for debugging purposes, e.g.
// System.out.println(""this is a debug message"");

    class Solution {
        public int solution(int[] A) {
            // write your code in Java SE 8
            Set&lt;Integer&gt; s = new HashSet&lt;Integer&gt;(); 
            int index = 0;
            for (int i = 0; i &lt; A.length; i++) {
                if (!s.contains(A[i])) {
                    s.add(A[i]);
                    index = i;
                }
            }
            return index;
        }
    }
</code></pre>
"
"25690667","<p>an alternative could be (for numbers!!!) </p>

<ol>
<li>multiply the Array by -1</li>
<li>sort</li>
<li>multiply once again with -1</li>
</ol>

<p>Literally spoken:</p>

<pre><code>array = -Arrays.sort(-array)
</code></pre>
"
"25905938","<p>The <code>Suit</code> enum is inside the <code>Card</code> class, and you have to access it that way:</p>

<pre><code>Card.Suit suit = Card.Suit.CLUBS;
</code></pre>
"
"27132081","<p>In <code>ArrayList</code> we don't have a chance to remove duplicate elements directly. We can achieve it with sets, because sets don't allow duplicates, so, better to use <code>HashSet</code> or <code>LinkedHashSet</code> classes. See <a href=""http://www.programmers99.com/2014/11/how-to-remove-duplicate-values-from.html"" rel=""nofollow"">reference</a>.</p>
"
"27523495","<p>Use this instead</p>

<p><code>JTextArea textArea = new JTextArea();
         DefaultCaret caret = (DefaultCaret)textArea.getCaret();
         caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);<br>
         scrollPane = new JScrollPane();
         scrollPane.add(textArea);
         scrollPane.setViewportView(textArea);</code>   </p>
"
"28781730","<p>The best method i use</p>

<pre><code>int totalCost = 0;
for (int i = 0; i &lt; cost.length; i++)
  totalCost += cost[i];
}
</code></pre>
"
"29050938","<p>Just use this code:</p>

<pre><code>SwingUtilities.getRootPane(myButton).setDefaultButton(myButton);
</code></pre>
"
"29450951","<pre><code>         Set s=map.entrySet();
         Iterator iter = s.iterator();
         while (iter.hasNext()) 
         {
         Map.Entry entry =(Map.Entry)iter.next();
         if(""sample"".equals(entry.getKey()))
         {
         iter.remove();
         }
         }
</code></pre>
"
"29629593","<p>this method takes the uri and return map of par name and par value</p>

<pre><code>  public static Map&lt;String, String&gt; getQueryMap(String uri) {

    String queryParms[] = uri.split(""\\?"");

    Map&lt;String, String&gt; map = new HashMap&lt;&gt;();// 

    if (queryParms == null || queryParms.length == 0) return map;

    String[] params = queryParms[1].split(""&amp;"");
    for (String param : params) {
        String name = param.split(""="")[0];
        String value = param.split(""="")[1];
        map.put(name, value);
    }
    return map;
}
</code></pre>
"
"29776115","<p>I used this code:</p>

<pre><code>Gson gson = new Gson();
HashMap&lt;String, Object&gt; fields = gson.fromJson(json, HashMap.class);
</code></pre>
"
"29953679","<p>For my simple main program the file solution was perfect. No messing around with ports not knowing if they are available or not etc.</p>

<pre><code>        File stopFile = new File(""stop"");
        if (stopFile.exists()) {
            stopFile.delete();
            // perhaps set a volatile boolean to false to stop other
            // threads
            System.exit(0);
        }
</code></pre>

<p>to terminate the application I called this .bat file:</p>

<pre><code>mkdir stop
</code></pre>
"
"29985250","<pre><code>public class aiubMain {
public static void main(String args[]) throws MalformedURLException{
    //home frame = new home();
    java.net.URL imgUrl2 = home.class.getResource(""Campus.gif"");

Icon icon = new ImageIcon(imgUrl2);
JLabel label = new JLabel(icon);

JFrame f = new JFrame(""Animation"");
f.getContentPane().add(label);
f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
f.pack();
f.setLocationRelativeTo(null);
f.setVisible(true);
}
}
</code></pre>
"
"30205793","<pre><code>public int getDepthHelper( TreeNode&lt; T &gt; node ) { 
    int treeHeightLeft; 
    int treeHeightRight; 
    //get height of left subtree 
    if( node.leftNode == null ) 
        treeHeightLeft = 1; 
    else { 
        treeHeightLeft = getDepthHelper( node.leftNode) + 1; 
    } 

    //get height of right subtree 
    if( node.rightNode == null ) 
        treeHeightRight = 1; 
    else { 
        treeHeightRight = getDepthHelper( node.rightNode) + 1; 
    } 
    return Math.max(treeHeightLeft, treeHeightRight); 
}
</code></pre>
"
"5195782","<p>You could try something like</p>

<pre><code>System.setIn(new FileInputStream(filename));
</code></pre>

<p>Here's an example on <a href=""http://www.linuxtopia.org/online_books/programming_books/thinking_in_java/TIJ314_022.htm"" rel=""nofollow"">redirecting standard i/o</a></p>
"
"5218759","<p>For Running Thread <code>Thread.Interrupt</code>  wont actually stop as  sfussenegger mentioned aforth (thanks  sfussenegger recollected after reading spec).</p>

<p>using a shared variable to signal that it  should stop what it is doing. The thread should check the variable periodically,(ex : use a while loop ) and exit in an orderly manner.</p>

<pre><code>private boolean isExit= false;

public void beforeExit() {
    isExit= true;
}

public void run() {
    while (!isExit) {

    }
}
</code></pre>
"
"5221752","<p>When iterating through ArrayList <code>b</code> as suggested by <code>Krtek</code> and <code>h3r3</code>, consider using <code>Worker.class.isAssignableFrom(p.class)</code>. Have a look at <a href=""http://stackoverflow.com/questions/496928/what-is-the-difference-between-instanceof-and-class-isassignablefrom"">What is the difference between instanceof and Class.isAssignableFrom(...)?</a> for explanation on the differences. </p>
"
"5269424","<pre><code>private static List&lt;Type&gt; VALUES= new ArrayList&lt;Type&gt;();
static {
   VALUES.add(TypeA);
   VALUES.add(TypeA);
   VALUES.add(TypeB);
}


public static Type randomType()  {
        //will return A twice as often as B              
        return VALUES.get(RANDOM.nextInt(VALUES.size()));
}
</code></pre>
"
"5275042","<p>If the entire application is left in a unstable state, I suggest to exit the application directly in order to avoid more problems. Just output something on <code>system.err</code> before.</p>

<p>If only the instance will be in a unstable state, you can throw a runtime exception, but I think this is a dangerous way, since their will be no obligation to catch the exception and this can leads to some problems later on.</p>

<p>I suggest to simply rethrow the exception or maybe wrap it in another with other relevant informations. The precise type of the exception will greatly depend on the case (null pointer, illegal state, io error, etc)</p>
"
"5304999","<p>Here's what I would try (I have not tested this method):</p>

<pre><code>&lt;modifier&gt; Account(Object arg) {
    if (!super.getClass().isAssignableFrom(this.getClass())) {
        throw new AssertionError(""This constructor is only available to super classes."");
    } else {
        // Continue...
    }
}
</code></pre>
"
"5307113","<p>Seems to be OK. Be sure <code>refreshCache</code> is not called too frequently or mark as <code>synchronized</code>.</p>
"
"5401407","<p>For any given node 'node', and the document 'document' it came from something like this should work.</p>

<pre><code>Node parent = node.getParent();
Node nextSibling = node.getNextSibling();

parent.removeChild(node);

Element something = document.createElement(""something"");
NamedNodeMap atts = something.getAttributes();
Attr att = document.createAttribute(""style"");
att.setNodeValue(""background-color:red;"");
atts.setNamedItem(att);
something.addChild(node);
parent.insertBefore(something, nextSibling);
</code></pre>
"
"5407433","<pre><code>penremainder = (penboxes-(int)penboxes );
</code></pre>

<p>This line will always equal zero, you are subtracting penboxes from itself.</p>
"
"5455386","<p>Why not just compare the two?</p>

<pre><code>if(v1 == v2) result = true;
</code></pre>
"
"5455388","<pre><code>if(v1 == v2) 
return true; 
else 
return false;
</code></pre>
"
"5455521","<p>The simple way is,if the two variables are equal then it should be true and if any one is false it is false.
check this one.</p>

<pre><code>if(v1 == v2)
    return true;
else 
    return false;
</code></pre>
"
"5486616","<p>Try something like this</p>

<pre><code>&lt;mx:Script&gt;
&lt;![CDATA[
import MyAsFile.as //if your file is inculded in .src folder
import path/MyAsFile.as //if in other folder
]]&gt;
&lt;/mx:Script&gt;
</code></pre>
"
"5554779","<p>Don't attempt to access a member of a data structure past the length of the data structure.</p>

<p>Example:</p>

<pre><code>final List&lt;String&gt; whatever = new ArrayList&lt;String&gt;();
whatever.add(""Yup"");
whatever.get(1); // OH NOES!
</code></pre>
"
"5563291","<p>You might need something like this:</p>

<pre><code>public class Example {
  public static void main(String[] args) {

    int[][] envoriment = {{1, 1, 1, 1}, {0, 1, 6}, {1}};

    int[][] copyArray = new int[envoriment.length][];
    System.arraycopy(envoriment, 0, copyArray, 0, envoriment.length);
  }
}
</code></pre>
"
"5592355","<p>Okay, I can't be too exact because I don't see your code but in my experience something that changes like that should be external data, not enums.</p>

<p>What I almost always find is that if I externalize the information that was in the enums, then I have to externalize a few other pieces as well, but after doing it all I end up factoring away a LOT of code.</p>

<p>Any time you actually use the values of an enum you are almost certainly writing duplicate code.  What I mean is that if you have enums like ""HEARTS"", ""DIAMONDS""...</p>

<p>The ONLY way they can be used in your code is in something like a switch statement:</p>

<pre><code>switch(card.suit)
case Suit.HEARTS:
    load_graphic(Suit.HEARTS);
    // or better yet:
    Suit.HEARTS.loadGraphic();
    break;
case Suit.SPADES:
    Suit.SPADES.loadGraphic();

...
</code></pre>

<p>Now, this is obviously stupid but I made the stupid constraint to say that you USED the values in the code.  My assertion is that if you don't USE the values you don't need an enum--Let's not use the values in code and see:</p>

<pre><code>card.suit.loadGraphic();
</code></pre>

<p>Wow, all gone.  But suddenly, the entire point of using an enum is gone--instead you get rid of the whole class preload a ""Suit"" factory with 4 instances from a text file with strings like ""Heart.png"" and ""Spade.png"".</p>

<p>Nearly every time I use enums I end up factoring them out like this.</p>

<p>I'm not saying there isn't any code that can benefit from enums--but the better that I get at factoring code and externalizing data, the less I can imagine really needing them.</p>
"
"5598234","<p>Are you sure that your derby.jar contains the <code>org.apache.derby.jdbc.EmbeddedDriver</code> class? You may want to check you have the correct version.</p>

<p>If you are using Maven to package the application then it is strange that the jar name ends up being <code>derby.jar</code> with no version number attached to it.</p>
"
"5617049","<p>You can give below code a try,</p>

<pre><code>public void multiArrayCopy(int[][] source,int[][] destination){
destination=source.clone();}
</code></pre>

<p>Hope it works.</p>
"
"5635805","<p>For very rare cases it may be useful or necessary to implement <code>finalize</code> for freeing allocated resources. This method is always called when an instance is destroyed finally.</p>

<p>May be helpful if you work with native code and need to free allocated resources in the native code area.</p>

<p>But use it with care, because implementing <code>finally</code> will slow down the garbage collector dramatically and kill performance.</p>
"
"5644925","<p><s>put them in a <code>synchronized</code> block, then it is atomic for the JVM.</p>

<pre><code>public class MyClass {

   //the English word is synchronizer, not syncronisator
   private static final Object syncronisator = new Object();

   public void doSomething() {
      doSomethingNotSyncronized();

      synchronized(syncronisator) {
        doItAtomic1():
        doItAtomic2():
      }

      doSomethingNotSyncronized2();
   }

}
</code></pre>

<p>BTW: if you want to synchronize the complete method with the instance of MyClass, then you could use:</p>

<pre><code>public class MyClass {

   public void synchronized doSomething() {
       doItAtomic1():
      doItAtomic2():
   }  
}
</code></pre>

<p></s></p>

<p>Edit:
<a href=""http://stackoverflow.com/questions/5644901/is-there-a-way-to-ensure-some-statements-are-executed-in-atomic-way/5645061#5645061"">Road to yamburg is right</a>, atomic is not only synchronization, but mean also everything or none.</p>
"
"5694869","<p>You can use</p>

<pre><code>str.replace(""  "", "" "");
</code></pre>
"
"5731812","<p>Assuming the ArrayList is a member field of your class, it looks like the following <a href=""http://stackoverflow.com/questions/1942644/get-generic-type-of-java-util-list"">answer</a> will provide what you need. </p>

<p>A snippet of the code from that answer shows the general idea (but take a look at that question/answer):</p>

<pre><code>Field stringListField = Test.class.getDeclaredField(""stringList"");
ParameterizedType stringListType = (ParameterizedType) stringListField.getGenericType();
Class&lt;?&gt; stringListClass = (Class&lt;?&gt;) stringListType.getActualTypeArguments()[0];
System.out.println(stringListClass); // class java.lang.String.
</code></pre>
"
"5751725","<p>I found the usage of this <code>do { } while();</code> quite <strong>acceptable</strong>. Provided that you should be putting <code>while(0)</code> (and now you can use <code>continue</code> also). Because by any chance if you don't <code>break;</code> the loop will terminate anyway.
Interestingly, I have seen such usage in production code of my previous company which was reviewed by experts.</p>

<p>One might think of using <code>return</code>. But the problem with that approach is destructors. Consider below scenario:</p>

<pre><code>void fun ()
{
  CLASS_a a1, a2, a3, a4;
  CLASS_b b1, b2, b3, b4;

  ...
  return 1;
  ...
  return 2;
  ...
  return 3;
  ...
  return 4;
}
</code></pre>

<p>At every return statement, destructor code for above all objects will be placed. This might increase the code size sometimes unknowingly. Additionally, I find better to have lesser exit points, which makes code better debuggable.</p>

<p><strong>Edit</strong>: Putting <code>continue</code> rather than <code>break</code> is a better idea, since the <code>break</code> will not allow to exit the loop when you are inside a <code>switch()</code> statement.</p>
"
"5764004","<p>What about adding a <code>return</code> statement, or declare the method to return <code>void</code>...</p>
"
"5823272","<p>The idea with <code>hashCode()</code> is that it is a unique representation of your object in a given space. Data structures that hold objects use hash codes to determine where to place objects. In Java, a <code>HashSet</code> for example uses the hash code of an object to determine which <em>bucket</em> that objects lies in, and then for all objects in that bucket, it uses <code>equals()</code> to determine whether it is a match.</p>

<p>If you don't override <code>hashCode()</code>, but do override <code>equals()</code>, then you will get to a point where you consider 2 objects to be <strong>equal</strong>, but Java collections don't see it the same way. This will lead to a lot of strange behaviour.</p>
"
"5828356","<p>If you want to remove only <code>&lt;b&gt;,&lt;p&gt;,&lt;i&gt;</code> and <code>&lt;/b&gt;,&lt;/p&gt;,&lt;/i&gt;</code> tags then you can use following regex :</p>

<pre><code>(&lt;/?b&gt;|&lt;/?p&gt;|&lt;/?i&gt;)
</code></pre>
"
"5855903","<p>Here is a method that sorts a Map by its keys. It makes use of the <code>Collections.sort(List, Comparator)</code> method.</p>

<pre><code>static Map sortByKey(Map map) {
     List list = new LinkedList(map.entrySet());
     Collections.sort(list, new Comparator() {
          public int compare(Object o1, Object o2) {
               return ((Comparable) ((Map.Entry) (o1)).getKey())
              .compareTo(((Map.Entry) (o2)).getKey());
          }
     });

    Map result = new LinkedHashMap();
    for (Iterator it = list.iterator(); it.hasNext();) {
        Map.Entry entry = (Map.Entry)it.next();
        result.put(entry.getKey(), entry.getValue());
    }
    return result;
} 
</code></pre>
"
"5886703","<p>That's because the <code>byte[] output</code> is well, and array of bytes, you may think on it as an array of bytes representing each one an integer, but when you add them all into a single string you get something that is NOT an integer, that's why. You may either have it as an array of integers or try to create an instance of <a href=""http://download.oracle.com/javase/6/docs/api/java/math/BigInteger.html"" rel=""nofollow"">BigInteger</a>. </p>
"
"5887686","<p>Use <code>String.split(yourdata, ',')</code> and you will get a <code>String[]</code>. Then, perform <code>String.split(String[i],""="")</code>, on each entry to separate property and values.</p>

<p>Ideally, you should move this data in a <code>Properties</code> object instance. You can then save/load it from XML easily. It has useful methods.</p>

<p><strong>REM:</strong> I am assuming that you are savvy enough to understand that this solution won't work if values contain the separator (i.e., the comma) in them...</p>
"
"5890672","<p>You might want to try removing the <code>String[] fields</code> declaration out of the loop. As you are creating a new array in every loop. You can just reuse the old one right?</p>
"
"5900206","<p>Consider: </p>

<blockquote>
  <p>String something
  =""this\tis\ttab\tseparated"";</p>
</blockquote>

<p>The recommended approach: </p>

<pre><code>// Can be also used with files and streams
Scanner sc = new Scanner(something);
sc.useDelimiter(""\t"");

while (sc.hasNext()) {
   System.out.println(sc.next());
}
sc.close();
</code></pre>

<p>And for small inputs:</p>

<pre><code>String[] separated = something.split(""\t"");
for (String string : separated) {
   System.out.println(string);
}
</code></pre>

<p>Cheers,</p>
"
"5965030","<p>This would do it.</p>

<pre><code> public static void main(String[] args) {
    double d = 12.349678;
    int r = (int) Math.round(d*100);
    double f = r / 100.0;
   System.out.println(f);
 }
</code></pre>

<p>You can short this method, it's easy to understand that's why I have written like this</p>
"
"5981297","<p>Use <a href=""http://download.oracle.com/javase/1,5.0/docs/api/java/math/BigDecimal.html#multiply%28java.math.BigDecimal%29"" rel=""nofollow"">BigDecimal multiply</a> method instead like this to safeguard against <strong>potential overlow issues</strong> while handling large double numbers:</p>

<pre><code>BigDecimal temp = (new BigDecimal(fileSize)).multiply(new BigDecimal(c12));
</code></pre>
"
"4692489","<p>An obscure solution which might amuse... ;)</p>

<pre><code>Random r = new Random(292012);
for(int i=0;i&lt;9;i++) {
    int n=r.nextnt(4);
    System.out.print(n&lt;1?""\n"":""""+n);
}
</code></pre>
"
"5359198","<p>Here's a class that extract data rows and columns from database.</p>

<p>Look at <strong>table = new JTable(rows(), columns());</strong></p>

<pre><code>import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.print.PrinterException;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import com.swtdesigner.SwingResourceManager;
import java.util.*;
import java.sql.*;
import javax.swing.*;
public class listing extends JDialog {


private JTable table;
public static Vector rows() {

    Vector data = new Vector();
    String sql= null;
    Connection C;


        try {

            DriverManager.registerDriver(new oracle.jdbc.OracleDriver());
            C = (Connection) DriverManager.getConnection(""jdbc:oracle:thin:@localhost:1521:XE"",
                    ""system"", ""manager"");

            Statement stmt = C.createStatement();
            ResultSet rset = stmt.executeQuery(""SELECT * FROM site "");
            ResultSetMetaData md = rset.getMetaData();
            int columns = md.getColumnCount();



            while (rset.next()) {
                Vector row = new Vector(columns);

                for (int i = 1; i &lt;= columns; i++) {
                    row.addElement(rset.getObject(i));
                }

                data.addElement(row);

            }

            rset.close();
            stmt.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
            System.out.println(e.getStackTrace());
        }

        //System.out.println(""lignes :  ""+data);
        return data;
}


   public static Vector columns()
    {   Connection c ;
        Vector cols = new Vector ();
        String sql2=null;
        try { 
            DriverManager.registerDriver(new oracle.jdbc.OracleDriver());
            c = DriverManager.getConnection(""jdbc:oracle:thin:@localhost:1521:XE"",
                    ""system"", ""manager"");

            sql2 = ""select * from SITE"";

            Statement stmt = c.createStatement();
            ResultSet rs = stmt.executeQuery(sql2);
            ResultSetMetaData md = rs.getMetaData();
            int columns = md.getColumnCount();

              //récupération des noms des colonnes dans la table site

            for (int i = 1; i &lt;= columns; i++) {
            cols.addElement(md.getColumnName(i));
            }
           } catch (Exception e) {
            System.out.println(e.getMessage());
            System.out.println(e.getStackTrace());
        }
        //System.out.println(""colonnes ::: ""+cols);
        return cols;
    }

public static void main(String args[]) {
    try {
        listing dialog = new listing();
        dialog.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                System.exit(0);
            }
        });
        dialog.setVisible(true);
    } catch (Exception e) {
        e.printStackTrace();
    }
}


public listing() {
    super();
    getContentPane().setLayout(null);
    setTitle(""Listing de la table \""SITE\"""");
    setBounds(100, 100, 500, 363);
    setResizable(false);

    final JLabel laTablesiteLabel = new JLabel();
    laTablesiteLabel.setText(""La table \""SITE\"" contient . . . "");
    laTablesiteLabel.setBounds(10, 34, 274, 16);
    getContentPane().add(laTablesiteLabel);

    final JLabel label = new JLabel();
    label.setIcon(SwingResourceManager.getIcon(listing.class, ""/pictures/130.png""));
    label.setBounds(402, 18, 49, 48);
    getContentPane().add(label);

    final JButton okButton = new JButton();
    okButton.addActionListener(new ActionListener() {
        public void actionPerformed(final ActionEvent arg0) {
            dispose();
            setVisible(false);
        }


    });
    okButton.setIcon(SwingResourceManager.getIcon(listing.class, ""/pictures/33-32x32.png""));
    okButton.setText(""Ok"");
    okButton.setBounds(10, 291, 148, 32);
    getContentPane().add(okButton);

    final JButton refeshButton_1 = new JButton();
    refeshButton_1.setIcon(SwingResourceManager.getIcon(listing.class, ""/pictures/48-32x32.png""));
    refeshButton_1.setText(""Actualiser"");
    refeshButton_1.setBounds(171, 291, 148, 32);
    getContentPane().add(refeshButton_1);

    final JScrollPane scrollPane = new JScrollPane();
    scrollPane.setBounds(10, 85, 474, 187);
    getContentPane().add(scrollPane);

    table = new JTable(rows(), columns()); // chargement de JTable 
    scrollPane.setViewportView(table);

    final JButton printButton_1_1 = new JButton();
    printButton_1_1.addActionListener(new ActionListener() {
        public void actionPerformed(final ActionEvent arg0) {
            try {
                table.print();
            } catch (PrinterException e) {

                e.printStackTrace();
            }
        }
    });
    printButton_1_1.setIcon(SwingResourceManager.getIcon(listing.class, ""/pictures/Printer_h.png""));
    printButton_1_1.setText(""Imprimer"");
    printButton_1_1.setBounds(336, 291, 148, 32);
    getContentPane().add(printButton_1_1);




    }

}
</code></pre>
"
"6180302","<p><a href=""http://stackoverflow.com/questions/473282/left-padding-integers-with-zeros-in-java"">I think this is what you're looking for.</a></p>

<pre><code>String.format(""%06s"", ""abc"");
</code></pre>
"
"5377209","<p>Interface members are always modified/implemented outside itself (in a class or struct), hence they are implicitly public and no access modifiers are allowed with it.
Even the members of interface are publicly implemented.
However if you wish to make a member private in a class that is providing its implementation then you need to implement the interface explicitly.</p>

<pre><code>interface IMyIF {
int MyMeth(int x);
}
//then it is legal to implement IMyIF as shown here:
class MyClass : IMyIF {
int IMyIF.MyMeth(int x) {
return x / 3;
}
}
</code></pre>

<p>an explicit implementation gives you a way to implement an interface method so that it is not a public member of the class that provides the implementation.</p>
"
"6203779","<p><code>java.util.Calendar.getInstance().getTime().getTime()</code> will get you the current date and time in milliseconds</p>

<pre><code>ResultSet.getDate('name of column').getTime()
</code></pre>

<p>will get you the date and time from the database....</p>

<p>u can compare/make logical operations like you do with numbers..... for example, this will check whether the system time is greater than the datetime from the database</p>

<pre><code>java.util.Calendar.getInstance().getTime().getTime() &gt; new java.sql.Date(WIDTH).getTime();
</code></pre>

<p>you can look up in the API documentation for more information on these methods....</p>

<p>Hope it helps</p>
"
"6223525","<p>u just missed one step in if. following wud be correct:</p>

<p>System.out.println(""\nThe factors of "" + val + "" are:"");</p>

<pre><code>  yes u can take a square root of val for comparison
</code></pre>

<p>and start iterator by value 2
          if(val % i == 0)
          {<br>
              numArray1 [index] = i;
val=val/i; //add this</p>

<pre><code>          index++;
      }
  but here u need to check if index is 2...it is prime.
</code></pre>
"
"6280888","<p>A wildcard type <code>G&lt;? extends A&gt;</code> is a super type of any <code>G&lt;Ai&gt;</code> where <code>Ai</code> is a subtype of <code>A</code></p>

<p>In another word, <code>G&lt;? extends A&gt;</code> is the union type of <code>G&lt;A0&gt;, ..., G&lt;An&gt;</code>.</p>
"
"5499592","<p>I don't know about the runtime disadvantages about the following but you could run a regexp match on your string to make sure it is a number before trying to parse it, thus</p>

<pre><code>cost.matches(""-?\\d+\\.?\\d+"")
</code></pre>

<p>for a float</p>

<p>and </p>

<pre><code>cost.matches(""-?\\d+"")
</code></pre>

<p>for an integer</p>

<p><strong>EDIT</strong></p>

<p>please notices @Voo's comment about max int</p>
"
"5499650","<p>That depends on your environment. JSF for example would take the burden of manually checking and converting Strings &lt;-> Numbers from you, Bean Validation is another option.</p>

<p>What you can do <strong>immediately</strong> in the snippet you provide:</p>

<ol>
<li>Extract method <code>getAsInt(String param)</code>, in it:</li>
<li>Use <code>String.isEmpty()</code> (Since <a href=""http://download.oracle.com/javase/6/docs/api/java/lang/String.html#isEmpty%28%29"" rel=""nofollow"">Java 6</a>), </li>
<li>surround with <code>try / catch</code></li>
</ol>

<p>What you <strong>should definitely think</strong> about if you happen to write a lot of code like this:</p>

<pre><code>public void myBusinessMethod(@ValidNumber String numberInput) {
// ...    
}
</code></pre>

<p>(This would be interceptor-based).</p>

<p>Last but not least: Save the work and try to switch to a framework which gives you support for these common tasks...</p>
"
"6374110","<p>try</p>

<pre><code>String s = ""str?str?argh"";
s.split(""r\?"");
</code></pre>
"
"5527269","<p>I believe that you are actually looking at typing wrong. By saying that the first method takes Pair you are giving it a very specific type. It's like saying method(String, String). The second method of Pair is like saying method(Person, Person). This too is very specific at a typing level. If you would change your methods to be method(Pair<code>&lt;T,U&gt;</code>, Pair<code>&lt;T,U&gt;</code>) and have that twice, you'd break the compile. </p>

<p>So short answer: since you've strongly typed Pair to mean two different things, Generics aren't at play, just typing rule.</p>
"
"5541502","<p>yes it will always be 4. i see no reason for it not to be <code>4</code></p>

<p>you only run <code>fun()</code> and never <code>run()</code></p>

<p>read <a href=""http://download.oracle.com/javase/1.4.2/docs/api/java/lang/Thread.html"" rel=""nofollow"">java Thread man</a></p>
"
"6431680","<p>The solution I know is to use <code>System.currentTimeMillis()</code> as it's described <a href=""http://www.roseindia.net/java/java-get-example/get-execution-time.shtml"" rel=""nofollow"">here</a> and <a href=""http://www.rgagnon.com/javadetails/java-0132.html"" rel=""nofollow"">here</a>. There also was <a href=""http://stackoverflow.com/questions/302026/measuring-java-execution-time-memory-usage-and-cpu-load-for-a-code-segment"">similar question</a></p>
"
"6435783","<p>You compare Strings with ==, which creates a problem. You can have many different String-Objects which all show ""-1"". The == tests, if you have exactly the same object on the left and right side. You want to know, if the objects on the left and right sie have an equal content. </p>

<p>Better try </p>

<pre><code>input.equalsIgnoreCase(""-1"");
</code></pre>

<p>EDIT: To answer the comment: input.equalsIgnoreCase(""-1"") is the same as input.equals(""-1"") in the case of ""-1"" as there are no uppercase/lowercase letters in ""-1"". However, I prefer equalsIgnoreCase in the case of Strings, because it is defined on String, rather than on Object. Still, as the equals-definition is overridden for the String class, it works too in this example and ""ignoreCase"" is not needed.</p>
"
"5568471","<p>You can't have primitives in generics so that <code>int</code> is actually an <code>integer</code>. The object <code>Void</code> is analogous with the keyword <code>void</code> for generics.</p>
"
"6448956","<p>Have you tried using the URLEncoder?</p>

<pre><code>    URLEncoder.encode(URLString, ""UTF-8"")
</code></pre>

<p>Besides that, your only option is going to encode each URL that is being used as a paramater separately, and then manually building the URL. This is a pretty tricky case.</p>
"
"6457987","<p>I would use a custom <code>TabelModel</code> and override the <code>setValueAt</code> function to perform your validation. It should automatically be called whenever a user is done editing a table cell.</p>
"
"5591445","<p>Your classes should inherit this from a common base class.</p>

<p>I'm no Java guru but something like should be possible</p>

<pre><code>public class Vehicle
{
    protected Logger logger = Logger.getLogger(this.getClass());
}

public class Car extends Vehicle
{
}
</code></pre>

<p>That's how it could be done in C# - it's been ages since I last used Java.</p>
"
"6487530","<p>Why not using one <code>Object</code> and put all your arrays in it.</p>
"
"5604520","<p>You can also use string.substring and get the required output as</p>

<pre><code>string a =s.substring(0,8)
</code></pre>

<p>Like this u can assign for the one you want</p>
"
"6547295","<p>First, a class cannot <code>extend</code> an interface in java. So the code  </p>

<pre><code>class Foo1 extends IFoo{  
</code></pre>

<p>when IFoo is an interface does not compile. </p>

<p>Assuming that you really meant <code>implements</code>:<br>
When you have an interface, you define a contract, a skeleton. All the classes that implement this interface have to follow this contract. See <a href=""http://stackoverflow.com/questions/504904/how-are-java-interfaces-actually-used"">How interfaces are actually used</a></p>

<p>The interface should be general, and everything that is specified in the interface should be applicable to all classes that implement it. So </p>

<blockquote>
  <p>Now Foo2 class dosen't needs parameter
  E at al</p>
</blockquote>

<p>questions the design of the interface.</p>

<p>You still can have another method in Foo2 that takes only two parameters D anf F if need be.</p>
"
"5634985","<p>Maybe it is this what you want:</p>

<pre><code>// Store them into the 16 bit datatype.
char c1_8bit = 'a';
char c2_8bit = 'h';
char two_chars = (c1_8bit &lt;&lt; 8) + c2_8bit;

// extract them
char c1_8bit = two_chars &gt;&gt; 8;
char c2_8bit = two_chars &amp; 0xFF;
</code></pre>

<p>Of course this trick only works with ASCII chars (chars in the range [0-255]). Why? 
Because you want to store your chars this way:<br>
<code>xxxx xxxx  yyyy yyyy</code> with <code>x</code> is char 1 and <code>y</code> is char 2. So this means you have only 8 bit per char. And what is the biggest integer you can make with 8 bit? Answer: 255</p>

<p><code>255</code> = <code>0000 0000 1111 1111</code> (8 bit). And when you are using a char > 255, then you will have this:<br>
<code>256</code> = <code>0000 0001 0000 0000</code> (more than 8 bit), which doesn't fit in the 8 bit you provide for 1 char.</p>

<p>Plus: Keep in mind Java is a language, developed by clever people. They knew what they where doing. <em>Thrust the Java API</em> </p>
"
"5664910","<p>You can do so by these ways.</p>

<p>Add <code>watchpoint</code> and while debugging you can see variable in <strong>debugger window perspective</strong> under variable tab.
OR
Add <code>System.out.println(""variable = "" + variable);</code> and see in console.</p>
"
"6621043","<p>If you want to exit from a simple <code>if else</code> statement but still stays within a particular context (not by returning to the calling context), you can just set the block condition to false:</p>

<pre><code>if(condition){
//do stuff
   if(something happens)
        condition = false;
}
</code></pre>

<p>This will guarantee that there is no further execution, the way I think you want it..You can only use break in a <code>loop</code> or <code>switch case</code></p>
"
"6659476","<p>Storing states and counties in that variable it would be confusing to name it map - call it <code>stateCountyHash</code> or <code>numCountiesByState</code></p>
"
"5723303","<p>If the problem is the checked exception then a common idiom is to convert it to a RuntimeException, something like this:</p>

<pre><code>try {
 ...
} catch (IOException e) {
    throw new RuntimeException(e);
}
</code></pre>

<p>Basically you catch, convert and rethrow. RuntimeException is unchecked so the method signature does not need to declare it.</p>
"
"6786149","<p>Super is relevant for calling of static methods only. If you call non-static method using super that is actually reference to your object itself, i.e. to <code>this</code>. For example you can say <code>System.out.println(super.toString())</code>. This will work and will run the <code>toString()</code> of actual class. </p>

<p>I think this is the reason that passing <code>super</code> as argument to other method is forbidden.</p>
"
"5751908","<p>Have your comparator convert the strings it is input into doubles and do a numeric comparison rather than a string compare.</p>

<p>That's the advantage of the <code>Comparator</code> concept.  It can do anything with the inputs.  So if you need to sort <code>Strings</code> as if they were numbers, write a <code>Comparator</code> that'll do just that.</p>
"
"5754872","<p>Use Enums!</p>

<pre><code>public enum SectionActivity {

  S1S1(MyS1Activity.class),
  S1S2(S2Activity.class);

  private Class&lt;? extends Activity&gt; activityClass;

  private SectionActivity(Class&lt;? extends Activity&gt; clazz) {

   this.activityClass = clazz;
  }

  public Class&lt;? extends Activity&gt; getActivity {
     return activityClass;
  }    
}
</code></pre>

<p>Then somewhere in your code: </p>

<pre><code>SectionActivity act = SectionActivity.valueOf(string);
Intent intent = new Intent(this, act.getActivity());
startActivity(intent);
</code></pre>
"
"5766367","<pre><code>double total = 44;
String total2= new Double(total).toString();
</code></pre>

<p>this code works</p>
"
"5775667","<p>Why not use:</p>

<pre><code> int index = 0;

    while (index &lt; columnNum){
        shipsAndOwnHitsTable.getColumnModel().getColumn(index).setPreferredWidth(800);
        index+=1;
    }
</code></pre>

<p>Also why not change your loop to:</p>

<pre><code>for(int index = 0; index &lt; columnNum; index++){
   shipsAndOwnHitsTable.getColumnModel().getColumn(index).setPreferredWidth(800);// two lines of code less
}
</code></pre>

<p>Remember you use (recommended) the <code>while-loop</code> if you don't know the number of iterations beforehand...</p>
"
"5775899","<p>If the jTable is in jScrollPane you also need to increase the size(width) of the jScrollPane too...</p>

<p>sample code,
       <pre><code>
        int index = 0;
        int columnNum = 2;
        while (index &lt; columnNum){
         TableColumn a=jTable1.getColumnModel().getColumn(index);<br>
         Dimension d = jTable1.getPreferredSize();
         d.width = d.width + 500;
          jTable1.setPreferredSize(d);
          jScrollPane1.setPreferredSize(d);
            index+=1;
        }</pre></code>
I used a existing table's size and increased the size of the pane...</p>

<p>Hope this helps...</p>
"
"6863061","<p>Taking into account your code</p>

<pre><code>kprotected Void doInBackground(Void... unused) {             
for (String item: items){        
  publishProgress(item);                
 SystemClock.sleep(200);          
   } 
</code></pre>

<p><code>Void</code> means that there will be no return
This would however return something</p>

<pre><code>kprotected something doInBackground(&lt;your parameters here&gt;){
//do your work    
return something
}
</code></pre>

<p>String is something that is stored as text.
Your case each item that is stored as a <code>string</code> in items.(the bigger picture) will have work done on it.</p>

<p><strong>EDIT:</strong></p>

<p>When passing in multiple arguements as in the String array using <code>String...</code> automates the process of multiple arguements being used. Notice how it is not used in the last method.</p>

<p>And yes as mentioned in another answer this is <a href=""http://download.oracle.com/javase/1,5.0/docs/guide/language/varargs.html"" rel=""nofollow"">Varargs</a>    </p>
"
"5783937","<p>As for most cases: it depends.</p>

<p>If your object is rather complex (takes a lot of time to instatiate) put can be expressed in a string, it makes sense to create and load them through a static factory method.</p>

<p>This also makes sense if some representations of the object are used more often than others (in your case maybe Point(0,0,0))</p>

<p>e.g</p>

<pre><code>private static final HashMap&lt;String, Point&gt; hash = new HashMap&lt;String, Point&gt;();

public static Point createPoint(int x, int y, int z) {
 String key = getKey(x,y,z);
 Point created = hash.get(key)
 if (created == null) {
  created = new Point(x,y,z);
  hash.put(key,created);
 }
 return created;
}

private static String createKey(int x, int y, int z) {
 StringBuffer buffer = new StringBuffer();
 buffer.append(""x:"");
 buffer.append(x);
 buffer.append(""y:"");
 buffer.append(y);
 buffer.append(""z:"");
 buffer.append(z);
 return buffer.toString()
}
</code></pre>
"
"6894072","<p>Actually, it should already pretty much work that way.</p>

<p>If an intermediate value in the list is ""null""...
then you'll get an empty string...
which you can simply TREAT as ""null"".</p>

<p>Here's an example:</p>

<p>import java.io.*;</p>

<pre><code>class X
{
  public static void main (String[] args) throws IOException
  {
    // Prompt user to enter something
    String delimiter = "",|;"";
    String sLine = ""051500000711000,,051500000711000,A,,"";
    String[] sOut = sLine.split (delimiter);
    for (int i=0; i &lt; sOut.length; i++)
     System.out.println (""sOut[]="" + sOut[i]);
  }
}

&gt; sOut[]=051500000711000 
&gt; sOut[]= 
&gt; sOut[]=051500000711000 
&gt; sOut[]=A
</code></pre>
"
"5797808","<p>How about</p>

<pre><code>if (!checkSomething()) return false;
if (!checkSomethingElse()) return false;
</code></pre>

<p>No need for the flag if you exit early.</p>
"
"5800723","<p>If you know the (maximum) number of the elements, try to initialize the Array list with a given size:</p>

<pre><code>ArrayList&lt;Integer&gt; sums = new ArrayList&lt;Integer&gt;(abundants.size() * abundants.size());
</code></pre>

<p>With that the ArrayList won't have to be resized, this will increase the speed.</p>
"
"7000403","<p>Try with <code>getComponent</code> of MouseEvent:</p>

<pre><code>if(mouseEvent.getComponent() == aButton) {

}
</code></pre>

<p><a href=""http://download.oracle.com/javase/1.4.2/docs/api/java/awt/event/MouseEvent.html"" rel=""nofollow"">Docs</a></p>
"
"5813519","<p>Rewrite your application in .NET, and then you can enjoy User-Agent lines like this:</p>

<pre><code>Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; 
    .NET CLR 1.1.4322; .NET CLR 2.0.50727)2011-04-27 23:02:21
</code></pre>

<p>I wish browsers were sending same stuff for installed Java... alas, they don't.</p>
"
"7031349","<p>I think you can use the <strong>instanceof</strong> keyword like this:</p>

<pre><code>if(s instanceof java.lang.String)
{

}
</code></pre>

<p><a href=""http://www.java2s.com/Tutorial/Java/0060__Operators/TheinstanceofKeyword.htm"" rel=""nofollow"">Link to examples</a></p>
"
"7031398","<p>Why can't you just do?</p>

<pre><code>Collection c = new ArrayList();
c.add(""Hi"");
Iterator i = c.iterator();
Object v = i.hasNext()? i.next() : null;
if(v != null) {
    System.out.println(v.getClass().getName());
}
</code></pre>

<p><strong>Update:</strong></p>

<p>Assuming it is a homogeneous collection. Hopefully I correctly understood your problem.</p>
"
"5833961","<pre><code>cDate myAppointments = new cDate[24];
</code></pre>

<p>try declaring the variable type</p>
"
"5835174","<p>You do the negation of the strings that you don't want - e.g. </p>

<pre><code>""ten"" !~ /one|two|three/
</code></pre>

<p>This gives you:</p>

<pre><code>print ""one"" !~ /one|two|three/ --&gt; false
print ""two"" !~ /one|two|three/ --&gt; false
print ""ten"" !~ /one|two|three/ --&gt; true
</code></pre>
"
"7075588","<p>In the end I chose to use the JAVA SE API in the old and fashion way:</p>

<pre><code>public void getRestfullMethod(...) throws IOException
  {
        String temp = null;

        //Build the request data.
        StringBuffer buf = new StringBuffer (..)
        buf.append(""&amp;system="").append (""someVal"");

        String urlStr = buf.toString ();

        //Send the request.
        URL url = new URL (urlStr);
      URLConnection con = url.openConnection();

      //Return the response.
        BufferedReader in = new BufferedReader (new InputStreamReader (con.getInputStream ()));
        String inputLine = null;

        buf = new StringBuffer ();
        while ((inputLine = in.readLine ()) != null)
              buf.append (inputLine);
        in.close ();

  }
</code></pre>
"
"7093352","<p>C++ is old and it's built upon C, which is even older. In C++, a class is really a C-style <code>struct</code> with a pointer to a vtable, containing pointers to the starting address of each function in the class.</p>

<p>What you put in your header file is the definition of the class, ie the struct. What you put in our implementation are the function to which the vtable will point. This is why you need to include the definition (the ""header"") of a class in another file to be able to use it. This is also why you normally put the definition of a class in a separate file (.hpp). You strictly don't have to, but it would be difficult to use that class in other classes if you don't. But you could as well put all your code in just one, big text-file.</p>

<p>The C++ compiler will process each file independently, expanding all #include macros to include their definitions in each .cpp file. It will also translate all function-calls to the vtable notation, ie</p>

<p>someInstance->someMethod() becomes (someInstance->VTABLE[0]), assuming someMethod() is the first one declared in the definition of someIntance's class.</p>

<p>The compiler then creates the object files (so called translation units) and lays the resulting maching code of all the functions implemented in all .cpp files in a memory layout, with relocation tables for all pointers in all vtables. The linker later replaces resolves the symbols in the relocation table to the actual memory address of the functions.</p>

<p>Long story short, C++ looks the way it does for legacy purposes (and the fact the C is not object oriented). Java is object oriented from the get go, meaning that interfaces are something you MAY use, as opposed to C++ where class definitions is something you MUST have (struct and vtable, remember) and something you MUST include, one way or another, in every .cpp file where you want to use that class.</p>
"
"7129991","<pre><code>@Transactional(readOnly = true)
@SuppressWarnings(""unchecked"")
@Column(name = ""status"")

public List&lt;Student&gt; findStudentByStatus(String status) {
    System.out
            .println(""call findStudentMethd******************with this pattern""
                    + status
                    + ""*********************************************"");

    return em.createQuery(
            ""select attendence from Attendence attendence where attendence.status like '""
                    + p
                    + A 
                    + L 
                    + ""'"")

    .getResultList();

}
</code></pre>
"
"7153153","<p>It depends what you mean by ""any character"". </p>

<ul>
<li>If you just want one single character exactly, but don't care what it is, you want <code>.</code></li>
<li>If you want ""one-or-none"", you want <code>.?</code></li>
<li>If you want ""one-or-more"", you want <code>.+</code></li>
<li>If you want ""zero-or-more"", you want <code>.*</code></li>
</ul>

<p>Also, you don't need to escape the <code>/</code> at all. So <code>""test/.""</code> would match ""test followed by slash followed by exactly one character"".</p>
"
"7174398","<p>If you are looking for something very very simple try this:</p>

<pre><code>Date date = new Date();
String random = String.valueOf(date.getTime()).substring(6);
</code></pre>

<p>The numbers will never repeat in your near future!</p>
"
"5894437","<p>To download a file I use the following code:</p>

<pre><code>public boolean DownloadFile(String url, File outputFile) 
{
try {
  URL u = new URL(url);
  URLConnection conn = u.openConnection();
  int contentLength = conn.getContentLength();

  DataInputStream stream = new DataInputStream(u.openStream());

  byte[] buffer = new byte[contentLength];
  stream.readFully(buffer);
  stream.close();

  DataOutputStream fos = new DataOutputStream(new FileOutputStream(outputFile));
  fos.write(buffer);
  fos.flush();
  fos.close();
  } 
catch(FileNotFoundException e) 
  {
  return false; 
  } 
catch (IOException e) 
  {
  return false; 
  }

return true;
}
</code></pre>
"
"7192642","<p>Taking a slightly different tack, once you have identified the correct area of memory to overwrite, you might want to do it more than once:</p>

<pre><code>zerorize(SecretKey key)
{
    byte[] rawKey = key.getEncoded();
    Arrays.fill(rawKey, (byte) 0xFF);
    Arrays.fill(rawKey, (byte) 0xAA);
    Arrays.fill(rawKey, (byte) 0x55);
    Arrays.fill(rawKey, (byte) 0x00);
}
</code></pre>
"
"5900619","<p>Your code doesn't seem to include the getWidth() and getHeight() methods. Also, the following piece of code is totally wrong as a placement and should be placed in a constructor:</p>

<pre><code>double centre_x = getWidth() / 2; //check this
double centre_y = getHeight() * 0.5;//and this
</code></pre>

<p>Should become </p>

<pre><code>private double centre_x;
private double centre_y; 
GraphicsHierarchy(){
    centre_x = GraphicsHierarchy.BOX_WIDTH / 2;
    centre_y = GraphicsHierarchy.BOX_HEIGHT * 0.5;
}
</code></pre>

<p>This code will at least compile, but consider the solution described below, which is even better.</p>

<p>Considering that you have defined BOX_WIDTH and BOX_HEIGHT as static variables, you can always find centre_x and centre_y. Therefore, you don't even need to define BOX_WIDTH and BOX_HEIGHT</p>

<p>You can define your class like this:</p>

<pre><code>//Import any libraries
import acm.program.*;
import acm.graphics.*;

public class GraphicsHierarchy extends GraphicsProgram {
public void run() {
    placeGRect();
}   
//Define constants
public static final double CENTRE_X= 100.00; 
public static final double CENTRE_Y = 37.50;
//placeGRect method
public void placeGRect() {
    for (int count = 0; count &lt; 4; count++) {
        GRect box = new GRect (200, 75);
        add(box);
        switch (count) {
        case 0:
            box.setLocation(GraphicsHierarchy.CENTRE_X, 75);
            break;
        case 1:
            box.setLocation((GraphicsHierarchy.CENTRE_X * 0.5), 250);
            break;
        case 2:
            box.setLocation(GraphicsHierarchy.CENTRE_X, 250);
            break;
        case 3:
            box.setLocation((GraphicsHierarchy.CENTRE_X * 1.5), 250);
            break;
        }
    }
}
}
</code></pre>

<p>In my opinion, you can go even further by eliminating all computations and replace such stuff </p>

<pre><code>GraphicsHierarchy.CENTRE_X * 1.5 
</code></pre>

<p>with </p>

<pre><code>150
</code></pre>

<p>Come on, have it easy on your Virtual Machine! Your class uses a whole load of static information, so there is no need for so much computation. But having a BOX_WIDTH and BOX_HEIGHT is completely useless as constants, as they are used only internally and only on one place. Calculating centre_x and centre_y out of the BOX_WIDTH and BOX_HEIGHT is also useless, as as they are final, you can easily do the computation yourself and reduce unnecessary creation of variables.</p>

<p>In addition, you don't use the centre_y value anywhere, so you should ditch it.</p>

<p>To further add some helpful advice, a decent IDE, like NetBeans, Eclipse, or IntellIJIDEA should have code completion and syntax highlighting and will help you immensely in becoming a better (or more knowledgable, which is even better) programmer.</p>
"
"7258321","<p>The <a href=""http://download.oracle.com/javase/6/docs/api/java/text/NumberFormat.html"" rel=""nofollow"">NumberFormat</a> class is where you will want to look. This will be locale specific and be able to provide you with the proper numbering. Here is an example.</p>

<pre><code>NumberFormat us = NumberFormat.getCurrencyInstance(Locale.US);
String usFormat = us.format(56.45);
System.out.println(usFormat);

NumberFormat uk = NumberFormat.getCurrencyInstance(Locale.UK);
String ukFormat = uk.format(56.45);
System.out.println(ukFormat);
</code></pre>

<p>your output will look like the following</p>

<pre><code>$56.45
£56.45
</code></pre>
"
"5915553","<p>This is relatively straight forward you simply use the class loader to fetch the files from the class plath. : </p>

<pre><code>InputStream is =  YourServlet.class.getClassLoader().getResourceAsStream(""IMAGES/img1.jpg"");
</code></pre>

<p>There are a few other getResoruce classes that are worth looking at. Also you don't have to fetch the class loader through the class variable on your servlet. Any class that you happen to know has been loaded by the container should work . </p>
"
"5915569","<p>If you know the relative location of the files you could ask the runtime about the exact location using</p>

<pre><code>Thread.currentThread().getContextClassLoader().getResource(&lt;relative-path&gt;/&lt;filename&gt;)
</code></pre>

<p>This would give you an URL to the location where the specified image can be found. This URL can be used to read the specified file or you can split it to use the different parts of the URL for further processing.</p>
"
"5920920","<p>I will assume that your ""popular"" JARs are well-known open-source projects. This means that they're available in the Maven central repository.</p>

<p>While I believe that using Maven is the <em>best</em> answer to this question, you can also hack something using Ant's <code>&lt;get&gt;</code> task. For example, to download the JUnit JAR (may have typos):</p>

<pre><code>&lt;property name=""dependency.dir"" value=""${basedir}/dependencies""/&gt;

&lt;property name=""junit.jar"" value=""junit-4.8.2.jar""/&gt;
&lt;property name=""junit.url"" value=""http://search.maven.org/remotecontent?filepath=junit/junit/4.8.2/${junit.jar}""/&gt;

&lt;target name=""download.dependencies""&gt;
    &lt;mkdir dir=""${dependency.dir}/&gt;
    &lt;get url=""${junit.url}"" dest=""${dependency.dir}/${junit.jar}""/&gt;
&lt;/target&gt;
</code></pre>

<p>Of course, if you do this then you'll have to carefully configure your build scripts so that you don't do the download with every run. And you'll increase load on the Maven Central repository.</p>
"
"7351315","<p>It is a bad idea. Primarily because <code>OutOfMemoryError</code> is an <code>Error</code> not an <code>Exception</code> - An Error ""indicates serious issues that a reasonable application should not try to catch.""</p>

<p>Instead, analyse your possible scenarios and apply fixes based on information provided in this <a href=""http://www.springsource.com/files/uploads/all/pdf_files/news_event/Inside_the_JVM.pdf"" rel=""nofollow"">PDF</a></p>
"
"7351352","<p>It is useless. Because at the moment the error is catched, you may be so short of heap memory that any new object creation could throw a new OOME. Having such an small margin of maneuver in the catch means that the only action you could take is to exit.</p>

<p>Test this snippet, and tell me what your output is:</p>

<pre><code>      import java.util.LinkedList;
      import java.util.List;

      public class OOMErrorTest {


        public static void main(String[] args) {
            List&lt;Long&gt; ll = new LinkedList&lt;Long&gt;();

            try {
                long l = 0;
                while(true){
                    ll.add(new Long(l++));
                }
            } catch(OutOfMemoryError oome){         
                System.out.println(""Error catched!!"");
                System.out.println(""size:"" +ll.size());
            }
            System.out.println(""Test finished"");
        }

      }
</code></pre>

<p>But strictly speaking, yes, these are catchable.</p>
"
"5922507","<p>Soo... seems I have to answer the question myself. Passing the original classpath to the javac task can be achieved with this:</p>

<pre><code>&lt;!-- load environment into the env property --&gt;
&lt;property environment=""env"" /&gt;

&lt;javac srcdir=""${src}"" destdir=""${obj}""
    includes=""**/*.java""
    excludes=""**/package-info.java **/deprecated/*.java""
    includeAntRuntime=""no"" includeJavaRuntime=""no""
    debug=""true"" debuglevel=""source,lines""
&gt;
    &lt;!-- add -classpath option manually --&gt;
    &lt;compilerarg value=""-classpath"" /&gt;
    &lt;compilerarg value=""${env.CLASSPATH}"" /&gt;
    &lt;compilerarg value=""-Xlint""/&gt;
&lt;/javac&gt;
</code></pre>

<p>That does the trick at least so far that the javac task now gets passed the correct classpath. Yet it will still not work, javac now spits these complaints:</p>

<pre><code>[javac] warning: [path] bad path element ""D:\local\lib\java\*"": no such file or directory
[javac] warning: [path] bad path element ""C:\lib\java\*"": no such file or directory
[javac] warning: [path] bad path element ""C:\lib\java\db\*"": no such file or directory
</code></pre>

<p>This is a straight lie, these paths do very much exist. I use them all the time, and if I manually craft an equivalent javac invocation at the shell, it works like a charm. I suspect ant's javac doesn't resolve the jar files in those directories. I have to examine that.</p>

<p><strong>UPDATE</strong></p>

<p>It is indeed as I suspected, the wildcard is not resolved to the individual present jar files by the javac task. I managed to do the resolving manually, and now it works as it should. And that resolving was in fact a struggle on its own. So I'll leave the solution here for those poor souls fighting the same stupidity, hopefully before they ask people that have nothing else to do than bullshitting around (yes Anon, talking about you).</p>

<p>Turns out, ant lacks the most basic functionality that you would expect from a build tool. Also turns out that I'm not the first one to notice that. While solutions are rare, there <em>is</em> a very good post about <a href=""http://weblogs.java.net/blog/emcmanus/archive/2010/09/20/using-javascript-make-apache-ant-less-painful"" rel=""nofollow"">Using JavaScript to make Apache Ant less painful</a>, which really saved my day. Yes, ant can indeed be scripted, which seems not to be widely known, although it is <a href=""http://ant.apache.org/manual/Tasks/script.html"" rel=""nofollow"">not kept secret</a>. You can safely assume, that Javascript is already available without installing additional libraries if you run ant on Java 6.</p>

<p>Soo... down to business. Here is the thing:</p>

<pre><code>&lt;target name=""expand_classpath""&gt;
    &lt;script language=""javascript""&gt;&lt;![CDATA[
        // the original classpath
        var ocp = java.lang.System.getenv(""CLASSPATH"");
        //  ... split in parts
        var ocp_parts = ocp.split(project.getProperty(""path.separator""));

        // where our individual jar filenames go,
        //  together with pure directories from ocp_parts
        var expanded_parts = [ ];

        for each (var part in ocp_parts) {
            if (part.endsWith('*')) {
                var dir = part.substring(0, part.length() - 1);
                var f = new java.io.File(dir);

                // don't know how to construct a java.io.FilenameFilter,
                //  therefore filter the filenames manually
                for each (var file in f.listFiles())
                    if (file.getPath().endsWith('.jar'))
                        expanded_parts.push(file.getPath());
            } else
                expanded_parts.push(part);
        }

        var expanded = expanded_parts.join(project.getProperty(""path.separator""));
        project.setProperty(""classpath.expanded"", expanded);
    ]]&gt;&lt;/script&gt;

    &lt;!-- &lt;echo message=""classpath.expanded = ${classpath.expanded}"" /&gt; --&gt;
&lt;/target&gt;

&lt;target name=""build"" depends=""expand_classpath""&gt;
    &lt;mkdir dir=""${obj}"" /&gt;

    &lt;javac srcdir=""${src}"" destdir=""${obj}""
        classpath=""${classpath.expanded}""
        includes=""**/*.java""
        excludes=""**/package-info.java **/deprecated/*.java""
        includeAntRuntime=""no"" includeJavaRuntime=""no""
        debug=""true"" debuglevel=""source,lines""
    &gt;
        &lt;compilerarg value=""-Xlint""/&gt;
        &lt;compilerarg value=""-Xlint:-fallthrough""/&gt;
    &lt;/javac&gt;
&lt;/target&gt;
</code></pre>
"
"7376202","<p>The add method takes individual values, not arrays. You can combine List's <a href=""http://download.oracle.com/javase/7/docs/api/java/util/List.html#addAll%28java.util.Collection%29"" rel=""nofollow"">addAll</a> and Arrays' <a href=""http://download.oracle.com/javase/7/docs/api/java/util/Arrays.html#asList%28T...%29"" rel=""nofollow"">asList</a> method (if you want to stick with an ArrayList):</p>

<pre><code>al.addAll(Arrays.asList(Global.Arrayweight));
al.addAll(Arrays.asList(Global.Arraypulse));
</code></pre>
"
"5937422","<p>It isn't entirely clear what you are asking, but perhaps you want to define a mapping between strings and constants, like this:</p>

<pre><code>enum Type { FIRST, SECOND, THIRD };
Map&lt;String, Type&gt; mapping = new HashSet&lt;String, Type&gt;(){{
    put(""ONE"", Type.FIRST);
    put(""TWO"", Type.FIRST);
    //...
    put(""NINE"", Type.THIRD);
}};

public Type getTypeFromString(String s) {
    return mapping.get(s);
}
</code></pre>
"
"5958620","<p>You mean this? o.0</p>

<pre><code>public void getOrderInformation() throws InvalidCardNumberException
{
    try
    {
        getCreditCardNumber();
    }
    catch(InvalidLengthException e)
    {
        System.out.println(""Card number must be 16 digits."");
    }
    catch(NonNumericException e)
    {
        System.out.println(""Card number must be numbers only."");
    }
}
</code></pre>
"
"5958693","<p>Here is the answer for all of these together; you can take it apart to see what I did.</p>

<pre><code>public void getOrderInformation() throws InvalidCardNumberException
{
  try {
    getCreditCardNumber();
  } catch(InvalidLengthException ex) {
    System.err.println(""Card number must be 16 digits."");
  } catch(NonNumericException ex) {
    System.err.println(“Card number must be numbers only.”);
  }
}
</code></pre>
"
"5968988","<p>I am not quite sure if I understood your question, but are you looking for:</p>

<pre><code>JList &lt;MyType&gt; myList = new JList &lt;MyType&gt; ();
</code></pre>
"
"5988401","<p>So do you expect a <code>16*4=64 bits = 8 bytes</code> file? More than UTF-8 or ASCII encoding. Once the file is written to a file. The memory (in terms of space) management is up to the operating system. And your code doesn't have a control on it.</p>
"
"5989232","<p>You can do this using Reflection (java.lang.reflect package).</p>

<pre><code>public static void main(String[] args) throws Exception {
    Class c = Class.forName(""ServerStart"");
    Class[] argTypes = { args.getClass() };
    Method m = c.getMethod(""main"", argTypes);
    Object passedArgv[] = { args };
    m.invoke(null, passedArgv);
}
</code></pre>
"
"7604470","<p>this will get the current generation</p>

<pre><code>SELECT GEN_ID(GEN_NAME,0) FROM RDB$DATABASE
</code></pre>

<p>with GEN_NAME being what you called that generation</p>

<p>when you create a auto increment field a trigger and a generation is created the trigger looks like this usually</p>

<pre><code>SET TERM ^^ ;
CREATE TRIGGER TABLE_BEFOREINSERT FOR TABLE ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN

  if ( new.ID is null )
  then new.ID = gen_id(GEN_TABLE, 1);

END ^^
SET TERM ; ^^
</code></pre>

<p>and the creation for the generation looks like this</p>

<pre><code>CREATE GENERATOR GEN_TABLE;
SET GENERATOR GEN_TABLE TO 32;
</code></pre>

<p>these two together make is so that BEFORE a new row is inserted, it checks to see if you specified the value of ID, if not it increases the generation by one and gets its current value and puts it as the ID column</p>
"
"6013232","<p>The reason why operator overloading is abused in C++ language is because it's too complex feature. Here's some aspects of it which makes it complex:</p>

<ol>
<li>expressions are a tree</li>
<li>operator overloading is the interface/documentation for those expressions</li>
<li>interfaces are basically invisible feature in c++</li>
<li>free functions/static functions/friend functions are a big mess in C++</li>
<li>function prototypes are already complex feature</li>
<li>choice of the syntax for operator overloading is less than ideal</li>
<li>there is no other comparable api in c++ language</li>
<li>user-defined types/function names are handled differently than built-in types/function names in function prototypes</li>
<li>it uses advanced math, like the operator&lt;&lt;(ostream&amp;, ostream &amp; (*fptr)(ostream &amp;));</li>
<li>even the simplest examples of it uses polymorphism</li>
<li>It's the only c++ feature that has 2d array in it</li>
<li>this-pointer is invisible and whether your operators are member functions or outside the class is important choice for programmers</li>
</ol>

<p>Because of these complexity, very small number of programmers actually understand how it works. I'm probably missing many important aspects of it, but the list above is good indication that it is very complex feature.</p>

<p>Update: some explanation about the #4: the argument pretty much is as follows:</p>

<pre><code>class A { friend void f(); }; class B { friend void f(); }
void f() { /* use both A and B members inside this function */ }
</code></pre>

<p>With static functions, you can do this:</p>

<pre><code>class A { static void f(); }; void f() { /* use only class A here */ }
</code></pre>

<p>And with free functions:</p>

<pre><code>class A { }; void f() { /* you have no special access to any classes */ }
</code></pre>

<p>Update#2: The #10, the example I was thinking looks like this in stdlib:</p>

<pre><code>  ostream &amp;operator&lt;&lt;(ostream &amp;o, std::string s) { ... } // inside stdlib
  int main() { std::cout &lt;&lt; ""Hello World"" &lt;&lt; std::endl; }
</code></pre>

<p>Now the polymorphism in this example happens because you can choose between std::cout and std::ofstream and std::stringstream. This is possible because operator&lt;&lt; first parameter takes a reference to ostream. This is normal runtime polymorphism in this example.</p>

<p>Update #3: About the prototypes still. The real interaction between operator overloading and prototypes is because the overloaded operators becomes part of the class' interface. This brings us to the 2d array thing, because inside the compiler the class interface is a 2d data structure which has quite complex data in it, including booleans, types, function names. The rule #4 is needed so that you can choose when your operators are inside this 2d data structure and when they're outside of it. Rule #8 deals with the booleans stored in the 2d data structure. Rule #7 is because class' interface is used to represent elements of an expression tree.</p>
"
"6022245","<p>I would just use following regex in Java:</p>

<pre><code>""^@[^:]*:[^:]*:[^:]*$""
</code></pre>

<p>Rather than matching for number or alphabets I am just matching until <code>:</code> is found.</p>

<h3>Full Java code:</h3>

<pre><code>p = Pattern.compile(""^@(\\p{Alnum}+):(\\d+):(\\d+)$"");
m = p.matcher(""@40KIR:5:15"");
while (m.find())
    System.out.println(""Matched: "" + m.group(1) + ',' + m.group(2)+ ',' + m.group(3));
</code></pre>

<h3>OUTPUT</h3>

<pre><code>Matched: 40KIR,5,15
</code></pre>
"
"7671115","<p>or may use webdriver backed selenium -</p>

<pre><code>Selenium selenium = new WebDriverBackedSelenium(driver, baseUrl);
</code></pre>

<p>and do the usual type on upload element</p>
"
"7723633","<p>It's because of operator precedence.</p>

<p>Java does passes where it simplifies the express.  It does some operations, then n the next pass it does some others.  The ""highest"" operators are done first.  For example multiplication is before addition.  The operators <code>( )</code> are in the first pass and let you override the normal order things are done.</p>

<p>See this chart: <a href=""http://www.cs.uwf.edu/~eelsheik/cop2253/resources/op_precedence.html"" rel=""nofollow"">enter link description here</a></p>

<p><code>%</code> is in the same group as <code>*</code> and <code>/</code>.  They are done left to right.</p>

<p>So you want <code>(1/5) % 11</code> </p>

<p>But you have another problem in that this will be done in floating point math, so you will get an approximation not the exact correct answer.</p>

<p>You need to use the <code>BigInteger</code> class instead of the built in primitives.</p>
"
"7735925","<p>I assume you're using <code>paintAll(Graphics g)</code>. Try creating a method called <code>redoRectangles()</code>, which randomly changes the colors of the rectangles. Call it at initialization and as a mouse event.</p>

<p>If you're not using <code>paintAll</code>, I have no idea.</p>
"
"6132317","<p>Something you could do is make a <code>Map&lt;Object, Long&gt;</code> which maps each object to it's memory size.</p>

<p>Then to measure the size of a particular object, you have to do it at instantiation of each object - measure the JVM memory use before (calling <code>Runtime.totalMemory()</code>) and after building the object (calling <code>Runtime.totalMemory()</code>) and take the difference between the two - that is the size of the object in memory. Then add the <code>Object</code> and <code>Long</code> to your map. From there you should be able to loop through all of the keys in the map and find the object using the largest amount of space.</p>

<p>I am not sure there is a way to do it per object after you already have your <code>List&lt;Object&gt;</code>... I hope this is helpful!</p>
"
"7874124","<p>This can be done simply by using : </p>

<pre><code>s=s.replace(""/"","""");
s=s.replace(""("","""");
s=s.replace("")"","""");
</code></pre>

<p>Then substring it to get country code.</p>
"
"7899535","<pre><code>output = (condition1) ? ""Condition1 is true"" : ((condition2) ?
      ""Condition2 is true"" : ( (condition3) ? 
      ""Condition3 is true"" : "" all Condition are false""));
</code></pre>
"
"7910397","<p>Yours is wrong, do this:</p>

<pre><code>public static void main(String[] args) {
    balance(1000.0, .05, 8.5); 
}
</code></pre>
"
"7950063","<p>In a pinch, doing </p>

<pre><code>tf.setMaximumSize(tf.getMinimumSize())
</code></pre>

<p>will keep it constant size and platform neutral. </p>
"
"7958138","<p>If you want to know things like this you can code small example routines and look at the generated bytecode using the <a href=""http://download.oracle.com/javase/6/docs/technotes/tools/windows/javap.html"" rel=""nofollow"">javap</a> utility.</p>

<blockquote>
  <p>I am conjecturing that the answer could be - no concern: the compiler makes them all equivalent. [...] Normally, I do <code>""""+zebra</code> because I am too lazy to type <code>zebra.toString()</code>.</p>
</blockquote>

<p>Two things: </p>

<p>First: The two options are different. Think about <code>zebra</code> being <code>null</code>. </p>

<p>Second: I'm to lazy to do this <a href=""http://download.oracle.com/javase/6/docs/technotes/tools/windows/javap.html"" rel=""nofollow"">javap</a> stuff for you.</p>
"
"6274355","<p>This is the interface for the character in the game which interact with each other.</p>

<pre><code>public interface Character{ ... }
</code></pre>

<p>This is the interface if the character is able to attack or not.</p>

<pre><code>public interface Fightable{
    public void attack(Character character);
}
</code></pre>

<p>These are the two classes in your game which implements both the interfaces.</p>

<pre><code>public class Hero implements Character, Fightable
{
    // heros version of implemented method

    public int attack(Character character)
    {
        // idealy when hero attacks, the health value will be reduced by 15 of what it is.
        character.setHealth(-15);
    }
}

public class Villon implements Character, Fightable
{
    // rival version of implemented method
    public int attack(Character character)
    {
        // idealy when rival attacks, the health value will be reduced by 15 of what it is.
        character.setHealth(- 15);
    }
}
</code></pre>
"
"6280989","<p>There appears to be a permissions issue related to the path<br>
 <code>/tmp/hadoop-Administrator/mapred/local/taskTracker</code><br>
as evidenced by the error message  </p>

<pre><code>ERROR org.apache.hadoop.mapred.TaskTracker: Can not start task tracker because java.io.IOException: Failed to set permissions of path: /tmp/hadoop-Administrator/mapred/local/taskTracker
</code></pre>

<p>The account the taskTracker is being started under needs the ability to chmod the specified folder. It may need more control, such as being owner, for other aspects. I don't recall the specific permissions required for components in hadoop setup.</p>

<p>I haven't dealt with the permission setup aspect of Hadoop much, especially on windows (at all), so what I'm saying is based heavily on the error message you've provided. I also haven't dealth with cygwin folder permission, so I don't know the solution to correct it, but hopefully this will get you pointed in the right direction.</p>
"
"8105734","<p>Unfortunately, I can't think of a way of doing so without pretending the arrays are lists are doing the following.</p>

<pre><code>String[] twentyOne = new String[21];

String[] first = new String[3];
first[0] = twentyOne[0];
first[1] = twentyOne[3];
first[2] = twentyOne[6];
//  And so on

String[] second = new String[3];
second[0] = twentyOne[1];
second[1] = twentyOne[4];
second[2] = twentyOne[7];

String[] third = new String[15];
third[0] = twentyOne[2];
// You get the picture
</code></pre>

<p>I only used arrays in the example because I'm more confident with them, and know them without needing to look at something.</p>

<p>May I ask why you want to avoid looping?</p>
"
"8106606","<p>Next try :)</p>

<pre><code>class Mod3Comparator implements Comparator&lt;Integer&gt; {
    public int compare(Integer a, Integer b) {
        if (a % 3 &lt; b % 3 || (a % 3 == b % 3 &amp;&amp; a &lt; b)) {
            return -1;
        }
        if (a % 3 &gt; b % 3 || (a % 3 == b % 3 &amp;&amp; a &gt; b)) {
            return 1;
        }
        return 0;
    }
}
</code></pre>

<p>First sort the list taking into consideration the modulo rule, then use the <code>Arrays.copyOfRange</code> method.</p>

<pre><code>Collections.sort(list, new Mod3Comparator());
Integer[] array = new Integer[list.size()]; 
list.toArray(array);
List&lt;Integer&gt; A = Arrays.asList(Arrays.copyOfRange(array, 0, 7));
List&lt;Integer&gt; B = Arrays.asList(Arrays.copyOfRange(array, 7, 14));
...
</code></pre>

<p>Also see this <a href=""http://ideone.com/8CreE"" rel=""nofollow"">example</a>.</p>
"
"8122612","<p>Your code isn't valid. You can't equate <code>&gt;</code> or <code>&lt;</code> directly to strings.</p>

<pre><code>if(string1.length() &gt; string2.length())
{
    // string1 is longer
}
else if(string2.length() &gt; string1.length())
{
    // string2 is longer
}
</code></pre>

<p>Anyway, you can't really write this any shorter, nor should you for readability purposes.</p>
"
"6344355","<p>Maybe the Oracle Java API Source code does help:</p>

<pre><code>   /**
     * Returns the index within this string of the first occurrence of the
     * specified substring. The integer returned is the smallest value
     * &lt;i&gt;k&lt;/i&gt; such that:
     * &lt;blockquote&gt;&lt;pre&gt;
     * this.startsWith(str, &lt;i&gt;k&lt;/i&gt;)
     * &lt;/pre&gt;&lt;/blockquote&gt;
     * is &lt;code&gt;true&lt;/code&gt;.
     *
     * @param   str   any string.
     * @return  if the string argument occurs as a substring within this
     *          object, then the index of the first character of the first
     *          such substring is returned; if it does not occur as a
     *          substring, &lt;code&gt;-1&lt;/code&gt; is returned.
     */
    public int indexOf(String str) {
    return indexOf(str, 0);
    }

    /**
     * Returns the index within this string of the first occurrence of the
     * specified substring, starting at the specified index.  The integer
     * returned is the smallest value &lt;tt&gt;k&lt;/tt&gt; for which:
     * &lt;blockquote&gt;&lt;pre&gt;
     *     k &amp;gt;= Math.min(fromIndex, this.length()) &amp;&amp; this.startsWith(str, k)
     * &lt;/pre&gt;&lt;/blockquote&gt;
     * If no such value of &lt;i&gt;k&lt;/i&gt; exists, then -1 is returned.
     *
     * @param   str         the substring for which to search.
     * @param   fromIndex   the index from which to start the search.
     * @return  the index within this string of the first occurrence of the
     *          specified substring, starting at the specified index.
     */
    public int indexOf(String str, int fromIndex) {
        return indexOf(value, offset, count,
                       str.value, str.offset, str.count, fromIndex);
    }

    /**
     * Code shared by String and StringBuffer to do searches. The
     * source is the character array being searched, and the target
     * is the string being searched for.
     *
     * @param   source       the characters being searched.
     * @param   sourceOffset offset of the source string.
     * @param   sourceCount  count of the source string.
     * @param   target       the characters being searched for.
     * @param   targetOffset offset of the target string.
     * @param   targetCount  count of the target string.
     * @param   fromIndex    the index to begin searching from.
     */
    static int indexOf(char[] source, int sourceOffset, int sourceCount,
                       char[] target, int targetOffset, int targetCount,
                       int fromIndex) {
    if (fromIndex &gt;= sourceCount) {
            return (targetCount == 0 ? sourceCount : -1);
    }
        if (fromIndex &lt; 0) {
            fromIndex = 0;
        }
    if (targetCount == 0) {
        return fromIndex;
    }

        char first  = target[targetOffset];
        int max = sourceOffset + (sourceCount - targetCount);

        for (int i = sourceOffset + fromIndex; i &lt;= max; i++) {
            /* Look for first character. */
            if (source[i] != first) {
                while (++i &lt;= max &amp;&amp; source[i] != first);
            }

            /* Found first character, now look at the rest of v2 */
            if (i &lt;= max) {
                int j = i + 1;
                int end = j + targetCount - 1;
                for (int k = targetOffset + 1; j &lt; end &amp;&amp; source[j] ==
                         target[k]; j++, k++);

                if (j == end) {
                    /* Found whole string. */
                    return i - sourceOffset;
                }
            }
        }
        return -1;
    }
</code></pre>
"
"6386475","<p>In your code it is not possible, in case B extends A</p>

<pre><code>public class TestSuper {
    public static class A {
        @Override
        public String toString() { return ""I am A""; }
    }
    public static class B {
        @Override
        public String toString() { return ""I am B""; }
    }
    public static void main(String[] args) {
        B b = new B();
        System.out.println( b ); // --&gt; I am B
        A a = (A)b;
        System.out.println( a ); 
    }
} 
</code></pre>
"
"8197115","<p>you could take a look at this... i think there's a demo as well</p>

<p><a href=""http://docs.oracle.com/javase/tutorial/2d/geometry/primitives.html"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/2d/geometry/primitives.html</a></p>

<p><strong>Update:</strong></p>

<p>If you don't want to introduce a new dependency you can use what plain old java provides. Inside a component's <code>paint()</code> method...</p>

<pre><code>  public void paint (Graphics g) {
      Graphics2D g2 = (Graphics2D) g;
      ...
  }
</code></pre>

<p>... you could use the following Classes for example:</p>

<pre><code>// draw Line2D.Double
g2.draw(new Line2D.Double(x1, y1, x2, y2));

// draw Point
g2.draw(new Line2D.Double(x1, y1, x1, y1));
</code></pre>

<p>or various other shapes like <code>QuadCurve2D</code>, <code>Rectangle2D</code>, <code>Ellipse2D</code> etc...
If you need to draw polygons (custom shapes with multiple vertices) you can use
<code>GeneralPath</code></p>
"
"8235457","<p>I can't resist, I only to preffer <code>PopupFactory</code> </p>

<pre><code>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.Timer;
import javax.swing.border.EmptyBorder;

public class UsePopupFactory {

    private JFrame frame = new JFrame(""PopupFactory Sample"");
    private PopupFactory factory = PopupFactory.getSharedInstance();
    private Popup popup;

    public UsePopupFactory() {
        JPanel btnPanel = new JPanel();
        btnPanel.setBorder(new EmptyBorder(20, 20, 20, 20));
        btnPanel.setLayout(new GridLayout(0, 3));
        ActionListener actionListener = new ShowPopup(frame);
        JButton start3 = new JButton(""Pick Me for Popup"");
        JButton start = new JButton(""Pick Me for Popup"");
        JButton start2 = new JButton(""Pick Me for Popup"");
        btnPanel.add(start3);
        btnPanel.add(start);
        btnPanel.add(start2);
        start3.setVisible(false);
        start2.setVisible(false);
        start.addActionListener(actionListener);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.add(btnPanel, BorderLayout.SOUTH);
        frame.setSize(new Dimension(d.width / 4, d.height / 4));
        frame.setVisible(true);
    }

    private class ShowPopup implements ActionListener {

        private Component component;

        ShowPopup(Component component) {
            this.component = component;
        }

        public synchronized void actionPerformed(ActionEvent actionEvent) {
            JPanel pnl = new JPanel();
            JComboBox combo = new JComboBox();
            JButton button = new JButton(""any action"");
            pnl.add(combo);
            pnl.add(button);
            pnl.setPreferredSize(new Dimension(250, 40));
            popup = factory.getPopup(component, pnl,
                    frame.getWidth() / 2 - pnl.getPreferredSize().width / 2,
                    frame.getHeight() / 2 - pnl.getPreferredSize().height / 2);
            popup.show();
            Timer timer = new Timer(3000, hider);
            timer.start();
        }
    }
    private Action hider = new AbstractAction() {

        private static final long serialVersionUID = 1L;

        @Override
        public void actionPerformed(ActionEvent e) {
            popup.hide();
        }
    };

    public static void main(final String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                UsePopupFactory uPF = new UsePopupFactory();
            }
        });
    }
}
</code></pre>
"
"6464148","<p><code>obj1</code> is duplicate of <code>obj2</code> if <code>obj1.equals(obj2)</code> returns true. So as you can see, the definition of equal really depends on the implementation of equals.</p>

<p>You can write a set say, DistincObjectSet where duplicate means <code>obj1==obj2</code></p>

<p>Another example is you can have EmployeeSet where duplicate means obj1.employeeNo == obj2.employeeNo, in this case you should overwrite the equals() method in Employee class to compare the employee numbers. </p>

<p>The design of the Set API says you you attempt to add duplicate element, the add() method should return false instead of throwing Exception.</p>
"
"8243777","<pre><code>public Class getColumnClass(int c) 
    {     
    for(int rowIndex = 0; rowIndex &lt; data.size(); rowIndex++)
    {
        Object[] row = data.get(rowIndex);
        if (row[c] != null) {
            return getValueAt(rowIndex, c).getClass();
        }   
    }
    return String.class;
}
</code></pre>

<p>Fixed the problem by return <strong>String.class</strong> if all cells in the column is NULL</p>
"
"8293344","<h2>Java file : Jclass.java</h2>

<pre><code>package Jclasspackage

public class Jclass {

    public String uname ;
    /**
     * @return the uname
     */
    public String getUname() {
        return uname;
    }

    /**
     * @param uname the uname to set
     */
    public void setUname(String uname) {
        this.uname = uname;
    }

    public Jclass() {
        this.uname = null;
    }

    public static void main(String[] args) {

    }
}
</code></pre>

<h2>JSP file: sample.jsp</h2>

<pre><code>    &lt;%@ page language=""java""
    import=""java.util.*,java.io.*""
    pageEncoding=""ISO-8859-1""%&gt;

&lt;jsp:directive.page import=""Jclasspackage.Jclass.java"" /&gt;   
&lt;% Jclass jc = new Jclass();
String username = (String)request.getAttribute(""un"")
jc.setUname(username);
%&gt;
</code></pre>

<h2>-----------------</h2>

<p>In this way you can access the username in the java file using 
""this.username"" in the class</p>
"
"6544350","<p>Not sure, but you can check equality using <code>a.compareTo(b) == 0</code>.</p>
"
"8363229","<p>Wrap your map into another object and then marshal.
for example:</p>

<pre><code>class MyObject{

   private Map&lt;String,UUIDInfo&gt; map;

}
</code></pre>

<p>And simply do: <code>mappper.readValue(myInstance, MyObject.class)</code></p>
"
"6553969","<p>Throws raise an exception. An exception will be passed backward to the function into the stack until it is caught by a catch block, that can handle it. </p>

<p>When throw keyword is put in a method declaration it indicates that a call to that method could generate an exception. For example:</p>

<pre><code>public void methodFoo (int val) throws IllegalArgumentException  {
    if (val &lt;0) throw new IllegalArgumentExecption();
}
</code></pre>

<p>means that the methodFoo can raise an exception of the type IllegalArgumentException.
When you call such a method you typically use the following try/catch block statement:</p>

<pre><code>try{
   methodFoo(int param);

}catch (IllegalArgumentException e){
       //if any method call inside methodFoo will raise such exception the execution flow of the program will be interrupted and the execution restart from the first catch block that intercept that execption
}
</code></pre>

<p>The ""good"" of this approach is that, with such feature, you are not forced to check the return value of a method to be sure that your method call succeded. in C language you usually do something like:</p>

<pre><code>int ret = methodFoo();

if (ret == null){
     //error
}
</code></pre>
"
"8381903","<p>Mathematically, the sum of the log-base-2 should be less than 2<sup>32</sup>. Unfortunately, Math doesn't give us log base 2, but this is still simple enough:</p>

<pre><code>static boolean canMultiply(int a, int b) {
    return Math.log(Math.abs(a)) + Math.log(Math.abs(b)) &lt;= Math.log(Integer.MAX_VALUE);
}
</code></pre>

<p><strong>EDITED:</strong> Due to (fair) flak, how about this simple approach that addresses OP's question exactly?</p>

<pre><code>static boolean canMultiply(int a, int b) {
    return a == 0 || ((a * b) / a) == b;
}
</code></pre>

<p>If there's an overflow, dividing by the original number won't bring us back to starting number.<br>
Importantly, this will work for <code>longs</code>, which <em>can't</em> be cast up.</p>
"
"8394301","<p>Abstract methods must be overriden by any subclass that will not be abstract.</p>

<p>So, for example you define an abstract class Log and you force the subclasses to override that method:</p>

<pre><code>public abstract class Log{
  public void logError(String msg){
    this.log(msg,1)
  }
  public void logSuccess(String msg){
    this.log(msg,2)
  }
  public abstract void log(String msg,int level){}
}

public class ConsoleLog{
  public void log(String msg,int level){
    if(level=1){
       System.err.println(msg)
    }else{
       System.out.println(msg)
    }
  }
}
</code></pre>
"
"8396919","<p>Something along these lines ....</p>

<pre><code>   //default icon, custom title
int n = JOptionPane.showConfirmDialog(null,""Would you like green eggs and ham?"",""An Inane Question"",JOptionPane.YES_NO_OPTION);

String result = ""?"";
switch (n) {
case JOptionPane.YES_OPTION:
  result = ""YES"";
  break;
case JOptionPane.NO_OPTION:
  result = ""NO"";
  break;
default:
  ;
}
System.out.println(""Replace? "" + result);
</code></pre>

<p>you may also want to look at <a href=""http://docs.oracle.com/javase/tutorial/uiswing/examples/components/index.html#DialogDemo"" rel=""nofollow"">DialogDemo</a> </p>
"
"8399863","<p>I would suggest you to have <code>Contact</code> class with name and Vector of numbers. And instead of sorting names array sort the array of contacts.</p>
"
"8401563","<p>Yes. </p>

<pre><code>import javax.swing.*
</code></pre>

<p>imports all classes within this package.</p>

<pre><code>import javax.swing.JFrame
</code></pre>

<p>imports only <code>JFrame</code> class.</p>

<p>I would suggest importing concrete classes.
Regards!</p>
"
"8406561","<p>You could try using static methods, as you would end up creating a new gui, then displaying that one, in stead of the current one already displayed.</p>

<p>This would require the parent class to be static too, which may cause errors in some of your methods, just a heads up. </p>

<p>Or else, you could create your own setText method:</p>

<pre><code>void setText(JTextField t, String s){
  t.setText(s);
}
</code></pre>

<p>that may enable you to directly edit components in the current GUI.</p>
"
"8431278","<p>yes you can create a final array by the sum size of all the arrays
then you start a for for each array 
then if the value is not null you add it to the final</p>

<pre><code>String[] a = new String[5];
        String[] b = new String[5];
        String[] c = new String[5];
        String[] d = new String[5];
        String[] e = new String[5];

        String[] finalarray = new String[a.length + b.length + c.length + d.length + e.length];

        int count = 0;
        for (int i = 0; i &lt; a.length; i++) {
            if(a[i] != null){
                finalarray[count] = a[i];
                count++;
            }
        }
        for (int i = 0; i &lt; b.length; i++) {
            if(b[i] != null){
                finalarray[count] = b[i];
                count++;
            }
        }
        for (int i = 0; i &lt; c.length; i++) {
            if(c[i] != null){
                finalarray[count] = c[i];
                count++;
            }
        }
        for (int i = 0; i &lt; d.length; i++) {
            if(d[i] != null){
                finalarray[count] = d[i];
                count++;
            }
        }
        for (int i = 0; i &lt; e.length; i++) {
            if(e[i] != null){
                finalarray[count] = e[i];
                count++;
            }
        }
</code></pre>
"
"8479114","<p>The JVM uses the format <code>org.package.OuterClass$InnerClass</code></p>

<p>Anonymous classes are assigned a unique number.</p>

<p><a href=""http://www.retrologic.com/innerclasses.doc7.html"" rel=""nofollow"">http://www.retrologic.com/innerclasses.doc7.html</a></p>
"
"8479130","<p>The format of the output <code>.class</code> file's name is <code>PublicOuterClass$InnerClass.class</code>. If the inner class is an anonymous class, then it will be replaced with a number and sequentially numbered starting with <code>1</code>.</p>
"
"6684511","<p>have you tried to check the max size of the field...
<code>SELECT LENGTH(clobfield) FROM table</code></p>

<p>see if the field can accomodate the size..</p>
"
"6700426","<p>Your question is a bit confusing, following code is legal and perhaps doing what you want. The <strong>event should probably keep its type parameter for itself</strong> but if you insist on using it the first example from zacheusz with two type params is the right way. Don't overdo it :)</p>

<pre><code>class BufferedEvent&lt;T&gt;{}

abstract class AbstractEventBuffer&lt;E extends BufferedEvent&gt;{}

class EventBuffer&lt;E extends BufferedEvent&gt; extends AbstractEventBuffer
{
    public static void main (String[] args)
    {
          EventBuffer&lt;BufferedEvent&gt; buffer = new EventBuffer&lt;BufferedEvent&gt;();
    }
}
</code></pre>
"
"8674421","<p><code>data.Store(""Jack"", 60, 182);</code> outputs:</p>

<blockquote>
  <p>[Jack]</p>
</blockquote>

<p>and <code>data2.Store(""Peter"", 70, 176);</code> outputs:</p>

<blockquote>
  <p>[Peter]</p>
</blockquote>

<p>So the final output is:</p>

<blockquote>
  <p>[Jack][Peter]</p>
</blockquote>

<p><code>ArrayList</code>s <code>toString()</code> method is called <code>System.out.print(names);</code>, the method returns something like ""[element, element, ...]"".</p>

<p>To get the desired output:</p>

<pre><code>Storage data2 = new Storage();
</code></pre>

<p>Delete that line.</p>

<p>Change the other line</p>

<pre><code>data2.Store(""Peter"", 70, 176);
</code></pre>

<p>to</p>

<pre><code>data.Store(""Peter"", 70, 176);
</code></pre>

<p><strong>Update:</strong></p>

<p>You main method should look like this:</p>

<pre><code>public static void main(String[] args) {
    Storage data = new Storage();
    data.Store(""Jack"", 60, 182);        
    data.Store(""Peter"", 70, 176);
}
</code></pre>
"
"6857698","<pre><code>&lt;%@taglib   uri=""http://java.sun.com/jsf/html"" prefix=""h""%&gt;
</code></pre>

<p>jsf-api.jar and jsf-impl.jar jar in your lib.</p>
"
"8769555","<p>It seems that SimpleDateFormat interprets the last part as an integer, and not as decimal part. The obvious solution is to make sure there are always three digits at the end, and right pad with 0 if not.</p>

<p>Then use the pattern <code>yyyy-MM-dd HH:mm:ss.SSS</code> to parse it.</p>
"
"6945408","<p><code>static</code> doesn't mean it can't be changed, it means it is scoped to the <code>Class</code> and not to an instance of the <code>Class</code>. You refer to <code>static</code> members from the <code>Class</code> and not an instance of the class.</p>

<p><code>final</code> means the reference can't be changed.</p>

<p>Why is your inner class defined as <code>static</code>, remove that it will fix your issue.</p>
"
"8794984","<p>You're looking for <a href=""http://www.regular-expressions.info/charclass.html"" rel=""nofollow"">character classes</a>.</p>

<ul>
<li>Big letter: [A-Z]</li>
<li>Small letter: [a-z]</li>
<li>Digit: [0-9] or \d</li>
<li>Special character: [^A-Za-z0-9]  (That is, not any of the others, where <code>^</code> negates the class)</li>
</ul>

<hr>

<p>If you want to test for 'this' or 'that', you can combine those ranges.  For example, Big or Small letters would be <code>[A-Za-z]</code>.</p>
"
"8800904","<p><code>\w</code>: is used for matching alpha-numeric (alphabets can be either big or small) <br/>
<code>\W</code>: is used for matching special characters</p>

<p>I think this RegEx will be helpful for you:</p>

<pre><code>[\w|\W]+
</code></pre>

<p>Here's a good <a href=""http://gskinner.com/RegExr/"" rel=""nofollow"">RegEx Simulator</a>, you can use it for building your own RegEx.</p>
"
"7009043","<p>Seeing as you're already using 'i' as your counter variable there's no need to make another one called 'counter'. </p>

<pre><code>   for (int i = 0; i &lt;myTable.getRowCount(); i++) {
        myTable.selectCell(i, 1);
        if (myTable.getIcon(i, 0) == (""blue.gif"")) {
            if (myTable.getRowValue(i, 0).contains(""ble."")) {
               System.out.println(i + """");
            }
        }
    }
</code></pre>
"
"8852321","<p>here is an outline.</p>

<pre><code>for (i = 1; i &lt; 11; i++) {
   String toPrint = """";
   for (j = 1; j &lt;= i; j++ {
      // create string of asterisks here
   }
   // print a line here
}
</code></pre>

<p>since this is homework, you should do the rest yourself</p>
"
"8852331","<p>use a for loop</p>

<pre><code>for(i=0;i&lt;10;i++){
   for(int j=0;j&lt;i;j++)
      System.out.print(""*"");
   System.out.println();
}
</code></pre>

<p>hope that helps!</p>
"
"8852354","<p>Solution 1:</p>

<pre><code>for(int i=1; i&lt; 10; ++i) {
   for (int j = 0; j&lt;i; ++j) {
     System.out.print(""*"");
   }
   System.out.println("""");
}
</code></pre>

<p>Soulution 2:</p>

<pre><code>String s = ""*"";

for (int i = 1; i&lt; 10; i++) {
   System.out.println(s);
   s = s + ""*"";
}
</code></pre>

<p>Your choice.</p>
"
"7075040","<p>You can use 
<a href=""http://ra4king.is-a-geek.net/javadocs/javax/swing/event/class-use/CaretListener.html"" rel=""nofollow"">Caret Listener</a></p>

<pre><code>        JTextField textField = new JTextField();
    textField.addCaretListener(new CaretListener() {

        @Override
        public void caretUpdate(CaretEvent e) {
            System.out.println(""text field have changed"");

        }
    });
</code></pre>
"
"8898907","<p>You need to set an onItemClickListener for your ListView that will start another activity with the info of the row selected when the row is clicked (outside the CheckBox of course). I would recommend having your Activity implement <code>AdapterView.OnItemClickListener</code> which requires the method</p>

<pre><code>public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {}
</code></pre>

<p>Inside this method you can launch an Activity with details corresponding to the data in the row selected.
Hopefully I understood your question correctly.</p>
"
"7113328","<p>If you're sick of messing with java you can just send it to db2 as part of your query:</p>

<pre><code>select date1, date2, days(date1) - days(date2) from table
</code></pre>

<p>will return date1, date2 and the difference in days between the two.</p>
"
"8920391","<p>You have to consider that the fields of an array of a primitive type like int cant't be null, empty or something similar, they have to be an integer number (in your case 0). </p>

<p>Also the size of an array is fixed from the time of its declaration on and can't be changed in the future.</p>

<p>When you want to generate an array that contains only the even numbers of your list you are talking of an array with less fields i.e. a smaller size, so i guess it's quite clear that you have to generate a new array to solve you assignment...</p>

<p>some simple hints:</p>

<pre><code>public class Evens {
    static int[] evens(int[] input) {
        final int n = input.length;

        int[] output = new int[n];

        // consider adding some additional lines

        }
        // return ...
        // hint: use something slightly different that your output array
     }
    public static void main(String[] args) {
         int[] fvalues = new int[] {4,7,9,3,6,8,2};
         int[] evalues = evens(fvalues);
         for(int i=0;i&lt;evalues.length;i++)
             System.out.println(i+""] ""+evalues[i]);
    }
</code></pre>
"
"8925171","<p>Use constructor <code>ArrayList(int initialCapacity)</code>. This way you can set an initial capacity.</p>
"
"7121274","<p>Interesting never seen that before.  Seems largely a style preference. I suppose one difference is: the static initialisation takes place at VM startup, rather than on first request for an instance, potentially eliminating an issue with concurrent instantiations? (Which can also be handled with <code>synchronized getInstance()</code> method declaration)</p>
"
"7131403","<p>That would just be a method call to the <code>doTheSum</code> method:</p>

<pre><code>public int doSum(int num1, int num2)
{
    return doTheSum(num1, num2);
}
</code></pre>
"
"8962678","<p>The packaging type is specified by the ""packaging"" tag in the pom.xml (usually placed quite on top of the file, together with the artifact id, version etc of the project.</p>

<p>Try to locate </p>

<pre><code>&lt;packaging&gt;war&lt;/packaging&gt;
</code></pre>

<p>in the pom.xml and change it to</p>

<pre><code>&lt;packaging&gt;jar&lt;/packaging&gt;
</code></pre>
"
"9082774","<p>Instead of doing all of that, just do this:</p>

<pre><code>request.getServerName().toString()
</code></pre>
"
"7362715","<pre><code>public static boolean isFullname(String str) {
    return str.matches(""^[a-zA-z ]*$"");
}
</code></pre>

<p>this method returns true if the string only contains alphabets and spaces.</p>

<p>But it also return true if the string contains nothing.</p>
"
"7362726","<p>Use <code>\s</code> for spaces. You can also use <a href=""http://download.oracle.com/javase/7/docs/api/java/lang/String.html#matches%28java.lang.String%29"" rel=""nofollow""><code>String.matches(regex)</code></a> to test if the string matches a regular expression.</p>

<pre><code>public static boolean isFullname(String str) {
    String expression = ""^[a-zA-Z\\s]*$""; 
    return str.matches(expression);        
}
</code></pre>
"
"9194173","<p>I hope my answer can help you in some way. From experience with setting JPanel or JFrame size, I have always used <code>setPreferredSize(new Dimension(WIDTH,HEIGHT));</code></p>
"
"7409973","<p>You don't need to append the newline to the number, so you can break them apart and avoid this problem. Try this:</p>

<pre><code>for ( int i = 0; i &lt; USER_LIMIT; ++i ) {
    out.write( String.valueOf(latency[i]) ); // Or Long.toString(long)
    out.write( '\n' ); // Or simply out.newLine() 
}
</code></pre>
"
"9201065","<p>If you're having trouble with the math, you could go with a simple moving average instead of exponential.  So the output you get would be the last x terms divided by x.  Untested pseudocode:</p>

<pre><code>int data[] = getFilled();
int outdata[] = initializeme()
for (int y = 0; y &lt; data.length; y++)
    int sum = 0;
    for (int x = y; x &lt; y-5; x++)
        sum+=data[x];
    outdata[y] = sum / 5;
</code></pre>

<p>Note that you will need to handle the start and end parts of the data since clearly you can't average the last 5 terms when you are on your 2nd data point.  Also, there are more efficient ways of calculating this moving average(sum = sum - oldest + newest), but this is to get the concept of what's happening across.  </p>
"
"7426234","<p>A simplistic approach would be to sort the list; then loop on the original list, find the index of the element in the sorted list and insert that into another list.</p>

<p>so a method like </p>

<pre><code>public List&lt;Integer&gt; giveSortIndexes(List&lt;Integer&gt; origList) {
    List&lt;Integer&gt; retValue = new ArrayList&lt;Integer&gt;();
    List&lt;Integer&gt; originalList = new ArrayList&lt;Integer&gt;(origList);
    Collections.sort(origList);
    Map&lt;Integer, Integer&gt; duplicates = new HashMap&lt;Integer, Integer&gt;();
    for (Integer i : originalList) {
        if(!duplicates.containsKey(i)) {
            retValue.add(origList.indexOf(i) + 1);
            duplicates.put(i, 1);
        } else {
            Integer currCount = duplicates.get(i);
            retValue.add(origList.indexOf(i) + 1 + currCount);
            duplicates.put(i, currCount + 1);
        }
    }
    return retValue;
}
</code></pre>

<p>I haven't tested the code and it might need some more handling for duplicates.</p>
"
"9231627","<p>Does it have to be an array? If you use Collections, you can use <code>set1.containsAll(set2);</code></p>
"
"9231634","<p>Just use a second array as your ""check list"" to see missing entries (note this is pseudo code):</p>

<pre><code>function all_in(arraytocheck) {
    array check = {0, 0, 0, 0, 0, 0, 0, 0, 0};

    foreach(element in arraytocheck) {
        if(check[element]) // use this line
            return false;  // and this one, if you don't want to allow entries twice
        check[element] = 1;
    }

    foreach(element in check)
        if(!element)
            return false; // return false if an element is missing
    return true;
}
</code></pre>
"
"9231890","<p>If the size of the array is 9, then you just have to check that every number from 1 to 9 is contained in the array.
One way to do this is :</p>

<pre><code>public boolean check(Integer[] array) {
    List&lt;Integer&gt; list = Arrays.asList(array);
    for (int i = 1; i &lt; 10; i++) {
        if (!list.contains(i)) {
            return false;
        }
    }
    return true;
}
</code></pre>

<p>Another way would be to do this :</p>

<pre><code>public boolean check(Integer[] array) {
    List&lt;Integer&gt; list = Arrays.asList(array);
    return list.containsAll(Arrays.asList(new Integer[]{1, 2, 3, 4, 5, 6, 7, 8, 9}));
}
</code></pre>
"
"7465880","<p>you can even be more <em>implicit</em>:</p>

<pre><code>foreach (&lt;LINE&gt;){  
    doSomething(x,y);  
    print;   #If you don't specify what to print, it prints ""$_""
}
</code></pre>

<p>However, what was once acceptable is no longer acceptable. It's much like not using <code>use strict</code> and <code>use warnings</code> in your code. Not using these pragmas allowed you to do so many <em>interesting</em> things. Things that you might not have intended to do and things that make your code really hard to understand.</p>

<p>Almost all Perl programmers no longer use the implicit <code>$_</code> and <code>@_</code> because it's just makes your code all that more difficult to understand and can be a cause errors (like assuming that <code>while</code> also uses an implicit <code>$_</code> ;-) ).</p>

<p>Java (and most languages) don't have such a default variable because it's not really all that good an idea. Good Perl ideas like CPAN and expanded regular expressions have now been copied in other languages. Things like default variables have not.</p>

<p>Using this stuff can be fun -- like a secret decoder ring that allowed you to know who's a real Perl hacker and who isn't. It's fun to read through all that obfuscated Perl code and see who really understands the inner workings of Perl.</p>

<p>However, it has also given developers in other languages the proof they need that Perl was hopelessly sloppy and impossible to understand. And, as a result, Perl has suffered in general acceptance.</p>
"
"9261249","<p><strong>EDITED</strong></p>

<p>I recommend forming a priority-queue (heap based), taking Michael's suggestion to it's logical conclusion. <strong>Don't store 10, store n.</strong></p>

<pre><code>PQ a[n];
a.insert(input);
</code></pre>

<p><code>O(log n)</code> FTW</p>
"
"9289386","<p>If the image is part of the ViewGroup i mean a view then you can always implement the OnClickListener and override the onClick(View v) method:</p>

<pre><code>public void onClick(View v) {

        switch (v.getId()) {
        case R.id.image_btn:
            // your code goes here.
            break;

        default:
            break;
        }

    }
</code></pre>

<p>Hope this helps</p>
"
"9289421","<p>You can Use to varify:   </p>

<pre><code> imgResult.setOnTouchListener(new OnClickListener() {           
                public void onClick(View v) {    
        System.out.println(""Somethog is touched"");    
      }    
    });
</code></pre>
"
"7529009","<pre><code> one way to laod jar file .. it may helpful to you.



 public class JarLoad {
        public static void main(String[] args) throws ZipException, IOException {
    File jarfile = new File(""C\\scan.jar"");
    if(! jarfile.isDirectory()){
        ZipFile jar = new ZipFile(jarfile);
        Enumeration enumeration = jar.entries();
        while(enumeration.hasMoreElements()){
            ZipEntry zipEntry = (ZipEntry)enumeration.nextElement();
            System.out.println(zipEntry.getName());
        }

    }

}
</code></pre>

<p>}</p>
"
"9414007","<p>Well I am no Java programmer (although I do use C++ which is similar in script), but could you do this with a boolean value named ""DEBUG_MODE"" in your main class and pass it to other classes as an argument? I would say use a macro but I don't think Java supports this.</p>

<pre><code>class Program
{    
    bool DUBUG_MODE = true;
    public static void main (String args[]) //Please excuse any poor coding here. Again, I am not used to Java.
    {
        //Your code here.
        if(DEBUG_MODE) throw e;

    }
}
</code></pre>

<p>I hope I was able to help. In C++ I would do this with a macro but it doesn't sound like you have those at your disposal. Also I am assuming that you are okay with having this notion of a debug option in your program that is not necessarily related to the compiler. If you wanted certain things to be ""activated"" while your compiler was in debug mode, that might be a bit more complicated.</p>
"
"9430777","<p>Your code is incorrect and won't compile.</p>

<p>Look at the Javadoc for Class. It only has one method called getMethod:</p>

<pre><code>getMethod(String name, Class&lt;?&gt;... parameterTypes)
</code></pre>

<p>It doesn't have a method called getMethod() which has a Method object as first parameter.</p>
"
"9438743","<p>If that is the only Functionality of the DataObject, it really seems excessive, given that you can just put all your table names in a list and loop over it:</p>

<pre><code>List&lt;String&gt; tables = new List&lt;String&gt;{ ""TabA"",""TabB"",""TabC""};
foreach( var tname in tables )
{
   deleteTable(tname); 
}
</code></pre>

<p>I know tho, by looking at your code, that there is also SQLQuery, which you need access to, but I would move that out of AbstractDataObject as well.</p>

<p>after comments: ok, fine, then here is my suggestion:</p>

<pre><code>public abstract class AbstractDataObject
{
   private String tableName;
   public AbstractDataObject(String tableName)
   {
      this.tableName = tableName;
   }

   public void delete()
   {
      SQLQuery(""..."" + tableName + ""..."" );
   }
}

public class SellerDataObject extends AbstractDataObject
{
   public DataObject(): super(""Seller"")
   {
   }
}
</code></pre>
"
"9439380","<p>Here is a Java solution</p>

<pre><code>static int knapsack(int[] values, int[] weights, int W, int[] tab, int i) {
    if(i&gt;=values.length) return 0;
    if(tab[W] != 0) 
        return tab[W];      

    int value1 = knapsack(values, weights, W, tab, i+1);        
    int value2 = 0;
    if(W &gt;= weights[i]) value2 = knapsack(values, weights, W-weights[i], tab, i+1) + values[i];

    return tab[W] = (value1&gt;value2) ? value1 : value2;
}
</code></pre>

<p>Test it by using</p>

<pre><code>public static void main(String[] args) {
    int[] values = new int[] {894, 260, 392, 281, 27};
    int[] weights = new int[] {8, 6, 4, 0, 21};
    int W = 30;
    int[] tab = new int[W+1];
    System.out.println(knapsack(values, weights, W, tab, 0));
}
</code></pre>
"
"9457349","<pre><code>    class EnumValues&lt;P extends Enum&lt;P&gt;&gt;
    {
        public static &lt;P extends Enum&lt;P&gt;&gt; P [] getValues( Class&lt;P&gt; keyType)
        {
            return keyType.getEnumConstants();
        }
    }
</code></pre>

<p>Usage:</p>

<pre><code>    Class cls = Thread.State.class;
    for( Enum en : EnumValues.getValues( cls)) 
        System.out.println( en.name()); 
</code></pre>
"
"9486408","<p>You can pass in a class that implements your callback.</p>

<pre><code>new A(instanceOfB);

someMethodOfA() {
    doSomething();
    instanceOfB.callback();
}
</code></pre>
"
"7698153","<p>The value is inside the rank. Does the rank object inside hand play any role (such as doubling value of the corresponding cards in the hand, you have to specify the game rules)? You just have to add up the rank values. I rewrote your code to leave out some unneccessary counters/vars. On the other side it is better to keep a list instead of an array if it can grow.</p>

<pre><code>import java.util.ArrayList;
import java.util.List;

public class Hand {
    private final List&lt;Card&gt; cards = new ArrayList&lt;Card&gt;();
    private Rank rank;
    private static final int MAX = 5;

    public void addCard(Card aCard) {
    if (cards.size() &lt; MAX) {
        cards.add(aCard);
    } else {
        System.out.println(""Cannot add any more cards as hand is full"");
    }
    }

    public void totalValue() {
    int totalValue = 0;
    for (Card card : cards) {
        totalValue += card.getRank().getValue();

    }

    System.out
        .println(""The total value of all the cards is: "" + totalValue);
    }

    @Override
    public String toString() {
    StringBuilder sb = new StringBuilder();
    for (Card card : cards) {
        sb.append('\n').append(card.toString());
    }

    return sb.toString();
</code></pre>

<p>}
}</p>
"
"7703527","<p>Thank you for all your help. I managed to figure out how to make it print without returning any nullexception errors. Basicly I simply converted the array into an arraylist as it was much more practical. Here is the final version of the Hand class.</p>

<blockquote>
<pre><code>import java.util.*;
public class Hand {

private ArrayList&lt;Card&gt; theCards = new ArrayList&lt;Card &gt;() ;
private static final int max = 5;

public void addCard( Card aCard )
{
     if (theCards.size() &lt; max)
             theCards.add(aCard);
     else
     {
         System.out.println(""Cannot add any more cards as hand is full"");
     }
}
public void totalValue() {
int totalValue = 0;
for (Card card : theCards) {
    totalValue += card.getRank().getValue();

    }
 System.out
    .println(""The total value of all the cards is: "" + totalValue);
}

   public void outputAllCards ( )
{
       System.out.println(""Outputting all card details\n========================"");
       for (Card card : theCards)
       {
           System.out.println(card.toString());
       }
        System.out.println(""========================"");
 } }
</code></pre>
</blockquote>

<p>Thank you guys for all your help. </p>

<p>Ps- I put in a println in order to print a message out when the totalValue method was called. I tried returning by turning the method into a string or int but this didn't work</p>
"
"9566590","<p>Why don't use Integer instead?</p>

<pre><code>String value = tvInput.getText().toString();
\\tvInput is my textView
int result = 0;
int input1 = 0;
int input2 = 0;
input=Integer.parseInt(value);
result = input1 + input2;
tvInput.setText(Integer.toString(result));
</code></pre>
"
"7772999","<p>I might be wrong, but my feeling is ""no in all cases"". Because your <code>string bar()</code> can be overridden by overloaded by other classes in the same package. <code>final</code> methods are good candidates, but it depends on JIT.</p>

<p>Another interesting note is <a href=""http://stackoverflow.com/questions/6651429/java-optimizations-hotspot-dalvik-optimization-of-final-method-returning-a-con/6651608#6651608"">here</a>.</p>
"
"9622332","<p>Yes, you can have 2 or more classes in single Java file.
The only condition is only one class will contain main method with signature(<code>public static void main(String[] args)</code>).
And only one public class will be there. And with that public class name you can save your file - the file name has to match the name of the public class.</p>
"
"7787141","<p>finalize() method is called  automatically during garbage collection.  System.gc() method forcibly calls garbage collector. but we will have to  destroy object before.
example:</p>

<pre><code>     public class Sample 
{
    public Sample()
    {
        System.out.println(""Object created"");
    }
    @Override
    public void finalize()
    {
        System.out.println(""Object Destroyed"");
    }
    public static void main(String args[])
    {
        Sample x=new Sample();
        Sample y=new Sample();

        x=null;
        y=null;

        System.gc();
    }
}
</code></pre>
"
"9684415","<p>Why you cannot remove second K from,</p>

<pre><code>public interface GenericRepository&lt;T extends Identifiable&lt;K&gt;, K&gt; {
</code></pre>

<p>So rather than having it as above, can we have it as </p>

<pre><code>public interface GenericRepository&lt;T extends Identifiable&lt;K&gt;&gt; {
</code></pre>

<p>By this we can do what you want to do.</p>
"
"7901585","<p>Use <code>ExecutorCompletionService</code> and <code>Future&lt;T&gt;</code>. Together they provide a threadpool based task framework that takes care of all your concerns.</p>

<blockquote>
  <p>How can I check whether or not there's a free thread in the array? I know that there is a function ThreadAlive, but it seems super inefficient to poll every single thread every time in my loop.</p>
</blockquote>

<p>You dont have to. The executor will do this for you in an (super)efficient manner.You just have to submit tasks to it and sit back.</p>

<blockquote>
  <p>If there is no free thread, how can I wait until one has finished?</p>
</blockquote>

<p>Again , you really dont have to. This is taken care of by executor.</p>

<blockquote>
  <p>The ordering is important. How can I preserve the ordering in which the threads output? As in, the order of the output needs to match the order of the input. How can I guarantee this synchronization?</p>
</blockquote>

<p>This is a concern. If you want the processed output ( of chunks, in your words ) to arrive in the same order as these chunks are present in the initial array, you have to address a few points :</p>

<p>Is it just the order of arrival of the results that matter , or is it that the tasks processing themselves have dependencies on the order ? If it is the former , it is much easily done, but if its the later , then you have problems. ( which I think are very hard things to start with considering your admission of being new to Java, so I would just recommend more learning on your part before attempting this. )</p>

<p>Assuming it is the former case , what you can do is this :  Submit the chunks to the executor in some order , and each submission will give you a handle ( called a <code>Future&lt;Result&gt;</code> ) to the task processed output. Store these handles in a ordered queue, and when you want the results , call the <code>get()</code> on these <code>Future</code>(s). Note that if some task in the middle of the order takes long time to complete , then the results of the following tasks will also be delayed.</p>

<blockquote>
  <p>How do I even pass the chunk to my thread? Can I just use the Runnable interface to do this?</p>
</blockquote>

<p>Create a Callable instance wrapping one chunk each into the instance. This represents your task that you will <code>submit()</code> to the <code>ExecutorService</code>.</p>
"
"9773777","<p>There's no way to determine a winner without checking the entire board state. If you want to perform the check at the end of each turn, iterate through each row, column, and both diagonals, checking for equality (ex: <code>board[0][0] == board[1][0] == board[2][0]</code> and so on). If you want to want to keep track of the board state while the tic-tac-toe game is being played, you can use <a href=""http://en.wikipedia.org/wiki/Dynamic_programming"" rel=""nofollow"">dynamic programming</a>, though it's major overkill. A dynamic approach would be useful if you're using abnormally large boards which would otherwise require a huge number of steps to find a winner. It's also worth noting that standard tic-tac-toe's are small enough that an efficient algorithm doesn't impact performance in the slightest.</p>
"
"9789345","<p>Double null-check in your init method:</p>

<pre><code>public init() {
    if (map==null) {
        synchronized(Helper.class) {
            if (map==null)
                 map = new HashMap();
        }
    }
}
</code></pre>

<p>Btw:</p>

<ol>
<li>HashMap is not Thread-safe.</li>
<li>put a synchronized on the instance method is not thread-safe because you access a static variable, ie, it is a class variable, not an instance variable</li>
</ol>
"
"7951355","<p>You need to make some changes in you Car class, it should be like this:</p>

<pre><code>class Car {
 //i'm adding only 2 properties you can add all the properties
 public int price;
 public int tax;
 public Car (String name, int price, int tax, int year)
 {
   //here you should add these 2 lines
   this.price=price;
   this.tax=tax;
 }
</code></pre>

<p>and you function will be:</p>

<pre><code>  public static void processCar(ArrayList&lt;Car&gt; cars){
   int totalAmount=0;
   for (int i=0; i&lt;cars.size(); i++){
      cars.get(i).computeCars ();
     totalAmount=+ cars.get(i).price;
  // in need to add the computed values of totalprice from the Car class?

   }
  System.out.println (totalAmount);

}
</code></pre>
"
"9842549","<p>Since the ArrayList class already wraps an array, you can extend it and override the <code>equals</code> and <code>hashCode</code> methods. Here is a sample:</p>

<pre><code>public MyArrayList extends ArrayList&lt;MyClass&gt; {

    @Override
    public boolean equals(Object o) {
        if (o instanceof MyArrayList) {
            //place your comparison logic here
            return true;
        }
        return false;
    }

    @Override
    public int hashCode() {
        //just a sample, you can place your own code
        return super.hashCode();
    }
}
</code></pre>

<p>UPDATE:</p>

<p>You can even override it for a generic use, just changing the code to:</p>

<pre><code>public MyArrayList&lt;T&gt; extends ArrayList&lt;T&gt; {
    //overrides the methods you need
    @Override
    public boolean equals(Object o) {
        if (o instanceof MyArrayList) {
            //place your comparison logic here
            return true;
        }
        return false;
    }
}
</code></pre>
"
"5564366","<pre><code>int count = 0;
for(char c: str.toCharArray()){
//use some method to check if its digit if yes increment the count
}
</code></pre>

<p><strong>Also see</strong></p>

<ul>
<li><a href=""http://download.oracle.com/javase/6/docs/api/java/lang/Character.html#isDigit%28char%29"" rel=""nofollow"">Javadoc</a></li>
</ul>
"
"5564416","<p>Something like:</p>

<pre><code>using System.Text.RegularExpressions;


            Regex r = new Regex( ""[0-9]"" );
            Console.WriteLine( ""Matches "" + r.Matches(""if string contains 2485083572085748 then"" ).Count );
</code></pre>
"
"5564708","<p>Another possibility.</p>

<p>Introduce a string variable before the try block:</p>

<pre><code>String msg = ""a is not an integer"";
try {
    // parse a
    msg = ""b is not an integer"";
    // parse b
} catch (...) { println(msg); }
</code></pre>
"
"5564765","<p>The only alternative to two try catch block would be setting a marker</p>

<pre><code> boolean aSet = false;
 try{
   int a = Integer.parseInt(aStr);
   aSet = true;
int b = Integer.parseInt(bStr);
 } catch (NumberFormatException ex) {
   if (aset) {....
</code></pre>
"
"8040043","<p>Try using</p>

<pre><code>DecimalFormat decimalFormat = new DecimalFormat(""#.#"");
</code></pre>

<p>as the constructor parameter instead.</p>
"
"5592189","<p>Even simpler:</p>

<pre><code>""test/"" + ""."" + ""/go""
</code></pre>
"
"8040044","<p>Try using the following code:</p>

<pre><code>DecimalFormat decimalFormat = new DecimalFormat(""0.0#"");
</code></pre>
"
"10136290","<p>split by <code>_&lt;</code> to get 2 elements, take the 2nd and split it by <code>_&gt;</code> to get 2 elements, take the 1st and split it by <code>_&gt;_&lt;</code> to get A, B, C</p>
"
"10205485","<p>No, there is no such possibility.
Allthough, one could imagine:</p>

<pre><code>public static boolean contains(String s, Collection&lt;String&gt;c) {
    for (String ss : c) {
       if (s.equalsIgnoreCase(ss)) return true;
    }
    return false;
}
</code></pre>
"
"10214643","<p>You can rethrow the cause without declaring it explicitly.</p>

<pre><code>public static Object executeViewComponent(String name, Component c,
        HttpServletRequest request) throw /* known exceptions */ {

    try {
        return c.getClass()
                .getMethod(c.getMetaData().getMethod(), HttpServletRequest.class)
                .invoke(c, request);
    } catch (InvocationTargetException e) {
        // rethrow any exception.
        Thread.currentThread().stop(e.getCause());
    }
}
</code></pre>
"
"8169740","<p>You mean how to get a <code>Graphics2D</code> object from with a constructor? That is not the way to do it, <code>Graphics2D</code> is an interface and the implementation classes are not in the API. However, you can get a graphics object from any component with </p>

<pre><code>(Graphics2D)component.getGraphics()
</code></pre>
"
"5663340","<pre><code>String rawXPath = ""//book[author= '"" + larrysName + ""']/title/text()"";
</code></pre>

<p>or</p>

<pre><code>String rawXPath = String.format(""//book[author= '%s']/title/text()"", larrysName);
</code></pre>

<p>where <code>larrysName</code> is a variable of type <code>String</code> coming from somewhere.</p>
"
"5666118","<pre><code>/(?&lt;=:).+(?=;)/
</code></pre>

<p>That will do it for you</p>

<p>Not sure how you implement regex in Java though.</p>

<p><a href=""http://www.regexr.com"" rel=""nofollow"">www.regexr.com</a> to help you text out your regex in real time.</p>
"
"5666146","<p>The expression </p>

<pre><code>"":(#.+);""
</code></pre>

<p>should do it</p>
"
"10278712","<p>Well, </p>

<p>I had simmilar problem and what I did was</p>

<pre><code>Object tmp = session.get(Object.class,ob.getId())
if(tmp!=null){
    session.evit(tmp); // or merge
}
session.saveOrUpdate(ob);
</code></pre>

<p>This worked for me. </p>

<p>It gets the transient object and evicts it or merges it.</p>

<p>Now use save or update method to save your new object.</p>
"
"5678033","<p>I think your question is similar to this one.</p>

<p><a href=""http://stackoverflow.com/questions/5417437/activation-of-maven-profile-based-on-multiple-properties/5418467#5418467"">Activation of maven profile based on multiple properties</a></p>

<p>As mentioned, you can activate a profile and set various properties as per your requirement and use command <code>mvn -Prun-it</code> to set property to true .</p>

<pre><code>&lt;project&gt;
  [...]

  [...]
  &lt;profiles&gt;
    &lt;profile&gt;
    &lt;id&gt;don't-run&lt;/id&gt;
&lt;properties&gt;
    &lt;run.it&gt;false&lt;/run.it&gt;
  &lt;/properties&gt;


      [...]
    &lt;/profile&gt;


    &lt;profile&gt;
    &lt;id&gt;run-it&lt;/id&gt;
&lt;properties&gt;
    &lt;run.it&gt;true&lt;/run.it&gt;
  &lt;/properties&gt;

      [...]
    &lt;/profile&gt;


  &lt;/profiles&gt;
  [...]
&lt;/project&gt;
</code></pre>
"
"10345353","<p>This is the code sample for random number(integer) generation. Being we know that <code>Math.random()</code> always returns double type value. So , I have converted it into int.  </p>

<pre><code>class RNumber{
    public static void main(String str[]){
        int countNum=100;   
        for(int i=0;i&lt;countNum;i++){
            System.out.println(""Random Unique values=""+(int)(Math.random()*100));
        }
    }
}
</code></pre>

<p>Hope, it will help you.</p>
"
"10350703","<p>Are you playing with multiple line regex?
Then you can compile a regex:</p>

<pre><code>Pattern.compile(""^([0-9]+).*"", Pattern.MULTILINE);
</code></pre>

<p><a href=""http://www.javamex.com/tutorials/regular_expressions/multiline.shtml"" rel=""nofollow"">http://www.javamex.com/tutorials/regular_expressions/multiline.shtml</a></p>
"
"8326633","<p>In your case I'd use single test case for all options. You need something like this:</p>

<pre><code>import org.junit.Test;
import org.junit.Assert;
import your.project.Menu;

public class MenuTest {
@Test
public void testCase() {
Menu menu = new Menu();
assertEquals(""1"",menu.runCase(""bar""));
assertEquals(""2"",menu.runCase(""foo""));
//etc
}
}
</code></pre>
"
"10397970","<p>Look for the literal and replace it with the special character:</p>

<pre><code>s = s.replace(""\\n"", ""\n"").replace(""\\t"", ""\t""); // etc
</code></pre>
"
"8365787","<p>If the class implements comparable, you could also do </p>

<pre><code>int compRes = a.compareTo(b);
if(compRes &lt; 0 || compRes &gt; 0)
    System.out.println(""not equal"");
else
    System.out.println(""equal);
</code></pre>

<p>doesn't use a <code>!</code>, though not particularly useful, or readable....</p>
"
"5740543","<p>Try to add methods (or something similar with more properties):</p>

<pre><code>public String asFirstnameLastname()
{
    return firstName + "" "" + lastName;
}

public String asLastNameFirstname()
{
   return lastName + "" "" + firstName;
}
</code></pre>

<p>toString() is also a good choice.</p>
"
"5743765","<p>When a class designer keeps a method protected then it is supposed to remain that way! If you violate encapsulation this way then that is setting very bad programming example for everyone and more trouble for consumers of class.</p>

<p>Having said that, in your case, what stops you from injecting your code in the overriden <code>act()</code> call? Which anyways does call your protected method <code>doAct()</code>?</p>

<p>Hope that helps.</p>
"
"10452288","<p>You need know if your page is a postback, <a href=""http://java.sun.com/javaee/javaserverfaces/1.2/docs/api/javax/faces/render/ResponseStateManager.html"" rel=""nofollow"">http://java.sun.com/javaee/javaserverfaces/1.2/docs/api/javax/faces/render/ResponseStateManager.html</a></p>

<p>Something like that</p>

<pre><code>ResponseStateManager rsm = FacesContext.getCurrentInstance().getRenderKit().getResponseStateManager();  

if (!rsm.isPostback(FacesContext.getCurrentInstance())) {  

    //do some stuff  
}  
</code></pre>
"
"8404668","<p>First of all, should be class in there</p>

<pre><code>public class MyRunnable extends Thread {
    public void run() {
        if(!isInterrupted()){
            operationOne();
            operationTwo();
            operationThree();
        }
    }
}
</code></pre>

<p>Would this work better?</p>
"
"10458275","<p>There's nothing stopping you from using String in your Classes as far as JPA is concerned. Or any other primitive type for that matter...</p>

<p>EDIT: You mean something like this hopefully</p>

<pre><code>@Entity
@Table(name=""PERSON"")
public class Person implements Serializable {
    ...
   private String email = null;
    ...
   @Column(name=""email"")
   public String getEmail() {
      return email;
   }
   public void setEmail(String email) {
      this.email=email;
   }
}
</code></pre>
"
"10479049","<p>In case that you want that the singelton member will remain null until first call,
you can sync only the creation.
for example</p>

<pre><code>getInstance() {
     if (singleton == null) {
         lock();
         if (singleton == null) {
               singleton = new Singleton();
         }
         unlock();
     }
     return singleton;
}
</code></pre>
"
"8480387","<pre><code>boolean answer = false;
String inputAnswer;

inputAnswer = input.getText();
if(inputAnswer == ""yes""){
   answer = true;
}
</code></pre>
"
"5782715","<p>You can wrap one block into another block:</p>

<pre><code>try{
  Connection c = ...
    try{
      statement = c.prepareStatement(...);
      try{
        rs = statement.execute(...);
      }finally{
        rs.close();
      }
    }finally{
      statement.close()
    }
  }finally{
    c.close();
  }
}catch(SQLException e){}
</code></pre>

<p>Use the lowermost catch-block for everything that might crop up</p>
"
"5793786","<p>You can use a funny way - a bit verbose, though - with assertions. With assertions turned on, there will be output and overhead, and with assertions turned off, no output and absolutely no overhead.</p>

<pre><code>public static void main(String[] args) {
    assert returnsTrue(new Runnable() {
        @Override
        public void run() {
            // your logging code
        }
    });
}

public static boolean returnsTrue(Runnable r) {
    r.run();
    return true;
}
</code></pre>

<p>The returnsTrue() function is needed here because I know no better way of making an expression return true, and assert requires a boolean.</p>
"
"10624440","<p>in My opinion,The Problem acurred due to Lack of <strong>Synchronization</strong> : </p>

<p><strong>NOTICE :</strong> if b=1 heppens before a=1, and a is volatile while b is not, then b=1 actually updates for all threads only after a=1 is finished (according to the quate's logic). </p>

<p>what heppend in your code is that b=1 was first updated for the main process only, then only when the volatile assignment finished, all the threads b's updated. I think that maybe assignments of volatile are not working as atomic operations (needs to point far, and somehow update rest of refernces to act like volatiles) so this would be my guess why one thread read b=0 instead of b=1.</p>

<p>Consider this change to the code, that shows my claim:</p>

<pre><code>public class Test {
    volatile static private int a;
    static private int b;
    private static Object lock = new Object();


    public static void main(String [] args) throws Exception {
        for (int i = 0; i &lt; 100; i++) {
            new Thread() {

                @Override
                public void run() {
                    int tt = b; // makes the jvm cache the value of b

                    while (true) {
                        synchronized (lock ) {
                            if (a!=0) break;
                         }
                    }

                    if (b == 0) {
                        System.out.println(""error"");
                    }
                }

            }.start();
        }
        b = 1;
        synchronized (lock ) {
        a = 1;
        }  
    }
}
</code></pre>
"
"8551537","<p>try:</p>

<pre><code>String str = ""Good^Evening"";
String[] temp;

  String sep= ""^"";
  /* given string will be split by the argument sep provided. */
  temp = str.split(sep);
  /* print substrings */
  for(int i =0; i &lt; temp.length ; i++)
  System.out.println(temp[i]);
</code></pre>
"
"5811662","<p>I dont know how do you store the name on the Person class but maybe  you could do something like this. Remember that i stores ith element on the people arraylist so each iteration you need to check for the name of the current person to check if you need to remove it</p>

<pre><code>public ArrayList&lt;Person&gt; people;

public void remove(String name){
        for(Person i : people){
            if (i.getName().equals(name)){
                people.remove(i);
            }
        }
    }
</code></pre>
"
"8555987","<p>ie; one can create:</p>

<pre><code>Point pt=new Point();  //point which has x and y as 0
</code></pre>

<p>OR</p>

<pre><code>Point pt=new Point(10,5);  //point which has x=10 and y=5
</code></pre>
"
"5818613","<p>You don't need to declare <code>foo</code> as returning <code>T</code>, just return base class (<code>AbstractBuilder</code>).</p>
"
"5819845","<p>(Best way) <code>string.equals("""")</code></p>

<p>But also,</p>

<pre><code>string.isEmpty()

string.equals(null)
</code></pre>
"
"5823633","<p>There's no widening in Java, in the sense that is implied by the question: ""the compiler widens i to a double"". If you define a variable as int, it will always be an int. Internally, the representation of some types may be wider than necessary (for instance, a short may be stored as 4-bytes rather than 2), but this is not affected/determined by the way the variable is used.</p>

<p>Specifically, in the loop describes in the question the compiler emits code that converts the double returned from <code>Math.sqrt()</code> into an integer.</p>

<p>You can think of it as if the compiler rewrites the code as follows:</p>

<pre><code>for(int i=3; (double) i &lt; (Math.sqrt(n)); i=i+2)
</code></pre>

<p>(thanks to the people who commented. Fixed the snippet)</p>
"
"10672426","<p><code>String s1 = ""abc"";</code> creates a new String and interns it.</p>

<p><code>String s2 = ""abc"";</code> will drag the same Object used for <code>s1</code> from the intern pool. The JVM does this to increase performance. It is quicker than creating a new String.</p>

<p>Calling <code>new String()</code> is redundant as it will return a new implicit String Object. <strong>Not</strong> retrieve it from the intern pool.</p>

<p>As Keyser says, <code>==</code> compares the Strings for Object equality, returning true if they are the same Object. When comparing String content you should use <code>.equals()</code></p>
"
"8601780","<p>As local variables are not initialized automatically, you have to explicitly initialize them.Only the member variables are initialized to null or the default value even if you do not explicitly initialize. If you keep  <code>String foo;</code> outside the method main() , you do not need to initialize. </p>
"
"10685210","<p>may be you should try in the root mode ： try with <code>sudo</code> + command</p>
"
"10695942","<p>To bootstrap you model data you merely have to have the model JSON rendered into a  tag. Paraphrasing from <a href=""http://ricostacruz.com/backbone-patterns/"" rel=""nofollow"">backbone-patters</a> link:</p>

<pre><code>&lt;script&gt;
  // app data, rendered on server
  var photosJSON = [
    { id: 2, name: ""My dog"", filename: ""IMG_0392.jpg"" },
    { id: 3, name: ""Our house"", filename: ""IMG_0393.jpg"" },
    { id: 4, name: ""My favorite food"", filename: ""IMG_0394.jpg"" },
    { id: 5, name: ""His bag"", filename: ""IMG_0394.jpg"" },
  ];
 &lt;/script&gt;      
 ...

 &lt;script&gt;
  var Photo = Backbone.Model.extend({
  // photo attributes (from above)
  });

  var PhotoCollection = Backbone.Collection.extend({
     model:Photo
  });

  // build collection model without AJAX call using
  // server rendered JSON above
  var photosCollection = new Photos(photosJSON);
&lt;/script&gt;
</code></pre>

<p>You can use whatever appropriate technology on the server to render the script with the JSON data.</p>
"
"8621845","<p>As far as overhead goes, you can test for yourself:</p>

<pre><code>public class Overhead {

public static void main(String[] args) {
    String testString = """";

    long startTimeTry = System.nanoTime();
    tryTrim(testString);
    long estimatedTimeTry = System.nanoTime() - startTimeTry;

    long startTimeIf = System.nanoTime();
    ifTrim(testString);
    long estimatedTimeIf = System.nanoTime() - startTimeIf;

    System.out.println(""Try time:"" + estimatedTimeTry);
    System.out.println(""If time:"" + estimatedTimeIf);

}

public static String tryTrim(String raw) {
    try {
        return raw.trim();
    } catch (Exception e) {
    }
    return null;
}

public static String ifTrim(String raw) {
    if (raw == null) {
        return null;
    }
    return raw.trim();
}
</code></pre>

<p>}</p>

<p>The numbers I got are:</p>

<pre><code>Try time:8102
If time:1956
</code></pre>

<p>As far as what style - it is a whole separate question. The if statement looks pretty natural, but the try looks  really strange for multiple reason:
- you caught Exception even though you are checking for NULL value, are you expecting something ""exceptional"" to happen (otherwise catch NullException)?
- you caught that Exception, are you going to report it or swallow?
etc. etc. etc. </p>

<p>Edit: See my comment for why this is an invalid test, but I really didn't want to leave this standing here. Just by swapping tryTrim and ifTrim, we suddenly get the following results (on my machine):</p>

<pre><code>Try time:2043
If time:6810
</code></pre>

<p>Instead of starting to explain all of this, just read <a href=""http://stackoverflow.com/questions/504103/how-do-i-write-a-correct-micro-benchmark-in-java"">this</a> for the beginning - Cliff also has some great slides about the whole topic, but I can't find the link at the moment.</p>

<p>Knowing how exception handling works in Hotspot, I'm fairly certain that in a correct test try/catch without an exception) would be the baseline performance (because there's no overhead whatsoever), but the JIT can play some tricks with Nullpointer checks followed by method invocations (no explicit check, but catch the hw exception if the object is null) in which case we'd get the same result. 
Also don't forget: We're talking about the difference of one easily predictable if which would be ONE CPU cycle! The trim call will cost a million times that.</p>
"
"10709546","<p>You are confused on this.<br>
<code>Overloading</code> refers to selecting one of the methods having the same name but different signature in the <em>same</em> class (not hierarchy).<br>
<code>Overriding</code> is chose among methods of the same name depending on the runtime type among those inherited by parent classes.<br>
If you have a base class and a derived class with a method of the same name and signature then this is <code>overriding</code> and at runtime the correct is determined.  </p>

<p>For <code>overloading</code> the compiler picks the correct version of method to use, among the available in the <em>same class</em>.<br>
No need to find a runtime type. Compiler can figure this out at compile time</p>
"
"8655382","<p>If you have a name field that is completly null just check, whether the string == null.</p>

<p>If you want to parse one string, which contains for example spaces jsut use:</p>

<pre><code>String string = ""a b c d"";
string.replaceAll("" "","""");
</code></pre>

<p>This can be used for every other char. Be aware that you have to use RegEx for that.</p>
"
"10749199","<p>You should be able to utilize the <a href=""http://commons.apache.org/lang/api-2.5/org/apache/commons/lang/StringUtils.html"" rel=""nofollow""><code>StringUtils</code></a> class and the <a href=""http://commons.apache.org/lang/api-2.5/org/apache/commons/lang/StringUtils.html#countMatches%28java.lang.String,%20java.lang.String%29"" rel=""nofollow""><code>countMatches()</code></a> method.</p>

<blockquote>
  <p>public static int countMatches(String str,
                                 String sub)</p>

<pre><code>Counts how many times the substring appears in the larger String.
</code></pre>
</blockquote>

<p>Try the following:</p>

<pre><code>int count = StringUtils.countMatches(""a.b.c.d"", ""."");
</code></pre>
"
"10752470","<p>Here the answer is that it accepts any kind of the Object type.</p>

<p>Hence you have to write below thing</p>

<pre><code>Set&lt;Class&lt;?&gt;&gt; val = new HashSet&lt;Class&lt;?&gt;&gt;();
</code></pre>

<p>here you can store any kind of <code>Object</code> in the <code>Set</code></p>
"
"5880222","<p>Use a <code>BufferedReader</code> to read the .txt file line by line. You can then append each line to your text area.</p>
"
"8718965","<p>Don't forget to increment the <code>while</code> loop or it has the potential to run indefinitely.</p>

<p>You can elect to use what is known as an <a href=""http://blogs.oracle.com/CoreJavaTechTips/entry/using_enhanced_for_loops_with"" rel=""nofollow"">""enhanced for-loop""</a>, which allows you to eschew the need to increment values over <code>CustomerList</code> entirely.  You have an object <code>customer</code>, so we can use that as follows:</p>

<pre><code>for (customer cus: CustomerList) {
     if(cus.returnFamilyName().equalsIgnoreCase(familyName)) {
        System.out.println(cus.returnFamilyName());
        return;
     }
}
</code></pre>

<p>If you elect to stick with your original code (which is fine), then observe the changes in your code below.</p>

<pre><code>while(index &lt; CustomerList.size()) {
    customer = CustomerList.get(index);
    if (customer.returnFamilyName().equalsIgnoreCase(familyName)) { 
        System.out.println(customer.returnFamilyName());
        break;
    } else {  
        index++;
    }
}
</code></pre>
"
"8719144","<pre><code>        string[] arr = new string[4]; // Initialize
        arr[0] = ""one"";               // Element 1
        arr[1] = ""two"";               // Element 2
        arr[2] = ""three"";             // Element 3
        arr[3] = ""four"";              // Element 4

        // Loop over strings
        foreach (string s in arr)
        {
            if (!String.IsNullOrEmpty(s))
            {
                Console.WriteLine(s);
            }
        }

        // do while
        var aValue = ""Not Empty"";
        do
        {
            //loop through elements here
            for (int a = 0; a &lt; arr.Length; a++)
            {
                aValue = arr[a];
            }

        } while (!String.IsNullOrEmpty(aValue));
</code></pre>
"
"10787874","<p>Check:</p>

<pre><code>String pat = ""hj10134532"";
if (""Assets/Topics/Update/filename_hj10134532.html.xls"".contains (pat))
    return pat;
</code></pre>

<p>if it contains (""hj10134532""), return it. There is no need to extract it.</p>
"
"8726530","<p>Ofcourse this is possible, You can simply use file io features of Java, following steps are required:-</p>

<ol>
<li>Create a File Object
2.Create an object of FileInputStream (though there are ways which use other Classes)</li>
<li>Wrap this object in a Buffer object or  simply inside a <code>java.util.Scanner</code>.</li>
<li>use specific write functions of the object created in previous step.</li>
</ol>

<p>Note that your object must implement <code>Serializable</code> interface. <a href=""http://www.mkyong.com/java/how-to-write-an-object-to-file-in-java/"" rel=""nofollow"">See following link</a>, </p>
"
"10815490","<p>Try this; </p>

<pre><code>    &lt;h:inputText id=""usMobilephone"" size=""20"" value=""#{rwUser.usMobilephone}"" required=""false""/&gt;
</code></pre>

<p>But assume that h:inputText default value of required attribute is false.</p>
"
"8738537","<p>I can't speak to the JDK team's design decisions, but a lot of the clumsy nature of Java generics comes from the fact that generics were a part of Java 5 (1.5 - whatever). There are plenty of methods in the JDK which suffer from the attempt to preserve backwards compatibility with the APIs which pre-dated 1.5.</p>

<p>As for the cumbersome <code>List&lt;String&gt; strings = new ArrayList&lt;String&gt;()</code> syntax, I wager it is to preserve the pedantic nature of the language. Declaration, not inference, is the Java marching order.</p>

<p><code>strings.toArray( new String[0] );</code>? The type cannot be inferred because the Array is itself considered a generic class (<code>Array&lt;String&gt;</code>, if it were exposed).</p>

<p>All in all, Java generics mostly exist to protect you from typing errors at compile-time. You can still shoot yourself in the foot at runtime with a bad declaration, and the syntax is cumbersome. As happens a lot, best practices for generics use are the best you can do.</p>
"
"5893456","<p>As far as I know Public/Private key pairs are like:</p>

<p>Use public key to a data to encrypt. Use private key to decrypt. i.e. public and private keys are inverse of each other.</p>

<p>Between, a communication channel, one end (source) shares the public key with the other end (dest). Now source encrypts its data using private key and send it to the dest. Dest applies the shared public key by the source to decrypt it.</p>

<p>What here might be going: The private keys of .NET and JAVA are different, but the corresponding public keys must be the inverse of respective private keys.</p>

<p>These keys may take hostname/ip/or anything (I'm not sure) into account to generate a public/private key pair.<br>
<code>The public key encrytion needs two keys which are inverse of each other but not necessarily the encrypted data be same</code></p>

<p>Any comments/suggestions?</p>
"
"5899203","<p>You can create a helper method like follows:</p>

<pre><code>public OutputStream convert(ByteArrayOutputStream arrayOutputStreamParam){
        return arrayOutputStreamParam;
    }
</code></pre>
"
"10895686","<p>Aussuming you are using jmockit, nothing easiert than this:</p>

<pre><code>public void testCase(@Mocked(""methodToBeMocked"") final ClassBoBeMocked mockedInstance) {
           new Expectations() {{
                   mockedInstance.methodToBeMocked(someParameter); returns(whateverYouLikeItToReturn);
           }}

   mockedInstance.callSomemethod();
}
</code></pre>
"
"10917812","<p>You can always check by looking at the source that ships with your JDK.</p>

<p>My <code>java.lang.Object</code> shows <code>hashCode</code> as a native method.  Here are the javadocs.</p>

<pre><code>/**
 * Returns a hash code value for the object. This method is 
 * supported for the benefit of hashtables such as those provided by 
 * &lt;code&gt;java.util.Hashtable&lt;/code&gt;. 
 * &lt;p&gt;
 * The general contract of &lt;code&gt;hashCode&lt;/code&gt; is: 
 * &lt;ul&gt;
 * &lt;li&gt;Whenever it is invoked on the same object more than once during 
 *     an execution of a Java application, the &lt;tt&gt;hashCode&lt;/tt&gt; method 
 *     must consistently return the same integer, provided no information 
 *     used in &lt;tt&gt;equals&lt;/tt&gt; comparisons on the object is modified.
 *     This integer need not remain consistent from one execution of an
 *     application to another execution of the same application. 
 * &lt;li&gt;If two objects are equal according to the &lt;tt&gt;equals(Object)&lt;/tt&gt;
 *     method, then calling the &lt;code&gt;hashCode&lt;/code&gt; method on each of 
 *     the two objects must produce the same integer result. 
 * &lt;li&gt;It is &lt;em&gt;not&lt;/em&gt; required that if two objects are unequal 
 *     according to the {@link java.lang.Object#equals(java.lang.Object)} 
 *     method, then calling the &lt;tt&gt;hashCode&lt;/tt&gt; method on each of the 
 *     two objects must produce distinct integer results.  However, the 
 *     programmer should be aware that producing distinct integer results 
 *     for unequal objects may improve the performance of hashtables.
 * &lt;/ul&gt;
 * &lt;p&gt;
 * As much as is reasonably practical, the hashCode method defined by 
 * class &lt;tt&gt;Object&lt;/tt&gt; does return distinct integers for distinct 
 * objects. (This is typically implemented by converting the internal 
 * address of the object into an integer, but this implementation 
 * technique is not required by the 
 * Java&lt;font size=""-2""&gt;&lt;sup&gt;TM&lt;/sup&gt;&lt;/font&gt; programming language.)
 *
 * @return  a hash code value for this object.
 * @see     java.lang.Object#equals(java.lang.Object)
 * @see     java.util.Hashtable
 */
public native int hashCode();
</code></pre>
"
"10918959","<p>A very good way of doing this apart from using Java 7 is using enums. 
Declare enum as shown below</p>

<p>The above enum has a collection of constants whose values are set to the strings that you expect would be returned from the database. As you can use enums in switch cases the remaining code becomes easy</p>

<pre><code>enum MyEnum
{
    val1(""value &lt; 4""),val2(""4&lt;value&lt;6"");
    private String value;

    private MyEnum(String value)
    {
        this.value = value;
    }
}


public static void chooseStrategy(MyEnum enumVal)
{   
    int value = getValue();
    switch(enumVal)
    {
        case val1:
        if(value &gt; 2){}
        break;
        case val2:
        if(4 &lt; value &amp;&amp; value &lt; 6) {}
        break;
        default:
    }
}

public static void main(String[] args)
{
    String str = ""4&lt;value&lt;6"";
    chooseStrategy(MyEnum.valueOf(str));
}
</code></pre>

<p>All you have to do is pass your string to the enum.valueof method and it will return the appropiate enum which is put in a switch case block to perform conditional operation . In the above code you can pass any string in place of what is passed in this example</p>
"
"5912258","<p>this is the equivalent of </p>

<pre><code> (new StringBuilder((new StringBuilder((new StringBuilder(""String 1"")).append(text).toString())).append(""string 2 "").toString()).append(""string 3"").toString();
</code></pre>

<p>that's 3 stringbuilders and 6 strings.  The way to optimize this is:</p>

<pre><code>    StringBuilder sb = new StringBuilder(""string 1"");
    sb.append(test);
    sb.append("" string 2 "");
    sb.append(""string 3"");
    return sb.toString();
</code></pre>
"
"8837313","<p>You would not be able to refer to Status in <code>main()</code> because, while Status is <code>public</code>, it is not <code>static</code>.  You would need to create an instance of your enclosing class and then use it to create an instance of the enum:</p>

<pre><code>MyEnclosingClass clz = new MyEnclosingClass();
Status status = clz.new Status();
</code></pre>

<p>This should resolve the error I believe you are probably getting.</p>
"
"5936622","<p>Maybe something like this?</p>

<pre><code>string input = ""ABCD"";
string result = """";
for (int i = input.length-1; i &gt;= 0; i--)
{
  result = result + input[i];
}
</code></pre>
"
"10990970","<p>Here is a simple recursive solution in Java but you should avoid using recursion if possible. </p>

<pre><code>public class Knapsack {

    public static void main(String[] args) {
        int[] arr = new int[]{11, 8, 7, 6, 5};
        find(arr,20);
    }

    public static boolean find( int[] arr,int total){
        return find(arr,0,total);
    }

    private static boolean find( int[] arr,int start,  int total){
        if (start == arr.length){
            return false;
        }
        int curr = arr[start];
        if (curr == total){
            System.out.println(curr);
            return true;
        }else if (curr &gt; total || !find(arr,start+1,total-curr)){
            return find(arr,start+1,total);
        }
        System.out.println(curr);
        return true;
    }
}
</code></pre>
"
"11003991","<pre><code>String yourString = ""abcdef""
String newString = yourString.replaceAll(""c"" , ""x"");
System.out.println(""This is the replaced String: "" + newString);
</code></pre>

<hr>

<p>This is the replaced String: abxdef</p>
"
"11003996","<p>How about:</p>

<pre><code>String crap = ""crap"";
String replaced = crap.replace(crap.charAt(index), newchar);
</code></pre>

<p>but this will replace all instances of that character</p>
"
"11004029","<p>Try the <code>String.replace(Char oldChar, Char newChar)</code> method or use a <code>StringBuilder</code></p>
"
"11011895","<p>I guess the following also works (at least for MySQL):</p>

<pre><code>SELECT login FROM usertable WHERE lastname=""O'Neil"";
</code></pre>
"
"8890021","<p>Use </p>

<pre><code>HttpSession session = request.getSession (true);
if (session.isNew() == false) {
session.invalidate();
session = request.getSession(true);
} 
</code></pre>

<p>The first line of code generates a new session object, or retrieves an existing one. The second line sees if the session is new by checking the value from isNew(). A true tells you the session was just created; a false means this user already had a session and you need to invalidate it. One possible reason the user would have an old session is that he or she has two accounts and logged in on one, then tried to log in on the other. </p>

<p>After that, add email to the session attribute to identify the user</p>

<pre><code>session.setAttribute(""email"",email)
</code></pre>
"
"11027422","<p><code>Infinite!!</code> There is no such restriction.</p>
"
"11047899","<p>firstly ,you should create a cookie,and then add to response</p>

<pre><code>Cookie cookie = new Cookie(name,value);
response.addCookie(cookie);
</code></pre>
"
"11052279","<p>I would use the excellent google's Guava library to do it. String.split can cause many troubles.</p>

<pre><code>String numbers=""1,2,3,4,5,6,7"";
Iterable&lt;String&gt; splitIterator = Splitter.on(',').split(numbers);
List&lt;String&gt; list= Lists.newArrayList(splitIterator );
</code></pre>
"
"11064188","<p>1) Using try{..}catch(Exception e) {..} makes your code more compact and able to manage the exception in a single place.
You can also concatenate the catch blocks in order to manage several type of exceptions:</p>

<pre><code>try {
    ..
} catch(FileNotFoundException fe) {
    //manage here this kind of exception
} catch(NullPointerException ne) {
    //you missed a check on nulls! But the file has been found...
} catch(Exception e) {
    //file has been found and no nulls are left...
}
</code></pre>

<p>Note that the order of blocks is relevant: in the example, if there's both a FileNotFoundException and a NullPointerException, you will be redirected in the FileNotFoundException catch block.</p>

<p>2) try-catch block obviously have an impact on performances of your code, so I think you need to place only the code that:
- is not under your control (e.g. third-party libraries, etc.)
- uses un-reliable media (e.g. socket connections, file IO, etc.)
- take advantage of exception handling to signal specific behavior (e.g. GoogleAppEngine timeout exceptions, etc.)</p>
"
"11081365","<p>Don't do that. Write your own code  which wraps around the original scanner and use that. To update internal packages, there is an <code>endorsed</code> directory property which you can provide at runtime.</p>
"
"5993338","<pre><code>public interface IntSet{
    bool isElem(int val);
}
</code></pre>
"
"11145308","<p>I think the problem is initially for i=0 case it boolean returns false and it is executing the<br>
else part , try incrementing the i value in both if or else.</p>

<pre><code>if(even) {
            sum += fib(i);
i++;
        }
        else {
      continue;
  i++;
      }
</code></pre>
"
"6002784","<p>Cyclometric complexity is a measure of the number of paths through your code. Your function is composed almost exclusively of <code>if</code> statements.</p>

<p>You can combine two or more <code>if</code> statements with <code>or</code>:</p>

<pre><code>if(a)
  do_something();
if(b)
  do_something();
</code></pre>

<p>Should be replaced by:</p>

<pre><code>if(a || b)
  do_something();
</code></pre>
"
"6002880","<p>Am I missing something?  I don't see any type of caching within your code.  Also, you should reconsider the way  you are using locking.  You should only lock the list as a whole to limit the number of locks and also prevents a race condition as shown below.</p>

<pre><code>thread1: Read Element X
thread2: Removes X + 1
thread1: Read Element X + 1 and fails since the element is no long valid.
thread1: Is unable to finish going through the list since it has been removed.
</code></pre>

<p>You can do partitioning the list but you have to handle the case where you are reading the last element in a partition and removing the first element in the next partition.</p>

<p>You could also make only certain functions need to lock/unlock depending on what type of operation is occurring (i.e. it's a read operation and there is not currently a write operation is occurring).</p>
"
"11166285","<p>Collect your bullets as you create them, and then iterate the collection to update them.  For instance, something like:</p>

<pre><code>public abstract class Projectile {
    private static final Collection&lt;Projectile&gt; activeProjectiles = new ArrayList&lt;Projectile&gt;();

    static {
         //update the position of any in-flight projectile approximately once per second
         Runnable updater = new Runnable() {
             public void run() {
                 while (true) {
                     synchronized(activeProjectiles) {
                         for (Projectile projectile : new ArrayList&lt;Projectile&gt;(activeProjectiles)) {
                             projectile.travel();
                         }
                     }
                     try {
                         Thread.sleep(1000);
                     }
                     catch (Throwable ignored) {}
                 }
             }
         };
         new Thread(updater).start();
    }

    protected int x;
    protected int transitTime;

    public abstract int getMuzzleVelocity();

    public Projectile() {
        this.x = 0;
        synchronized(activeProjectiles) {
            activeProjectiles.add(this);
        }
    }

    public int getFriction() {
        return 0;
    }

    private void travel() {
        this.x += this.getMuzzleVelocity() + (this.getFriction() * this.transitTime);
        this.transitTime++;
        if (this.transitTime * this.getFriction() &gt;= this.getMuzzleVelocity()) {
            //this projectile is done
            synchronized(activeProjectiles) {
                activeProjectiles.remove(this);
            }
        }

    }

}

public class Bullet extends Projectile {
    public Bullet() { 
        super();
    } 

    @Override
    public int getMuzzleVelocity() {
         return 600;
    }

    @Override
    public int getFriction() {
        return 25;
    }
}
</code></pre>
"
"6002960","<p>There does appear to a performance problem. I think you should compare you performance with the built-in implementation and with a single threaded version.</p>

<pre><code>for (int r = 0; r &lt; 5; r++) {
    long start = System.nanoTime();
    ConcurrentLinkedQueue&lt;Integer&gt; list = new ConcurrentLinkedQueue&lt;Integer&gt;();
    for (int i = 0; i &lt; 500000; i++)
        list.add(i);
    long time = System.nanoTime() - start;
    System.out.printf(""Adding 500K %,d took ms%n"", time / 1000 / 1000);
}
</code></pre>

<p>prints</p>

<pre><code>Adding 500K 192 took ms
Adding 500K 154 took ms
Adding 500K 95 took ms
Adding 500K 211 took ms
Adding 500K 424 took ms
</code></pre>
"
"9060491","<p>Why dont you consider adding a continue statement inside the for loop itself like this</p>

<pre><code>for (int p=0; p&lt;= myArray.length ; p++)
{ 
     if( myArray[p]==0){
     continue;
     }
//execute other methods.. 
}
</code></pre>
"
"6027084","<pre><code>PdfReader document = new PdfReader(new FileInputStream(new File(""filename"")));  
int noPages = document.getNumberOfPages(); 
</code></pre>
"
"11180294","<p>You can apply <strong>Singleton Pattern</strong></p>

<p><code>Following are the ways to do it:</code></p>

<p><strong>1. Private Constructor and Synchronized method</strong></p>

<pre><code>public class MyClass{

   private static MyClass unique_instance;

   private MyClass(){

         // Initialize the state of the object here
    }

   public static synchronized MyClass getInstance(){

          if (unique_instance == null){

                 unique_instance = new MyClass();

           }

          return unique_instance;

      }

    }
</code></pre>

<p><strong>2. Private Constructor and initializing the static instance during declaration</strong></p>

<pre><code>public class MyClass{

   private static MyClass unique_instance = new MyClass() ;

   private MyClass(){

         // Initialize the state of the object here
    }

   public static MyClass getInstance(){


          return unique_instance;

      }

    }
</code></pre>

<p><strong>3. Double check Locking</strong></p>

<pre><code>public class MyClass{

   private static MyClass unique_instance;

   private MyClass(){

         // Initialize the state of the object here
    }

   public static MyClass getInstance(){

          if (unique_instance == null)

                      synchronized(this){

          if (unique_instance == null){

                 unique_instance = new MyClass();
               }
           }

          return unique_instance;

      }

    }
</code></pre>

<p><code>You can also implement a class with</code> <strong>static methods and static variables to apply Singleton pattern, but its not recommended</strong>.</p>
"
"9067827","<p>I take it this is an extension to your earlier post so</p>

<pre><code>if (resource1.hasProperty(model.createProperty(""http://www.w3.org/1999/02/22-rdf-syntax-ns#"", ""type""), model.createResource(""http://typeUri"")) &amp;&amp; resource2.hasProperty(model.createProperty(""http://www.w3.org/1999/02/22-rdf-syntax-ns#"", ""type""), model.createResource(""http://typeUri""))) {
    // both resources are the same type
}
</code></pre>
"
"9083625","<p>From <a href=""http://docs.oracle.com/javase/1.4.2/docs/api/java/sql/ResultSetMetaData.html"" rel=""nofollow"">http://docs.oracle.com/javase/1.4.2/docs/api/java/sql/ResultSetMetaData.html</a></p>

<pre><code> ResultSet rs = stmt.executeQuery(""SELECT a, b, c FROM TABLE2"");
 ResultSetMetaData rsmd = rs.getMetaData();
 int numberOfColumns = rsmd.getColumnCount();
</code></pre>

<p>A ResultSet contains metadata which gives the number of rows.</p>
"
"9089415","<pre><code>Derived.foo();
</code></pre>

<p>This <em>will</em> go to <code>foo</code> defined in <code>Derived</code>, if one is defined there:</p>

<pre><code>class Base {
    static void foo() {
    System.out.println(""Base"");
    }
}

class Der extends Base {
    static void foo() {
    System.out.println(""Der"");
    }
}

class Check {
    public static void main(String[] args) {
    Base.foo();
    Der.foo();
    }
}
</code></pre>

<p>When I run it:</p>

<pre><code>javac -g Check.java &amp;&amp; java Check 
Base 
Der
</code></pre>

<p>So what is your question? If you to require that each derived class <code>implement foo</code> that is not possible to enforce in Java. </p>
"
"11201955","<p>Well, what I found is as follows,</p>

<p><strong>Return actually returns a value and its gets copied to  <code>String a=obj.go();</code>, before execution goes to Finally</strong>.</p>

<p>Lets verify it by following experiments.</p>

<pre><code>public class Test2 {

   public static void main(String[] args) {
     Test2 obj=new Test2();
     String a=obj.go();

     System.out.print(a);
   } 


   public String go() {
     String q=""hii"";
     try {
        return q;
     }
     finally {
        q=""hello"";
        System.out.println(""finally value of q is ""+q);
     }
}
</code></pre>

<p><strong>the output of the program is</strong></p>

<p><strong>finally value of q is hello</strong></p>

<p><strong>hii</strong></p>

<p>and if we take StringBuffer instead of String as follows,</p>

<pre><code>public class Test2 {

    public static void main(String[] args) {
        // TODO Auto-generated method stub

        Test2 obj=new Test2();
        StringBuffer a=obj.go();

        System.out.print(a);
    }


    public  StringBuffer go(){
        StringBuffer q=new StringBuffer(""hii"");
        try{

            return q;
        }
        finally{

            q.replace(0, q.length(), ""hello"");
            System.out.println(""finally value of q is ""+q);
            /*return q1;*/

        }

    }
}
</code></pre>

<p><strong>The output comesout to be,</strong></p>

<p><strong>finally value of q is hello</strong></p>

<p><strong>hello</strong></p>

<p>and finally if we take int instead of String as follows,</p>

<pre><code>public class Test2 {

    public static void main(String[] args) {
        // TODO Auto-generated method stub

        Test2 obj=new Test2();
        int a=obj.go();

        System.out.print(a);
    }


    public  int go(){
        int q=1;
        try{

            return q;
        }
        finally{

            q=2;
            System.out.println(""finally value of q is ""+q);
            /*return q1;*/

        }

    }
}
</code></pre>

<p><strong>the output is</strong> </p>

<p><strong>finally value of q is 2</strong></p>

<p><strong>1</strong></p>

<pre><code>                              **Ananlysis**
</code></pre>

<p>1.In first case, return copied adress of String in variable <strong>a</strong>, then excecution goes to Finally where String is changed. But since in case of Strings, we can't manipulate any String a new String is constructed. So in variable <strong>a</strong> address of original string is saved, which gets printed.</p>

<p>2.In second case, return copied address of StringBuffer in variable <strong>a</strong>, and in finally this StringBuffer object is manipulated, rather creating new one. so the value which was stored in variable <strong>a</strong> also gets manipulated, that's seen in print statement.</p>

<p>3.In third case,  value of int is copied in variable <strong>a</strong>, before execution goes to finally. and thus <strong>a</strong> gets value of 1. and then in finally we changed value of <strong>q</strong> which doesn't anyway change value of <strong>a</strong>.</p>
"
"9115165","<pre><code>public class Main {
                     int x=25;
                     int y =25;
                   //Go to next class second
                   aMethod(){
                    Second s = new Second();
                    s.manipulateValues(x,y);
                    }
                  }

public class Second {
                     //inherit values of x and y
                     //manipulate values 
                     //Go to next class third
                       public void manipulateValues(int x, int y){
                           //manipulate here  
                           Third t = new Third ();
                           s.manipulateHereToo(x,y);
                       }
                    }

public class Third {
                     //inherit values of x and y from second class
                     //manipulate values 
                      public void manipulateHereToo(int x, int y){
                             //manipulate again
                       }
                   }
</code></pre>

<p>So you are not obligated to use inheritance.</p>
"
"11249401","<p>You can use something like this to get the default system appearance for each platform i.e. looks like a mac on mac devices, looks like standard window in windows</p>

<pre><code> UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
</code></pre>

<p>You will need to surround this in try/catch block. See <a href=""http://docs.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html"" rel=""nofollow"">tutorial</a> or <a href=""http://docs.oracle.com/javase/6/docs/api/javax/swing/UIManager.html"" rel=""nofollow"">api</a> for further info</p>
"
"6083839","<p>You can use the method <code>indexOf</code> from <a href=""http://commons.apache.org/lang/api-2.5/org/apache/commons/lang/ArrayUtils.html"" rel=""nofollow"">Apache Commons ArrayUtils</a> class.</p>

<p><strong>Usage:</strong></p>

<pre><code>String[] array1 = new String[10];
array1[0] = ""Hello"";

String[] array2 = new String[10];
array2[0] = ""Hello my world"";
array2[1] = ""Hi buddy"";

int index = ArrayUtils.indexOf(array2, array1[0]);
</code></pre>
"
"11297853","<p>TrueZip works best in this case. (Atleast in my case)</p>

<p>The self extracting zip is of the following format code1 header1 file1 (while a normal zip is of the format header1 file1)...The code tells on how to extract the zip</p>

<p>Though the Truezip extracting utility complains about the extra bytes and throws an exception </p>

<p>Here is the code</p>

<pre><code> private void Extract(String src, String dst, String incPath) {
    TFile srcFile = new TFile(src, incPath);
    TFile dstFile = new TFile(dst);
    try {
        TFile.cp_rp(srcFile, dstFile, TArchiveDetector.NULL);
        } 
    catch (IOException e) {
       //Handle Exception
        }
}
</code></pre>

<p>You can call this method like Extract(new String(""C:\2006Production.exe""), new String(""c:\"") , """");</p>

<p>The file is extracted in the c drive...you can perform your own operation on your file. I hope this helps.</p>

<p>Thanks.</p>
"
"11349038","<p>With the explanation of == and .equals well described above, here's a two examples of a one liner that does the comparison you want. </p>

<pre><code>if ( Pattern.matches(""\\s*[yY]\\s*[eE]\\s*[sS]\\s*"", input) ) {
  // do something
}


if ( input.replaceAll(""\\s"", """").equalsIgnoreCase(""yes"") ) {
  // do something
}
</code></pre>
"
"11354893","<p>Yet another solution (simple but useful):</p>

<pre><code># watch df
</code></pre>

<p>Then you can run this to go deeper:</p>

<pre><code># du -s /your/path/
</code></pre>
"
"9235536","<p>This code should handle most inputs, except IP addresses where all groups of digits are in three's (ex: 255.255.255.255 is valid, but not 255.1.255.255). It also doesn't support scientific notation</p>

<p>It will work with most variants of separators ("","", ""."" or space). If more than one separator is detected, the first is assumed to be the thousands separator, with additional checks (validity etc.)</p>

<p><strong>Edit:</strong> prevDigit is used for checking that the number uses thousand separators correctly. If there are more than one group of thousands, all but the first one must be in groups of 3. I modified the code to make it clearer so that ""3"" is not a magic number but a constant.</p>

<p><strong>Edit 2:</strong> I don't mind the down votes much, but can someone explain what the problem is?</p>

<pre><code>/* A number using thousand separator must have
   groups of 3 digits, except the first one.
   Numbers following the decimal separator can
   of course be unlimited. */
private final static int GROUP_SIZE=3;

public static boolean isNumber(String input) {
    boolean inThousandSep = false;
    boolean inDecimalSep = false;
    boolean endsWithDigit = false;
    char thousandSep = '\0';
    int prevDigits = 0;

    for(int i=0; i &lt; input.length(); i++) {
        char c = input.charAt(i);

        switch(c) {
            case ',':
            case '.':
            case ' ':
                endsWithDigit = false;
                if(inDecimalSep)
                    return false;
                else if(inThousandSep) {
                    if(c != thousandSep)
                        inDecimalSep = true;
                    if(prevDigits != GROUP_SIZE)
                        return false; // Invalid use of separator
                }
                else {
                    if(prevDigits &gt; GROUP_SIZE || prevDigits == 0)
                        return false;
                    thousandSep = c;
                    inThousandSep = true;
                }
                prevDigits = 0;
                break;

            default:
                if(Character.isDigit(c)) {
                    prevDigits++;
                    endsWithDigit = true;
                }
                else {
                    return false;
                }
        }
    }
    return endsWithDigit;
}
</code></pre>

<p>Test code:</p>

<pre><code>public static void main(String[] args) {
    System.out.println(isNumber(""100""));               // true
    System.out.println(isNumber(""100.00""));            // true
    System.out.println(isNumber(""1,5""));               // true
    System.out.println(isNumber(""1,000,000.00.""));     // false
    System.out.println(isNumber(""100,00,2""));          // false
    System.out.println(isNumber(""123.123.23.123""));    // false
    System.out.println(isNumber(""123.123.123.123""));   // true       
}
</code></pre>
"
"6151557","<p>best u move the init into the enum, just like:</p>

<pre><code>public enum Example{ 
  value1(1), 
  value2(2), 
  value3(66);

  private final int internalValue;

  Example(int value){ 
       this.internalValue = value; 
  }

  public int getInternalValue(){ 
       return this.internalValue; 
  }
}
</code></pre>

<p>Although this is really simple example, you can add any code to the constructor later on and have more complex decisions based on the actual object itself.</p>
"
"9291857","<p>Strings are actually immutable. If you have two strings that have the same content then they will be the same Object due to <a href=""http://en.wikipedia.org/wiki/String_interning"" rel=""nofollow"">String interning</a>.</p>

<p>So you should be able to do:</p>

<p><code>parameter.equals(string)</code></p>

<p>For your search, if it makes it easier you could do:</p>

<p><code>Arrays.asList(TEXT_ARRAY).contains(parameter)</code></p>

<p>That would work exactly the same as your loop.</p>
"
"6171425","<p>I do not think you've understood the concept of enumerations in Java; it is just like any other type. Consider it as a class if you must, for all enums in Java extend <code>java.lang.Enum</code>. You can therefore compose arrays of enums (or atleast their values/constants, if you that is what you meant). Take a look at the following example:</p>

<pre><code>package com.example;

public class Enumerations {

    public enum enumA { A1, A2, A3 };
    public enum enumB { B1, B2, B3 };
    public enum enumC { C1, C2, C3 };

    private void test() {
        Enumerations.enumA[] enumerations = new Enumerations.enumA[3];
        enumerations[0] = enumA.A1;
        enumerations[1] = enumA.A2;
        enumerations[2] = enumA.A3;
    }
}
</code></pre>

<p>You cannot mix enums with other types in the array, if that is what you meant. In other words, you cannot create a multi-dimensonal array with different types: the type of the array is the same as the one specified in the declaration; that way an array declared to contain enums cannot contain strings, even if it is multi-dimensional. The following snippet therefore is illegal:</p>

<pre><code>package com.example;

public class Enumerations {

    public enum enumA { A1, A2, A3 };
    public enum enumB { B1, B2, B3 };
    public enum enumC { C1, C2, C3 };

    private void test() {
        Enumerations.enumA[][] enumerations = new Enumerations.enumA[3][];
        enumerations[0][1] = enumA.A1; //legal
        enumerations[0][2] = enumB.B1; //illegal since enumB is a different type
    }
</code></pre>

<p>As far as your original question is concerned, using the EnumMap where the keys are enums is done in the following manner:</p>

<pre><code>private void createAndStoreEnum() {
        EnumMap&lt;Enumerations.enumA, String&gt; aMap = new EnumMap&lt;Enumerations.enumA, String&gt;(enumA.class);
        aMap.put(enumA.A1, ""Example"");
}
</code></pre>

<p>The EnumMap constructor used, requires the type (of the enum used as keys) to be passed in as the argument. It can then be used like any other map, with the standard put and get semantics.</p>
"
"6176259","<p>I think we can use the following code to compare Long Value,</p>

<pre><code>Collections.sort(longValueList,new LongComparator());
</code></pre>

<h2>LongComparator.java</h2>

<pre><code>public class LongComparator implements Comparator {



    @Override
    public int compare(Object obj1, Object obj2) {


        return (obj1.toString()).compareTo(obj2.toString());
    }

}
</code></pre>

<p>Thanks
Deepak</p>
"
"9308425","<p>If you are using <code>eclispe</code> IDE, you can do it in easy manner.</p>

<p><strong>Steps:</strong></p>

<ol>
<li>select the variable</li>
<li>right click on it</li>
<li>click on refactor</li>
<li>click on rename</li>
</ol>

<p>even in <code>netbeans</code> you can follow same steps.
The IDE finds the reference and usages and replace it all.</p>
"
"9331395","<p>If pathElements is your custom class than you can define how it should be iterated by implementing Iterable, otherwise you can just simply encapsulate pathElements and override Iterable implementation methods.</p>

<p>You can also make something like this and override Iterable interface methods:</p>

<pre><code>public class pathElementsReversed extends pathElements {}
</code></pre>

<p>And you can use for each like this:</p>

<pre><code>foreach (pathElement p : (pathElementsReversed) pathElements) {...}
</code></pre>
"
"11568981","<p>Use the <code>.contains()</code> method that tells you whether the value exists in the list : <a href=""http://docs.oracle.com/javase/1.4.2/docs/api/java/util/List.html#contains%28java.lang.Object%29"" rel=""nofollow"">http://docs.oracle.com/javase/1.4.2/docs/api/java/util/List.html#contains%28java.lang.Object%29</a></p>

<pre><code>myList.contains(1);
</code></pre>

<p>Note: it uses the <code>.equals()</code> method of the contained object (it might be useful in your future developments).</p>

<p>HIH
M.</p>
"
"11569316","<p>To my astonishment, all the solutions proposed so far are just plain wrong, or contain a subtle bug, or could be more efficient.</p>

<p>Here's a solution that works fast whatever the kind of list is, and even if the list contains null elements:</p>

<pre><code>public boolean listIsFilledWith(List&lt;Integer&gt; integers, int i) {
    Integer value = i; // transform the int into an Integer only once
    for (Integer element : integers) { // iterate using an iterator, to avoid performance problems with linked lists
        if (!value.equals(element)) { // value is not null, but element can be. Don't compare objects with == or !=
            return false; // return early
        }
    }
    return true;
}
</code></pre>
"
"6233756","<p>A polymorphic and OOP approach would be to place the method makeItClimbToATree on the Animal interface:</p>

<pre><code>public interface Animal{    
    public void talk(); 
    public void makeItClimbToATree();  
}
</code></pre>

<p>Then the implementors of Animal would provide the behavior for the method, which for all other than Cat could be to throw an exception. This is polymorphic because you operate on different implementations of Animal through a single method. </p>

<p>The function which uses the instanceOf operator is considered ""bad"" OOP because it requires knowledge of all the implementation types to determine the behavior of the method.</p>
"
"6238287","<p>If you are sure there is no side effect, simply use threading. Of course you can use threading when there IS side effect. But in that case you will need to use some locking and synchronization mechanisms.</p>

<p>A very simple thread sample from Bruce Eckel's excellent book, Thinking in Java:</p>

<pre><code>public class SimpleThread extends Thread {
  private int countDown = 5;
  private static int threadCount = 0;
  public SimpleThread() {
    super("""" + ++threadCount); // Store the thread name
    start();
  }
  public String toString() {
    return ""#"" + getName() + "": "" + countDown;
  }
  public void run() {
    while(true) {
      System.out.println(this);
      if(--countDown == 0) return;
    }
  }
  public static void main(String[] args) {
    for(int i = 0; i &lt; 5; i++)
      new SimpleThread();
  }
} ///:~
</code></pre>
"
"11612323","<p>I tried this function in scala. Here is my result:</p>

<pre><code>def getPrimeFactores(i: Int) = {
  def loop(i: Int, mod: Int, primes: List[Int]): List[Int] = {
    if (i &lt; 2) primes      // might be i == 1 as well and means we are done
    else {
      if (i % mod == 0) loop(i / mod, mod, mod :: primes)
      else loop(i, mod + 1, primes)
    }
  }
  loop(i, 2, Nil).reverse
}
</code></pre>

<p>I tried it to be as much functional as possible.
<br><code>if (i % mod == 0) loop(i / mod, mod, mod :: primes)</code> checks if we found a divisor. If we did we add it to primes and divide i by mod.
<br>If we did not find a new divisor, we just increase the divisor.
<br><code>loop(i, 2, Nil).reverse</code> initializes the function and orders the result increasingly.</p>
"
"6253289","<pre><code>    int index = 4;

    ArrayList&lt;String&gt; myObjects = Lists.newArrayList(""a"", ""b"", ""c"", ""d"");
    Object o = index  &lt; myObjects.size() &amp;&amp; index &gt;= 0 ? myObjects.get(index) : null;
    System.out.println(o);
</code></pre>

<p>Lists comes from Guava.</p>
"
"6262762","<p>I found a simple way to do that:</p>

<pre><code>born_date.getDay();
born_date.getMonth();
born_date.getYear();
</code></pre>

<p>even if method getDay getMonth and getYear are deprecated. 
I think that Bozho solution is the best one.</p>
"
"11648685","<p>This is actually an awesome feature of Java. As you may well know, when iterating through a list in .NET to remove elements (of which there are a number of use cases for) you only have two options.</p>

<pre><code>var listToRemove = new List&lt;T&gt;(originalList);
foreach (var item in originalList)
{
    ...
    if (...)
    {
        listToRemove.Add(item)
    }
    ...
}

foreach (var item in listToRemove)
{
    originalList.Remove(item);
}
</code></pre>

<p><strong>or</strong></p>

<pre><code>var iterationList = new List&lt;T&gt;(originalList);
for (int i = 0; i &lt; iterationList.Count; i++)
{
    ...
    if (...)
    {
        originalList.RemoveAt(i);
    }
    ...
}
</code></pre>

<p>Now, I prefer the second, but with Java I don't need all of that because while I'm on an item I can remove it and yet the iteration will continue! Honestly, though it may seem out of place, it's really an optimization in a lot of ways.</p>
"
"11733094","<p>Because the array of values is specific, the solution can be simplified as this,</p>

<pre><code>public class SortedArrayOps {
public SortedArrayOps() {

}

// Print at the system out the first two ints found in the sorted array:
// sortedInts[] whose sum is equal to Sum in a single pass over the array
// sortedInts[] with no 0 value allowed.
// i.e. sortedInts[i] + sortedInts[?] = Sum where ? is the target index to
// be found to complete the task.
static void PrintIntSumValues(int Sum, int sortedInts[]) {
    // need to test to see if the Sum value is contained in the array
    // sortedInts. And, if not do nothing.
    for (int i = 0; i &lt; sortedInts.length; i++) {
        // ... do some work: algebra and logic ...
        // System.out.println sortedInts[i]+sortedInts[?] sums to Sum.
        int remainder = Sum - sortedInts[i];
        if( remainder &lt;= sortedInts.length &amp;&amp; remainder&gt;0 &amp;&amp; remainder!=sortedInts[i]) {
            System.out.print(String.format(""%d + %d = %d"", sortedInts[i], sortedInts[remainder-1], Sum));
            break;
        }
    }
}

public static void main(String[] args) {
    final int[] sortedArray = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
            14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
            30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
            46, 47, 48, 49, 50 };
    PrintIntSumValues(48, sortedArray);
}
</code></pre>

<p>}</p>
"
"11765858","<p>You could multiply the number by 10, cast it as an integer, and then divide it by 10.0 to get a double with exactly one decimal point.</p>

<pre><code>area = ((int) (area * 10)) / 10.0;
</code></pre>

<p>Instead of casting to an int, you could use <code>Math.floor</code></p>

<pre><code>area = Math.floor(area * 10) / 10.0;
</code></pre>

<p>Now, further arithmetic could make the number have a different number of decimal places.</p>

<p><strong>Edit:</strong></p>

<p>This is assuming the OP wants to keep the return value as a double instead of a String (as other answers have provided).</p>
"
"6360200","<p>See here:
<a href=""http://static.springsource.org/spring-security/site/docs/3.1.x/reference/ns-config.html#ns-getting-started"" rel=""nofollow"">http://static.springsource.org/spring-security/site/docs/3.1.x/reference/ns-config.html#ns-getting-started</a>
for to set-up your app config.
And here
<a href=""http://static.springsource.org/spring-security/site/docs/3.1.x/reference/ns-config.html#ns-method-security"" rel=""nofollow"">http://static.springsource.org/spring-security/site/docs/3.1.x/reference/ns-config.html#ns-method-security</a>
for method level security.</p>

<p>An example from a real app of config:
spring-security.xml</p>

<pre><code>    &lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
    &lt;beans:beans xmlns=""http://www.springframework.org/schema/security""
        xmlns:beans=""http://www.springframework.org/schema/beans""    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
xsi:schemaLocation=""http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/security
                    http://www.springframework.org/schema/security/spring-security-3.0.xsd""&gt;
&lt;!--Creates a FilterChainProxy. Defines access requirements for different 
    sets of URLs. Defines form-login authentication. --&gt;
&lt;http&gt;
    &lt;intercept-url pattern=""/app/javax.faces.resource/**""
        access=""IS_AUTHENTICATED_ANONYMOUSLY"" /&gt;
    &lt;intercept-url pattern=""/login*"" access=""IS_AUTHENTICATED_ANONYMOUSLY"" /&gt;

    &lt;intercept-url pattern=""/**"" access=""ROLE_USER"" /&gt;
    &lt;form-login login-page=""/login.jsp"" login-processing-url=""/attemptLogin""
        authentication-failure-url=""/login.jsp?login_error=true"" /&gt;
    &lt;logout logout-url=""/logout"" /&gt;
&lt;/http&gt;

&lt;!--Creates a ProviderManager, DaoAuthenticationProviderDefines and InMemoryDaoImpl 
    for authentication and authorization data. --&gt;
&lt;authentication-manager&gt;
    &lt;authentication-provider&gt;
        &lt;user-service&gt;
            &lt;user name=""admin"" password=""admin"" authorities=""ROLE_USER, ROLE_ADMIN"" /&gt;              
            &lt;user name=""guess"" password=""guess"" authorities=""ROLE_USER"" /&gt;              
        &lt;/user-service&gt;
    &lt;/authentication-provider&gt;
&lt;/authentication-manager&gt;
</code></pre>

<p></p>

<p>web.xml</p>

<pre><code>&lt;!--filters --&gt;
&lt;filter&gt;
    &lt;description&gt;Spring Securiy integration filter. Delegates to security filter bean configured.&lt;/description&gt;
    &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;
    &lt;filter-class&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
    &lt;filter-name&gt;springSecurityFilterChain&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
</code></pre>

<p>Hope this Helps. Good luck.</p>
"
"11794865","<p>Try:</p>

<pre><code>server = new Server();
    SocketConnector connector = new SocketConnector();
    connector.setPort(8080);
    server.setConnectors(new Connector[] { connector });
    WebAppContext context = new WebAppContext();
    context.setServer(server);
    context.setContextPath(""/your-context"");
    context.setWar(""path to war"");
    server.addHandler(context);
    Thread monitor = new MonitorThread();
    monitor.start();
    server.start();
    server.join();
</code></pre>

<p>then somewhere you say:</p>

<pre><code>    server.stop()
</code></pre>

<p>Helpful article:<br>
<a href=""http://www.codeproject.com/Articles/128145/Run-Jetty-Web-Server-Within-Your-Application"" rel=""nofollow"">http://www.codeproject.com/Articles/128145/Run-Jetty-Web-Server-Within-Your-Application</a></p>
"
"11807598","<p>I realise that this doesn't directly answer your question... but starting and stopping a server in <code>@Before</code> and <code>@After</code> methods is inefficient when you have more than one integration test that requires a server to be running, as the server would be restarted for every test.</p>

<p>You may want to consider starting and stopping your server around your entire suite of tests. If you are using Maven for builds, you can do this with the combination of failsafe and Jetty plugins.</p>
"
"11816224","<p>The reccomended version for Windows is the <code>JDK 1.6 32 bit</code>, make sure that you have installed only this one as JDK and all the environmental path are set, especially <code>JAVA_HOME</code>.</p>

<p>Developing for Android on Windows is always discouraged.</p>
"
"6427558","<p>What about:</p>

<pre><code>NonNullable&lt;?&gt;
</code></pre>

<p></p>
"
"6434210","<pre><code>try{
    methodWhichUsesTheString(a);
}catch (Exception NullPointerException){
    //string a seems to be null
    a = ""Re-assign some desired value that would make things work"" ;
}
</code></pre>
"
"9452569","<p>Modefiy your <code>onConfigurationChanged</code> method to the following</p>

<pre><code>public void onConfigurationChanged(Configuration newConfig) {
    super.onConfigurationChanged(newConfig);
    // Checks the orientation of the screen
    if (newConfig.orientation == Configuration.ORIENTATION_LANDSCAPE) {
        Toast.makeText(this, ""landscape"", Toast.LENGTH_SHORT).show();
    } else if (newConfig.orientation == Configuration.ORIENTATION_PORTRAIT) {
        Toast.makeText(this, ""portrait"", Toast.LENGTH_SHORT).show();
    }
}
</code></pre>
"
"6505017","<p>You can use a ReentrantLock</p>

<pre><code>ReentrantLock rl = new ReentrantLock();
</code></pre>

<p>and inside get/set</p>

<pre><code>try{
    rl.lock();
    //use the variable
}finally{
    rl.unlock();
}
</code></pre>

<p>or make the variable volatile</p>
"
"9459349","<p>initialize your sum variable with a non null value. 0L perhaps.</p>

<p>replace this line <code>sum += num</code> with <code>sum = sum + num</code>.. this is more readable.</p>
"
"11900207","<pre><code>    int num=1234;
    String text=""""+num;
    String t1=text.substring(0, 2);
    String t2=text.substring(2, 4);
    int num1=Integer.valueOf(t1);
    int num2=Integer.valueOf(t2);
    System.out.println(num1+"" ""+num2);
</code></pre>
"
"6512073","<p>No. Since ""String"" is not a primative type using == simply compares the address of the object and not the contents itself. By executing:</p>

<pre><code>String a = ""ABCD"";
String b = ""ABCD"";

if (a == b)
</code></pre>

<p>You would get false because although string a &amp; string b are the same their representations in memory are different. </p>

<p>The .equals() method is used to compare Strings (also, Objects) within Java as it compares the contents of the Object.</p>
"
"11909105","<blockquote>
  <p>Is implementing the Helper class as a singleton the best way to
  accomplish this, or is there a better/simpler/more elegant way to
  accomplish my goal?   </p>
</blockquote>

<p>If your intent is to have a single <code>Helper</code> to be used by all your app, then yes singleton is the way to go.   </p>

<blockquote>
  <p>I guess I should also know ahead of time if my implementation of
  Helper as a singleton will need to be thread safe or not.</p>
</blockquote>

<p>And if it will be accessed by multiple threads, yes it must be thread-safe   </p>
"
"6533453","<p>use <code>final</code> keyword. It is analogue for <code>const</code></p>
"
"9497566","<pre><code>Map&lt;String, List&gt; mainMap = new HashMap&lt;String, List&gt;();

for(int i=0; i&lt;something.size(); i++){
  Set set = getSet(...); //return different result each time
  mainMap.put(differentKeyName, new ArrayList(set));
}
</code></pre>
"
"9506393","<p>== operator compares hash codes of objects. That is reason why your method is not ok, you should write it like this :</p>

<pre><code>public boolean equals(Object other){        
     if (other instanceof Fraction){
         return ((Fraction)other).getNum == this.num &amp;&amp; ((Fraction)other).getDen == this.den;
     } else {
         return false;
     }
}
</code></pre>
"
"9515589","<pre><code>str.split("","");
</code></pre>

<p>then </p>

<pre><code>str.trim()
</code></pre>
"
"9515628","<p>What about the following:</p>

<pre><code>String a = ""abcd,fg;ijkl, cas"";
String[] result = a.split("",[ ]*"");
String expectedResult = result[result.length - 1]);
</code></pre>
"
"9593536","<p>It should be changed to true, but for speed's sake, why not:</p>

<pre><code>   for(int loop = 0; i &lt; questionList.size(); loop++){
       questionList.get(loop).setCorrect(true);
   }
</code></pre>
"
"6651839","<p>You can create a List from its String representation.  It may not be exactly the same List if the Strings contain a "", "", or a String is <code>null</code> but you can do it and it will work for many usecases.</p>

<pre><code>List&lt;String&gt; strings = Arrays.asList(""one"", ""two"", ""three"");
String text = strins.asList();
// in this case, you will get the same list.
List&lt;String&gt; strings2=Arrays.asList(text.substring(1,text.length()-1).split("", ""));
</code></pre>
"
"9635711","<p>If those librabries can actually be used in GWT, you have to add lines in your application.gwt.xml file to inherit the modules.</p>

<p>Example with library smartgwt:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;

&lt;!-- Inherit the core Web Toolkit stuff.                        --&gt;
&lt;inherits name='com.google.gwt.user.User'/&gt;

&lt;!-- Other module inherits                                      --&gt;
&lt;inherits name=""com.smartgwt.SmartGwt""/&gt;

&lt;!-- Specify the app entry point class.                         --&gt;
&lt;entry-point class='blablabla'/&gt;

&lt;!-- Specify the paths for translatable code                    --&gt;
&lt;source path='client'/&gt;
&lt;source path='shared'/&gt;
</code></pre>

<p></p>
"
"12107908","<p>If you want to catch more than two numbers like ""1.5.6"" or ""1.5.0"" you can use</p>

<p><code>[0-9](.[0-9])+</code></p>

<p>Or if you only want the first two digits
<code>[0-9].[0-9]</code> , but this will not work on strings like 1.5.0.0, it will catch 1.5 and 0.0.</p>
"
"6668205","<p>Yes you can do that, you just need to add the types before the <code>field1, field2 etc</code> other than that what you have should work. Its known as an anonymous class in Java.</p>
"
"6691005","<p>This should be easy, have you attempted to solve this yourself?</p>

<p>Anyway, pseudo code will look like</p>

<pre><code>For each string
    pos = string.indexOf(""."")
    Split string into two parts min, sec based on the index ""pos""
    stringSecs = min*60 + sec

Find difference of stringSecs by regular subtraction.

Convert back to required format using min = answer/60, sec=answer%60
</code></pre>
"
"12190387","<p>you need return null to bypass  Certificate validation</p>

<pre><code>    @Override
        public X509Certificate[] getAcceptedIssuers() {
        return null;
    }
</code></pre>
"
"6754575","<p>Yes, this looks to be a bug in Java, and not in the formatting code. If you print:</p>

<pre><code>System.out.println(""Week = "" + calendar.get(Calendar.WEEK_OF_YEAR));
</code></pre>

<p>It also shows <code>1</code>.</p>

<p>If you change your date to something not so close to the end of the year, eg:</p>

<pre><code>calendar.set(2010, Calendar.NOVEMBER, 27);
</code></pre>

<p>Then the output looks right. BTW, I tested using Sun 1.6.0_25 64bit VM.</p>
"
"12223153","<p>You might use an InputStreamReader and a BufferedReader to get the chars from your InputStream. Check java APIs to see how to read from streams:</p>

<ul>
<li><a href=""http://docs.oracle.com/javase/6/docs/api/java/io/InputStreamReader.html"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/io/InputStreamReader.html</a></li>
<li><a href=""http://docs.oracle.com/javase/6/docs/api/java/io/BufferedReader.html"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/io/BufferedReader.html</a></li>
</ul>

<p>Probably you might want to use the:</p>

<pre><code>BufferedReader br = new BufferedReader(new InputStreamReader(instream);
String line = br.readLine()
</code></pre>

<p>method to get lines from the InputStream.</p>

<p>Finally you could use simple string comparison to compare your uniqueId with the contents of the Stream. </p>
"
"9779201","<p>If I understand the question, you can throw</p>

<pre><code>Exception
</code></pre>

<p>as it is the parent class.</p>
"
"12223213","<p>Why not try something like this?</p>

<pre><code>@Test
public void testStreamBytes()
    throws PersistenceException, IOException, ClassNotFoundException {
  final String uniqueId = ""TestString"";
  final byte[] written = uniqueId.getBytes();
  final byte[] read = new byte[written.length];
  try (final OutputStream outStream = fileService.getOutputStream(uniqueId)) {
    outStream.write(written);
  }
  try (final InputStream inStream = fileService.getInputStream(uniqueId)) {
    int rd = 0;
    final int n = read.length;
    while (rd &lt;= (rd += inStream.read(read, rd, n - rd)))
      ;
  }
  assertEquals(written, read);
}
</code></pre>
"
"9781978","<p>Use This Lines As</p>

<pre><code>if (edit1.getText().toString().length() &gt; 0 &amp;&amp; edit2.getText().toString().length() &gt; 0) {
        fun();
    } else {
        Toast.makeText(Login_testingActivity.this, ""You need to enter a high AND low."", Toast.LENGTH_SHORT).show();
    }
</code></pre>
"
"9790973","<pre><code>public Object getObject(Class clazz) {
  return clazz.newInstance();
}
</code></pre>

<p>Will create a new object of the specified class. You don't have to use generics for this.</p>
"
"6807841","<p>The <code>toString</code> method is inherited by every Class in Java, from <code>java.lang.Object</code>. I don't see how you can avoid not implementing (actually overriding) <code>Object.toString</code>. Also, methods are defined for each class, and not for each object.</p>

<p>You could use a inheritance hierarchy to solve this, by having your classes inherit from a common class that overrides the default <code>toString</code> implementation. This implementation may use reflection to reflect on the fields of the class (not the parent class, but actually the class for the current object), and generate the string.</p>

<p>You can also investigate the use of bytecode weaving if you do not want to override the method at all. Personally, I do not think that the effort invested in bytecode weaving is not worth it, especially when you could have overridden <code>toString</code>.</p>
"
"9794404","<p><code>outputStream.toByteArray()</code> is deprecated, use:</p>

<pre><code>new ByteArrayInputStream(outputStream.getBytes());
</code></pre>
"
"12290420","<p>If you want to be fancy you can use xor to swap variables but I wouldnt recommend it as it may obfiscate your code to other users.</p>

<p>To swap the values of a and b you can run this code</p>

<pre><code>a ^= b; 
b ^= a;
a ^= b;
</code></pre>

<p>It looks like you are trying to sort an array so I would recommend using Arrays.sort for this.</p>

<p>API is <a href=""http://docs.oracle.com/javase/6/docs/api/java/util/Arrays.html#sort%28char%5B%5D%29"" rel=""nofollow"">here</a></p>

<p>As to the use of loops - it does the job but I wouldnt reinvent the wheel for sorting.</p>
"
"6834743","<p>If i'm not mistaken, that is related the Microsoft Visual C Runtime. Try installing the Microsoft 
<a href=""http://www.microsoft.com/download/en/details.aspx?displaylang=en&amp;id=5555"" rel=""nofollow"">Visual C++ 2010 Redistributable Package (x86)</a></p>

<p>However, a more interesting question to ask is why is you application trying to use this and why is it looking on your desktop for it?</p>

<p>EDIT: Try adding <code>addDllLocationToPath(""C:\\WINDOWS\\system32\\msvcr100.dll"");</code> as the first line of code to your application.</p>

<pre>
<code>
    /**
     * Allows you to add a path to the library path during runtime
     * @param dllLocation The path you would like to add
     * @return True if the operation completed successfully, false otherwise
     */
    public static boolean addDllLocationToPath(final String dllLocation)
    {
        //our return value
        boolean retVal = false;
        try
        {
            System.setProperty(""java.library.path"", System.getProperty(""java.library.path"") + "";"" + dllLocation);
            //get the sys path field
            Field fieldSysPath = ClassLoader.class.getDeclaredField(""sys_paths"");
            fieldSysPath.setAccessible(true);
            fieldSysPath.set(null, null);
            retVal = true;
        }
        catch (Exception e)
        {
            System.err.println(""Could not modify path"");
        }
        return retVal;
    }
</code>
</pre>
"
"12316826","<pre><code>int compare;
if (!input.contains(""&lt;body&gt;""))
compare = output.replaceAll(""&lt;body&gt;"","""").replaceAll(""&lt;/body&gt;"","""").compareTo(input);
</code></pre>
"
"12316874","<pre><code>public class Practice {

public static void main(String[] args) {
    String input = ""&lt;tr&gt;&lt;td&gt;Hello world&lt;/td&gt;&lt;/tr&gt;"";
    String output = ""&lt;body&gt;&lt;tr&gt;&lt;td&gt;Hello world&lt;/td&gt;&lt;/tr&gt;&lt;/body&gt;"";
    String tag = ""&lt;body&gt;"";
    String replace = """";

    System.out.println(""Output : "" + validate(input, output, tag, replace));

}

private static String validate(String input, String output, String word,
        String replace) {

    if (!(input.contains(word)) &amp;&amp; !(input.contains(word))) {
        output = output.replace(word, replace).replace(word, replace);
    }
    return output;

}}
</code></pre>
"
"9845805","<pre><code>{
    InputStream is = HTTPClient.get(url);
    InputStreamReader reader = new InputStreamReader(is);
    JSONTokener tokenizer = new JSONTokener(reader);
    JSONObject jsonObject = new JSONObject(tokenizer);
}
</code></pre>
"
"12330651","<pre><code>public boolean checkType(Vector&lt;?&gt; vec)
{
  if(!vec.isEmpty())
  {
    if(""String"".equals(vec.get(0).getClass().getSimpleName()))
             return false;
    else if(""Integer"".equals(vec.get(0).getClass().getSimpleName()))
             return true;               
   }
}
</code></pre>

<p>Hope this helps!!</p>
"
"6856063","<p>EDIT: I did the test at home, slight difference between the original answer and the new one:</p>

<ul>
<li>I did not notice the List in your code, as it's too close to the constructor. My bad!</li>
<li>I forgot to add the refresh method to retrieve the new state from the database on the entity</li>
</ul>

<p>Modify the method:</p>

<pre><code>public Post addComment(String author, String content) {
    Comment newComment = new Comment(this, author, content).save(); //adds the comment
    return this.refresh(); //tell Hibernate to get the latest state from the DB
}
</code></pre>

<p>This will save the comment properly. Test code:  </p>

<pre><code>@Test
    public void useTheCommentsRelation() {
        // Create a new user and save it
        UserT bob = new UserT(""bob@gmail.com"", ""secret"", ""Bob"").save();

        // Create a new post
        Post bobPost = new Post(bob, ""My first post"", ""Hello world"").save();

        // Post a first comment
        bobPost.addComment(""Jeff"", ""Nice post"");
        bobPost.addComment(""Tom"", ""I knew that !"");

        // Count things
        assertEquals(1, UserT.count());
        assertEquals(1, Post.count());
        assertEquals(2, Comment.count()); // 2 when correct not 0
        assertEquals(2, bobPost.comments.size());

    }
</code></pre>

<p>The rest of the code is the same as you show in your question. The test passes for me. NOTE: if you run it twice in a row and you are not wiping the DB between tests, it will fail in the asserts.</p>

<p>Alternatively you can use these changes to Post:</p>

<pre><code>public Post(UserT author, String title, String content) {
    this.author = author;
    this.title = title;
    this.content = content;
    this.postedAt = new Date();
    this.comments = new ArrayList&lt;Comment&gt;();
}

public Post addComment(String author, String content) {
    Comment newComment = new Comment(this, author, content).save();
    this.comments.add(newComment);
    return this.save();
}
</code></pre>

<p>This will work without need to reread from the database the state, as it is updated immediately. This also passes the test.</p>
"
"12366098","<p>Array is object too.
Here <code>T[] array = (T[]) new Object[n]</code> you cast only  (T[]) object type not elements in the array.</p>
"
"12632217","<p><code>@override</code> means you are borrowing methods from available class and are not defined by the programmer.</p>
"
"12672694","<pre><code>/*
 *  the below program is like 
 * tread t1 will first run , and it comes to ""notify()"" method
 * there are no threds waiting bcoz this is the first thread.
 * so it will not invoke any other threads. next step is ""wait()"" method
 *will be called and the thread t1 in waiting state. next stament 
 * ""System.out.println(""The value is ...""+wd.display());"" will not be  executed
 * because thread t1 is in waiting state.
 * 
 * thread t2 will run ,and it comes to ""notify()"" method ,there is already 
 * thread t1 is in waiting state ,then it will be invoked.now thread t1 will
 * continue execution and it prints the statement ""System.out.println(""The value is ...""+wd.display())""
 * and thread t2 will be in waiting state now.
 * 
 * if you uncomment ""notifyAll()"" method then, after t1 thread completes its execution
 *then immediately ""notifyAll()"" method will be called,by that time thread t2 is 
 * already in waiting state , then thread t2 will be invoked and continues execution.
 *or
 * if any other threadds are in waiting state all those threads will be invoked.
 */
package threadsex;

/**
 *
 * @author MaheshM
 */
/**
 * @param args the command line arguments
 */
public class WaitNotifyNotifyAllDemo implements Runnable {
    WaitDemo wd = new WaitDemo();

    public static void main(String[] args) {
        WaitNotifyNotifyAllDemo cd1 = new WaitNotifyNotifyAllDemo();
        Thread t1 = new Thread(cd1);
        t1.setName(""mahi1"");
        Thread t2 = new Thread(cd1);
        t2.setName(""mahi2"");
        t1.start();         
        t2.start();
    }

    @Override
    public void run() {
        synchronized (this) {
            try {

                System.out.println(""The thread is="" + 
                        Thread.currentThread().getName());
                notify();
                wait();
                System.out.println(""The value is ..."" + wd.display());
                //         notifyAll();

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }
}
</code></pre>
"
"6923160","<p>You are using interface libraries (<code>java.awt</code>) to write console applications.</p>

<p>Try this:</p>

<pre><code>public static void main(String[] args) throws Exception {
     while(true){
         Thread.sleep(1000);
         System.out.println(""hello"");
     }
}
</code></pre>
"
"9941889","<p>Continuing @gonadarian's answer, it seems <code>Eclipse</code> uses port <code>127.0.0.1</code> for debug purposes. This port is also called <code>localhost</code>. The way this error can be removed is by ensuring that there are no processes or services running on the above ports. The way to do this, on Linux is:  </p>

<ol>
<li><p>As <code>root</code>, enter the command:<br>
<code>netstat -tulpn | grep 127.0.0.1</code>  </p></li>
<li><p>If there are processes running on the above port, it will show up in the format:<br>
<code>process_id/process name</code>.  </p></li>
<li><p>Kill the above processes like so: <code>kill -KILL process_id</code>  </p></li>
<li><p>Restart the computer for these changes to take effect. The error should no longer occur.</p></li>
</ol>
"
"10002888","<p>I'm not totally familiar with java, but I know C++ and they're very similar.</p>

<pre><code>double array[] = new double[100];
double value = 150.0;
for (int i = 0; i &lt; 100; i++) {
    array[i] = value+i;
    System.out.println(value+i);
}
</code></pre>

<p>hope that helps.</p>

<p>your problem above was that you started i as 150.0. You need to use a counter variable to increment through your array. You're just printing the 99th element of the array (which you never set) 99 times.</p>
"
"13508096","<p>this link may help 
<a href=""http://www.roseindia.net/java/example/java/swing/InsertColumn.shtml"" rel=""nofollow"">http://www.roseindia.net/java/example/java/swing/InsertColumn.shtml</a></p>

<pre><code>public void positionColumn(JTable table,int col_Index) {
 table.moveColumn(table.getColumnCount()-1, col_Index);
  }
</code></pre>
"
"13589452","<p>concat3 method as below works fastest for me, performance for concat1 is jvm implementation/optimization dependent, it may perform better in other version of JVM but on my windows machine and remote linux red hat machine i tested on shows concat3 works the fastest .. </p>

<pre><code>public class StringConcat {

public static void main(String[] args) {
    int run = 100 * 1000 * 1000;
    long startTime, total = 0;

    final String a = ""aafswerg"";
    final String b = ""assdfsaf"";
    final String c = ""aasfasfsaf"";
    final String d = ""afafafdaa"";
    final String e = ""afdassadf"";

    startTime = System.currentTimeMillis();
    concat1(run, a, b, c, d, e);
    total = System.currentTimeMillis() - startTime;
    System.out.println(total);

    startTime = System.currentTimeMillis();
    concat2(run, a, b, c, d, e);
    total = System.currentTimeMillis() - startTime;
    System.out.println(total);

    startTime = System.currentTimeMillis();
    concat3(run, a, b, c, d, e);
    total = System.currentTimeMillis() - startTime;
    System.out.println(total);
}

private static void concat3(int run, String a, String b, String c, String d, String e) {
    for (int i = 0; i &lt; run; i++) {
        String str = new StringBuilder(a.length() + b.length() + c.length() + d.length() + e.length()).append(a)
                .append(b).append(c).append(d).append(e).toString();
    }
}

private static void concat2(int run, String a, String b, String c, String d, String e) {
    for (int i = 0; i &lt; run; i++) {
        String str = new StringBuilder(a).append(b).append(c).append(d).append(e).toString();
    }
}

private static void concat1(int run, String a, String b, String c, String d, String e) {
    for (int i = 0; i &lt; run; i++) {
        String str = a + b + c + d + e;
    }
}
}
</code></pre>
"
"7041725","<p>Yes, you should be able to use generics:</p>

<pre><code>    interface Extractor&lt;T, R&gt; {
        public List&lt;R&gt; extract(T source);
    }

    class BaseExtractor&lt;T&gt; implements Extractor&lt;T, Record&gt;
    {
        public List&lt;Record&gt; extract(T source)
        {
            //do your thing
        }
    }
</code></pre>

<p>Here, you would have to assume that <code>T</code> is a primitive array, as you cannot use primitives in generic definitions.</p>

<p>Or else, you could use the wrapper Objects and do it this way:</p>

<pre><code>    interface Extractor&lt;T, R&gt; {
        public List&lt;R&gt; extract(T[] source);
    }

    class BaseExtractor&lt;T&gt; implements Extractor&lt;T, Record&gt;
    {
        public List&lt;Record&gt; extract(T[] source)
        {
            //do your thing
        }
    }
</code></pre>

<p>In this case, your generic <code>T</code> can be <code>Byte</code>, <code>Integer</code>, etc.</p>
"
"10018241","<p>It could use a single for loop. Just put in an IF statement indicating if iteration (i) = index you want to replace then do a different operation rather than just copy.</p>

<p>Written in basic:</p>

<pre><code>For i = 0 to n - 1
       If i = x then
             arrayCopy(i) = replaceChars
       Else
             arrayCopy(i) = arraySource(i)
       End If
Next
</code></pre>
"
"7056328","<p>What you are talking about is salting a hash.</p>

<p>This is how I do it.</p>

<pre><code>public static byte[] getSecure8ByteSalt(){
    SecureRandom random = null;
    try {
        random = SecureRandom.getInstance(""SHA1PRNG"");
        byte [] bSalt =  new byte[8];
        random.nextBytes(bSalt);
        return bSalt;
    } catch (NoSuchAlgorithmException e) {
        log.error(e.getMessage(),e);
    }
    return new byte[]{
         (byte)0xA9, (byte)0x9B, (byte)0xC8, (byte)0x32,
         (byte)0x56, (byte)0x34, (byte)0xE3, (byte)0x03
     };
}
</code></pre>

<p>The method that calls for the salt is called hash:</p>

<pre><code>private void hash(String passwd, int hashType){
    byte[] bSalt = new byte[8];
    try {
        if(this.salt == null){
            bSalt = getSecure8ByteSalt();
        }
        else{ 
            bSalt = base64ToByte(salt);
        }
    } catch (IOException e1) {
        log.error(e1.getMessage(),e1);
        return;
    }


    byte[] bDigest=null;
    try {
        bDigest = getHash(ITERATION_NUMBER,passwd,bSalt,hashType);
    } catch (NoSuchAlgorithmException e) {
        log.error(e.getMessage(),e);
    }

    String sDigest = byteToBase64(bDigest);
    if(this.salt == null)
        setSalt(byteToBase64(bSalt));
setPasswordHash(sDigest);
}
</code></pre>

<p>Byte to base 64 method:</p>

<pre><code>public static byte[] base64ToByte(String data) throws IOException {
    BASE64Decoder decoder = new BASE64Decoder();
    return decoder.decodeBuffer(data);
}

public static String byteToBase64(byte[] data){
       BASE64Encoder endecoder = new BASE64Encoder();
       return endecoder.encode(data);
}
</code></pre>

<p>the getHash method:</p>

<pre><code>    private byte[] getHash(int iterationNb, String password, byte[] salt, int hashType) throws NoSuchAlgorithmException {
       MessageDigest digest = MessageDigest.getInstance(HASH_TYPE[hashType]);
       digest.reset();
       digest.update(salt);
       byte[] input = null;
        try {
            input = digest.digest(password.getBytes(""UTF-8""));
        } catch (UnsupportedEncodingException e) {
            log.error(e.getMessage(),e);
        }
       for (int i = 0; i &lt; iterationNb; i++) {
           digest.reset();
           input = digest.digest(input);
       }
       return input;
   }
</code></pre>
"
"13786989","<pre><code>public static void main(String[] args)throws InterruptedException {

    MyRunnable r = new MyRunnable();
    Thread t1 = new Thread(r,""A"");
    Thread t2 = new Thread(r,""B"");
    Thread t3 = new Thread(r,""C"");
    t1.start();
    Thread.sleep(1000);
    t2.start();
    Thread.sleep(1000);
    t3.start();



}
</code></pre>
"
"10020374","<p>It's relatively easy in C/C++, assuming that you understand that there are no such things as random numbers, but merely pseudo-random numbers:</p>

<pre><code>uint8_t *randomBytes(int length)
{
    uint8_t buffer = malloc(length);

    for (int i = 0; i &lt; length; i++)
    {
        buffer[i] = arc4random_uniform(256); // or similar random function
    }

    return buffer; // don't forget to free buffer when done!
}
</code></pre>

<p>In Java, you would return a byte array, like this:</p>

<pre><code>byte[] randomBytes(int length)
{
    Random rand = new Random();
    byte[] buffer = new byte[length];

    for (int i = 0; i &lt; length; i++)
    { 
        buffer[i] = (byte) rand.nextInt(256);
    }

    return buffer;
}
</code></pre>

<p>In C#, it's mostly the same as Java, but with a few differences:</p>

<pre><code>byte[] randomBytes(int length)
{
    Random rand = new Random();
    byte[] buffer = new byte[length];

    for (int i = 0; i &lt; length; i++)
    { 
        buffer[i] = (byte) rand.Next(256);
    }

    return buffer;
}
</code></pre>
"
"13796538","<p>try this code</p>

<pre><code>     String s= time ;

     DateFormat f1 = new SimpleDateFormat(""kk:mm"");
     Date d = null;
        try {
             d = f1.parse(s);
             DateFormat f2 = new SimpleDateFormat(""h:mma"");
             time = f2.format(d).toUpperCase(); // ""12:18am""

    } catch (ParseException e) {

        // TODO Auto-generated catch block
            e.printStackTrace();
        }
</code></pre>
"
"10032074","<p>What about that, when "">> "" is the beginning of every line in the command line where the user can input a command:</p>

<pre><code>textArea.addKeyListener(new KeyAdapter() {

    public void keyPressed(KeyEvent event) {

        int code = event.getKeyCode();          
        int caret = textArea.getCaretPosition();
        int last = textArea.getText().lastIndexOf(""&gt;&gt; "") + 3;

        if(caret &lt;= last) {

            if(code == KeyEvent.VK_BACK_SPACE) {

                textArea.append("" "");

                textArea.setCaretPosition(last + 1);
            }

            textArea.setCaretPosition(textArea.getText().length());
         }
     }
 });
</code></pre>
"
"14293330","<p>Spelling resources without the s? </p>

<pre><code>reources/
</code></pre>
"
"7096030","<p>String sqlQuery = ""select name from tbl where id in"" + sqlFormatedList(list);</p>

<pre><code>private String sqlFormatedList(List&lt;Integer&gt; list){
 StringBuilder sb = new StringBuilder();
 sb.append(""("");
 for (Integer i : list){
   sb.append(i+"","");
 }
 sb.deleteCharAt(sb.length() -1);
 sb.append("")"");
 return sb.toString();
}
</code></pre>
"
"7112403","<p>I do not know if you are asking for this. If the user point is P1 {x1, y1} and you want to calculate its distance to P2 {x2,y2}, the distance is calculated using Pythagoras'Theorem</p>

<pre><code>distance^2 = (x2-x1)^2 + (y2-y1)^2
</code></pre>

<p>If you only want to know the closest, you can avoid calculating the square root (the smaller the distance, the smaller the square too so it serves you the same).</p>
"
"7147669","<p>I am assuming this bar is a String type variable, the problem here seem that you are declaring two edittexts by same name, And String variables by same name too, I suggest you to change the names and try again. </p>

<pre><code> final EditText barText=(EditText) textEntryView.findViewById(R.id.dialog_FOO);
 final EditText barText1=(EditText) textEntryView.findViewById(R.id.dialog_FOO1);

 // these gets returned empty.
 bar= barText.getText().toString();
 bar1= barText.getText().toString();

 System.out.println(""foo: ""+bar);
 System.out.println(""foo: ""+bar1);
</code></pre>
"
"7181943","<p>Perhaps, <code>myTable.setDefaultRenderer(String.class, myRenderer);</code> would work correct.</p>
"
"14824253","<pre><code>DecimanFormat df = new DecimalFormat(""#.#"");
</code></pre>
"
"7206637","<p>OK I figured it out.  For some reason apparently you need to add a special condition for the specific cells you want to make different from the others.  Observe my original code:</p>

<pre><code>if(row == 2 &amp;&amp; column == 2) 
    c.setBackground(new java.awt.Color(0, 0, 255)); 
    else 
        c.setBackground(table.getBackground()); 
</code></pre>

<p>This didn't work, because I needed to wrap it in a conditional.</p>

<pre><code>if (!table.isRowSelected(row)) 
{ 
    if(row == 2 &amp;&amp; column == 2) 
        c.setBackground(new java.awt.Color(0, 0, 255)); 
    else 
        c.setBackground(table.getBackground()); 
} 
</code></pre>

<p>This wasa douzy!</p>
"
"15097024","<p>Use oracle.jdbc.OracleDriver, not oracle.jdbc.driver.OracleDriver.  You do not need to register it if the driver jar file is in the ""WEB-INF\lib"" directory, if you are using Tomcat.  Save this as test.jsp and put it in your web directory, and redeploy your web app folder in Tomcat manager:</p>

<pre><code>&lt;%@ page import=""java.sql.*"" %&gt;

&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Simple JSP Oracle Test&lt;/TITLE&gt;
&lt;/HEAD&gt;&lt;BODY&gt;
&lt;%
Connection conn = null;
try {
    Class.forName(""oracle.jdbc.OracleDriver"");
    conn = DriverManager.getConnection(""jdbc:oracle:thin:@XXX.XXX.XXX.XXX:XXXX:dbName"", ""user"", ""password"");
    Statement stmt = conn.createStatement();
    out.println(""Connection established!"");
}
catch (Exception ex)
{
    out.println(""Exception: "" + ex.getMessage() + """");

}
finally
{
    if (conn != null) {
        try {
            conn.close();   
        }
        catch (Exception ignored) {
            // ignore
        }
    }
}

%&gt;
</code></pre>
"
"15193070","<p>In java ,there is a rigorous way to convert a long to int</p>

<p>not only lnog can convert into int,any type of class extends Number can convert to other Number type in general,here I will show you how to convert a long to int,other type vice versa.</p>

<pre><code>Long l = 1234567L;
int i = org.springframework.util.NumberUtils.convertNumberToTargetClass(l, Integer.class);
</code></pre>
"
"15207191","<p>I just had this problem and solved it using this code:</p>

<pre><code>String.format(""%016x"", x);
</code></pre>

<p>I am not sure if I am missing something but it seems a lot simpler this way.</p>
"
"10229484","<p>I don't think you really understand how programs and computers work.  You can think of it as <code>Scanner in</code> creates a label for a region in memory  named <code>in</code> of the correct size for a <code>Scanner</code> type object, then <code>in = new Scanner()</code> actually creates that object in that location in memory that was previously reserved.  You can think of it as roughly analogous to <code>in = None</code> <code>in = Scanner()</code> in Python, though that's not really quite correct.  The thing is that since Python is loosely typed, it handles all the bookkeeping behind the scenes, thus allowing you to do what is really multiple steps with a single line of code.</p>
"
"15551509","<blockquote>
  <p>JLabel.setPreferredSize(100, JLabel.getheight());</p>
</blockquote>

<p>As you are setting the preferred size here, the height of JLabel must not have been previously set :), if you try the same line after setting the height, I think it should work well.</p>

<p>Also sometimes <code>JPanel&lt;xx&gt;.updateUI();</code> is required to refresh the displayed UI.<code>enter code here</code></p>
"
"15866250","<p>you can write a generic method as (its too late but below code will help you/others)</p>

<pre><code>public static FileInputStream getFile(File fileImport) throws IOException {
      FileInputStream fileStream = null;
    try {
        PrintWriter writer = new PrintWriter(fileImport);
        writer.print(StringUtils.EMPTY);
        fileStream = new FileInputStream(fileImport);
        } catch (Exception ex) {
            ex.printStackTrace();
        } finally {
            writer.close();
        }
         return fileStream;
}
</code></pre>
"
"7301345","<p>This may help...</p>

<pre><code>import java.util.Calendar;
import java.text.SimpleDateFormat;

public class DateUtils {
    public static final String DATE_FORMAT = ""yyyy-MM-dd HH:mm:ss"";

    public static String now() {
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat(DATE_FORMAT_NOW);
        return sdf.format(cal.getTime());
    }

    public static void  main(String arg[]) {
        System.out.println(""Now : "" + DateUtils.now());
    }
}
</code></pre>
"
"10309366","<p>Not sure what you mean by <code>duplicate</code> but the jar created by maven does come with <code>pom.xml</code> and <code>pom.properties</code> in <code>META-INF</code> folder.  See <a href=""http://maven.apache.org/guides/getting-started/index.html#How_do_I_add_resources_to_my_JAR"" rel=""nofollow"">this section</a> of the maven getting started guide.</p>
"
"10325980","<p>As has been explained this cannot be optimized away but why would you not use </p>

<pre><code>(x%10 == 0) ? x/10 : x
</code></pre>

<p>to convert back?</p>
"
"16491769","<p>This seems to be indeed a bug in XSSFSheet.createRow(int index). As long as the bug is not fixed, using this class as a workaround should do the trick :</p>

<pre><code>import java.util.Iterator;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;

public class PoiHacks
{
    // Fix of XSSFSheet.createRow(int index)
    public static Row createRow(Sheet sheet, int index) {
        Row row = sheet.getRow(index);
        if(row==null) return sheet.createRow(index);

        Iterator it = row.iterator();
        while(it.hasNext()) {
            it.next();
            it.remove();
        }
        return row;
    }
}
</code></pre>

<p>Use :</p>

<pre><code>PoiHacks.createRow(sheet, 0);
</code></pre>
"
"10331267","<p>You could parameterize the version number as</p>

<pre><code>&lt;groupId&gt;foo&lt;/groupId&gt;
&lt;artifactId&gt;bar&lt;/artifactId&gt;
&lt;version&gt;${my.project.version}&lt;/version&gt;

&lt;properties&gt;
    &lt;my.project.version&gt;1.0&lt;/my.project.version&gt;
&lt;/properties&gt;
</code></pre>

<p>and drive the version number from command line using</p>

<pre><code>mvn package -Dmy.project.version=NIGHTLY
</code></pre>

<p>Although this is possible, Maven 3 discourages it.</p>
"
"16881666","<p>you can check if the array is initialized and its legnth greater than zero</p>

<pre><code>if(nameOfYourArray != null &amp;&amp; nameOfYourArray.length &gt; 0){

      // Your code here
}
</code></pre>
"
"7361217","<p>This is an amalgamtaion of the above answers. All are correct is part.</p>

<pre><code>@echo off

set runJava=""%JAVA_HOME%\bin\java"" -cp log4j.jar;commons-logging-1.0.4.jar ""C:\Documents and settings\Administrator\Desktop\Temp\Test.class""

echo %runJava%

%runJava%
</code></pre>
"
"10401131","<p>android:capitalize is deprecated on ICS, so I guess it should be better to do it in code (i.e. with  <em>String.toUpperCase()</em>)</p>

<p>Another try could be</p>

<pre><code> android:inputType=""textCapWords""
</code></pre>

<p>but I guess it would require an EditText to work.</p>

<p>I don't know if this is the reason for your code, <strong>what version are you targeting</strong>?</p>
"
"17297970","<p>another way would be the separate the prime method from from main (based on first solution) note: this is without the text formatting: </p>

<pre><code>public class Primes
{
    public static boolean isPrime (int x)
    {
        for (int i = 2; i &lt;= Math.sqrt (x); i++)
        {
            if (x % i == 0)
            {
                return false;
            }
        }
        return true;
    }

    public static void main (String[] args)
    {
    new Primes().findprimes(100);  // &lt;&lt;--here you can choose whatever k prime
    }

    public void findprimes (int k){
    for (int i = 2, primesfound = 0; primesfound &lt; k+1 ; i++)
    {
        if (isPrime (i))
        {
            primesfound++;
            System.out.print (i + "" "");
        }
    }   
  }
}
</code></pre>
"
"7415134","<p>One way is to pass an output object to your method, for example in the form of an arraylist, so it will be something like: </p>

<pre><code>public static ArrayList&lt;String&gt; multipleReturnMethod(ArrayList&lt;String&gt; output) {

 String a = ""a"";
 String b = ""b"";

 output.add(a);
 output.add(b);
 return output; //not really necessary
}
</code></pre>

<p>Of course output has to be created outside your method.</p>
"
"17477723","<p>If you know how much elements the array has, a simple way is doing this:</p>

<pre><code>String appendedString = """" + array[0] + """" + array[1] + """" + array[2] + """" + array[3]; 
</code></pre>
"
"17854119","<p>I have just faced this problem, and the solution is that the property ""mail.smtp.user"" should be your email (not username).</p>

<p>The example for gmail user:</p>

<pre><code>properties.put(""mail.smtp.starttls.enable"", ""true"");
properties.put(""mail.smtp.host"", host);
properties.put(""mail.smtp.user"", from);
properties.put(""mail.smtp.password"", pass);
properties.put(""mail.smtp.port"", ""587"");
properties.put(""mail.smtp.auth"", ""true"");
</code></pre>
"
"17907936","<p>you can extend the JSONObject class and override the <code>public Object get(String key) throws JSONException</code> with the following:</p>

<pre><code>public Object get(String key) throws JSONException {
    if (key == null) {
        throw new JSONException(""Null key."");
    }

    Object object = this.opt(key);
    if (object == null) {
        if(key.contains(""."")){
            object = this.getWithDotNotation(key);
        }
        else
            throw new JSONException(""JSONObject["" + quote(key) + ""] not found."");
    }
    return object;
}


private Object getWithDotNotation(String key) throws JSONException {
    if(key.contains(""."")){
        int indexOfDot = key.indexOf(""."");
        String subKey = key.substring(0, indexOfDot);
        JSONObject jsonObject = (JSONObject)this.get(subKey);
        if(jsonObject == null){
            throw new JSONException(subKey + "" is null"");
        }
        try{
            return jsonObject.getWithDotNotation(key.substring(indexOfDot + 1));                
        }catch(JSONException e){
            throw new JSONException(subKey + ""."" + e.getMessage());
        }
    }
    else
        return this.get(key);
}
</code></pre>

<p>Please feel free to better handle the exceptions.. im sure it's not handled correctly.
Thanks</p>
"
"17926622","<p>In this section, you access the elements from outside of the loop:</p>

<pre><code>for(int i=0; i&lt;list.size; i++)
{

}
</code></pre>

<p>In this case the For loop of condition is completed, and again you retrieve the value from list by using <code>i++</code>: Such that you get the <code>ArrayindexOutOfBoundexception</code>.</p>

<p>It would be better to go with a ForEach loop - where all these issues will be take care of:</p>

<pre><code>for(String str : list)
{
}
</code></pre>
"
"7473645","<p>Barebones implementation:</p>

<pre><code> @NotNull
 private String password;
</code></pre>

<p>See <a href=""http://docs.jboss.org/hibernate/validator/4.0.1/reference/en/html_single/#validator-gettingstarted-createmodel"" rel=""nofollow"">applying constraints</a>:</p>
"
"18008161","<p>Since I deploy my app to Tomcat, I use the following environment variable to make it go to the Tomcat logs directory.</p>

<pre><code>log4j.appender.myappender.File=${catalina.base}/logs/mylogfile.log
</code></pre>

<p>In dev mode on Windows, this translates into: </p>

<pre><code>C:\logs\mylogfile.log
</code></pre>
"
"18063674","<p>Casting is necessary to tell that you are calling a child and not a parent method. So it's ever downward. However if the method is already defined in the parent class and overriden in the child class, you don't any cast. Here an example:</p>

<pre><code>class Parent{
   void method(){ System.out.print(""this is the parent""); }
}

class Child extends Parent{
   @override
   void method(){ System.out.print(""this is the child""); }
}
...
Parent o = new Child();
o.method();
((Child)o).method();  
</code></pre>

<p>The two method call will both print : ""this is the child"". </p>
"
"7479330","<p>It depends on where you want to print the error message. You can, of course, print from within the <code>totalPay()</code> method itself, but I'm guessing you're asking about changing the ""signature"" of <code>totalPay()</code> so that the code calling it knows an error occurred.</p>

<p>If so, you either do that by returning a special value that means an error occurred or by throwing an <code>Exception</code>. Either way, your calling code will have to check that a successful return occurred before it can print the result.</p>

<p>An example of using a special return value would be a negative number, or a special value like <code>java.lang.Float.NaN</code>.</p>

<p>An example of using an Exception would be:</p>

<pre><code>try {
    System.out.println(foo.totalPay(8.20,47));
}
catch (InvalidTotalPayException e) {
    System.out.println(""Exception: "" + e.toString());
}
</code></pre>
"
"18231457","<p>worked for me with this code. May be its for Java 1.7</p>

<pre><code>    TrustManager[] trustAllCerts = new TrustManager[]{new X509TrustManager() {

        @Override
        public X509Certificate[] getAcceptedIssuers() {
            // TODO Auto-generated method stub
            return null;
        }

        @Override
        public void checkServerTrusted(X509Certificate[] arg0, String arg1)
                throws CertificateException {
            // TODO Auto-generated method stub

        }

        @Override
        public void checkClientTrusted(X509Certificate[] arg0, String arg1)
                throws CertificateException {
            // TODO Auto-generated method stub

        }
    }};

    // Install the all-trusting trust manager
    try {
        SSLContext sc = SSLContext.getInstance(""TLS"");
        sc.init(null, trustAllCerts, new SecureRandom());
        HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());
    } catch (Exception e) {
        ;
    }
</code></pre>
"
"18269098","<pre><code>Class ArrayList&lt;E&gt;
</code></pre>

<p>Syntax</p>

<pre><code>ArrayList&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
</code></pre>

<p>You replace ""Integer"" with the class that the list is of.
An application can increase the capacity of an ArrayList instance before adding a large number of elements using the ensureCapacity operation. This may reduce the amount of incremental reallocation.
E represents an Element, which could be any class.
<code>ensureCapacity</code> is used to ensure that the list has enough capacity to take in the new elements. It's called internally every time you add a new item to the list. As the name suggests, <code>ArrayList</code> uses an Array to store the items. So when the array is initialized, it's given an arbitrary length, say 10. Now once you've added 10 items, if you go to add the 11th item, it'll crash because it exceeds the arrays capacity. Hence, <code>ensureCapacity</code> is called (internally) to ensure that there's enough space. So if you were adding the 11th element, the array size might be, say, doubled, to 20.</p>
"
"18319953","<p>Use this 
</p>

<pre><code>    dataTable.setPageSize(100);
</code></pre>

<p>or put the page size you want</p>
"
"19359847","<p>I had the same problem. To fix it in Jboss 7 AS, I copy the oracle driver jar file to Jboss module folder. Example: <code>../jboss-as-7.1.1.Final/modules/org/hibernate/main</code>.</p>

<p>You also need to change ""module.xml""</p>

<pre><code>&lt;module xmlns=""urn:jboss:module:1.1"" name=""org.hibernate""&gt;
&lt;resources&gt;
    &lt;resource-root path=""hibernate-core-4.0.1.Final.jar""/&gt;
    &lt;resource-root path=""hibernate-commons-annotations-4.0.1.Final.jar""/&gt;
    &lt;resource-root path=""hibernate-entitymanager-4.0.1.Final.jar""/&gt;
    &lt;resource-root path=""hibernate-infinispan-4.0.1.Final.jar""/&gt;
    &lt;resource-root path=""ojdbc6.jar""/&gt;
&lt;/resources&gt;

&lt;dependencies&gt;
    &lt;module name=""asm.asm""/&gt;
    &lt;module name=""javax.api""/&gt;
    &lt;module name=""javax.persistence.api""/&gt;
    &lt;module name=""javax.transaction.api""/&gt;
    &lt;module name=""javax.validation.api""/&gt;
    &lt;module name=""org.antlr""/&gt;
    &lt;module name=""org.apache.commons.collections""/&gt;
    &lt;module name=""org.dom4j""/&gt;
    &lt;module name=""org.infinispan"" optional=""true""/&gt;
    &lt;module name=""org.javassist""/&gt;
    &lt;module name=""org.jboss.as.jpa.hibernate"" slot=""4"" optional=""true""/&gt;
    &lt;module name=""org.jboss.logging""/&gt;
    &lt;module name=""org.hibernate.envers"" services=""import"" optional=""true""/&gt;
&lt;/dependencies&gt;
</code></pre>

<p></p>
"
"10646403","<p>Simple.. use this</p>

<pre><code>tv.setText(degrees+""""); //Degrees is the float value
</code></pre>
"
"20306145","<pre><code>/**
 * Convert arithmetic from infix to postfix
 *
 * @example 1 * ( 12 + 23 ) - ( 4 / 5 ) =&gt; 1 12 23 + * 4 5 / -
 * @author  Yong Su
 */
import java.util.Stack; 
import java.lang.StringBuilder;

class InfixToPostfix {

    public static void main(String[] args) {
        String infix = ""1 * ( 12 + 23 ) - ( 4 / 5 )"";
        String postfix = convert(infix);
        System.out.println(postfix);
    }

    /**
     * Perform the conversion
     *
     * @param expression Arithmetic infix format
     */
    public static String convert(String expression) {
        // Use StringBuilder to append string is faster than
        // String concatenation
        StringBuilder sb = new StringBuilder();

        // Use a stack to track operations
        Stack&lt;Character&gt; op = new Stack&lt;Character&gt;();

        // Convert expression string to char array
        char[] chars = expression.toCharArray();

        // The length of expression character
        int N = chars.length;

        for (int i = 0; i &lt; N; i++) {
            char ch = chars[i];

            if (Character.isDigit(ch)) {
                // Number, simply append to the result
                while (Character.isDigit(chars[i])) {
                    sb.append(chars[i++]);
                }
                // Use space as delimiter
                sb.append(' ');
            } else if (ch == '(') {
                // Left parenthesis, push to the stack
                op.push(ch);
            } else if (ch == ')') {
                // Right parenthesis, pop and append to the result until meet the left parenthesis
                while (op.peek() != '(') {
                    sb.append(op.pop()).append(' ');
                }
                // Don't forget to pop the left parenthesis out
                op.pop();
            } else if (isOperator(ch)) {
                // Operator, pop out all higher priority operators first and then push it to the stack
                while (!op.isEmpty() &amp;&amp; priority(op.peek()) &gt;= priority(ch)) {
                    sb.append(op.pop()).append(' ');
                }
                op.push(ch);
            }
        }

        // Finally pop out whatever left in the stack and append to the result
        while(!op.isEmpty()) {
            sb.append(op.pop()).append(' ');
        }

        return sb.toString();
    }

    /**
     * Check if a character is an operator
     */
    private static boolean isOperator(char ch) {
        return ch == '^' || ch == '*' || ch == '/' || ch == '+' || ch == '-';
    }

    /**
     * Define the operator priority
     */
    private static int priority(char operator) {
        switch (operator) {
            case '^' : return 3;
            case '*' :
            case '/' : return 2;
            case '+' :
            case '-' : return 1;
        }
        return 0;
    }

}
</code></pre>
"
"10719109","<pre><code>Pattern pp = Pattern.compile(""\\d+"");
Matcher m = pp.matcher(""sdfsdf123sdfs3464ew111"");
While(m.find())
{
    System.out.println(m.group());
}
</code></pre>

<hr>

<p>output will be:</p>

<pre><code>123
3464
111
</code></pre>

<p>check out !                     </p>
"
"20352356","<pre><code>    import java.io.BufferedReader;
    import java.io.InputStreamReader;


    public class NumberRepetition {



    public static void main(String[] args) throws Exception {
        int size;
    BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
    System.out.println(""enter size of array"");
    size=Integer.parseInt(br.readLine());
    int el;
    int[] a=new int[size];
    for(int i=0;i&lt;size;i++)
    {
        System.out.println(""enter a number"");
        el=Integer.parseInt(br.readLine());
        a[i]=el;
    }
    for(int i=0;i&lt;size;i++)
    {
        for(int j=0;j&lt;size-1;j++)
        {
            if(a[j]&gt;a[j+1])
            {
                int temp=a[j];
                a[j]=a[j+1];
                a[j+1]=temp;

            }
        }
    }
    int count=0;
    for(int i=0;i&lt;size;i++)
    {
        for(int j=0;j&lt;size;j++)
        {
            if(a[i]==a[j])
            {
                count++;

            }



        }
        System.out.println(a[i]+"" \t "" +""occurence time is""+""\t""+count);
        if(count!=0)
        {
            i=i+count-1;
        }
        count=0;
    }

}

}
</code></pre>
"
"20716790","<pre><code>//Just use a List
//create the list
public final List&lt;Object&gt; myObjects;

//instantiate the list
myObjects = new ArrayList&lt;Object&gt;();

//add objects to the list
Object object = myObject;
myObjects.add(object);

//remove the object calling this method if you have more than 1 objects still works with 1
//object too.

private void removeObject(){
int len = myObjects.size();
for(int i = 0;i&lt;len; i++){
Objects object = myObjects.get(i);
myObjects.remove(object);
}
}
</code></pre>
"
"7678166","<ul>
<li><p>If you want for it to run for two seconds, you can use
<code>Thread.sleep(2000)</code>.  Note that <code>Thread.sleep(2000)</code> is more of a
""suggestion"" than a ""command""; it will not run for <em>exactly</em> 2000
milliseconds, due to scheduling in the JVM.  It can pretty much be
simplified to be <em>roughly</em> 2000 milliseconds.</p></li>
<li><p>If you want it to continue calling <code>forward</code> for 2 seconds (which would result in quite a few invocations of the function), you will 
need to use a timer of some sort.</p></li>
</ul>
"
"20759491","<p>Try this:</p>

<pre><code>import java.util.Scanner;

    /* Logic: Consider first character in the string and start counting occurrence of        
              this character in the entire string. Now add this character to a empty
              string ""temp"" to keep track of the already counted characters.
              Next start counting from next character and start counting the character        
              only if it is not present in the ""temp"" string( which means only if it is
              not counted already)
public class Counting_Occurences {

    public static void main(String[] args) {


        Scanner input=new Scanner(System.in);
        System.out.println(""Enter String"");
        String str=input.nextLine();

        int count=0;
        String temp=""""; // An empty string to keep track of counted
                                    // characters


        for(int i=0;i&lt;str.length();i++)
        {

            char c=str.charAt(i);  // take one character (c) in string

            for(int j=i;j&lt;str.length();j++)
            {

                char k=str.charAt(j);  
    // take one character (c) and compare with each character (k) in the string
            // also check that character (c) is not already counted.
            // if condition passes then increment the count.
                if(c==k &amp;&amp; temp.indexOf(c)==-1)                                                                          
                {

                    count=count+1;

                }

            }

             if(temp.indexOf(c)==-1)  // if it is not already counted
             {


            temp=temp+c; // append the character to the temp indicating
                                         // that you have already counted it.

System.out.println(""Character   "" + c + ""   occurs   "" + count + ""    times"");
             }  
            // reset the counter for next iteration 
              count=0;

        }


    }


}
</code></pre>
"
"10771954","<p>Sure you can. There are lots of ways but one of them is to pass it in to the the <code>ActionListener</code>'s constructor:</p>

<pre><code>public class MyClass implements ActionListener { 

    private int difficultyLevel;

    public MyClass(int difficultyLevel) {
      this.difficultyLevel = difficultyLevel;
    }

    public void actionPerformed(ActionEvent e) { 
        ...//code that reacts to action and does something based on difficultyLevel
    }

}
</code></pre>

<p>UPDATE:</p>

<p>Looks like the design patterns police are out in full force today. You may want to quickly rewrite your app in MVC before you get shot in the foot :)</p>

<p><a href=""http://java.sun.com/products/jfc/tsc/articles/architecture/"" rel=""nofollow"">http://java.sun.com/products/jfc/tsc/articles/architecture/</a></p>
"
"7686187","<p>Have you tried to convert quotation marks to an XML entity, before you parse the element?</p>

<p>Several characters have special XML entity references:</p>

<pre><code>&amp;   &amp;amp;
&lt;   &amp;lt;
&gt;   &amp;gt;
""   &amp;quot;
'   &amp;apos;
</code></pre>
"
"20793516","<p>You have a <code>null</code>. <a href=""http://javaeesupportpatterns.blogspot.com/2012/01/javalangnullpointerexception-how-to.html"" rel=""nofollow"">This link</a> it will explain to you what the meaning of a java <code>NullPointerException</code>.</p>
"
"21047201","<p>I think what you are looking for is this:</p>

<p>public class Ques2 {</p>

<pre><code>/**
 * @param args the command line arguments
 */
public static void main(String[] args) throws IOException {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String input = br.readLine().toLowerCase();
    StringBuilder result = new StringBuilder();
    char currentCharacter;
    int count;

    for (int i = 0; i &lt; input.length(); i++) {
        currentCharacter = input.charAt(i);
        count = 1;
        while (i &lt; input.length() - 1 &amp;&amp; input.charAt(i + 1) == currentCharacter) {
            count++;
            i++;
        }
        result.append(currentCharacter);
        result.append(count);
    }

    System.out.println("""" + result);
}
</code></pre>

<p>}</p>
"
"10832375","<p>First you need to be aware of what types you are assigning to your variables. You should change your code to look like this:</p>

<pre><code>    public class simpleMath
    {


        public static void main(String[] args) 
        {
            double number = 5;
            double answer = half(number);

            System.out.println("" 5 divided by 2 is:""+ answer);

        }

        private static double half(double number) {
             number =  number/2.0;
             return number;
        }

    }
</code></pre>

<p>See how I now use the returned value and how I divide by 2.0? these changes will give you the results you are looking for.</p>
"
"10848823","<p>You can write the same as the following code</p>

<pre><code>           &lt;p:column&gt;
              &lt;f:facet name=""header""&gt;
                  &lt;h:outputText value=""isApproved""/&gt;
               &lt;/f:facet&gt;
               &lt;c:choose&gt;
                 &lt;c:when test=""#{company.isAppIsApproved}""&gt;
                    &lt;h:graphicImage value=""resources/images/correct.png""/&gt;
                 &lt;/c:when&gt;
                 &lt;c:otherwise&gt;
                    &lt;h:graphicImage value=""resources/images/incorrect.png""/&gt;
                 &lt;/c:otherwise&gt;
               &lt;/c:choose&gt;
            &lt;/p:column&gt;
</code></pre>

<p>Don't forget to declare jstl core tag.</p>
"
"22012227","<p>Import: </p>

<p><code>org.apache.commons.lang.StringUtils</code></p>

<p>And use:</p>

<pre><code>StringUtils.split(s,""?"");
</code></pre>
"
"22248604","<p>In a rolling manner.... i also use commons.apache math library </p>

<pre><code>  public LinkedList EMA(int dperiods, double alpha)
                throws IOException {
            String line;
            int i = 0;
            DescriptiveStatistics stats = new SynchronizedDescriptiveStatistics();
            stats.setWindowSize(dperiods);
            File f = new File("""");
            BufferedReader in = new BufferedReader(new FileReader(f));
            LinkedList&lt;Double&gt; ema1 = new LinkedList&lt;Double&gt;();
            // Compute some statistics
            while ((line = in.readLine()) != null) {
                double sum = 0;
                double den = 0;
                System.out.println(""line: "" + "" "" + line);
                stats.addValue(Double.parseDouble(line.trim()));
                i++;
                if (i &gt; dperiods)
                    for (int j = 0; j &lt; dperiods; j++) {
                        double var = Math.pow((1 - alpha), j);
                        den += var;
                        sum += stats.getElement(j) * var;
                        System.out.println(""elements:""+stats.getElement(j));
                        System.out.println(""sum:""+sum);
                    }
                else
                    for (int j = 0; j &lt; i; j++) {
                        double var = Math.pow((1 - alpha), j);
                        den += var;
                        sum += stats.getElement(j) * var;
                    }
                ema1.add(sum / den);
                System.out.println(""EMA: "" + sum / den);
            }
            return ema1;
        }
</code></pre>
"
"7845783","<p>That is one thing i really like about Groovy when I played around with it, the ?. operator that automatically tested for null references.</p>

<p>There is no such thing in Java, you just have test whatever object hierarchy your are traversing to check for null values:</p>

<pre><code>if (object1 != null &amp;&amp; obecjt1.obecjt2 != null &amp;&amp; object1.object2.object3 != null)
    do_something_awesome_with(object1.object2.object3);
</code></pre>

<p>However, your example is always going to cause trouble, because Groovy's ?. operator simply stops your traversal when it encounters a null reference and returns null.</p>
"
"22843827","<p>Try using <code>Color.parseColor(text);</code></p>
"
"22868120","<p>I found that the following worked for me:</p>

<pre><code>InputStream feedStream = new FileInputStream(""WEB-INF/"" + fileName);
</code></pre>
"
"23047527","<p>We can swap objects. It's so simple.Just have to use one dummy object to swap two objects.</p>

<p>Example is given below:</p>

<pre><code>    Employee e1=new Employee();
    Employee e2=new Employee();
    e1.setName(""e1"");
    e2.setName(""e2"");   
    System.out.println(e1);
    System.out.println(e2);
    Employee temp= new Employee();
    temp=e1;
    e1=e2;
    e2=temp;
</code></pre>
"
"23339305","<p>if you are in dev mode with not valid certificate, why not just set <strong><code>weClient.setUseInsecureSSL(true)</code></strong>. works for me</p>
"
"10992271","<p>Depending on your database system (mysql, postgre, ...), the integer type will or won't exist in your database. It is then better to use java Integer functions to make an Integer from your database value, which will probably be int or even bigint, depending on what's needed.</p>

<p>As I said in my comment, something like <code>Integer myinteger = new Integer(yourdatabasevalue)</code> should work fine.</p>
"
"10992372","<ol>
<li>set the layout of the Frame to be null via <code>setLayout(null)</code></li>
<li>create 4 JPanel and set their location using <code>setLocation</code> method</li>
<li>add these panels using JFrame's <code>add</code> method</li>
</ol>
"
"23589365","<pre><code>public class LargestPrimeFactor {
    static boolean isPrime(long n){
        for(long i=2;i&lt;=n/2;i++){
            if(n%i==0){
                return false;                                               
            }
        }
        return true;    
    }

    static long LargestPrimeFact(long n){
        long largestPrime=0;
        for(long i=2;i&lt;Math.sqrt(n)/2;i++){
            if(n%i==0){
                if(isPrime(i)){
                    largestPrime=i;
                }
                }                                       
            }
        return largestPrime;
    }
    public static void main(String args[]) {
        System.out.println (LargestPrimeFact(600851475143L));
    }
}
</code></pre>

<p>Source: 
<a href=""http://crispylogs.com/project-euler-problem-3-solution/"" rel=""nofollow"">http://crispylogs.com/project-euler-problem-3-solution/</a></p>
"
"23663258","<p>In activity B you at the following function:</p>

<pre><code>  protected String getStringExtra(Bundle savedInstanceState, String id) {
    String l;
    l = (savedInstanceState == null) ? null : (String) savedInstanceState
            .getSerializable(id);
    if (l == null) {
        Bundle extras = getIntent().getExtras();
        l = extras != null ? extras.getString(id) : null;
    }
    return l;
}
</code></pre>

<p>You are using it in the following way in activity B:</p>

<pre><code>public void onCreate(Bundle savedInstanceState) {
   super.onCreate(savedInstanceState); 
   String MANEUVER_ID  = getStringExtra(savedInstanceState, ""selection"");      
}
</code></pre>
"
"23754756","<pre><code>double  i = 2+Math.random()*100;
int j = (int)i;
System.out.print(j);
</code></pre>
"
"11007823","<p>Everyone has already pointed out that you can implicitly add the operations to the Float on the left hand side, just wanted to point out you can make a right associative operator by putting a colon on the end of it.</p>

<pre><code>class Vector3f(…) {
  …
  def *:(f: Float) = …
}

var v = new Vector3f(1,2,3);
var u = 1.2f *: v; //this works without any implicit magic or boxing overhead
</code></pre>

<p>it requires a small syntactic penalty, but is another option.</p>
"
"23759804","<p>ooxml for dealing the .xlsx files and the ooxml refers to the xml, hence we will be needed to refer the below three dependedncies in the pom.xml for the </p>

<pre><code>&lt;dependency&gt;
   &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;
   &lt;artifactId&gt;poi&lt;/artifactId&gt;
   &lt;version&gt;3.9&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
   &lt;groupId&gt;xml-apis&lt;/groupId&gt;
   &lt;artifactId&gt;xml-apis&lt;/artifactId&gt;
   &lt;version&gt;1.4.01&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
   &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;
   &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;
   &lt;version&gt;3.9&lt;/version&gt;
   &lt;exclusions&gt;
     &lt;exclusion&gt;
       &lt;artifactId&gt;xml-apis&lt;/artifactId&gt;
       &lt;groupId&gt;xml-apis&lt;/groupId&gt;
     &lt;/exclusion&gt;       
   &lt;/exclusions&gt;
&lt;/dependency&gt;
</code></pre>
"
"23766800","<p>A way to handle longer-than-buffer messages (can be dangerous because can take up your memory if never cleared) is to handle them in chunks:</p>

<pre><code>String inString = """";
byte[] buffer = new byte[1024];  // buffer store for the stream
int bytes; // bytes returned from read()

while (true) {
    try {
        bytes = mmInStream.read(buffer);
        String chunk = new String(buffer, 0, bytes);
        if(chunk.contains("";""))
        {
            inString += chunk.substring(0,chunk.indexOf(';'));
            Message msg = new Message();
            msg.obj  = inString;
            handler.sendMessage(msg);
            inString =  chunk.substring(chunk.indexOf(';'));
        }
        else
        {
            inString += chunk;
        }
    } catch (IOException e) {
        break;
    }
}
</code></pre>
"
"7966303","<pre><code>for (int i = 0; i &lt; 40; i++) {
    filename[i] = "".txt"";
}
</code></pre>

<p>Beside the fact that <code>String[]</code> is not really the best solution for that.. What about using an ArrayList? <a href=""http://download.oracle.com/javase/1.4.2/docs/api/java/util/ArrayList.html"" rel=""nofollow"">http://download.oracle.com/javase/1.4.2/docs/api/java/util/ArrayList.html</a></p>
"
"11087559","<p>I don't think so, you will need to use a workaround of some sort.  You could maybe extend your size to return negative numbers and interpret them as unsigned 32 bit integers, which would give you a maximum of 4 billion and change.</p>

<p>Ask yourself though, do you really need to be able to support that many objects?  Keep in mind that 4 billion and change 32 bit integers will take up 16GB of RAM.  Using 64 bit java, a 4 billion long array of <code>Object</code> set to all null will take up 32GB because references on 64 bit java are 64 bits.  That doesn't even take into account the memory used to actually instantiate that many classes, which will in all likelihood be much higher.  </p>
"
"24513856","<pre><code>class Program
{
    static void Main(string[] args)
    {
        String var = """";
        String exp_Str = """";
        for (int i = 1; i &lt; 8; i++)
        {
            for (int j = 1; j &lt; i; j++)
            {
                if (i &gt; j)
                {


                    var = var + j;
                    //Console.WriteLine(j+"""");
                }

            }
            Console.WriteLine(var);
            var = """";

        }

        Console.ReadLine();
    }
}
</code></pre>
"
"8026396","<p>Have you tried to set the <code>timezone</code> and <code>locate</code> attribute?
Otherwise, you can create a converter object that converts the date.
This is a tutorial to create a custom converter: <a href=""http://www.roseindia.net/jsf/customconverter.shtml"" rel=""nofollow"">http://www.roseindia.net/jsf/customconverter.shtml</a></p>
"
"24564349","<p>For anyone trying to debug Google App Engine using Eclipse but <strong>without using GAE Eclipse Plugin</strong>, I have written a detailed answer here: 
<a href=""http://stackoverflow.com/questions/22629799/dev-workflow-for-app-engine-modules-maven/24564306#24564306"">Dev workflow for app engine + modules + maven</a> </p>

<p>As asked, here is a copy of the answer: </p>

<hr>

<blockquote>
  <p>I am using a similar structure with a small difference. The top level
  directory has war and ear and then they contain their specific
  pom.xml. I use Eclipse for debugging, and I am able to hot deploy
  ""most of the time"" and I am not using Eclipse plugin, which (I</p>
  
  <h2>understand) is what you want. Directory Structure</h2>

<pre><code>.
|-- pom.xml
|-- README.md
|-- my-ear
|   |-- devpid
|   |-- pom.xml
|   `-- src
|       `-- main
|           `-- application
|               `-- META-INF
`-- my-war
    |-- build
    |   `-- classes
    |       |-- main
    |       |   |-- java
    |       |   `-- webapp
    |       `-- test
    |           `-- java
    |-- pom.xml
    `-- src
        |-- main
        |   |-- java
        |   |   `-- com
        |   `-- webapp
        |       |-- css
        |       |-- favicon.ico
        |       |-- index.html
        |       |-- js
        |       |-- test.html
        |       `-- WEB-INF
        `-- test
            `-- java
</code></pre>
  
  <h2>Tools</h2>
  
  <ul>
  <li>Eclipse Luna without Google App Engine Plugin (or SDK) </li>
  <li>Maven 3.2.1</li>
  <li>Google App Engine SDK 1.9.6</li>
  </ul>
  
  <h2>Dev Workflow</h2>
  
  <ol>
  <li>If you already have source code, keep it somewhere else and generate a skeleton using mvn appengine command. </li>
  <li>Run the first cut with a simple Hello World using only maven and terminal and mvn appengine:devserver command. </li>
  <li>Once done, generate the eclipse project. </li>
  <li>Import the eclipse project as a Maven project. It will see the jars via Maven. I won't have written this answer before Luna as it required
  too many tweaks. In Luna, this works automatically. </li>
  <li>The step above will create three projects, top level, ear and war each with pom.xml - It's OK. </li>
  <li>In eclipse, provide the output directory as war/target directory. This is the step which makes it possible to hot deploy. </li>
  <li><p>In maven ear/pom.xml, add xArgs to appengine plugin for running in debug mode. </p>

<pre><code>&lt;plugin&gt;
    &lt;groupId&gt;com.google.appengine&lt;/groupId&gt;
    &lt;artifactId&gt;appengine-maven-plugin&lt;/artifactId&gt;
    &lt;version&gt;${appengine.target.version}&lt;/version&gt;
    &lt;configuration&gt;
        &lt;jvmFlags&gt;
        &lt;jvmFlag&gt;-Xdebug&lt;/jvmFlag&gt;
            &lt;jvmFlag&gt;-Xrunjdwp:transport=dt_socket,address=1044,server=y,suspend=n&lt;/jvmFlag&gt;
        &lt;/jvmFlags&gt;
        &lt;disableUpdateCheck&gt;true&lt;/disableUpdateCheck&gt;
    &lt;/configuration&gt;
&lt;/plugin&gt;
</code></pre></li>
  <li><p>Notice the suspend=n. </p></li>
  <li>Run the app engine from outside eclipse using mvn appengine:devserver <em>from the ear directory</em>. I use this command: 
  <code>mvn appengine:devserver &gt; ~/.logs/.appengine.devserver.logs &amp; echo $!
  &gt; devpid</code> Let's call this Terminal 1. </li>
  <li>An advantage of this method is that your console is not captured by Eclipse, so you are free to use a tool of your choice to view it, like
  multitail etc. I use this simple tail command:  <code>tail -f
  ~/.logs/.appengine.devserver.logs | sed
  's/INFO/^[[0;34m&amp;^[[0m/g;s/ERROR/^[[0;31m&amp;^[[0m/g;s/WARN\|WARNING/^[[0;35m&amp;^[[0m/g;s/SEVERE\|FATAL/^[[0;31;47m&amp;^[[0m/g'</code>
  The above is a difficult to type command. Every instance of ^[ is
  actually Ctrl+V Esc - it is worth the effort of typing it once. But
  this is of course subjective and up to you. </li>
  <li>In Eclipse, create a Debug Profile for your project under Remote Java Application - select the war project and socket attach options.</li>
  </ol>
</blockquote>

<p>This step is available on the internet at many places, here is an image nevertheless <img src=""http://i.stack.imgur.com/HDJK7.png"" alt=""Debug Config, Remote Application, War Socket Attach""></p>

<blockquote>
  <ol>
  <li>Open another terminal, Terminal 2 in the war directory and keep it open in order to run <code>mvn compile install</code> when you need to. </li>
  <li>You are good to go. You should be able to integrate your source code by just pasting it at the right place. You should also be able to
  use standard debugging techniques. Eclipse will compile at the right
  location and devserver will detect it all right. If Eclipse throws a
  warning, ignore it. </li>
  <li>This works most of the time. Sometimes, you save something that breaks compilation of the whole project, or change a function name
  being called from a pre compiled class or simply change web.xml which
  is loaded at start up. Of course then hot deploy will not work. </li>
  <li>In such a case, stop your remove debug from within eclipse, complete your tasks, run <code>mvn compile install</code> from Terminal 2.
  Devserver will autodetect.</li>
  <li>Mostly, I hardly need to touch the tail running in Terminal 1. Devserver does not tend to need restart. </li>
  <li>Unless I am changing web.xml or refactoring, I do not need to run <code>mvn compile install</code> from outside. </li>
  </ol>
  
  <hr>
  
  <p>My reason for giving list of windows (Eclipse, Terminal 1 and Terminal 2) is just to show that Alt+Tab is actually faster than
  Shift+F7 from within eclipse. It is subjective and of course up to
  you.</p>
</blockquote>
"
"8066352","<p>Google's Guava MultiMap implementation is what i am using for these purposes. </p>

<pre><code>Map&lt;Key Collection&lt;Values&gt;&gt; 
</code></pre>

<p>where Collection can be an ArrayList for example. It allows multiple values stored in a collection to be mapped to a key.
Hope this helps!</p>
"
"24627349","<p>i resolved using List instead of Set:</p>

<pre><code>private List&lt;Categories&gt; children = new ArrayList&lt;Categories&gt;();
</code></pre>
"
"24923121","<p>So if your objective is to persistent and then reconstructed the enum information.  You will need to persist the enumClassName and its value.</p>

<pre><code>public enum DaysOfWeek{ Mon, Tue, Wed, Thu, Fri, Sat, Sun }

DaysOfWeek dow = DaysOfWeek.Tue;
String value = dow.toString();
String enumClassName = dow.getClass().getName();

// Persist value and enumClassName
// ...

// Reconstitute the data 
Class clz = Class.forName(enumClassName);
Object o = Enum.valueOf(clz, value);
DaysOfWeek dow2 = (DaysOfWeek)o;
System.out.println(dow2);
</code></pre>
"
"8108614","<p>How about:</p>

<pre><code>public static boolean smallestCharacter(char ch1, char ch2) {
  if (ch1 &gt; 0x60) ch1 -= 0x20;
  if (ch2 &gt; 0x60) ch2 -= 0x20;
  return ch1 &lt; ch2;
}
</code></pre>
"
"11221606","<p>Try this,</p>

<pre><code>String s =""0x6d4b"" ;
        char[] c = s.toCharArray();

        for (char cc : c){

            System.out.print(cc);
        }
</code></pre>
"
"11226358","<p>this example will be creating logger for each minute, if u want to change for each day change the datepattern value.</p>

<pre><code>&lt;appender name=""ASYNC"" class=""org.apache.log4j.DailyRollingFileAppender""&gt;
        &lt;param name=""File"" value=""./applogs/logger.log"" /&gt;           
         &lt;param name=""Append"" value=""true"" /&gt;           
        &lt;param name=""Threshold"" value=""debug"" /&gt;          
         &lt;appendToFile value=""true"" /&gt; 
         &lt;param name=""DatePattern"" value=""'.'yyyy_MM_dd_HH_mm""/&gt; 
         &lt;rollingPolicy class=""org.apache.log4j.rolling.TimeBasedRollingPolicy""&gt; 
         &lt;param name=""fileNamePattern"" value=""./applogs/logger_%d{ddMMMyyyy HH:mm:ss}.log""/&gt;
         &lt;param name=""rollOver"" value=""TRUE""/&gt;   
         &lt;/rollingPolicy&gt;            
         &lt;layout class=""org.apache.log4j.PatternLayout""&gt;
            &lt;param name=""ConversionPattern"" value=""%d{ddMMMyyyy HH:mm:ss,SSS}^[%X{l4j_mdc_key}]^[%c{1}]^ %-5p %m%n"" /&gt;
         &lt;/layout&gt;
    &lt;/appender&gt;
    &lt;root&gt;
        &lt;level value=""info"" /&gt;
        &lt;appender-ref ref=""ASYNC"" /&gt;
    &lt;/root&gt;
</code></pre>
"
"25244160","<p><strong>This one works perfectly!!</strong></p>

<pre><code>public class Puzzle3 {
public static void main(String ar[])
{
    Long i=new Long(""1"");
    Long p=new Long(""600851475143"");
    Long f=new Long(""1"");
    while(p&gt;=i)
    {
        if(p%i==0)
        {
            f=i;
            p=p/i;
            int x=1;
            i=(long)x;
        }
        i=i+2;
    }
    System.out.println(f);
}
</code></pre>

<p>}</p>
"
"25327828","<pre><code> //just try to make a quick example to make b to have the same precision as a has, by using BigDecimal

 private double getDesiredPrecision(Double a, Double b){
     String[] splitter = a.toString().split(""\\."");
     splitter[0].length();   // Before Decimal Count
     int numDecimals = splitter[1].length(); //After Decimal Count

     BigDecimal bBigDecimal = new BigDecimal(b);
     bBigDecimal = bBigDecimal.setScale(numDecimals,BigDecimal.ROUND_HALF_EVEN);

     return bBigDecimal.doubleValue();  
 }
</code></pre>
"
"8165339","<p>The best way to do this is to run the server on a thread:</p>

<p>You run <code>server.accept()</code> therefore while your program is listening for a connection on that thread you can do whatever you want on the main thread, even connect to another server therefore making the program both a server &amp; a client.</p>
"
"8175428","<p>You can use <a href=""http://en.wikipedia.org/wiki/Bogosort"" rel=""nofollow"">BogoSort</a> for this.</p>

<ol>
<li>Store all teams in a List.</li>
<li>Create a validator that determines whether or not a <code>List&lt;Team&gt;</code> is sorted correctly according to the procedures.</li>
<li><p>Then your code will look like this.</p>

<p>void sort ( List teams )
{
     while ( ! validator . valid ( teams ) )
     {
           Collections . shuffle ( teams ) ;
     }
}</p></li>
</ol>
"
"8195739","<p>use this for finding last position</p>

<pre><code>names.lastIndexOf(input)
</code></pre>

<p>based on array position, get the value </p>
"
"26266562","<pre><code>public String alarmClock(int day, boolean vacation) {

  if (((day==0)||(day==6))&amp;&amp;(!vacation)){
  return ""10:00"";
  }
  else if (((day!=0)||(day!=6))&amp;&amp;(!vacation)){
  return ""7:00"";
  }
  else if (((day==0)||(day==6))&amp;&amp;(vacation)){
  return ""off"";
  }
  else{
  return ""10:00"";
  }




}
</code></pre>
"
"26291669","<p>I found this more accurate <a href=""https://github.com/guardianproject/android-ffmpeg-java/blob/master/src/net/sourceforge/sox/SoxController.java#L118"" rel=""nofollow"">getLength with FFmpeg</a></p>

<pre><code>int soundLength = (int) new SoxController(context, new File(""""), shell).getLength(soundPath);
</code></pre>
"
"8271365","<p>Sometimes it's useful to store default value in map as a value of <code>Null</code> key. I don't know other cases. But it's legal so why you shouldn't if it can make some profit?</p>
"
"11465842","<p>The way you stated in the question won't work. As a alternative you could do it like:</p>

<pre><code>public String[] getDesiredFunction = {getName(),getLastname(),getMiddle()};
for(int i = 0;i&lt;3;i++){
if(getDesiredFunction[i].equals(""getName()"")){
     getName();
  }
}
</code></pre>
"
"11490366","<p>From my understanding you want to do this:</p>

<pre><code>input: dog
output: dogdog
--------------
input: racecar
output: racecaracecar
</code></pre>

<p>So this is how i would do that:</p>

<pre><code> public String change(String input)
{
    StringBuilder outputBuilder = new StringBuilder(input);

    int patternLocation = input.length();
    for(int x = 1;x &lt; input.length();x++)
    {
        StringBuilder check = new StringBuilder(input);

        for(int y = 0; y &lt; x;y++)
            check.deleteCharAt(check.length() - 1);

        if(input.endsWith(check.toString()))
        {
            patternLocation = x;
            break;
        }
    }

    outputBuilder.delete(0,  input.length() - patternLocation);

    return outputBuilder.toString();
}
</code></pre>

<p>Hope this helped!</p>
"
"11536191","<p>maybe it because the dimension is not the same for the <code>setPreferredSize()</code> ?</p>

<pre><code>    open.setPreferredSize(new Dimension(70,20));

    process.setPreferredSize(new Dimension(100,20));
</code></pre>
"
"27543350","<p>I think you must assign a value in <code>scheduleFactoryBean</code>, <code>setSchedulerContextAsMap()</code>, you put your object in this map, then it will work.</p>

<pre><code>@Bean(name = ""scheduler"")
  public SchedulerFactoryBean schedulerFactory()
  {
    SchedulerFactoryBean schedulerFactory = new SchedulerFactoryBean();
    schedulerFactory.setDataSource(dataSource);
    schedulerFactory.setAutoStartup(true);
    schedulerFactory.setGlobalJobListeners(globalJobListeners);
    schedulerFactory.setSchedulerContextAsMap(contextMap());
    schedulerFactory.setQuartzProperties(schedulerProperties());
    return schedulerFactory;
  }
</code></pre>
"
"8381187","<p>Ok, for the sort, you would use code similer to this:</p>

<pre><code>   import java.util.Arrays;
   import java.util.Scanner;

   public class LibraryBookSort
   {

  LibraryBook[] book = new LibraryBook[5];
  public static void main(String[] args)
  {
     LibraryBookSort run = new LibraryBookSort();
  }

  public LibraryBookSort()
  {
     readData();
     displayArr();
        System.out.println(""-------------Sorted------------------"");
     sortArr();
     displayArr();
  }

  private void readData()
  {
     book[0] = new LibraryBook(""Java Programming"", ""Joyce Farrell"", 881);
     book[1] = new LibraryBook(""Team Of Rivals"", ""Dorris Kearns Goodwin"", 994);
     book[2] = new LibraryBook(""1776"", ""Daivd McCullough"", 400);
     book[3] = new LibraryBook(""No Ordinary Time"", ""Dorris Kearns Goodwin"", 768);
     book[4] = new LibraryBook(""Steve Jobs"", ""Walter Isaacson"", 656);
  }

  private void sortArr()
  {
  //Sort
     for(int outer=0; outer &lt; book.length-1; outer++)
     {
        for(int inner=outer; inner &lt; book.length; inner++)
        {
           if(book[outer].getBookTitle().compareTo(book[inner].getBookTitle())&gt;0)  {  
              LibraryBook temp = book[outer];
              book[outer] = book[inner];
              book[inner] = temp;
           }

        }
     }
  }

  private void displayArr()
  {
     for (int x = 0; x &lt; book.length; ++x){
        System.out.println(book[x].getBookTitle() + ""\t"" + book[x].getBookAuthor() + ""\t"" + book[x].getBookPageCount());
     }
  }
}
</code></pre>

<p>OK, as you can see the LibraryBookSort() and LibraryBookSort() are self explanatory, now the sortArr() is the trickey part: Firstly, the two loops, what it does it takes item 1, and compare it to all the items, then item 2, and the same story. We start the inner loop at the outer position in order to avoid useless clutter as the items before that were already tested. Now, using the getters and setters, we get the name or anything you want from the array and compare it to the other one, using > 0 will be A-Z, and &lt;0 Z-A. Should the item in the innerLoop be ""higher up"" as the outerLoop item, then we have to move it. Create a new variable from your getSetClass and store the outerLoopItem (One now not in the right place anymore) in it. Then we put the innerItem (Because it is now ""before"" the outerItem) in the outerItem's pos. Then we just fill the pos of the Inner with the Temp.</p>

<p>Basically what we have done is we just switched the two variables around but we need a temp storage for that, else we will lose some data.</p>

<p>Hope it helps now even more, ask should you not understand.</p>
"
"8422432","<pre><code>public int[][] tiles, temp;

// Add values to tiles, wherever you end up doing that, then:
System.arraycopy(tiles, 0, temp, 0, tiles.length);

for(int row = 0; row &lt; tiles.length; row++) // Loop over rows
  for(int col = 0; col &lt; tiles[row].length; col++) // Loop over columns
    tiles[col][row] = temp[row][col]; // Rotate
</code></pre>

<p>That should do it for you.</p>
"
"28769613","<p>I feel the above answers miss a scenario where this error occurs even when your code has a main(). When you are using JNI that uses <a href=""http://docs.oracle.com/javase/tutorial/reflect/"" rel=""nofollow"">Reflection</a> to invoke a method. During runtime if the method is not found, you will get a</p>

<p><code>java.lang.NoSuchMethodError: No virtual method</code></p>
"
"28935434","<pre><code>if(str.isEmpty() || str.trim().length() == 0){
   return 0;
}
return (str.trim().split(""\\s+"").length);
</code></pre>
"
"8446828","<p>I would throw an <code>ExceptionInInitializerError</code> if the cents value is greater than 100.  Either that, or divide by 100 and add the quotient to the dollars and the remainder to the cents.  Normalizing and validating your constructor arguments is not a bad practice.</p>
"
"11662614","<pre><code>public class pattern {

public void patternMaker(int x){
    if(x &gt; 0){
        for(int i = 0; i &lt; x; i++){
            for(int j=0;j&lt;=i;j++){
                System.out.print(""*"");
            }
            System.out.print(""\n"");
        }
        for(int i = x-1; i &gt; 0; i--){
            for(int j=i;j&gt;0;j--){
                System.out.print(""*"");
            }
            System.out.print(""\n"");
        }
    }
}
public static void main(String[] ar){
    new pattern().patternMaker(3);
}
}
</code></pre>
"
"8469690","<p>I suspect they're looking for something like the following:</p>

<pre><code>import java.util.*;
public class Tester
{
    public static void main(String args[])
    {
        String ss[] = {""Bill"", ""Mary"", ""Lee"", ""Agnes"", ""Alfred"", ""Thomas"", ""Alvin"", ""Bernard"", ""Ezra"", ""Herman""};
        Arrays.sort(ss);
        int length = ss.length;
        for(int i = 0; i &lt; length ; i++)
            System.out.println(ss[i]+""\t""+ss[length-1-i]);
    }
}
</code></pre>
"
"8482394","<p>As others have said, you should either implement the <code>clone()</code> method or create a copy constructor.</p>

<p>Whichever solution you choose, you will want to make what is called a ""deep copy"". If the object is simple, than creating a deep copy is simple. If the object is complicated, one trick is to serialize and deserialize the object. This will make a deep copy with a minimum amount of effort.</p>

<p>Whenever I do this I like to use <a href=""http://xstream.codehaus.org/tutorial.html"" rel=""nofollow"">XStream</a> instead of native Java serialization. It serializes an object into XML, including any nested objects and collections, which you can then deserialize for a deep copy. The following code will most likely work for your class with no modifications:</p>

<pre><code>public Claus clone(Claus source) {
      XStream xstream = new XStream();
      String serializedObj = xstream.toXML(source);
      return (Claus) xstream.fromXML(serializedObj);
   }
</code></pre>
"
"11712427","<p>Perhaps you're not placing your jar in the <code>libs</code> directory as opposed to <code>lib</code> directory? Here's a similar issue <a href=""http://stackoverflow.com/questions/6974670/java-android-class-not-found-exception"">Java (Android) - class not found exception</a> </p>
"
"11712542","<p>First of all to build an apk with ant for Android you have to use <code>ant debug</code> or <code>ant release</code>, i don't know what <code>ant android</code> does and why you are using it but this command is not part of the standard approach to ant for Android, that's for sure.</p>

<p>Ant is just a building tools, if a developer provide a building solution in ant, does not mean that his application is for Android.</p>

<p>Under Android everything that is not a native library is converted in a DEX object, which is something similar to bytecode for the Dalvik, there is no jar or other container in your app.</p>

<p>This question may be helpful for you <a href=""http://stackoverflow.com/questions/3642928/adding-a-library-jar-to-an-eclipse-android-project"">Adding a library/JAR to an Eclipse Android project</a> .</p>

<p>There are a lot of conceptual errors in this topic, you probably want to study the Android platform before using it.</p>
"
"29895629","<p>You can use this</p>

<pre><code>(new SelectElement(driver.FindElement(By.Id(""""))).SelectByText("""");
</code></pre>
"
"30033808","<p>I find that the timeout calls are not reliable enough in real life, particularly for internet explorer , however the following solutions may be of help:</p>

<ol>
<li>you can timeout the complete test by using @Test(timeout=10000) in the junit test that you are running the selenium process from. This will free up the main thread for executing the other tests, instead of blocking up the whole show (just remember to cleanup the driver instance in the finally block).</li>
</ol>

<p>2.You can create a Command that enscapulates calls to the webDriver and call the execute method from the call() method of the Callable </p>

<pre><code>    class DriverCommand implements Callable&lt;WebElement&gt; {
        String criteria;
        public DriverCommand setCriteria(String criteria){
          this.criteria = criteria;
          return this;
        }
        @Override
        public WebElement call() throws Exception {
              driver.findElement(By.name(criteria));
              return elem;
        }
    }

public class Test {
    public static void main(String[] args) throws Exception {
        ExecutorService executor = Executors.newSingleThreadExecutor();
        Future&lt;String&gt; future = executor.submit(new DriverCommand().setCriteria(""x"");

        try {
              System.out.println(future.get(3, TimeUnit.SECONDS));
          } catch (TimeoutException e) {
            System.out.println(""Terminated!"");
        }

        executor.shutdownNow();
    }
}
</code></pre>
"
"30269807","<p>Try Guava:</p>

<pre><code>Joiner.on("""").join(chars);
</code></pre>

<p>or commons-lang:</p>

<pre><code>StringUtils.join(chars, null);
</code></pre>
"
"30349258","<pre><code>String value = someMethod();
switch(0) {
default:
    if (""apple"".equals(value)) {
        method1();
        break;
    }
    if (""carrot"".equals(value)) {
        method2();
        break;
    }
    if (""mango"".equals(value)) {
        method3();
        break;
    }
    if (""orance"".equals(value)) {
        method4();
        break;
    }
}
</code></pre>
"
"8598003","<p>You can try using a File, like so:</p>

<pre><code>File f = new File(""C:\\folder\\stuff\\MyFile.class"");
</code></pre>
"
"11855969","<p>I don't think this is a bad idea.</p>

<p>If they aren't going to change then make sure you mark the fields with the appropriate keywords eg <code>Final</code>.</p>

<p>It also a good idea to make non changing values appear differently.  eg Constants in Java are typically done in all caps.</p>
"
"11876677","<p>If you are using netbeans you can Fix it with <code>alt + Enter Key</code> 
or
If you Use eclipse hover the mouse over that error </p>

<p>Ans : <code>Import java.util.ArrayList</code></p>

<p>You get this error Because ArrayList is not in Package of java.lang. But ArrayList is in java.util it is in your class Path so you have to import that one</p>

<p>Eg :              <code>package sample.array</code></p>

<pre><code>               `Class ArrayListDemo {

                                 }`
</code></pre>

<p>If You want to call ArrayListDemo in your class You have to <code>import sample.array</code> only if your class not in sample.array package</p>
"
"11938583","<p>You need to escape the single quote like this:</p>

<pre><code>INSERT INTO TermsAndConditions (name,description,ownerID)  VALUES  ('bar condtions','Don\'t be stealin my stuff','2')
</code></pre>
"
"11986704","<pre><code>ArrayList&lt;String&gt; newArrayList = com.google.common.collect.Lists.newArrayList(new String[] { ""A"",""B"",""C""});
</code></pre>
"
"8763235","<p><code>boolean value = Pattern.compile(""&gt;"").matcher(""a&gt;5"").find(); // returns true</code></p>
"
"12015711","<p>You will need to close the output stream properly within the service to avoid this exception.
If you are using a third party library then make sure that you have set the response header </p>

<pre><code>Content-Type
Content-Length
</code></pre>

<p>If you are using a java service you can get the content-length from method</p>

<pre><code>File.length()
</code></pre>
"
"12020605","<p>Try <code>Integer.parseInt()</code> to do this.....</p>

<pre><code>public boolean chkInt(final int[] array){
    int key = false;

    for (Integer i : array){


          try{

                   Integer.parseInt(i);
                   key = true;
                   return key;

             }catch(NumberFormatException ex){

                   key = false;

                   return key;

              }


     }
}
</code></pre>
"
"8809997","<p>You can use <code>abstract</code> for the constants class too, even better than the private constructor. If you use an interface it would be usable outside the class hierarchy and one may simply use <code>implements</code> though hiding the origin (interface name).</p>

<p>One issue though. If you import a class only for a constant, the compiler may remove the import in the .class and fill in the constant itself. If one later changes the constant's value, the using class will not automatically recompile, and maintain the old value.</p>
"
"8822025","<p>Easiest way is to extract the part where you have the user name correction logic</p>

<pre><code>if (username.length() &lt; 8 ) {
    username = username  + ""random"" ; // add some random string
}
</code></pre>

<p>into a method and test the return value of that method.</p>

<pre><code>public string GetValidUsername(string userName){
    if (username.length() &lt; 8 ) {
        return username  + ""random"" ; // add some random string
    }
    return username;
}
</code></pre>

<p>with this you can pass different types of username and test the behavior of your code. </p>
"
"8850620","<p>Because your for loop looses meaning if you're returning true anyway.<br/>
If you want to stop loop use <code>break;</code> instead of first return.</p>
"
"8864894","<p>I had to change what you had:</p>

<pre><code>&lt;systemPath&gt;${java.home}/../lib/tools.jar&lt;/systemPath&gt;
</code></pre>

<p>to the explicit path, using the JDK not the JRE like bmargulies said:</p>

<pre><code> &lt;systemPath&gt;C:/Program Files/Java/jdk1.6.0_24/lib/tools.jar&lt;/systemPath&gt;
</code></pre>

<p>Hope that helps.</p>
"
"8880973","<p>The separation you write about does not exist in Java. You can separate the method definitions (non static ones) to an <code>interface</code>.</p>
"
"12203717","<p>On my iPad...The Strategy should be something like having aun attribute that is modified every time you do a get on it..this will work if the attribute is accessed through the getter on equals. You mention that equals can not be override so the attribute should be private and the modification of the value happen before and after the value is read, to make sure it works no matter if it is the first or the second part of the equals.</p>

<p>Something like( sorry for any syntax errors):</p>

<pre><code>public class TestEquals{

 private int id;

 public int getId(){
    int temp;
    id++;
    temp=id;
    id++;
    return temp;
 }
}
</code></pre>
"
"12271789","<p>The more assumptions you can make, the faster it will be and the more brittle the solution.</p>

<p>For this reason the fastest solution is not always the best solution.</p>

<pre><code>public class Main {
    public static void main(String... args) {
        StringBuilder sb = new StringBuilder();
        sb.append(""&lt;book&gt;\n"");
        for (int i = 0; i &lt; 1000000; i += 3)
            sb.append(""&lt;person&gt;\n"" +
                    ""  &lt;first&gt;Kiran&lt;/first&gt;\n"" +
                    ""  &lt;last&gt;Pai&lt;/last&gt;\n"" +
                    ""  &lt;age&gt;22&lt;/age&gt;\n"" +
                    ""&lt;/person&gt;\n"" +
                    ""&lt;person&gt;\n"" +
                    ""  &lt;first&gt;Bill&lt;/first&gt;\n"" +
                    ""  &lt;last&gt;Gates&lt;/last&gt;\n"" +
                    ""  &lt;age&gt;46&lt;/age&gt;\n"" +
                    ""&lt;/person&gt;\n"" +
                    ""&lt;person&gt;\n"" +
                    ""  &lt;first&gt;Steve&lt;/first&gt;\n"" +
                    ""  &lt;last&gt;Jobs&lt;/last&gt;\n"" +
                    ""  &lt;age&gt;40&lt;/age&gt;\n"" +
                    ""&lt;/person&gt;\n"");
        sb.append(""&lt;/book&gt;\n"");
        String text = sb.toString();

        for (int i = 0; i &lt; 3; i++) {
            timeIndexOf(text);
            timeSplitXML(text);
        }
    }

    private static void timeSplitXML(String text) {
        long start = System.nanoTime();
        String[] parts = text.split(""&lt;/[^&gt;]+&gt;\\s*&lt;[^&gt;]+&gt;"");
        parts[0] = parts[0].split(""&gt;"")[2];
        List&lt;String[]&gt; nodes = new ArrayList&lt;String[]&gt;();
        for (int i = 1; i &lt; parts.length - 2; i += 3)
            nodes.add(Arrays.copyOfRange(parts, i, i + 3));
        long time = System.nanoTime() - start;
        System.out.printf(""Parsing using split %,d nodes took %.1f seconds%n"", nodes.size(), time / 1e9);
    }

    private static void timeIndexOf(String text) {
        long start = System.nanoTime();
        int pos = text.indexOf('&gt;') + 1;
        List&lt;String[]&gt; nodes = new ArrayList&lt;String[]&gt;();
        while (pos &gt; 0) {
            pos = text.indexOf('&gt;', text.indexOf('&gt;', pos + 1) + 1) + 1;
            String[] node = new String[3];
            int pos2 = text.indexOf('&lt;', pos);
            node[0] = text.substring(pos, pos2);
            if (node[0].trim().length() &lt; 1) break;
            pos = text.indexOf('&gt;', text.indexOf('&gt;', pos2 + 1) + 1) + 1;
            pos2 = text.indexOf('&lt;', pos);
            node[1] = text.substring(pos, pos2);
            pos = text.indexOf('&gt;', text.indexOf('&gt;', pos2 + 1) + 1) + 1;
            pos2 = text.indexOf('&lt;', pos);
            node[2] = text.substring(pos, pos2);
            pos = text.indexOf('&gt;', text.indexOf('&gt;', pos2 + 1) + 1) + 1;
            nodes.add(node);
        }
        long time = System.nanoTime() - start;
        System.out.printf(""Parsing using indexOf %,d nodes took %.1f seconds%n"", nodes.size(), time / 1e9);
    }
}
</code></pre>

<p>prints</p>

<pre><code>Parsing using indexOf 1,000,002 nodes took 1.1 seconds
Parsing using split 1,000,002 nodes took 1.7 seconds
Parsing using indexOf 1,000,002 nodes took 0.5 seconds
Parsing using split 1,000,002 nodes took 1.9 seconds
Parsing using indexOf 1,000,002 nodes took 0.4 seconds
Parsing using split 1,000,002 nodes took 1.7 seconds
</code></pre>
"
"12275126","<p>I appreciate all the super useful and enlightening answers, however, the simple counter with static and volatile seems to work fine:</p>

<pre><code>private static volatile int crntThrdCnt = 0;
</code></pre>

<p>and then</p>

<pre><code>    @Override
public void run() 
{
    crntThrdCnt++;
    this.runBatchInstance();
    crntThrdCnt--;

    if(crntThrdCnt == 0)
    {
        ProcessManager prcsMgr = new ProcessManager();
        Batch batch = prcsMgr.getBatch(this.batchID);
        batch.setEndTime(new Date());
        prcsMgr.updateBatch(batch);
    }
}
</code></pre>
"
"12281591","<p>You could always have two different collections, a collection A and a collection B.</p>

<p>Then, whenever you added something to <code>B</code>, you would add it to <code>A</code>, and whenever removed something from <code>B</code> you would also remove it from <code>A</code>.</p>

<p>When removing from <code>A</code> you would check whether or not <code>B</code> contained the object to be removed, and, if so, you would remove it.</p>

<p>However, when adding to <code>A</code>, you would not touch <code>B</code>.</p>

<p>This might be less space efficient than an optimal solution, but it's not going to change time complexity (except for maybe removals from <code>A</code>.)</p>
"
"12336379","<p>Try adding:</p>

<pre><code>-classpath .
</code></pre>

<p>By default, rmic's classpath is derived from the CLASSPATH environment variable (thanks EJP for the correction).</p>
"
"9064060","<p>You will need to make an object of myClass1 to call this method. You cannot directly call methods until class2 is not extending class1.</p>

<pre><code>myClass1 obj = new myClass1();
obj.test();
</code></pre>

<p><strong>NOTE</strong></p>

<p>Follow proper Java Naming Conventions.</p>

<p>Class name should be <code>MyClass1</code></p>
"
"12365499","<p>Try replacing the <code>,</code> and then converting into an Integer/float/double</p>

<pre><code>String mysting=""37,78584"";
String newString=myString.replace("","", """");
int value=Integer.parseInt(newString);
</code></pre>
"
"9066958","<p>Libraries are not searched within the classpath, the system PATH and the property <code>java.library.path</code>.</p>

<p>In your case may be a custom <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/ClassLoader.html"" rel=""nofollow"">ClassLoader</a> implementation, especially the <code>findLibrary(..)</code> and <code>loadLibrary(..)</code> methods. This would allow to select an appropriate library based on the detected OS.</p>
"
"12368172","<p>With <code>getMethod(""getInstance"", null)</code> you are saying ""get a method with name 'getInstance' and no parameters"".</p>

<p>When you type <code>method.invoke(null, null)</code> you are saying ""invoke this method on object 'null', <strong>and pass 'null' as the first parameter</strong>"".</p>

<p>You should remove that last <code>null</code> and just type:</p>

<pre><code>Object object = method.invoke(null);
</code></pre>
"
"9081591","<p>you can use the <code>char</code> datatype instead of <code>String</code> for <code>x</code> to get your work done if the symbols are single character</p>

<p><code>(x == '$') &amp;&amp; (row &lt;= 10)</code></p>
"
"9081729","<p>I think all the above answers are jumping to conclusion, yes I agree with most of them but your problem is that you dont know what x is.</p>

<p>You need to log it out but try adding a line </p>

<pre><code>System.out.println(x);

You will see what is being compared. 

A test shows what you have could work;


import org.junit.Test;
import static org.junit.Assert.assertTrue;

public class BooleanLogicTest {

@Test
public void testLogical() {
  String x = "" "";
  boolean result = x == "" "";
  assertTrue(""Could be true"", result);
}

@Test
public void testCompare() {
  String x = "" "";
  boolean result = "" "".equals(x);
  assertTrue(""Could be true"", result);
}

@Test
public void testLogicalX() {
  String x = ""*"";
  boolean result = x == ""*"";
  assertTrue(""Could be true"", result);
} 

@Test
public void testCompareX() {
  String x = ""*"";
  boolean result = ""*"".equals(x);
  assertTrue(""Could be true"", result);
  System.out.println(x);
}
</code></pre>

<p>}</p>
"
"9117929","<pre><code>if( value | 0x40 ) return 7;
else if( value | 0x20 ) return 6;
else if( value | 0x10 ) return 5;
else if( value | 0x8 ) return 4;
else if( value | 0x4 ) return 3;
else if( value | 0x2 ) return 2;
else if( value | 0x1 ) return 1;
</code></pre>
"
"9118396","<p>Just to add another approach</p>

<pre><code>public static int mostSignificantBit(int b) {
    for (int i = 1 &lt;&lt; 30, j = 0; i &gt; 0; i /= 2, j++) {
           if ((b &amp; i) &gt; 0) {
            return 31-j;
        }
    }
    return -1;
}
</code></pre>
"
"12503276","<p>Get the file input, then split it using a '.' as a delimiter maybe?
to set a delimiter:</p>

<pre><code>Scanner line_scanner = new Scanner(line).useDelimiter(""."");
</code></pre>

<p>read the file URL twice, once for the filename and once for the extension.</p>
"
"12516798","<p>Use a different scope, or reuse the existing <code>score</code> or preferably using a different name.</p>

<pre><code>{
    int score = 0;

} // scope of Score has ended.

if(coinCollected == 1) {
    int score = 1;

}
</code></pre>
"
"12550849","<p>Just use the following:</p>

<pre><code>doublevalue+""""; 
</code></pre>

<p>This will work for any data type.</p>

<p><strong>Example:</strong></p>

<pre><code>Double dd=10.09;
String ss=dd+"""";
</code></pre>
"
"9207841","<pre><code>URL url = new URL(""http://smscountry.com/SMSCwebservice.asp"");
HttpURLConnection urlconnection = (HttpURLConnection) url.openConnection();
</code></pre>

<p><strong>[Edit]</strong></p>

<pre><code>urlconnection.setRequestMethod(""POST""); 
urlconnection.setRequestProperty(""Content-Type"",""application/x-www-form-urlenc‌​oded"");     
urlconnection.setDoOutput(true); 

OutputStreamWriter out = new OutputStreamWriter(urlconnection.getOutputStream());
out.write(postData); 
out.close(); 

BufferedReader in = new BufferedReader(new InputStreamReader(urlconnection.getInputStream()));

String decodedString; 

while ((decodedString = in.readLine()) != null) { 
  retval += decodedString; 
}
</code></pre>
"
"9237596","<p>I'm not sure if this will fix it, but I do see a problem with your code. The <code>@ResponseBody</code> annotation should come before the returned item, in this case, <code>FooDTO</code>. Also I hope you statically imported 'RequestMethod.GET'. Otherwise you should change 'GET' to 'RequestMethod.GET'. So the method should read: </p>

<pre><code>@RequestMapping(method = RequestMethod.GET)
    public @ResponseBody FooDTO index() {
        // return fooDTO
    }
</code></pre>
"
"9254563","<p>I would use an if else statement or (ick) a switch case statement. Since java is compiled you can't just write code and have java execute it.</p>

<p>For example:</p>

<pre><code>Object duck = new Object();
String userInput = System.in.read();
if (userInput = ""duck.quack();""){
//do something
duck.quack();
}
else if (userInput = ""duck.fly();""){
//do something else
duck.fly();
}
//etc.
</code></pre>

<ul>
<li>Edited to add a code example</li>
</ul>
"
"9271942","<pre><code>public boolean clearSelection(){
    int i = 0;
    if (!this.m_SelectedComps.isEmpty())
    {
        i = 1;
        Iterator localIterator = this.m_SelectedComps.iterator();
        while (localIterator.hasNext())
            ((AnnotComponent)localIterator.next()).remove();
        this.m_SelectedComps.clear();
     }
     return (i!=0);
}
</code></pre>
"
"13207792","<p>Try this</p>

<pre><code>public static void type(String characters) {
Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
StringSelection stringSelection = new StringSelection( characters );
clipboard.setContents(stringSelection, instance);
//control+V is for pasting...
robot.keyPress(KeyEvent.VK_CONTROL);
robot.keyPress(KeyEvent.VK_V);
robot.keyRelease(KeyEvent.VK_V);
robot.keyRelease(KeyEvent.VK_CONTROL);
}
</code></pre>
"
"13324826","<p>How about this?</p>

<pre><code>int getdec(const string&amp; input)
{
  int sum=0; char prev='%';
  for(int i=(input.length()-1); i&gt;=0; i--)
  {
    if(value(input[i])&lt;sum &amp;&amp; (input[i]!=prev))
    {       sum -= value(input[i]);
            prev = input[i];
    }
    else
    {
            sum += value(input[i]);
            prev = input[i];
    }
  }
  return sum;
}
</code></pre>
"
"9296160","<pre><code>import java.util.Set;

Set&lt;Integer&gt; mySet = new HashSet&lt;Integer&gt;(10); // do you know how many elements do you need?
boolean elementNotThere;
do {
    int myInt = r.nextInt(hoogste + 1 - laagste);
    elementNotThere = mySet.add(myInt);
} while ( ! elementNotThere );
</code></pre>
"
"9330222","<p><strong>Edit: OK, I changed my answer to fix the problem.</strong></p>

<p>If that couldn't be done, then there would be some cases where a class wouldn't be able to implement an iterface and extend a class because they have the same method with different access modifiers.</p>

<pre><code>public Interface A {
  public void method();
}

public abstract classs B {
  protected void method();
}

public class AB extends B implements A {
  /*
   * This would't be possible if the access modifier coulnd't be changed
   * to less restrictive
  */
  public void method();
}
</code></pre>
"
"14180982","<p>To re-size a button in Applet:</p>

<pre><code>public class Button extends JApplet implements ActionListener {

   private JButton button;

   public void init() {
      Container container = getContentPane();
      container.setLayout(null);
      container.setBackground(Color.white);
      button = new JButton(""Press Me"");
      button.setSize(getWidth()/2,20);
      button.setLocation(getWidth()/2-button.getSize().width/2, getHeight()/2-button.getSize().height/2);
      container.add(button);
      button.addActionListener(this);
   }

   public void actionPerformed(ActionEvent e) {
      int width = (button.getSize().width == getWidth()/2) ? getWidth()/4 : getWidth()/2;
      int height = button.getSize().height;
      button.setSize(width,height);
      button.setLocation(getWidth()/2-width/2, getHeight()/2-height/2);
   }
}
</code></pre>

<p>To re-size a button in JFrame:</p>

<pre><code>public class Button extends JFrame implements ActionListener {
   private JButton button;

   public Button(String title) {
      Container container = getContentPane();
      container.setLayout(null);
      container.setBackground(Color.white);
      setTitle(title);
      setSize(400,400);
      button = new JButton(""Press Me"");
      button.setSize(getWidth()/2,20);
      button.setLocation(getWidth()/2-button.getSize().width/2,
                     getHeight()/2-button.getSize().height/2);
      container.add(button);
      button.addActionListener(this);
    }

   public void actionPerformed(ActionEvent e) {
      int width = (button.getSize().width == getWidth()/2) ? getWidth()/4 : getWidth()/2;
      int height = button.getSize().height;
      button.setSize(width,height);
      button.setLocation(getWidth()/2-width/2, getHeight()/2-height/2);
   }

   public static void main(String[] args) {
      Button button = new Button(""Test"");
      button.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      button.setVisible(true);
   }
}
</code></pre>
"
"9373434","<p>I hope it is helpfull..
For getting image from res/drawable..</p>

<pre><code>Resources res = getResources();
Drawable drawable = res.getDrawable(R.drawable.myimage);
</code></pre>
"
"9380798","<p>All objects in java are inherited from the Object.class.
There is a <strong>toString()</strong> method which is often used to get a representive name of the object.</p>

<p>You can re-implement this method:</p>

<pre><code>@Override
public String toString() {      
    return ""The name of this Object"";
}
</code></pre>
"
"14444713","<p>My best solution (so far) for calculating the number of days difference: </p>

<pre><code>//  This assumes that you already have two Date objects: startDate, endDate
//  Also, that you want to ignore any time portions

Calendar startCale=new GregorianCalendar();
Calendar endCal=new GregorianCalendar();

startCal.setTime(startDate);
endCal.setTime(endDate);

endCal.add(Calendar.YEAR,-startCal.get(Calendar.YEAR));
endCal.add(Calendar.MONTH,-startCal.get(Calendar.Month));
endCal.add(Calendar.DATE,-startCal.get(Calendar.DATE));

int daysDifference=endCal.get(Calendar.DAY_OF_YEAR);
</code></pre>

<p>Note, however, that this assumes less than a year's difference!  </p>
"
"9416653","<p>it's probably caused by the compiler's <code>optimization settings</code>. check optimization settings on different machines. try to disable all optimizations or equal the optimization level.</p>
"
"14641337","<p>In lines 4 and 5 of the question, don't these 2 statements represent the same thing?</p>

<pre><code>int val = str.charAt(i) - 'a';
(1 &lt;&lt; val) 
</code></pre>

<p>For example, <code>if (str.charAt(i)) == 'b'</code>, which is <code>00000010</code> (looking only at bits 0 to 7)</p>

<pre><code>int val = 0000001;
(1 &lt;&lt; val) == 00000010;
</code></pre>

<p>Then, line 5 has this check <code>((checker &amp; (1 &lt;&lt; val)) &gt; 0)</code></p>

<p>Instead, why do a <code>- 'a'</code> on val, why can't you simply use <code>(checker &amp; val) &gt; 0)</code>?</p>
"
"9428075","<p>Two ways to do it, neither is perfect:</p>

<ul>
<li>Define an extension for your 'actions' and map that to your servlet (like the .do in Struts 1).</li>
<li>Have all the servlet requests go to a specific sub-path (eg /actions/*)</li>
</ul>

<p>The mapping rules in <code>web.xml</code> are pretty limited, because the container matches extensions <em>after</em> path rules, it's not possible to map a servlet to <code>/*, except *.jsp</code>.</p>

<p>As usual, I don't think ""use a framework"" is necessarily the answer - if the project is relatively small, the added complexity may not be worth it.</p>
"
"15515046","<p>Why not use <code>StringWriter</code> instead? I think this should be able to provide what you need.</p>

<p>So for example:</p>

<pre><code>StringWriter strOut = new StringWriter();
...
String output = strOut.toString();
System.out.println(output);
</code></pre>
"
"9562616","<p>Instead of using <code>replaceAll</code> use straight regex with <a href=""http://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html"" rel=""nofollow"">Pattern</a>. And just replace your first match rather than global. Or just use <a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#replaceFirst%28java.lang.String,%20java.lang.String%29"" rel=""nofollow""><code>replaceFirst()</code></a> </p>
"
"16064283","<p>I hope that it will helpful to you .try this code.</p>

<pre><code>import java.io.*;

class Cast

{

public static void main(String args[]) throws IOException

{

BufferedReader br=new BufferedReader(new InputStreamReader(System.in));

byte a=20;

short s=31468;

int i=12345678;

char c=’c';

float f=3.56f;

//Widening or promotion [java question bank][1]

System.out.println(“a=(short)  “+(short) a);

System.out.println(“a=(int)  “+(int) a);

System.out.println(“a=(long)  “+(long)a);

System.out.println(“a=(float)  “+(float)a);

System.out.println();

System.out.println();

System.out.println(“s=(int) “+(int)s);

System.out.println(“s=(long)  “+(long)s);

System.out.println(“s=(float)  “+(float)s);

System.out.println();

System.out.println();

System.out.println(“i=(long)  “+(long)i);

System.out.println(“i=(float)  “+(float)i);

System.out.println(“i=(double)  “+(double)i);


//Narrowing using [java question bank][2]

System.out.println(“f=(byte)  “+(byte)f);

System.out.println(“f=(short)  “+(short)f);

System.out.println(“f=(char)  “+(char)f);

System.out.println(“f=(long)  “+(long)f);

System.out.println();

System.out.println();

System.out.println(“i=(byte)  “+(byte)i);

System.out.println(“i=(short)  “+(short)i);

System.out.println();

System.out.println();

System.out.println(“s=(byte)  “+(byte)s);


}

}
</code></pre>
"
"16119406","<p>Try this code. This will remove all the rows from JTable. </p>

<pre><code>DefaultTableModel model=new DefaulTableModel(rows,cols);
JTable table=new JTable(model);
for(int i=0;i&lt;model.getRowCount();i=i+0)
{
 model.removeRow(0);
 revalidate();
 }
</code></pre>
"
"16440996","<pre><code>String str1=""this is a string"";
String str2=str1.clone();
</code></pre>

<p>How about copy like this?
I think to get a new copy is better, so that the data of <code>str1</code> won't be affected when <code>str2</code> is reference and modified in futher action.</p>
"
"9677727","<p><code>""user.home""</code> returns the home directory of the user, not the ""My Documents"" folder.
On Windows, it would be ""C:\Users\Username\"" for Vista or 7, or ""C:\Documents and Settings\Username"" for XP</p>

<p>What you want is:</p>

<pre><code>System.out.println(System.getProperty(""user.home"") + File.separatorChar + ""My Documents"");
</code></pre>
"
"16801226","<p>I was getting the same error on my ubuntu machine because of a mishap with the /etc/hosts file. I had commented out the mapping of localhost to 127.0.0.1, and to complicate matters further there was a swap file hanging around.</p>

<p>This was the first line of my /etc/hosts:</p>

<pre><code>127.0.0.1       #localhost
</code></pre>

<p>Deleting the # fixed the problem, whereas rebooting understandably had not.</p>
"
"16969002","<p>I have such a problem too, and I have found a effective solution, hope it can help you:</p>

<p>This has something to do with AJAX, and my solution is :
add <code>data-ajax=""false""</code> as an attribute of your <code>&lt;form&gt;</code>. Just like I did:</p>

<pre class=""lang-html prettyprint-override""><code>&lt;form id=""reg-input"" action=""/Myservlet"" method=""post"" data-ajax=""false""&gt;
    &lt;!-- .. --&gt;
&lt;/form&gt;
</code></pre>

<p>this will cause your ajax unavailable, take care.</p>
"
"9699372","<p>I think you are missing something. Static methods (like the main method in <code>Testclass1</code> and <code>Testclass2</code>) cannot override subclass methods.</p>
"
"17292162","<p>Use percentages, in the android:gradientRadius field.</p>

<p>Example:</p>

<p>For a 50% radious set to 50000%p</p>

<pre><code>&lt;gradient
                android:angle=""45""
                android:centerX=""0.5""
                android:centerY=""0.5""
                android:endColor=""#123123""
                android:gradientRadius=""50000%p""
                android:startColor=""#456456""
                android:type=""radial"" /&gt;
</code></pre>
"
"17349374","<p>The simplest answer, is to open the PDF file with Adobe Acrobat then:</p>

<ol>
<li>click on File</li>
<li>select Properties</li>
<li>click on the Fonts tab</li>
</ol>

<p>This will show you a list of all fonts in the document. Any font that is embedded will display ""(Embedded)"" next to the font name. </p>

<p>For example:</p>

<p>ACaslonPro-Bold (Embedded)</p>

<p>where ACaslonPro-Bold is derived from the file name that you embedded it with (e.g. <code>FontFactory.register(""/path/to/ACaslonPro-Bold.otf"",...</code></p>
"
"17362683","<pre><code>int[] arr= new int[]{-5,-5,-6,-6,-6};
Set&lt;Integer&gt; newSet = new HashSet&lt;Integer&gt;();
for(int i=0;i&lt;arr.length;i++)
  newSet.add(Math.abs(arr[i]));    

System.out.println(newSet.size());
</code></pre>
"
"17601371","<p>I also experience heap size errors and fixed it by changing the following line in my eclipse.ini</p>

<p>-Dosgi.requiredJavaVersion=1.5 -Xms40m -Xmx1024m -XX:MaxPermSize=512m</p>

<pre><code>to 
</code></pre>

<p>-Dosgi.requiredJavaVersion=1.7 -Xms512m -Xmx1024m -XX:MaxPermSize=512m</p>

<p>in other words, I increased the initial heap size.</p>

<p>I also changed the vm parameter to the bin subdirectory of the selected jre version under Windows > Preferences > Java > Installed JRE's > Location</p>

<p>Not sure which change fixed it. but it works now.  </p>
"
"17667877","<pre><code>class myFileReaderThatStarts with arguments
{

 class MissingArgumentException extends Exception{      
      MissingArgumentException(String s)
  {
     super(s);
  }

   }    
public static void main(String[] args) throws MissingArgumentException
{
//You can test args array for value 
if(args.length&gt;0)
{
    // do something with args[0]
}
else
{
// default in a path 
// or 
   throw new MissingArgumentException(""You need to start this program with a path"");
}
}
</code></pre>
"
"17738408","<p>Use this to set the setting:</p>

<pre><code>public static void SetCheckedSetting(Context context, String value)
{
    SharedPreferences settings = getSharedPreferences(""prefs"", 0);
    SharedPreferences.Editor editor = settings.edit();
    editor.putString(""examplesetting"", value);
    editor.commit();
}
</code></pre>

<p>And this to get the setting:</p>

<pre><code>public static String GetCheckedSetting(Context context)
{
    SharedPreferences settings = getSharedPreferences(""prefs"", 0);
    return settings.getString(""examplesetting"", """");
}
</code></pre>

<p>To pass the context you can simply use <code>this</code> keyword.</p>

<p>It is important that you do <strong>not</strong> store <code>SharedPreferences</code> as a static variable. If you do it causes a memory leak. See: <a href=""http://android-developers.blogspot.in/2009/01/avoiding-memory-leaks.html"" rel=""nofollow"">http://android-developers.blogspot.in/2009/01/avoiding-memory-leaks.html</a></p>
"
"9789947","<p>I've changed res method:</p>

<pre><code>public static void res(File arg) throws IOException {
        if (arg.contains("".DS_Store"")) {
            return;
        }
</code></pre>

<p>A mac-issue (or should filter non-image files, as was suggested)!</p>
"
"17801762","<p>The lists don't have to be the same size: </p>

<pre><code>public class InterleaveTwoLists&lt;X&gt; {

    public List&lt;X&gt; interleaveLists(final List&lt;X&gt; first, final List&lt;X&gt; second) {

        return new AbstractList&lt;X&gt;() {
            private int minSize;
            private int combinedMinSize;
            private int size;
            private List&lt;X&gt;largerList;
            {{
                minSize = Math.min(first.size(), second.size());
                combinedMinSize = minSize*2;
                size = first.size() + second.size();
                largerList = first.size() &gt; minSize ? first : second;
            }}

            public int size() {
                return size;
            }

            public X get(int index) {
                if (index &lt; combinedMinSize) {
                    return index % 2 == 0 
                        ? first.get(index / 2) 
                        : second.get(index / 2);
                }
                else { 
                    return largerList.get(index-minSize);
                }
            }
        };
    }
}
</code></pre>

<p>To test this: </p>

<pre><code>public class InterleaveTwoListsTest {

    private static final Logger log = 
        LoggerFactory.getLogger(InterleaveTwoListsTest.class);

    List&lt;String&gt; first = new ArrayList&lt;String&gt;() {
    { 
        add(""one""); add(""three""); add(""five""); 
        add(""seven""); add(""eight""); add(""nine"");
    }};

    List&lt;String&gt; second = new ArrayList&lt;String&gt;() {
    { 
        add(""two""); add(""four""); add(""six""); 
    }};


    private InterleaveTwoLists&lt;String&gt; interleaveTwoLists;

    @Before
    public void setUp() throws Exception {
        interleaveTwoLists = new InterleaveTwoLists&lt;&gt;();
    }

    @Test
    public void test() {
        List&lt;String&gt; combinedList = interleaveTwoLists.interleaveLists(first, second);
        for( int i = 0; i &lt; first.size() + second.size(); i++) { 
            log.debug(""{}: {}"", i, combinedList.get(i));
        }
    }
}
</code></pre>
"
"17983769","<p>hey I think that you just copy your compiled class files and copy the jre folder and make the following as the content of the batch file and save all together any windows machine and just double click</p>

<pre><code>@echo
setpath d:\jre
d:
cd myprogfolder
java myprogram
</code></pre>
"
"18036821","<p>I think the codebase that you specify for the client is not correct:</p>

<p><code>-Djava.rmi.server.codebase=""file:/C:/Users/Public/RMI/compute.jar""</code></p>

<p>This will not help the server to find client.Pi .</p>

<p>The ""Java Tutorial RMI"" specifies</p>

<p><code>-Djava.rmi.server.codebase=file:/c:/home/jones/public_html/classes/</code></p>

<p>and that's the dir under which there is client/Pi.class (i.e. if one follows the tutorial, where ""jones"" wrote the client).</p>

<p>Unfortunately, even when following my own advice, meaning in my situation specifying</p>

<p><code>-Djava.rmi.server.codebase=file:/h:/rmi-example/jones/src/</code></p>

<p>when I start the client, I get the same exception as you do.</p>

<p>Haven't solved it yet. I'm hoping java option <code>-verbose:class</code> will shed some light on the problem.</p>
"
"18073793","<pre><code>class kkkk {
  public static void main(String args[]){
    A[] arr = new A[4];
    for( int i=0; i&lt;4; i++ ){
      arr[i] = new A();
      System.out.prin(i);
    }
  }
}
</code></pre>
"
"18113285","<p>This helped me: for obtaining a SOAP-able object as XML string.    </p>

<pre><code>JAXBContext jc = JAXBContext.newInstance(o.getClass());
Marshaller m = jc.createMarshaller();
StringWriter writer = new StringWriter();
m.marshal( o, new PrintWriter(writer) );
return writer.toString();
</code></pre>
"
"9840578","<p>You need to set your datafields before the constructor and make getter en setter methods like this:</p>

<pre><code>public class Game {

private StageObj gamestage = null;
private PlayerObj player = null;

public Game(
    boolean createstage, //For sorting purposes
    int slength, 
    int sheight, 
    boolean createplayer, 
    int plength, 
    int pheight, 
    boolean playersprite,
    BufferedImage psprite, 
    boolean defaultcontrols,
    String pcontrols, 
    boolean test
    ) {
if(test == true) { //if test is true, test
    new Test();
}else{ //otherwise create a stage is createstage is true and
    if(createstage == true) {
        gamestage = new StageObj(slength, sheight);
    }
    if(createplayer==true) {
        player = new PlayerObj(plength, pheight, psprite, pcontrols);
    }
}
}

public Game() {
    gamestage = new StageObj(100, 100);
    player = new PlayerObj(10, 10);
}

public StageObj givestageobj() {
    return gamestage;
}

public PlayerObj giveplayerobj() {
    return player;
}

}


public Game() {
new StageObj(100, 100);
new PlayerObj(10, 10);
}

public StageObj givestageobj() {
return gamestage;
}

public PlayerObj giveplayerobj() {
return player;
}

public int getSlenght(){
return slenght;
}

public void setSlenght(int slenght){
this.slenght = slenght;
}

}
</code></pre>

<p>And so on of course you need to add other classes, and not do everything in one class. You need a Player and Stage class ;-) Also take a look at the Java Lessons from Oracle <a href=""http://docs.oracle.com/javase/tutorial/java/javaOO/"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/java/javaOO/</a></p>
"
"9889789","<p>Incasesensitive search can be achieved by using the sql syntax <code>ucase(FULLNAME)</code> and <code>ucase(a.string)</code> you're transforming both to uppercase before comparing</p>
"
"9895018","<p>you can use this:</p>

<pre><code>    /**
     * Read from file
     *
     * @param file the path to the file to be read
     * @return the text in a string or false if the reading failed
     */
    public static String readFile(String file)
    {

//      READ FILE
        try {
            BufferedReader in = new BufferedReader(new FileReader(file));
            String str = """", strBuffer;

            while ((strBuffer = in.readLine()) != null) {
                str = str.concat(strBuffer);
            }

            in.close();
            return str;

        } catch (Exception ex) {
            System.err.println(""Could not read file: "" + file);
            ex.printStackTrace();
            return false;
        }
    }
</code></pre>
"
"18963156","<p>Send Binary Content
Binary data is shared using the ACTION_SEND action combined with setting the appropriate MIME type and placing the URI to the data in an extra named EXTRA_STREAM. This is commonly used to share an image but can be used to share any type of binary content:</p>

<pre><code>Intent shareIntent = new Intent();
shareIntent.setAction(Intent.ACTION_SEND);
shareIntent.putExtra(Intent.EXTRA_STREAM, uriToImage);
shareIntent.setType(""image/jpeg"");
startActivity(Intent.createChooser(shareIntent, getResources().getText(R.string.send_to)));
</code></pre>

<p>source <a href=""http://developer.android.com/training/sharing/send.html"" rel=""nofollow"">http://developer.android.com/training/sharing/send.html</a> </p>
"
"9916828","<p>You are not iterating correctly.</p>

<p>you need to do</p>

<pre><code>
HashSet set = ...
Iterator _i = set.iterator();
while(_i.hasNext()) {
   Object o = _i.next();
}
</code></pre>

<p>start there.</p>

<p>Also, as to your question</p>

<p>o1 = o2</p>

<p>Nothing happens to memory. In java, everything is either a primitive or a class. All classes reside in the heap, so o1 = o2 just copies the pointer to o2 over to the variable o1. If o2 is a primitive, it copies the value (rather than a pointer) into o1</p>
"
"9945608","<p>Declare one method and pass the userinput through that method. Then use <code>setString</code> or <code>setLong</code> depending on your input data type within the preparedstement object.</p>
"
"9962241","<p>Now its working fine.</p>

<pre><code>package test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class test {

    public static void main(String[] args) {


        int a[] = {-1,-2};
        int b[] = {-2,-3,-4};

        try{
            System.out.println(getMaxCommon(a,b));
        }catch(Exception e){
            System.out.println(""Not found common no"");
        }
    }

    public static int getMaxCommon(int[] arr1,int[] arr2) {

        int arr1Temp[] = arr1.clone();
        int arr2Temp[] = arr2.clone();

        Arrays.sort(arr1Temp);
        Arrays.sort(arr2Temp);

        List&lt;Integer&gt; list1 = new ArrayList&lt;Integer&gt;();
        List&lt;Integer&gt; list2 = new ArrayList&lt;Integer&gt;();

        for(int i=0;i&lt;arr1Temp.length;i++){
            list1.add(arr1Temp[i]);
        }

        for(int i=0;i&lt;arr2Temp.length;i++){
            list2.add(arr2Temp[i]);
        }


        if(arr1Temp.length &lt; arr2Temp.length){
            for(int i=arr1Temp.length-1;i&gt;=0;i--){
                if(list2.contains(arr1Temp[i])){
                    return arr1Temp[i];
                }
            }
        }else{
            for(int i=arr2Temp.length-1;i&gt;=0;i--){
                System.out.println();
                if(list1.contains(arr2Temp[i])){
                    return arr2Temp[i];
                }
            }
        }

        return (Integer) null;
    }
}
</code></pre>
"
"20635834","<p>Basically you can have functionality like eclipse. Eclipse maintains a <code>.lock</code> file to lock the workspace. You can similarly create an empty <code>.lock</code> file in your workspace.</p>

<p>On starting every instance, you should check if <code>.lock</code> file is present and then proceed further accordingly. If file is not present you should create it so that other instance will find that workspace is locked. </p>
"
"10015694","<p>Keep in mind that TreeMap sorts by the natural ordering of its keys. Hence you can create a key with comparable based on the length of it's value. For example (Since I am on Lunch the code isn't perfect but should get you to what you need):</p>

<pre><code>package com.trip.test;    

import java.util.SortedMap;    
import java.util.TreeMap;    

import org.slf4j.Logger;    
import org.slf4j.LoggerFactory;    

public class ComparisonTest {    

private static Logger logger = LoggerFactory.getLogger(ComparisonTest.class);    

private static String[] a = {""1"",""2"",""3"",""4""};    
private static String[] b = {""A"",""B"",""D""};    
private static String[] c = {""1"",""B"",""D"",""1"",""B"",""D""};    
/**    
 * @param args    
 */    
static SortedMap&lt;KeyWithLength, String[]&gt; myMap = new TreeMap&lt;KeyWithLength, String[]&gt;();    

static {    

        myMap.put(new KeyWithLength(""a"", a.length), a);    
        myMap.put(new KeyWithLength(""b"", b.length), b);    
        myMap.put(new KeyWithLength(""c"", c.length), c);             
}    

public static void main(String[] args) {    

    // print Map    
    logger.info(""Original Map:"");    

    int i = 0;    
    for (String[] strArray: myMap.values() ){    
        logger.info(String.format(""*** Entry %s: "", i++));    
        printStrings(strArray);    
    }    

    // chop off 2 shortest    
    chopNShortest(myMap, 2);    

    // print Map    
    logger.info(""ShortenedMap:"");    

    i = 0;    
    for (String[] strArray: myMap.values() ){    
        logger.info(String.format(""*** Entry %s: "", i++));    
        printStrings(strArray);    
    }    

}    

static void printStrings(String[] strArray){    
    StringBuffer buf = new StringBuffer();    

    for (String str: strArray){    
        buf.append(String.format(""%s, "", str));    
    }    
    logger.info(buf.toString());    
}    

static void chopNShortest(SortedMap&lt;KeyWithLength, String[]&gt; sortedMap, int n) {    
    // Assuming map is not unmodifiable    
    if (n &lt;= sortedMap.size()-1){    
        for (int i = 0; i&lt; n;i++){    
            sortedMap.remove(sortedMap.firstKey());    
        }    
    }    
}    

}    

class KeyWithLength implements Comparable&lt;KeyWithLength&gt; {    
private String key;    
private Integer length;    

public KeyWithLength(String key, int length) {    
    super();    
    this.key = key;    
    this.length = length;    
}    

public String getKey() {    
    return key;    
}    

public int getLength() {    
    return length;    
}    

@Override    
public int hashCode() {    
    final int prime = 31;    
    int result = 1;    
    result = prime * result + ((key == null) ? 0 : key.hashCode());    
    return result;    
}    

@Override    
public boolean equals(Object obj) {    
    if (this == obj)    
        return true;    
    if (obj == null)    
        return false;    
    if (getClass() != obj.getClass())    
        return false;    
    KeyWithLength other = (KeyWithLength) obj;    
    if (key == null) {    
        if (other.key != null)    
            return false;    
    } else if (!key.equals(other.key))    
        return false;    
    return true;    
}    

@Override    
public int compareTo(KeyWithLength another) {    
    // TODO Auto-generated method stub    
    return compare(this.length, another.length);    
}    

    public static int compare(int x, int y) {    
        return (x &lt; y) ? -1 : ((x == y) ? 0 : 1);    
    }    

}
</code></pre>

<p>The output:</p>

<pre><code>Original Map:
*** Entry 0: 
A, B, D, 
*** Entry 1: 
1, 2, 3, 4, 
*** Entry 2: 
1, B, D, 1, B, D, 

ShortenedMap:
*** Entry 0: 
1, B, D, 1, B, D, 
</code></pre>
"
"20655747","<p>create a new treeMap and switch the roles between key and value.</p>

<p><code>TreeMap&lt;Title ,Book&gt; treeMap  = new TreeMap&lt;Title,Book&gt;();</code></p>

<p>Copy all the data to the new TreeMap.</p>

<p>You now have a sorted collection based on Title. (And no Comparator required :))</p>
"
"10018770","<p>your JDK and JRE are ok.  Your code has an error.  It should look like this:</p>

<pre><code>try
{
    ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(defaultFile));
}
catch (IOException e)
{
    e.printStackTrace();
}
</code></pre>
"
"20718908","<p>set a layout called llTablet on the layout menu in the ""layout-large"" folder layouts and a llPhone layout on the layout menu in the ""layout"" folder. By menu am refering to the first layout the user is entering. Then check if you can reference it. If you can't reference llPhone then its a tablet.</p>

<pre><code>llPhone = (LinearLayout) findViewById (R.id.llPhone)
if (llPhone == null) {
 tablet = true;
}
else {
 tablet = false;
}
</code></pre>
"
"20805612","<p>This java.lang.Void implementation in Java kind of speaks for itself. Also, I wrote an article that ties this into generics. It took a bit of thought before I started understanding this: <a href=""http://www.siteconsortium.com/h/D00006.php"" rel=""nofollow"">http://www.siteconsortium.com/h/D00006.php</a>. Notice TYPE = Class.getPrimitiveClass(""void"");</p>

<p>package java.lang;</p>

<pre><code>public final class Void {

    public static final Class&lt;Void&gt; TYPE = Class.getPrimitiveClass(""void"");

    private Void() {}
}
</code></pre>
"
"10060194","<p>You can use the BigDecimal setScale function!<br></p>

<pre><code>BigDecimal db = new BigDecimal(&lt;number&gt;).setScale(120, BigDecimal.ROUND_HALF_UP); (or down)
</code></pre>
"
"10101353","<pre><code>java.lang.Enum said clearly:
 /**
 * Returns the name of this enum constant, exactly as declared in its
 * enum declaration.
 * 
 * &lt;b&gt;Most programmers should use the {@link #toString} method in
 * preference to this one, as the toString method may return
 * a more user-friendly name.&lt;/b&gt;  This method is designed primarily for
 * use in specialized situations where correctness depends on getting the
 * exact name, which will not vary from release to release.
 *
 * @return the name of this enum constant
 */
 public final String name()
</code></pre>

<p>just like the loft say ,you can use ""name"" method to get the name.
also you can use toString() method.</p>

<p>of course it is just name of this enum constant.</p>
"
"21660581","<p>Try this coding if youu arer using <code>jframe</code>.</p>

<p>In constructor method, give</p>

<pre><code>Jscrollpane.setVisible (false);
</code></pre>

<p>Give the particular <code>jscrollpane</code> which is associated with your <code>jtable</code> in <code>jframe</code>.</p>

<p>Then in actionperformed method give</p>

<pre><code>Jscrollpane. setvisible (true); 
pack (); 
</code></pre>

<p>It would help.....</p>
"
"10174101","<p>Just remove the <code>final</code> keyword from the declaration and continue your program. As <code>final</code> keyword means the value is unaltered. </p>
"
"22682116","<p><strong>Service Provider Interface without a provider</strong></p>

<p>Let's see how it would look like without a provider.</p>

<pre><code>//Service interface
public interface Service {
  //Service specific methods here
}

//Class for service registration and access
public class Services {
  private Services(){}

  private static final Map&lt;String, Service&gt; services =
    new ConcurrentHashMap&lt;String, Service&gt;();
  public static final String DEFAULT_SERVICE_NAME = ""&lt;def&gt;"";

  //Registration
  public static void registerDefaultService(Provider p) {
    registerService(DEFAULT_SERVICE_NAME, p);
  }
  public static void registerService(String name, Provider p) {
    services.put(name, p);
  }

  //Access
  public static Service getInstance() {
    return newInstance(DEFAULT_SERVICE_NAME);
  }
  public static Service getInstance(String name) {
     // you get the point..lookup in the map the service by name
     // and return it;
  }
</code></pre>

<p>As you see, it's possible to create a Service Provider Interface without a <em>Provider interface</em>. Callers of <code>#getInstance(..)</code> eventually wouldn't notice a difference.</p>

<p><strong>Then why do we need a provider?</strong></p>

<p>The <code>Provider</code> interface is an <a href=""http://en.wikipedia.org/wiki/Abstract_factory_pattern"" rel=""nofollow"">Abstract Factory</a> and <code>Services#newInstance(String)</code> is a <a href=""http://en.wikipedia.org/wiki/Factory_method_pattern"" rel=""nofollow"">Factory Method</a>. Both design patterns have the advantage that they decouple service implementation from service registration.</p>

<p><a href=""http://en.wikipedia.org/wiki/Single_responsibility_principle"" rel=""nofollow""><strong>Single responsibility principle</strong></a></p>

<p>Instead of implementing the service instantiation in a startup event handler, which registers all services, you create one provider per service. This makes it loosely coupled and easier to refactor, because Service and Service Provider could be put near to each other, for example into another JAR-file.</p>

<p>""Factory methods are common in toolkits and frameworks, where library code needs to create objects of types that may be subclassed by applications using the framework."" <a href=""http://en.wikipedia.org/wiki/Factory_method_pattern"" rel=""nofollow"">[1]</a></p>

<p><strong>Lifetime management</strong>:</p>

<p>You might have realized in the upper code without providers, that we're registering service <em>instances</em> instead of a provider, which could decide to instantiate a new service instance.</p>

<p>This approach has some disadvantages:</p>

<p>1. Service instances have to be created before the first service call. Lazy initialization isn't possible. This will delay startup and bind resources to services which are rarely used or even never.</p>

<p>1b. You ""cannot"" close services after usage, because there is no way to reinstantiate them. (With a provider you could design the <em>service interface</em> in a way that the caller has to call <code>#close()</code>, which informs the provider and the provider decides to keep or finalize the service instance.)</p>

<p>2. All callers will use the same service instance, therefore you have to make sure that it's thread-safe. But making it thread-safe will make it slow. In contrary a provider might choose to create a couple of service instances to reduce retention time.</p>

<p><strong>Conclusion</strong></p>

<p>A provider interface isn't required, but it encapsulates service-specific instantiation logic and optimizes resource allocation.</p>
"
"23076477","<p>In case you are using the Map with out generic, then you need to convert the value into String and then try to convert to Long. Below is sample code</p>

<pre><code>    Map map = new HashMap();

    map.put(""name"", ""John"");
    map.put(""time"", ""9648512236521"");
    map.put(""age"", ""25"");

    long time = Long.valueOf((String)map.get(""time"")).longValue() ;
    int age = Integer.valueOf((String)  map.get(""aget"")).intValue();
    System.out.println(time);
    System.out.println(age);
</code></pre>
"
"10242758","<p>This one might works for you....</p>

<pre><code>void List&lt;Integer&gt; makeSequence(int begin, int end) {

  AtomicInteger ai=new AtomicInteger(begin);
  List&lt;Integer&gt; ret = new ArrayList(end-begin+1);

  while ( end--&gt;begin) {

    ret.add(ai.getAndIncrement());

  }
  return ret;  
}
</code></pre>
"
"23998323","<p>If you are using groovy, you can simply do:</p>

<pre><code>def lineSeparator = new File('path/to/file').text.contains('\r\n') ? '\r\n' : '\n'
</code></pre>
"
"24109253","<p>You can use the <code>MouseClicked</code> event:</p>

<pre><code>private void tableMouseClicked(java.awt.event.MouseEvent evt) {
 // Do something.
}
</code></pre>
"
"10316110","<p>The comparator should actualy return 0 only when the two references refer to the same object, like this:</p>

<pre><code>public int compare(String s1,String s2) {
   if (s1!=s2) { 
      int result = s1.compareTo(s2);
      if (result == 0) {
          return -1;
      } else {
          return result;
      }
   } else {
      return 0;
   } 
}
</code></pre>
"
"24353869","<p>You probably looking for something like this.</p>

<pre><code>FileInputStream in = new FileInputStream(""inputFile.txt"");
BufferedReader br = new BufferedReader(new InputStreamReader(in));
</code></pre>
"
"24505373","<p>Using this Function u can define your won position</p>

<pre><code>setBounds(500, 200, 647, 418);
</code></pre>
"
"10335335","<p>There might be two reasons:</p>

<ol>
<li>Playgolf table is empty. check the size by using <code>c.getCount();</code></li>
<li>You are at the end of the cursor. use <code>c.moveToFirst()</code> to go to the beginning of the cursor.</li>
</ol>
"
"10344255","<p>on client side, you should convert the byte[] array to String and use 
<code>dout.writeUTF()</code> to send the converted String.</p>
"
"24769984","<p>Since most of the answers here are in Java, I'm posting the answer in C++ (since I am bored right now and nothing more productive to do :) But please, no downvotes except if code is wrong. 
Known-issues = will not handle overflow </p>

<p>Code:</p>

<pre><code>#include &lt;unordered_map&gt;
int convert_roman_2_int(string&amp; str)
    {
    int ans = 0;
    if( str.length() == 0 )
        {
        return ans;
        }

    std::unordered_map&lt;char, int&gt; table;
    table['I'] = 1;
    table['V'] = 5;
    table['X'] = 10;
    table['L'] = 50;
    table['C'] = 100;
    table['D'] = 500;
    table['M'] = 1000;

    ans = table[ str[ str.length() - 1 ] ];

    for( int i = str.length() - 2; i &gt;= 0; i--)
        {
        if(table[ str[i] ] &lt; table[ str[i+1] ] )
            {
            ans -= table[ str[i] ];
            }
        else
            {
            ans += table[ str[i] ];
            }
        }

    return ans;
    }
</code></pre>

<p>// test code</p>

<pre><code>void run_test_cases_convert_roman_to_int()
    {
    string roman = ""VIII"";
    int r = convert_roman_2_int(roman);
    cout &lt;&lt; roman &lt;&lt; "" in int is "" &lt;&lt; r &lt;&lt; endl &lt;&lt; flush;

    roman = ""XX"";
    r = convert_roman_2_int(roman);
    cout &lt;&lt; roman &lt;&lt; "" in int is "" &lt;&lt; r &lt;&lt; endl &lt;&lt; flush;

    roman = ""CDX""; //410
    r = convert_roman_2_int(roman);
    cout &lt;&lt; roman &lt;&lt; "" in int is "" &lt;&lt; r &lt;&lt; endl &lt;&lt; flush;

    roman = ""MCMXC""; //1990
    r = convert_roman_2_int(roman);
    cout &lt;&lt; roman &lt;&lt; "" in int is "" &lt;&lt; r &lt;&lt; endl &lt;&lt; flush;

    roman = ""MMVIII""; //2008
    r = convert_roman_2_int(roman);
    cout &lt;&lt; roman &lt;&lt; "" in int is "" &lt;&lt; r &lt;&lt; endl &lt;&lt; flush;

    roman = ""MDCLXVI""; //1666
    r = convert_roman_2_int(roman);
    cout &lt;&lt; roman &lt;&lt; "" in int is "" &lt;&lt; r &lt;&lt; endl &lt;&lt; flush;
    }
</code></pre>
"
"24982996","<p>You can try with bubble sort: Example shown below</p>

<pre><code>int[] numbers = { 4, 7, 20, 2, 56 };
int temp;

for (int i = 0; i &lt; numbers.length; i++)
{
       for(int j = 0; j &lt; numbers.length; j++)
       {
                if(numbers[i] &gt; numbers[j + 1])
                {
                            temp = numbers [j + 1];
                            numbers [j + 1]= numbers [i];
                            numbers [i] = temp;
                }
        }
}

for (int i = 0; i &lt; numbers.length; i++)
{
         System.out.println(numbers[i].toString());
}
</code></pre>
"
"25063503","<p>My solution using a combination of the answers above, 
my goal was to start a .jar file which is named CombatLogReader.jar, along with the game 
Star Trek Online.exe via a command prompt. 
at first i was typeing in Start """" """"C:\Program Files (x86)\Steam\SteamApps\common\Star Trek Online\CombatLogReader\CombatLogReader.jar""  but the file would not start, while researching why i could start the file manualy but not via cmd. my research got me here, </p>

<p>i modified my bat file to point to the java directory </p>

<p>This is how my bat file looks</p>

<pre><code>@echo off
rem Star Trek Online
START """" ""C:\Program Files (x86)\Steam\SteamApps\common\Star Trek Online\Star Trek Online.exe"" 
rem CombatLogReader
CD ""C:\Program Files (x86)\Java\jre7\bin""
javaw.exe -jar ""C:\Program Files (x86)\Steam\SteamApps\common\Star Trek Online\CombatLogReader\CombatLogReader.jar""
exit
</code></pre>

<p>and it works, now every thing i need starts with just one icon 
the command prompt dose stay open untell combatlogreader is clsoed, but it dose not interupt the operation of any thing</p>

<p>Kudo's to everyone, who posted niplets of answers, </p>
"
"25103420","<p>Inheritance is not the only way to re-use common functionality. Containment may be preferable in the general case.
Consider the following solution in which class A and B are the singletons, and the common functionality is in class AB, but instead of extending AB, both A and B use an instance of AB which is a singleton itself.</p>

<pre><code>class AB { //common functionality of A and B
   //singleton pattern here
   //common data and functionality here
}
class A {
   private AB ab = AB.getInstance();
   //singleton pattern here
   //unique functionality and data of A

   //to use any of the functionality in AB delegate to member ab
}
</code></pre>

<p>class B is similar to A.</p>

<p>in this solution there is a single instance of every data and functionality of both A and B (and AB)</p>

<p>Note that if clients of A and B need to access the common public methods in AB, then 
AB, A and B should implement an interface of those public methods, and A and B implementation should delegate the call to ab. </p>

<hr>

<p>The solution proposed by Ernest below, may be a shortcut in some situations, but in general is a wrong solution.</p>

<p>To explain why Ernest's solution may be wrong, let's describe that solution in a different way.
Suppose i have a singleton class A and i discover that i need to write another singleton class B, but i need some of the functionality of A in B. So i factor out the common data and functionality of A into an abstract class AB and make both A and B extend AB.
The reason why it's wrong, in general, is because this solution takes a subset of the data and functionality which is supposed to exist only once, and places it in a sub-class (AB), effectively and potentially duplicating it in every sub-class that will be created. Now, after getting an instance of A and an instance of B, you have two instances of the subset data and functionality in AB. </p>

<p>If for example, the common functionality placed in the base class writes some initial data to the file named ""myData"", then both of your singletons will execute this code even though it was only meant to be executed once, and when the later executes it it will wipe out the file created by the former.</p>

<p>Therefore, in general, the solution described here does not use inheritance, and ensures that a singleton encapsulates the common functionality as well as the singleton classes that use it.</p>
"
"10413034","<p>No, there is no language support for handling an exception and then jumping back to the statement that caused it. You have to wrap separate <code>try...catch</code> constructs around every subsequence of operations that should execute even if the previous subsequence threw an exception. </p>
"
"25335145","<pre><code>/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * keylogger.java
 *
 * Created on Mar 8, 2012, 8:12:20 AM
 */

package main;

import javax.swing.JOptionPane;

/**
 *
 * @author Lab-Admin
 */

public class keylogger extends javax.swing.JFrame {

    /** Creates new form keylogger */
    public keylogger() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings(""unchecked"")
    // &lt;editor-fold defaultstate=""collapsed"" desc=""Generated Code""&gt;//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        userfield = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        passfield = new javax.swing.JPasswordField();
        btnlogin = new javax.swing.JButton();
        btncancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(""Punk Academy PRoject"");
        setBackground(new java.awt.Color(255, 0, 0));
        setFont(new java.awt.Font(""Algerian"", 1, 14)); // NOI18N
        setForeground(new java.awt.Color(255, 153, 0));

        jPanel1.setBackground(new java.awt.Color(255, 204, 0));

        jLabel1.setBackground(new java.awt.Color(255, 0, 0));
        jLabel1.setFont(new java.awt.Font(""Algerian"", 1, 24)); // NOI18N
        jLabel1.setText(""Punk Academy"");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(jLabel1)
                .addContainerGap(108, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\umbrellalast.gif"")); // NOI18N

        jLabel3.setFont(new java.awt.Font(""Tahoma"", 1, 12)); // NOI18N
        jLabel3.setText(""username"");

        jLabel4.setFont(new java.awt.Font(""Tahoma"", 1, 12)); // NOI18N
        jLabel4.setText(""password"");

        btnlogin.setIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\Keys.gif"")); // NOI18N
        btnlogin.setText(""Log in"");
        btnlogin.setDisabledIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\Keys.gif"")); // NOI18N
        btnlogin.setDisabledSelectedIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\Keys.gif"")); // NOI18N
        btnlogin.setIconTextGap(2);
        btnlogin.setPressedIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\Keys.gif"")); // NOI18N
        btnlogin.setRolloverIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\Keys.gif"")); // NOI18N
        btnlogin.setRolloverSelectedIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\Keys.gif"")); // NOI18N
        btnlogin.setSelectedIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\Keys.gif"")); // NOI18N
        btnlogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnloginActionPerformed(evt);
            }
        });

        btncancel.setIcon(new javax.swing.ImageIcon(""D:\\COPRO OLAER\\enrollment system\\exit.png"")); // NOI18N
        btncancel.setText(""Cancel"");
        btncancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(82, Short.MAX_VALUE)
                        .addComponent(btnlogin, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(passfield, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(userfield, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(btncancel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addGap(49, 49, 49)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnlogin)
                    .addComponent(btncancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// &lt;/editor-fold&gt;//GEN-END:initComponents

    private void btnloginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnloginActionPerformed

        if(evt.getSource()==btnlogin)
        {
            String user = btnlogin.getText();
            String pass = btncancel.getText();

            if(user.equals(user)&amp;&amp;pass.equals(pass))
            {
                this.hide();
                JOptionPane.showMessageDialog(null,""ACCESS GRANTED"");
                welcome s2 = new welcome();
                s2.show();
            }
            else
            {
                JOptionPane.showMessageDialog(null,""ACCESS DENIED"");
            }
        }

    }//GEN-LAST:event_btnloginActionPerformed

    private void btncancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelActionPerformed
        if(evt.getSource()==btncancel)
        {
            JOptionPane.showMessageDialog(null,""BYE! BYE!"");

            System.exit(0);
        }
    }//GEN-LAST:event_btncancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new keylogger().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncancel;
    private javax.swing.JButton btnlogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField passfield;
    private javax.swing.JTextField userfield;
    // End of variables declaration//GEN-END:variables
}
</code></pre>
"
"25673287","<h1>Short Answer</h1>

<pre><code>java.sql.Timestamp.valueOf( ""2012-02-05 17:00:34.123456789"" )
</code></pre>

<p>and</p>

<pre><code>mySqlTimestamp.toString()
</code></pre>

<h1>Details</h1>

<p>Your Question is not clear, seeming to touch on multiple topics, and has been changing.</p>

<p>The <a href=""http://stackoverflow.com/a/25671754/642706"">answer by CarolineM</a> and <a href=""http://stackoverflow.com/a/11740709/642706"">the answer by JonSkeet</a> are both smart and correct. However, there is an easier way: The Timestamp class can parse your string directly. No need for defining a formatter, no need for <code>SimpleDateFormat</code>.</p>

<h2>Formats</h2>

<p>Your format of <code>2012-02-05 17:00:34.123456789</code> is the SQL style defined by the <a href=""http://en.wikipedia.org/wiki/SQL-92"" rel=""nofollow"">SQL-92</a> <a href=""http://www.contrib.andrew.cmu.edu/~shadow/sql/sql1992.txt"" rel=""nofollow"">spec</a>.</p>

<p>FYI, this format is similar to the <a href=""http://en.wikipedia.org/wiki/ISO_8601"" rel=""nofollow"">ISO 8601</a> standard but uses a SPACE rather than a <code>T</code> in the middle. </p>

<p>Lacking an offset from UTC, the date-time value is assumed by SQL to be in UTC.</p>

<p>By the way, SQL does not support ISO 8601, but you can roll-your-own as seen in this post, <a href=""http://lluad.com/blog/2013/08/27/postgresql-and-iso-8601-timestamps/"" rel=""nofollow"">PostgreSQL and ISO 8601 Timestamps</a> by Steve Atkins.</p>

<h2><code>java.sql.Timestamp</code> Has Built-In Formatter</h2>

<p>The java.sql.Timestamp has a built-in parser via the <code>valueOf</code> method for the SQL date-time format. No need for you to come up with a formatter or use <code>SimpleDateFormat</code>. </p>

<p>Note that this built-in formatter can handle nanosecond resolution (9 decimal digits).</p>

<p>Input (parsing):</p>

<pre><code>String input = ""2012-02-05 17:00:34.123456789"";
java.sql.Timestamp timestampInput = java.sql.Timestamp.valueOf( input ); // Parsing string.
</code></pre>

<p>Output (generating String representation):</p>

<pre><code>String output = timestampInput.toString();
System.out.println( ""output = "" + output );
</code></pre>

<p>When run:</p>

<pre class=""lang-none prettyprint-override""><code>2012-02-05 17:00:34.123456789
</code></pre>

<h2><code>java.time</code> package</h2>

<p>Another option is using the new java.time package in Java 8. That package supports <a href=""http://en.wikipedia.org/wiki/Nanosecond"" rel=""nofollow"">nanosecond</a> resolution. And that package provides methods for converting to/from java.SQL.Timestamp. See <a href=""http://stackoverflow.com/questions/22470150/how-to-get-a-java-time-object-from-a-java-sql-timestamp-without-a-jdbc-4-2-drive"">this question</a> for details.</p>

<p>Example code using java.time in Java 8 Update 20.</p>

<pre><code>String input = ""2012-02-05 17:00:34.123456789"";
java.sql.Timestamp timestampInput = java.sql.Timestamp.valueOf( input ); // Parsing string.
java.time.Instant instant = timestampInput.toInstant();
java.time.ZonedDateTime dateTimeMontréal = ZonedDateTime.ofInstant( instant, ZoneId.of( ""America/Montreal"" ) );
</code></pre>

<p>Dump to console.</p>

<pre><code>System.out.println( ""timestampInput = "" + timestampInput.toString() );
System.out.println( ""instant = "" + instant );
System.out.println( ""dateTimeMontréal = "" + dateTimeMontréal );
</code></pre>

<p>When run.</p>

<pre class=""lang-none prettyprint-override""><code>timestampInput = 2012-02-05 17:00:34.123456789
instant = 2012-02-06T01:00:34.123456789Z
dateTimeMontréal = 2012-02-05T20:00:34.123456789-05:00[America/Montreal]
</code></pre>

<p>Furthermore, you can omit the java.sql.Timetamp entirely in Java 8 and use the <code>getObject</code> and <code>setObject</code> methods to use the <code>java.time</code> objects.</p>
"
"25950565","<p>You can try this following code :</p>

<pre><code>public static void delay(int waitTime) {
        long endTime = System.currentTimeMillis() + (waitTime * 1000);
        while (System.currentTimeMillis() &lt; endTime) {}
    } 
</code></pre>

<p>Call as delay(5). And control will wait for 5 seconds. </p>
"
"26058976","<p>By using EntityManager, code is no longer tightly coupled with hibernate. But for this, in usage we should use :</p>

<pre><code>javax.persistence.EntityManager
</code></pre>

<p>instead of </p>

<pre><code>org.hibernate.ejb.HibernateEntityManager
</code></pre>

<p>Similarly, for EntityManagerFactory, use javax interface. That way, the code is loosely coupled. If there is a better JPA 2 implementation than hibernate, switching would be easy. In extreme case, we could type cast to HibernateEntityManager. </p>
"
"10554668","<p>If you spawn a local <code>Thread</code> within a method, only the local method variables declared as <code>final</code> will stick around until the <code>Thread</code> has completed.  When the <code>Thread</code> completes its <code>run()</code> method, the thread and any final variables it had available to it from the method that created it will get garbage collected like everything else.</p>

<p><strong>Clarification</strong></p>

<p>Only <code>final</code> variables used within the original method AND the spawned Thread's <code>run()</code> method will refrain from being garbage collected until both the method and the <code>run()</code> method completes.  If the thread doesn't access the variable, then the presence of the thread will not prevent the variable from being garbage collected after the original method completes.</p>

<p><strong>References</strong></p>

<p><a href=""http://java.sun.com/docs/books/performance/1st_edition/html/JPAppGC.fm.html"" rel=""nofollow"">http://java.sun.com/docs/books/performance/1st_edition/html/JPAppGC.fm.html</a></p>
"
"26301056","<pre><code>import java.io.*;
import java.lang.*;
import java.util.*;
class secondlargefunc
{
public static void main(String []args)
{
int a[]={10,9,8,7,500,-400};
int j=0;
int l=0;
for(int i=0;i&lt;6;i++)
{
j=Math.max(a[i],j);
}
System.out.println(""Largest number is: "" +j);
for(int k=0;k&lt;6;k++)
{
if(a[k]!=j)
{
l=Math.max(a[k],l);
}}
System.out.println(""Second Largest number is: "" +l);
}}
</code></pre>
"
"28134393","<p>This is the simplest solution to limit the number of digits after decimal point to two.</p>

<pre><code>myeditText2 = (EditText) findViewById(R.id.editText2);  
myeditText2.setInputType(3);
</code></pre>

<p>Hope this helps!</p>
"
"10706282","<p>How are you parsing the date? In Chrome this seems to work fine:</p>

<pre><code>new Date(""5/21/2012     4:49:17 PM"");
Mon May 21 2012 16:49:17 GMT-0400 (US Eastern Daylight Time)
</code></pre>
"
"28889206","<p>I had similar error:</p>

<pre><code>java.lang.RuntimeException: Orb initialization erorr at org.glassfish.enterprise.iiop.api.GlassFishORBHelper.getORB(GlassFishORBHelper.java:180)
</code></pre>

<p>which was caused by</p>

<pre><code>java.lang.NullPointerException at org.glassfish.enterprise.iiop.api.GlassFishORBHelper.getORB(GlassFishORBHelper.java:152)
</code></pre>

<p>My solution was to add jar that contains GlassFishORBFactoryImpl.class that implements the GlassFishORBHelper interface.</p>
"
"28917986","<p>Iterate the <code>ArrayList</code> which contains duplicates and add them to the <code>HashSet</code>. When the add method returns false in the <code>HashSet</code> just log the duplicate to the console. </p>
"
"10772702","<p>A good developer will always try to avoid a <code>NullPointerException</code>, hence the best answer would be to use <code>""Something"".equals(myInput)</code>.</p>
"
"28945684","<p>The solution is actually quite simple (pure, simple Java):</p>

<pre><code>System.out.println("" NZ Local Time: 2011-10-06 03:35:05"");
DateTimeFormatter formatter = DateTimeFormatter.ofPattern(""yyyy-MM-dd HH:mm:ss"");
LocalDateTime localNZ = LocalDateTime.parse(""2011-10-06 03:35:05"",formatter);
ZonedDateTime zonedNZ = ZonedDateTime.of(localNZ,ZoneId.of(""+13:00""));
LocalDateTime localUTC = zonedNZ.withZoneSameInstant(ZoneId.of(""UTC"")).toLocalDateTime();
System.out.println(""UTC Local Time: ""+localUTC.format(formatter));
</code></pre>

<p>OUTPUT IS:</p>

<pre><code> NZ Local Time: 2011-10-06 03:35:05
UTC Local Time: 2011-10-05 14:35:05
</code></pre>
"
"29004057","<p>Try this out:</p>

<pre><code>package mypack;
import java.util.List;

import org.openqa.selenium.By;

import mypackage.WebDriver;

import org.openqa.selenium.firefox.FirefoxDriver;

@SuppressWarnings(""unused"")
public class classnew {

    private static FirefoxDriver driver;

    public static void main(String[] args) {
        //String baseUrl = ""http://newtours.demoaut.com/"";
      FirefoxDriver Firefoxdriver = new FirefoxDriver();

        driver = null;
        driver.get(""http://newtours.demoaut.com"");

        String linkText1 = driver.findElement(By.partialLinkText(""egis"")).getText();
        System.out.println(linkText1);
        String linkText2 = driver.findElement(By.partialLinkText(""EGIS"")).getText();
        System.out.println(linkText1);  
        driver.quit();
    }
}
</code></pre>
"
"29196113","<p>well I made a similar program with no issues and just imagination... the code is so clear :D </p>

<pre><code>private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    int i,j,k, n = Integer.parseInt(jTextField1.getText());
    for(i=1;i&lt;=n;i++) // normal loop
    { 
        for(j=1; j&lt;=(n-i);j++)
        {
            System.out.print("" ""); // loop for spaces
        }
        for(k=1;k&lt;=i;k++) // loop for printing numbers
        {
            System.out.print(k+"" "");
        }
        System.out.println();
    }    // TODO add your handling code here:
}
</code></pre>
"
"29212316","<pre><code>// Author: Francisco Edmundo
private int translateNumber(String texto) {
    int n = 0;
    int numeralDaDireita = 0;
    for (int i = texto.length() - 1; i &gt;= 0; i--) {
        int valor = (int) traduzirNumeralRomano(texto.charAt(i));
        n += valor * Math.signum(valor + 0.5 - numeralDaDireita);
        numeralDaDireita = valor;
    }
    return n;
}
private double translateNumber(char caractere) {
    return Math.floor(Math.pow(10, ""IXCM"".indexOf(caractere))) + 5 * Math.floor(Math.pow(10, ""VLD"".indexOf(caractere)));
}
</code></pre>
"
"29217099","<p>Let me know if this works:</p>

<pre><code>public class prog1 {
    public static void main (String args[]){
        int a[] = {1,22,5,16,7,9,12,16,18,30};

        for(int b=0; b&lt;=a.length;b++){
            for(int c=0; c&lt;=a.length-2;c++){
                if(a[c]&gt;a[c+1]){

                    int temp=0;
                    temp=a[c];

                    a[c]=a[c+1];
                    a[c+1]=temp;
                }
            }

        }
        for(int b=0;b&lt;a.length;b++){
            System.out.println(a[b]);
        }
    }
}
</code></pre>
"
"29562550","<p>I solved this problem with the following command used in the directory of the eclipse project:</p>

<pre><code>javah -classpath [PROJECT_DIR\bin\classes] class.name
</code></pre>
"
"29744372","<p>just try this :</p>

<pre><code>&lt;p:inputMask maxlength=""5""&gt;
        &lt;pe:keyFilter regEx=""/[\d]/"" /&gt;
&lt;/p:inputMask&gt;
</code></pre>

<p>maxlength : limit the number of caracters to 5 max
regEx : only authorize decimal caracter on key press</p>

<p>nb: 
"
"29964617","<p>Use 2 cameras and draw text with new begin-end block.</p>

<pre><code>cameralariUpdateEt();
    batch.setProjectionMatrix(cameraGame.combined);
    batch.begin();
    for (Sprite kare_sprite : kareler_sprite_array) {
        kare_sprite.draw(batch);
    }
    bit_secici_sprite.draw(batch);
    batch.end();

    batch.setProjectionMatrix(cameraScore.combined);
    batch.begin();
    customFont.draw(batch, ""Score "" + level_skoru, KARE_KOSESI,
            ekran_yuksekligi - KARE_KOSESI * 4f);
    batch.end();
</code></pre>
"
"30132099","<p><a href=""http://www.javamadesoeasy.com/2015/03/phaser-in-java_21.html"" rel=""nofollow"">Phaser</a> is somewhat similar in functionality of CyclicBarrier and CountDownLatch but it provides more flexibility than both of them.</p>

<p>In CyclicBarrier we used to <b>registering</b> parties in constructor but Phaser provides us flexibility of registering and deRegistering parties at any time.
 For registering parties, we may use any of the following -</p>

<ul>
 <li>constructors</li>
 <li>register, or</li>
 <li>bulkRegister</li>
</ul>

<p>For <b>deRegistering</b> parties, we may use -</p>

<ul>
 <li>arriveAndDeregister, or</li>
</ul>

<p><br>
<b> register-</b>
Adds/Registers a new unarrived party to this phaser. It returns </p>

<ul>

<li>the arrival phase number to which this registration applied.</li>
<li>If phaser has terminated then value is negative and registration has no effect.</li>
</ul>

<p>If invocation of onAdvance() method is in progress than before returning this method may await its completion. 
If this phaser has a parent, and there were no registered parties with this phaser, this child phaser is also registered with its parent.
<br/>
<b>Program to demonstrate usage of Phaser></b></p>

<pre><code>import java.util.concurrent.Phaser;

public class PhaserTest {
public static void main(String[] args) {

       /*Creates a new phaser with 1 registered unArrived parties 
        * and initial phase number is 0
        */
       Phaser phaser=new Phaser(1);
       System.out.println(""new phaser with 1 registered unArrived parties""
                    + "" created and initial phase  number is 0 "");

       //Create 3 threads
       Thread thread1=new Thread(new MyRunnable(phaser,""first""),""Thread-1"");
       Thread thread2=new Thread(new MyRunnable(phaser,""second""),""Thread-2"");
       Thread thread3=new Thread(new MyRunnable(phaser,""third""),""Thread-3"");

       System.out.println(""\n--------Phaser has started---------------"");
       //Start 3 threads
       thread1.start();
       thread2.start();
       thread3.start();

       //get current phase
       int currentPhase=phaser.getPhase();
       /*arriveAndAwaitAdvance() will cause thread to wait until current phase
        * has been completed i.e. until all registered threads
        * call arriveAndAwaitAdvance()
        */
       phaser.arriveAndAwaitAdvance();
       System.out.println(""------Phase-""+currentPhase+"" has been COMPLETED----------"");

       //------NEXT PHASE BEGINS------

       currentPhase=phaser.getPhase();
       phaser.arriveAndAwaitAdvance();
       System.out.println(""------Phase-""+currentPhase+"" has been COMPLETED----------"");

       /* current thread Arrives and deRegisters from phaser.
        * DeRegistration reduces the number of parties that may
        * be required to advance in future phases.
        */
       phaser.arriveAndDeregister();

       //check whether phaser has been terminated or not.
       if(phaser.isTerminated())
              System.out.println(""\nPhaser has been terminated"");

} 
}





class MyRunnable implements Runnable{

Phaser phaser;

MyRunnable(Phaser phaser,String name){
       this.phaser=phaser;
       this.phaser.register(); //Registers/Add a new unArrived party to this phaser.
       System.out.println(name +"" - New unarrived party has ""
                    + ""been registered with phaser"");
}

@Override
public void run() {
       System.out.println(Thread.currentThread().getName() +
                    "" - party has arrived and is working in ""
                    + ""Phase-""+phaser.getPhase());
       phaser.arriveAndAwaitAdvance();

       //Sleep has been used for formatting output
       try {
              Thread.sleep(1000);
       } catch (InterruptedException e) {
              e.printStackTrace();
       }

       //------NEXT PHASE BEGINS------

       System.out.println(Thread.currentThread().getName() +
                    "" - party has arrived and is working in ""
                    + ""Phase-""+phaser.getPhase());
       phaser.arriveAndAwaitAdvance();  

       phaser.arriveAndDeregister();
}
</code></pre>

<p>}</p>

<p><br>
<b>bulkRegister -</b>
Adds parties number of new unarrived parties to this phaser. It returns </p>

<ul>

<li>the arrival phase number to which this registration applied.</li>
<li>If phaser has terminated then value is negative and registration has no effect.</li>
</ul>

<p>If invocation of onAdvance() method is in progress than before returning this method may await its completion. </p>

<p><b>arriveAndDeregister-</b>
Current thread (Party) Arrives and deRegisters from phaser. DeRegistration reduces the number of parties that may be required in future to move to next phase.</p>

<p><b>If this phaser has a parent</b>, and there were no registered parties with this phaser, this child phaser is also registered with its parent.
<b>Program to demonstrate Parent and child Phaser</b></p>

<pre><code>import java.util.concurrent.Phaser;

public class PhaserParentChildTest {
public static void main(String[] args) {


    /*
  * Creates a new phaser with no registered unArrived parties.
  */
    Phaser parentPhaser = new Phaser();

    /*
  * Creates a new phaser with the given parent &amp;
  * no registered unArrived parties.
  */
    Phaser childPhaser = new Phaser(parentPhaser,0);

    childPhaser.register();

    System.out.println(""parentPhaser isTerminated : ""+parentPhaser.isTerminated());
    System.out.println(""childPhaser isTerminated : ""+childPhaser.isTerminated());

    childPhaser.arriveAndDeregister();
    System.out.println(""\n--childPhaser has called arriveAndDeregister()-- \n"");

    System.out.println(""parentPhaser isTerminated : ""+parentPhaser.isTerminated());
    System.out.println(""childPhaser isTerminated : ""+childPhaser.isTerminated());

}
}
</code></pre>

<p>Read more about Phaser on <a href=""http://www.javamadesoeasy.com/2015/03/phaser-in-java_21.html"" rel=""nofollow"">http://www.javamadesoeasy.com/2015/03/phaser-in-java_21.html</a></p>
"
"10899588","<pre><code>BigDecimal d = new BigDecimal(""59.0000"");
String d1 = new DecimalFormat().format(d);
System.out.println(""d1 is "" + d1);
</code></pre>
"
"10908345","<p>The best way to Do that is to use the .setBounds(X, Y, Length, Width)
You can set exact positioning of item. It is measured from the top left corner for the X and the Y. For the width it grow what ever the time is to the left and dose not move the X. The same goes with the length and the Y values.</p>

<pre><code>JTextField field = new JTextField(),
field.setBounds(500, 100, 100, 30);
add(field);
</code></pre>
"
"10930820","<p>SSL requires a certificate, but you can create a self-signed certificate like this:</p>

<pre><code>keytool -genkey -keyalg RSA -alias selfsigned -keystore keystore.jks -storepass password -validity 360 -keysize 2048
</code></pre>

<p>This certificate will be stored in keystore.jks and be valid for 360 days.</p>

<p>Depending on your http server implementation you would typically point it to the keystore by providing a <code>keystoreFile</code> argument, and a <code>keystorePass</code> to set the password (property names taken from Apache Tomcat's HTTP Connector, but they are similar in other http servers.</p>
"
"11020509","<p>You can have two different constructors in the enum, but that means you need to have two fields (with one of them not being set). I do not think this would make much sense.</p>

<pre><code>public enum Fields {
    a(""A""), b(""B""), c(""C""), d(true), e(false);

    Fields(String str) {

        strval = str;
        value = false;

    }

    Fields(boolean val) {

        strval = null;
        value = val;

    }

    private final String strval;
    private final boolean value;

}
</code></pre>

<p>EDITED*** Compiles now. You have to initialize both at the same time.</p>
"
"11340371","<p>I would ensure the stack is loaded in the order it needs without requiring a swap.
In term of optimising the code, I would suggest you try to produce code as close to what the <code>javac</code> generates as possible as this is what the JVM has been tuned to optimise.</p>

<p>If this is not possible, you can store the value in a local variable, push the <code>ref</code> and reload the value.</p>
"
"11382018","<p>From the code you supplied it's hard to tell what causes that NullpointerException. But you could always just catch it and let your code go to the next iteration; maybe that solves it:</p>

<pre><code>EventSnapshot snapshotEvent = new EventSnapshot();
EventSnapshot currentEvent = new EventSnapshot();
do {
    try {
        ...              
        currentEvent.setContent(in_stats); 
        ...              
        if(!snapshotEvent.equals(currentEvent))
            snapshotEvent.setContent(in_stats);
    } catch (Exception e) {
        e.printStacktrace();
    }
} while(true);
</code></pre>
"
"11401332","<p>You said singleton, right ? </p>

<p>which means it should be like this ... </p>

<pre><code>public class A{


Map map;

    A a;

    private A()  {

    }

    synchronized  A getInstance()  {
        if(a!=null)
            return new A();
        else
            return null;
    }

 public getValue(String key){
  return map.get(key);
 }

 public remove(String key){
  synchronized(map){
   map.remove(key);
  }
 }
}
</code></pre>

<p>I hope this will work for both the scenarios which you mentioned above. </p>
"
"11579606","<p>try this</p>

<pre><code>new AndroidDesktopTestMain.callFromAndroid();
</code></pre>

<p>The only way to call a non-static method from a static method is to have an instance of the class containing the non-static method. By definition, a non-static method is one that is called ON an instance of some class, whereas a static method belongs to the class itself.</p>
"
"11592867","<p>that's because it is escaped you have to unescape it</p>

<pre><code>String url=""http:\/\/a6.sphotos.ak.fbcdn.net\/hphotos-ak-snc7\/s2048x2048\/582167_359167994154900_1489271360_n.jpg"";
url=URLDecoder.decode(url);
</code></pre>
"
"11638919","<p>First off. WTF is this?</p>

<pre><code>ArrayList objects = new ArrayList()
for (i++; i &lt; 5; i++) {
    objects.add(FormBean);
}
</code></pre>

<p>What is i? </p>

<p>Just loop through the objects list, check for each one to see if there's a match in the other list (see List.contains()) <a href=""http://docs.oracle.com/javase/6/docs/api/java/util/List.html#contains(java.lang.Object"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/util/List.html#contains(java.lang.Object</a>) and remove the ones that don't match. </p>
"
"11704625","<p>You can manually call garbage collection once in 10000 loops using the code</p>

<pre><code>System.gc();
</code></pre>

<p>However there are some side-effects such as extra cpu time used by garbage collector.</p>
"
"11731791","<p>Perhaps consider implementing a singleton using an enum:</p>

<pre><code>public enum Singleton {
INSTANCE;

public void doStuff() {
    System.out.println(""Whoopee"");
}
}
</code></pre>

<p>and call it like <code>Singleton.INSTANCE.doStuff()</code></p>

<p>This is recommended in the book Effective Java by Josh Bloch</p>
"
"11775071","<p>A coworker had an idea that I think can solve the problem. I can keep the state of the superclass and the state of the ""item"" member in sync by looking at all methods that modify the List windows. There are a few: addWindow, removeWindow. Instead of calling just ""item.addWindow(...)"" in the decorator, I call addWindow on the superclass as well: </p>

<p>Normal decorator:</p>

<pre><code>public void addWindow(WindowItem newItem) {
   item.addWindow(newItem);
}
</code></pre>

<p>In this case I do:</p>

<pre><code>public void addWindow(WindowItem newItem) {
   super.addWindow(newItem);
   item.addWindow(newItem);
}
</code></pre>

<p>That keeps the state in sync and the return values of the final methods correct.</p>

<p>This is a solution that can work or not work depending on internals of the class being decorated.</p>
"
"11887715","<p>Try:</p>

<pre><code>table.getModel().getRowCount();
</code></pre>
"
"11924637","<pre><code>public class Fact {

    private int factPartND(final int from, final int n) {
        int m = 1;
        int result = from;

        while (m &lt;= n) {
            result *= (from + m++);
        }

        return result;
    }

    public static void main(String[] args) {
        Fact f = new Fact();
        int test = f.factPartND(5, 8);
        System.out.println(test);
    }
}
</code></pre>

<p>If you do it with 5, 11 you have an overflow. then you should use BigInteger instead of int.</p>
"
"11924649","<p>Maybe something like this:</p>

<pre><code>package homework;
public class Homework {

    public static int fact(int from, int to){
    int result = 1;
    while(to&gt;0){
        result*=from+to;
        to--;
    }
    return result*from;
    }
    public static void main(String[] args) {
    System.out.println(fact(2,4));
    }
}
</code></pre>
"
"11963998","<p>Replace the <code>synchronized</code> by making <code>global</code> <code>volatile</code> and you'll be alright as far as the copy-on-write goes.</p>

<p>Although the assignment is atomic, in other threads it is not ordered with the writes to the object referenced. There needs to be a <em>happens-before</em> relationship which you get with a <code>volatile</code> or synchronising <em>both</em> reads and writes.</p>

<p>The problem of multiple updates happening at once is separate - use a single thread or whatever you want to do there.</p>

<p>If you used a <code>synchronized</code> for both reads and writes then it'd be correct but the performance may not be great with reads needing to hand-off. A <code>ReadWriteLock</code> may be appropriate, but you'd still have writes blocking reads.</p>

<p>Another approach to the publication issue is to use final field semantics to create an object that is (in theory) safe to be published unsafely.</p>

<p>Of course, there are also concurrent collections available.</p>
"
"11964028","<p>Can you use the <code>Collections.synchronizedSet</code> method? From HashSet Javadoc <a href=""http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html</a></p>

<pre><code>Set s = Collections.synchronizedSet(new HashSet(...));
</code></pre>
"
"12049515","<p>How about this:</p>

<pre><code>bitmap1 = Bitmap.createBitmap(bitmap1, 0, 0, bitmap1.getWidth(), bitmap1.getHeight(), mat, true);
</code></pre>

<p>You have limited memory to use, so when you have to handle so larger picture, you have to think save your memory.</p>
"
"12054360","<p>You just need to implement the comparable interface to the object that you need to sort and make a little bit change to above code to make this code usable for any other objects.</p>

<pre><code>class SortNames {

static void sort(Comparable[] s) {
    for (int i = 0; i&lt;s.length; i++) {
        for (int j = i+1; j &lt; s.length; j++) {
            if (s[i].compareTo(s[j])&gt;0) {
                Comparable t;
                t = s[i]; s[i] = s[j]; s[j] = t;
            }
        }
    }
}

public static void main(String[] args) {
    String[] names = {""Pete"",""Jill"",""May"",""Anne"",""Tim""};             
    sort(names);
    for (int i=0; i&lt;names.length; i++) 
        System.out.println(names[i]);
}
}
</code></pre>
"
"12183230","<p>Depending on your usage, you might want to use a <code>List&lt;Pair&gt;</code>, where Pair is something like </p>

<pre><code>public class Pair&lt;J,K&gt; {
    private J key;
    private K value;

    public Pair(J key, K value) {
        this.key = key;
        this.value = value;
    }

    public J getKey() {return key;}
    public K getValue() {return value;}
}
</code></pre>
"
"12192608","<p>Try this:</p>

<pre><code>/**
 * @(#)demo1.java
 *
 *
 * @author 
 * @version 1.00 2012/8/30
 */

import java.util.*;

public class demo1 
{
    Scanner s=new Scanner(System.in);

    String str;
    int key;

    void getdata()
    {
        System.out.println (""plase enter a string"");
        str=s.next();
        System.out.println (""plase enter a key"");
        key=s.nextInt();
    }

    void display()
    {
        char a;
        int j;
        for ( int i = 0; i &lt; str.length(); ++i )
        {

            char c = str.charAt( i );
            j = (int) c + key;
            a= (char) j;

            System.out.print(a);  
        }

        public static void main(String[] args)
        {
            demo1 obj=new demo1();
            obj.getdata();
            obj.display();
        }
    }
}
</code></pre>
"
"12250725","<p>If you're looking for an example of a fully written Java program, check out this post:</p>

<p><a href=""http://howtoprogramwithjava.com/java-tutorial-java-hello-world-part-ii/"" rel=""nofollow"">http://howtoprogramwithjava.com/java-tutorial-java-hello-world-part-ii/</a></p>

<p>The code you've posted isn't entirely correct, as you need to include the ""meat"" of the code inside of your 'main' method:</p>

<pre><code>public class MyClass {
    public static void main(String[] args) {
      char[] alphabet = new char[26];
      alphabet[0] = 'a';
    }
}
</code></pre>
"
"12262631","<p>What about adding a test in the correspondent entity class:</p>

<pre><code>public boolean getHasSecond() {
    if (this.Second != null) {
        return true;
    } else {
        return false;
    }
}
</code></pre>

<p>Like this, you can check if the relation exists...</p>
"
"12301694","<p>Yes it should be in Capital letter. Like <code>JAVA_HOME</code>. And it is case sensitive. But , the path is not case sensitive.</p>
"
"12399554","<p>Try this regex for the match of <code>{string}</code>,</p>

<pre><code>\{(.*)\}
</code></pre>
"
"12452538","<blockquote>
  <blockquote>
    <blockquote>
      <p>You can get other values but you need to do something to make the program do because something with thread is random and it's hard to control.you can try my code i think there's something wrong in your code, but i don't change it, ok?</p>
    </blockquote>
  </blockquote>
</blockquote>

<pre><code>public class Threads implements Runnable
{
    int a = 0;

    public void run() { }

    public int FirstThread()
    {
        a = 3;
        Thread.sleep(2000);
        a = a + 1;

        return a;
    }

    public int SecondThread()
    {
        a = 5;
        a = a + 7;

        return a;
    }
}
</code></pre>

<p>or use this one</p>

<pre><code>public class Threads implements Runnable
{
    int a = 0;

    public void run() { }

    public int FirstThread()
    {
        a = 3;
        a = a + 1;

        return a;
    }

    public int SecondThread()
    {
        a = 5;
        Thread.sleep(2000);
        a = a + 7;

        return a;
    }
}
</code></pre>

<p>just try it!!!</p>
"
"12541211","<pre><code>String s=""ABCD"";
String z=""ABCD"";
</code></pre>

<p>refer to the same Strings in memory pool.
Howewver</p>

<pre><code>String s=new String(""ABCD"");
String z=new String(""ABCD"");
</code></pre>

<p>produce separate memory spaces for the Strings.
So the output is such.
This also answers your first question.</p>
"
"12541235","<p>When we calling the below statements</p>

<pre><code>String s=""ABCD"";
String z=""ABCD"";
</code></pre>

<p>Then it will be checked in string pool and if already exists in pool then address is referenced to the variable.<br>
But when we call <code>new</code> keyword then explicitly saying to create new memory.</p>
"
"12541251","<p>I am not sure about this but i guss in secound example </p>

<pre><code>String s=new String(""ABCD"");
String z=new String(""ABCD"");
</code></pre>

<p>It is declare like an object so when you try to check equality sure will give u <code>false</code>( object can't equal object)</p>
"
"12586451","<p>Here's some sample code:</p>

<pre><code>import java.lang.Scanner;
/*setup everything here, you just need that import*/
Scanner input = new Scanner(System.in);
//ask for input
String str = input.next();
if(str.contains(/*char1*/) || str.contains(/*char2*/) || /*continue the pattern, 1 for every character*/)
{
    //event if it contains one
}
else
{
    //event if it does not contain any
}
</code></pre>

<p>an alternatve:</p>

<pre><code>import java.lang.Scanner;
/*put the program parts here*/
Scanner input = new Scanner(System.in);
String str = input.next();
List&lt;char&gt; chars = Arrays.asList(/*put chars here, seperated with commas*/);
for(int x = 0; x &lt; chars.size();x++)
{
    if(str.contains(chars[x]))
    {
        //event if it contains one
    }
    else
    {
        //event if it does not contain one
    }
}
//resume program
</code></pre>

<p>these code snippets will work, assuming everything is imported correctly.</p>
"
"12611463","<p>It's unsafe. There are no additional synchronization in JVM. You can do something like this:</p>

<pre><code>public class Test {
    private final Object lock = new Object();
    public Test() {
        synchronized (lock) {
            // your improper object reference publication
            // long initialization
        }
    }

    public void doSomething() {
        synchronized (lock) {
            // do something
        }
    }
}
</code></pre>
"
"12648226","<p>If ""size"" if size of array a or b you can avoid the for-condition:</p>

<pre><code>try{
    for (int dx = 0; ; dx++) {
        ...
        ...
    }
}catch(ArrayIndexOutOfBoundException e){}
</code></pre>

<p>The two lines are  straight or curved? May you post a grafical representation of the problem, or a numeric example of the arrays? maybe there is a better geometrical solution?</p>
"
"12680541","<p>With <code>String a</code> and <code>String b</code>,</p>

<p>are you doing an <code>a == b</code> instead of <code>a.equals(b)</code> ?</p>
"
"12709196","<p>You may need to wrap your map in a Synchronized collection</p>

<pre><code>Map&lt;String, String&gt; map = Collections.synchronizedMap(iv.getAllValues());
</code></pre>

<p>Then go ahead and access your map.</p>
"
"12753795","<p>Try this:</p>

<pre><code>Pattern p = Pattern.compile(
    ""^/exec\\?(?:(?:(?!\\1)command=shutdown()|(?!command=)\\w+(?:=[^&amp;]+)?)(?:&amp;|$))+$\\1"");
</code></pre>

<p>Or a little more readably:</p>

<pre><code>^/exec\?
(?:
  (?:
    (?!\1)command=shutdown()
    |
    (?!command=)\w+(?:=[^&amp;]+)?
  )
  (?:&amp;|$)
)+$
\1
</code></pre>

<p>The main body of the regex is an alternation that matches either a shutdown command or a parameter whose name is not <code>command</code>.  If it does match a shutdown command, the empty group in that branch ""captures"" an empty string.  It doesn't need to consume anything, because we're only using it as a checkbox, confirming <em>en passant</em> that one of the parameters was a shutdown command.</p>

<p>The negative lookahead - <code>(?!\1)</code> - prevents it from matching two or more shutdown commands.  I don't know if that's really necessary, but it's a good opportunity to demonstrate (1) how to negate a ""back-assertion"", and (2) that a backreference can appear before the group it refers to in certain circumstances (what's known as a <em>forward reference</em>).</p>

<p>When the whole URL has been consumed, the backreference (<code>\1</code>) acts like a zero-width assertion.  If one of the parameters was <code>command=shutdown</code>, the backreference will succeed.  Otherwise it will fail even though it's only trying to match an empty string,  because the group it refers to didn't participate in the match.</p>

<p>But I have to concur with the other responders: when your regexes get this complicated, you should be thinking seriously about switching to a different approach.</p>

<hr>

<p><strong>EDIT:</strong>  It works for me.  Here's the <strong><a href=""http://ideone.com/tJddy"" rel=""nofollow"">demo</a></strong>.</p>
"
"12794955","<p>Use String buffer.</p>

<pre><code>  final StringBuffer mText = new StringBuffer(""SHOP MA\n""
        + ""----------------------------\n""
        + ""Pannampitiya\n""
        + ""09-10-2012 harsha  no: 001\n""
        + ""No  Item  Qty  Price  Amount\n""
        + ""1 Bread 1 50.00  50.00\n""
        + ""____________________________\n"");
</code></pre>
"
"12809715","<p>There is nothing in the default JDK that I am aware of. You may need to define your own constant, or import a third party library that has one.</p>

<p>If your intention is to check for empty string you could try the following.</p>

<p><code>YOUSTRING.isEmpty();</code></p>

<p>However note that isEmpty is not Null safe, and not in all versions of the JDK.</p>

<p>To be null safe, use <code>"""".equals(YOURSTRING);</code> </p>

<p>However this adds empty string into the HEAP each time you do it. Thus it is best to point to a <code>public static final </code> constant, so that there is only ever one on the heap.</p>
"
"13200618","<pre><code>public static void main(String args[])
{
  long n = 1;
  long sum = 0;
  long limit=Integer.parseInt(args[0]);

  while (n &lt; limit)
  {
    n++;
    if(n % 2 != 0 &amp;&amp; n % 3 != 0 &amp;&amp; n % 5 != 0 &amp;&amp; n % 7 != 0 &amp;&amp; n != 1 || n == 2 || n == 3 || n == 5 || n == 7)
    {
      sum = sum + n;
    }
  }


    System.out.println(""The sum of the prime numbers = "" +sum);
 }
</code></pre>
"
"13584247","<p>Modify the maximun memory parameter in <em>eclipse.ini</em></p>

<pre><code>-Xmx1024m
</code></pre>

<p>And restart your computer.</p>

<p>It worked for me :)</p>
"
"14283644","<p>I had to do this for a class assignment and disliked the answers here. They were either overly complex, or too simple and inefficient. I like having a happy medium, so I threw this together:</p>

<pre><code>public static int[] exercise6(int[] array) {
    int del = 0;
    for( int i = 0; i &lt; array.length - (1 + del); ++i ) {
        for( int j = array.length - (1 + del); j &gt; i; --j ) {
            if( array[i] == array[j]) {
                for( int k = j; k &lt; array.length - (1 + del); ++k ) {
                    array[k] = array[k + 1];
                }
                array[array.length - 1] = 0;
                del++;
            }
        }
    }
    return Arrays.copyOfRange(array, 0, array.length - del);
</code></pre>

<p>If you don't need to truncate the array itself you can always just return array instead.</p>
"
"14298909","<p>You're probably wrong in invoking the script. Try:</p>

<pre><code>Process process = runtime.exec(""sh -c jar_executor.sh"");
</code></pre>

<p>Note the ""-c"" flag that means you're calling the shell to execute the command.</p>
"
"15346343","<p>use the followin it will split lines</p>

<pre><code>               String[] a=scanner.next().split("" "");
</code></pre>
"
"15443164","<pre><code>import java.util.Scanner;


public class dmar {

public static void main ( String  []  srgs){

    Scanner dmar=new Scanner(System.in);{

        {

System.out.println ( ""inter number of x  plz"") ;

double x=dmar.nextDouble();

System.out.println ( ""inter number of y plz"") ;{


double y=dmar.nextDouble();

System.out.println ( ""inter number of t  plz"") ;
double t=dmar.nextDouble();

System.out.println ( ""inter number of f  plz"") ;
double f=dmar.nextDouble();

{

{
if (x&gt;y);

System.out.println(""x biger than y"");


if (x&gt;t);
System.out.println(""x biger than t"");

 if (x&gt;f);

System.out.println(""x biger than f"");


 if (y&gt;x);
System.out.println(""y biger than x"");



if (y&gt;t);
System.out.println(""y biger than t"");

 if (y&gt;f);
System.out.println(""y biger than f"");

if (t&gt;x&amp;t&gt;f&amp;t&gt;y);
System.out.println(""t biger than x"");

if (t&gt;y);
System.out.println(""t biger than y"");

if (t&gt;f);
System.out.println(""t biger than f"");

 if (f&gt;x);
System.out.println(""f biger than x"");


if (f&gt;y);
System.out.println(""f biger than y"");


         if (f&gt;t);
System.out.println(""f biger than t"");

}
</code></pre>
"
"15697578","<p>Try this one out</p>

<pre><code>public void getObjectList(){
        System.out.println(""Listing objects"");
        ObjectListing objectListing = s3.listObjects(new ListObjectsRequest()
                .withBucketName(bucketName)
                .withPrefix(""ads""));
        for (S3ObjectSummary objectSummary : objectListing.getObjectSummaries()) {
            System.out.println("" - "" + objectSummary.getKey() + ""  "" +
                               ""(size = "" + objectSummary.getSize() + "")"");
        }
    }
</code></pre>

<p>You can all the objects within the bucket with specific prefix. </p>
"
"15761918","<p><ol></p>


<li>Open terminal</li>
<li>Type <code>java</code></li>
<li>Display some packages</li>
<li>You install this packages</li>
<li>Now installed java packages</li>
<li>Now type <code>java</code></li>
<li>Type <code>javac</code></li>
<li>Type <code>appletviewer</code></li>
<li>You make new a directory=> <code>md arivu</code></li>
<li><code>cd arivu</code></li>
<li><code>gedit ex.java</code></li>
<li>Now you save</li>
<li>Return to terminal</li>
<li>Compile: <code>javac ex.java</code></li>
<li>Run: <code>java ex</code></li>
<li>Graphical code:
<ul>
<li>javac ex.java</li>
<li>appletviewer ex.java </li>
</ul></li>
</ol>
"
"17143092","<p>I think the best is using the JFormatedTextField.</p>

<p>I have this code try this one:</p>

<pre><code>package your_package;

import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

public class.....{

private String getdate(){
      DateFormat format = new SimpleDateFormat(""MM/DD/YYYY""); //display your format.
      Date date = new Date();//puts the date in variable.
      return dateformat.format(date); //returns the format to the date variable.
}

public your_app{
     .....
     String date = new getdate();
     txtDate.setvalue(date);
}
}
</code></pre>

<p>Hope this will give you an idea and helps... :)</p>
"
"17609356","<p>Add this dependecy in pom.xml file.</p>

<p>In <code>&lt;systemPath&gt;</code> property you have to write your jdk lib path.</p>

<pre><code>&lt;dependency&gt;  
    &lt;groupId&gt;com.sun&lt;/groupId&gt; 
    &lt;artifactId&gt;tools&lt;/artifactId&gt;
    &lt;version&gt;1.4.2&lt;/version&gt;
    &lt;scope&gt;system&lt;/scope&gt;
    &lt;systemPath&gt;C:/Program Files/Java/jdk1.6.0_30/lib/tools.jar&lt;/systemPath&gt;
&lt;/dependency&gt; 
</code></pre>
"
"18326335","<pre><code>str = line.split("","");
</code></pre>

<p>If the string contains comma, then you should not use <code>split()</code></p>
"
"19141103","<pre><code>import java.util.Arrays;

public class MergeTwoArrays {

    static int[] arr1=new int[]{1,3,4,5,7,7,9,11,13,15,17,19};
    static int[] arr2=new int[]{2,4,6,8,10,12,14,14,16,18,20,22};

    public static void main(String[] args){
        int FirstArrayLocation =0 ;
        int SecondArrayLocation=0;
        int[] mergeArr=new int[arr1.length + arr2.length];

        for ( int i=0; i&lt;= arr1.length + arr2.length; i++){
            if (( FirstArrayLocation &lt; arr1.length ) &amp;&amp; (SecondArrayLocation &lt; arr2.length)){
                if ( arr1[FirstArrayLocation] &lt;= arr2[SecondArrayLocation]){
                    mergeArr[i]=arr1[FirstArrayLocation];
                    FirstArrayLocation++;
                }else{
                    mergeArr[i]=arr2[SecondArrayLocation];
                    SecondArrayLocation++;
                }
            }
            else if(SecondArrayLocation &lt; arr2.length){
                    mergeArr[i]=arr2[SecondArrayLocation];
                    SecondArrayLocation++;
            }else if ( FirstArrayLocation &lt; arr1.length ){
                    mergeArr[i]=arr1[FirstArrayLocation];
                    FirstArrayLocation++;
            }
        }
    }
}
</code></pre>
"
"19198018","<pre><code>private Map&lt;Integer, Integer&gt; getUniqueArray(int[] duplicateArray) {
    Map&lt;Integer, Integer&gt; uniqueMap = new HashMap&lt;&gt;();
    int count = 0;
    for (int element : duplicateArray) {
        count = 0;
        if (uniqueMap.get(element) != null) {
            ++count;
        }
        if (count == 0) {
            uniqueMap.put(element, count);
        }
    }
    return uniqueMap;
}
</code></pre>
"
"19255941","<pre><code>String[] fmgStrng = aryToSplit.split(""\\\^""); 
</code></pre>
"
"19438470","<pre><code>//Here's the full code that will DEFINITELY work: (can copy &amp; paste)

import java.awt.*;

public class beeper
{
    public static void main(String args[])
    {
        Toolkit.getDefaultToolkit().beep();
    }
}
</code></pre>
"
"19493845","<pre><code>private final class AnActionModeOfEpicProportions implements ActionMode.Callback
{
  @Override
  public boolean onCreateActionMode(ActionMode mode,Menu menu)
  {
    // add your menu here...
  }
  @Override
  public boolean onActionItemClicked(ActionMode mode,MenuItem item)
  {
    // handles your action menu clicked event
    returntrue;
  }
}
</code></pre>
"
"19709984","<pre><code>final DefaultListModel model = new DefaultListModel();


    final Thread updater = new Thread() {

        @Override
        public void run() {
            for (int i = 0; i &lt; 10; i++) {
                model.addElement(i);
                listData.setModel(model);
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException e) {
                    throw new RuntimeException(e);
                }
            }
        }
    };
    updater.start();
</code></pre>
"
"20463245","<p>How about this way, where :</p>

<pre><code>String a[] = new String[]{""Hello"",""Hi"",""faridi"",""yello"",""this works""};
String c[] = new String[]{""yello"",""tis works""};

String b[] = a;

for (int i = 0; i &lt; b.length; i++) {

    System.out.println(b[i]);

    } 

b = c;
for (int i = 0; i &lt; b.length; i++) {

    System.out.println(b[i]);

    }



}
</code></pre>

<p>The first printf loop will give you the following:</p>

<pre><code>Hello
Hi
faridi
yello
this works
</code></pre>

<p>The second one will give you:</p>

<pre><code>yello
this works
</code></pre>
"
"20705330","<p>I had the same error when I upgraded my IntelliJ IDE, it was fixed with the replacement of 1.5 with 1.6 as below.</p>

<pre><code>       &lt;plugin&gt;
            &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
            &lt;configuration&gt;
                &lt;source&gt;1.6&lt;/source&gt;
                &lt;target&gt;1.6&lt;/target&gt;
            &lt;/configuration&gt;
        &lt;/plugin&gt;
</code></pre>
"
"20973850","<p>you can get the type of T doing</p>

<pre><code>Type type = new TypeToken&lt;T&gt;(){}.getType();
</code></pre>

<p>then get an instance of T doing</p>

<pre><code>type.getClass().newInstance();
</code></pre>

<p>Complete example</p>

<pre><code>public T foo() {
    try {
        return (T) type.getClass().newInstance();
    } catch (Exception e) {
        return null;
    }
}
</code></pre>
"
"21058156","<p>From <a href=""http://www.w3schools.com/jsref/met_nav_javaenabled.asp"" rel=""nofollow"">Navigator javaEnabled()</a>: <code>var x = ""Java Enabled: "" + navigator.javaEnabled();</code></p>

<p>The result of x will be: Java Enabled: false</p>
"
"21291752","<p>Try this (insert after setModel(myTableModel); line):</p>

<pre><code>myJTable.createDefaultColumnsFromModel();
</code></pre>

<p>In my case it solved the update issue, while: .repaint(), .invalidate(), .fireTableDataChanged() didn't help.</p>
"
"21684614","<p>Your question is little bit wrong,with Java code you cannot create a database,you can just connect to a database.</p>

<p>First of all you need to create a database in PgAdminIII. </p>

<p>Here is the code which will help you to create table in postgresql database through JAVA</p>

<pre><code>    package database;

      import java.sql.Connection;
      import java.sql.DriverManager;
      import java.sql.SQLException;
      import java.sql.Statement;
      import java.util.logging.Level;
      import java.util.logging.Logger;
      public class Database {


      public static void main(String args[]) {
     try {
        Connection c = null;
        Statement stmt = null;

        try {
           Class.forName(""org.postgresql.Driver""); 
           c = DriverManager.getConnection(""jdbc:postgresql://localhost:5432/kanwar"",""postgres"", ""osm""); 
        } catch (Exception e) {
           e.printStackTrace();
           System.err.println(e.getClass().getName()+"": ""+e.getMessage());
           System.exit(0);
        }
        System.out.println(""Opened database successfully"");
          try {
              stmt = c.createStatement();
          } catch (SQLException ex) {
              Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
          }
     String sql = ""CREATE TABLE MY_TABLE ""+ 
             ""(ID INT NOT NULL,""
             + ""NAME TEXT       NOT NULL,""
             +     ""AGE             INT                  NOT NULL)"";




     stmt.executeUpdate(sql);
     stmt.close();
     c.close();
    } catch (SQLException ex) {
        Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
    }
    catch(Exception e)
    {
     System.err.println( e.getClass().getName()+"": ""+ e.getMessage() ); 
     System.exit(0);
    }
    System.out.println(""Table Created Successfully"");
    }
    }
</code></pre>

<p>For complete reference:<a href=""http://kodingpoint.blogspot.in/2014/01/java-postgresql-connectivity-example.html"" rel=""nofollow"">http://kodingpoint.blogspot.in/2014/01/java-postgresql-connectivity-example.html</a></p>
"
"22602980","<p>To Get Current Date With your expected Format:</p>

<pre><code>String currentDateTimeString =DateFormat.getDateInstance().format(new Date()); 
      txtToday.setText(currentDateTimeString);  
</code></pre>
"
"23151044","<p>Update the empty password in the table mysql.user of mysql</p>

<pre><code>use mysql;
select host,user,password from mysql.user;
update mysql.user set password = PASSWORD('123456') where password = '';
flush privileges;
</code></pre>
"
"23657278","<pre><code>long l = Long.valueOf(s);
System.out.println(""The value of long:""+l);
</code></pre>
"
"23946350","<p>Can the issue be fixed by changing your code:</p>

<pre><code>for (long serviceId : test) {
    Service service = dashboardViewModel.getService(serviceId);
}
</code></pre>

<p>into:</p>

<pre><code>for (Long serviceId : test) {
    Service service = dashboardViewModel.getService(serviceId);
}
</code></pre>
"
"24543433","<p>Add @Component to aspect class and your dependencies should get injected automatically.
and add context:component-scan for package where your aspect is in spring context file.</p>

<pre><code>@Component
@Aspect
public class SomeAspect {
    /* following dependency should get injected */
    @Autowired
    SomeTask someTask;
    /* rest of code */  
}
</code></pre>
"
"24865738","<p>add <code>@@XmlRootElement</code> before your class Region</p>
"
"25278643","<pre><code>public static void main(String k[])
{  
    System.out.println (""NUMBER OF VALUES =""+k.length);
    int arrymy[]=new int[k.length];
    for (int i = 0; i &lt; k.length; i++)
    {
        int newGues = Integer.parseInt(k[i]);
        arrymy[i] = newGues;
    }
}
</code></pre>
"
"25480987","<pre><code>package com.eiq.singleton;

import java.io.Serializable;

public class SingleTonDemo implements Cloneable, Serializable {

    // order of declaring variables objCount and SingleTonDemo should be same.
    private static int objCount = 0;
    private static SingleTonDemo obj = new SingleTonDemo();

//this value is not needed, to test whether the object value only, you can remove it, the code will work
    int i = 10;

    private SingleTonDemo() {

        // logic to throw exception if we are trying to create object through reflection.
        if (objCount == 0) {
            synchronized (SingleTonDemo.class) {
                if (objCount == 0)
                    objCount++;
            }
        } else {
            throw new RuntimeException(
                    ""Singleton class, Object creation is restricted"");
        }

    }

    public static SingleTonDemo getInstance() {
        return obj;
    }

    // To avoid duplication
    @Override
    public Object clone() throws CloneNotSupportedException {
        throw new CloneNotSupportedException(
                ""Cannot Duplicate Single Ton Object"");
    }

    // To avoid serialization and deserialization problems
    public Object readResolve() {
        return SingleTonDemo.getInstance();
    }

}

In the above program will create only one object in all the cases like serialization, cloning, reflection and factory method etc.

This is the testing code:

package com.eiq.singleton;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.lang.reflect.Constructor;

public class TestSingleTon {

    private static final String FILE_PATH = ""E:/suman/singleton.txt"";

    public static void main(String[] args) throws Exception {

        System.out
                .println(""Creating through factory method of SingleTonDemo.getInstance()"");
        SingleTonDemo obj = SingleTonDemo.getInstance();
        System.out.println(obj + ""  obj  i="" + obj.i);

        // Serializing the object
        FileOutputStream fos = new FileOutputStream(FILE_PATH);
        ObjectOutputStream oos = new ObjectOutputStream(fos);
        oos.writeObject(obj);

        System.out.println();
        System.out.println(""Object creation through deserialization mechanism"");
        // Returns the already created object if we trying to create object
        // through Deserialization mechanism.
        // Deserializing the object first time
        FileInputStream fis1 = new FileInputStream(FILE_PATH);
        ObjectInputStream ois1 = new ObjectInputStream(fis1);
        SingleTonDemo deserializedObj1 = (SingleTonDemo) ois1.readObject();
        System.out.println(deserializedObj1 + ""  deserializedObj1  i=""
                + deserializedObj1.i);

        // Deserializing the object second time, in both the case returns same
        // object
        FileInputStream fis2 = new FileInputStream(FILE_PATH);
        ObjectInputStream ois2 = new ObjectInputStream(fis2);
        SingleTonDemo deserializedObj2 = (SingleTonDemo) ois2.readObject();
        System.out.println(deserializedObj2 + ""  deserializedObj2  i=""
                + deserializedObj2.i);

        // throws exception if we duplicate the object
        // SingleTonDemo ob = (SingleTonDemo) obj.clone();

        // Through Reflection
        System.out.println();
        System.out
                .println(""=====Throwing Exception if we are trying to create object through Reflection======="");
        Class&lt;SingleTonDemo&gt; rObj = (Class&lt;SingleTonDemo&gt;) Class
                .forName(""com.eiq.singleton.SingleTonDemo"");
        Constructor&lt;SingleTonDemo&gt;[] constructors = (Constructor&lt;SingleTonDemo&gt;[]) rObj
                .getDeclaredConstructors();

        for (Constructor&lt;SingleTonDemo&gt; constructor : constructors) {
            constructor.setAccessible(true);
            SingleTonDemo reflObj1 = constructor.newInstance();
            System.out.println(reflObj1 + ""  reflObj1  i="" + reflObj1.i);
        }

    }
}
</code></pre>
"
"26031747","<p>I am posting the complete code here to find MIN and MAX in queue in a constant time.
Please feel free to contact me if you have any doubt.
    // Queue Interface
    package com.java.util.collection.advance.datastructure.queue;
    public interface Queue{
        boolean addR(E e);
        E removeL();
        E element();
        E elementR();
        boolean isFull();
        boolean isEmpty();
        void trim();
    }</p>

<pre><code>package com.java.util.collection.advance.datastructure.queue;
/**
* A deque is a double-ended queue. You can insert items at either end and delete them
* from either end. The methods might be called insertLeft() and insertRight(), and 
* removeLeft() and removeRight().
* @author vsinha
*
* @param &lt;E&gt;
*/
public interface DeQueue&lt;E&gt; extends Queue&lt;E&gt;{

    boolean addL(E element);

    E removeR();

}

package com.java.util.collection.advance.datastructure.queue;


@SuppressWarnings(""hiding"")
public interface FindMinMaxQueue&lt;Integer&gt; extends Queue&lt;Integer&gt;{

    public Integer min();

    public Integer max();
}

package com.java.util.collection.advance.datastructure.queue;
</code></pre>

<p>import java.util.Arrays;</p>

<pre><code>public class MyQueue&lt;E&gt; implements Queue&lt;E&gt;,DeQueue&lt;E&gt;{

    protected int front = 0;
    protected int rear =-1;
    protected E[] elements =null;
    private static final int DEFAULT_INTIAL_CAPACITY =100; 
    private int size =0;

    public MyQueue(){
        this(DEFAULT_INTIAL_CAPACITY);
    }
    @SuppressWarnings(""unchecked"")
    public MyQueue(int intialCapacity){
        if(intialCapacity &lt; 0){
            throw new IllegalArgumentException(""intial capacity can't be null"");
        }
        elements =(E[]) new Object[intialCapacity];
    }
    @Override
    public boolean addR(E e) {
        if(! isFull()) {
            elements[++rear] = e;
            size++;
            return true;
        }
        return false;
    }

    @Override
    public E removeL() {
        E element =null;
        if(!isEmpty()){
            element=elements[front];
            // Nullify the reference
            elements[front] =null;
            ++front;
            --size;
        }
        return element;
    }

    @Override
    public E element() {
        E element =null;
        if(!isEmpty()){
            element=elements[front];
        }
        return element;
    }

    @Override
    public E elementR() {
        E element =null;
        if(!isEmpty()){
            element=elements[rear];
        }
        return element;
    }

    public boolean isFull() {
        return rear == elements.length;
    }


    public boolean isEmpty() {
        return size == 0;
    }
    Override
    public String toString() {
        return ""MyQueue [front="" + front + "", rear="" + rear + "", elements=""
                + Arrays.toString(elements) + "", size="" + size + ""]"";
    }
    @Override
    public void trim() {
        @SuppressWarnings(""unchecked"")
        E[] dest =(E[]) new Object[size];
        System.arraycopy(elements, front, dest, 0, size);
        elements = dest;
        front =0;
        rear=size-1;
    }
    @Override
    public boolean addL(E element) {
        if(front != 0) {
            elements[--front] = element;
            size++;
            return true;
        }
        return false;
    }

    @Override
    public E removeR() {
        E element =null;
        if(size &gt; 0) {
            element=elements[rear];
            // Nullify the reference
            elements[rear] =null;
            --rear;
            --size;
        }
        return element;
    }

}

package com.java.util.collection.advance.datastructure.queue;


public class MinAndMaxFinderQueue extends MyQueue&lt;Integer&gt; implements FindMinMaxQueue&lt;Integer&gt; {

    private Queue&lt;Integer&gt; maxValuesQueue =null;

    private Queue&lt;Integer&gt; minValuesQueue =null;


    public MinAndMaxFinderQueue (int intialCapacity){
        super(intialCapacity);
        maxValuesQueue =new MyQueue&lt;Integer&gt;(intialCapacity);
        minValuesQueue =new MyQueue&lt;Integer&gt;(intialCapacity);

    }
    @Override
    public boolean addR(Integer e) {
        if(super.addR(e)){
            if(max() == null || max() &lt;= e){
                maxValuesQueue.addR(e);
            }

            if(min() == null || min() &gt;= e){
                minValuesQueue.addR(e);
            }
            return true;
        }
        return false;
    }

    @Override
    public Integer removeL() {
        Integer element =super.removeL();
        if(element !=null){
            if(maxValuesQueue.element() == element){
                maxValuesQueue.removeL();
            }

            if(minValuesQueue.element() == element){
                minValuesQueue.removeL();
            }
        }
        //Need to re-generate MIN and MAX queue when the main queue is not empty and min/max queue is empty
        regenerateMin();
        regenerateMax();

        return element;
    }

    private void regenerateMin(){
        Integer current =null;
        if(!super.isEmpty() &amp;&amp; min() ==null){
            for(int front = super.front; front&lt;= super.rear;front++){
                current = (Integer)elements[front];
                if(min() == null || min() &gt;= current){
                    minValuesQueue.addR(current);
                }

            }
        }
    }

    private void regenerateMax(){
        Integer current =null;
        if(!super.isEmpty() &amp;&amp; max() ==null){
            for(int front = super.front; front&lt;= super.rear;front++){
                current = (Integer)elements[front];
                if(max() == null || max() &lt;= current){
                    maxValuesQueue.addR(current);
                }
            }
        }
    }
    public Integer min() {
        return minValuesQueue.elementR();
    }

    public Integer max() {
        return maxValuesQueue.elementR();
    }
    @Override
    public String toString() {
        return super.toString()+""\nMinAndMaxFinderQueue [maxValuesQueue="" + maxValuesQueue
                + "", minValuesQueue="" + minValuesQueue + ""]"";
    }



}
//Test class 
package com.java.util.collection.advance.datastructure.queue;

import java.util.Random;


public class MinMaxQueueFinderApp {

    public static void main(String[] args) {
        FindMinMaxQueue&lt;Integer&gt; queue =new MinAndMaxFinderQueue(10);
        Random random =new Random();
        for(int i =0; i&lt; 10; i++){
            queue.addR(random.nextInt(100));
            System.out.println(queue);
            System.out.println(""MAX :""+queue.max());
            System.out.println(""MIN :""+queue.min());
        }
        System.out.println(queue);
        System.out.println(""MAX :""+queue.max());
        System.out.println(""MIN :""+queue.min());

        queue.removeL();
        System.out.println(queue);
        System.out.println(""MAX :""+queue.max());
        System.out.println(""MIN :""+queue.min());
        queue.removeL();
        System.out.println(queue);
        System.out.println(""MAX :""+queue.max());
        System.out.println(""MIN :""+queue.min());
        queue.removeL();
        System.out.println(queue);
        System.out.println(""MAX :""+queue.max());
        System.out.println(""MIN :""+queue.min());
        queue.removeL();
        System.out.println(queue);
        System.out.println(""MAX :""+queue.max());
        System.out.println(""MIN :""+queue.min());
        queue.removeL();
        System.out.println(queue);
        System.out.println(""MAX :""+queue.max());
        System.out.println(""MIN :""+queue.min());


        System.out.println(queue);
        System.out.println(""MAX :""+queue.max());
        System.out.println(""MIN :""+queue.min());
    }
}
</code></pre>
"
"26131139","<p>The class below should do the trick. Just create an instance, call the ""multiply"" method, and provide the source input stream and the amount of duplicates you need.</p>

<p><strong>Important: you must consume all cloned streams simultaneously in separate threads.</strong></p>

<pre><code>package foo.bar;

import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class InputStreamMultiplier {
    protected static final int BUFFER_SIZE = 1024;
    private ExecutorService executorService = Executors.newCachedThreadPool();

    public InputStream[] multiply(final InputStream source, int count) throws IOException {
        PipedInputStream[] ins = new PipedInputStream[count];
        final PipedOutputStream[] outs = new PipedOutputStream[count];

        for (int i = 0; i &lt; count; i++)
        {
            ins[i] = new PipedInputStream();
            outs[i] = new PipedOutputStream(ins[i]);
        }

        executorService.execute(new Runnable() {
            public void run() {
                try {
                    copy(source, outs);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        return ins;
    }

    protected void copy(final InputStream source, final PipedOutputStream[] outs) throws IOException {
        byte[] buffer = new byte[BUFFER_SIZE];
        int n = 0;
        try {
            while (-1 != (n = source.read(buffer))) {
                //write each chunk to all output streams
                for (PipedOutputStream out : outs) {
                    out.write(buffer, 0, n);
                }
            }
        } finally {
            //close all output streams
            for (PipedOutputStream out : outs) {
                try {
                    out.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}
</code></pre>
"
"26438780","<p>try this is defiantly work  in pom</p>

<pre><code>public boolean isPrebuiltTestButtonVisible() {
    try {

        if (preBuiltTestButton.isEnabled()) {

            return true;

        } else {

            return false;
        }

    } catch (Exception e) {

        e.printStackTrace();
        return false;
    }
}
</code></pre>

<p>this will definitely work in page object model surround with try catch </p>
"
"26894692","<p>If your main concern is faster computation I think writing this code in C is a better option. You also mentioned that your file is 5-6 GB in size. Therefore, using C will make a good difference. Reading line by line data in C is simple. It is like this: </p>

<pre><code>#include &lt;stdio.h&gt;

int main(void)
{
    char string[80];

    freopen(""A.txt"",""r"",stdin);



    while(gets(string))
    {
        puts(string);
    }

    return 0;
}
</code></pre>

<p>Then it will display the content of your file line by line at console. </p>
"
"27300165","<p>This code would help:</p>

<pre><code>int [] a={1,2,3,4,5,6,7};
for(int i=a.length-1;i&gt;=0;i--)
  System.out.println(a[i]);
</code></pre>
"
"27411712","<pre><code>int[] things={11,22,33,44};

List&lt;int[]&gt; Listdata = Arrays.asList(things);

int[] n=Listdata.get(0);

int n1=n[0];

System.out.println(n1);

int[] n=Listdata.get(1);

int n1=n[0];

System.out.println(n1);

int[] n=Listdata.get(2);

int n1=n[0];

System.out.println(n1);

int[] n=Listdata.get(3);

int n1=n[0];

System.out.println(n1);
</code></pre>
"
"27435889","<p>Just use math:</p>

<pre class=""lang-java prettyprint-override""><code>public int invertInt(int arg1) { // Invert negative and positive
    return arg1-arg1*2;
}
</code></pre>

<p>If you need to change specifically:</p>

<pre class=""lang-java prettyprint-override""><code>public int toNegative(int arg1) { // Change to negative
    if (arg1 &gt;= 0) {
        // Its positive so we invert
        return arg1-arg1*2;
    } else {
        return arg1;
    }
}
public int toPositive(int arg1) { // Change to negative
    if (arg1 &lt;= 0) {
        // Its negative so we invert
        return arg1-arg1*2;
    } else {
        return arg1;
    }
}
</code></pre>
"
"27520417","<p>Just use <code>event.getSource()</code> frim within <code>actionPerformed</code></p>

<p>Cast it to the component </p>

<p>for Ex, if you need combobox</p>

<pre><code>JComboBox comboBox = (JComboBox) event.getSource();
JTextField txtField = (JTextField) event.getSource();
</code></pre>

<p>use appropriate api to get the value,</p>

<p>for Ex.</p>

<pre><code>Object selected = comboBox.getSelectedItem();  etc.
</code></pre>
"
"28406752","<p>In Guava:</p>

<pre><code> List&lt;MyClass&gt; list = ImmutableList.of(element);
 MyClass obj = list.get(0);
</code></pre>

<p>Correct with get(0)</p>
"
"28875095","<p>You can see her how to create database Hope this help</p>

<ol>
<li>What you do is connect to localhost</li>
<li>create an sql ""create database your_db""</li>
<li>execute</li>
</ol>

<p><a href=""http://www.tutorialspoint.com/jdbc/jdbc-create-database.htm"" rel=""nofollow"">http://www.tutorialspoint.com/jdbc/jdbc-create-database.htm</a></p>

<p>You must connect first to the localhost</p>

<pre><code>//STEP 1. Import required packages
import java.sql.*;

public class JDBCExample {
   // JDBC driver name and database URL
   static final String JDBC_DRIVER = ""com.mysql.jdbc.Driver"";  
   static final String DB_URL = ""jdbc:mysql://localhost/"";

   //  Database credentials
   static final String USER = ""username"";
   static final String PASS = ""password"";

   public static void main(String[] args) {
   Connection conn = null;
   Statement stmt = null;
   try{
      //STEP 2: Register JDBC driver
      Class.forName(""com.mysql.jdbc.Driver"");

      //STEP 3: Open a connection
      System.out.println(""Connecting to database..."");
      conn = DriverManager.getConnection(DB_URL, USER, PASS);

      //STEP 4: Execute a query
      System.out.println(""Creating database..."");
      stmt = conn.createStatement();

      String sql = ""CREATE DATABASE STUDENTS"";
      stmt.executeUpdate(sql);
      System.out.println(""Database created successfully..."");
   }catch(SQLException se){
      //Handle errors for JDBC
      se.printStackTrace();
   }catch(Exception e){
      //Handle errors for Class.forName
      e.printStackTrace();
   }finally{
      //finally block used to close resources
      try{
         if(stmt!=null)
            stmt.close();
      }catch(SQLException se2){
      }// nothing we can do
  try{
     if(conn!=null)
        conn.close();
  }catch(SQLException se){
     se.printStackTrace();
      }//end finally try
   }//end try
  System.out.println(""Goodbye!"");
}//end main
}//end JDBCExample
</code></pre>
"
"29140371","<p>I had the same problem today and found this very easy solution:</p>

<pre><code>  System.getenv(""userdomain"");
</code></pre>
"
"30056403","<p>You could do it just by using a PoolingDataSource!</p>

<p>Let me try to explain myself with a quick sample:</p>

<pre><code>/**
 * This is a class you can plug everywhere, (better if you use it as a singleton)
 */
public class ConnectionHelper {
    // Our Main Datasource.
    private final DataSource _dataSource;
    // Our Constructor, in which we get the user/pass and connection uri, I also load the DriverName, since I may have more than once version of the same JDBC driver.
    ConnectionHelper (String driverName, String connectionURI, String user, String password) throws Exception {
        // Loading underlying JDBC driver
        try {
            Class.forName(driverName);
        } catch (ClassNotFoundException e) {
            throw new Exception(""Driver not found on the classpath"");
        }
        _dataSource = setupDataSource(connectionURI, user, password);
    }
    // This method will return the connection from the pool
    public Connection getConnection() throws SQLException {
        Connection connection;
        connection = _dataSource.getConnection();
        return connection;
    }
    // Here we create the DataSource
    private DataSource setupDataSource(String connectURI, String userName, String password) {
        // First, we'll create a ConnectionFactory that the
        // pool will use to create Connections.
        // We'll use the DriverManagerConnectionFactory,
        // using the connect string passed by parameter
        ConnectionFactory connectionFactory = new DriverManagerConnectionFactory(connectURI, userName, password);
        // Next we'll create the PoolableConnectionFactory, which wraps
        // the ""real"" Connections created by the ConnectionFactory with
        // the classes that implement the pooling functionality.
        PoolableConnectionFactory poolableConnectionFactory = new PoolableConnectionFactory(connectionFactory, null);
        // Now we'll need a ObjectPool that serves as the
        // actual pool of connections.
        // We'll use a GenericObjectPool instance, although
        // any ObjectPool implementation will suffice.
        GenericObjectPool&lt;PoolableConnection&gt; connectionPool = new GenericObjectPool&lt;&gt;(poolableConnectionFactory);
        // Set the maximum set of connections you want to hold
        connectionPool.setMaxIdle(20);
        // Set the factory's pool property to the owning pool
        poolableConnectionFactory.setPool(connectionPool);
        // Set the AutoCommit as false to handle the Commit/Close by yourself
        poolableConnectionFactory.setDefaultAutoCommit(false);
        // Finally, we create the PoolingDriver itself,
        // passing in the object pool we created.
        PoolingDataSource&lt;PoolableConnection&gt; dataSource = new PoolingDataSource&lt;&gt;(connectionPool);
        return dataSource;
    }
}
</code></pre>

<p>Now, on wherever you need a new connection, just calls something like this:</p>

<pre><code>import com.google.inject.Inject;
import com.yourPackage.ConnectionHelper;
import java.sql.Connection;
import java.sql.PreparedStatement;

public class rawRepository {
    // Helper to get connections and handle the datasource.
    ConnectionHelper _connectionHelper;    
     // Inject it by Dependency Injection     
    @Inject
    public rawRepository(ConnectionHelper connectionHelper) {
        _connectionHelper = connectionHelper;
    }
    // Simple Update
    public void update(long id, String name, String lastname, String country) throws Exception {
        String updateSql = ""UPDATE YOURTABLE"" +
                "" SET NAME = ?, "" +
                "" LASTNAME = ?, "" +
                "" COUNTRY = ?"" +
                "" WHERE ID = ?"";
        // Gets the Connection!
        Connection connection = _connectionHelper.getConnection();
        try {                            
            PreparedStatement statement;
            statement = connection.prepareStatement(updateSql);
            statement.setString(1, lastname);
            statement.setString(2, name);
            statement.setString(3, country);
            statement.setLong(4, id);
            int resultQuery = statement.executeUpdate();
            if (resultQuery == 0)
                throw new Exception(""Execute Update did not update anything"");
            // Commits the connection.
            connection.commit();
        } catch (Exception e) {
            // Remember that this close won't close the connection physically since it's a pool of connections.
            connection.close();
        }
    }
}
</code></pre>

<p>Just, remember that the pooling implementations do not actually close connections when the client calls the close method, but instead return the connections to a pool of available connections for other clients to use. This avoids any overhead of repeatedly opening and closing connections, and allows a large number of clients to share a small number of database connections.</p>

<p>Hope this may help somebody!</p>

<p>God bless you!</p>
"
"5404827","<p> is the return Value, you don't have to specify this by calling a static method:</p>

<pre><code>class Foo {

    static public &lt;X&gt; int bar() { return 42; }

    public int baz() {
        return true ? 42 : (
            Foo.bar() &gt; 42 ? 41 : 43     
        )
        ;
    }
}
</code></pre>
"
"5864926","<ol>
<li><p>First convert the byte array to String.</p></li>
<li><p>Then convert the String to integer.</p></li>
</ol>

<p>Example:</p>

<pre><code> byte[] MyByteArray;

 String Str = new String(MyByteArray);

 int Value = Integer.parseInt(Str);
</code></pre>

<p>Enjoy :)</p>
"
"6028126","<p>If you extend the LinkedList class you will have direct access to all it's methods. Instead of having to write stuff like </p>

<pre><code>fixedList.getList().pop() 
</code></pre>

<p>you could just write </p>

<pre><code>fixedList.pop()
</code></pre>

<p>You could then override the methods where you need to add the maxSize criteria. </p>
"
"6069807","<p>Change the code to this and check if that works</p>

<pre><code>x =random.nextInt(fil.size() - 1);
</code></pre>
"
"6075467","<p>You need to know the POJO name. Assuming you have something like <code>pojo.getName()</code>, then it goes like this:</p>

<pre><code>Map&lt;String, Pojo&gt; pojoMap = new HashMap&lt;String, Pojo&gt;();
for (Pojo pojo:pojoList) {
  pojoMap.put(pojo.getName(), pojo);
}
</code></pre>

<p><em>Note</em> that I changed your requirement, I've <em>converted</em> one list of pojos to one map.</p>
"
"6083793","<p>Use the readline() of java.io.BufferedReader. That returns a string.</p>

<pre><code>String line = new BufferedReader (new FileReader (file) ).readline ();
</code></pre>
"
"6116380","<p>If you want to inline code and not creating an object for the Function each time, why not use a loop. You won't get more efficient than that.  However, if you want readability rather than performance (and most of the time this is a better idea) you may find functional notation suites you.</p>

<pre><code>List&lt;Bar&gt; bars = new ArrayList&lt;Bar&gt;();
for(Foo foo: foos) {
   // do some simple local transform of foo into a Bar.
   bars.add(bar);
}
</code></pre>

<p>Personally, I find that simpler.</p>
"
"6137786","<p>You should use SwingUtilities class</p>

<p>see</p>

<p><a href=""http://www.java2s.com/Code/Java/Threads/InvokeExampleSwingandthread.htm"" rel=""nofollow"">http://www.java2s.com/Code/Java/Threads/InvokeExampleSwingandthread.htm</a></p>

<pre><code>    // Report the result using invokeLater().
    SwingUtilities.invokeLater(new Runnable() {
      public void run() {
        resultLabel.setText(""Ready"");
        setEnabled(true);
      }
    });
  }
};
</code></pre>
"
"6192742","<p>If you add the resources directory in the jar file (so it is under the /resources folder in the jar, and if /src/main is in your build path in eclipse, then you should be able to reference your file as:</p>

<pre><code>getClass().getResource(""/resources/filename.txt"");  
</code></pre>

<p>Which should work in both environments.</p>
"
"6213234","<p>Try to parse the strings in int.</p>

<pre><code>Integer.parseInt(One).intValue() == Integer.parseInt(two).intValue()
</code></pre>

<p>I'm not sure what you're trying to do but my guess is that you'd better to use arrays.</p>
"
"6297884","<p>I actually found the problem - when the bytes are loaded using </p>

<pre><code>try {
   // Read from the InputStream
    bytes = mmInStream.read(buffer);
</code></pre>

<p>they are actually loaded in 2 steps.. While debugging and stepping into the code I found that if first loads 990 bytes and then the remaining bytes.. so when i am back to the UI handler i see only the bytes loaded in the second step..</p>

<p>i wonder if there is a way to force to load all bytes at once</p>
"
"6309890","<p>A Scanner has a default delimiter of <code>\\s+</code>
If you want to match only <code>hello\\s*world</code>, just call <code>scanner.useDelimiter(""hello\\s*world""))</code> and then just <code>scanner.next();</code></p>

<p>Alternativeley, you can call <code>scanner.useDelimiter('any (escaped) char that would not occur in your text ')</code> and use <code>scanner.next(""hello\\s*world""))</code></p>

<p>As a side note, if you want it to have at least 1 space, you want to use a <code>+</code> instead of a <code>*</code></p>
"
"6340587","<p>The <code>new</code> must be written in Java to create a new object instance.</p>

<pre><code>public class Foo {

    public void test() {
        final Foo foo1 = new Foo();
        final Foo foo2 = Foo();
    }

    public Foo Foo() {
        System.out.println(""hello world"");
        return this;
    }
}
</code></pre>

<p>Note, that methods starting with an uppercase character are discouraged in Java to avoid the confusion.</p>
"
"6346084","<p>If you came from C++, why are you surprised? Doesn't C++ have the same <code>new</code>, for the same purpose? Java tries to follow most of C/C++ syntax, that's most likely the reason.</p>

<p>Commenting on artbristol's answer: It is highly improbable that Java designers laid out namespaces first, then were forced to add new keyword. It is very likely the opposite: <code>new</code> was there first, then they found that it allows them to have constructor names collide with other names.</p>
"
"6436486","<p>For showing pop-up menu you may need to use MouseAdapter. Example:</p>

<pre><code>private void createPopUpForTree() {     
    popUpMenuItemDelete  = new JMenuItem(DELETE_COMMAND, KeyEvent.VK_DELETE);
    popUpMenuItemRename  = new JMenuItem(RENAME_COMMAND);
    popUpMenuItemDelete.addActionListener(this);
    popUpMenuItemRename.addActionListener(this);

    treePopup = new JPopupMenu();                               
    treePopup.add(popUpMenuItemDelete);
    treePopup.add(popUpMenuItemRename);

    MouseListener popupListener = new PopupListener();
    treeControl.addMouseListener(popupListener);            
}

class PopupListener extends MouseAdapter {
    public void mousePressed(MouseEvent e)  {maybeShowPopup(e);}
    public void mouseReleased(MouseEvent e) {maybeShowPopup(e);}
    private void maybeShowPopup(MouseEvent e) {
        if (e.isPopupTrigger()) {                                   
            treePopup.show(e.getComponent(), e.getX(), e.getY());
        }
    }
}
</code></pre>

<p>EDIT:
And handling of pop-up menu command:</p>

<pre><code>public void actionPerformed(ActionEvent e) {
    String commandStr = e.getActionCommand();
    if( commandStr.equals(RENAME_COMMAND) ) {
        MyObject obj = getSelectedObject();
        if( obj != null ) 
            obj-&gt;rename();
    }
}

private MyObject getSelectedObject() {
    TreePath[] selPaths = treeControl.getSelectionPaths();
    if( selPaths.length != 1 ) 
        return null;        
    DefaultMutableTreeNode node = (DefaultMutableTreeNode)selPaths[0].getLastPathComponent();
    return (MyObject)node.getUserObject();
}
</code></pre>
"
"6447067","<p>The <code>==</code> operator checks if both sides refer to the same object. Two strings that have the same contents don't (usually) refer to the same object, see below.</p>

<pre><code>String s = """";
String t = """";
if (s == t){
  //false! s and t refer to different objects
}
if (s.equals(t) &amp;&amp; t.equals(s)){ //these two are equivalent
  //true!
}
s = t;
if (s == t){
  //now they refer to the same object, so true!
}
</code></pre>
"
"6458520","<p>You can use a <code>HashMap&lt;String,Attribute&gt;</code></p>
"
"6461499","<p>Try this (wrapped in some class, of course):</p>

<pre><code>import java.net.InetAddress;
import java.net.UnknownHostException;

public static String getLocalHostIP()
    throws UnknownHostException
{
    InetAddress  ip;

    ip = InetAddress.getLocalHost();
    return ip.getHostAddress();
}
</code></pre>

<p>The method returns a string of the form ""xxx.xxx.xxx.xxx"".</p>

<p><strong>UPDATE</strong></p>

<p>An improved method is:</p>

<pre><code>// Determine the IP address of the local host
public static String getLocalHostIP()
{
    try
    {
        return InetAddress.getLocalHost().getHostAddress();
    }
    catch (UnknownHostException ex)
    {
        return null;
    }
}
</code></pre>
"
"6510818","<pre><code>var startDate = ""06/27/2007"";
startDate = new Date(startDate);

console.log(startDate);
</code></pre>
"
"6533881","<p>Executor Framework is just for you.<br>
Here's the pseudocode:<br>
1. Create executor service</p>

<pre><code>Executors type1Runnables = Executors.newFixedThreadPool(4);
Executors type2Runnables = Executors.newFixedThreadPool(4);
</code></pre>

<p>etc..<br>
2. Submit tasks to it</p>

<pre><code>for(){
type1Runnables.submit(new Runnable1());
type2Runnables.submit(new Runnable2);
}
</code></pre>

<p>3. Invoke the executors</p>

<pre><code>type1Runnables.invokeAll();
type2Runnables.invokeAll();
</code></pre>

<p>To make it more generic you could perhaps write your own executorservicefactory which accepts the different runnable types.</p>
"
"6653278","<p>You can use a DateFormatter to parse the Date from the string.</p>

<pre><code>import java.util.*;
import java.text.*;

public class StringToDate
{
 public static void main(String[] args) 
 {
 try 
 {  
   String str_date=""11-June-07"";
   DateFormat formatter ; 
   Date date ; 
   formatter = new SimpleDateFormat(""yyyy-MM-dd"");
   date = (Date)formatter.parse(str_date);  

  } 
  catch (ParseException e)
  {
    System.out.println(""Exception :""+e);  
  }  
 }
} 
</code></pre>

<p>You can change the pattern however you like to reflect your needs.</p>
"
"6735389","<p>You can execute commands without actually hard coding cmd.exe into the code.</p>

<pre><code>public static void main(String[] args) {

      //cmd = the command youw ill be using            
    String cmd = ""ipconfig"";      
    Runtime r = Runtime.getRuntime();      
    Process p;   
    try {       
        p = r.exec(cmd);

    BufferedReader in = new BufferedReader(new InputStreamReader(p.getInputStream()));    
    String inputLine;       
    while ((inputLine = in.readLine()) != null) {     
        System.out.println(inputLine);
          }       
    }     


catch (IOException ex) {      
Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);  
             }
       }
</code></pre>
"
"6792167","<p>primitive types can't be compared to null.</p>

<p>You can test if the number if > 0 to see if a value exists:</p>

<pre><code>if(inv[0] &lt;= 0)
{
    inv[0]=map.getTileId(tileX-1, tileY-1, 0);
}
</code></pre>
"
"6830100","<p>Try to set the <code>ConnectionTimeout</code> before openning the connection.</p>
"
"6839932","<p>The situation has gotten worse for ArrayLists.  On my computer running Java 6.26, there is a fourfold difference.  Interestingly (and perhaps quite logically), there is no difference for raw arrays.  I ran the following test:</p>

<pre><code>    int testSize = 5000000;

    ArrayList&lt;Double&gt; list = new ArrayList&lt;Double&gt;();
    Double[] arr = new Double[testSize];

    //set up the data - make sure data doesn't have patterns
    //or anything compiler could somehow optimize
    for (int i=0;i&lt;testSize; i++)
    {
        double someNumber = Math.random();
        list.add(someNumber);
        arr[i] = someNumber;
    }

    //ArrayList foreach
    long time = System.nanoTime();
    double total1 = 0;
    for (Double k: list)
    {
        total1 += k;
    }
    System.out.println (System.nanoTime()-time);

    //ArrayList get() method
    time = System.nanoTime();
    double total2 = 0;
    for (int i=0;i&lt;testSize;i++)
    {
        total2 += list.get(i);  
    }
    System.out.println (System.nanoTime()-time);        

    //array foreach
    time = System.nanoTime();
    double total3 = 0;
    for (Double k: arr)
    {
        total3 += k;
    }
    System.out.println (System.nanoTime()-time);

    //array indexing
    time = System.nanoTime();
    double total4 = 0;
    for (int i=0;i&lt;testSize;i++)
    {
        total4 += arr[i];
    }
    System.out.println (System.nanoTime()-time);

    //would be strange if different values were produced,
    //but no, all these are the same, of course
    System.out.println (total1);
    System.out.println (total2);        
    System.out.println (total3);
    System.out.println (total4);
</code></pre>

<p>The arithmetic in the loops is to prevent the JIT compiler from possibly optimizing away some of the code.  The effect of the arithmetic on performance is small, as the runtime is dominated by the ArrayList accesses.</p>

<p>The runtimes are (in nanoseconds):</p>

<p>ArrayList foreach: 248,351,782</p>

<p>ArrayList get(): 60,657,907</p>

<p>array foreach: 27,381,576</p>

<p>array direct indexing: 27,468,091</p>
"
"6925296","<p>I think best way is to use a factory method to create B objects from A objects.</p>

<pre><code>class BFactory
{
    public static B createB(A a)
    {
     B b = new B();
     copy(a,b);

     return b;
    }

    private static &lt;X,Y&gt; void copy(X src,Y dest) throws Exception
    {
        List&lt;Field&gt; aFields = getAllFields(src.getClass());
        List&lt;Field&gt; bFields = getAllFields(dest.getClass());

        for (Field aField : aFields) {
            aField.setAccessible(true);
            for (Field bField : bFields) {
                bField.setAccessible(true);
                if (aField.getName().equals(bField.getName()))
                {
                    bField.set(dest, aField.get(src));
                }
            }
        }
    }

    private static List&lt;Field&gt; getAllFields(Class type)
    {
        ArrayList&lt;Field&gt; allFields = new ArrayList&lt;Field&gt;();
        while (type != Object.class)
        {
            Collections.addAll(allFields, type.getDeclaredFields());
            type = type.getSuperclass();
        }
        return allFields;
    }
}
</code></pre>
"
"6927959","<p>Here they are used for grouping. What's inside one of those expression if of type Float, so you can apply the method <code>floatValue()</code> to the whole content of the parenthesis.</p>

<p>They could be removed here as there is no ambiguity. They would have been mandatory with an expression using another operator of higher preseance order. But according <a href=""http://www.java-tips.org/java-se-tips/java.lang/what-is-java-operator-precedence.html"" rel=""nofollow"">to the docs</a>, there is no such operator, the dot/projector has highest priority. So they are really useless here.</p>

<p>Regards,
 Stéphane</p>
"
"6975708","<p>Using the DataInputStream of the Java SDK can be helpful here. DataInputStream provide such functions as readByte() or readChar(), if that's what needed.
A simple example can be:</p>

<pre><code>DataInputStream dis = new DataInputStream(new FileInputStream(""file.dat"")); 
try {
   while(true) {
      byte b = dis.readByte();
      //Do something with the byte
   } 
} catch (EOFException eofe) {
//Stream Ended
} catch (IOException ioe) {
//Input exception
}
</code></pre>

<p>Hope it helps. You can, of course, read the entire stream to a byte array and iterate through it as well...</p>
"
"7013440","<p>Use this code:</p>

<pre><code>public class main {
    public static void main(String args[]){
        String g = ""hello world\nI am Soumitra\nHow are you doing??\n\r "";
        System.out.print(g);
        String g1 = g.replaceAll(""\\n"", "" "");
        String g2 = g1.replaceAll(""\\r"", ""X"");

        System.out.print(""---------After Replacement-----\n"");
        System.out.print(g2);
    }
}
</code></pre>

<p>This will replace the newline(\n)  and carriage return (\r).</p>
"
"7038006","<pre><code>template &lt;class A&gt;
A add (A a, A b)
{
    return (a+b);

}
int main()
{
    int x =10, y =20;
    cout &lt;&lt;""The Integer Addition is "" &lt;&lt; add(x,y);
    return 0;
}
</code></pre>
"
"7127742","<p>You can't.</p>

<p>The garbage collector runs whenever it likes and frees whatever it likes.</p>

<p>That said, it is worth trying that after you delete all references to the data you no longer need, call to <code>System.gc()</code>.</p>

<p>Anyway, you have written that the out of memory error is while writting the data. Maybe you have a memory leak there.</p>
"
"7164500","<pre><code>StringBuilder myStrBuilder = null;

for(String aName:yourNameList)
{
  myStrBUilder.append(aName+""/"");
}

myStrBuilder.deleteCharAt(myStrBUilder.length()-1) 
</code></pre>
"
"7166687","<pre><code> if ( ! findAlbumByName(coll, 'example song') )
  {


  }
</code></pre>
"
"7178582","<p>I'm guessing you're talking about a multi-threaded application.  The obvious solution would be to subclass the threads and embed the ability to set flags in the thread.</p>

<pre><code>public void run() {
  while (keepRunning &amp;&amp; notSuspended) {
     doNextItem(...);
  }
  while (notSuspended == false) {
     try {
       Thread.sleep(1000);
     } catch (InterruptedException e) {
       // do nothing but continue
     }
  }
}

public void suspend() {
  notSuspended = false;
}

public void resume() {
  notSuspended = true;
}

public void kill() {
  keepRunning = false;
}
</code></pre>

<p>Other solutions that capture the thread from within the internals of the JVM are possible (like using the JDI interface); however, it is not really feasible to design code to maintain a consistent state when the threads are being interfered with externally.  A design that internalizes the resting of the thread in a consistent state is much preferred if you want to actually verify that the program state is correctly consistent after a thread was paused.</p>
"
"7308733","<p>I am not sure I get your requirements fully, but here is a high level algorithm:</p>

<ol>
<li><p>Create the required number of threads and put them in an Array.</p></li>
<li><p>Now starting from the second thread to the last, each thread must do a <code>join()</code> on the previous thread; this will facilitate that each thead runs it processing and updating part after its previous has finished.</p></li>
</ol>

<p>Possible code:</p>

<p>Thread class declaration</p>

<pre><code>class WaitingThread extends Thread
{    
    private Thread previousThread;

    public WaitingThread(final Thread previous)
    {
        this.previousThread = previous;
    }

    public void run()
    {
        doParallelTask();

        if(previousThread != null)
        {
             previousThread.join();
        }

        doProcesingAndUpdating();
    }
}
</code></pre>

<p>The array declaration and initialisation;</p>

<pre><code>    final Thread [] threads = new Thread[25];

    for(int i = 0; i &lt; 25; i++)
    {
        if(i == 0)
        {
            threads[i] = new WaitinThread(null);
        }
        else
        {
            threads[i] = new WaitingThread(threads[i - 1]);
        }
    }
</code></pre>

<p>Hope this helps.</p>

<p>PS: I must admit, in the above model it makes more sense to do the <code>doParallelTask()</code> using multiple threads, and doing the 25 <code>doProcessingAndUpdate()</code> using a single thread.</p>
"
"7353246","<p>Every class is an instance of the class <a href=""http://download.oracle.com/javase/7/docs/api/java/lang/Class.html"" rel=""nofollow""><code>Class&lt;T&gt;</code></a> (confusing, I know), where the type parameter <code>T</code> is ""the type of the class modeled by this <code>Class</code> object."" In other words, your class <code>MyController</code> is an <strong>object</strong> of type <code>Class&lt;MyController&gt;</code>.</p>

<p>And every class has a hidden static field called <code>class</code>. If you want to access the <code>MyController</code> class itself, use the declaration <code>MyController.class</code>. This will return an instance of <code>Class&lt;MyController&gt;</code>, and all the methods and fields available to <code>MyController.class</code> are those available to any <code>Class</code> object. For example, <a href=""http://download.oracle.com/javase/7/docs/api/java/lang/Class.html#getName%28%29"" rel=""nofollow""><code>getName()</code></a>.</p>

<p>All in all, your invocation code should read:</p>

<pre><code>public void test_findAnnotatedClosures() {
    Map&lt;String, List&lt;Class&gt;&gt; annotatedClosures =
        annotationScannerService.findAnnotatedClosures(MyController.class,
            MyRequiredAnnotation.class)
}
</code></pre>

<p>PS: @Stefan Kendall is correct. If the method <code>test_findAnnotatedClosures()</code> is not dependent on any instances, it is best&mdash;<em>though not required</em>&mdash;to declare it <code>static</code> and reference it from a static context. But that is beside the point.</p>
"
"7408001","<p>You have to set the EditText to </p>

<pre><code>etAdd.setEnabled(false);
</code></pre>
"
"7438279","<p>I'd just call some native command for that. On Linux it is <code>cat /proc/cpuinfo</code>.</p>

<p>Java is not good tool for this purpose but still can easily collect information form such native tools/calls.</p>
"
"7453000","<p>Better use a switch statement since the conditonal expression is not changing.
So do it like:</p>

<pre><code>switch (age) {
    case 18:
        return ""young"";
    case 30:
        return ""old"";
    default:
        return ""??"";
    }
</code></pre>
"
"7463508","<p>Can you remove the headers element in @RequestMapping and try.. </p>

<p>Like </p>

<pre>
<code>
@RequestMapping(value=""/getTemperature/{id}"", method = RequestMethod.GET)
</code>
</pre>

<p>I guess spring does an 'contains check' rather than exact match for accept headers. But still, worth a try to remove the headers element and check.</p>
"
"7471311","<p>Here is my suggestion for this problem,</p>

<ol>
<li>Every swing object can implement an interface called <code>java.awt.event.ComponentListener</code>. </li>
<li>One of its method is <code>componentResized(ComponentEvent e)</code>. </li>
<li>Your main application frame should implement  this interface and override the resize event method.
This is how you listen to the resize event, Checkout <a href=""http://download.oracle.com/javase/tutorial/uiswing/events/componentlistener.html"" rel=""nofollow"">this link</a> . I hope this helps you.</li>
</ol>
"
"7490459","<p>You can't see the Sun/Oracle source code from eclipse directly. If it was your own code you would be able to right click on the method, say <code>println()</code>, and click ""Open Declaration"", and eclipse would show you the place where the method was declared. However, Eclipse doesn't package that source code with it, so it won't work with Sun/Oracle code.</p>
"
"7542700","<p>I would recommend using regular expressions and their ""group"" functionality. I would actually remove all whitespace to make things easier, take it out of the equation, one less thing to deal with. And obviously I would recommend simplifying the string, replacing ""--"" with ""+"", ""*+"" with ""*"" and so on.</p>

<p>now you can use a regex on your cleaned up string.</p>

<pre><code>Pattern firstPat = Pattern.compile(""(((\\+|-)?)\\d+(.\\d+)?)"");//for matching the first number, leading sign is optional
Pattern remainingPat = Pattern.compile(""(\\+|-)(\\d+(.\\d+)?)"");//for remaining numbers, leading sign is mandatory.
Pattern remainingPatWithExtOps = Pattern.compile(""(\\*|/|\\+|-)(-?\\d+(.\\d+)?)"");//for remaining numbers, accommodating multiply and divide with negative signs(positive signs should have been cleaned out)

Matcher match = firstPat.matcher(inputString);
</code></pre>

<p>now you can iterate through the string using the <code>match.find()</code> method. and then use <code>match.group(1)</code> to get the sign/operation, and use <code>match.group(2)</code> to get the number...</p>

<p>So...</p>

<pre><code>Double firstnum;
boolean firstNumSigned = false;
if(match.find())
{
    firstNum = Double.parse(match.group(0));// Parsing handles possible sign in string. 
    //obv check for exceptions during this and double check group num
    String tmp = match.group(1);
    firstNumSigned = tmp.equals(""+"") || tmp.equals(""-"");
}
else
{//no match means the input was probably invalid....
    throw new IllegalArgumentException(""What the heck were you thinking inputting that?!"");
}
match = remainingPat.matcher(inputString);//use our other pattern for remaining numbers
if(firstNumSigned)
{
    match.find();//a signed first number will cause success here, we need to ignore this since we already got the first number
}
Double tmpRemaingingNum;
String operation;
while(match.find())
{
    operation = match.group(1);
    tmpRemainingNum = Double.parse(match.group(2));
    //Do what you want with these values now until match.find() returns false and you are done
}
</code></pre>

<p>PS: code is not tested, im fairly confident of the regex, but I'm not 100% sure about the grouping brackets on the first pattern.. might need to experiment</p>
"
"7585708","<p>seems like issue with special characters. Check this <a href=""http://commons.apache.org/lang/api-2.4/org/apache/commons/lang/StringEscapeUtils.html#escapeHtml%28java.lang.String%29"" rel=""nofollow"">StringEscapeUtils.escapeHtml</a> if it helps. or any method there</p>

<p>edited: added this logic as he was not able to get code working</p>

<pre><code>public static void main(String[] args) throws FileNotFoundException {
        String asd = ""’"";
        System.out.println(StringEscapeUtils.escapeXml(asd)); //output - &amp;#8217;
    System.out.println(StringEscapeUtils.escapeHtml(asd)); //output - &amp;rsquo;
}
</code></pre>
"
"7597598","<pre><code>boolean intVal = false;
    for(int i=0;i&lt;str.length;i++) {
            intVal = false;
            try {
                if (Integer.parseInt(str[i]) &gt; 0) {
                    intVal = true;
                }
            } catch (java.lang.NumberFormatException e) {
                intVal = false;
            }
        m.put(str[i], !intVal);
    }
</code></pre>
"
"7661607","<pre><code>    return yourString.replaceAll(""substr1"",""relp1"").
                     replaceAll(""substr2"",""relp2"").
                     replaceAll(""substr3"",""relp3"")
</code></pre>
"
"7663331","<p>WRONG:</p>

<pre><code>StringBuilder sb = new StringBuilder();
sb.append(""b""+""u"");
</code></pre>

<p>CORRECT:</p>

<pre><code>StringBuilder sb = new StringBuilder();
sb.append(""b"").append(""u"");
</code></pre>

<p>BEST: //Since you knew what's going to be in there already! ;)</p>

<pre><code>StringBuilder sb = new StringBuilder();
sb.append(""bu"");
</code></pre>

<p><code>:)</code></p>

<p><strong>EDIT</strong></p>

<p>I guess my answer above is not correct when dealing with literals only...</p>

<p><code>:/</code></p>
"
"7669390","<p>In your first statement, that prints ""A"", you could workaround the issue by casting the result of the static <code>a()</code> call to a <code>B</code>:</p>

<pre><code>((B) a(new B())).testArgs(new B());
</code></pre>
"
"7735142","<pre><code>Connection conn = getMySqlConnection();
    System.out.println(""Got Connection."");
    Statement st = conn.createStatement();

    String tableName = ur table name ;
    String query = ur query;
    Statement stmt = null;
    ResultSet rs = null;
    try {
      stmt = conn.createStatement();
      rs = stmt.executeQuery(query);
      System.out.println(""Exist"");;
    }
    catch (Exception e ) {
      // table does not exist or some other problem
      //e.printStackTrace();
      System.out.println(""Not Exist"");
    }

    st.close();
    conn.close();
</code></pre>
"
"7740368","<p>The subclass does inherit, however the superclass accessor methods are not inherently accessible. An easy way to be able to get/set values from the superclass is to setup delegate methods in your subclass. </p>

<p>For example, if the super class has an attribute ""label"", in your sub class you would create a method:</p>

<pre><code>public String getLabel(){
    return super.getLabel();
}

public void setLabel(String label){
    super.setLabel(label);
}
</code></pre>

<p>Most IDEs have ways to generate delegate methods easily without hand coding them all. In Netbeans for example ""alt+insert"" will bring up a code generation options menu in which you can select delegates and then choose which included class or superclass to create delegate methods for.</p>
"
"7740427","<p>There is no constructor that matches the signature of your constructor (look <a href=""http://download.oracle.com/javase/6/docs/api/java/awt/Label.html#Label%28java.lang.String,%20int%29"" rel=""nofollow"">here</a>), so when you call</p>

<p><code>super(shlTictactoe,none)</code></p>

<p>it can't find the appropriate constructor on label.  You need to pass in a String and an int.</p>
"
"7752522","<p>Hi Aloob please check with this, Bit lengthy, might be having shorter version of this, Still...</p>

<pre><code>[A-z]*||[[A-z]*[-]*]*||[[A-z]*[-]*[']*]*
</code></pre>
"
"7802752","<p>I had the same issue with a project I worked on for school recently.  You have to call repaint on the frame too (so I changed the ActionListener to take a JFrame in the constructor).  I also rearranged the code to use the content pane of the JFrame.  This seems to work for me:</p>

<pre><code> public Test() {
    this.area = new JTextArea();

    this.getContentPane().setLayout(new BorderLayout());
    this.getContentPane().add(area, BorderLayout.CENTER);

    JButton button = new JButton(new MyClickAction(this));
    button.setText(""Click Me!"");

    this.getContentPane().add(button, BorderLayout.SOUTH);

    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    this.setPreferredSize(new Dimension(500, 200));

    this.area.setText(""this is just a test"");

    this.pack();
    this.setVisible(true);
}

public static void main(String[] args) {
    new Test();
}

private class MyClickAction extends AbstractAction 
{
    private JFrame frame;

    public MyClickAction(JFrame frame) {
        this.frame = frame;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        area.setBackground(new Color(0, 0, 123, 138));
        frame.repaint();
    } 
}
</code></pre>
"
"7958671","<pre><code>public boolean trueDate(String date){
  String nums = ""0123456789"";
  String[] temp;
  temp = date.split(""/"");
  String year = temp[0];
  String month = temp[1];
  String day = temp[2];

  bool isValid = true;
  for(int i = 0; i &lt; year.length(); i++)
  {
    if(nums.indexOf(year.charAt(i)) == -1)
    {
      isValid = false;
    }
  }

  for(int i = 0; i &lt; month.length(); i++)
  {
    if(nums.indexOf(month.charAt(i)) == -1)
    {
      isValid = false;
    }
  }

  for(int i = 0; i &lt; day.length(); i++)
  {
    if(nums.indexOf(day.charAt(i)) == -1)
    {
      isValid = false;
    }
  }

  return isValid;
}
</code></pre>
"
"8022250","<p>Go to <code>Window &gt; Preferences &gt;Java &gt; Installed JREs</code>.</p>

<p>Then click <code>Add...</code> and select <code>Standard VM</code>.</p>

<p>You need to specify the directory of your JRE and give it a name. </p>

<p>When you are done, just check the right JRE in the same window.</p>

<p>By default, the checked JRE is added to the build path of newly created Java projects.</p>

<p>(my Eclipse SDK version is 3.7.0)</p>
"
"8053528","<p>you can use <code>android:fastScrollEnabled=""true""</code> in you 
and don't forget to : <code>YourListView.requestFocusFromTouch();</code> after <code>yourAdapter.notifyDataSetChanged();</code> because it (yourlistview) lose the focus in fast speed </p>
"
"8064712","<pre><code>s1.addAll(s2);
s1.removeAll(s2);
</code></pre>

<p>Should work.</p>
"
"8095141","<p>Your problem is that you're reading the values out of the same array you're modifying.</p>

<pre><code>public static void reverse(int[] originalArray) {
    int[] newArray = new int[originalArray.length];

    for (int i = 0; i &lt; originalArray.length; i++) {
        newArray[i] = originalArray[originalArray.length - i - 1];
    }
}
</code></pre>
"
"8133855","<pre><code>String str = ""Your number is (123,456,789)"";
str = new String(str.substring(16,str.length()-1));
</code></pre>
"
"8133864","<pre><code>private void showHowToUseRegex()
{
    final Pattern MY_PATTERN = Pattern.compile(""Your number is \\((\\d+),(\\d+),(\\d+)\\)"");
    final Matcher m = MY_PATTERN.matcher(""Your number is (123,456,789)"");
    if (m.matches()) {
        Log.d(""xxx"", ""0:"" + m.group(0));
        Log.d(""xxx"", ""1:"" + m.group(1));
        Log.d(""xxx"", ""2:"" + m.group(2));
        Log.d(""xxx"", ""3:"" + m.group(3));
    }
}
</code></pre>

<p>You'll see the first group is the whole string, and the next 3 groups are your numbers.</p>
"
"8149687","<pre><code>int[] combinedArrays = new int[one.length + two.length];
int index = 0;
for (int i : one) {
    combinedArarys[index] = one[i];
    index++;
}

for (int i : two) {
    two[index] = two[i];
    index++;
}
</code></pre>
"
"8196014","<p>No. </p>

<p>Static classes are loaded at runtime when you first use it, and unloaded only when the program exits (afaik).</p>

<p>So you can make a static method <code>close</code> in the class itself which cleans up the static members, and call it when you quit.</p>
"
"8203780","<p>Don't add the chart panel into the main frame, add it to its content pane instead.
<code>replace this.ji.add(cp);</code> by <code>this.ji.getContentPane().add(cp)</code></p>

<p><strong>Or better:</strong>
In NetBeans, under the GUI editor (not code editor) add a panel into your main frame and call it something like <code>chartPanel</code>. Add all other controls you want to display and position them as you like. Once done, switch back to code editor. On the main frame's constructor, do the following:</p>

<pre><code>// Inside the initializeComponents() method 
// Find and replace 
chartPanel = new JPanel(); 
// By 
chartPanel = createChartPanel();

// Create chart panel method
public JPanel createChartPanel(){
    DefaultPieDataset pieDataset = new DefaultPieDataset();
    pieDataset.setValue(""One"", new Integer(10));
    pieDataset.setValue(""Two"", new Integer(20));
    pieDataset.setValue(""Three"", new Integer(30));
    pieDataset.setValue(""Four"", new Integer(10));
    pieDataset.setValue(""Five"", new Integer(20));
    pieDataset.setValue(""Six"", new Integer(10));
    JFreeChart chart = ChartFactory.createPieChart3D(""3D Pie Chart"", pieDataset, true, true, true);
    return new ChartPanel(chart);
}
</code></pre>
"
"8233651","<p>Well you have to invoke, <code>writeObject()</code> instead of <code>readObject()</code> which is actually to read from disk to memory, and of course when the program ends, so does the memory used by that program.</p>
"
"8274532","<p>why is animal a class level attribute? change the loop to <code>for(Animal animal: animal_list)</code> and I guess that should fix it</p>
"
"8280090","<p>Ok so I came up with a solution that worked for me:</p>

<pre><code>    public String getRidOfAnnoyingChar(DatagramPacket packet){
        String result = new String(packet.getData());
        char[] annoyingchar = new char[1];
        char[] charresult = result.toCharArray();
        result = """";
        for(int i=0;i&lt;charresult.length;i++){
            if(charresult[i]==annoyingchar[0]){
                break;
            }
            result+=charresult[i];
        }
        return result;
    }
</code></pre>

<p><strong>EDIT:</strong>
There exists a better solution using <code>ByteArrayOutputStream</code> which can be found here: <a href=""http://stackoverflow.com/questions/8288128/how-to-reinitialize-the-buffer-of-a-packet"">How to reinitialize the buffer of a packet?</a></p>
"
"8373803","<p>If the <code>return</code> inside <code>if</code> and <code>for</code> are not executed we still need to return a value. So a <code>return</code> statement is required.</p>

<p>Looking at the code we see that either the return in the <code>if</code> or the <code>for</code> will be hit, but this cannot be inferred by the compiler.</p>
"
"8400825","<p>In Java, you can throw a <code>NullPointerException</code> by throwing <code>null</code>. In this case, the throwable will ultimately be a <code>NullPointerException</code>.</p>

<pre><code>public static void main(String[] args)
    {
        try{
            a(null);
        }
        catch(Exception e)
        {
            System.out.println(e);
            e.printStackTrace();
        }
    }
    public static void a(String[] args)  
    {
        throw null; 
    }
</code></pre>

<p>Output: </p>

<pre><code>java.lang.NullPointerException 
java.lang.NullPointerException  
at scjp.Scjp.a(Scjp.java:18)    
at scjp.Scjp.main(Scjp.java:8)
</code></pre>
"
"8403329","<p>Now I believe this is a bug.</p>

<p>On Java Spec (5.1.3), it is said that it uses ""rounding towards zero"".</p>

<p><code>Otherwise, if the floating-point number is not an infinity, the floating-point
value is rounded to an integer value V, rounding toward zero using IEEE 754
round-toward-zero mode (§4.2.3).</code></p>

<p>And <strong>round towards zero</strong> (or truncate, or round away from infinity) is just (quoting wiki):</p>

<p><code>q = truncate(y) = sgn(y) * floor(abs(y)) = -sgn(y) * ceiling(-(abs(y))</code></p>

<p>q is the integer part of y, without its fraction digits.</p>
"
"8413003","<p>Here is the solution:</p>

<pre><code>public class ArrayFilter {

    private static int[][] arr = new int[][] { {1, 2, 3}, {1, 2, 3}, {4, 5, 6}};

    private static void printOddEvens(int[][] matrix) {
        for (int row = 0; row &lt; matrix.length; row++) {
            for (int col = 0; col &lt; matrix[row].length; col++) {
                // rowIndex + value is only even when both are odd or both are even
                // the modulo (%) operator returns the remainder of the division
                if ((row + matrix[row][col]) % 2 == 0) {
                    System.out.print(matrix[row][col] + "" "");
                }
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {
        printOddEvens(arr);
    }
}
</code></pre>

<p>One less future competitor for my job I guess (-;</p>
"
"8502504","<p>Jakarta StringUtils does it.
Here is the code from there:</p>

<pre><code>public static String join(Object[] array, String separator) {
    if (array == null) {
        return null;
    }
    return join(array, separator, 0, array.length);
}
</code></pre>
"
"8549357","<p>If you want a fast way of getting only unique values from an array <a href=""http://code.hammerpig.com/fast-way-to-get-all-unique-values-from-a-list-in-java.html"" rel=""nofollow"">this link</a> has a very fast method. Below uses an ArrayList, but it will not be hard for you to convert from string array to an ArrayList - or just use ArrayLists instead.</p>

<pre><code>e.g. new ArrayList(Arrays.asList(myArray));
</code></pre>

<p>In short you use a hashset to only get unique values using this method</p>

<pre><code>public static ArrayList GetUniqueValues(Collection values)
{
    return new ArrayList(new HashSet(values));
}
</code></pre>

<p>Then use it like so</p>

<pre><code>ArrayList x = new ArrayList();
x.add(""abc"");
x.add(""abc"");
x.add(""abc"");
x.add(""def"");
x.add(""def"");
x.add(""ghi"");

for (Object y : GetUniqueValues(x))
    Log.d(""something"", y); //ok lets print the value
</code></pre>

<p>To yield the result of ""abc, def, and ghi""</p>

<p>To be clear I agree with Travis to ask why you have duplicates. The above is to answer the question.</p>
"
"8563026","<p>I'm just curious about this line: </p>

<pre><code>private Logger logger = LoggerFactory.getLogger(MyController.class);
</code></pre>

<p>Is it:</p>

<pre><code>LoggerFactory.getLogger(MyController.class) 
</code></pre>

<p>or:</p>

<pre><code>LoggerFactory.getLogger(MyController.class.getName());
</code></pre>

<p>Because the first one will return ""class"" before the real name: </p>

<pre><code>class com.example.MyController (instead of com.example.MyController) 
</code></pre>
"
"8570847","<p>I figured it out. I switched it to</p>

<pre><code>private void getQuestion() {
    res = getResources();
    qString = res.getStringArray(R.array.questions);
    arrayLength = qString.length;
    qTotal = arrayLength;

}

private void getRandom() {
    rnd = rgenerator.nextInt(arrayLength);
    rQuestion = qString[rnd];
    qString[rnd] = ""used"";
    seperate();

}

private void seperate() {
    if (rQuestion != ""used"") {
        tokens = new StringTokenizer(rQuestion, "":"");
        wordCount = tokens.countTokens();
        sep = new String[wordCount];
        wArray = 0;
        while (tokens.hasMoreTokens()) {
            sep[wArray] = tokens.nextToken();
            wArray++;
        }
        qNumber++;
    } else {
        if (qNumber &lt; qTotal) {
            getRandom();
        } else {
            startActivity(new Intent(""com.example.END""));
        }
    }

}
</code></pre>

<p>It gets the array from resources, then pulls a random question from the array. It then sets that one to ""used"" and splits it. It also checks to see if the pulled question is ""used, and if it is, it pulls another question. It also goes to the end game activity if all questions are ""used""</p>
"
"8597701","<p>change: </p>

<pre><code>`spd = this.speed;`
</code></pre>

<p>to:</p>

<pre><code>`speed = spd;`
</code></pre>
"
"8597713","<p>Here is your problem: </p>

<pre><code>spd = this.speed;
</code></pre>

<p>You want</p>

<pre><code>this.speed = spd;
</code></pre>

<p>In Java (and most programming languages for that matter) the variable being assigned to needs to be on the left hand side not the right. </p>

<p>What you were doing is assigning the existing value of speed to the local variable in the constructor.</p>
"
"8637983","<p>I read your <a href=""http://stackoverflow.com/questions/8637815/naming-conventions-in-java"">other post</a> and got the impression you are a new java developer, so I found the need to give a running example. 
Simply copy paste this to your IDE and run it. It should run and produce an output which is a proof of concept for you. </p>

<p>The input I am using here is </p>

<pre><code>String[] input = new String[]{ ""1,2,1"" , 
                               ""1,1,2"", 
                               ""1,2,3"",
                               ""1,3,1"",
                               ""1,1,1"",
                               ""1,3,3"",
                               ""1,1,3""};
</code></pre>

<p>And as you can see it has repetitions as you described. 
The output is </p>

<pre><code> The triangle [Triangle{sides=[1, 1, 2]}] already exists!
 The triangle [Triangle{sides=[1, 1, 3]}] already exists!
 triangles = [Triangle{sides=[1, 2, 3]}, 
              Triangle{sides=[1, 1, 3]}, 
              Triangle{sides=[1, 1, 2]}, 
              Triangle{sides=[1, 1, 1]}, 
              Triangle{sides=[1, 3, 3]}]
</code></pre>

<p>As you requested the output is with no repetition. </p>

<pre><code>import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
public class Triangle
{
    private int[]sides;
    public Triangle( int x, int y, int z)
    {
        sides = new int[]{x,y,z};
        Arrays.sort( sides );
    }

    public Triangle( String ... args )
    {
        this( Integer.parseInt( args[0].trim() ), Integer.parseInt( args[1].trim() ), Integer.parseInt( args[2].trim() ));
    }

    @Override
    public boolean equals( Object o )
    {
        if ( this == o ) return true;
        if ( o == null || getClass() != o.getClass() ) return false;

        Triangle triangle = ( Triangle ) o;

        if ( !Arrays.equals( sides, triangle.sides ) ) return false;

        return true;
    }

    @Override
    public int hashCode()
    {
        return sides != null ? Arrays.hashCode( sides ) : 0;
    }

    @Override
    public String toString()
    {
        return ""Triangle{"" +
                       ""sides="" + Arrays.toString( sides ) +
                       '}';
    }

    public static void main( String[] args ) throws IOException
    {

        String[] input = new String[]{ ""1,2,1"" , ""1,1,2"", ""1,2,3"",""1,3,1"",""1,1,1"",""1,3,3"",""1,1,3""};

        Set&lt;Triangle&gt; triangles = new HashSet&lt;Triangle&gt;(  );
        for ( String s : input )
        {
            Triangle triangle = new Triangle( s.split( "","" ) );
        if ( triangles.contains( triangle ))
        {
            System.out.println(""The triangle ["" + triangle + ""] already exists!"");
        }
        triangles.add( triangle );
        }
        System.out.println( ""triangles = "" + triangles );
    }
}
</code></pre>
"
"8685221","<p>Unlike all other answers, this answer actually works!</p>

<pre><code>xmlstring.replaceAll(""\\bwsp:rsid\\w*?=\""[^\""]*\"""", """");
</code></pre>

<p>Here's a test that fails with all other answers:</p>

<pre><code>public static void main(String[] args) {
    String xmlstring = ""&lt;tag wsp:rsidR=\""005816D6\"" foo=\""bar\"" wsp:rsidRDefault=\""005816D6\""&gt;hello&lt;/tag&gt;"";
    System.out.println(xmlstring);
    System.out.println(xmlstring.replaceAll(""\\bwsp:rsid\\w*?=\""[^\""]*\"""", """"));
}
</code></pre>

<p>Output:</p>

<pre><code>&lt;tag wsp:rsidR=""005816D6"" foo=""bar"" wsp:rsidRDefault=""005816D6""&gt;hello&lt;/tag&gt;
&lt;tag  foo=""bar"" &gt;hello&lt;/tag&gt;
</code></pre>
"
"8693193","<p>Java is a strongly typed language. The types are needed to be able to compile code and validate types compatibility at compile time. </p>

<p>Weakly typed languages do not have types. For example when you say <code>var x</code> in JavaScript you just define variable. Then value of any type may be assigned there. This means that if for example your code has bug and you assign string to this variable and then try to divide this variable by 2 (<code>y = x / 2</code>) the script will just fail at runtime. Java will not allow you to compile such code. </p>

<p>There is the principle: the bug costs x during development, x*10 during QA and x*100 if it arrives to production. Compiler and strongly typed languages allow to decrease number of (stupid) bugs that arrive to QA and therefore make software development easier, faster and cheaper. </p>
"
"8710916","<p>You could try TO disable it changing your log4j.properties:</p>

<pre><code>log4j.rootLogger=off, stdout
#log4j.logger.ac.biu.nlp.nlp.engineml=info, logfile
#log4j.logger.org.BIU.utils.logging.ExperimentLogger=warn

...
</code></pre>

<p>Ref:
<a href=""http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/Level.html#OFF"" rel=""nofollow"">http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/Level.html#OFF</a></p>
"
"8710921","<p>Add the following to your log file</p>

<pre class=""lang-none prettyprint-override""><code>log4j.logger.com.class.with.package.BasicImplementation = off, logfiledata

log4j.appender.logfiledata = ac.biu.nlp.nlp.log.BackupOlderFileAppender
log4j.appender.logfiledata.append=false
log4j.appender.logfiledata.layout = org.apache.log4j.PatternLayout
log4j.appender.logfiledata.layout.ConversionPattern = %-5p %d{HH:mm:ss} [%t]: %m%n
log4j.appender.logfiledata.File = logfiledata.log
</code></pre>

<p>If the above will not stop if from logging, it will at least log all the data from BasicImplementation class to a separate file.</p>
"
"8714011","<p>No both are not Equals.</p>

<pre><code>list [abc,null]
</code></pre>

<p>Another list stored</p>

<pre><code>list [abc]
</code></pre>

<p>so both are not equal</p>
"
"8755109","<p>In general it is a bad practice to concenate Strings with <code>+</code> ant with <code>concat()</code>. If you want to create String use the <code>StringBuilder</code> instead. <a href=""http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/StringBuilder.html"" rel=""nofollow"">http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/StringBuilder.html</a></p>
"
"8840092","<p>Take a look at <code>Object.clone()</code> <a href=""http://docs.oracle.com/javase/1.4.2/docs/api/java/lang/Object.html#clone"" rel=""nofollow"">http://docs.oracle.com/javase/1.4.2/docs/api/java/lang/Object.html#clone</a>()</p>

<p>Stack extends Vector which implements cloneable, so you can simply execute:</p>

<pre><code>Stack stackb = stacka.clone(); 
</code></pre>
"
"8863711","<p>First of all, are you sure you want to override <code>Equals()</code> and <code>GetHashCode()</code>? In most scenearios you should be fine with the default referential equality.</p>

<p>But, let's suppose not. Than, what is the appropriate equality semantics you want? </p>

<p>For example let's say each <code>A</code> has a <code>getB</code> field of type <code>B</code> and each <code>B</code> has a <code>getA</code> field of type <code>A</code>. Let <code>a1</code> and <code>a2</code> be two <code>A</code> objects, have the same fields and the same <code>getB</code> (same as in ""same memory address"") <code>b1</code>. Are <code>a1</code> and <code>a2</code> equal? Suppose <code>b1.getA</code> is the same as <code>a1</code> (same as in ""same memory address"") but not the same as <code>a2</code>. Do you still want to consider <code>a1</code> and <code>a2</code> equal? </p>

<p>If not, don't override anything and use the default referential equality. </p>

<p>If yes, then here is a solution: Let <code>A</code> have a <code>int GetCoreHashCode()</code> function that does not depend on <code>getB</code> element, (but depend on other fields). Let <code>B</code> have a <code>int GetCoreHashCode()</code> function that does not depend on getA element, (but depend on other fields). Now let <code>int GetHashCode()</code> function of <code>A</code> depend upon <code>this.GetCoreHashCode()</code> and <code>getB.GetCoreHashCode()</code> and likewise for <code>B</code>, and you are done.</p>
"
"8923703","<p>Please use the following query.</p>

<pre><code>Select * from maxID order by myId desc limit 1,1;
</code></pre>
"
"8940639","<p>use <a href=""http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Arrays.html#sort%28T%5B%5D,%20java.util.Comparator%29"" rel=""nofollow"">Arrays.sort()</a>. You can dont even have to add the distance of each one from current in a separate array. just implement the comparator correctly.</p>

<p>use this after doing a <code>toArray()</code> on your <code>ArrayList</code>.</p>
"
"8975602","<p>If all values you will add are pointers, you can use a void pointer:</p>

<pre><code>std::vector&lt;void *&gt; myVector;
</code></pre>
"
"8979013","<p>I've done this, but I used a much different approach. I wrote plain POJOs and Plain Java Interfaces without messing around with the strange abstract classes, remote stub compilers, or a plethora of checked exceptions associated with the Java RMI API. Then I used Spring Remoting to connect everything and Spring took care of the RMI transport:</p>

<p>Take a look at the manual here:
<a href=""http://static.springsource.org/spring/docs/2.0.x/reference/remoting.html"" rel=""nofollow"">http://static.springsource.org/spring/docs/2.0.x/reference/remoting.html</a></p>

<p>Here's an example of a bean that will proxy out to a remote registry:</p>

<pre><code>&lt;bean id=""accountService"" class=""org.springframework.remoting.rmi.RmiProxyFactoryBean""&gt;
    &lt;property name=""serviceUrl"" value=""rmi://HOST:1199/AccountService""/&gt;
    &lt;property name=""serviceInterface"" value=""example.AccountService""/&gt;
&lt;/bean&gt;
</code></pre>

<p>This solves your problem, but probably doesn't answer your question exactly... the old RMI API from Java is quite antiquated though, Spring lets you work with ""just plain java"".</p>
"
"9042028","<p>Yes, overriding the base class method to create and accommodate new functionality in the derived class is what defines the subtype - polymorphic feature. </p>

<pre><code>class A{methodA...}
class B extends A{methodA...}
A a=new B;
a.methodA(); &lt;&lt;&lt;&lt; this should call B's methodA
</code></pre>
"
"9096181","<pre><code>private final Object startupShutdownMonitor = new Object();

public void refresh() throws BeansException, IllegalStateException {
   synchronized (this.startupShutdownMonitor) {
       // Prepare this context for refreshing.
       prepareRefresh();
   }

}
</code></pre>

<p>This is equivalent to the following</p>

<pre><code>public void refresh() throws BeansException, IllegalStateException {
      //Do something that does not affect the state of the object
      System.out.println(""I am inside the refresh method() and will accquire lock on the object now"");
      prepareRefresh();
}

private synchronized void preparedRefresh() {
    //Do something thread safe here
    //Since the thread here has the monitor it can safely alter the state of the class instance here with causing inconsistensy
}
</code></pre>

<p>Acquiring a lock on the instance object <code>startupShutdownMonitor</code> is same as acquiring a lock on the instance of the class on which refresh method is being called upon.</p>
"
"9150254","<pre><code>@Override
public void onKeyPress(KeyPressEvent event) {
   char charCode= event.getCharCode();
   if(charCode == (char) KeyEvent.VK_BACK_SPACE){
       //do someThing 
   }
}
</code></pre>
"
"9150276","<pre><code>    @Override
    public void onKeyPress(KeyUpEvent event) {
       char charCode= keyUpEvent.getNativeKeyCode();
       if(charCode == (char) KeyCodes.KEY_BACKSPACE){
           //do someThing 
    }
</code></pre>
"
"9153496","<p>your problem is that <code>text</code> is JTextArea instance. After passing it to <code>JOptionPane.showMessageDialo(null,text);</code> over text is called method <code>toString()</code>, which is delivered by Object super type. To solve this problem, you need to pass to that method the content of that <code>text</code> instance. To do that just call method <code>getText()</code>, and should work. </p>

<p>In addition to improve your code: </p>

<p>I no aware how method <code>append</code>, works but a good practice is to use <code>StringBuilder</code> class to reduce the operation over immutable <code>String</code> objects. As the are immutable, when you need a concatenation of those you are really creating new one object, so each pass of loop will create new object. Another thing is that you are using obsolete approach, for <code>List</code> iteration. Since <a href=""http://docs.oracle.com/javase/1.5.0/docs/guide/language/foreach.html"" rel=""nofollow"">foreach loop</a> has been introduced in Java, it should be used instead that for pattern you have implemented. The for each loop can be used over all elements, that implements interface <a href=""http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Iterable.html"" rel=""nofollow"">Iterable</a>, so improved version of your code would look like:</p>

<pre><code>public static &lt;T&gt; void print(Iterable&lt;T&gt; iterable){

    if(iterator == null) { //We throw an exception if method can not operater
       throw new IllegelArgumentException(""The argument iterable must not be null"".
    }

    StringBuilder sb = new StringBuilder();

    for(T element : iterable) { //for each loop
       sb.apppend(String.valueOf(element)); 
       sb.append(""\n"");
    }

    JOptionPane.showMessageDialog(null,sb.toString());
}
</code></pre>

<p>In addition the <a href=""http://docs.oracle.com/javase/tutorial/extra/generics/methods.html"" rel=""nofollow"">method is generic</a>. </p>
"
"9181531","<p>JUnit is more designed for unit testing, maybe TestNG will be a better choice in this case, in particular, its <code>@Dataprovider</code> feature:</p>

<pre><code>//This method will provide data to any test method that declares that its Data Provider
//is named ""test1""
@DataProvider(name = ""test1"")
public Object[][] createData1() {
 return new Object[][] {
   { ""Cedric"", new Integer(36) },
   { ""Anne"", new Integer(37)},
 };
}

//This test method declares that its data should be supplied by the Data Provider
//named ""test1""
@Test(dataProvider = ""test1"")
public void verifyData1(String n1, Integer n2) {
 System.out.println(n1 + "" "" + n2);
}
</code></pre>

<p>Here is the <a href=""http://%20%20http://testng.org/doc/documentation-main.html#parameters-dataproviders"" rel=""nofollow"">specific doc</a>.</p>
"
"9201933","<p>When you declare your multi dimension array you don't get any objects created in your arrays. You need something like</p>

<pre><code>for(int i = 0; i &lt; dimensions; i++) {
    for(int j = 0; j &lt; dimensions; j++) {
        Board[i][j] = new Tile();
    }
}
</code></pre>
"
"9206272","<p><code>==</code> can only be used to compare primitive datatypes. To compare objects you need to use <code>equals</code> method. Using a <code>==</code> operator on objects actually compares there addresses instead of values.</p>
"
"9206283","<p>The reason is that you cannot compare strings in Java using <code>==</code>.</p>

<p>In C++ or C# (or other languages supporting operator redefinition), you can overwrite the <code>==</code> operator to provide that functionality. Java does not support that.</p>
"
"9206317","<p><code>str1.equals(str2)</code> returns <code>true</code> because the <code>equals()</code> function compares the content of the string variables, where as <code>==</code> operator compares the instances. Since <code>str1</code> and <code>str2</code> are two differences of instances of <code>String</code> class, it returns <code>false</code></p>
"
"9206370","<p>In Java <code>==</code> operator matches the two objects i.e their address while <code>.equals()</code>  method mathces the values of both objects, thats why you are getting <code>true</code> for <code>equals()</code> and <code>false</code> for <code>==</code> as both are different objects.</p>
"
"9211220","<p>You could also use </p>

<pre><code>if(inputStr.indexOf(""Positive"") &gt; 0){
   //Word is found
}
</code></pre>
"
"9273885","<p>""A cast should be allowed in every place where there's a possibility of a correct type correspondence."" In this case, there is NO possibility of a correct type correspondence.</p>

<p>An object can never be an instance of both <code>List&lt;A&gt;</code> and <code>List&lt;B&gt;</code>, if A and B are concrete and not the same, even if A is a subtype of B or whatever. For example, you cannot have an object that is both <code>List&lt;String&gt;</code> and <code>List&lt;Object&gt;</code>. There is (conceptually) a specific type parameter for each object. You have to understand this part first.</p>

<p>Your example is just the same -- <code>List&lt;Pair&lt;F, S&gt;&gt;</code> and <code>List&lt;Pair&lt;?, ?&gt;&gt;</code>. For the same reason as with String and Object above, an object that is of type <code>List&lt;Pair&lt;?, ?&gt;&gt;</code> can never also be <code>List&lt;Pair&lt;F, S&gt;&gt;</code>.</p>

<p>Update: More explanation in case it helps. @Konstantin: If you write <code>Pair&lt;?, ?&gt;</code>, then those type parameters at the top level, which are <code>?</code> (wildcards), are flexible. <code>Pair&lt;T1, T2&gt;</code> is compatible with <code>Pair&lt;?, ?&gt;</code>. However, in <code>List&lt;Pair&lt;?, ?&gt;&gt;</code>, the <code>?</code> is not at the top level. The type parameter at the top level is <code>Pair&lt;?, ?&gt;</code>, which is not a wildcard, and thus is not flexible. It doesn't matter that you happen to have <code>?</code> deeper down. If you have <code>List&lt;? extends Pair&lt;?, ?&gt;&gt;</code>, then the top level is a wildcard, and is flexible.</p>

<p>What you probably want is <code>List&lt;? extends Pair&lt;?, ?&gt;&gt;</code>. Perhaps it will help you to consider the difference between <code>List&lt;Pair&lt;?, ?&gt;&gt;</code> and <code>List&lt;? extends Pair&lt;?, ?&gt;&gt;</code>. <code>List&lt;Pair&lt;?, ?&gt;&gt;</code> says that this is a List, and it type parameter is <em>exactly</em> the type <code>Pair&lt;?, ?&gt;</code> (and nothing else, not <code>Pair&lt;T1, T2&gt;</code>, etc.). <code>List&lt;? extends Pair&lt;?, ?&gt;&gt;</code> says that this is a List, and it type parameter is something which is a subtype of <code>Pair&lt;?, ?&gt;</code> (and this includes <code>Pair&lt;T1, T2&gt;</code>).</p>
"
"9274681","<p>You can assign the map as below</p>

<pre><code>private Map&lt;Key&lt;T1, T2&gt;, List&lt;Pair&lt;F, S&gt;&gt;&gt; myItems = new HashMap&lt;Key&lt;T1, T2&gt;, List&lt;Pair&lt;F, S&gt;&gt;&gt;();
</code></pre>
"
"9292760","<pre><code>List&lt;? extends Map&lt;String, String&gt;&gt; listEntries = new ArrayList&lt;HashMap&lt;String,String&gt;&gt;();
</code></pre>

<p>You should write that as</p>

<pre><code>List&lt;Map&lt;String, String&gt;&gt; listEntries = new ArrayList&lt;Map&lt;String,String&gt;&gt;();
</code></pre>

<p>You should define the list type by using the entries Interface.</p>

<p>And then use it like:</p>

<pre><code>Map&lt;String,String&gt; entry = new HashMap&lt;String,String&gt;();
entry.put(""1"", ""abc"");
entry.put(""2"", ""xyz"");
listEntries.add(entry);
listEntries.add(new LinkedHashMap&lt;String, String&gt;()); // if you want you can use different implementations of Map
</code></pre>
"
"9295727","<p>You can use the <code>split</code> method, that's follow a regular expression (regex).</p>

<p>Can you see examples here: <a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#split%28java.lang.String%29"" rel=""nofollow"">http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#split%28java.lang.String%29</a></p>
"
"9400467","<p>Awt does this using <code>native</code> methods. These are java methods that reference methods in the native language in a separate file. So essentially if you are using windows and you want to open a window, java will use C++ to open the window.</p>

<p><a href=""http://en.wikipedia.org/wiki/Java_Native_Interface"" rel=""nofollow"">http://en.wikipedia.org/wiki/Java_Native_Interface</a></p>

<p><a href=""http://en.wikipedia.org/wiki/Java_AWT_Native_Interface"" rel=""nofollow"">http://en.wikipedia.org/wiki/Java_AWT_Native_Interface</a></p>
"
"9410269","<p>Unfortunately, you'll need a slightly longer syntax:</p>

<pre><code>Amount[COAL.ordinal()] // The amount of coal
Price[IRON.ordinal()]  // The price of iron
</code></pre>

<p>If that is not to your liking, constants may be your only option, i.e.</p>

<pre><code>public class Resource {
    public static final int COAL = 0;
    public static final int IRON = 1;

}
</code></pre>

<p>Hope that helps.</p>
"
"9441041","<p>One of this way you can share your data among whole project, </p>

<pre><code>public class mainClass 
{
    private static int sharedVariable = 0;


    public static int getSharedVariable()
    {
          return sharedVariable;
    }
}
</code></pre>

<p>From the other class/activity , you can access it directly using classname and . (dot) operator. e.g. <code>mainClass.getSharedVariable();</code></p>
"
"9464785","<pre><code>int oldIndex = -1;
// old list holder
ArrayList&lt;Component&gt; allComponents = new ArrayList&lt;Component&gt;();
int idx = 0;
for (Component comp : panel.getComponents()) {
  allComponents.add(comp);
  if (comp==com) {
    oldIndex = idx;
  }
  idx++;
}

panel.removeAll();

// this is a TRICK !
if (oldIndex&gt;=0) {
  Component temp = allComponents.get(oldIndex);
  allComponents.remove(oldIndex);
  allComponents.add(newIndex, temp);
}

for (int i = 0; i &lt; allComponents.size(); i++) 
  panel.add(allComponents.get(i));

panel.validate();
</code></pre>
"
"9582197","<p>No, it's not valid.  Try this:</p>

<pre><code>Charset charset = Charset.forName(""US-ASCII"");
try {
    BufferedReader reader = Files.newBufferedReader(file, charset);
    String line = null;
    while ((line = reader.readLine()) != null) {
        System.out.println(line);
    }
} catch (IOException x) {
    System.err.format(""IOException: %s%n"", x);
}
</code></pre>
"
"9676404","<p>Do you want an integer or string result?</p>

<p>Integer:</p>

<pre><code>int ij = 10*i+j;
</code></pre>

<p>String:</p>

<pre><code>String ij = String.format(""%d%d"", i, j);
</code></pre>
"
"9820829","<p>Here is the full code for you :</p>

<pre><code>public static void main(String[] args) {
    /* Make list */
    List&lt;String&gt; input = new ArrayList&lt;String&gt;();
    input.add(""12"");
    input.add(""11"");
    input.add(""11"");
    input.add(""12"");
    input.add(""12"");
    input.add(""15"");
    input.add(""12"");
    input.add(""17"");
    input.add(""18"");
    input.add(""11"");

    /*
     * count duplicates
     */
    Map&lt;String, Integer&gt; map = new LinkedHashMap&lt;String, Integer&gt;();
    for (String str : input) {
        if (map.containsKey(str)) {
            Integer prevCount = map.get(str);
            map.put(str, ++prevCount);
        } else {
            map.put(str, 0);
        }
    }

    /*
     * make string to display
     */
    StringBuffer sb = new StringBuffer();
    for (Map.Entry&lt;String, Integer&gt; entry : map.entrySet()) {

        String key = entry.getKey();
        Integer count = entry.getValue();
        if (count == 0) {
            sb.append(key + "", "");
        } else
            sb.append(key + ""("" + count + ""), "");
    }
    String tmp = sb.toString();
    String output = tmp.substring(0, tmp.length() - 2); //remove last "", ""
    System.out.println(""["" + output + ""]"");

}
</code></pre>
"
"9851417","<p>If you wish to generate arbitrarily large random numbers with N digits, try</p>

<pre><code>StringBuffer buf=new StringBuffer();
rng=new Random();
for(int a=0;a&lt;N;a++)
    buffer.append((char) ('0'+rng.nextInt(10)));
return buffer.toString();
</code></pre>
"
"9867999","<pre><code>String s = ""The The The The The sdfadsfdas"";

List&lt;String&gt; list = Arrays.asList(s.split("" ""));

Set&lt;String&gt; unique = new HashSet&lt;String&gt;(list);
for (String key : unique) {
    System.out.println(key + "": "" + Collections.frequency(list, key));
}
</code></pre>
"
"9888410","<pre><code>public class BetterProgrammerTask {

    public static int getSumOfNumbers(String s) {
        int sum = 0;
        String tokens[] = s.split("" "");

        String trimmed = s.trim();

        for(String token : tokens) {
            if (token == null || !token.isEmpty()) {
                try {
                    sum += new Integer(token);
                } catch (NumberFormatException e) {
                }
            }
        }
        return sum;
    }
}
</code></pre>
"
"9905606","<p>Its because your exception is at <code>mother.toString()</code> method.. </p>

<p>try this</p>

<pre><code>try
{
 MyFrame.jta.append(mother.toString() + ""\n"");
}catch(NullPointerException ignore){}
</code></pre>
"
"9927259","<p>In webmachine you have a lot of callbacks that you can defined and export like <code>resource_exists</code>, <code>to_json</code>, <code>to_html</code> etc and doing same in java would not be the best fit because you would end up with a lot of boilerplate code. </p>

<p>In java you can use things like spring mvc framework to build web resources.</p>
"
"9938569","<p>Well, you create a <code>BufferedReader</code> from the <code>FileInputStream</code> originally. You should do it as following:</p>

<pre><code>FileInputStream fstream = new FileInputStream(""C:\\testnew\\out.text"");
BufferedInputStream bstream = new BufferedInputStream(fstream);
</code></pre>

<p>To get a proper stream-related approach.</p>
"
"10007881","<p>You are using Array of character not String(Although java has create String from Character of array but you should use String).
In String you can use replaceAll method like this - </p>

<pre><code> public class Test {
public void replaseSpaces(str) {
    str = str.replaceAll("" "",""%20"");
    System.out.println(str);
}

public static void main(String[] args) {
    Test tst = new Test();
   String str = ""the dog  "";
   tst.replaseSpaces(str, length);  
}
</code></pre>

<p>}</p>

<p>one more thing you can change Character Array to String and String to Character Array -</p>

<pre><code> char[] ch =str.toCharArray();
 ch.toString();
</code></pre>
"
"10033596","<p>Recommend avoiding an indexed field and query unless you have other uses for it. Here is what I have done before (Python) using key_name (since entity ids need to be ints). Easy to use either the key_name or id for other entities that need to link to user:</p>

<pre><code>username = self.request.get('username')
usernameLower = username.lower()
rec = user.get_by_key_name(usernameLower)
if rec is None:
    U = user(
        key_name = usernameLower,
        username = username,
        etc...)
    U.put()
else:
    self.response.out.write(yourMessageHere)
</code></pre>
"
"10106872","<p>I'm assuming you're talking about the <code>Object</code> implementation of <code>hashCode</code>, since the method can and should be overridden.</p>

<p>It's implementation dependent. For the Sun JDK, it's based on the object's memory address.</p>
"
"10167474","<p>The LinkedList is of Objects, Objects toString method prints out the reference. If you want to print out the string you are going to have either change the LinkedList to a String/Generics or cast the print out like this:</p>

<pre><code>String output = (String)tmp.getData();
System.out.println(output);
</code></pre>

<p>(you can do this in one line if you want).</p>
"
"10326542","<p>Edit: Gray's answer is correct. </p>

<p>What I want to add is: 
Your architect is right, if from perspective of <code>Boolean</code> is <strong>immutable</strong>, why synchronize it? But multi thread is complex and based on the scenario.</p>
"
"10335915","<p>Your result is being cast as an <code>int</code>, so you are losing precision.</p>

<p>Try</p>

<pre><code>double exp1 = 14/20.0*100;
</code></pre>
"
"10403677","<p>just replacing the whole <code>&amp;firstString=someText&amp;</code> since this includes the outer barriers which I assume to be URL related?</p>
"
"10443844","<p>Yes, but: you can experience trouble if you use packages like <code>com.sun</code> etc., because they proprietary.<br/>
Moreover, some time ago i stumbled with Object(In|Out)putStream working differentely in Sun JDK and IBM JDK, however, maybe, I did something wrong there, so I am not sure in this.<br/>
Proof: <a href=""http://docs.oracle.com/javase/specs/"" rel=""nofollow"">http://docs.oracle.com/javase/specs/</a>  -  The Java Virtual Machine Specification, Java SE 7 Edition<br/>
Update: Sorry. Indeed, not exactly the same bytecode, but all certified JVMs will understand it and give the same result.</p>
"
"10495916","<p>If you have: </p>

<pre><code>List&lt;Object&gt; objects
</code></pre>

<p>You can copy this list by:</p>

<pre><code>List&lt;Object&gt; newObjects = new ArrayList&lt;Object&gt;(objects);
</code></pre>

<p>[Update: add real implementation of ArrayList to prove it copied new objects]</p>

<p>Please see real implementation of ArrayList, it copys objects - not contains the references to the same object.</p>

<p><code>public  ArrayList(Collection&lt;? extends E&gt; c) {
         elementData = c.toArray();
         size = elementData.length;
         if (elementData.getClass() != Object[].class)
             elementData = Arrays.copyOf(elementData, size, Object[].class);
}</code></p>

<p><code>public Object[] toArray() {
         return Arrays.copyOf(elementData, size);
}</code></p>
"
"10601522","<p>You can use this:</p>

<pre><code>String st = ""Mon, 14 May 2012 13:56:38 GMT"";

for(int i=0;i&lt;=st.length();i++){

  if (st.charAt(i)==':') {

  index=i;
  index=index-2;
   break;
  }


}

String onlyDate=st.substring(4,index).trim();
</code></pre>
"
"10625978","<p>If you're confused see page: <a href=""http://www.eclipse.org/downloads/compare.php"" rel=""nofollow"">Eclipse compare</a></p>

<p>But if you want for example develop applications only for Flex - download package that has minimum plugins and after Eclipse download - install plugin for Flex. <strike>The reason for that is faster initialization of Eclipse - the more plugins you have the more time you spend waiting for Eclipse to initialize.</strike> (As @E-Riz noted Eclipse loads bundles lazily as stated <a href=""http://wiki.eclipse.org/Lazy_Start_Bundles"" rel=""nofollow"">here</a> - also look at the @E-Riz comment)</p>

<p>If you want <code>general</code> use package ""for Java"" I recommend download <code>Java EE</code> that have as much plugins for developement.</p>

<p>The answer depends on your needs - if you will develop applications using only Flex then you shouldn't download ""everything"" - you should download all that you <strong>need</strong>.</p>

<p>The Eclipse Core is only ""small"" package of OSGi - the rest is just plugins. The compare tha t you see in <a href=""http://www.eclipse.org/downloads/compare.php"" rel=""nofollow"">Eclipse compare</a> are packages that contains different set of plugins. You can install them after downloading ""smaller plugins set'-Eclipse. There is no difference.</p>
"
"10759980","<p>The simplest way to do this would be with a <code>for</code> loop.  A <code>LinkedList</code> would be best for the sake of speed.</p>

<pre><code>LinkedList&lt;Double&gt; list = new LinkedList&lt;Double&gt;();
for(double i=0;i&lt;10000000000000000;i++)
    list.add(i);
//Output list to file next.
</code></pre>
"
"10775211","<p>When you are in that while loop, <code>repaint()</code> is never called. That would be why you don't see anything until the method ends.</p>
"
"10785658","<p>You can save your generated numbers in a Set and use the random number only if it is not in the set </p>

<pre><code>Random r = new Random();
    Set&lt;Integer&gt; generatedNumbers = new HashSet&lt;Integer&gt;();
    for(int i = 1;i&lt;=5;i++)  {
      int rand = r.nextInt(10)
      if (!generatedNumbers.contains(rand)) {
        Log.d(""Ramdom number"", String.valueOf(rand));
        generatedNumbers.add(rand);
      } 
    }  
</code></pre>
"
"10848291","<p>declare a varieble
 and use it as</p>

<pre><code> boolean boo = false;
 someButton.setOnClickListener(new OnClickListener() {
 @Override
 public void onClick(View v) {
 if(boo==false){
    someButton.setEnabled(false);
    someButton.setClickable(false);
    someButton.setVisibility(View.GONE);
    boo = true;
 }


    }
});
</code></pre>

<p>by this you prevent multiple clicks on your button</p>

<p>hope it help</p>
"
"10866470","<p>Try making your manifest something like this. </p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;

&lt;manifest 

    xmlns:android=""http://schemas.android.com/apk/res/android""
    package=""zvjezdan.veselinovic.yahtzee_""
    android:versionCode=""1""
    android:versionName=""1.0"" &gt;

    &lt;uses-sdk 
        android:minSdkVersion=""10"" /&gt;

    &lt;application

        android:icon=""@drawable/ic_launcher""
        android:label=""@string/app_name"" &gt;

        &lt;activity

            android:name="".YahtzeeActivity""
            android:label=""@string/app_name"" &gt;

         &lt;intent-filter&gt;

                &lt;action 
                    android:name=""android.intent.action.MAIN"" /&gt;

                &lt;category 
                    android:name=""android.intent.category.LAUNCHER"" /&gt;

            &lt;/intent-filter&gt;

         &lt;/activity&gt;

        &lt;activity 
             android:name = "".Scoring_Page"" /&gt; 

    &lt;/application&gt;

&lt;/manifest&gt;
</code></pre>

<p>The reason behind this is that:<br>
<code>public class EasterSimonSaysActivity extends SimonSaysActivity {</code></p>

<p>uses another activity. So if you have 2 activities, then you need to add both of them. Granted that you imported them, but your manifest needs to know this too. This is how I ""switched pages"" for my yahtzee project. Which I still need help on. =/</p>
"
"10965791","<pre><code>int array[] = new int[7];
array.getClass();
</code></pre>
"
"10988507","<p>I would suggest you just don't edit the files! And don't delete them!</p>

<p>HAHAHAHA, that would be an ace solution, no?</p>

<p>You should really use the open source logging (i've always liked log4j - most IB use that, or slf4j) that has been suggested by Jonathan - it is the standard way to do logging, nobody really does logging like you're  doing it. At least, not that I am aware.</p>

<p>Ok, that said - and I do not know linux at all, in any shape or form - it sounds like, as Rick suggests, whatever you are pointing to disappears when you edit/delete the file. So, in pseudo-code (because, and i am sorry for this - as i indicated, i use windows so cannot test):</p>

<pre><code>public class LoggerWrapper {
    *private* FileHandler myFileHandler;
    *private* static final Logger myLogger = Logger.getLogger(""Test"");
    private static LoggerWrapper instance = null;  

    /*
      here check if the file you're using has been changed! If so, re-do the file setting
    */
    public void log(Level level, String message){
        //argh you are on your own here. I don't know how to *check* the file being used by the file handler...
        //you know what? you can just do this (but it isn't too clean)
        myLogger.removeFileHandler(myFileHandler);
        myFileHandler = new FileHandler(""/path/to/myLogFile.log"", true); 
        myLogger.addHandler(myFileHandler);
        myLogger.log(level,message);     
    }  

    private static void prepareLogger() {
        try {
            //don't shadow the myFileHandler by accident!
            myFileHandler = new FileHandler(""/path/to/myLogFile.log"", true); 

...
</code></pre>

<p>of course, that just resets the file handler every time you log. And you won't log with the command:</p>

<pre><code>loggerWrapper.myLogger.log(Level.SEVERE, ""some text here""+e.fillInStackTrace());
</code></pre>

<p>but with </p>

<pre><code>loggerWrapper.log(Level.SEVERE, ""some text here""+e.fillInStackTrace());
</code></pre>

<p>Or just use open source logging (log4j!) and be happy! There might be some way to check if the file is lost - oh! maybe  check the isLoggable method? I don't know if that will pick up on changed  files... i don't think it does though.</p>

<p>Also, you might need to setErrorManager on your fileHandler - from the looks of things, if the logger cannot, well, log, it sends something to the errorManager. I am unfamiliar with this though, and i might be speaking jibberish.</p>
"
"11008126","<p>Replace  </p>

<pre><code>HashMap record = new HashMap(); 
</code></pre>

<p>with </p>

<pre><code>Map&lt;String,Map&lt;String, Object&gt;&gt; record = new HashMap&lt;String,Map&lt;String, Object&gt;&gt;();
</code></pre>

<p>But, this doesn't make much sense to put different object types as values. If the following line is by mistake, </p>

<pre><code>record.get(""student1"").put(""Scores"", new HashMap());
</code></pre>

<p>then you can simplify the definition also.</p>

<pre><code>Map&lt;String,Map&gt; record = new HashMap&lt;String,Map&gt;();
</code></pre>

<p>Assumption: You are using JDK 1.5+</p>
"
"11057376","<p>If you want inheritance behavior. (The code is in Java, You can try some thing like this in c++)</p>

<pre><code>abstract class Rectangle{

    public abstract double getHeight();
    public abstract double getWidth();
    public double getHeight(){
        return getWidth()*getHeight();
    }
}

abstract class Container extends Rectangle{
    public abstract void printTypes();
    public abstract void printEachElement();
}

abstract class Array extends Container{ 

}
</code></pre>
"
"11224345","<p>Possible if you do something like:</p>

<pre><code>    GroupA groupAobj = new GroupA();
    AbstractGroup abstractObj = (AbstractGroup) groupAobj;
    GroupB groupBobj = (GroupB) abstractObj;
</code></pre>

<p>the code compiles and runs.</p>
"
"11266461","<p><code>compareTo</code> is a method. It is not defined for the primitive type <code>long</code>. It <em>is</em> defined for the Date class.</p>

<pre><code>Date dateNow = currentDate.getTime(); // instead of getTimeInMillis()
...
if (dateNow.compareTo(date)) { // this will now work
</code></pre>

<p>If they're both Date objects, you can do <code>dateNow.before(date)</code> which makes much more sense semantically.</p>

<p>Alternatively, you can use the > and &lt; operators and do <code>dateNow &lt; modifiedDate</code> if you leave <code>dateNow</code> as a long.</p>
"
"11347447","<pre><code>java.util.Properties

String string = properties.getProperty(""launcher.1.name"");
properties.setProperty(""launcher.1.name"", ""abc"");
</code></pre>

<p>If you need all Properties in an enumeration,</p>

<pre><code>public Enumeration&lt;?&gt; propertyNames()

Returns an enumeration of all the keys in this property list, 
including distinct keys in the default property list if a key of 
the same name has not already been found from the main properties list.
</code></pre>
"
"11347614","<p>There are two possibilities:</p>

<ol>
<li>You add a property that defines how many numbered items exist - e.g. <code>launcher.count = 2</code></li>
<li><p>You enumerate all keys and look for the suitable pattern:</p>

<pre><code>for (Object o : properties.keySet()) {
    String key = (String) o;
    if (key.startsWith(""launcher"")) {
        ...
    } else if (key.startsWith(""cec"")) {
        ...
    } 
}
</code></pre></li>
</ol>
"
"11347912","<p>I'm answering myself, since my friend got better solution than anybody here before:</p>

<pre><code>for (Map.Entry&lt;SubClass, String&gt; entry: map.entrySet()) {
    System.out.println(entry.getKey().name);
    System.out.println(entry.getValue());

    entry.getKey().name = ""another"";

    System.out.println(entry.getKey().name);
    System.out.println(entry.getValue());
}
</code></pre>

<p>this will work :)</p>
"
"11372448","<p>If you just want to use a string version of i within the loop, you need:</p>

<pre><code>for (int i=1; i&lt;6; i++)
{
  String new_variable_ = """" + i;
  //use new_variable here.
}
</code></pre>

<p>If you're looking for something different, I'll need some more details. Good luck!</p>
"
"11372499","<p>Like I said in the comment, there's no dynamic variable in Java. At best you can do this:</p>

<pre><code>HashMap variableMap = new HashMap&lt;String,String&gt;();

for (int i = 1; i &lt; 6; i++) {
   variableMap.put(""new_variable_"" + i, ""some variable value"");
}
</code></pre>

<p>Then to access them, you do:</p>

<pre><code>String value = variableMap.get(""new_variable_2"");
</code></pre>

<p>Or to update it, you do:</p>

<pre><code>variableMap.put(""new_variable_2"", ""new value"");
</code></pre>
"
"11434733","<p>you have to import the used Package so javadoc knows the the namespace you are refering to.</p>

<p>package-info.java should look link this:</p>

<pre><code>import package.subpackage.ClassnameYouWantToLink;
/**
* {@link ClassnameYouWantToLink}
*/
</code></pre>

<p>if you don't want to import the package you need the full quallified package-Name infront of the ClassName:</p>

<pre><code>/**
* {@link package.subpackage.ClassnameYouWantToLink}
*/
</code></pre>
"
"11447659","<p>Could you use the Scanner class?</p>

<pre><code>String input = ""1 fish 2 fish red fish blue fish"";
Scanner s = new Scanner(input).useDelimiter(""\\s*fish\\s*"");
System.out.println(s.nextInt());
System.out.println(s.nextInt());
System.out.println(s.next());
System.out.println(s.next());
s.close(); 
</code></pre>

<p>Would output</p>

<pre><code>1
2
Red
Blue
</code></pre>

<p>Probably to complicated or what you want though</p>
"
"11458081","<p>you can use <code>substring()</code> <a href=""http://www.roseindia.net/java/beginners/SubstringExample.shtml"" rel=""nofollow"">http://www.roseindia.net/java/beginners/SubstringExample.shtml</a></p>

<pre><code>charofhardPuzzle  = hardPuzzle.substring(1, 2);
</code></pre>

<p>EDIT: you also can do: char[] <code>hardPuzzle2= hardPuzzle.toCharArray();</code></p>
"
"11493938","<p>Example of Java for-each (complementing Kumar answer):</p>

<pre><code>List&lt;String&gt; strings = new ArrayList&lt;String&gt;();
strings.add( ""one"" );
strings.add( ""two"" );
strings.add( ""three"" );

for ( String item : strings ) {
    System.out.println( item );
}
</code></pre>
"
"11501404","<p>You can use HQL to select what you want:</p>

<pre><code>session.beginTransaction();
session.clear();

Query query = session.createSQLQuery("" from CommissionSummary CS  where  to_date(CS.year || '-' || CS.month || '-01', 'YYYY-MM-DD') between :startDate and :endDate)""

List result = query.list();
</code></pre>
"
"11502348","<p>Thanks for all your answers @JB Nizet has told the correct approach, but which is from native SQL. I have tried below with success....</p>

<pre><code>public List&lt;CommissionSummary&gt; getCommissionSummary(AdvisorReportForm advisorReportForm) {
        Criteria criteria = getSession().createCriteria(CommissionSummary.class);
        if (advisorReportForm.getAdvisorId() != null &amp;&amp; advisorReportForm.getAdvisorId() &gt; 0) {
            criteria.add(Restrictions.eq(""advisorCode"", advisorReportForm.getAdvisorId().toString()));
        }

        if (advisorReportForm.getFromDate() != null &amp;&amp; advisorReportForm.getToDate() != null) {
            Calendar calFrom = Calendar.getInstance();
            calFrom.setTime(advisorReportForm.getFromDate());

            Calendar calTo = Calendar.getInstance();
            calTo.setTime(advisorReportForm.getToDate());

            Criterion crit1 = Restrictions.eq(""month"", calFrom.get(Calendar.MONTH) + 1);
            Criterion crit2 = Restrictions.eq(""year"", calFrom.get(Calendar.YEAR));
            Criterion critMonthYear1 = Restrictions.and(crit1, crit2);
            calFrom.add(Calendar.MONTH, 1); // increment loop by month

            Criterion critAll = critMonthYear1;
            while (calFrom.getTimeInMillis() &lt; calTo.getTimeInMillis()) {
                Criterion crit1Loop = Restrictions.eq(""month"", calFrom.get(Calendar.MONTH) + 1);
                Criterion crit2Loop = Restrictions.eq(""year"", calFrom.get(Calendar.YEAR));
                Criterion critMonthYearLoop = Restrictions.and(crit1Loop, crit2Loop);
                critAll = Restrictions.or(critAll, critMonthYearLoop);
                calFrom.add(Calendar.MONTH, 1); // increment loop by month
            }
            criteria.add(critAll);

        }

        return criteria.list();
    }
</code></pre>

<p>As from date to to date difference is validated max upto 6 months. I don't see much performance issue. So used this.</p>

<p>For your reference here is generated SQL</p>

<pre><code>SELECT * FROM CommissionSummary this_ 
WHERE this_.advisorCode=1 
AND (((((this_.month=11 AND this_.year=2011) OR (this_.month=12 AND this_.year=2011)) OR (this_.month=1 AND this_.year=2012)) 
OR (this_.month=2 AND this_.year=2012)) OR (this_.month=3 AND this_.year=2012))
</code></pre>
"
"11582686","<p>Using regular expressions:</p>

<pre><code>private static final Pattern DEFAULT_VALUE_PATTERN
        = Pattern.compile(""default = (.*?);"");

private String extractDefaultValueFrom(String text) {
    Matcher matcher = DEFAULT_VALUE_PATTERN.matcher(text);
    if (!matcher.find()) {
        throw new RuntimeException(""Failed to find default value in text"");
    }
    return matcher.group(1);
}
</code></pre>
"
"11594542","<p>you can use <a href=""http://docs.oracle.com/javase/1.4.2/docs/api/java/util/Properties.html"" rel=""nofollow"">Properties</a> class to load the string and find any value from it</p>

<pre><code>String readString = ""aimtolerance = 1024;\r\n"" + 
""model = Araarrow;\r\n"" + 
""name = Bow and Arrows;\r\n"" + 
""range = 450;\r\n"" + 
""reloadtime = 3;\r\n"" + 
""soundhitclass = arrow;\r\n"" + 
""type = Ballistic;\r\n"" + 
""waterexplosionclass = small water explosion;\r\n"" + 
""weaponvelocity = 750;\r\n"" + 
""default = 213;\r\n"" + 
""fort = 0.25;\r\n"" + 
""factory = 0.25;\r\n"" + 
""stalwart = 0.25;\r\n"" + 
""mechanical = 0.5;\r\n"" + 
""naval = 0.5;\r\n"";
readString = readString.replaceAll("";"", """");
Properties properties = new Properties();

System.out.println(properties);
try {
    properties.load(new StringReader(readString));
} catch (IOException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
}
System.out.println(properties);

String requiredPropertyValue = properties.getProperty(""default"");
System.out.println(""requiredPropertyValue : ""+requiredPropertyValue);
</code></pre>
"
"11733574","<p>If you're trying to remove <a href=""http://www.youtube.com/watch?v="" rel=""nofollow"">http://www.youtube.com/watch?v=</a> from <a href=""http://www.youtube.com/watch?v=_RCIP6OrQrE"" rel=""nofollow"">http://www.youtube.com/watch?v=_RCIP6OrQrE</a> then you can do the following:</p>

<pre><code>String URL = ""http://www.youtube.com/watch?v=_RCIP6OrQrE"";
String v = URL.replace(""http://www.youtube.com/watch?v="", """");
System.out.println(v);

Output: _RCIP6OrQrE
</code></pre>
"
"11782003","<p>I feel this should do.</p>

<pre><code>Trade gsTrades = new Trade();
    Trade barclaysTrades = new Trade();

    for(Trade trade: tradeList){
        if(trade.getSource().equals(""GS"")){
            gsTrades.setQuantity(gsTrades.getQuantity()+trade.getQuantity());
            gsTrades.setPrice(gsTrades.getPrice()+trade.getPrice());
        }else{
            barclaysTrades.setQuantity(barclaysTrades.getQuantity()+trade.getQuantity());
            barclaysTrades.setPrice(barclaysTrades.getPrice()+trade.getQuantity());
        }
    }
    System.out.println(""GS trade details = "" + gsTrades.toString());
    System.out.println(""Barclays trade details = "" + barclaysTrades.toString());
</code></pre>
"
"11811543","<blockquote>
  <p>So I have seen a lot of different coding styles, but I'm only going to
  talk about two big ones. I use a style where I just name everything
  like their class name when used in a general sense, like this:</p>
  
  <p>String str = ""This is some text"";</p>
</blockquote>

<p>That is awful.  Imagine if someone were reading your code, trying to understand what it was doing, and they came across a variable named <code>str</code>.  It doesn't convey any meaning to the person who has to read this code as to your intentions.</p>

<p>Conventions are used by and for people to improve readability, and thus the overall quality of software.  Without a convention, any project that has more than one developer will suffer from varying styles that will only hurt the readability of the code.  If you want to know what professionals do, look around on the internet for various <a href=""http://code.google.com/p/java-coding-standards/wiki/Introduction"" rel=""nofollow"">conventions</a>.</p>
"
"11883391","<p>use</p>

<pre><code> org.joda.time.Month#monthsBetween(start, end)
</code></pre>
"
"11953193","<p>You have to use a Table name to select the last insert id.</p>

<p>Example:</p>

<pre><code>SELECT LAST_INSERT_ID() FROM my_table;
</code></pre>
"
"11974325","<p>Something like this perhaps?</p>

<pre><code>for(int i = s.length() - 1; i &gt; 0; i -= 8)
{
    s = new StringBuffer(s).insert(i, ""-"").toString();
    i--;
}
</code></pre>
"
"12012971","<p>i think this will do</p>

<pre><code>String query = ""INSERT INTO table (id, name, value) VALUES "";
for (Record record : records)
{
query += ""("" + record.id + "",'"" + record.name + ""',"" + record.value + ""),"";
query = query.substring(1, query.length() - 1);
PreparedStatement ps = connection.prepareStatement(query);
ps.executeUpdate();
}
</code></pre>

<p>because you have to execute the query for each records to insert into database.</p>
"
"12056488","<pre class=""lang-java prettyprint-override""><code>import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class sortArrayList {

    public static void main(string args[]) {
        List&lt;Integer&gt; arrList = new ArrayList&lt;Integer&gt;();
        while (scanner.hasNextIint()) {
            arrList.add(scanner.nextInt());
        }
        Collections.sort(arrList);
    }
}
</code></pre>
"
"12077554","<p>this will work</p>

<pre><code>   String myName=""domanokz"";
   String p=myName.replace(myName.charAt(4),'x');
   System.out.println(p);
</code></pre>

<p>Output : domaxokz</p>
"
"12108526","<p>Just define array of buttons like this</p>

<pre><code>JButton[] buttons = new JButton[b.length];
</code></pre>

<p>and</p>

<pre><code>for(int i = 0; i &lt; b.length; i++)
</code></pre>

<p>added type <code>int</code> to variable <code>i</code> in the cycle.</p>

<p>It should fix the problem.</p>
"
"12148451","<p>Just create a string with the same number of characters as your original, with instead your ""obfuscating"" character.</p>

<pre><code>String x = ""ABCD"";

String output = """";
for (int i = 0; i &lt; x.length(); i++) {
    output += ""*"";
}
</code></pre>

<p>Alternatively you could use <code>x.replaceAll(""\\S"", ""*"")</code>, which would preserve whitespace as well.</p>
"
"12159644","<p>You declare parent as Parent, so java will provide only methods and attributes of the Parent class. </p>

<pre><code>Child child = new Child();
</code></pre>

<p>should work. Or</p>

<pre><code>Parent child = new Child();
((Child)child).salary = 1;
</code></pre>
"
"12192023","<p>Check, if you are using <code>Theme.Sherlock.NoActionBar</code> or similar no action bar theme for this activity. 
In this case <code>setSupportProgressBarIndeterminateVisibility</code> method fails for me with </p>

<pre><code>Caused by: java.lang.NullPointerException
at com.actionbarsherlock.internal.ActionBarSherlockCompat.updateProgressBars(ActionBarSherlockCompat.java:710)
at com.actionbarsherlock.internal.ActionBarSherlockCompat.onIntChanged(ActionBarSherlockCompat.java:686)
at com.actionbarsherlock.internal.ActionBarSherlockCompat.updateInt(ActionBarSherlockCompat.java:681)
at com.actionbarsherlock.internal.ActionBarSherlockCompat.setFeatureInt(ActionBarSherlockCompat.java:665)
at com.actionbarsherlock.internal.ActionBarSherlockCompat.setProgressBarIndeterminateVisibility(ActionBarSherlockCompat.java:637)
at com.actionbarsherlock.app.SherlockFragmentActivity.setSupportProgressBarIndeterminateVisibility(SherlockFragmentActivity.java:282)
</code></pre>

<p>I guess you should use a progress dialog instead to indicate loading process or regular <code>Theme</code> with activity title bar and then use <code>setProgressBarIndeterminateVisibility</code> method for older platforms.</p>
"
"12252182","<p>To access the device camera, you must declare the CAMERA permission in your Android Manifest. Also be sure to include the <code>&lt;uses-feature&gt;</code> manifest element to declare camera features used by your application. For example, if you use the camera and auto-focus feature, your Manifest should include the following:</p>

<pre><code> &lt;uses-permission android:name=""android.permission.CAMERA"" /&gt;
 &lt;uses-feature android:name=""android.hardware.camera"" /&gt;
 &lt;uses-feature android:name=""android.hardware.camera.autofocus"" /&gt;
</code></pre>

<p>A sample that checks for torch support might look something like this:</p>

<pre><code>//Create camera and parameter objects
private Camera mCamera;
private Camera.Parameters mParameters;
private boolean mbTorchEnabled = false;

//... later in a click handler or other location, assuming that the mCamera object has already been instantiated with Camera.open()
mParameters = mCamera.getParameters();

//Get supported flash modes
List flashModes = mParameters.getSupportedFlashModes ();

//Make sure that torch mode is supported
//EDIT - wrong and dangerous to check for torch support this way
//if(flashModes != null &amp;&amp; flashModes.contains(""torch"")){
if(flashModes != null &amp;&amp; flashModes.contains(Camera.Parameters.FLASH_MODE_TORCH)){
    if(mbTorchEnabled){
        //Set the flash parameter to off
        mParameters.setFlashMode(Camera.Parameters.FLASH_MODE_OFF);
    }
    else{
        //Set the flash parameter to use the torch
        mParameters.setFlashMode(Camera.Parameters.FLASH_MODE_TORCH);
    }

    //Commit the camera parameters
    mCamera.setParameters(mParameters);

    mbTorchEnabled = !mbTorchEnabled;
}
</code></pre>

<p>To turn the torch on, you simply set the camera parameter <code>Camera.Parameters.FLASH_MODE_TORCH</code> </p>

<pre><code>Camera mCamera;
Camera.Parameters mParameters;

//Get a reference to the camera/parameters
mCamera = Camera.open();
mParameters = mCamera.getParameters();

//Set the torch parameter
mParameters.setFlashMode(Camera.Parameters.FLASH_MODE_TORCH);

//Comit camera parameters
mCamera.setParameters(mParameters);
</code></pre>

<p>To turn the torch off, set <code>Camera.Parameters.FLASH_MODE_OFF</code></p>
"
"12302256","<p>I don't know why this happens, but why don't you just start the built in web browser through an <code>Intent</code> in your <code>onPostExecute(Uri uriWebpage)</code>?</p>

<pre><code>Intent intent = new Intent(Intent.ACTION_VIEW);
intent.setData(uriWebPage);
startActivity(intent);
</code></pre>

<p>If this solution doesn't satisfy you, then please post the error stack trace from LogCat.</p>
"
"12305098","<p><strong><code>O(1)</code> Algorithm</strong></p>

<p>Your solution is O(n^2) because of the two nested loops. </p>

<p>The fastest algorithm to do this is <code>O(1)</code> (constant time):</p>

<pre><code>public static int detectDuplicate(String source) {
    boolean[] foundChars = new boolean[Character.MAX_VALUE+1];
    for(int i = 0; i &lt; source.length(); i++) {
        if(i &gt;= Character.MAX_VALUE) return Character.MAX_VALUE;
        char currentChar = source.charAt(i);
        if(foundChars[currentChar]) return i;
        foundChars[currentChar] = true;
    }
    return -1;
}
</code></pre>

<p>However, this is only fast in terms of big oh. </p>
"
"12342861","<p>I know of no reason why octal escapes are restricted to uniode codepoints 0 to 255. This might be for historical reasons. The question will basically remain unanswered as there was no technical reason not to increase the range of the octal escapes during the design of Java.</p>

<p>It should be noted however, that there's a not so obvious difference between the unicode escapes and the octal escapes. The octal escapes are de-escaped only as part of strings while the unicode-escapes can occur anywhere in a file, for example as part of the name of a class. Also note, that the following example will not even compile:</p>

<pre><code>String a = ""\u000A"";
</code></pre>

<p>The reason is, that \u000A is expanded to a newline at a very early stage (basically when loading the file). The following code does not generate an error:</p>

<pre><code>String a = ""\012"";
</code></pre>

<p>The \012 is expanded <em>after</em> the compiler has parsed the code. This also holds for the other escapes like \n, \r, \t, etc.</p>

<p>So in conclusion: the unicode escapes are NOT a replacement for the octal escapes. They are a completely different concept. In particular, to avoid any problems (as with \u000A above), one should use octal escape for codepoints 0 to 255 and unicode escapes for codepoints above 255.</p>
"
"12409289","<p>You can just do:</p>

<pre><code>public static boolean isEmpty(String string) { //don't make it final going in or you cant trim it.
    string = string.trim();
    return string != null || string.length() == 0;
}
</code></pre>
"
"12516576","<p>It's very easy: just do this:</p>

<pre><code>DefaultTableModel model = (DefaultTableModel)table.getModel();

while(model.getRowCount() &gt; 0){
   for(int i = 0 ; i &lt; model.getRowCount();i++){
      model.removeRow(i)
   }
}
</code></pre>
"
"12524708","<pre><code>public class LongtoByte 
    {
            public static void main(String[] args)
            {
                long a=222;
                byte b=(byte)(a);
                System.out.println(""the value of b is"" +b);

            }
    }
</code></pre>

<p>This byte bValue = (byte) num; statement is converted into a byte format.</p>
"
"12562015","<p><code>toString</code> is overriden by <code>ArrayList</code>, the <code>List</code> implementation returned by <code>Arrays.asList()</code></p>

<p>Here is how the <code>asList</code> method is implemented in the <code>Arrays</code> class.</p>

<pre><code>public static &lt;T&gt; List&lt;T&gt; asList(T... a) {
    return new ArrayList&lt;T&gt;(a);
}
</code></pre>

<p>where <code>ArrayList</code> is an static inner class of <code>Arrays</code>:</p>

<p><code>private static class ArrayList&lt;E&gt; extends AbstractList&lt;E&gt;</code></p>

<p>Ya, well is not directly overriden by <code>ArrayList</code> but by its ancestor <code>AbstractList</code></p>
"
"12579771","<p>to copy the digit to clip board use js</p>

<pre><code>&lt;SCRIPT LANGUAGE=""JavaScript""&gt;

function ClipBoard()
{
holdtext.innerText = copytext.innerText;
Copied = holdtext.createTextRange();
Copied.execCommand(""Copy"");
}

&lt;/SCRIPT&gt;
</code></pre>

<p>and content goes like this</p>

<pre><code>&lt;SPAN ID=""copytext"" STYLE=""height:150;width:162;background-color:pink""&gt;
This text will be copied onto the clipboard when you click the button below. Try it!
&lt;/SPAN&gt;

&lt;TEXTAREA ID=""holdtext"" STYLE=""display:none;""&gt;
&lt;/TEXTAREA&gt;
&lt;BUTTON onClick=""ClipBoard();""&gt;Copy to Clipboard&lt;/BUTTON&gt; 
</code></pre>
"
"12590275","<p>use <code>"""".isEmpty()</code> to check for an empty string.  Works great, and also returns ""true"" for null objects.</p>

<p><a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/String.html#isEmpty%28%29"" rel=""nofollow"">String.isEmpty()</a></p>

<p>.equals() throws a <code>NullPointerException</code> if it is null, which can get annoying.</p>

<p>Also, assuming that this is in the Java API, it is probably safe to assume that it is the fastest method.</p>
"
"12597290","<p>If you know enough to get the addresses (from the network or from the file system or user input), you can test the address itself with subtraction and get the number of IP addresses right there.</p>

<p>This is simplified, but you will get it if you know about addresses: <code>000044-000002 = 000042</code>.</p>
"
"12622611","<p>The simplest way is construct a json string in java file and return that json string to client.</p>

<p>Javascript provides a <code>eval()</code> method which inverts json string to json object.</p>

<p>Then you can perform what ever operations you need.</p>
"
"12667800","<p>Did you try <code>URLEncoder.encode(string, ""UTF-8"")</code></p>

<p>Following is the example:</p>

<p>Replace </p>

<pre><code>String url = ""http://somesite.com/page?user="" + user;
</code></pre>

<p>with</p>

<pre><code>String url = ""http://somesite.com/page?user=""
+ URLEncoder.encode(user, ""UTF-8"");
</code></pre>
"
"12668022","<pre><code>String url= URLEncoder.encode(""your URL without http or your query string part here"");
URL searchUrl = new URL(""http://"" + url);
URLConnection conn = null;
conn = searchUrl.openConnection();
</code></pre>
"
"12690125","<pre><code>if(endDate.after(new Date())){}
</code></pre>

<p>just compare to a new Date it will be created a date time of now.</p>
"
"12693449","<p>You can run things on the UI thread using <code>runOnUiThread(Runnable)</code>. You could also use a combination of <code>Thread</code> and <code>Handler</code>.</p>
"
"12693530","<p>I'm learning about <code>Handler</code>s currently and according to the documentation, they are the currently recommended way to access data because, for one thing, they do asynchronous loading for you. As you said, you can't access the UI components from another thread other than the UI thread. This means that whether you use a <code>Handler</code> or roll your own code with <code>AsyncTask</code> that you need to separate the code that updates the UI from the code that loads the data.</p>
"
"12706488","<p>Bytebuffer.limit will return you the length available in the buffer.</p>

<pre><code>sctpChannel.receive(byteBuffer, null, null);
byteBuffer.flip();

 if (byteBuffer.limit() &gt; 0) 
  {
         .....................//Do your work here
    //             read the data in a byte array
    byteBuffer.clear();  
  }
</code></pre>
"
"12763433","<p>The method int InputStream.read() blocks until it receives data from the socket, receives the end of stream sequence or an exception is thrown.</p>

<p>Consider using this statement:</p>

<pre><code>   for (; inputStream.available() &gt; 0;)
</code></pre>

<p>In this case, if there is no data available on the socket, the for loop ends and your program can continue. Of course, you will have to adapt your code to do what you want it to do.</p>
"
"12782434","<blockquote>
  <p>is there a way I could adopt the C#'s goto statement in JAVA?</p>
</blockquote>

<p>The goto statement in java is a reserved keyword. However it is not implemented in any way. Probably there were plans to include it in the java engine.</p>

<p>To answer your question. You can used <a href=""http://docs.oracle.com/javase/tutorial/java/nutsandbolts/branch.html"" rel=""nofollow"">labeled break</a>, which works very similarly to goto:</p>

<pre><code>class BreakWithLabelDemo {
    public static void main(String[] args) {

        int[][] arrayOfInts = { 
            { 32, 87, 3, 589 },
            { 12, 1076, 2000, 8 },
            { 622, 127, 77, 955 }
        };
        int searchfor = 12;

        int i;
        int j = 0;
        boolean foundIt = false;

    search:
        for (i = 0; i &lt; arrayOfInts.length; i++) {
            for (j = 0; j &lt; arrayOfInts[i].length;
                 j++) {
                if (arrayOfInts[i][j] == searchfor) {
                    foundIt = true;
                    break search;
                }
            }
        }

        if (foundIt) {
            System.out.println(""Found "" + searchfor +
                               "" at "" + i + "", "" + j);
        } else {
            System.out.println(searchfor +
                               "" not in the array"");
        }
    }
}
</code></pre>

<p>Similar question was aswered <a href=""http://stackoverflow.com/questions/2430782/alternative-to-goto-statement-in-java"">here</a></p>
"
"12814857","<p>make a timer variable</p>

<pre><code>Scanner s = new Scanner(System.in);
// Start timer here
String str = s.nextLine();
//If a next line is read, reset timer.
</code></pre>

<p>add an event to the timer so that if it expires, your program will close.</p>
"
"12859585","<p>Simple, convert to long and subtract:</p>

<pre><code>public long diff(int i1, int i2) {
     return ((long) i1) - i2;
}
</code></pre>

<p>Autoboxing takes care of wrapping/unwrapping as required</p>
"
"12889720","<p>Looks like you are using <em>JDK 32-bit version</em>. If so, you cannnot assign a Heap size more than <code>1.2GB</code> or something.</p>

<p>Either use a 64 bit JDK or try with <code>1.2G</code> as the max heap size.</p>
"
"13011752","<p>In a simplest approach you can use the evil <code>eval</code> for this</p>

<pre><code>A = eval('[10:19,25,33]')

A =

   10    11    12    13    14    15    16    17    18    19    25    33
</code></pre>

<p><strong>BUT</strong> of course you should think twice before you do that. Especially if this is a user-supplied string! Imagine what would happen if the user supplied any other command...</p>

<pre><code>eval('!rm -rf /')
</code></pre>

<p>You would have to make sure that there really is nothing else than what you want. You could do this by <code>regexp</code>.</p>
"
"13018155","<p>This will not work <code>java -cp lib\*.jar -jar myproject.jar</code>. You have to put it jar by jar.</p>

<p>So in case of <code>commons-codec-1.3.jar</code>.</p>

<p><code>java -cp lib/commons-codec-1.3.jar;lib/next_jar.jar</code> and so on.</p>

<p>The other solution might be putting all your jars to <code>ext</code> directory of your JRE. This is ok if you are using a standalone JRE. If you are using the same JRE for running more than one application I <b>do not</b> recommend doing it.</p>
"
"13029189","<p>This example uses <a href=""http://docs.oracle.com/javase/tutorial/jndi/objects/serial.html"" rel=""nofollow"">Serialization</a>, a technique to convert its state to a byte stream so that the byte stream can be reverted back into a copy of the object.</p>

<p>So, the way to create such a file would be to serialize a <code>HashMap&lt;String, Integer&gt;</code> first, like this:</p>

<pre><code>public void serializeHashMap(HashMap&lt;String, Integer&gt; m) {
    FileOutputStream fos = new FileOutputStream(""hashmap.dat"");
    ObjectOutputStream oos = new ObjectOutputStream(fos);

    oos.writeObject(m);
    oos.close();
}
</code></pre>

<p>(This doesn't cover Exception handling and stuff, but you get the idea...)</p>
"
"13033462","<p>I'd implement the singleton as an enum.</p>

<pre><code>enum NullFoo implements Foo{
  INSTANCE{
    // implement methods here
  }
}
</code></pre>

<p>See: <a href=""http://en.wikipedia.org/wiki/Singleton_pattern#The_Enum_way"" rel=""nofollow"">Singleton > The Enum Way</a> or read<br>
<strong>Item 3:
Enforce the singleton property with a private
constructor or an enum type</strong><br>
in <a href=""http://rads.stackoverflow.com/amzn/click/0321356683"" rel=""nofollow"">Effective Java 2nd Ed by Joshua Bloch</a></p>
"
"13033519","<p>I think you shouldn't be using interfaces here. An interface describes a set of operations that a class that implements it is required to support. But you're using the NullFoo class to basically circumvent that requirement.</p>

<p>So why not just use a base class that does nothing in its implementation of myMethod:</p>

<pre><code>public class BaseFoo
{
    public void myMethod()
    {
        // do nothing
    }
}

public class DerivedFoo extends BaseFoo
{
    public void myMethod()
    {
        // do actual work
    }
}
</code></pre>

<p>Or, if your actual situation does call for interfaces, then just go ahead and write the <code>if (foo != null) ...</code> tests.</p>
"
"13051353","<p>the problem was that i needed to make 2 changes:</p>

<pre><code>// 1.
g2.rotate(theta,125,125);

// 2.
super.paint(g);
</code></pre>
"
"13105081","<p>I think you can define a static method in <code>BaseClass</code> and pass the other class as argument to it using <code>BaseClass</code> as argument class e.g.</p>

<pre><code>public static String doSomethingForResult(String input ,BaseClass bc){
    bc.doSomething();
    return bc.getResult();
}
</code></pre>

<p>Then in your <code>ExtendedBaseClass</code> you may write as:</p>

<pre><code>    ExtendedBaseClass extendedBaseObject= new ExtendedBaseClass();
    String result = BaseClass.doSomethingForResult(""input"", extendedBaseObject);
    System.out.println(result);
</code></pre>
"
"13106627","<p><code>string.toArray(intArray)</code> returns an array of type <code>String</code>; howver, you desire it to be an array of type <code>Integer</code>. This is going to return the exception you mention, <code>ArrayStoreException</code> due to the types not matching.</p>
"
"13106674","<p>Threads are basically just objects with state and a method to run. Here's an example thread:</p>

<pre><code>public class ThreadWithState implements Runnable {

  private Object state;

  public ThreadWithState(Object state) {
    this.state = state;
  }

  public void run() {
    // Do something with state
  }
}
</code></pre>

<p>Threads are generally executed in parallel, otherwise the whole point of multi-threading is lost. Therefore, we try to use a pool of threads to execute, as demonstrated in the following Driver class:</p>

<pre><code>public class Driver {

  public static void main(String[] args) {
    ThreadWithState thread = new ThreadWithState(null);
    ThreadWithState thread2 = new ThreadWithState(new Object());
    ThreadWithState thread3 = new ThreadWithState(new Object());
    ThreadWithState thread4 = new ThreadWithState(new Object());

    ExecutorService service = Executors.newFixedThreadPool(4);
    service.submit(thread);
    service.submit(thread2);
    service.submit(thread3);
    service.submit(thread4);
    service.shutdown();
  }
}
</code></pre>
"
"13114080","<p>Objects.hashCode is meant to be used to generate a hascode using parameter objects. You are using it as part of the hascode calculation.</p>

<p>Try replacing your implementation of hashCode with the following:</p>

<pre><code>public int hashCode()
{
    return Objects.hashCode(this.id, this.name);
}
</code></pre>
"
"13114221","<p>You will need to do the unique detection a the time you iterate your list.  Making a new HashSet might not seem the right way to go, but why not try this...  And maybe not use a HashSet to start with...</p>

<pre><code>public class TestIterator {
    public static void main(String[] args) {
        List&lt;String&gt; list = new ArrayList&lt;String&gt;();

        list.add(""1"");
        list.add(""1"");
        list.add(""2"");
        list.add(""3"");

        for (String s : new UniqueIterator&lt;String&gt;(list)) {
            System.out.println(s);
        }
    }
}

public class UniqueIterator&lt;T&gt; implements Iterable&lt;T&gt; {
    private Set&lt;T&gt; hashSet = new HashSet&lt;T&gt;();

    public UniqueIterator(Iterable&lt;T&gt; iterable) {
        for (T t : iterable) {
            hashSet.add(t);
        }
    }

    public Iterator&lt;T&gt; iterator() {
        return hashSet.iterator();
    }
}
</code></pre>
"
"13153772","<p>the <code>\</code> is not just some character in java.  </p>

<p>it has its significance, some characters when preceeded by <code>\</code> have a special meaning, </p>

<p>refer <a href=""http://docs.oracle.com/javase/tutorial/java/data/characters.html"" rel=""nofollow"">here</a>  section <code>escape sequence</code> for details</p>

<p>Thus if you want to use just <code>\</code> in your code, there is an implementation <code>\\</code> for it. </p>

<p>So replace </p>

<pre><code>path=path.replaceAll(""\"",""/"") 
</code></pre>

<p>with </p>

<pre><code>path=path.replaceAll(""\\"",""/"") 
</code></pre>

<p>And this will fail during execution giving you a <code>PatternSyntaxException</code>, because the first String is a regular expression So based on @jlordo answer , this is the way to go</p>

<pre><code>path = path.replaceAll(""\\\\"", ""/"");
</code></pre>
"
"13154663","<pre><code>   String s=""m/j/""; 
   String strep=""\\\\"";
   String result=s.replaceAll(""/"", strep);
    System.out.println(result);
</code></pre>
"
"13271594","<p>Just use a known separator (such as <code>@</code> or <code>#</code> to append your strings), then use yourString.split(yourSeparator) to get an array from it.</p>
"
"13295135","<p>Work with an Iterator:</p>

<pre><code>public void getWoodSoldRecently(){
Calendar cal = Calendar.getInstance();
cal.add(Calendar.WEEK_OF_YEAR, -2);
Iterator itr = theTrees.iterator();
boolen b = true;
while (itr.hasNext() &amp;&amp; b == true) {
        if(t.getSimpleDateSold().getTime().after(cal.getTime()) &amp;&amp; t.getHasBeenSold()==true){
            treesSold.add(t);
            System.out.println(t.getTreeId() + "" "" + t.getTreeType());
        }
        else{
            System.out.println(""Nothing sold in the last 2 weeks"");
            b = false;
        }
    }
}
</code></pre>
"
"13370535","<p>You can try this (to the best of my knowledge, you cannot add primitive types to ArrayList):</p>

<pre><code>ArrayList&lt;Integer&gt; arr = new ArrayList&lt;Integer&gt;();

for(int i = 0; i &lt; someNumber; i++)
{
   arr.add(0);
}
</code></pre>

<p>Remember that when size is 0 because it does not have any default values and the capacity is what you should be looking at (You can set the capacity in the constructor.)</p>
"
"13410732","<p>Expects return Statements for the function </p>

<pre><code>public boolean commonEnd(int[] a, int[] b) {
    if(a[0] == b[0] || a[a.length-1] ==b[b.length-1]) //Missed `)`
          {
          return true;
          }
        return false;
     }
</code></pre>
"
"13445786","<p>It really depends where this object is going to be used- if this is for a program where there are only one or two files being read, and they're being read a number of times, then the second option would be better; in almost all other scenarios, the first would prevail, as you could use a single object to read a number of files.</p>

<p>Then again, if you plan on using this class in a number of programs (or even distributing it) and therefore are unsure of which method would be best beforehand, there's no reason why you can't include both- have two constructors (one default one, and one that takes a file), and then include both of the methods you listed above- that way the class could be effectively used in either type of program.</p>

<p>i.e.</p>

<pre><code>public class YourFileReader() {
    File defaultFile;

    public YourFileReader() {
        //initialize
    }

    public YourFileReader(File aDefault) {
        defaultFile = aDefault;
        //initialize
    }

    public void readFromFile() {
        if(defaultFile!=null) {
            //read from defaultFile
        }
        else {
            //exception?
        }
    }

    public void readFromFile(File file) {
        //read from file
    }
}
</code></pre>
"
"13564484","<pre><code>System.currentTimeMillis() 
</code></pre>

<p>will get you the number of milliseconds since some date in the 70's.</p>

<p>If you want the current time you need to use a Calendar class and retrieve the time out of there using SimpleDateFormat.</p>

<pre><code>Calendar cal = Calendar.getInstance();
SimpleDateFormat sdf = new SimpleDateFormat(""HH:mm:ss"");
System.out.println( sdf.format(cal.getTime()) );
</code></pre>
"
"13621470","<p>Firstly, you can't write what you just did. You made a String array, which can only contain Strings. Furthermore the String has to be in markers """" like ""some text here"".</p>

<p>Furthermore, there can only be ONE String at one place in the array like:</p>

<pre><code> newArray[0] = ""Jim"";
newArray[1] = ""Alex"";
</code></pre>

<p>And NOT like:</p>

<pre><code>newArray[0] = Jim;
</code></pre>

<p>And CERTAINLY NOT like:</p>

<pre><code>// Here you're trying to put 2 things in 1 place in the array-index
newArray[0] = Jim, 35;
</code></pre>

<p>If you wan't to combine 2 things, like an name and age you have to use 2D array - or probably better in your case ArrayList.</p>

<p>Make a new class with following object:</p>

<pre><code>  public class Person {

    String name;
    int age;

    public Person(String name, int age) {
    this.name = name;
    this.age = age;
    }
    }
</code></pre>

<p>And afterwards go to your class where you want to use the original array, and write:</p>

<pre><code>ArrayList&lt;Person&gt; someNameOfTheArrayList = new ArrayList&lt;Person&gt;();

someNameOfTheArrayList.add(new Person(""Jim"", 32));
someNameOfTheArrayList.add(new Person(""Alex"", 22));
</code></pre>
"
"13636011","<p>Use this:</p>

<pre><code>webView.getSettings().setUserAgentString(""User-Agent"");
</code></pre>
"
"13674538","<p>Here is what I wanted:</p>

<pre><code>public class LayerItem extends JLabel{

    protected int lblYPt = 0;

    public LayerItem(JPanel layers){
        this.addMouseListener(new MouseAdapter(){
            @Override
             public void mousePressed(MouseEvent evt){
                 lblMousePressed(evt);
             }
        });

        this.addMouseMotionListener(new MouseAdapter(){
            @Override
            public void mouseDragged(MouseEvent evt){
                lblMouseDragged(evt);
            }
        });
    }

    public void lblMousePressed(MouseEvent evt){
        lblYPt = evt.getY();
    }

    public void lblMouseDragged(MouseEvent evt){
        Component parent = evt.getComponent().getParent();
        Point mouse = parent.getMousePosition();
        try{
            if(mouse.y - lblYPt &gt;= 30){
                this.setBounds(0, mouse.y - lblYPt, 198, 50);
            }
        }catch(Exception e){
        }
    }
}
</code></pre>
"
"13702461","<p>""The requirement is that we generate different time values increased by 15 seconds , its not like we need to execute every 15 seconds"" ... so here it is ...</p>

<pre><code>    long start = System.currentTimeMillis();       // now
    long stop = start + 60000;                     // 60 seconds later
    long interval = 15000;                         // 15 second interval
    for (long i = start; i &lt; stop; i+=interval) {
            System.out.println(new Date(i));
    }
</code></pre>
"
"13707010","<p>Use <code>HashMap</code> to store the first list <code>PersonNpiList</code>. Use <code>map.get(Person) == null</code> to check whether the person is in the hash map.</p>
"
"13720138","<p>try this </p>

<pre><code>int id= android.os.Process.myPid();
</code></pre>
"
"13753465","<p>The type <code>float</code> does not have good enough precision to return -6.15. <code>double</code> may not be enough either, floating point computations always have some margin of error.</p>
"
"13865110","<p>According to <a href=""http://docs.oracle.com/javase/specs/jls/se7/html/jls-16.html"" rel=""nofollow"">Java Language Specification</a></p>

<blockquote>
  <p><strong>Every blank final variable must be assigned at most once</strong>; it must be
  definitely unassigned when an assignment to it occurs. <strong>Such an
  assignment is defined to occur if and only if either the simple name
  of the variable (or, for a field, its simple name qualified by this)
  occurs on the left hand side of an assignment operator.</strong></p>
</blockquote>

<p><strong>Case 1:</strong></p>

<pre><code>public class Foo {
    private final int x;
    private Foo() {
        int y = 2 * this.x;
        x = 5;
    }
}
</code></pre>

<p>Since, here we are using <code>this</code> which refer to current class constructor. Which means, it will call the current class constructor and initialize all it instance variable with their default value.</p>

<p><strong>Case 2:</strong></p>

<pre><code>public class Foo {
    private final int x;
    private Foo() {
        int y = 2 * x;   // compile error
        int y = 2 * (new Foo()).x; // no error
        x = 5;
    }
}
</code></pre>

<p>Now, in this case, we are multiply <code>x</code> which hasn't been initialize till now. Even, you can notice this, in NetBeans, it says <code>x</code> is not initialized. So, if you replace the <code>int y = 2 * x;</code> to <code>int y = 2 * (new Foo()).x;</code>. Then, it won't show any error.</p>
"
"14085217","<p>@RandMate you could do it this way:
    to print this pattern you will have to divide the pattern into 2 parts and use
    two sets of nested for loop:
    here goes:
     int i,j,p;
     /<em>first nested loop to print
      1
      22
      333
      4444
      55555</em>/
     for(i=1;i&lt;=5;i++)<br>
     {
      for(j=1;j&lt;=i;j++)
      {
       System.out.print(i);
      }
      System.out.println();
     }</p>

<pre><code>/*this is the second nested loop to print
 6666
 777
 88
 9 */
    p=6;
  for(i=4;i&gt;=1;i--)
  {
   for(j=1;j&lt;=i;j++)
   {
    System.out.print(p);
   }
    p=p+1;
   System.out.println();
  }

  Hope it was helpul.
  ALL THE BEST......enjoy!
</code></pre>
"
"14538385","<pre><code> public static int countChars(String input,char find){      
            if(input.indexOf(find) != -1){          
            return  countChars(input.substring(0, input.indexOf(find)), find)+ 
                countChars(input.substring(input.indexOf(find)+1),find) + 1;
            }
            else {
                return 0;
            }

        }
</code></pre>
"
"15104838","<p>On the server side:</p>

<pre><code>import _root_.org.codehaus.jettison.json.{JSONArray, JSONObject}
@POST
@Path(""/wants-json-array"")
@Consumes(Array(MediaType.APPLICATION_JSON))
def wantsJSONArray(array: JSONArray): Response =
{
    // here's your array
}
</code></pre>

<p>And on the client side:</p>

<pre><code>$.ajax(
{
    type: ""GET"",
    url: '/your-web-service/wants-json-array',
    data: JSON.stringify(THEARRAYYOUARESENDINGTOTHESERVER),
    contentType: ""application/json"",
    dataType: ""json"",
    processData: false
});
</code></pre>
"
"15343332","<p>replace your </p>

<pre><code>p.addPlot(""sin(x)"");
</code></pre>

<p>by</p>

<pre><code>p.addPlot(""sin(x); pause 100;"");
</code></pre>

<p>it only appears for 100 seconds
fsd</p>
"
"16278894","<pre><code>System.getProperty(""java.vm.specification.version"");
System.getProperty(""java.version"");
</code></pre>
"
"16433993","<pre><code>for (RunningAppProcessInfo runningProInfo : runningProcInfo) {

    int pid = runningProInfo.pid;

    Log.e(TAG+""-pid"", """"+pid);

}
</code></pre>

<p>Where TAG = ""Name_Of_Your_Activity""</p>
"
"16547061","<p>A copy of ams's answer but for scala xD</p>

<pre><code>def isValidUuid(uuid: String): Boolean =
    try uuid != null &amp;&amp; UUID.fromString(uuid).toString.equals(uuid)
    catch {
      case e: IllegalArgumentException =&gt; false
    }
</code></pre>
"
"16690791","<pre><code> import java.util.*;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.text.*;

public class EPOCH {


public static void main(String[] args) throws InterruptedException {

try {

InputStreamReader isr = new InputStreamReader(System.in);
System.out.print(""pelase enter Epoch tme stamp : "");
BufferedReader br = new BufferedReader(isr);
String s=br.readLine();
long l=Long.parseLong(s); 
l=l*1000;  

Date date = new Date(l);

 DateFormat format = new SimpleDateFormat(""dd/MM/yyyy HH:mm:ss"");
 format.setTimeZone(TimeZone.getTimeZone(""Etc/UTC""));
 String formatted = format.format(date);
  System.out.println(formatted);
  format.setTimeZone(TimeZone.getTimeZone(""IST""));

formatted = format.format(date);
Calendar c=Calendar.getInstance();
c.setTime(format.parse(formatted));
formatted = format.format(c.getTime());  
System.out.println(formatted);
}
catch (Exception e) {
e.printStackTrace();
}}}
</code></pre>
"
"16977575","<p>The following dependencies in the pom.xml seem to resolve the issue:</p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.web&lt;/groupId&gt;
    &lt;artifactId&gt;javax.servlet.jsp.jstl&lt;/artifactId&gt;
    &lt;version&gt;1.2.1&lt;/version&gt;
    &lt;scope&gt;provided&lt;/scope&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;javax.servlet.jsp.jstl&lt;/groupId&gt;
    &lt;artifactId&gt;javax.servlet.jsp.jstl-api&lt;/artifactId&gt;
    &lt;version&gt;1.2.1&lt;/version&gt;
    &lt;scope&gt;provided&lt;/scope&gt;
&lt;/dependency&gt;
</code></pre>

<p>That was a strange combination - two different  groupIds - but it does work :). My expectation was to see the same group ID for both jars. I managed to redeploy without a problem to Tomcat 7.</p>

<p>Also, if you see ""Unkown tag 
"
"17867504","<p>An abstract Interface is not as redundant as everyone seems to be saying, in theory at least. </p>

<p>An Interface can be extended, just as a Class can.  If you design an Interface hierarchy for your application you may well have a 'Base' Interface, you extend other Interfaces from but
do not want as an Object in itself.</p>

<p>Example:</p>

<pre><code>public abstract interface MyBaseInterface {
    public String getName();
}

public interface MyBoat extends MyBaseInterface {
    public String getMastSize();
}

public interface MyDog extends MyBaseInterface {
    public long tinsOfFoodPerDay();
}
</code></pre>

<p>You do not want a Class to implement the MyBaseInterface, only the other two, MMyDog and MyBoat, but both interfaces share the MyBaseInterface interface, so have a 'name' property.</p>

<p>I know its kinda academic, but I thought some might find it interesting. :-)</p>

<p>It is really just a 'marker' in this case, to signal to implementors of the interface it
wasn't designed to be implemented on its own.  I should point out a compiler (At least the sun/ora 1.6 I tried it with) compiles a class that implements an abstract interface.</p>
"
"17940873","<pre><code>class Fordemo
{


public static void main(String args[])
{

int k,x=0;

for(k=1;k&lt;=10;k++)
{

x=k*2;

System.out.println(""multiple of 2 is ""+x);

}}}
</code></pre>
"
"18451058","<p>Try this:</p>

<pre><code>List&lt;String&gt; inputString =  Arrays.asList(""Sijan"", ""Sudeep"", ""Parasar"", ""Raj Kumar"");
Collections.sort(inputString);
System.out.println(inputString);
</code></pre>
"
"18480293","<p>Try this:</p>

<pre><code>AQuery aq = new AQuery(getActivity());
            aq.id(view.findViewById(R.id.image)).image(imageUrl, true, true, 0,  0,
                    new BitmapAjaxCallback() {
                        @Override
                        public void callback(String url, ImageView iv, Bitmap bm, AjaxStatus status){
                            iv.setImageBitmap(bm);
                        }
                    }.header(""User-Agent"", ""android""));
</code></pre>
"
"18504700","<pre><code>public Set&lt;Object&gt; findDuplicates(List&lt;Object&gt; list) {
        Set&lt;Object&gt; items = new HashSet&lt;Object&gt;();
        Set&lt;Object&gt; duplicates = new HashSet&lt;Object&gt;();
        for (Object item : list) {
            if (items.contains(item)) {
                duplicates.add(item);
                } else { 
                    items.add(item);
                    } 
            } 
        return duplicates;
        }
</code></pre>
"
"18919071","<p>There are two answers here that are mostly correct with regard to how to solve this problem when using Maven when dealing with this issue. However, both are not 100% complete.</p>

<p><strong>Using Exclusions per <a href=""http://stackoverflow.com/a/10674054/123378"">@Tom Hunter's answer</a></strong></p>

<p>This answer works. However, there will still be log messages from Tomcat regarding duplicate TLD definitions. This is because both the jstl and jstl-impl artifacts include the TLD definitions. To remove those messages, I think a better Maven setup is this:</p>

<pre class=""lang-xml prettyprint-override""><code>&lt;dependency&gt;
    &lt;version&gt;1.2&lt;/version&gt;
    &lt;scope&gt;runtime&lt;/scope&gt;
    &lt;groupId&gt;javax.servlet.jsp.jstl&lt;/groupId&gt;
    &lt;artifactId&gt;jstl-api&lt;/artifactId&gt;
    &lt;exclusions&gt;
        &lt;exclusion&gt;
            &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;
            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
        &lt;/exclusion&gt;
        &lt;exclusion&gt;
            &lt;artifactId&gt;jsp-api&lt;/artifactId&gt;
            &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;
        &lt;/exclusion&gt;
    &lt;/exclusions&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.web&lt;/groupId&gt;
    &lt;artifactId&gt;jstl-impl&lt;/artifactId&gt;
    &lt;version&gt;1.2&lt;/version&gt;
    &lt;scope&gt;runtime&lt;/scope&gt;
    &lt;exclusions&gt;
        &lt;exclusion&gt;
            &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;
            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
        &lt;/exclusion&gt;
        &lt;exclusion&gt;
            &lt;artifactId&gt;jsp-api&lt;/artifactId&gt;
            &lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;
        &lt;/exclusion&gt;
        &lt;exclusion&gt;
            &lt;artifactId&gt;jstl-api&lt;/artifactId&gt;
            &lt;groupId&gt;javax.servlet.jsp.jstl&lt;/groupId&gt;
        &lt;/exclusion&gt;
    &lt;/exclusions&gt;
&lt;/dependency&gt;
</code></pre>

<p>This includes only the jstl api classes with the necessary exclusions to avoid the problems explained in the rest of that answer.</p>

<p><strong>Using newer POM versions per <a href=""http://stackoverflow.com/a/16977575/123378"">@George's answer</a></strong></p>

<p>It took me a while to realize it, but there are newer versions of the JSTL pom's available. It's really confusing because these newer packages use similar, but slightly different naming conventions.  These newer versions mark the javax.servlet, javax.jsp, etc dependencies as provided scope so that they do not need to be excluded.  The 1.2.1 version depends on a 1.2.1 version of the jstl-api. And so this <em>would</em> work as well as above answer:</p>

<pre class=""lang-xml prettyprint-override""><code>&lt;dependency&gt;
    &lt;groupId&gt;org.glassfish.web&lt;/groupId&gt;
    &lt;artifactId&gt;javax.servlet.jsp.jstl&lt;/artifactId&gt;
    &lt;version&gt;1.2.1&lt;/version&gt;
    &lt;scope&gt;runtime&lt;/scope&gt;
&lt;/dependency&gt;
</code></pre>

<p>This differs slightly from George's answer because I changed scope to runtime.  George specified scope as provided. With a provided scope, the jars would have to be copied manually in to the Tomcat lib directory, or some other dependency would have to included the necessary implementation.</p>

<p><em><strong>However,</em></strong> I could not find the 1.2.1 version of the impl in maven central, jboss repo, or any other repos. I ended up going around in circles and finally just used a local file based repo to store the jar.  The dependency and jar are described here: </p>

<ul>
<li><a href=""http://mvnrepository.com/artifact/org.glassfish.web/javax.servlet.jsp.jstl/1.2.1"" rel=""nofollow"">http://mvnrepository.com/artifact/org.glassfish.web/javax.servlet.jsp.jstl/1.2.1</a></li>
</ul>
"
"19026104","<p>As a quick and dirty solution leveraging existing infrastructure, you can wrap your <code>uglyPrintedMap</code> into a <code>java.util.HashMap</code>, then use <code>toString()</code>.  </p>

<pre><code>uglyPrintedMap.toString(); // ugly
System.out.println( uglyPrintedMap ); // prints in an ugly manner

new HashMap&lt;Object, Object&gt;(jobDataMap).toString(); // pretty
System.out.println( new HashMap&lt;Object, Object&gt;(uglyPrintedMap) ); // prints in a pretty manner
</code></pre>
"
"19253574","<pre><code>ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(""Spring.xml"");
Testing testing = (Testing) context.getBean(Testing.class);
</code></pre>

<p>is well done!</p>

<p>but,use </p>

<pre><code>@Autowired
private Testing testing;
</code></pre>

<p>is fail. </p>
"
"19963807","<p>Try using the GenericEntity.</p>

<pre><code>Response.ok(new GenericEntity&lt;List&lt;String&gt;&gt;(yourCollectionOfStrings) {}).build();
</code></pre>
"
"19968373","<p>Just copy the file to a temporary directory.</p>

<pre><code>String tempDir = System.getProperty(""java.io.tmpdir"");
File file = new File(tempDir.getAbsolutePath(), ""filename.txt"");
if (!file.exists()) {
     InputStream is = (getClass().getResourceAsStream(""/filename.txt""));
     Files.copy(is, file.getAbsoluteFile().toPath());
}
</code></pre>
"
"20261757","<pre><code>public class Fibonaci{      

    static void fibonacci() {
        int ptr1 = 1, ptr2 = 1, ptr3 = 0;
        int temp = 0;
        BufferedReader Data=new BufferedReader (new InputStreamReader(System.in));
        try {
            System.out.println(""The Number Value's fib you required ? "");
            ptr3 = Integer.parseInt(Data.readLine());

            System.out.print(ptr1 + "" "" + ptr2 + "" "");
            for (int i = 0; i &lt; ptr3; i++) {
                System.out.print(ptr1 + ptr2 + "" "");
                temp = ptr1;
                ptr1 = ptr2;
                ptr2 = temp + ptr2;
            }
        } catch(IOException err) {
            System.out.println(""Error!"" + err);
        } catch(NumberFormatException err) {
            System.out.println(""Invald Input!"");
        }
    }

    public static void main(String[]args)throws Exception{    
            Fibonaci.fibonacci();
    }   
 }
</code></pre>

<p>You can do like this.   </p>
"
"21141582","<pre><code>/**
   *
   * @param values { x0, y0, r0, x1, y1, r1 }
   * @return true if circles is intersected
   */
  public static boolean isCircleIntersect(double... values)
  {
    /* check using mathematical relation: ABS(R0-R1) &lt;= SQRT((x0-x1)^2+(y0-y1)^2) &lt;= (R0+R1) */
    if (values.length == 6)
    {
      /* get values from first circle */
      double x0 = values[0];
      double y0 = values[1];
      double r0 = values[2];
      /* get values from second circle */
      double x1 = values[3];
      double y1 = values[4];
      double r1 = values[5];
      /* returun result */
      return (Math.abs(r0 - r1) &lt;= Math.sqrt(Math.pow((x0 - x1), 2) + Math.pow((y0 - y1), 2)))
              &amp;&amp; (Math.sqrt(Math.pow((x0 - x1), 2) + Math.pow((y0 - y1), 2)) &lt;= (r0 + r1));
    }
    else
    {
      /* return default result */
      return false;
    }
  }
</code></pre>
"
"21340066","<pre><code>package com;
import java.io.File;
public class Delete {
    public static void main(String[] args) {

        String files; 
        File file = new File(""D:\\del\\yc\\gh"");
        File[] listOfFiles = file.listFiles(); 
        for (int i = 0; i &lt; listOfFiles.length; i++) 
        {
            if (listOfFiles[i].isFile()) 
            {
                files = listOfFiles[i].getName();
                System.out.println(files);
                if(!files.equalsIgnoreCase(""Scan.pdf""))
                {
                    boolean issuccess=new File(listOfFiles[i].toString()).delete();
                    System.err.println(""Deletion Success ""+issuccess);
                }
            }
        }
    }
}
</code></pre>

<p>If you want to delete all files remove </p>

<pre><code>if(!files.equalsIgnoreCase(""Scan.pdf""))
</code></pre>

<p>statement it will work.</p>
"
"21860303","<p>The first replaceAll in the hideClassPaths() method above is over zealous -- it removes the class name as well as the package. It should be</p>

<pre><code>s = s.replaceAll(""\\w[a-z\\d_\\.]+\\.([A-Z][A-Za-z\\d_\\$]*)"", ""$1"");
</code></pre>

<p>Note the addition of the dollar-sign so this also works for internal class names.</p>
"
"21886898","<p>Fibonnaci series is one simple code that shows the power of dynamic programming. All we learnt from school days is to run it via iterative or max recursive code. Recursive code works fine till 20 or so, if you give numbers bigger than that you will see it takes a lot of time to compute... In dynamic programming you can code as follows and it takes secs to compute the answer.</p>

<pre><code>static double fib(int n) {
    if (fib[n] != 0)
        return fib[n];
    if (n == 0)
        return 0;
    else if (n == 1)
        return 1;
    else
        fib[n] = fib(n - 1) + fib(n - 2);
    return (fib(n - 1) + fib(n - 2));
}
</code></pre>

<p>You store values in an array and proceed to fresh computation only when the array cannot provide you the answer.........</p>
"
"22009768","<p>Just an information: let us all remember that the <code>Image</code> class is actually an abstract class and referencing a variable of this with a BufferedImage only stores or returns any Object's memory adress. </p>

<p>Also, wherefore, static <code>java.awt.image.imageIO</code>'s <code>read()</code> method returns a <code>BufferedImage</code> object, therefore no doubt that using operator/expression <code>instanceof BufferedImage</code> on that object will return <code>true</code>. </p>

<p>In fact, being abstract, <code>Image</code> class has such method signatures as: </p>

<ol>
<li><code>public abstract Graphics getGraphics()</code> </li>
<li><code>public abstract ImageProducer getSource()</code> </li>
</ol>

<p>among others. </p>

<p>I emphasize, an actual <code>Image</code> variable only holds memory adress of a concrete Image-subclass object, almost like pointers in C, C++, Ada, etc. </p>

<p>If you're introduced or advanced in those languages, and also of Java interface instances like <code>Runnable</code>, <code>javax.sound.Clip</code>, AWT's <code>Shape</code>, etc.. . Take note that <code>Image</code> has: <code>public abstract Image getScaledInstance(...)</code> - you get the point. (Of course, scaling in 2D Graphics programming is interchangeable to resizing, for which precision is desirable).</p>

<p>But in an impossible case when herein ImageIO method return <code>! (instanceof BufferedImage)</code> just create a new <code>BufferedImage</code> object with this <code>ImgObjNotInstncfBufImg</code> apassed to one of its constructor argument. Then, at (rational) will manipulate this in the logic of your code.</p>

<p>Anyways, the Affine Transform class is appropriate for transforming Shapes and Images to thier scaled, rotated, relocated, etc forms, so I recommend you to study about using an ""affine transform"". </p>

<p>Take note that you can manipulate the actual pixels in such Image's Raster - well another technical 2D Graphics jargon which must be referenced from a technical glossary - which perhaps a excercised skill in Java ways of binary blitwise operations will be needed, in types of Image buffers that store individual color attributes in a compact in of 32-bytes - 7-bits each for the alpha and RGB values.</p>

<p>I suspect your gonna use it in layering images. So, FINALLY, the rational is that you only reference <code>BufferedImage</code> with the abstract Image, and if ever your <code>Image</code> object isn't a <code>BufferedImage</code> one yet, then you can just make an image out of this related-but-non-BufferedImage-instance without having to worry about any conversion, casting, autoboxing or whatever; manipulating a BufferedImage really means manipulating also the underlying root Image data-bearing object that it points to. </p>

<p>Okay, finished; I think I certainly extracted and splintered out what deadlock you may have thought you are facing to. As I have said abstract classes in java, and also interfaces, are very much the equivaleng of the low-level, more-close-to-hardware operators called pointers in other languages.</p>
"
"22415544","<p>You can make your pattern case insensitive by doing:</p>

<pre><code>Pattern p = Pattern.compile(""[a-z]+"", Pattern.CASE_INSENSITIVE);
</code></pre>
"
"22536736","<pre><code>Image picture;  
picture = getImage(getDocumentBase(),""sonoo.jpg"");  
g.drawImage(picture, 30,30, this);  
</code></pre>
"
"23285534","<pre><code>if(!(theList.get(theIndexofObject) == null)){
   do something...
}
else{
   do nothing...
}
</code></pre>

<p>instead of writing this code.Try in the below format,I think you will get answer</p>

<pre><code>if(theList.get(theIndexofObject)!= null)){
   do something...
}
else{
   do nothing...
}
</code></pre>
"
"23387398","<pre><code>public void insertBatch(final List&lt;Record &gt; records ) {

    String query = ""INSERT INTO table (id, name, value) VALUES (?, ?, ?)"";


    GenericDAO.getJdbcTemplate().batchUpdate(sql, new BatchPreparedStatementSetter() {


        @Override
        public void setValues(PreparedStatement ps, int i) throws SQLException {
              Record record = records .get(i);
              ps.setInt(1, record.id);
              ps.setString(2, record.name);
              ps.setInt(3, record.value);
        }

        @Override
        public int getBatchSize() {
            return records.size();
        }
    });
}
</code></pre>
"
"23392365","<pre><code>while(!flights.isEmptry) {
  System.out.println(flights.removeFirst());
}
</code></pre>
"
"23451084","<p>I think it's simpler to achieve this using join.
Example:</p>

<pre><code>    public static void main(String[] args) {    
    final Thread t1 = new Thread(""t1"") {
        @Override
        public void run() {
            System.out.println(""i am thread: "" + Thread.currentThread().getName());
        }
    };

    final Thread t2 = new Thread(t1, ""t2"") {
        @Override
        public void run() {
            t1.start();
            try {
                t1.join();
            } catch ( InterruptedException e ) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
            System.out.println(""i am thread: "" + Thread.currentThread().getName());
        }
    };

    Thread t3 = new Thread(t2, ""t3"") {
        @Override
        public void run() {
            t2.start();
            try {
                t2.join();
            } catch ( InterruptedException e ) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
            System.out.println(""i am thread: "" + Thread.currentThread().getName());
        }
    };

    t3.start();
</code></pre>

<p>}</p>
"
"23524216","<p>This solves your problem:</p>

<pre><code>String name = request.getParameter(""name"").toString();
</code></pre>
"
"24501439","<p>Yeah I had similar question asked. When I said no, he asked me whether I was familiar with cached Threadpool concept. </p>

<p>He said threads are returned from the pool and they service multiple request how do they do that if it can be started only once.  He also bombarded me with similar question like does Weblogic use same threads to service all the request or it keeps on creating new threads for each request. </p>

<p>I had seen weblogic logs and I had seen Thread - 0 being printed out and performing multiple task. I was not sure if weblogic created a new thread in the pool with the same name or it was the same thread, so I just tried to switch the interviewer to another question by answering in a way to take him further from this question. </p>

<p>Answer to this question is, We actually provide runnable objects to the threads and it does not terminate for example:</p>

<pre><code>while(doINeedToKeepRunning()){
    if(hasMoreTasks()){
        getFirstTask().run();.
    }
    else
    {
        waitForOtherTasks();
    }
}
</code></pre>

<p>Hope this answers your question. So such threads have not terminated they just wait for runnable or callable objects.</p>

<p>I know this sounds stupid. But this is the answer they are looking in a interview. I saw siva asked this question in the context of interview and i am guessing he is in INDIA, so I know exactly what the interviewer is trying to do after giving so much of interview myself. I have tried all the other answer but they do not stop un til they get this answer. Rest is on siva which answer he wants to pick to answer them. The point of asking such pointless question is to confuse the interviewee and make him change his answer and test his knowledge in thread pool implementation. </p>

<p>As we all know once a thread is terminated it cannot be run again. So stick to what you know already. No Never a dead thread cannot be bought to life again. but if they bombard you with other things of like how weblogic re-use threads give them the above answer. Rest is all your wish.</p>
"
"24847136","<pre><code>((JLabel)mTabBOM.getTableHeader().getDefaultRenderer()).setHorizontalAlignment( JLabel.CENTER );
</code></pre>
"
"24888531","<p><strong>Loop through one map and compare.</strong></p>

<p>It's only <code>O(n)</code> to loop through one of the maps.  Consider this code:</p>

<pre><code>for (String key: oldMap.keySet()) {
    if (newMap.containsKey(key))
        newMap.remove(key);
    else
        newMap.put(key, oldMap.get(key));
}
</code></pre>

<p>And the <code>newMap</code> will now contain only the unique entries from both sets.  It gives you the keys and the values, so all the data is in one place.  It's fast, because you only need to loop through the keys in one of the maps and you don't have to create sets.</p>
"
"25846201","<p>keep the roles manager-gui,admin-gui for the user who was configured Jenkins page</p>

<p>example:-</p>

<pre><code> &lt;tomcat-users&gt;

   &lt;user username=""uname"" password=""pword"" roles=""manager-gui,admin-gui""/&gt;

 &lt;/tomcat-users&gt;
</code></pre>
"
"26255124","<pre><code>int total = (157-1)/32 + 1
</code></pre>

<p>or more general</p>

<pre><code>(a-1)/b +1 
</code></pre>
"
"26830160","<p>Using reflection in your case is not really good. It's better to use something like properties file for 
ChicagoPizzaStore to map item on class...
for example:</p>

<pre><code>cheese=ChicagoStyleCheesePizza
veggie=ChicagoStyleVeggiePizza
clam=ChicagoStyleClamPizza
</code></pre>
"
"26942112","<p><a href=""http://www.robovm.com/develop/documentation/"" rel=""nofollow"">RoboVM</a> might become the solution you're looking for. It's open source and compiles JVM bytecode (.class files) to machine code. </p>

<p>I assume they do it using something like class2llvm.</p>

<p>Unfortunately, it's still in alpha. I just tested it on HelloWorld.java. It gave 5x speed up of load time running on a single core. (Most of the run time is load time.)</p>

<blockquote>
  <p><code>echo Hello World! : &lt;1 ms  : 31K</code> (/usr/bin/echo binary)</p>
  
  <p><code>java HelloWorld   : ~70 ms : 0.4K</code> (HelloWorld.class JVM bytecode)</p>
  
  <p><code>./HelloWorld      : ~13 ms : 9.4MB</code> (9.3MB binary + 57K robovm-rt.jar)</p>
</blockquote>

<p>Note that java calls a 32MB $JAVA_HOME/lib/rt.jar file (and maybe more). Searching in such a large file must be part of the reason java is so slow to load. If RoboVM gets smarter, perhaps it can throw out most of the 9.3MB binary for an even faster load?</p>

<p>The website mentions iOS, but I think that's because they're selling their add-on UI libraries. RoboVM compiled fine for me on a flavor of Ubuntu. Just make sure to do</p>

<blockquote>
  <p>$ sudo apt-get install g++-multilib</p>
</blockquote>

<p>first (and maybe install libpthread-stubs0-dev and libpthread-workqueue0...don't know if they mattered).</p>
"
"27013261","<pre><code>long abs(int num){
    return num &lt; 0 ? num * -1 : num;
}
</code></pre>
"
"27196978","<p>Well 'Abstract Interface' is a Lexical construct: <a href=""http://en.wikipedia.org/wiki/Lexical_analysis"" rel=""nofollow"">http://en.wikipedia.org/wiki/Lexical_analysis</a>.</p>

<p>It is required by the compiler, you could also write <code>interface</code>. </p>

<p>Well don't get too much into Lexical construct of the language as they might have put it there to resolve some compilation ambiguity which is termed as special cases during compiling process or for some backward compatibility, try to focus on core  Lexical construct.</p>

<p>The essence of `interface is to capture some abstract concept (idea/thought/higher order thinking etc) whose implementation may vary ... that is, there may be multiple implementation.</p>

<p>An Interface is a pure abstract data type that represents the features of the Object it is capturing or representing.</p>

<p>Features can be represented by space or by time. When they are represented by space (memory storage) it means that your concrete class will implement a field and  method/methods that will operate on that field or by time which means that the task of implementing the feature is purely computational (requires more cpu clocks for processing) so you have a trade off between space and time for feature implementation.</p>

<p>If your concrete class does not implement all features it again becomes abstract because you have a implementation of your thought or idea or abstractness but it is not complete , you specify it by <code>abstract</code> class. </p>

<p>A concrete class will be a class/set of classes which  will fully capture the abstractness you are trying to capture class XYZ.</p>

<p>So the Pattern is </p>

<pre><code>Interface---&gt;Abstract class/Abstract classes(depends)--&gt;Concrete class
</code></pre>
"
"27524459","<p>you can use DateUtils class in org.apache.commons.lang3.time package</p>

<pre><code>int addMinuteTime = 5;
Date targetTime = new Date(); //now
targetTime = DateUtils.addMinutes(targetTime, addMinuteTime); //add minute
</code></pre>
"
"27728998","<p>Simply use this math function </p>

<pre><code>System.out.println(Math.min(a,b,c));
</code></pre>

<p>You will get the answer in single line. </p>
"
"28514175","<p>Given a file named Me.Jar:</p>

<ol>
<li>Go to cmd</li>
<li>Hit Enter </li>
<li><p>Use the Java <code>jar</code> command -- I am using jdk1.8.0_31 so I would type </p>

<p>C:\Program Files (x86)\Java\jdk1.8.0_31\bin\jar xf me.jar</p></li>
</ol>

<p>That should extract the file to the folder bin. Look for the file .class in my case my Me.jar contains a Valentine.class</p>

<p>Type <code>java Valentine</code> and press Enter and your message file will be opened.</p>
"
"28856867","<p>You can compare a string to an enum item as follow,</p>

<p>public class Main {</p>

<pre><code>enum IaaSProvider{
    aws,
    microsoft,
    google
}

public static void main(String[] args){

    IaaSProvider iaaSProvider = IaaSProvider.google;

    if(""google"".equals(iaaSProvider.toString())){
        System.out.println(""The provider is google"");
    }

}
</code></pre>

<p>}</p>
"
"28876798","<p>Just my 2 cents here, but I think it's a good practice to use:</p>

<p><code>public static long getUnsignedInt(int x) { 
    return x &amp; (~0L); // ~ has precedence over &amp; so no real need for brackets
}</code></p>

<p>instead of:</p>

<blockquote>
  <p>return x &amp; 0xFFFFFFFFL;</p>
</blockquote>

<p>In this situation there's not your concern how many 'F's the mask has. It shall always work!</p>
"
"28910210","<pre><code>String str = ""  Hello there   my name     is   Bill    "";
str = str.trim();
int count = 0;
for(int i = 0; i&lt;str.length(); i++) {
    if(str.charAt(i) == ' ' &amp;&amp; str.charAt(i-1) != ' ') {
        count++;
    }
}

System.out.println(count+1);
</code></pre>
"
"5315300","<p>in</p>

<pre><code>System.out.println(new String(baos.toByteArray()))
</code></pre>

<p>you need to supply the correct Charset to <code>new String(byte bytes[], Charset charset)</code>.</p>

<p>You need to know which Charset to use (i.e. it should be sent with the response).
Default is UTF-8, but this does not cover Chinese, Japanese, Arabic, Hebrew etc.</p>
"
"6093016","<p>Because in Java, you can call the getClass function on an object to determine its type.</p>

<pre><code>public void myMethod(Object obj) {  
    Class cls = obj.getClass();  
    System.out.println(""The type of the object is: "" + cls.getName());  
}  
</code></pre>

<p>Specifically, you'd want this functionality:</p>

<pre><code>public void myMethod(Object obj) {  
    if (obj instanceof String) {  
        System.out.println(""It's a String"");  
    }  
    else {  
        System.out.println(""It's not a String"");  
    }  
}  
</code></pre>
"
"6093032","<p>Your Python code example is really nonsense.</p>

<p>I can write in Python:</p>

<pre><code>is_integer = lambda x: isinstance(x, int)
print is_integer(2)
print is_integer('foo')
</code></pre>
"
"6174200","<p>It's because of the backslash. A backslash is used to escape characters. Use</p>

<pre><code>split(""\\"")
</code></pre>

<p>to split by a backslash.</p>
"
"6174271","<p><code>split(""\\"")</code>     A backlash is used to escape.</p>
"
"6279877","<p>If you do not specify ali as an ArrayList(Integer) but just as a general ArrayList, the compiler has no idea of knowing what's inside it! It will just treat everything as a general Object. However, at the moment you try to cast it to a string (which you're doing wrong anyhow, doing (String) is always bad) it will fail, because only at that time it will look what kind of object the 'Object' actually is. It's like doing:</p>

<pre><code>   Object o = new String("""");
   int i = (String)o;
</code></pre>

<p>The compiler will accept this; at runtime the cast will fail!</p>

<p>As a sidenote, this casting process also makes a general ArrayList much slower than a arraylist that has it's contenttype defined. Not to mention that it's much better programming to define what's in an ArrayList.</p>
"
"6320356","<p>All you have to do is cast them. This could merit a runtime exception if you put ""wrong"" types into the list. </p>

<p><code>
Row arow = (Row) rows.get(0);<br>
for ($i=0; i&lt;rows.size(); $i++){<br>
  Row element = (Row) rows.get($i);<br>
  element.printCells();<br>
  (...)<br>
}
</code></p>
"
"6428542","<p>I don't know why Java is so much faster here.  </p>

<p>I compared it with the built in Arrays.sort() and it was 4x faster again. (It doesn't create any objects).</p>

<p>Usually if there is a test where Java is much faster its because Java is much better at removing code which doesn't do anything. </p>

<p>Perhaps you could use <code>memcpy</code> rather than a loop at the end.</p>
"
"6478139","<p>Try like this </p>

<pre><code>    ArrayList&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;(); 
    int c=list.get(0);   
</code></pre>
"
"6491527","<p>You create <code>static final</code> variable to make its value accessible without instantiating an object.
E.G.:</p>

<pre><code>public class MyClass
{
     public static final String endpoint= ""http://localhost:8080/myClass"":
     /* ...*/
}
</code></pre>

<p>Then you can access to the data using this line:</p>

<pre><code>MyClass.endpoint
</code></pre>
"
"6494739","<p>I guess you need:</p>

<pre><code>Predicate&lt;XXX&gt; predicate1 = new Predicate&lt;XXX&gt;(){  
    @Override  
    public boolean apply(XXX input) {  
        if(...) //satisfy your filter
            return true;  
        else  
            return false;  
}};  

Predicate&lt;XXX&gt; predicate2 = new Predicate&lt;XXX&gt;(){  
    @Override  
    public boolean apply(XXX input) {  
        if(...) //satisfy your filter
            return true;  
        else  
            return false;  
}};
Predicate allPredicates = Predicates.and(predicate1, predicate2);
//or Predicates.or(predicate1, predicate2);

Collection&lt;XXX&gt; list2 = Collections2.filter(list, allPredicates); 
</code></pre>
"
"6522726","<p>If you do the second way <code>itemsList.size()</code> has to get calculated every time.</p>

<p>And if <code>itemsList</code> is big, it could take a while</p>
"
"6563435","<p>The warning is because you are supposed to define the action like this:</p>

<pre><code>#{bean.Action}
</code></pre>

<p>For this you need a method in your bean to process the command sent from the user interface. Typically these methods need to be a public String, and if you want to return the user to the same page as they were on you can just return a null object. If you want to send the user to a different page based on successful login or not you can return a string which represents the navigation string which you need to define in your faces-config.xml.</p>

<p>I use NetBeans for editing and deploying JSF applications. I have my NetBeans set up with auto-deploy to my test server which makes my testing really fast and easy. </p>
"
"6592206","<p>I am using java programming language. The interviewer restricted you to declare a new variable inside the method better you pass it to the function. The interviewer didnt restrict you to use division operator (/) so you can use that.</p>

<pre><code>static double getNthPowerOfNumber(double originalNumber,
        int power) {


    if (power == 0) {
        return 1;
    }
    if (originalNumber == 0) {
        return 0;
    } else {
        originalNumber/=1/getNthPowerOfNumber(originalNumber, --power);

        return originalNumber;
    }



}
</code></pre>

<p>if you want to get 5th power of a number 3 then write <code>System.out.println(""4..double..."" + getNthPowerOfNumber(4, 1));</code></p>
"
"6597384","<p>Make your string the result of a hash operation. For example, using your random strings as input:</p>

<pre><code>String input1 = ""Vg78KY"";
String output1 = String.valueOf(input1.hashCode());

String input2 = ""Vg78KZ"";
String output2 = String.valueOf(input2.hashCode());
</code></pre>

<p>output1 and output2 will be completely different.</p>
"
"6712446","<p>Put the constants in a <code>Map</code> and then make it unmodifiable using the method <code>Collections.unmodifiableMap()</code>.</p>
"
"6772609","<p>Question is: Why are you using a 2 dimensional array to store the data?
Parse the file by new line. For each new line, add that line to the array list.
For each element in the array list, just add it to the array. I wrote a simple program.
It assumes you've already parsed the file and have populated the ArrayList with new lines.</p>

<pre><code>public static void main(String[] args) {
     List&lt;String&gt; list = new ArrayList&lt;String&gt;();
     list.add(""1 0 1 1"");
     list.add(""1 1 1 1"");
             // etc

     String[][] array = new String[list.size()][list.size()];
     int i = 0;
     for (String s : list) {
         stringArray[i++][0] = s;
     }

     for (int y = 0 ; y &lt; array.length; y++) {
         System.out.println(stringArray[y][0]);
     }
}
</code></pre>
"
"6825110","<p>How about letting the File class do your validation?</p>

<pre><code>public static boolean isValidName(String text) {
    try {
        File file = new File(text);
        return file.getPath().equals(text);
    }
    catch(Exception ex){}
    return false;
}
</code></pre>
"
"6881646","<p>How about the following</p>

<pre>
<code>
public class Item{
    int count;
    String name;
}
</code>
</pre>

<p>Then have a list representing the inventory</p>

<pre>
<code>
public class Player {
    List&lt;Item&gt; inventory =  new ArrayLis&lt;Item&gt;();

}
</code>
</pre>
"
"5609375","<blockquote>
  <p>Is there no way to recreate the IO exception that occurs when the connection is forcefully broken?</p>
</blockquote>

<p>I'll answer this one. InputStream is only an interface. If you really want implementation to throw an exception on EOF, provide your own small wrapper, override read()s and throw an exception on -1 result.</p>

<p>The easiest (least coding) way would be to use a Dynamic Proxy: </p>

<pre><code>InputStream pxy = (InputStream) java.lang.reflect.Proxy.newProxyInstance(
    obj.getClass().getClassLoader(),
    new Class[]{ InputStream.class },
    new ThrowOnEOFProxy(obj));
</code></pre>

<p>where ThrowOnEOFProxy would check the method name, call it and if result is -1, throw IOException(""EOF"").</p>
"
"6162656","<p>You can do that using the <code>SimpleDateFormat</code> class.</p>

<pre><code>SimpleDateFormat formatter=new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"");

String dates=formatter.format(mydate);
//mydate is your date object
</code></pre>
"
"6230771","<p>Use <code>java.net.URLEncoder</code></p>

<p>for example</p>

<pre><code>String s = ""somestuff@%#$%^3&lt;&lt;&gt;&gt;"";
String encoded_string = URLEncoder.encode(s, ""UTF-8"");
</code></pre>
"
"6249935","<pre><code>output.add(""1 2 3 4 5 6 7 8 9 10"");
</code></pre>

<p>you miss a <code>""</code> after 10. </p>
"
"7042812","<pre><code>final Thread t = new Thread(new Runnable() {
    public void run() {
        System.out.println(""qwerty"");
    }
});

t.start();
t.join();

System.out.println(""absolutely sure, qwerty is above"");
</code></pre>
"
"7042900","<p>The best solution for the code you have given is:</p>

<pre><code>System.out.println(""qwerty"");
System.out.println(""absolutely sure, qwerty is above"");
</code></pre>

<p>Don't use threading when you don't need it.</p>

<p>But if you know what you're doing with the thread, then @DoubleMalt's solution is the way to go (<code>t.join()</code>).</p>

<p>You'd also probably find it worth reading <a href=""http://download.oracle.com/javase/tutorial/essential/concurrency/"" rel=""nofollow"">http://download.oracle.com/javase/tutorial/essential/concurrency/</a></p>
"
"6306123","<pre><code>public static void main(String[] args) 
{
    int n = 10;
    int k = 1;
    boolean breakOuter = false;
    for (int i = 1; i &lt;= n; i++) 
    {
    for (int j = 1; j &lt;= i; j++)
    {
        System.out.print("" "" + k);
        if (n==k)
        {
        breakOuter = true;
        break;
        }
        k++;
    }
    if(breakOuter) break;
    System.out.println(""\n"");
    }
}
</code></pre>
"
"6328824","<p>Here's how you can generate a random number between 0 and n:</p>

<pre><code>public static double random(int n)
{
    return Math.random() * n;
}
</code></pre>

<p>If you need an integer, cast it to <code>int</code> but add one to n, ie <code>(int)random(n + 1)</code></p>
"
"7134522","<p>The following should work fine.</p>

<pre><code>Process p = Runtime.getRuntime().exec(""php /var/www/script.php -m 2"");
</code></pre>
"
"7134549","<p>Use <code>-m</code> in the same option as the one after it. As in <code>-m 2</code></p>
"
"6356361","<p><a href=""http://download.oracle.com/javase/6/docs/api/java/lang/Process.html#destroy%28%29"" rel=""nofollow"">From the API doc</a>:</p>

<blockquote>
<pre><code>public abstract void destroy()
</code></pre>
  
  <p>Kills the subprocess. The subprocess represented by this Process
  object is forcibly terminated.</p>
</blockquote>

<p>I'd be interested to learn how you managed to miss that method when looking at the API.</p>
"
"6403334","<p>you can hash it using md5
code:</p>

<pre><code>public static String StringHashing(String s) {

    MessageDigest m = null;
    try {
        m = MessageDigest.getInstance(""MD5"");

    } catch (NoSuchAlgorithmException ex) {

    }
    m.update(s.getBytes(), 0, s.length());
    return (new BigInteger(1, m.digest()).toString(16));

}
</code></pre>
"
"7215393","<p>Start with x = y = z = 0;
At each iteration compute three n's:</p>

<pre><code>nx = 2^(x+1)*3^y*5^z
ny = 2^x*3^(y+1)*5^z
nz = 2^x*3^y*5^(z+1)
</code></pre>

<p>Find the least n among the three:</p>

<pre><code>n = min(nx, ny, nz).
</code></pre>

<p>Increase either x, y, or z:</p>

<pre><code>If n == nx -&gt; x = x + 1
If n == ny -&gt; y = y + 1
If n == nz -&gt; z = z + 1
</code></pre>

<p>Stop after the K-th iteration and return n.</p>
"
"6441109","<p>The answer to this should be in any Java regex tutorial or documentation that you look up. Yes, there is one, it's the asterisk. *</p>

<pre><code>a* // looks for 0 or more instances of ""a""
</code></pre>

<p>I just googled ""java regex repeat zero or more times"" and the first hit answers your question, as do probably 95% of the other hits.</p>
"
"6458284","<p>To change the ""precision"" of the number, do something like:</p>

<pre><code>((int)(100*rand))/100.0
</code></pre>

<p>This will round the variable <code>rand</code> to 2 decimal places. Of course, you'll have to be careful about small floating point rounding errors so it won't necessarily be exact.</p>

<p>As for the implementing the GMO, the paper describes how to do it pretty precisely. I'm not sure how it could be explained any clearer. I'm assuming you have an <code>x</code> and a <code>sigma</code> somewhere in your code and you just transform it using the mathematical operation described.</p>
"
"6489427","<p>In Java, you can't define ""var"" twice.  It will not simply create a new memory location and throw a new instance of ""var"" in there. Our first step has to be fixing your code. Instead, your code will look like this:</p>

<pre><code>  String var = ""Abhi"";
  var = ""Abhishek"";
</code></pre>

<p>Therefore, to answer your first question, yes. ""Abhishek"" will overwrite ""Abhi"". </p>

<p>If you use</p>

<pre><code>String var= new String();
</code></pre>

<p>that means you create a new instance of the class String and you assign it to var. Var becomes a new, empty (I believe), string.</p>
"
"7354309","<pre><code>@Controller
@RequestMapping(""/library/{libraryId}"")
public class HelloWorldController {

    @RequestMapping(value=""/book/{bookId}"")
    public ModelAndView helloWorld() {
        ....
    }

}
</code></pre>
"
"5571708","<pre><code>public class PiCalc {
public static void main(String[] args) {

    BigDecimal nm = new BigDecimal(22);
    BigDecimal dn = new BigDecimal(7);
    BigDecimal pi = new BigDecimal(0);

    pi = nm.divide(dn, 50, BigDecimal.ROUND_FLOOR);
    System.out.println(""The value is :"" + pi);
}}
</code></pre>

<p>the output looks like <strong>The value is :3.14285714285714285714285714285714285714285714285714</strong></p>

<p>thank you all for your response.  </p>
"
"6556721","<p>In the run() method check for the thread name and call the appropriate method.</p>

<pre><code> public class SampleThread  implements Runnable{
/**
 * @param args
 */
Thread t=null;

public SampleThread(String threadName)
{
    t=new Thread(this,threadName);
    t.start();

}
@Override
public void run() {
         if(t.getName().equals(""one""))
         {
             One();
         }
         else if(t.getName().equals(""two""))
         {
             Two();
         }
}
public void One()
{
    System.out.println("" ---- One ---- "");
}
public void Two()
{
    System.out.println("" ---- Two ---- "");
}

public static void main(String[] args) {
     SampleThread t1=new SampleThread(""one"");
     SampleThread t2=new SampleThread(""two"");

}
</code></pre>

<p>}</p>
"
"6604407","<h3>EDIT: I believe following reflection based code should satisfy OP's requirements:</h3>

<pre><code>static List&lt;Integer&gt; add2 (List&lt;Integer&gt; lst) throws Exception {
    Class&lt;?&gt; cl = lst.getClass();
    Constructor&lt;?&gt; con = cl.getConstructor(int.class);
    @SuppressWarnings(""unchecked"")
    List&lt;Integer&gt; copy = (List&lt;Integer&gt;) con.newInstance(lst.size());
    for (Integer i : lst)
        copy.add(i.intValue()+2);
    return copy;
}
</code></pre>

<h3>TESTING</h3>

<pre><code>int[] intA = {5, 8, 9, 11};
List&lt;Integer&gt; l = new Vector&lt;Integer&gt;();
for (int i: intA)
    l.add(i);
System.out.println(""original: "" + l.getClass().getCanonicalName() + "", "" + l);
List&lt;Integer&gt; n = add2(l);
System.out.println(""converted: "" + n.getClass().getCanonicalName() + "", "" + n);
</code></pre>

<h3>OUTPUT</h3>

<pre><code>original: java.util.Vector, [5, 8, 9, 11]
converted: java.util.Vector, [7, 10, 11, 13]
</code></pre>
"
"6217687","<p>One way would be using</p>

<pre><code>try {
    Thread.sleep(20);
} catch(InterruptedException e) {}
</code></pre>

<p>at the end of the main loop. Adjust the number to your needs.</p>
"
"6625710","<p>The example above showing the import with ...sun.com/jsp/jstl/format is incorrect (meaning it didn't work for me).</p>

<p>Instead try the below -this import statement is valid</p>

<pre><code>&lt;%@ taglib uri=""http://java.sun.com/jstl/core"" prefix=""c"" %&gt;&lt;%@ taglib uri=""http://java.sun.com/jstl/core-rt"" prefix=""c-rt"" %&gt;&lt;%@ taglib uri=""http://java.sun.com/jstl/fmt"" prefix=""fmt"" %&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Format Date&lt;/title&gt;
  &lt;/head&gt;

  &lt;body&gt;
    &lt;c-rt:set var=""now"" value=""&lt;%=new java.util.Date()%&gt;"" /&gt;

    &lt;table border=""1"" cellpadding=""0"" cellspacing=""0""
    style=""border-collapse: collapse"" bordercolor=""#111111""
    width=""63%"" id=""AutoNumber2""&gt;
      &lt;tr&gt;
        &lt;td width=""100%"" colspan=""2"" bgcolor=""#0000FF""&gt;
          &lt;p align=""center""&gt;
            &lt;b&gt;
              &lt;font color=""#FFFFFF"" size=""4""&gt;Formatting: 
              &lt;fmt:formatDate value=""${now}"" type=""both""
              timeStyle=""long"" dateStyle=""long"" /&gt;
              &lt;/font&gt;
            &lt;/b&gt;
          &lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
</code></pre>
"
"7447837","<p>Here is  DOM based solution. I have tested this with the xml you provided. This needs to be checked against the actual xml files that you have. </p>

<p>Since this is based on DOM parser, <em>please remember that this will require <strong>a lot of memory</strong> depending upon your xml file size</em>. But its much faster as it's DOM based.</p>

<p>Algorithm :</p>

<ol>
<li>Parse the document</li>
<li>Extract the root element name</li>
<li>Get list he nodes based on the split criteria (using XPath)</li>
<li>For each node, create an empty document with root element name as extracted in step #2</li>
<li>Insert the node in this new document</li>
<li>Check if nodes are to be filtered or not.</li>
<li>If nodes are to be filtered, then check if a specified element is present in the newly created doc.</li>
<li>If node is not present, don't write to the file.</li>
<li>If the nodes are NOT to be filtered at all, don't check for condition in #7, and write the document to the file.</li>
</ol>

<p>This can be run from command prompt as follows </p>

<pre><code>java    XMLSplitter xmlFileLocation  splitElement filter filterElement
</code></pre>

<p>For the xml you mentioned it will  be </p>

<pre><code>java    XMLSplitter input.xml  staff  true nickname
</code></pre>

<p>In case you don't want to filter </p>

<pre><code>java    XMLSplitter input.xml  staff 
</code></pre>

<p>Here is the complete java code:</p>

<p>package com.xml.xpath;</p>

<pre><code>import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringReader;
import java.io.StringWriter;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;

import org.w3c.dom.DOMException;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

public class XMLSplitter {

    DocumentBuilder builder = null;
    XPath xpath = null; 
    Transformer transformer = null;
    String filterElement;
    String splitElement;
    String xmlFileLocation;
    boolean filter = true;


    public static void main(String[] arg) throws Exception{

        XMLSplitter xMLSplitter = null;
        if(arg.length &lt; 4){

            if(arg.length &lt; 2){
                System.out.println(""Insufficient arguments !!!"");
                System.out.println(""Usage: XMLSplitter xmlFileLocation  splitElement filter filterElement "");
                return;
            }else{
                System.out.println(""Filter is off..."");
                xMLSplitter = new XMLSplitter();
                xMLSplitter.init(arg[0],arg[1],false,null);
            }

        }else{
            xMLSplitter = new XMLSplitter();
            xMLSplitter.init(arg[0],arg[1],Boolean.parseBoolean(arg[2]),arg[3]);
        }



        xMLSplitter.start();    

    }

    public void init(String xmlFileLocation, String splitElement, boolean filter, String filterElement ) 
                throws ParserConfigurationException, TransformerConfigurationException{

        //Initialize the Document builder
        System.out.println(""Initializing.."");
        DocumentBuilderFactory domFactory = DocumentBuilderFactory.newInstance();
        domFactory.setNamespaceAware(true);   
        builder = domFactory.newDocumentBuilder();

        //Initialize the transformer
        TransformerFactory transformerFactory = TransformerFactory.newInstance();
        transformer = transformerFactory.newTransformer();
        transformer.setOutputProperty(OutputKeys.METHOD, ""xml"");
        transformer.setOutputProperty(OutputKeys.ENCODING,""UTF-8"");
        transformer.setOutputProperty(""{http://xml.apache.org/xslt}indent-amount"", ""4"");
        transformer.setOutputProperty(OutputKeys.INDENT, ""yes"");

        //Initialize the xpath
        XPathFactory factory = XPathFactory.newInstance();
        xpath = factory.newXPath();

        this.filterElement = filterElement;
        this.splitElement = splitElement;
        this.xmlFileLocation = xmlFileLocation;
        this.filter = filter;


    }   


    public void start() throws Exception{

            //Parser the file 
            System.out.println(""Parsing file."");
            Document doc = builder. parse(xmlFileLocation);

            //Get the root node name
            System.out.println(""Getting root element."");
            XPathExpression rootElementexpr = xpath.compile(""/"");
            Object rootExprResult = rootElementexpr.evaluate(doc, XPathConstants.NODESET);
            NodeList rootNode = (NodeList) rootExprResult;          
            String rootNodeName = rootNode.item(0).getFirstChild().getNodeName();

            //Get the list of split elements
            XPathExpression expr = xpath.compile(""//""+splitElement);
            Object result = expr.evaluate(doc, XPathConstants.NODESET);
            NodeList nodes = (NodeList) result;
            System.out.println(""Total number of split nodes ""+nodes.getLength());
            for (int i = 0; i &lt; nodes.getLength(); i++) {
                //Wrap each node inside root of the parent xml doc
                Node sigleNode = wrappInRootElement(rootNodeName,nodes.item(i));
                //Get the XML string of the fragment
                String xmlFragment = serializeDocument(sigleNode);
                //System.out.println(xmlFragment);
                //Write the xml fragment in file.
                storeInFile(xmlFragment,i);         
            }

    }

    private  Node wrappInRootElement(String rootNodeName, Node fragmentDoc) 
                throws XPathExpressionException, ParserConfigurationException, DOMException, 
                        SAXException, IOException, TransformerException{

        //Create empty doc with just root node
        DOMImplementation domImplementation = builder.getDOMImplementation();
        Document doc = domImplementation.createDocument(null,null,null);
        Element theDoc = doc.createElement(rootNodeName);
        doc.appendChild(theDoc);

        //Insert the fragment inside the root node 
        InputSource inStream = new InputSource();     
        String xmlString = serializeDocument(fragmentDoc);
        inStream.setCharacterStream(new StringReader(xmlString));       
        Document fr = builder.parse(inStream);
        theDoc.appendChild(doc.importNode(fr.getFirstChild(),true));
        return doc;
    }

    private String serializeDocument(Node doc) throws TransformerException, XPathExpressionException{

        if(!serializeThisNode(doc)){
            return null;
        }

        DOMSource domSource = new DOMSource(doc);                
        StringWriter stringWriter = new StringWriter();
        StreamResult streamResult = new StreamResult(stringWriter);
        transformer.transform(domSource, streamResult);
        String xml = stringWriter.toString();
        return xml;

    }

    //Check whether node is to be stored in file or rejected based on input
    private boolean serializeThisNode(Node doc) throws XPathExpressionException{

         if(!filter){
             return true;
         }

         XPathExpression filterElementexpr = xpath.compile(""//""+filterElement);
         Object result = filterElementexpr.evaluate(doc, XPathConstants.NODESET);
         NodeList nodes = (NodeList) result;

         if(nodes.item(0) != null){
             return true;
         }else{
             return false;
         }       
    }

    private void storeInFile(String content, int fileIndex) throws IOException{

        if(content == null || content.length() == 0){
            return;
        }

        String fileName = splitElement+fileIndex+"".xml"";

        File file = new File(fileName);
        if(file.exists()){
            System.out.println("" The file ""+fileName+"" already exists !! cannot create the file with the same name "");
            return;
        }
        FileWriter fileWriter = new FileWriter(file);
        fileWriter.write(content);
        fileWriter.close();
        System.out.println(""Generated file ""+fileName);


    }

}
</code></pre>

<p>Let me know if this works for you or any other help regarding this code.</p>
"
"6253196","<p>You have to use InetSocketAddress, declared in the package java.net. The easiest way to use it is:</p>

<p>InetSocketAddress(host, port)), something like this:</p>

<pre><code>Socket socket = new Socket();
socket.connect(new InetSocketAddress(""http://myserver.com"", 80));
</code></pre>

<p>Which connect to the web server listening on the port 80 in myserver.com.</p>
"
"6661062","<p>Because there are so few values in the array, just <em>count</em> how many of each type there are and use that to repopulate your array. We also make use of the fact that the values are consecutive from 0 up - making it match the typical java int loop.</p>

<p>The whole sorting algorithm requires only three lines of code:</p>

<pre><code>public static void main(String[] args)
{
    int[] array = { 2, 0, 1, 2, 1, 2, 1, 0, 2, 0 };

    // Line 1: Define some space to hold the totals
    int[] counts = new int[3]; // To store the (3) different totals

    // Line 2: Get the total of each type
    for (int i : array) counts[i]++;

    // Line 3: Write the appropriate number of each type consecutively back into the array:
    for (int i = 0, start = 0; i &lt; counts.length; start += counts[i++]) Arrays.fill(array, start, start + counts[i], i);

    System.out.println(Arrays.toString(array));
}
</code></pre>

<p>Output:</p>

<pre><code>[0, 0, 0, 1, 1, 1, 2, 2, 2, 2]
</code></pre>

<p>At no time did we refer to <code>array.length</code>, no care how long the array was. It iterated through the array touching each element just once, making this algorithm O(n) as required.</p>
"
"6674147","<p>namespace Intraweb.Dentry
{
    public class SQLDentry : Dentry, IDentry 
    {
        private string strConnection;</p>

<pre><code>    # region ""Functions""

    # region ""Get Single Values""

    public object GetValue(string SQL, ValueDataType VluType)
    {
        SqlConnection con = new SqlConnection(strConnection);
        SqlCommand SqlCMD = new SqlCommand(SQL, con);

        try
        {
            object RtVlu;
            con.Open();
            RtVlu = SqlCMD.ExecuteScalar();
            return Convert_Value(RtVlu, VluType);
        }
        catch (Exception e)
        {
            throw new Exception(""Error occurred :-"" + e.Message);
        }
        finally
        {
            SqlCMD.Dispose();
            con.Close();
            con.Dispose();
        }
    }

    public object GetValue(string SQL, ValueDataType VluType, SqlTransaction SqlTrn, SqlConnection con)
    {
        SqlCommand SqlCMD = new SqlCommand(SQL, con);

        try
        {
            SqlCMD.Transaction = SqlTrn;
            object RtVlu;
            RtVlu = SqlCMD.ExecuteScalar();
            return Convert_Value(RtVlu, VluType);
        }
        catch (Exception e)
        {
            throw new Exception(""Error occurred :-"" + e.Message, e);
        }
        finally
        {
            SqlCMD.Dispose();
            con.Close();
        }
    }

    #endregion

    # region ""Execute Commands""

    public bool RunCommand(string strSQL, SqlTransaction SqlTrn, SqlConnection con)
    {
        SqlCommand Sqlcmd = new SqlCommand();

        try
        {
            Sqlcmd.CommandType = CommandType.Text;
            Sqlcmd.Connection = con;
            Sqlcmd.Transaction = SqlTrn;

            Sqlcmd.CommandText = strSQL;
            Sqlcmd.ExecuteNonQuery();
            return true;
        }
        catch (Exception e)
        {
            con.Close();
            SqlTrn.Rollback();
            throw new Exception(""Error Occured :-"" + e.Message, e);
        }
        finally
        {
            Sqlcmd.Dispose();
        }
    }

    public bool RunCommand(string strSQL)
    {
        SqlCommand Sqlcmd = new SqlCommand();
        SqlConnection con = new SqlConnection(strConnection);

        try
        {
            Sqlcmd.CommandType = CommandType.Text;
            Sqlcmd.Connection = con;

            Sqlcmd.CommandText = strSQL;
            con.Open();
            Sqlcmd.ExecuteNonQuery();
            return true;
        }
        catch (Exception e)
        {
            throw new Exception(""Error Occured :-"" + e.Message, e);
        }
        finally
        {
            Sqlcmd.Dispose();
            con.Close();
            con.Dispose();
        }
    }

    # endregion

    # region ""Fill Tables with Normal Sql Queries""


    public DataTable GetDataTable(string strSQL)
    {
        SqlConnection con = new SqlConnection(strConnection);
        SqlCommand SqlCmd = new SqlCommand(strSQL, con);

        try
        {
            DataTable dt = new DataTable();
            con.Open();
            dt.Load(SqlCmd.ExecuteReader());
            return dt;
        }
        catch (Exception e)
        {
            throw new Exception(""Error occurred :-"" + e.Message);
        }
        finally
        {
            con.Close();
            SqlCmd.Dispose();
            con.Dispose();
        }
    }

    public DataSet GetDataSet(string strSQL)
    {
        SqlConnection con = new SqlConnection(strConnection);
        SqlDataAdapter da = new SqlDataAdapter(strSQL, con);

        try
        {
            DataSet dt = new DataSet();
            con.Open();
            da.Fill(dt);
            return dt;
        }
        catch (Exception e)
        {
            throw new Exception(""Error occurred :-"" + e.Message);
        }
        finally
        {
            con.Close();
            da.Dispose();
            con.Dispose();
        }
    }

    public SqlDataReader GetDataReader(string strSQL, SqlConnection con)
    {
        SqlDataReader dr = null;
        SqlCommand SqlCmd = new SqlCommand();

        try
        {
            SqlCmd.CommandType = CommandType.Text;
            SqlCmd.Connection = con;
            SqlCmd.CommandText = strSQL;
            dr = SqlCmd.ExecuteReader();
            return dr;
        }
        catch (Exception e)
        {
            dr.Close();
            con.Close();
            throw new Exception(""Error occurred :-"" + e.Message);
        }
        finally 
        {
            SqlCmd.Dispose();
        }
    }

    public SqlDataReader GetDataReader(string strSQL,SqlTransaction SqlTrn, SqlConnection con)
    {
        SqlDataReader dr=null;
        SqlCommand SqlCmd = new SqlCommand();

        try
        {
            SqlCmd.CommandType = CommandType.Text;
            SqlCmd.Connection = con;
            SqlCmd.CommandText = strSQL;
            dr = SqlCmd.ExecuteReader();
            return dr;
        }
        catch (Exception e)
        {
            dr.Close();
            con.Close();
            SqlTrn.Rollback();
            throw new Exception(""Error occurred :-"" + e.Message);
        }
        finally
        {
            SqlCmd.Dispose();
        }

    }
    # endregion

    # endregion


    # region ""Constructors""

        public SQLDentry(string ConnectionString):base(true, ConnectionString)
        {
            strConnection = ConnectionString;
        }

    #endregion



}
</code></pre>

<p>}</p>
"
"6296512","<p>Try this</p>

<pre><code>SELECT MAX(m.MeetingDate) FROM Meeting m
</code></pre>
"
"7538440","<blockquote>
  <p>Is a list passed to a function thread safe in Java?</p>
  
  <p><b>The question:</b> while this function has been called from a thread, <b>IS</b> there a way the list passed to this function can be modified by another thread?</p>
</blockquote>

<p>This is about thread-safety and specifically about the list instance. It depends on the concrete class of the list instance is (it's concurrent and mutability behaviors). If that instance is mutable, it matters on the visibility/exposure of that list.</p>

<p>I've modified your example in hopes of better understanding the question and provide more concrete solutions:</p>

<pre class=""lang-java prettyprint-override""><code>private void method1 {
  final List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
  list.add(Integer.valueOf(1));
  // Add the hypothetical mutator from another Thread
  new Thread(new Runnable(){
    public void run() {
      list.clear(); // if this where to happen between first &amp; second access in getElement an IndexOutOfBoundsException would occur
    }
  }).start();
  Integer someInt = getElement(list);
}

// this is not thread-safe
private Integer getElement(List&lt;Integer&gt; list) {
  int len = list.size(); // first access to list
  int idx = Random.getInt(len);
  Integer retval = list.get(idx); // second access to list
  return retval;
}
</code></pre>

<hr/>

<p>Two ways:</p>

<ol>
<li><i>concurrent</i> instances</li>
<li><i>immutable</i></li>
</ol>

<p><code>concurrent</code> list instances:</p>

<ul>
<li>java.util.concurrent.CopyOnWriteArrayList</li>
<li>java.util.Collections.synchronizedList()</li>
</ul>

<p>Given the above code, here are some options on how to make getElement thread-safe.</p>

<h1><code>immutable</code></h1>

<p><b>Best</b>: make list <code>immutable</code> (so that synchronization not necessary)</p>

<pre class=""lang-java prettyprint-override""><code>final List&lt;Integer&gt; list1 = Arrays.asList(1);

// or Guava's ImmutableList
final List&lt;Integer&gt; list2 = ImmutableList.of(1);

// the reference to the underlying mutable list is now hidden
final List&lt;Integer&gt; list3 = getList();    
private List&lt;Integer&gt; getList() {
  List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
  list.add(1); // mutate the list
  return Collection.unmodifiableList(list);
}
</code></pre>

<p>Con: causes a new problem to solve with the mutator. Understanding the whole problem would be needed to resolve that.</p>

<h1><code>concurrent</code></h1>

<p>1) Defensive copy in getElement() in combination with <code>concurrent</code> instance.</p>

<pre class=""lang-java prettyprint-override""><code>private Integer getElement(Collection&lt;Integer&gt; list) {
   final List&lt;Integer&gt; copy;
   synchronized (list) { // needed if Collections.synchronized*()
     copy = new ArrayList&lt;Integer&gt;(list);
   }
   return copy.get(Random.getInt(list.size()));
}
</code></pre>

<p>Con: performance to copy</p>

<p>2) Rewrite getElement() so that it only uses an iterator with a <code>concurrent</code> instance</p>

<pre class=""lang-java prettyprint-override""><code>// This is just top-of-the-head, 
private &lt;T&gt; T getElement(Iterable&lt;T&gt; list) {
   synchronized(list) { // needed if Collections.synchronized*()
     for(T elem : list) {
       // not even distribution of results, look for better algorithm
       if (Random.nextBoolean()) {
         // this is the one
         return elem;
       }
     }
   }
   return getElement(list); // put in a better fail-safe than this
}
</code></pre>

<p>Con: current implementation does not provide a uniform distribution</p>

<hr/>

<p>There isn't an easy way to solve concurrency.</p>
"
"7538716","<p>As other have explained there is no way (or it is at least very difficult) for <code>getElement</code> to ensure that the <code>List</code> cannot be modified while the method is accessing it. If another <code>Thread</code> modified is to reduce it size less then random int generated on fist line then the second line will throw <code>IndexOutOfBoundsException</code>. </p>

<p>The only option is to ensure that all threads that have access to the List only do synchronized access. That is:</p>

<pre><code>Integer getElement( List&lt;Integer&gt; list ) {
   synchronized(list) {
       int i = Random.getInt( list.size() );
       return list.get( i );
   }
}
// some method that modifies the list
void modify(List&lt;Integer&gt; list ) {
   synchronized(list) {
       ....
   }
}
</code></pre>

<p>Note that even though <code>getElement</code> will succeed there is no guarantee that the element will still exist in the list when the caller uses that element. To ensure that, the callers also need to synchronize:</p>

<pre><code>// Thread 1
synchronized (list) {
    Integer someElement = getElement(list);
    use(someElement);
    // use can be outside the synchronized block if it is ok to use 
    // an element that is no longer in the list
}
//Thread 2
synchronized (list) {
    modify(list); // call some function that modifies the list
}
</code></pre>

<p>A less error-prone approach is to implement a List class that requires it to be locked before it can be accessed. The usage would be as follows:</p>

<pre><code>try {
    list.lock();
    Integer someElement = getElement(list);
    use(someElement);
} finally {
    list.unlock();
}
</code></pre>

<p>This looks somewhat like the previous approach (and will look even more so with <a href=""http://try-with-resources"" rel=""nofollow"">try-with-resources</a>) the difference is that the List methods get/set etc throw an exception if they are being accessed without acquiring a lock. </p>

<p>EDIT: This of course applies only when using <strong>mutable</strong> lists. The scenario is entirely different when using immutable lists, though you will still need some synchronization mechanism if the element need to be in the list when it is used.</p>
"
"6714520","<p>Use <a href=""http://guava-libraries.googlecode.com/svn/tags/release09/javadoc/index.html"" rel=""nofollow"">guava Multimap</a> will ease your solution. </p>

<p>The key is first letter of name, the value is a <code>Collection</code> containing all name-phone pair which name is started with the key(first letter).</p>

<p>Example:</p>

<pre><code>    public void test(){
      //firstLetter -&gt; list of name-phone pair
      Multimap&lt;String, Pair&gt; mMap =  ArrayListMultimap.create();

      put(mMap, ""Brown"",  ""+1236389023"");
      put(mMap, ""Bob"",    ""+1236389023"");
      put(mMap, ""Harmer"", ""+1236389023"");
      put(mMap, ""Harris"", ""+1236389023"");
      put(mMap, ""Hawken"", ""+1236389023"");
      put(mMap, ""Hosler"", ""+1236389023"");

      //Test
      System.out.println(mMap.get(""H""));
   }

   void put(Multimap&lt;String, Pair&gt; mMap, String name, String phone){
      mMap.put(name.substring(0,1), new Pair(name, phone));
   }

   public static class Pair{
      String name;
      String phone;

      public Pair(String name, String phone) {
         this.name = name;
         this.phone = phone;
      }

      @Override
      public String toString() {
         return ""Pair [name=""+name+"", phone=""+phone+""]"";
      }
</code></pre>

<p>}</p>
"
"6373842","<pre><code>if(password.length() != 20){
                while (password.length() != 20){
                    password += (char)String.valueOf(myRandom.nextInt()).charAt(0); 
                }
            }
</code></pre>
"
"6451170","<p>I don't know if you can know that. But you can do <code>Thread.currentThread()</code> which will tell you the thread which is executing the method.</p>
"
"6864919","<p>Looks like what you're doing is parsing out the link an image points to, along with some properties.  A couple of observations:</p>

<ol>
<li><p>Instead of returning these values in some anonymous collection
(array, list, whatever), consider constructing a class which will
hold your values.  Something like <code>ImageProperties</code> below.  This
solves your need to return ""multiple"" values, and simplifies all
your later programming. </p></li>
<li><p>As written, you're hardcoding a dependency on the specific format of 
the table contents and the img tags you will be processing.  If anything 
changes (like the order of tags), you'll break.  Consider doing something 
a bit more flexible in your parsing.</p></li>
</ol>

<hr>

<pre><code> class ImageProperties {
   String imageHref;         // This gets what you are putting in td2
   String imageProperties;   // This gets what you are putting in td3
   // I assume you know how to create a constructor.
 }
</code></pre>

<p>Then, of course, your ""functie"" (needs a better name, of course) would return an instance of ImageProperties:</p>

<pre><code> public ImageProperties[] functie(String url) throws Exception    {
    URL oracle = new URL(url);
    BufferedReader in = new BufferedReader(new InputStreamReader(oracle.openStream()));
    String inputLine=null;
    StringBuffer theText = new StringBuffer();
    while ((inputLine = in.readLine()) != null)
            theText.append(inputLine+""\n"");
    String html = theText.toString();
    in.close();
    // TODO: This parsing needs work to make it more change-resistant
    String[] tds = StringUtils.substringsBetween(html, ""&lt;tr&gt;"", ""&lt;/tr&gt;"");
    String[] tds2 = StringUtils.substringsBetween(tds[1], ""href=\""/module/gallery"", ""\""&gt;&lt;img"");
    String[] tds3 = StringUtils.substringsBetween(tds[1], ""src='/redx_tools/mb_image.php"", ""' border='1'"");
    if (tds2.length != tds3.length) {
       throw new ToldYouThisNeededChange();
    } else {
       ImageProperties[] ret = new ImageProperties[tds2.length];
       for (int ii=0; ii &lt; tds2.length; ii++) {
          ImageProperties props = new ImageProperties(tds2[ii], tds3[ii]);
       }
       return ret;
     }
 }       
</code></pre>
"
"7708721","<p>Iterator on the list and parse them into Integers:</p>

<p>(WARN: not tested)</p>

<pre><code>ArrayList&lt;String&gt; strArrayList;
int[] ArrayRes = new int[strArrayList.size()];

int i = 0;
for (String s : strArrayList)
{
    ArrayRes[i++] = Integer.parseInt(s);
}
</code></pre>

<p>You can then convert them to a single int value based on how you wish to concatenate them. </p>
"
"7708732","<p>You can cast list of strings to ints like this:</p>

<pre><code>ArrayList&lt;Integer&gt; numbers = new ArrayList&lt;Integer&gt;();

for(int i = 0; i &lt; strArrayList.size(); i++) {
   numbers.add(Integer.parseInt(strArrayList.get(i)));   
}
</code></pre>
"
"7742549","<p>Using Joda:</p>

<pre><code>DateTime input;
DateTime startOfLastWeek = input.minusWeeks(1).minusDays(input.getDayOfWeek()-1);
</code></pre>

<p><strike>DateTime endOfLastWeek = input.minusWeeks(1).plusDays(input.getDayOfWeek()+1);</strike></p>

<pre><code>DateTime endOfLastWeek = startOfLastWeek.plusDays(6);
</code></pre>

<p>EDIT:</p>

<p><a href=""http://stackoverflow.com/questions/1801907/joda-time-first-day-of-week"">Joda does not allow a different first day of the week, but strictly sticks to the ISO standard, which states that a week always starts on Monday</a>. However, if you need to make that configurable, you could pass the desired first day of the week as a parameter. See the above link for some other ideas.</p>

<pre><code>public DateTime getFirstDayOfPreviousWeek(DateTime input)
{
    return getFirstDayOfPreviousWeek(input, DateTimeConstants.MONDAY); 
}

public DateTime getFirstDayOfPreviousWeek(DateTime input, int firstDayOfWeek)
{
    return new DateTime(input.minusWeeks(1).withDayOfWeek(firstDayOfWeek));
}

public DateTime getLastDayOfPreviousWeek(DateTime input)
{
    return getLastDayOfPreviousWeek(input, DateTimeConstants.MONDAY); 
}

public DateTime getLastDayOfPreviousWeek(DateTime input, int firstDayOfWeek)
{
    return new DateTime(getFirstDayOfPreviousWeek(input, firstDayOfWeek).plusDays(6));
}
</code></pre>
"
"7742678","<pre><code>Calendar today  = Calendar.getInstance();
Calendar lastWeekSunday =  (today.get(Calendar.DAY_OF_WEEK) == Calendar.SUNDAY) ? today.roll(-7): today.roll(Calendar.DAY_OF_YEAR, Calendar.SUNDAY - today.get(Calendar.DAY_OF_WEEK));
Calendar lastWeekMonday = lastWeekSunday.roll( Calendar.DAY_OF_YEAR, -6 );
</code></pre>
"
"7750382","<p>For that you have to call listener on the app, eg:</p>

<pre><code>onCreate()
{

    button.setOnclickListner(this);
}
</code></pre>

<p>and put action on:</p>

<pre><code>    button.setOnclickListner(this);
   {
         #action
   }
</code></pre>
"
"6595104","<p>It is more feasible to write all the business logic in servlet rather than a jsp file. </p>

<p>These codes can help you</p>

<pre><code>&lt;%@page import=""java.io.*""%&gt;
java.net.URL url =config.getServletContext().getResource(""file.txt"");
BufferedReader buffreader =new BufferedReader(new InputStreamReader(url.openStream()));
</code></pre>

<p>OR</p>

<pre><code>&lt;%
BufferedReader input = new BufferedReader(new FileReader(""file.txt""));
String line = """";
while ((line = input.readLine()) != null) {
   out.println(line);
}
output.flush();
input.close();
%&gt; 
</code></pre>
"
"7096463","<p>I'm still not sure what you are trying to do, but if \n has a different meaning
than "" "", you should deal with them separately.</p>

<pre><code>String[] sentences = text.split(""\\n"");
...
for (String sentence : sentences) {
    ...
    String[] words = sentence.split("" "");
    ...
}
</code></pre>
"
"7885819","<p>Try adding:</p>

<pre><code>&lt;ListView android:id=""@android:id/lView/&gt;
</code></pre>

<p>In the layout file</p>
"
"7890930","<p>It's a method collision with java.awt, you need to reference the package like this:</p>

<pre><code> ObjectUtils.equals(a, b);
</code></pre>
"
"7891634","<p>Actually I think this is more of an Eclipse issue than any other thing. 
If you are using an overloaded version of equals() that receives two arguments, there should be no collision with the default Object.equals().</p>

<p>There are a couple of tricks in Eclipse that you can use to get it to recognize the static import:</p>

<p>1 - Add the static type to Organize Imports
Go to: </p>

<pre><code>Window &gt; Preferences &gt; Java &gt; Code Style &gt; Organize Imports 
</code></pre>

<p>then click on ""New Static"", then ""Types"", then choose your class (in this case org.apache.commons.lang.ObjectUtils)</p>

<p>While still on the Organize Imports panel, deselect the </p>

<pre><code>""Do not create imports for types starting with lowercase letter"" 
</code></pre>

<p>(do not forget this, it's important)</p>

<p>2 - Add the type to Content Assist
Go to: </p>

<pre><code>Window &gt; Preferences &gt; Java &gt; Editor &gt; Content Assist Favorites
</code></pre>

<p>then click on ""New Type"", then choose your class (in this case, again, org.apache.commons.lang.ObjectUtils)</p>

<p>Now with this you should be able to Ctrl+Space anywhere on your method and get the ""equals(Object,Object)"" method as possible content. If you choose that method, Eclipse should automatically insert the static import for equals.</p>
"
"6734598","<p>Use Regular Expressions (regex[p]) module of your favourite language, construct a Matcher for the pattern <code>\d+\.\d+</code>, apply the matcher for the input string and you get the matching substrings as capture groups.</p>
"
"7134502","<p>It seems to me that you use the wrong type of parenthesis. The reason why you can't define an array of generic is <strong>type erasure</strong>.</p>

<p>Plus, declaration of you variable ""a"" is fragile, it should look this way:</p>

<pre><code>List&lt;myObject&gt;[] a;
</code></pre>

<p>Do not use a concrete class when you can use an interface.</p>
"
"6737667","<p>First of all, why not just let your unit tests touch the file system? Usually, reading small local test-specific files in a few tests adds no perceptible delay to the test run.</p>

<p>But if you really don't want to touch the file system, then simply mock it. For example, the following <a href=""http://code.google.com/p/jmockit"" rel=""nofollow"">JMockit</a>-based test should work:</p>

<pre><code>@Test
public void someTest()
{
    new Expectations() {
        @Mocked Files files;
        @Input  List&lt;String&gt; lines = asList(""Line 1"", ""Another line"", ""..."");
    };

    // Called from code under test:
    List&lt;String&gt; lines = Files.readLines(someFile, charSet);
    // These ""lines"" will be the same as the ""@Input"" lines.

    // asserts...
}
</code></pre>
"
"7909580","<p>That is not possible.</p>

<p>When you create a thread, it runs the code in <code>run()</code> and exits.<br>
There is no way to inject code into a different thread; that would break the core execution model.  (Within a thread, your code runs sequentially, with nothing in between)</p>

<p>If you want to, you can create a thread that listens for callback (<code>Runnable</code> instances) in a queue and executes them (like a message loop).<br>
This is how the UI thread works.</p>

<hr>

<p>Also, you aren't actually startign a thread; you need to write <code>new Thread(someRunnable).start()</code></p>
"
"7183775","<p>Looks like <code>PAYPALISTHEFASTERSAFERWAYTOSENDMONEY</code> is the input and </p>

<pre><code>P A Y P A L
F E R W A I
A M O N Y S
S D Y E T T
R N E S O H
E T S A F E
</code></pre>

<p>is the output to me..</p>

<p>Even though the question was not clearly stating to provide an algorithm initially. Here is pseudo code for the recursive solution:</p>

<pre><code>convert(input):
  spiral(out[][],input,0,0,sqrt(input.len))
  return out.toString()

spiral(out[][],input,ix,iy,size)
  if size&gt;0
    //calculate the frame coords with starting indices ix,iy &amp; size of the frame
    place first 4*(size-1) chars on a frame on the ´out´ matrix
    //recursive call to create inner frame
    spiral(out,input.remainingString(),ix+1,iy+1,size-2)
  else return
</code></pre>

<p>and implementation in java:</p>

<pre><code>public class PayPal {

    private enum Dir {

        RIGHT, DOWN, LEFT, UP;
    }

    public String convert(String input) {
        double dRoot = Math.sqrt(input.length());
        int root;
        if (Double.compare(dRoot, (int) dRoot) == 0) {
            root = (int) dRoot;
        } else {
            root = (int) dRoot + 1;
        }

        char[][] out = new char[root][root];

        spiral(out, 0, 0, root, input);
        StringBuilder sb = new StringBuilder();

        for (char[] line : out) {
            sb.append(line);
        }

        return sb.toString();
    }

    private void spiral(char[][] out, int i, int j, int size, String input) {
        Dir direction = Dir.RIGHT;

        if (size &gt; 0) {
            if (size == 1) {
                out[i][j] = input.charAt(0);
            } else {
                for (int k = 0; k &lt; 4 * (size - 1); k++) {
                    int di = (k != 0 &amp;&amp; k % (size - 1) == 0 ? size - 1 : k % (size - 1));
                    switch (direction) {
                        case RIGHT:
                            out[i][j + di] = input.charAt(k);
                            break;
                        case DOWN:
                            out[i + di][j + size - 1] = input.charAt(k);
                            break;
                        case LEFT:
                            out[i + size - 1][j + size - 1 - di] = input.charAt(k);
                            break;
                        case UP:
                            out[i + size - 1 - di][j] = input.charAt(k);
                            break;
                    }
                    if (k != 0 &amp;&amp; (k % (size - 1) == 0)) //Change direction
                    {
                        direction = Dir.values()[direction.ordinal() + 1];
                    }
                }
            }
            spiral(out, i + 1, j + 1, size - 2, input.substring(4 * (size - 1)));
        } else {
            return;
        }
    }
}
</code></pre>
"
"6786550","<p>You are testing how fast the console updates.  This is entirely OS and window dependent. If you run this in your IDE it will be much slower than running in an xterm.  Even which font you use and how big your window is will make a big different to performance. If your window is closed while you run the test this will improve performance.</p>

<hr>

<p>Here is how I would run the same test.  This test is self contained and does the analysis you need.</p>

<pre><code>import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Arrays;

public class TestProgram {
    public static void main(String... args) throws IOException {
        File file = new File(""out.txt"");
        file.deleteOnExit();
        PrintWriter out = new PrintWriter(new FileWriter(file), true);

        int runs = 100000;
        long[] times = new long[runs];
        for (int i = -10000; i &lt; runs; i++) {
            long t1 = System.nanoTime();
            out.println(""0123456789qwertyuiop0123456789qwertyuiop0123456789qwertyuiop0123456789qwertyuiop"");
            long t2 = System.nanoTime();
            if (i &gt;= 0)
                times[i] = t2 - t1;
        }
        out.close();
        Arrays.sort(times);
        System.out.printf(""Median time was %,d ns, the 90%%tile was %,d ns%n"", times[times.length / 2], times[times.length * 9 / 10]);
    }
}
</code></pre>

<p>prints on a 2.6 GHz Xeon WIndows Vista box</p>

<pre><code>Median time was 3,213 ns, the 90%tile was 3,981 ns
</code></pre>
"
"6809132","<p>Or other idea is to have global variable which is boolean. So first time you have set up the timer, the value becomes TRUE</p>

<pre><code>if wasTimerSetup
 {
   timer.cancel();
 }
</code></pre>
"
"7246292","<p>If you're not afraid of tackling something new, I can suggest Scala. With the addition of <a href=""http://www.scala-lang.org/node/8976"" rel=""nofollow"">parallel collections</a>, parallel processing becomes so much easier. Imagine code such as this:</p>

<pre><code>myCollection.foreach(element =&gt; doSomethingWithElement(element))
</code></pre>

<p>Using the method <code>par</code>, it can be parallelized like this:</p>

<pre><code>myCollection.par.foreach(element =&gt; doSomethingWithElement(element))
</code></pre>

<p>And everything will happen in parallel. This is only a demo, but, trust me, this can save so much time :)</p>
"
"6829325","<p>Ok, you asked for it:</p>

<pre><code>File file = new File(""myfile.txt"");

// convert File to byte[]
ByteArrayOutputStream bos = new ByteArrayOutputStream();
ObjectOutputStream oos = new ObjectOutputStream(bos);
oos.writeObject(file);
bos.close();
oos.close();
byte[] bytes = bos.toByteArray();

// convert byte[] to File
ByteArrayInputStream bis = new ByteArrayInputStream(bytes);
ObjectInputStream ois = new ObjectInputStream(bis);
File fileFromBytes = (File) ois.readObject();
bis.close();
ois.close();

System.out.println(fileFromBytes);
</code></pre>

<p>But this is pointless. Please specify what you are trying to achieve.</p>
"
"6838863","<p>One way would be to create accessors for the values.. So you should have:</p>

<pre><code>String getName()
{
     nameField.getText();
}
</code></pre>

<p>and</p>

<pre><code>String getName()
{
     surnameField.getText();
} 
</code></pre>

<p>In you other class you just call those methods to return the values..</p>

<p>You should leave your instance variables as private and never make them public (unless you have a very good reason). Read on <a href=""http://en.wikipedia.org/wiki/Encapsulation_%28object-oriented_programming%29"" rel=""nofollow"">Encapsulation</a></p>
"
"6871557","<p>This looks like a windows path names problem. Why do yo name your projects A, B, C and dont give them proper names isntead?</p>

<pre><code>&lt;classpathentry combineaccessrules=""false"" kind=""src"" path=""/C""/&gt;
</code></pre>

<p>I would bet that /C is interpreted errornously as a drive letter, hence your problems.</p>
"
"8070778","<p>i don't really understand what you want to do, but try this:</p>

<pre><code> System.out.println(""Eq1: ""+ ((a11&gt;0) ? (""+"" + (int)a11) : + (int)a11) +""*x1+"");
</code></pre>

<p>it's the same code as yours, but without the syntax error.</p>
"
"7334370","<p>I'd suggest to throw the exception from the setter method. Is there any special reason why wouldn't it better to do so?</p>

<pre><code>public List&lt;String&gt; getStrings() throws Exception {
    return strings;
}

public void setStrings(List&lt;String&gt; strings) {
    if (strings == null)
        throw new Exception();

    this.strings = strings;
}
</code></pre>

<p>Also, depending on the particular context, wouldn't it be possible to simply pass the <code>List&lt;String&gt; strings</code> directly by the constructor? That way maybe you wouldn't even need a setter method.</p>
"
"8128958","<p>I don't see an open bracket after your ""if"" statement. It should look like this:</p>

<pre><code>public boolean test() {
    if (variable == value) {     
        return true;
    // more code appears here
    }
    return false;
}
</code></pre>

<p>With the additional brackets the ""true"" will only be associated with the IF conditions, and the false will be only if the IF conditions are not satisfied. </p>
"
"8150496","<p>Have a look at this <a href=""http://javablog.co.uk/2008/07/12/logging-with-javautillogging/"" rel=""nofollow"">post</a>, explain logging in details. </p>

<p>You can use <code>%t</code> for time in your config file. </p>
"
"7428069","<p>You can do:</p>

<pre><code>Client lock = yourClient;
synchronized (lock) {

}
</code></pre>

<p>Obtain the lock on the client same reference.</p>
"
"7430998","<p>This does it:</p>

<pre><code>window.getContentPane().registerKeyboardAction(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            onCancel();
        }
    }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
</code></pre>

<p>Your second JButton should also call onCancel() when clicked. So either pressing escape or clicking on this both will do the same thing.</p>
"
"6993340","<pre><code>public static void main(String args[])
{
   // 1. the number of integers read in

    int len = str.length

   //2. the average value


       int sum = 0;
       int avg = 0;
       for(int i = 0 ; i &lt; len ; i++)
       { 
          sum = sum + str[i];
       }
       avg = sum/len ;
}
</code></pre>
"
"6996028","<p>Changing from an ArrayList to a <a href=""http://download.oracle.com/javase/1.4.2/docs/api/java/util/Vector.html"" rel=""nofollow"">Vector</a> should suffice. Vectors are thread-safe implementers of <code>java.util.List</code>. That would seem to be the easiest way to make it thread-safe, if not the fastest.</p>
"
"7448440","<p>Ty for the answers the way i did it was like that.</p>

<pre><code>float minX = Float.MAX_VALUE;
            float maxX = Float.MIN_VALUE;
            float minY = Float.MAX_VALUE;
            float maxY = Float.MIN_VALUE;

            for (int i = 0; i &lt; item.slaves.size(); i++) {
                OverlayItemExtended slaveItem = item.slaves.get(i);
                GeoPoint slavePoint = slaveItem.getPoint();
                Point slavePtScreenCoord = new Point();

                mapView.getProjection()
                    .toPixels(slavePoint, slavePtScreenCoord);

                float x = slavePtScreenCoord.x;
                float y = slavePtScreenCoord.y;

                maxX = Math.max(x, maxX);
                minX = Math.min(x, minX);
                maxY = Math.max(y, maxY);
                minY = Math.min(y, minY);

            }
            float centerX = (maxX + minX) / 2;
            float centerY = (maxY + minY) / 2;
            double distance = findDistance(minX, minY, maxX, maxY);         
            Paint linePaint = new Paint();
            linePaint.setColor(android.graphics.Color.RED);
            linePaint.setStyle(Paint.Style.FILL);
            linePaint.setAlpha(35);

            canvas.drawCircle(centerX, centerY, (float) (distance / 2) + 10,
                    linePaint);
}
</code></pre>
"
"7016160","<p>What you have should be correct. Method calls are binded lazily. This means that when you call the method <code>a()</code> anywhere in a <code>Son</code> object, it will be <code>Son</code>'s method that will be called.</p>
"
"7035390","<p>I would just provide one.  Something like...</p>

<pre><code>public Map&lt;String,String&gt; getMyMap()
{
   return myMap;
}
</code></pre>

<p>and when you want to use it then</p>

<pre><code>myClass.getMyMap().put(key,value);
</code></pre>

<p>DISCLAIMER: I did not compile this and test this answer ;)</p>
"
"8223573","<p>Pattern singletone:</p>

<pre><code>class SingleInstance {
private static SingleInstance instance;

public SingleInstance getInstance() {
    if (instance==null)
        instance = new SingleInstance();
    return instance;
}

private SingleInstance() {
//construct it!
}
}
</code></pre>
"
"7483197","<p>If <code>largeByteArray</code> is something really large , and write job cost long time , and memory is a considerable condition:</p>

<ul>
<li><p>Split the array to parts, after write one part ,set the part=null, this release the reference of the part ,  would make the JVM/GC the part as soon as possible .</p></li>
<li><p>By split and release , you can do more  write(largeByteArray) job at the same time, before OOM-ERROR occurs.</p></li>
<li><p>Notice:
during split stage, JVM need double arraysize  memory to do so, but after split, original array will eventually get GC'd ,you are back to using the same amount of memory as before.</p></li>
<li><p>Example: a server has 1GB memory . it can  run max 100 thread that each one holding and sending 10MB data  to client sametime.</p>

<p>if you use the big 10MB array, memory use is always 1GB,no spare part even all thread has 1MB data not sent.</p>

<p>my solution is split 10MB to 10*1MB.  after send some MB part , the sent part maybe get JVM/GC .and each thread is costing less average memory in whole life time. so server may run more tasks</p></li>
</ul>
"
"8312424","<p>The following code works fine for me: </p>

<pre><code>    int diff_ms = 61200;
    SimpleDateFormat fmt = new SimpleDateFormat(""HH:mm:ss.SSS"");
    fmt.setTimeZone(TimeZone.getTimeZone(""GMT""));
    String str = fmt.format(new Date(diff_ms));
    System.out.println(str);
</code></pre>

<p>It prints <code>00:01:01.200</code></p>

<p>Pay attention on setting the timezone. Otherwise the result depends on your default timezone and will be wrong everywhere except GMT. </p>
"
"7547744","<p>Java provides a number of collection classes with functionality similar to what Matlab provides for arrays. The closest match would be <code>java.util.ArrayList</code>, which is backed by an array. You can use the <code>add()</code> method to append items to the collection, instead of a <code>+=</code> operator. <code>ArrayList</code> exports a number of interfaces which make it compatible with many of the methods and classes in other java packages.</p>
"
"8385482","<p><code>public class MyExtendedDsmCore extends DsmCore impliments IDsmCore</code> since it is an interface.</p>
"
"7608332","<pre><code>csv.split("";"")[2]; // returns ""Michael Robert""
</code></pre>

<p>This uses the <code>String.split(String delimiter)</code> method, which splits the string around the delimiter, returning an array containing the resulting substrings.</p>
"
"7608391","<p>Do you mean like this:</p>

<pre><code>    public TestClass()
{
    String csv = ""145557;123456789012;Michael Robert;1000000;200000;;12/05/2011;;"" ;
    System.out.println(splitString(csv,2));
}

public String splitString(String s, int getValueAt)
{
    return s.split("";"")[getValueAt];
}
</code></pre>
"
"7191232","<p>not that I actually suggest doing this, but sth like this...</p>

<pre><code>find . -empty -type f
</code></pre>

<p>...will be hard to beat with java. You could conceivably loop outside your jvm, find non empty files with a shell script and read the list from java.</p>
"
"7198566","<p>assuming you are using forward singly linked list your code should look like</p>

<pre><code>while(node)
{
      previous = node
      node = node.next
      // Do what ever you want to do with the nodes
}
</code></pre>
"
"7668808","<pre><code>String s = new String(arrayWithWhitespace);
s = s.trim();
byte[] arrayWithoutWhitespace = s.getBytes();
</code></pre>
"
"7668810","<p>Easiest way?  No guarantees on efficiency or performance, but it seems pretty easy.</p>

<pre><code>byte[] results = new String(yourBytes).trim().getBytes();
</code></pre>
"
"7686730","<p><code>-Xms=1024</code> means that the starting memory is 1024, but then, when it is not needed it shrink it.</p>
"
"7259786","<p>Don't live fanatically with the conventions that SUN have med up, do whats feel right to you and your team.</p>

<p><strike>
For example this is how eclipse do it, breaking the convention. Try adding <code>implements Serializable</code> and eclipse will ask to generate this line for you.</strike></p>

<p>Update: There were special cases that was excluded didn't know that. I however withholds to do what you and your team seems fit.</p>
"
"7694002","<pre><code>str = ""25"";
int i = Integer.valueOf(str).intValue();
</code></pre>

<p>or</p>

<pre><code>int i = Integer.parseInt(str);
</code></pre>
"
"7291746","<p>You could use a separate xml file for storing codes as well as their calculation mechanishms.</p>

<p>This will remove the limitation of inablility to add new discount code.</p>

<p><strong>XML File: discounts.xml</strong></p>

<pre><code>&lt;discount-codes&gt;
    &lt;discount-code&gt;
       &lt;code&gt;A&lt;/code&gt;
       &lt;val&gt;0.15&lt;/val&gt;
    &lt;/discount-code&gt;
    &lt;discount-code&gt;
        &lt;code&gt;B&lt;/code&gt;        
        &lt;val&gt;0.95&lt;/val&gt;
    &lt;/discount-code&gt;
&lt;/discount-codes&gt;
</code></pre>

<p>Note: Operation code (What am I intended to do with the values?) is not currently implemented. You can implement the same at your end.</p>

<p>Use an XML parser class:</p>

<p><strong>Class: DiscountModel.java (This class is the model to store the discount codes)</strong></p>

<pre><code>public class DiscountModel {
    char code;
    Double val;

    // Implement getters and setters
}
</code></pre>

<p><strong>Class: DiscountParser.java (This will parse the discounts.xml file and store the codes in a list)</strong></p>

<pre><code>public class DiscountParser {
    List&lt;DiscountModel&gt; discountsList;

    // Getters and Setters for discountsList

    // Parser Code
    public void parseDiscounts() {
         // Code here
    }

    // Add new discount
    public void addDiscount() {
        // Code 
    }

    // Remove discount
    public void removeDiscount () {
       // Code
    }
}
</code></pre>

<p><strong>Class: OrderProcessor.java (This will bring out the discounted value after calculation)</strong></p>

<pre><code>/**
 *  Call this class when calculations need to be done.
 */
public class OrderProcessor {
    // Declare instance of DocumentParser
    DocumentParser dc1;

    // Getter and setter for dc1

    public Double calculateTotalPriceWithDiscountCode(Order order, char discountCode) {
        // Find the corresponding discountcode and 
        // value from the list of values in the 
        // Class DocumentParser          

        // Use the corresponding values to calculate 
        // the discount and return the value
    }
}  
</code></pre>

<p>Whenever a new code is to be added, you can insert the same to the xml file. The same applies if the discount code needs to be removed.</p>

<p>Hope the above helps.</p>
"
"7314372","<p>actually it is really easy to justify ""sync or not to sync""</p>

<p>if your method invocation can <strong>mutate</strong> the internal state of your object, then ""sync"" otherwise no need </p>

<p>simple example </p>

<pre><code>public class Counter {

  private int count = 0; 

  public void incr() {
    count++;
  }

  public int getCount() {
    return count;
  }
}
</code></pre>

<p>in the example above, incr() needs to be synced, since it will change the val of count, while getCount() synchronization is not necessary </p>

<p>however there is another corner case, if the count is java.lang.Long, Double, Object then you need to declare as </p>

<pre><code>private volatile long count = 0;
</code></pre>

<p>to make sure the ref update is atomic </p>

<p>basically that's what you need to think about 99% of time when dealing with multithreading </p>
"
"7321699","<p>You need:</p>

<pre><code>boolean[][] falseMatrix = new boolean[matrix.length][matrix[0].length];
</code></pre>
"
"7791141","<p>Please use following code to adjust your string:</p>

<pre><code>private String correct(String src) {
    boolean found = false;
    String tag = """";
    for (int i = 0; i &lt; src.length(); i++) {
        char c = src.charAt(i);
        if (Character.isDigit(c)) {
            tag += c;
        } else {
            if (found) {
                break;
            } else {
                found = true;
                tag += ""."";
            }
        }
    }
    return tag;
}
</code></pre>
"
"8586437","<p>This is likely a compiler optimization.  It recognizes that, within the scope of your while loop, the variable never changes and will cache the value rather than reading it from memory each time.  In order to avoid this behavior, simple declare the variable as volatile:</p>

<pre><code>private volatile int x;
</code></pre>
"
"7402895","<p>you should have this in the listener(OnItemSelectedListener)</p>

<pre><code>public void onNothingSelected(AdapterView&lt;?&gt; arg0) {
}
</code></pre>

<p>It might works without it but put it to be consistent 
but there might be other errors also, can you provide the error log ?</p>
"
"8633027","<p>declare the int array anf assign the value to it using for loop
try the following code</p>

<pre><code>int[] slotarray = new int[40];
        int valueOfFirstSlot = 12;
        for(int slotCounter = 0; slotCounter&lt;slotarray.length; slotCounter++, valueOfFirstSlot++){

            slotarray[slotCounter] = valueOfFirstSlot;

        }
</code></pre>
"
"8655508","<pre><code>date : String date
formatpattern : String formatPatten

SimpleDateFormat formatter = new SimpleDateFormat(formatpattern);
Date date = formatter.parse(date);
</code></pre>
"
"7875819","<p>Figured it out.</p>

<p>Here's how it works. I'll start with Nexus set up.</p>

<p>We have 2 ""groups"" with the following repositories in them following : </p>

<p>1) Our Repo (nexus installation on our server)</p>

<p>-3rd party</p>

<p>-Releases</p>

<p>-Snapshots</p>

<p>2) External Proxies</p>

<p>-Maven central</p>

<p>-Spring</p>

<p>-Hibernate</p>

<p>-etc.</p>

<p>On the dev workstation I have the following in conf/settings.xml (main settings file for mvn): 2 groups, 2 mirrors, 2 profiles. Looks like so:</p>

<pre><code>&lt;mirrors&gt;
&lt;mirror&gt;
  &lt;!--This sends everything else to nexus repo --&gt;
  &lt;id&gt;nexus&lt;/id&gt;
  &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;
  &lt;url&gt;http://&lt;ip&gt;:8081/nexus/content/groups/nexus&lt;/url&gt;
&lt;/mirror&gt;
 &lt;mirror&gt;
  &lt;!--This sends everything else to /public --&gt;
  &lt;id&gt;external&lt;/id&gt;
  &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;
  &lt;url&gt;http://&lt;ip&gt;:8081/nexus/content/groups/external&lt;/url&gt;
&lt;/mirror&gt;
&lt;/mirrors&gt;
</code></pre>

<p>And:</p>

<pre><code> &lt;profiles&gt;
  &lt;profile&gt;
  &lt;id&gt;external&lt;/id&gt;
  &lt;!--Enable snapshots for the built in central repo to direct --&gt;
  &lt;!--all requests to nexus via the mirror --&gt;
  &lt;repositories&gt;
    &lt;repository&gt;
      &lt;id&gt;central&lt;/id&gt;
      &lt;url&gt;http://central&lt;/url&gt;
      &lt;releases&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/releases&gt;
      &lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt;
    &lt;/repository&gt;
  &lt;/repositories&gt;
 &lt;pluginRepositories&gt;
    &lt;pluginRepository&gt;
      &lt;id&gt;central&lt;/id&gt;
      &lt;url&gt;http://central&lt;/url&gt;
      &lt;releases&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/releases&gt;
      &lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt;
    &lt;/pluginRepository&gt;
  &lt;/pluginRepositories&gt;
&lt;/profile&gt;

&lt;profile&gt;
  &lt;id&gt;nexus&lt;/id&gt;
  &lt;!--Enable snapshots for the built in central repo to direct --&gt;
  &lt;!--all requests to nexus via the mirror --&gt;
  &lt;repositories&gt;
    &lt;repository&gt;
      &lt;id&gt;central&lt;/id&gt;
      &lt;url&gt;http://central&lt;/url&gt;
      &lt;releases&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/releases&gt;
      &lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt;
    &lt;/repository&gt;
  &lt;/repositories&gt;
 &lt;pluginRepositories&gt;
    &lt;pluginRepository&gt;
      &lt;id&gt;central&lt;/id&gt;
      &lt;url&gt;http://central&lt;/url&gt;
      &lt;releases&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/releases&gt;
      &lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt;
    &lt;/pluginRepository&gt;
  &lt;/pluginRepositories&gt;
&lt;/profile&gt;
&lt;/profiles&gt;
</code></pre>

<p>And:</p>

<pre><code>&lt;activeProfiles&gt;
&lt;activeProfile&gt;external&lt;/activeProfile&gt;   
&lt;activeProfile&gt;nexus&lt;/activeProfile&gt;
&lt;/activeProfiles&gt;
</code></pre>

<p>The workflow goes like this.</p>

<p>Maven uses mirrors on a first-come-first-serve basis. That is, if you're mirroring *, whatever you list first (first mirror) is the only thing that it will check. So what I do is, I list nexus (local server) as first repo by default to mirror *. That way it will be forced to use only packages in local repositories. What happens if a package is missing? I tell maven to use ""external"" mirror. I edit </p>

<p>conf/settings.xml</p>

<p>and put external as first mirror. What this will do is tell maven to get packages from external repositories and cache them in storage on nexus machine. Once I have the packages and I see that the build process works, I do the following.</p>

<p>1) Take nexus offline.</p>

<p>2) in nexus installation, find this folder:</p>

<p>sonatype-work/nexus/storage/</p>

<p>This is where nexus caches packages for repositories. Note, it doesn't cache them per group, but per individual repository. This will be important in a second. Now that I've got packages I need from external proxies, I need to go through them, make sure it's all valid and move them to my ""3rd parties"" branch on nexus. I do the following (you can write a shell script to do this):</p>

<p>1) Bring nexus offline</p>

<p>2) for each external proxie</p>

<p>cp * from sonatype-work/nexus/storage/ to from sonatype-work/nexus/storage/thirdparty</p>

<p>3) Bring nexus online</p>

<p>4) In the GUI rightclick thirdparty repo and do:</p>

<p>a)Rebuild metadata</p>

<p>b)Repair Index</p>

<p>Done. </p>

<p>You now have external dependencies available locally and can thus control access to external artifacts. Probably good idea to delegate role of repository upkeep to a team lead or someone responsible. Because first time a project might require something from central and not have it, someone will have to go through this process.</p>

<hr>

<p><strong>Edit</strong>:</p>

<p>One thing to note on topic of plugins, I changed my the conf/settings.xml file to allow maven to grab plugins from central. So in both profiles do:</p>

<pre><code>&lt;pluginRepositories&gt;
&lt;pluginRepository&gt;
  &lt;id&gt;central&lt;/id&gt;
  &lt;url&gt;http://repo1.maven.org/maven2/&lt;/url&gt;
  &lt;releases&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/releases&gt;
  &lt;snapshots&gt;&lt;enabled&gt;true&lt;/enabled&gt;&lt;/snapshots&gt;
&lt;/pluginRepository&gt;
&lt;/pluginRepositories&gt;
</code></pre>

<p>This is not really 100% optimal, as I don't have full control over what maven is doing here, but it seems like 90% of maven does depends on managing complicated plugin dependency relationships, so I figure I would let it manage that aspect of things on its own. </p>

<p>If anyone has an advice on how to better streamline this process, I'm all ears.</p>
"
"7436663","<p>Turn the interface into a <code>final</code> class with a <code>private</code> constructor.</p>
"
"7436803","<p>I think what he means in that statement is that at runtime Java cannot tell the difference between these two function definitions:</p>

<pre><code>void doIt(List&lt;String&gt; strings) {...}
void doIt(List&lt;Integer&gt; ints) {...}
</code></pre>

<p>Because at compile time, the information about what type of data the List contains is erased, so the runtime environment wouldn't be able to determine which function you wanted to call.</p>

<p>Trying to compile both of these methods in the same class will throw the following exception:</p>

<pre><code>doIt(List&lt;String&gt;) clashes with doIt(List&lt;Integer); both methods have the same erasure
</code></pre>
"
"7475661","<p><code>DataInputStream</code> is something obsolete. I recommend you to use <code>Scanner</code> instead.</p>

<pre><code>Scanner sc = new Scanner (process.getInputStream());
while (sc.hasNextXxx()) {
   System.out.println(sc.nextXxx());
}
</code></pre>
"
"8687730","<p>Everything that access Swing objects should do so via the Event Dispatch Thread (EDT). There is one small exception to this (which I'll mention later). The purpose of the EDT is to process any events that may occur  due to IO (mouse and keyboard events). Quite a lot of the time this can mean altering the layout of your GUI. Swing was not developed to be thread-safe, meaning that that if two thread try to modify the same component at the same time then you can end up with a corrupted GUI. Since there is already one known thread to be accessing Swing components (the EDT), no other thread should attempt to modify them or even read their state.</p>

<p>Now, to the exceptional case when you can manipulate Swing objects outside of the EDT. Before any components have become visible it is not possible for IO to be triggering events. Therefore, the main thread can setup a Swing GUI and then set a single JFrame to be visible. Since there is now a visible frame IO events can occur and the main thread should not try to modify any more Swing components. The should only use this option to get a GUI started, and really only with toy problems.</p>

<p>What I'm saying is that the following is fine and won't cause problems if you're just playing around with stuff.</p>

<pre><code>public static void main(String[] args) {
    // create components
    JFrame f = new JFrame();
    ...

    // do layout and other bits of setup


    // show gui to user
    f.setVisible(true);
}
</code></pre>
"
"7943068","<p><code>StringUtils#split</code> is faster than <code>String#split</code>.</p>

<p><code>String#equals</code> is faster than <code>StringUtils#equals</code>.</p>
"
"8728112","<p>You should use <code>KeyListener</code> for the <code>JTextField</code>.</p>
"
"7980664","<p>by reading a property file like in the example below.</p>

<pre><code>int property1;
String otherProperty;
public void loadProperties(File propFile) throws IOException {
    BufferedReader reader = new BufferedReader(new FileReader(propFile));
    String line;
    while ((line = reader.readLine()) != null) {
        if (line.startsWith(""Property1="")) {
            property1 = Integer.parseInt(line.substring(10));
        }
        if (line.startsWith(""OtherProperty="")) {
            otherProperty = line.substring(14);
        }
    }
}
</code></pre>
"
"7528574","<p>There may be two situations.</p>

<ol>
<li>No build.xml is present in the current directory</li>
<li>Your ant configuration file has diffrent name.</li>
</ol>

<p>Please see and confim the same.
In the case one you have to find where your build file is located and in the case 2, You will have to run command <code>ant -f &lt;your build file name&gt;</code>. </p>
"
"8732690","<p>Equality checks in Java come in two forms.</p>

<p>The equality operator ""=="" checks to see if two variables refer to the same object. In your case, this test fails because, though their content is the same, you're referring to two different string objects.</p>

<p>The <code>.equals()</code> method is available on every Java object and provides extensible equality checking. In the case of Strings, consider the following:</p>

<pre><code>""+"".equals(""+"") // evaluates to true
</code></pre>

<p>going back to the equality operator:</p>

<pre><code>""+"" == ""+"" // evaluates to false
</code></pre>

<p>See <a href=""http://docs.oracle.com/javase/tutorial/java/nutsandbolts/op2.html"" rel=""nofollow"">this page</a> for more detail.</p>
"
"7637083","<pre><code>/* File Signature.java created by Daniel Hicks on Mon Jun 11 2001. */
import java.io.*;
import java.util.*;
public class Signature {
    public static void main(String args[]) throws Exception {

    ResourceBundle properties = ResourceBundle.getBundle(""WebSignature"");
    String sigName = properties.getString(""sig.file"");
    String protoName = properties.getString(""proto.file"");
    String sayingsList = properties.getString(""sayings.list"");
    long waitTime = Long.parseLong(properties.getString(""delay.time""));
    int lineLength = Integer.parseInt(properties.getString(""line.length""));
    long notFoundTime = Long.parseLong(properties.getString(""file.not.found.time""));
    int notFoundRetries = Integer.parseInt(properties.getString(""file.not.found.retries""));

    Vector proto = new Vector();

    BufferedReader protoReader = new BufferedReader(new FileReader(protoName));
    String protoLine = protoReader.readLine();
    while (protoLine != null) {
        proto.addElement(protoLine);
        protoLine = protoReader.readLine();
    }
    protoReader.close();

    Vector sayings = new Vector();

    BufferedReader sayingsReader = new BufferedReader(new FileReader(sayingsList));
    String sayingsLine = sayingsReader.readLine();
    while (sayingsLine != null) {
        sayings.addElement(sayingsLine);
        sayingsLine = sayingsReader.readLine();
    }
    sayingsReader.close();

    Random rand = new Random();

    int retryCount = notFoundRetries;  // Require first cycle to work

    while (true) {
        int randVal = rand.nextInt();
        randVal = Math.abs(randVal) % sayings.size();
        try {
        PrintWriter sigWriter = new PrintWriter(new FileWriter(sigName));
        for (int i = 0; i &lt; proto.size(); i++) {
            sigWriter.println(proto.elementAt(i));
        }
        putSaying(sigWriter, (String) (sayings.elementAt(randVal)), lineLength);
        sigWriter.close();
        retryCount = 0;
        }
        // Catch I/O error due to AFS being offline.
        catch (java.io.FileNotFoundException ex) {
        retryCount++;
        if (retryCount &gt; notFoundRetries) {
            throw ex;
        }
        // Sleep for a long time (eg, 30 minutes).
        Thread.sleep(notFoundTime);
        }
        Thread.sleep(waitTime);
    }
    }

    private static void putSaying(PrintWriter sigWriter, String saying, int lineLength) throws Exception {
    saying = saying.trim();
    java.text.BreakIterator lineIterator = java.text.BreakIterator.getLineInstance();
    lineIterator.setText(saying);
    int pos = 0;
    int last = lineIterator.last();
    while (pos &lt; last) {
        int newPos = pos + lineLength;
        if (newPos &gt;= last) {
        newPos = last;
        }
        else {
        newPos = lineIterator.preceding(newPos);
        if (newPos &lt;= pos) {
            newPos = lineIterator.following(pos);
        }
        }
        sigWriter.println(saying.substring(pos, newPos));
        pos = newPos;
        while ((pos &lt; saying.length() - 1) &amp;&amp; Character.isWhitespace(saying.charAt(pos))) {
        pos++;
        }
    }
    }
}
</code></pre>
"
"7647924","<pre><code>MetricsProducer&lt;?, ? extends FileEntry&gt; metricsProducer = fileDefinition.getMetricsProducer();
</code></pre>
"
"7680009","<p>If you want to group all of the results together, just keep adding results to your list:</p>

<pre><code>List&lt;Integer&gt; results = ClassA.findAll(pattern, dataToSearch);
results.addAll(ClassB.findAll(pattern, dataToSearch));
// etc.
</code></pre>
"
"8145434","<p>Based on the comments (and although I would go with a constructor on the superclass) one way to go at it would be to declare the Enemy class as abstract (which probably should be if you just want to define common behaviour there) and initialize the variables as calls to abstract methods. 
This way the extending classes would be forced to implement those methods and in essence initialize the variables.</p>

<p>Here's a simplified example:</p>

<pre><code>public abstract class Enemy {
    protected int x = getX();
    protected int y = getY();

    protected abstract int getX();
    protected abstract int getY();
}

public class Skeleton extends Enemy {
    @Override
    protected int getX() { return 10; }

    @Override
    protected int getY() { return 10; }
}
</code></pre>

<p>Its more verbose, but perhaps it achieves the readability you are looking for.</p>
"
"7690366","<p>try this:</p>

<pre><code>System.out.println(""I end with a number 4"".matches("".*\\d\$""));
</code></pre>
"
"8161100","<p>You can not randomly print from multiple threads and expect <em>any</em> order. </p>

<p>If you need output in an ordered fashion then you're going to have to either synchronize the threads (thus defeating the purpose of having multiple threads) or have the threads pass back the information to output back to the main thread so it can handle ordering and outputting it.</p>

<p><strong>Edit:</strong> Because I'm bored.</p>

<p>If you're trying to parallelize some work via threads then output the results, you need to have the threads communicate the product of their work back to the main thread and have it do the output. One approach to this is to use queues (this is simple example that relies on the thread order - you may need to get all the results and correlate/sort/etc):</p>

<pre><code>public class Worker implements Runnable
{

    private ConcurrentLinkedQueue&lt;Integer&gt; outputQueue;

    public Worker(ConcurrentLinkedQueue&lt;Integer&gt; outputQueue)
    {
        this.outputQueue = outputQueue;
    }

    @Override
    public void run()
    {

       // Do whatever it is you're doing
       ...
       // place result on queue
       outputQueue.add(result);

    }

} 

public class Main
{

    static void main(String[] args)
    {

        ArrayList&lt;ConcurrentLinkedQueue&lt;Integer&gt;&gt; myQueues =
            new ArrayList&lt;ConcurrentLinkedQueue&lt;Integer&gt;&gt;();

        Thread[] myThreads = new Thread[numThreads];

        // Create queue, create thread with Worker(queue),  
        // start thread
        for (int i = 0; i &lt; numThreads; i++)
        {
            ConcurrentLinkedQueue&lt;Integer&gt; queue =
                new ConcurrentLinkedQueue&lt;Integer&gt;();

            myQueues.add(queue);           

            myThreads[i] = new Thread(new Worker(queue)).start();

        }

        // Wait for all threads to finish, print their results
        for (int i = 0; i &lt; numThreads; i++)
        {
            join(myThreads[i]);

            // Get the queue for the thread we just joined, 
            // pull off each result and output
            Integer j;
            while ((j = myQueues.get(i).poll()) != null)
            {
                System.out.println(j);
            }

        }
    }
}
</code></pre>

<p>This is off the top of my head, but that's the general approach</p>
"
"7745057","<p>An <a href=""http://download.oracle.com/javase/1.4.2/docs/api/java/util/Map.Entry.html"" rel=""nofollow""><code>Entry</code></a> is an object used to store the contents of a <a href=""http://download.oracle.com/javase/1.4.2/docs/api/java/util/Map.html#entrySet%28%29"" rel=""nofollow""><code>Map</code>-derived</a> class, so you may well encounter the occasional <code>List&lt;Entry&gt;</code> objects.  However, a list can hold any kind of object, such as <code>String</code>s, <code>Integer</code>s, or even other <code>List</code>s:</p>

<pre><code>List&lt;Integer&gt; intList = new ArrayList&lt;Integer&gt;();  //Create a new list of integers
List&lt;String&gt; strList = new ArrayList&lt;String&gt;(); //You can't actually create a List.  Use one of the derived classes like ArrayList instead

strList.add(""A string!"");  // Now the list has one String in it
strList.add(3);  //You can't do this because strList can only hold Strings

ArrayList&lt; ArrayList&lt;String&gt; &gt; strMatrix = new ArrayList&lt; ArrayList&lt;String&gt; &gt;()
</code></pre>

<p>That last line creates a list of lists, which is commonly used to store a 2-D array of objects.</p>

<p>Don't worry too much about <code>Entry</code>s until you need them, and then you can consult the docs to see how to get data out of them.</p>
"
"8871590","<p>This is how I solve the problem:</p>

<pre><code>import java.io.InputStream;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.entity.BufferedHttpEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.res.TypedArray;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.Gallery;
import android.widget.ImageView;
import android.widget.TabHost;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.TabHost.TabSpec;

public class f24 extends Activity {

    private ImageAdapter imageAdapter;

    private ArrayList&lt;String&gt; PhotoURLS = new ArrayList&lt;String&gt;();

    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.f24);

        Button bhome = (Button) findViewById(R.id.homebutton);
        bhome.setOnClickListener(new View.OnClickListener() {

            public void onClick(View v) {
                // TODO Auto-generated method stub
                startActivity(new Intent (""com.bozz.milaircraft.MENU""));
            }
        });


        TabHost th = (TabHost) findViewById(R.id.tabhost);
        th.setup();
        TabSpec specs = th.newTabSpec(""tag1"");
        specs.setContent(R.id.tab1);
        specs.setIndicator(""BRIEFING"");
        th.addTab(specs);
        specs = th.newTabSpec(""tag2"");
        specs.setContent(R.id.tab2);
        specs.setIndicator(""DESIGN"");
        th.addTab(specs);
        specs = th.newTabSpec(""tag3"");
        specs.setContent(R.id.tab3);
        specs.setIndicator(""USERS"");
        th.addTab(specs);
        specs = th.newTabSpec(""tag4"");
        specs.setContent(R.id.tab4);
        specs.setIndicator(""GALLERY"");
        th.addTab(specs);

        imageAdapter = new ImageAdapter(this);
        final ImageView imgView = (ImageView) findViewById(R.id.GalleryView);
        Gallery g = (Gallery) findViewById(R.id.Gallery);
        g.setAdapter(imageAdapter);
        g.setOnItemClickListener(new OnItemClickListener() {
            public void onItemClick(AdapterView&lt;?&gt; parent, View v,
                    int position, long id) {
                imgView.setImageDrawable(LoadImageFromURL(PhotoURLS
                        .get(position)));
                imgView.setScaleType(ImageView.ScaleType.FIT_CENTER);
            }
        });

        // replace this code to set your image urls in list
        PhotoURLS.add(""http://www.medicinarozzano.it/images/milair/f4_1.jpg"");
        PhotoURLS.add(""http://www.medicinarozzano.it/images/milair/f4_1.jpg"");

        new AddImageTask().execute();

    }

    class AddImageTask extends AsyncTask&lt;Void, Void, Void&gt; {
        @Override
        protected Void doInBackground(Void... unused) {
            for (String url : PhotoURLS) {
                String filename = url.substring(url.lastIndexOf(""/"") + 1,
                        url.length());
                filename = ""th_"" + filename;
                String thumburl = url.substring(0, url.lastIndexOf(""/"") + 1);
                imageAdapter.addItem(LoadThumbnailFromURL(thumburl + filename));
                publishProgress();
                //SystemClock.sleep(200);
            }

            return (null);
        }

        @Override
        protected void onProgressUpdate(Void... unused) {
            imageAdapter.notifyDataSetChanged();
        }

        @Override
        protected void onPostExecute(Void unused) {
        }
    }

    private Drawable LoadThumbnailFromURL(String url) {
        try {
            URLConnection connection = new URL(url).openConnection();
            String contentType = connection.getHeaderField(""Content-Type"");
            boolean isImage = contentType.startsWith(""image/"");
            if(isImage){
                HttpGet httpRequest = new HttpGet(url);
                HttpClient httpclient = new DefaultHttpClient();
                HttpResponse response = (HttpResponse) httpclient
                        .execute(httpRequest);
                HttpEntity entity = response.getEntity();
                BufferedHttpEntity bufferedHttpEntity = new BufferedHttpEntity(entity);

                InputStream is = bufferedHttpEntity.getContent();
                Drawable d = Drawable.createFromStream(is, ""src Name"");
                return d;
            } else {
                Bitmap b = BitmapFactory.decodeResource(getResources(), R.drawable.no_image);
                Drawable d = new BitmapDrawable(b);
                return d;
            }
        } catch (Exception e) {
            Toast.makeText(getApplicationContext(), ""Error"", Toast.LENGTH_LONG)
                    .show();
            Log.e(e.getClass().getName(), e.getMessage(), e);
            return null;
        }
    }

    private Drawable LoadImageFromURL(String url) {
        try {
            URLConnection connection = new URL(url).openConnection();
            String contentType = connection.getHeaderField(""Content-Type"");
            boolean isImage = contentType.startsWith(""image/"");
            if(isImage){
                HttpGet httpRequest = new HttpGet(url);
                HttpClient httpclient = new DefaultHttpClient();
                HttpResponse response = (HttpResponse) httpclient
                        .execute(httpRequest);
                HttpEntity entity = response.getEntity();
                BufferedHttpEntity bufferedHttpEntity = new BufferedHttpEntity(
                        entity);
                InputStream is = bufferedHttpEntity.getContent();

                // Decode image size
                BitmapFactory.Options o = new BitmapFactory.Options();
                o.inJustDecodeBounds = true;
                BitmapFactory.decodeStream(is, null, o);

                // The new size we want to scale to
                final int REQUIRED_SIZE = 150;

                // Find the correct scale value. It should be the power of 2.
                int width_tmp = o.outWidth, height_tmp = o.outHeight;
                int scale = 1;
                while (true) {
                    if (width_tmp / 2 &lt; REQUIRED_SIZE
                            || height_tmp / 2 &lt; REQUIRED_SIZE)
                        break;
                    width_tmp /= 2;
                    height_tmp /= 2;
                    scale *= 2;
                }

                // Decode with inSampleSize
                is = bufferedHttpEntity.getContent();
                BitmapFactory.Options o2 = new BitmapFactory.Options();
                o2.inSampleSize = scale;
                Bitmap b = BitmapFactory.decodeStream(is, null, o2);
                Drawable d = new BitmapDrawable(b);
                return d;
            } else {
                Bitmap b = BitmapFactory.decodeResource(getResources(), R.drawable.no_image);
                Drawable d = new BitmapDrawable(b);
                return d;
            }
        } catch (Exception e) {
            Toast.makeText(getApplicationContext(), ""Error"", Toast.LENGTH_LONG)
                    .show();
            Log.e(e.getClass().getName(), e.getMessage(), e);
            return null;
        }
    }

    public class ImageAdapter extends BaseAdapter {
        int mGalleryItemBackground;
        private Context mContext;

        ArrayList&lt;Drawable&gt; drawablesFromUrl = new ArrayList&lt;Drawable&gt;();

        public ImageAdapter(Context c) {
            mContext = c;
            TypedArray a = obtainStyledAttributes(R.styleable.Gallery1);
            mGalleryItemBackground = a.getResourceId(
                    R.styleable.Gallery1_android_galleryItemBackground, 0);
            a.recycle();
        }

        public void addItem(Drawable item) {
            drawablesFromUrl.add(item);
        }

        public int getCount() {
            return drawablesFromUrl.size();
        }

        public Drawable getItem(int position) {
            return drawablesFromUrl.get(position);
        }

        public long getItemId(int position) {
            return position;
        }

        public View getView(int position, View convertView, ViewGroup parent) {
            ImageView i = new ImageView(mContext);

            i.setImageDrawable(drawablesFromUrl.get(position));
            i.setLayoutParams(new Gallery.LayoutParams(150, 120));
            i.setScaleType(ImageView.ScaleType.CENTER_INSIDE);
            i.setBackgroundResource(mGalleryItemBackground);

            return i;
        }
    }

}
</code></pre>

<p>But now I have another problem:</p>

<p>If i don not declare any SDK on Android Manifest, the app works perfectly on both gingerbread and HC, and ICS. However, if i declare a minimum SDK greater than 1 or TargetSDK, the app works fine on gingerbread but not on HC and ISC. When i click on an image in the gallery nothing appears on the image viewer. Yet, a toast error pops up. </p>

<p>Also, if there is no internet connection the app crashes. </p>

<p>Best regards
Tiberio Bozotti</p>

<p>EDIT:
i could remove the SDK but on honeycomb it is not clear. Meaning that the layout is not compatible.</p>
"
"7775942","<p>No, you're looking for something like C#'s <a href=""http://msdn.microsoft.com/en-us/library/bb531208.aspx"" rel=""nofollow"">collection initializers</a>, which doesn't currently exist in Java.</p>

<p>You can use an anonymous class to save a little typing, but you still have to write <code>put</code>.</p>
"
"8892150","<p>It looks like in the AddImgAdp class, you set the ImageView's height and width to specific pixel sizes. </p>

<pre><code>imgView.setLayoutParams(new Gallery.LayoutParams(110, 100)); //width = ""110px"", height=""100px""
</code></pre>

<p>I personally would put the layout as a RelativeLayout, align the first gallery with the top, the second gallery with the bottom, nd have the ImageView set to align above the second gallery. Then make the image: </p>

<pre><code>imgView.setLayoutParams( new Gallery.LayoutParams(
   Gallery.LayoutParams.FILL_PARENT, 
   Gallery.LayoutParams.FILL_PARENT) );
</code></pre>

<p>If you set the ImageView to fill_parent with a LinearLayout, it will fill to the bottom of the screen and the second gallery will be off the screen. </p>

<p>Also know that by filling in all the space you will most likely distort the picture. Consider all of your resizing options: <a href=""http://developer.android.com/reference/android/widget/ImageView.ScaleType.html"" rel=""nofollow"">http://developer.android.com/reference/android/widget/ImageView.ScaleType.html</a></p>
"
"8901489","<p>You must use <code>(1245679)*</code> as the regex if you are looking for <em>exactly</em> that sequence of numbers, if not, what you are looking for cannot be accomplished using regular expressions, and you have to use a custom parser.</p>
"
"8918375","<p>You could add the Pattern.Multiline option</p>

<pre><code>Pattern div = Pattern.compile(""&lt;div id=\""div\""&gt;(.*?)&lt;/div&gt;"", Pattern.MULTILINE);
</code></pre>

<p>or add the ?m operator in your reg ex ( at the end)</p>

<p>Hope this helps</p>
"
"7870799","<p>Try this instead:</p>

<pre><code>""([0-9]*\\?[0-9]+)""
</code></pre>
"
"7891701","<p>Rather than creating a new timer could you use</p>

<pre><code>Thread.sleep(1000);
</code></pre>

<p>To replace </p>

<pre><code>gameTimer.start();
</code></pre>
"
"7917400","<pre><code>user=&gt; (defn parser [text]
  ""{ :items { \""itemid\"" 55 }}"");Mock
user=&gt; (let [parse-tree (read-string (parser ""Abracadabra""))]
((parse-tree :items) ""itemid""))
55
</code></pre>
"
"8962028","<p>You can user a SharedPrefences</p>

<pre><code>aa.setOnClickListener(new LinearLayout.OnClickListener(){
        SharedPreferences preferences = getSharedPreferences(""MyPref"", Context.MODE_PRIVATE);
        Editor editor = preferences.edit();
        int aaColor = 0;
        public void onClick(View v){
            switch (aaColor){
            case 0:
                aa.setBackgroundResource(R.drawable.green);
                editor.putInt(""BgColor"", aaColor).commit();
                aaColor++;
                break;
            case 1:
                aa.setBackgroundResource(R.drawable.blue);
                editor.putInt(""BgColor"", aaColor).commit();
                aaColor++;
                break;
            case 2:
                aa.setBackgroundResource(R.drawable.yellow);
                editor.putInt(""BgColor"", aaColor).commit();
                aaColor++;
                break;
            case 3:
                aa.setBackgroundResource(R.drawable.grey);
                editor.putInt(""BgColor"", aaColor).commit();
                aaColor++;
                break;
            case 4:
                aa.setBackgroundResource(R.drawable.black);
                editor.putInt(""BgColor"", aaColor).commit();
                aaColor = 0;
                break;
            }
        }
    });
</code></pre>
"
"8965009","<p>This is a tab spacing thing - you'll get the same if you use tabs in this way with a text editor. For variables which differ in max/min lengths by > 4 characters (such as the first column), insert 2 tabs instead of one like this:</p>

<pre><code>for(tuna cars: tuna.values()){
    if (cars.getColor().length() &gt; 5)
        System.out.printf(""%s\t%s\t\t%s\n"", cars, cars.getColor(), cars.getYear())
    else
        System.out.printf(""%s\t\t%s\t\t%s\n"", cars, cars.getColor(), cars.getYear())
</code></pre>

<p><strong>UPDATE</strong> Corrected to only output two tabs where the color isn't too long enough.</p>
"
"7931923","<p>Java allows so called ""narrowing"" of return values' types. That's why your example works at all:</p>

<p><code>Serializable getId()</code></p>

<p>can be overridden with any serializable return type, like</p>

<p><code>Integer getId()</code>, as <code>Integer</code> implements <code>Serializable</code>, so the narrowing is allowed in this case.</p>

<p>Because <code>B</code> does <em>not</em> override <code>getId()</code> its <code>getId()</code> is the same as the one inherited from <code>BaseEntity</code>. The declaration</p>

<pre><code>class B extends BaseEntity&lt;Integer&gt;
</code></pre>

<p>is ""type-erased"" at compile time to </p>

<pre><code>class B extends BaseEntity
</code></pre>

<p>and, voilà, we receive the observed result.</p>
"
"8992248","<p>The below should work for you assuming <strong>Strings</strong> is the array that you are searching within:</p>

<pre><code>Arrays.binarySearch(Strings,""mykeytosearch"",mysearchComparator);
</code></pre>

<p>where mykeytosearch is the string that you want to test for existence within the array.
mysearchComparator - is a comparator that would be used to compare strings.</p>

<p>Refer to <a href=""http://docs.oracle.com/javase/6/docs/api/java/util/Arrays.html#binarySearch%28T%5B%5D,%20T,%20java.util.Comparator%29"" rel=""nofollow"">Arrays.binarySearch</a> for more information.</p>
"
"8321816","<p>if you don't close the connection , it will lead to connection memory leakage; unless until application server/web server is shut down.
You can close all your connections by calling a custom close method or use finalilize</p>

<pre><code>public void closeConnection {
        try { rs.close(); } catch (Exception e) { // TODO Auto-generated catch block }
        try { ps.close(); } catch (Exception e) { // TODO Auto-generated catch block }
        try { conn.close(); } catch (Exception e) { // TODO Auto-generated catch block }
    }
</code></pre>

<p>...</p>

<pre><code>finally {
    try { rs.close(); } catch (Exception e) { // TODO Auto-generated catch block }
    try { ps.close(); } catch (Exception e) { // TODO Auto-generated catch block }
    try { conn.close(); } catch (Exception e) { // TODO Auto-generated catch block }
}
</code></pre>
"
"8340480","<p>The solution is: </p>

<pre><code>public class Five {
    public static void main(String args[]) {
        try {

            String greatest = ""731671765313306249192251196744265747423553491949349698352031277450632623957831801698480186947885184385861560789112949495459501737958331952853208805511125406987471585238630507156932909632952274430435576689664895044524452316173185640309871112172238311362229893423380308135336276614282806444486645238749303589072962904915604407723907138105158593079608667017242712188379087922749219016997208880937766572733300105336788122023542180975125454059475224352584907711670556013604839586446706324415722155397 5369781797784617406495514929086256932197846862248283972241375657056057490261407972968652414535100474821663704844031998900088952434506585412275886668811642717147992444292823086346567481391912316282458617866458359124566529476545682848912883142607690042242190226710556263211111093705442175069416589604080719840385096245544436298123098787992724428490918884580156166097919133875499200524063689912560717606058861164671094050775410022569831552000559357297257163626956188267042825248360082325753042075296345099879"";
            int n = 0;
            int count = 0;
            long biggest = 0;
            int countBlock = 1;
            int biggestBlock = 1;
            long X = 1;

            for (int i = 0; i &lt; greatest.length()-4; i++) {
                for (int k = i; k &lt; i + 5; k++) {
                    char c = greatest.charAt(k);
                    n = Character.getNumericValue(c);
                    count++;
                    X = (X * n);
                    System.out.println(""Product is:"" + X);
                }
                if(biggest &lt; X){
                    biggest = X;
                    biggestBlock = countBlock;
                }

                System.out.println(""Now the biggest one is: ""+ biggest);
                count = 0;
                X = 1;
                countBlock++;
                System.out.println(""Block number: "" + biggestBlock);
                System.out.println(""Block number: "" + countBlock);
                System.out.println(""------------------------------------"");

            }
        } catch (ArrayIndexOutOfBoundsException ex) {
            System.out.println(""ARRAY ERROR"");
        } catch (ArithmeticException ex) {
            System.out.println(""MATH ERROR"");
        } catch (NumberFormatException ex) {
            System.out.println(""NUMBER FORMAT EXCEPTION"");
        } catch (StringIndexOutOfBoundsException ex) {
            System.out.println(""INDEX ERROR"");
        }
    }
}
</code></pre>
"
"5670328","<p>Unless you have one of the plaintext files, you can't get the original information of the other. Mathematically expressed:</p>

<pre><code>p1 XOR p2 = en
</code></pre>

<p>You have one equation with two unknowns, you can't possibly get something meaningful out of it.</p>
"
"6324064","<p>Besides the difference in your logic with the continuing for. It's no noticeable difference between </p>

<pre><code>try {
lots of stuff which might not throw any exception
something that throws exception
} catch (Exception e) {
}
</code></pre>

<p>and</p>

<pre><code>lots of stuff which might not throw any exception
try {
something that throws exception
} catch (Exception e) {
}
</code></pre>
"
"6340190","<p>The two dimension array is nothing but the array of arrays.
So we can remove the just assign empty:</p>

<pre><code> arr[4] = new String[n];
</code></pre>

<p>If you want to remove the 5th row entirely then you can do so by assigning null.
Array is meant to be fixed length and flexibility like ArrayList would come with additional coding over the arrays.</p>
"
"8080096","<pre><code>import javax.swing.*;
import java.awt.Dimension;

class MyFrame extends JFrame {
  public MyFrame() {
    setTitle(""My Empty Frame"");
    setPreferredSize(new Dimension(300, 200)); // default size is 0,0
    setLocation(10, 200); // default is 0,0 (top left corner)
    pack();
    setVisible(true); 
  }

  public static void main(String[] args) {
    SwingUtilities.invokeLater(new Runnable() {

        @Override
        public void run() {
            new MyFrame();
        }
    });
  }
}
</code></pre>
"
"6358419","<p>You have not defined T in this code.</p>

<p>If you are creating a generic class, you need to write:</p>

<p><code>public class &lt;T extends IterableItem&gt; IterableContainer...</code></p>

<p>The next problem in your code is that you are trying to initilize items of ArrayList during its construction. It is impossible. You should rather write:</p>

<p><code>private List&lt;T[]&gt; items = new ArrayList&lt;T[]&gt;();</code></p>
"
"8470440","<pre><code>java -cp foo.bar.jar foo.bar.bla.HelloWorld
</code></pre>
"
"6378667","<p>Here is how I would do 3, 5. Start with the string <code>111</code>. 5 - 3 = 2, so adding 2 zeros total. There are four possible locations for each zero <code>a1b1c1d</code>. 4 ^ 2 means 16 possible locations, encoding the first location as 0 - 3, and second as (0 - 3) * 4. Now enumerate 0 - 15, and print out the resulting combination. In this scheme the first 5 outputs are:</p>

<pre><code>00111, 01011, 01101, 01110, 01011
</code></pre>

<p>And we have a repeat. This mechanism is printing out permutations when you want combinations. There is likely a way to enumerate the combination but the simplest solution is to just index your results and ensure you don't return the same one twice.</p>
"
"8477377","<p>Reading the remark of Kleopatra (his 2nd time he suggested to have a look at <a href=""http://download.java.net/javadesktop/swinglabs/releases/0.8/docs/api/org/jdesktop/swingx/JXTable.html"" rel=""nofollow"">javax.swing.JXTable</a>, and now I Am sorry I didn't have a look the first time :) ) I suggest you follow the link</p>

<p>I searched for an asnwer, and I combined several answers to my own solution: (however, not safe for all solutions, but understandable and quick impelmented, although I recommende to look at the link above)</p>

<p>You can keep it more flexible to set which column is editable or not later on, I used this for exmaple:</p>

<pre><code>    columnsEditable=new ArrayList&lt;Integer&gt;();
    table=new JTable(new DefaultTableModel(){

            @Override
            public boolean isCellEditable(int row, int col) {
                if(columnsEditable.isEmpty()){
                    return false;
                }
                if(columnsEditable.contains(new Integer(col))){
                    return true;
                }
                return false;
          }
    });
</code></pre>

<p>And I used this function to set editable or not:</p>

<pre><code>public void setColumnEditable(int columnIndex,boolean editable){
    if(editable){
        if(!columnsEditable.contains(new Integer(columnIndex))){
            columnsEditable.add(new Integer(columnIndex));
        }
    }else{
        if(columnsEditable.contains(new Integer(columnIndex))){
            columnsEditable.remove(new Integer(columnIndex));
        }
    }
}
</code></pre>

<p>Note: of course you have to define columnsEditable and JTable table global in this class:</p>

<pre><code>private JTable table;
private ArrayList&lt;Integer&gt; columnsEditable;
</code></pre>

<p>Note 2: by default all columns are not editable, but that is my desired behaviour. If you whish otherwhise, either add all columns to columnsEditable or change the behaviour completely (make ArrayList columnsNonEditable in stead).
In regard to Kleopatra's remark: its better not to use this last suggestion (but it depends on the used tablemodel and what you do in the rest of your program).</p>
"
"9163454","<p>enum isn't a datatype its more like the ""class"" keyword. The datatypes in your example are paperQuality and issuingFrequency. So:</p>

<pre><code>public Magazine (double price,
     int numberOfPages,
     paperQuality quality,
     issuingFrequency freq) {

} 
</code></pre>
"
"8483609","<p>You can use number formatter for this. Such as </p>

<pre><code>NumberFormat formatter = new DecimalFormat(""00"");
String s = formatter.format(7);  // that print 07
</code></pre>

<p>Hope this will help you.</p>
"
"8146546","<p>Have you tried below code.</p>

<pre><code>String st = ""9e"";
byte [] value = st.getBytes();
</code></pre>
"
"8146716","<p>You may be looking for something like this:</p>

<pre><code>import java.util.*;
import java.lang.*;

class Main
{
        public static void main (String[] args)
        {
                String hex = ""9e"";
                int i = Integer.parseInt(hex, 16);
                System.out.println(Arrays.toString(intToBytes(i)));
        }

        private static byte[] intToBytes(int n) 
        {
                byte[] bytes = new byte[4];
                for(int i = 0; i &lt; 4; i++)
                {
                        bytes[i] = (byte) (n | 0);
                        n &gt;&gt;= 8;
                }
                return bytes;
        }
}
</code></pre>

<p>Since bytes are signed integral types, you'll need to convert them to unsigned values.</p>
"
"8149564","<p>I believe, you have problem in <code>[.]</code> - this means any character, <code>.</code> is <code>\.</code> (escaped) in regex.</p>

<p>So try:</p>

<ul>
<li>If you need validate single string: <code>^([NSns]{1}){1}\d{4}\.{1}\d{1}$</code></li>
<li>If you need find all references of your patter in string: <code>([NSns]{1}){1}\d{4}\.{1}\d{1}</code></li>
<li>If you ment that quotes to include too: <code>\""([NSns]{1}){1}\d{4}\.{1}\d{1}\""</code></li>
</ul>

<p>Let me know if it doesn't work ;-)</p>
"
"8505137","<pre><code>runner = new Thread(this, threadName);
</code></pre>

<p>In this case <strong>this</strong> is RunnableThread. You need to extend RunnableThread by Thread or use</p>

<pre><code>Thread.currentThread()
</code></pre>

<p>instead of <strong>this</strong></p>
"
"8555181","<p>That would result in a conflict of interest to have a static member variable inside an inner class. Generally speaking, an inner class needs to have an object instance of the outer or enclosing class before it may be instantiated. A static member variable suggests that you don't even need an object instance for that particular class, the inner class in this case, but that class the inner class is dependent upon and can only coexist along with the outer class instance. Do you see where the conflict of interest arises in the argument? However, you can make a static member variable inside an inner class by declaring the inner class as static which means the inner class no longer needs to coexist with an outer class object.</p>

<pre><code>public class A {

   public static class B {

       private static JPanel myJPanel;

   }

}
</code></pre>
"
"8233928","<p>It seems to me we need to take another look at the layers.
(I hope someone corrects me if I get this wrong.)</p>

<ol>
<li><strong>Front End/UI</strong></li>
<li><strong>Business</strong></li>
<li><strong>Service/DAO</strong></li>
</ol>

<p>So for the case of Generating a Report, THe layers break down like so. </p>

<ol>
<li><strong>Front End/UI</strong><br>
<ul>
<li>will have a UI with a button ""Get Some Report"" </li>
<li>the button will then call the Business layer that knows what the report is about.</li>
<li>The data returned by the report generator is given any final formatting before being returned to the user.</li>
</ul></li>
<li><strong>Business</strong>
<ul>
<li><code>MyReportGenerator.GenerateReportData()</code> or similar will be called</li>
</ul></li>
<li><strong>Service/DAO</strong>
<ul>
<li>inside of the report generator DAOs will be used. <code>DAOLocator.GetDAO(Entity.class)</code>; or similar factory type methods would be used to get the DAOs. the returned DAOs will extend a <a href=""http://www.ibm.com/developerworks/library/j-genericdao/"" rel=""nofollow"">Common DAO interface</a> </li>
</ul></li>
</ol>
"
"6506122","<p>You have an extra semicolon.</p>

<pre><code>if (ClassName.this.finish() == true) {

//code..

}
</code></pre>
"
"8600781","<p>Try</p>

<pre><code>jtextfield.addKeyListener(new KeyAdapter(){
   keyReleased(KeyEvent e) {
      jtextfield.setText(jtextfield.getText().toUpperCase());
   }

});
</code></pre>
"
"6546233","<p>You cannot do this, since it doesn't really make sense. If you hadn't called <code>t.join()</code> then you main thread could be anywhere in the code when the <code>t</code> thread throws an exception.</p>
"
"9327696","<p>what if your arraylist c does not have 1000 elements? </p>

<p>how about </p>

<pre><code>for (int i=0; i&lt;c.size(); i++) {
      b[c.indexOf(c.get(i)]++; 
}
</code></pre>
"
"9372441","<p>I would say is the common way would be</p>

<pre><code>private static int x;
</code></pre>

<p>Though I am not sure were you would put the final as the common way.</p>

<p>If I was doing it I would probably do it the way you had it though.</p>

<pre><code>private static final int x;
</code></pre>
"
"9374932","<p>Just change</p>

<pre><code>long elapsedTime = finishTime - startTime / 1000;
</code></pre>

<p>to</p>

<pre><code>long elapsedTime = (finishTime - startTime) / 1000;
</code></pre>

<p>and this should work.</p>
"
"6588161","<p>I think there's a lot of terminology to unpack here. Java doesn't let you have a raw pointer, only a reference, which has a type. </p>

<p>Anyway, say you have a reference to an instance that you know implements <code>HTTPRequestDelegate</code>. You can cast it, like so:</p>

<pre><code>HTTPRequestDelegate delegate = (HTTPRequestDelegate) ref;
</code></pre>

<p>The bit in the parentheses is the cast. You can now call methods on <code>delegate</code> (pass messages in java speak) to your hearts content as long as they are defined on <code>HTTPRequestDelegate</code>. </p>

<p>The other way Java programmers do duck typing type stuff is refection, but if you know the interface, casing is the way to go. </p>
"
"8308019","<p>I give you a sample </p>

<pre><code>import java.io.Serializable;

public class Account implements Serializable {

    private int accountNo;
    private String custName;
    private int balance;

    /** Creates a new instance of Account    */
    public Account(int accNo, String name, int bal) {
        this.accountNo = accNo;
        this.custName = name;
        this.balance = bal;
    }

    @Override
    public String toString() {
        String str = ""Account No:"" + this.accountNo;
        str += ""\nCustomer name:"" + this.custName;
        str += ""\nBalance:"" + this.balance;
        return str;
    }
}
</code></pre>

<p>Write and read object</p>

<pre><code>package me.dev;

import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Main {

    public void writeObject(ArrayList&lt;Object&gt; listAccount) throws IOException {
        //Create FileOutputStream to write file
        FileOutputStream fos = new FileOutputStream(""C:\\bank.datum"");
        //Create ObjectOutputStream to write object
        ObjectOutputStream objOutputStream = new ObjectOutputStream(fos);
        //Write object to file
        for (Object obj : listAccount) {

            objOutputStream.writeObject(obj);
            objOutputStream.reset();
        }
        objOutputStream.close();
    }

    public ArrayList&lt;Account&gt; readObject() throws ClassNotFoundException, IOException {
        ArrayList&lt;Account&gt; listAccount = new ArrayList();
        //Create new FileInputStream object to read file
        FileInputStream fis = new FileInputStream(""C:\\bank.datum"");
        //Create new ObjectInputStream object to read object from file
        ObjectInputStream obj = new ObjectInputStream(fis);
        try {
            while (fis.available() != -1) {
                //Read object from file
                Account acc = (Account) obj.readObject();
                listAccount.add(acc);
            }
        } catch (EOFException ex) {
            //ex.printStackTrace();
        }
        return listAccount;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws ClassNotFoundException {
        try {
            // TODO code application logic here
            ArrayList&lt;Object&gt; listAcc = new ArrayList&lt;Object&gt;();
            listAcc.add(new Account(1, ""John"", 1000));
            listAcc.add(new Account(2, ""Smith"", 2000));
            listAcc.add(new Account(3, ""Tom"", 3000));
            Main main = new Main();
            main.writeObject(listAcc);
            ArrayList&lt;Account&gt; listAccount = main.readObject();
            System.out.println(""listisze:"" + listAccount.size());
            if (listAccount.size() &gt; 0) {
                for (Account account : listAccount) {
                    System.out.println(((Account) account).toString());
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
</code></pre>
"
"8320357","<p>According to <a href=""http://www.jguru.com/faq/view.jsp?EID=11760"" rel=""nofollow"">this</a>, to change the selection for your <code>JTable</code> you need to change the selection model. Try using the following to set the selected item to the very first one.</p>

<pre><code>ListSelectionModel selectionModel = table.getSelectionModel();
selectionModel.setSelectionInterval(start, end);
</code></pre>

<p>See if that gives the focus to the top of the <code>JTable</code>?</p>

<p>EDIT: I have not done this before, so not sure what start and end will need to be, try 0,0 or 0,1 maybe?</p>
"
"8321179","<pre><code>private static final String SOAP_ACTION = ""http://localhost:7675/market_helper/services/insertProduct""; 

SOAP ACTION=NAMESPACE+METHOD NAME;
</code></pre>
"
"6632242","<p>You could also set the layout to <code>null</code> and manually place it using the <code>setBounds(x, y, length, height)</code> method</p>
"
"8331602","<p>The code is not generally thread safe because there is a gap between the <code>CACHE.containsKey(key)</code> check and the <code>CACHE.putIfAbsent(key, ref)</code> call.  It is possible for two threads to call simultaneously into the method (especially on multi-core/processor systems) and both perform the <code>containsKey()</code> check, then both attempt to do the put and creation operations.  </p>

<p>I would protect that execution of the <code>getSingletonInstnace()</code> method using either a lock or by synchronizing on a monitor of some sort.</p>
"
"8712151","<p>Maybe you could try specifying an index of the form</p>

<pre><code>        ""Foobar"".startsWith(""bar"", 3) 
</code></pre>

<p>which returns true. After checking your typos of course.</p>
"
"8332977","<p>google ""Memoizer"". basically, instead of <code>AtomicReference</code>, use <code>Future</code>.</p>
"
"8726167","<p>Certainly:</p>

<pre><code>Object o = new Object();
Object o2 = o;
</code></pre>

<p>In this example, the type of o2 is not a proper supertype of the type of o. However as far as the intention of the question (probably) goes, see the accepted answer.  </p>
"
"6675698","<p>You have to call your method with something as follows :</p>

<pre><code>int returnedValue = CheckStartPosition(f1.xls, 0,""abc"",2,0);
</code></pre>
"
"9482551","<p>Write a loop which uses a <code>Iterator.next()</code> 100 times, and then stops.</p>

<p>I was going to say something about <code>NavigableMap</code> and <code>SortedMap</code> - but their interfaces are defined in terms of keys, not indexes. But they may be useful nevertheless, depending on what your actual underlying problem is.</p>
"
"8371412","<p>Guava's <a href=""http://guava-libraries.googlecode.com/svn/trunk/javadoc/com/google/common/io/Files.html#toByteArray%28java.io.File%29"" rel=""nofollow""><code>Files.toByteArray</code></a> does what you want so if <code>fame</code> in your code is a <code>File</code>, then</p>

<pre><code>import com.google.common.io.Files;

...

byte[] fameBytes = Files.toByteArray(fame);
</code></pre>
"
"9488116","<p>The eclipse shortcut to run Junit test is <code>Alt+Shift+X, T</code>. 
If its not working just press <code>Alt+shift+X</code> a menu will popup just look for Junit.</p>
"
"8751388","<p>You could see what is happening when you execute your command:</p>

<pre><code>   try {
        Process p=Runtime.getRuntime().exec (""cmd /c dir"");

        InputStream is = p.getInputStream();

        BufferedReader br = new BufferedReader (new InputStreamReader (is));

        String aux = br.readLine();

        while (aux!=null) {
            System.out.println (aux);

            aux = br.readLine();
        }
    } 
    catch (Exception e) {
        e.printStackTrace();
    } 
</code></pre>

<p>with this code.</p>
"
"8782858","<p>Changing the relative location of <code>${java.home}/../lib/tools.jar</code> to the absolute path
of <code>C:\Program Files\Java\jdk1.6.0_29\lib\tools.jar</code> works for me.</p>

<p>You should only have to change it in the <code>playn/pom.xml</code>.</p>

<p>Now for the playn-samples, Vladiator is right, that's too many pom files to change. </p>
"
"8419986","<p>At least, it can be confirmed that all the <code>Integer</code> ranging from <code>-127 to +127</code> are cached. If they are created using <code>autoboxing</code> ar <code>Integer#valueOf(value)</code> will not take extra memory.</p>

<p>For a <code>Integer</code> it takes only <code>32 bit</code>.</p>

<p><code>value</code> is the only member variable which takes memory. So it will take size of an integer excluding extra memory to store an object.</p>

<pre><code>public final class Integer extends Number implements Comparable&lt;Integer&gt; {
    ...
    private final int value;
    ...
}
</code></pre>
"
"6727707","<p>Get the time in milliseconds of the start of the current week, and the time in milliseconds of the start of the following week. Then see if the input time is between these two values:</p>

<pre><code>public boolean isInCurrentWeek(long time) {
    Calendar cal1 = GregorianCalendar.getInstance();
    Calendar cal2;
    cal1.set(Calendar.DAY_OF_WEEK, 0);
    cal1.set(Calendar.HOUR_OF_DAY, 0);
    cal1.set(Calendar.MINUTE, 0);
    cal1.set(Calendar.SECOND, 0);
    cal1.set(Calendar.MILLISECOND, 0);
    cal2 = (GregorianCalendar) cal1.clone();
    cal2.add(Calendar.DATE, 7);
    return (time &gt;= cal1.getTimeInMillis() &amp;&amp; time &lt; cal2.getTimeInMillis());
}
</code></pre>
"
"9567364","<p>The constructor gets called when a new object is created.</p>

<pre><code>NewObject n = new NewObject();

public class NewObject {
    public NewObject() {
        // do stuff when object created
    }
}
</code></pre>

<p>Hope this helps.</p>
"
"9594745","<p>The first one is better because the else is not necessary. You never want to include unnecessary part in a design whether it is a java program or a car or something else.</p>

<p>UPDATE:</p>

<p>Necessity does not imply utilitarian in the common sense. If the superfluity is meant for defense in depth or aesthetics, for example, then it's not unnecessary.  Understanding the posted question's example is simplistic, below is an example where the unnecessary else would complicate the design in that an additional return statement is required. </p>

<pre><code>public static int add(int a, int b){
    if(a &gt; 0){
        int c = a+b;
        return c;
    } else if( a&lt;= 0){
        int c = a-(-b);
        return c;
    }
}
</code></pre>

<p>bty: while the example reduces the argument to absurdity, it illustrates the point of unnecessary parts.</p>
"
"9594792","<p>First one is better because it is prettier even better if you could remove multiple exit points i.e. just one <code>return</code> or as little as possible and you can certainly do with one here. </p>

<p>Also please use codereview.stackexchange.com for review type questions.</p>

<pre><code>public boolean test(boolean var){
    boolean flag;
    if (var == true){
        flag = true;
    }
    return flag;
}
</code></pre>
"
"6777565","<p>Obviously you need to use <strong>EDT</strong> if you need to update the UI after finishing the checkMails() method.</p>

<p>And you are looking for <strong>asynchronous</strong> (other one is synchronous) way.</p>

<p>Certainly you are looking for <a href=""http://download.oracle.com/javase/6/docs/api/javax/swing/SwingUtilities.html#invokeLater%28java.lang.Runnable%29"" rel=""nofollow"">SwingUtilities.html#invokeLater(java.lang.Runnable)</a></p>

<p>According to my knowledge, this is the correct way to do background task for Swing.</p>

<pre><code>Runnable checkMail = new Runnable() {
    public void run() {
        while(true) {
            checkMails();
            Thread.sleep(120000); //but this is very naive approach to use sleep, consider using timer ;)
        }
    }
};

SwingUtilities.invokeLater(checkMail);
</code></pre>

<blockquote>
  <p>invokeLater(Runnable doRun): Causes doRun.run() to be executed asynchronously on the AWT event dispatching thread.</p>
</blockquote>

<p>and</p>

<blockquote>
  <p>invokeAndWait(Runnable doRun): Causes doRun.run() to be executed synchronously on the AWT event dispatching thread.</p>
</blockquote>
"
"9600000","<p>Why are you doing this in a try / catch, just use simple if</p>

<pre><code>if ( txtText != null ){
    ...
}
if ( txtLongText != null ){
    ...
} 
</code></pre>
"
"8491488","<p>You can do it any of following ways:</p>

<pre><code>public int compareTo(Object o)
{    
    return (field.compareTo(o.field)==1 &amp;&amp; field2.compareTo(o.field2)==0)? 0 : 1; 
} 
</code></pre>

<p>OR</p>

<pre><code>public int compareTo(Object o)
{
    // add various if-else blocks
    // OR
    // call a separate method    
}
</code></pre>
"
"9605353","<p>Here is an alternative. What it does is: Get which week you want (n), and the other parameters, and return the date of the day in that week. Since Calendar gives the date of the previous month (for example 29th of February instead of 7th of March, since the 1st week of March collides with last week of Feb), the function computes the 2nd week if the date goes beyond 7 or multiples of it for each week thereof. Hope that helps.</p>

<pre><code>public static int getNthWeekDay (int n, int day, int month, int year) {
    Calendar calendar = Calendar.getInstance();

    calendar.set(Calendar.DAY_OF_WEEK, day);
    calendar.set(Calendar.MONTH, month);
    calendar.set(Calendar.WEEK_OF_MONTH,n);
    calendar.set(Calendar.YEAR, year);
    if (calendar.get(Calendar.DATE) &gt; n * 7) {
        calendar.set(Calendar.DAY_OF_WEEK,day);
        calendar.set(Calendar.MONTH, month);
        calendar.set(Calendar.WEEK_OF_MONTH,day+1);

    }
    return calendar.get(Calendar.DATE);
}
</code></pre>
"
"6805134","<p>There has been no such design decision.  Classes can be public, protected, package private (or default), and or private.</p>

<pre><code>class TopLevelClass
{
     public class PublicClass
     {
     }

     protected class ProtectedClass
     {
     }

     /*package private*/ class PackagePrivateClass
     {
     }

     private class PrivateClass
     {
     }
}
</code></pre>
"
"8897891","<p>Here is one approach using a <a href=""http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/CountDownLatch.html"" rel=""nofollow""><code>CountDownLatch</code></a> to keep the main-thread waiting:</p>

<pre><code>public static void main(String[] args) {

    // login event
    String event = ""login"";
    System.out.printf(""Handling event: %s %s\n"",event,getCurrentLogin());
    sendMessage(event, getCurrentLogin());

    final CountDownLatch latch = new CountDownLatch(1);

    // logout or shutdown event
    Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {
        @Override
        public void run() {
                String event = ""logout"";
                System.out.printf(""Handling event: %s %s\n"",event,getCurrentLogin());
                sendMessage(event, getCurrentLogin());
                latch.countDown();
        }
    }));

    latch.await();
 }
</code></pre>
"
"8562592","<p>You would need to call the marker method in the main method ie; something like this:</p>

<pre><code>class testTrick {

    public static void main(String args[]) {
        marker();
    }

    static void marker() {
        System.out.println(""programe executed"");
    }

}
</code></pre>
"
"9713167","<p>The int method means, the return type of method will be int. The parameters can be any others.</p>

<p>As you have written: <code>public static int ConvertToMiles(int feet, double miles)</code>
The first parameter will be the input and the second one, with type double will be the output. The return value only shows if the operation was succesfully or not.
Only the inside of function needs to fill correctly.</p>
"
"6912794","<p>How is this ambiguous? The documentation of each method seems clear to me:</p>

<blockquote>
  <p><code>E remove(int index)</code><br>
  Removes the element at the specified position in this list (optional operation). </p>
  
  <p><code>boolean remove(Object o)</code><br>
  Removes the first occurrence in this list of the specified element (optional operation). If this list does not contain the element, it is unchanged.</p>
</blockquote>

<p>They do two completely different things, hence a need for both.</p>
"
"6916422","<p>Try this:</p>

<pre><code>protected &lt;T&gt; T getProperty(String key, T fallback) {
    String value = properties.getProperty(key);

    if (value == null) {
        return fallback;
    } else {
        Class FallbackType = fallback.getClass();
        return (T)FallbackType.cast(value);
    }
}
</code></pre>
"
"9071169","<p>You can use <code>@NotNull</code> annotation in conjunction with yours.
To use that you need to add <code>@Target( { ANNOTATION_TYPE })</code> annotation in <code>ValidateString</code>.</p>

<p><a href=""http://docs.jboss.org/hibernate/validator/4.0.1/reference/en/html/validator-customconstraints.html"" rel=""nofollow"">http://docs.jboss.org/hibernate/validator/4.0.1/reference/en/html/validator-customconstraints.html</a></p>
"
"9783993","<pre><code>byte[] line = new byte[200];
r.seek(200 * 99);
r.read(line);
String s = new String(line, ""UTF-8""); // Or probably ""Cp1252""
</code></pre>
"
"6972354","<p>@jwd, @jscode
Thanks a lot for your help.
To jwd: I got the idea from your code. Seemed pretty simple logic after I read it..  :-) Wonder why I didnt think of that.
Well, I did polish your idea a little bit and it works fine now in Java.
If anyone has any suggestions, please let me know.
THANKS..
P.S.: The testing part is very primitive. I print the bit values. I did it manually for a couple of examples and used the same as input and it works fine.</p>

<p>=============================================</p>

<pre><code>public static void main(String[] args) {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        System.out.println(""Enter an 8 char key: "");
        String input;
        try {
            // get key, key.length()&gt;=8 chars
            input = br.readLine();
            if (input.length() &lt; 8) {
                System.out.println(""Key &lt; 8B. Exiting. . ."");
                System.exit(1);
            }
            // java char has 16 bits instead of 8 bits as in C,
            // so convert it to 8 bit char by getting lower order byte &amp;
            // discarding higher order byte
            char[] inputKey = input.toCharArray();
            byte[] key64 = new byte[8];
            byte[] key56 = new byte[7];

            // consider only first 8 chars even if input &gt; 8
            for (int counter = 0; counter &lt; 8; counter++)
                key64[counter] = (byte) inputKey[counter];

            System.out.print(""\n$$ "" + new String(key64) + ""  $$\n"");

            // converting 64bit key to 56 bit key
            for (int counter = 0; counter &lt; KEY_LENGTH - 1; counter++) {
                key64[counter] = (byte) (key64[counter] &gt;&gt;&gt; 1);
                key64[counter] = (byte) (key64[counter] &lt;&lt; 1);
            }

            for (int counter = 0; counter &lt; KEY_LENGTH - 1; counter++) {
                key56[counter] = (byte) (key64[counter] &lt;&lt; counter);
                key56[counter] = (byte) (key56[counter] | (key64[counter + 1] &gt;&gt;&gt; (KEY_LENGTH - 1 - counter)));
            }

            /*Conversion from 64 to 56 bit testing code
             System.out.println(new String(key56));

            System.out.println();
            for (int counter1 = 0; counter1 &lt; 7; counter1++) {
                for (int counter2 = 7; counter2 &gt;= 0; counter2--) {
                    System.out.println(key56[counter1] &amp; (1 &lt;&lt; counter2));
                }
                System.out.println();
            }*/

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
</code></pre>
"
"9792386","<p>Have you try ?</p>

<pre><code>System.setProperty(""KEY"", ""VALUE"");
</code></pre>
"
"6991277","<pre><code>private static void generatePrimes(int maxNum) {

    boolean[] isPrime = new boolean[maxNum + 1];
    for (int i = 2; i &lt;= maxNum; i++)
        isPrime[i] = true;

    // mark non-primes &lt;= N using Sieve of Eratosthenes
    for (int i = 2; i * i &lt;= Math.sqrt(maxNum); i++) {

    // if i is prime, then mark multiples of i as nonprime
    if (isPrime[i]) {
        for (int j = i; i * j &lt;= maxNum; j++)
        isPrime[i * j] = false;
        }
    }

    // count primes
    int primes = 0;
    for (int i = 2; i &lt;= maxNum; i++)
        if (isPrime[i]) {
        System.out.println(""Prime - "" + i);
        primes++;
        }
            System.out.println(""The number of primes &lt;= "" + maxNum + "" is ""+ primes);
    }
</code></pre>
"
"8706263","<p>please search and change this line in all files.:</p>

<pre><code>&lt;equals arg1=""1.5"" arg2=""${ant.java.version}""/&gt;
</code></pre>

<p>for</p>

<pre><code>&lt;equals arg1=""1.5"" arg2=""1.5""/&gt;
</code></pre>
"
"9109067","<pre><code>public String result() {
  String result = """";
  for (char c : log.toCharArray()) {
    if (!"" "".equals(c)) {
      result += c;
    }
  }
  return result;
}
</code></pre>
"
"7088401","<p>First: measure which objects really take up the most heap space: <code>jmap -histo:live</code></p>

<p>Then try to reduce the top five classes. Nothing more. Measure again. Repeat until you are satisified.</p>

<p>If one of the candidates is <code>HashMap</code> or <code>HashSet</code> or <code>ConcurrentHashMap</code>: these classes waste heap memory as they can. Use memory-efficient alternatives for them.</p>
"
"9144685","<p>Wouldn't this work:</p>

<pre><code>String fileName = // from JList
File f = new File(fileName);
</code></pre>
"
"9164217","<p>this way I found worked:</p>

<pre><code>public String convertToString(char[] array, int length)
{
String char_string;
String return_string="""";
int i;

   for(i=0;i&lt;length;i++)
   {
       char_string=Character.toString(array[i]);
       return_string=return_string.concat(char_string);
   }
   return return_string;
}
</code></pre>
"
"9227541","<p>open cmd prompt and type</p>

<pre><code>set JAVA_HOME=c:\PATH\TO\JAVA_DIRECTORY
set CLASSPATH=.;%JAVA_HOME%\bin;%JAVA_HOME%\lib
</code></pre>

<p>make sure to include these variables in your PATH environment variable, as well.</p>

<p>You can get to environment variables in Win7 by going to Control Panel -> System -> Advanced System Settings -> Advanced tab -> Environment Variables.</p>
"
"8820462","<p>if you need to install it to a local Maven repository, just use </p>

<pre><code>mvn dependency:go-offline
</code></pre>
"
"8826414","<pre><code>for (int j = 0; j &lt;= 10; j++)
{
   for (int i = 0; i &lt;= 10; i++)
   {
      if (((i * i) + (j * j) - (12 * i) - (10 * j) + 36) == 0)
      {
         System.out.println(""("" + i + "", "" + j + "")"");
         return;
      }  
   }  
} 
</code></pre>

<p>It is import to remember the <code>return;</code> part as you would otherwise still search for solutions although you already found one. If you wan't more solutions, then you should should omit the ´return´ statement.</p>
"
"9985469","<p>Java is an object oriented language, therefore the answer is ""most definitely!"" you can tell the name of the variable passed as a parameter.  To do so, try this...</p>

<pre><code>class Value&lt;T&gt; extends Object
{
    T value;
    String name;

    public Value(String name, T value)
    {
        this.name = name;
        this.value = value;
    }
}
</code></pre>

<p>Now in your methods, you would accept all parameters as instances of Value, as in the following method which would accept only Values created with classes having Number as a base class (which would be Long, Float, Double, etc)...</p>

<pre><code>public String SomeMethodWantingToKnowParameterNames(Value&lt;? extends Number&gt; parm1)
{
    if (parm1 != null)
    {
        // Do your work with the parameter - it's name can be accessed via parm1.name
        // This is only an example
        // You would probably want to write an accessor for name
        return parm1.name;
    }

    // Return null for null
    return null;
}
</code></pre>

<p>And that is all there is to it!  I use a generic class so that Value can be used to pass in any type - Floats, Longs, Double, BigInteger, String - for example...</p>

<pre><code>Value&lt;Float&gt; vFloat = new Value&lt;Float&gt;(""MyFloat"", 0.0);
</code></pre>

<p>Also, the method above is simply an example - in practice any method accepting a Value could access its name. </p>

<p>Good Luck and may all your code compile flawlessly!</p>

<p>Rodney</p>
"
"7223567","<p>use </p>

<pre><code>panel.setMaximumSize(new Dimension(200,200));
panel.setResizable(false)
</code></pre>

<p>instead?</p>
"
"7223962","<p>I would achieve this with a <a href=""http://download.oracle.com/javase/tutorial/uiswing/layout/none.html"" rel=""nofollow"">null layout manager</a>. Use some simple math to find the correct coordinate for the <code>JPanel</code> to reside, then set the location.</p>

<pre><code>    JFrame frame = new JFrame();
    frame.setBounds(150, 150, 500, 500);
    frame.setVisible(true);

    Container contentPane = frame.getContentPane();
    contentPane.setLayout(null);

    JPanel panel = new JPanel();
    panel.setPreferredSize(new Dimension(100, 100));
    panel.setBackground(Color.red);
    panel.setSize(panel.getPreferredSize());

    int centerX = (contentPane.getWidth() - panel.getWidth()) / 2;
    int centerY = (contentPane.getHeight() - panel.getHeight()) / 2;
    panel.setLocation(centerX, centerY);

    frame.add(panel);
</code></pre>

<p>However if you resize the <code>JFrame</code> then it's no longer centered, but you can probably create a <code>ComponentListener</code> to deal with that.</p>
"
"7230907","<p>You are getting Index out of Bounds Exception because there are 2 threads that operate on the list and are doing it wrongly. 
You should have been synchronizing at another level, in such a way that no other thread can iterate through the list while other thread is modifying it! Only on thread at a time should 'work on' the list.</p>

<p>I guess you have the following situation:</p>

<p>//piece of code that adds some item in the list</p>

<pre><code>synchronized(mList){
    mList.add(1, drawableElem);
    ...
}
</code></pre>

<p>and</p>

<p>//code that iterates you list(your code simplified)</p>

<pre><code>synchronized (mList) {
    if (mList.size() != 0) {
        int s = mList.size() - 1;
        for (int i = s; i &gt; 0; i -= OFFSET) {
            mList.get(i).doDraw(canv);
        }
        getHead().drawHead(canv);
    }
}
</code></pre>

<p><strong>Individually</strong> the pieces of code look fine. They seam thread-safe. But 2 individual thread-safe pieces of code might not be thread safe at a higher level!
It's just you would have done the following:</p>

<pre><code>Vector v = new Vector();
if(v.length() == 0){    v.length() itself is thread safe!
  v.add(""elem"");        v.add() itself is also thread safe individually!
}
</code></pre>

<p><strong>BUT the compound operation is NOT!</strong></p>

<p>Regards,
Tiberiu</p>
"
"8939469","<p>yes you can use jacson to parse it but there is more easy way to do it 
its Jsonme lib ""import org.json.me"" you dont have to add jar file to use it </p>

<pre><code>     JSONObject obj = new JSONObject(""{'var1':'val1','var2':200});
     String var1=obj.getString(""var1"");
     int var2=obj.getInt(""var2"");
</code></pre>

<p>yes its more easy but if your project is complex  i advice you to use jacson lib</p>
"
"7273222","<p>This solution is simple, but perhaps simplistic:</p>

<pre><code>public static int compare ( int v1, int v2 )
{
    return v1 - v2;
}
</code></pre>

<p>Note: @aix is correct! This approach will not work for arbitrary integers. It will work for always-positive integers though, for example auto generated database keys etc</p>
"
"10060629","<p>The FileInputStream class makes it possible to read the contents of a file as a stream of bytes. Here is a simple example:</p>

<pre><code>InputStream input = new FileInputStream(""c:\\data\\input-text.txt"");

int data = input.read();
while(data != -1) {
  //do something with data...
  doSomethingWithData(data);

  data = input.read();
}
input.close();
</code></pre>

<p>Note: The proper exception handling has been skipped here for the sake of clarity. To learn more about correct exception handling, go to Java IO Exception Handling.</p>

<p>The read() method of a FileInputStream returns an int which contains the byte value of the byte read. If the read() method returns -1, there is no more data to read in the stream, and it can be closed. That is, -1 as int value, not -1 as byte value. There is a difference here! </p>
"
"9382403","<p>So keywords are just character successions and so it appears that you might not want to use  a pattern matcher but instead try java.regex.pattern.</p>

<p>For the regex inject something like:</p>

<pre><code> [0-9]{*}//w[a-bA-B]+ or [0-9]{*}//w[face]++ 
</code></pre>

<p>Here is a a tester <a href=""http://www.zytrax.com/tech/web/regex.htm"" rel=""nofollow"">RegExp</a>.</p>
"
"9406341","<p>In ...</p>

<pre><code>FileOutputStream f = new FileOutputStream(new File(root, FILENAME));
</code></pre>

<p>Try replacing FILENAME with fileURL.
Also, at which line is the exception thrown? That would help.</p>
"
"10116215","<p>That is fine, but you are only throwing the last exception caught. You might want to store all the files that had errors then return the list.</p>

<pre><code>public void copyFilesAndStore(File[] files, DataObject additionalData){

    YourExceptionClass encounteredException = new YourExceptionClass();

    for (File f in files){
        try {
            copyFileToDestination(f);
        } catch (IOException ex) {
            log(ex);
            encounteredException.addFile(f);
        }
    }

    updateDatabase(additionalData);

    if (encounteredException.hasFiles)
        throw(encounteredException);
}
</code></pre>
"
"7342994","<p>In terms of ease of use, the Array class is a lot easier to code.
The array[] is quite a problem in terms of the case that you need to know
the size of the list of objects beforehand.</p>

<p>Instead, you could use a HashMap. It is very efficient in search as well as sorting as 
the entire process is carried out in terms of key values.</p>

<p>You could declare a HashMap as:</p>

<pre><code>HashMap&lt;String, Object&gt; map = new HashMap&lt;String, Object&gt;();
</code></pre>

<p>For the Object you can use your class, and for key use the value which needs to be unique.</p>
"
"9454570","<p>First of all, the server returns data? How is this returned? I would to this:</p>

<pre><code>        ...
        success: function (data) {
             $(""#ratings"").html('&lt;div class=""rating '+rel+'stars""&gt;&lt;/div&gt;');
        }
        ...
</code></pre>

<p>And create 2 classes, one called <code>rating</code> and 5 more called 1,2,3,4,5stars, that would work.</p>

<p>Good luck! </p>
"
"10175001","<p>This refers to the current instance of the class, not a particular member.</p>

<p>You want to increment a property (I'm guessing of type long or int), and not the instance of your increment class (should be Increment, by the way).</p>

<p>Something like this would work:</p>

<pre><code>public class increment {

private int innerValue = 0;

int increment() {
    innerValue+=1
    return innerValue; // aka this++
}

public static void main(String[] args) {
    increment a = new increment()
    System.out.println(a.increment());
}
}
</code></pre>
"
"9468286","<p>First you have to read the file line by line and add each line to a list. Once the file is read completely, you can print each element in the list in reverse order as shown below:</p>

<pre><code>import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;


public class FileReader {

    public static List&lt;String&gt; readFile() throws IOException {
        List&lt;String&gt; fileContents = new ArrayList&lt;String&gt;();
        FileInputStream fileInputStream = new FileInputStream(""C:/Users/compaq/Desktop/file.txt"");
        InputStreamReader inputStreamReader = new InputStreamReader(fileInputStream);
        BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
        String strLine = null;
        while((strLine=bufferedReader.readLine())!=null) {
            fileContents.add(strLine);
        }
        fileInputStream.close();
        return fileContents;
    }

    public static void printFileInReverse(List&lt;String&gt; fileContents, int numberOfLines) {
        int counter = 0;
        for(int i=(fileContents.size()-1);i&gt;=0;i--) {
            if(counter==numberOfLines) { break; }
            System.out.println(fileContents.get(i));
            counter++;
        }
    } 

    public static void main(String[] args) throws IOException {
        List&lt;String&gt; fileContents = new ArrayList&lt;String&gt;();
        fileContents = FileReader.readFile();
        int numberOfLines = 5;// Number of lines that you would like to print from the bottom of your text file.
        FileReader.printFileInReverse(fileContents, numberOfLines);
    }

}
</code></pre>
"
"9064595","<p>Try this regex:</p>

<pre><code>^([a-zA-Z...]{11},)*[a-zA-Z...]{0,11}$
</code></pre>
"
"9470601","<p>Easiest solution is:</p>

<pre><code>new Date(System.currentTimeMillis() + 86400 * 1000 * 2) 
</code></pre>

<p>would give you date object 48 hours ahead from now</p>
"
"9473061","<p>The backing store for your queue is :</p>

<pre><code>private long[] queArray;
</code></pre>

<p>Why don't you instead use :</p>

<pre><code>private List&lt;Long&gt; queArray
</code></pre>

<p>and let <code>List</code> worry about the resizing effort after <code>add/remove</code> operations.  Your current queue implementation needs to know exactly how many elements are going into the queue on construction.  That's pretty inconvenient for clients using this API.</p>

<p>You can instantiate the queArray as :</p>

<pre><code>queArray = new ArrayList&lt;Long&gt;();
</code></pre>

<p>in your constructor.  Once you really understand that code, you can then move onto worrying about the re-sizing logic yourself.</p>
"
"9489335","<pre><code>****String s1=""Azad""; ----One object will create in String cons. pool

System.out.println(s1);--output--Azad

s1=s1.concat(""Raja"");  Two object will create 1-Raja,2-AzadRaja and address of AzadRaja Store in reference s1 and cancel ref.of Azad object 

System.out.println(s1);  --output AzadRaja****
</code></pre>
"
"9499509","<p>This reason is: <code>Java</code> is a fully <code>Object Oriented Programming</code> model, so in it any things must defined in class or smallest unit in java is class.</p>
"
"9540503","<p>Why not use the usual <code>ArrayList&lt;String&gt;</code> it has the contain method and everything else...</p>
"
"9189845","<p>Copy the <code>List</code> values in a <code>Set</code>. If the lenghts differ, there were duplicates.</p>
"
"9206779","<p><code>(.*)</code> part of your regex is greedy, therefore it eats everything from that point to the end of the string. Change to non-greedy variant: <code>(.*)?</code></p>

<p><a href=""http://docs.oracle.com/javase/tutorial/essential/regex/quant.html"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/essential/regex/quant.html</a></p>
"
"9217619","<p>Run to get the answer:</p>

<pre><code>package so.java9217010;
import java.io.*;

public class SerializeMe implements Serializable{


    private String foo;
    private static final long serialVersionUID = 1;
    private static final int CURRENT_SERIAL_VERSION = 1;

    public SerializeMe(String foo) {
        this.foo = foo;
    }
    public SerializeMe(){
    }

    public SerializeMe readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
        int version = in.readInt();
        if (version != CURRENT_SERIAL_VERSION)
            throw new ClassNotFoundException(""Mismatched NaiveBayesTrainer versions: wanted "" +
                    CURRENT_SERIAL_VERSION + "", got "" +
                    version);

        //default selections for the kind of Estimator used

        return (SerializeMe) in.readObject();
        // nb = test.returnNB();
    }

    public void writeObject(ObjectOutputStream out) throws IOException
    {
        out.writeInt(CURRENT_SERIAL_VERSION);

        //default selections for the kind of Estimator used
        out.writeObject(this);
    }

    public String returnNB(){
        return foo;
    }

    public void setNB(String foo){
        this.foo = foo;
    }
    public static void main(String[] args) throws Exception {
        SerializeMe o = new SerializeMe(""hello"");
        ByteArrayOutputStream bout = new ByteArrayOutputStream();
        ObjectOutputStream oout = new ObjectOutputStream(bout);

        o.writeObject(oout);
        oout.flush();
        byte[] buff = bout.toByteArray();

        ByteArrayInputStream bin = new ByteArrayInputStream(buff);
        ObjectInputStream oin = new ObjectInputStream(bin);
        SerializeMe ro = o.readObject(oin);
        System.out.format(
                ""got: %s -- the problem is most likely in the library you are using ...\n"",
                      ro.returnNB());
    }
}
</code></pre>
"
"9224612","<p>try with this</p>

<pre><code>String str=s.replaceAll(""[^\\p{Print}]"","""");
System.out.println(str);
</code></pre>
"
"7543075","<pre><code>public class Node
{
     public int n;     // value
     public Node next; // pointer to next node
}

Node[] n = new Node[length];

for (int i=0; i&lt;n.length; i++)
{
    Node tmp = n[i];
    n[i] = n[i+1];
    n[i+1] = tmp;
    n[i+1].next = n[i].next; 
    n[i].next = tmp;
}
</code></pre>
"
"7548850","<p>I usually don't round the <em>number</em> itself but round the String representation of the number when I need to display it because usually it's the display that matters, that needs the rounding (although this may not be true in situations, and perhaps yours, but you need to elaborate on this if so).  This way, my number retains its accuracy, but it's display is simplified and easier to read. To do this, one can use a DecimalFormat object, say initialzed with a ""0.000"" String (<code>new DecimalFormat(""0.000"")</code>), or use <code>String.format(""%.3f"", myDouble)</code>, or several other ways.</p>

<p>For example:</p>

<pre><code>// yeah, I know this is just Math.PI.
double myDouble = 3.141592653589793;
DecimalFormat myFormat = new DecimalFormat(""0.000"");
String myDoubleString = myFormat.format(myDouble);
System.out.println(""My number is: "" + myDoubleString);

// or you can use printf which works like String.format:
System.out.printf(""My number is: %.3f%n"", myDouble);
</code></pre>
"
"7548860","<pre><code>double rounded = Math.round(d * 1000) / 1000;
</code></pre>

<p>There is no built-in <code>double</code> rounding function accepting a number of decimal places to round to.</p>
"
"9270876","<p>Try this :</p>

<pre><code>public static char[] rotateString(char[] s, int rotateAmount){
    String oldStr=new String(s);
    String newStr=oldStr.substring(oldStr.length()-rotateAmount,oldStr.length())+oldStr.substring(0,oldStr.length()-rotateAmount);
    return newStr.toCharArray();
}
</code></pre>
"
"7548948","<p>use BigDecimal, but there exist alternative for small amount (+- 100Mio) this code works  with same (Big and Small Figures) as Rounding in MsExcell</p>

<pre><code>public class RoundDoubles {

    public static double roundTo2Places(double value) {
        assert value &gt;= Long.MIN_VALUE / 100 &amp;&amp; value &lt;= Long.MAX_VALUE / 100;
        long digits = (long) (value &lt; 0 ? value * 100 - 0.5 : value * 100 + 0.5);
        return (double) digits / 100;
    }

    public static double roundTo3Places(double value) {
        assert value &gt;= Long.MIN_VALUE / 1000 &amp;&amp; value &lt;= Long.MAX_VALUE / 1000;
        long digits = (long) (value &lt; 0 ? value * 1000 - 0.5 : value * 1000 + 0.5);
        return (double) digits / 1000;
    }

    private RoundDoubles() {
    }
}
</code></pre>
"
"9276552","<p>It is not possible to specify ""some object which has a method called <code>void generate()</code>"" in Java in the way that you have in mind.</p>

<p>In principle you could do this with reflection: you just pass in an <code>Object</code> and at runtime you check if there is a <code>void generate()</code> method that you can call. This means however that you are throwing away the type safety that the compiler provides; I don't recommend using this solution.</p>

<pre><code>public void run(Object obj) throws NoSuchMethodException, IllegalAccessException, InvocationTargetException {
    Method m = obj.getClass().getMethod(""generate"");
    m.invoke(obj);
}
</code></pre>
"
"10466954","<p>Given your comments and responses, I will go for the following solution. I think this is the most efficient one:</p>

<pre><code>Public Class MyClass{

       public static void main (String args[]){
         StringBuilder sb = new StringBuilder();

         for(int i=1; i&lt;=100; i++){
           sb.append(FizzOrBuzz(i));
          }
          System.out.println(sb);
       }

       public static String FizzOrBuzz(int num){
            if (num % 15 ==0) {return ""FizzBuzz\n"";}
            else if (num % 3 == 0) {return ""Fizz\n"";}
            else if (num % 5 == 0) {return ""Buzz\n"";}
            else {return Integer.toString(num);}
       }
}
</code></pre>
"
"7553827","<blockquote>
  <p>how I can round a double value to 3 significant figures</p>
</blockquote>

<p>You can't. Doubles are representing in binary. They do not have decimal places to be rounded to. The only way you can get a specific number of decimal places is to convert it to a decimal radix <em>and leave it there.</em> The moment you convert it back to double you have lost the decimal precision again.</p>

<p>For all the fans, here and elsewhere, of converting to other radixes and back, or multiplying and dividing by powers of ten, please display the resulting double value % 0.001 or whatever the required precision dictates, and explain the result.</p>

<p>EDIT: Specifically, the proponents of those techniques need to explain the 92% failure rate of the following code:</p>

<pre><code>public class RoundingCounterExample
{
    static float roundOff(float x, int position)
    {
        float a = x;
        double temp = Math.pow(10.0, position);
        a *= temp;
        a = Math.round(a);
        return (a / (float)temp);
    }

    public static void main(String[] args)
    {
        float a = roundOff(0.0009434f,3);
        System.out.println(""a=""+a+"" (a % .0001)=""+(a % 0.001));
        int count = 0, errors = 0;
        for (double x = 0.0; x &lt; 1; x += 0.0001)
        {
            count++;
            double d = x;
            int scale = 2;
            double factor = Math.pow(10, scale);
            d = Math.round(d * factor) / factor;
            if ((d % 0.01) != 0.0)
            {
                System.out.println(d + "" "" + (d % 0.01));
                errors++;
            }
        }
        System.out.println(count + "" trials "" + errors + "" errors"");
    }
}
</code></pre>
"
"7563775","<p>You need to change the type of blocks to <code>Stack&lt;Integer&gt;[]</code>.</p>

<p>edit: Code compiles fine.  You get a warning, which is there to remind you that a  bad array assignment can still occur at runtime, so the compiler cannot guarantee you won't get a ClassCastException at runtime if you write buggy code.  However, the posted solution does exactly what the OP wants:</p>

<pre><code>public static void main(String[] args) throws Exception {
    Stack&lt;Integer&gt;[] array = new Stack[] { new Stack(7) };
    Integer result = array[0].pop();
}

class Stack&lt;T&gt; {

    private final T foo;

    public Stack(T foo) {
        this.foo = foo;
    }

    T pop() {
        return foo;
    }
}
</code></pre>

<p>ps. to clarify, that warning is there to point out that even though you aren't casting explicitly, you can still get a ClassCastException at runtime, as in the following code:</p>

<pre><code>    public static void main(String[] args) throws Exception {
        Stack&lt;Integer&gt;[] array = new Stack[] { new Stack(7) };

        Stack notAnIntegerStack = new Stack&lt;Object&gt;(new Object());
        array[0] = notAnIntegerStack;

        Integer result = array[0].pop(); // class cast exception at runtime
    }
</code></pre>

<p>There are warnings all over this code pointing out the danger, but it will compile.  Hope that clears things up.</p>
"
"9293984","<p>In general you can just do this:</p>

<pre><code>if (string.indexOf(""substring"") &gt; -1)... //It's there
</code></pre>
"
"9293988","<p>Please try following, </p>

<pre><code>int result = str1.indexOf ( ""not in"" );

if ( result != -1 ) 
{
       // It contains ""not in"" 
}
else if ( result == -1 )
{
     // It does not contain ""not in""
}
</code></pre>
"
"9749991","<p>If you only to get all of the items, I think you don't need use loop,just print these.</p>

<pre><code>NavigableMap&lt;String, Integer&gt; nav = new TreeMap&lt;String, Integer&gt;();
nav.put(""key1"", value1);
nav.put(""key2"", value2);
nav.put(""key3"", value3);
System.out.printf(""The Whole:%s"", nav);
</code></pre>
"
"9299135","<p>You are parsing with wrong format</p>

<pre><code>new SimpleDateFormat(""MM/dd/yyyy""); 
</code></pre>
"
"7569656","<p>From the JRE documentation: <a href=""http://download.oracle.com/javase/6/docs/api/java/lang/String.html#getChars%28int,%20int,%20char%5b%5d,%20int%29"" rel=""nofollow""><code>getChars</code></a></p>
"
"9324324","<p>I would not use Java to search the file system for matches of the string. Instead invoke a native algorithm from Java instead. I would invoke grep from Java using something like this:</p>

<pre><code>ProcessBuilder pb = new ProcessBuilder(""grep"", ""-r"", ""foo"");
pb.directory(new File(""myDir""));
Process p = pb.start();
InputStream in = p.getInputStream();
//Do whatever you prefer with the stream
</code></pre>
"
"9350620","<p>Can you try assigning it in both the catch and finally blocks?
Like so:</p>

<pre><code>Connection connTemp = null;
final Connection conn;
try {
    connTemp = getConn(prefix);
} catch (Exception e) {
    throw new DbHelperException(""error opening connection"", e);
} finally {
    closeConnection(conn);
}
conn = connTemp;
</code></pre>
"
"9350653","<p>Why do you want it final? If you want to pass it to an anonymous inner class, you could do:</p>

<pre><code>Connection conn = null;
try {
    conn = getConn(prefix);
    final Connection finalConn = conn;
    // pass it to inner class here
} catch (Exception e) {
    throw new DbHelperException(""error opening connection"", e);
} finally {
    closeConnection(conn);
}
</code></pre>

<p>The only problem (and quite a big one) with this solution is that you close your connection as soon as you leave this block. So unless you declare and call your anon inner class straight away, this pattern isn't going to work.</p>

<p>Either way, I'd probably rephrase the whole thing if I were you, making <code>prefix</code> final instead and delegating connection handling to the anon inner class.</p>
"
"9901378","<p>Stack is in java.util. You did peek() is in built method of Stack class. So, you can not call like s.peek().getColor(). If you have defined getColor() method in any of your class, you need to create object of that class then you can use method of that class.   You are getting <code>Cannot find symbol</code> because there no method like getColor() in java's Stack class.</p>
"
"9901384","<p>You should make an object of the class Furniture as - </p>

<p><code>Furniture f=new Furniture(""queen"",""red"");</code></p>

<p>This will do the following : </p>

<p>1.Create an object of the class Furniture with name f</p>

<p>2.Assign size of f as queen and its color as red.</p>

<p>And now if you want to print the color of this object,you should call it this way : </p>

<p><code>System.out.println(f.getColor());</code></p>
"
"9951788","<p>I don't think there exist a data structure with all scenarios you listed. </p>

<p>Generally, if you were to implement such a structure, it can be called an Abstract Data Type. With such a data type you  provide all functionalities i.e. you abstract the working which correspond to the scenarios above. </p>

<p>In Java, <code>List, Queue</code>, and many more are examples of Abstract data types.</p>
"
"10700994","<p>I dont know if any API available.you can solve like below.</p>

<p>steps should be.</p>

<p>1.take String</p>

<p>2.define regex to be replaced //you should know them in advance</p>

<p>3.loop all expressions</p>

<p>4.replace every expression with Space.</p>

<p>5.now you can use String tokenizer.</p>

<pre><code>String str=""word1:word2|word3||word4|word5|||word6|word7"";
    String[] tokens={""[:]"",""[|]{3}"",""[|]{2}"",""[|]""};
    for (int i = 0; i &lt; tokens.length; i++) {
        str=str.replaceAll(tokens[i], "" "");
        System.out.println(str);
    }
</code></pre>
"
"9962440","<pre><code>int a = 9909;

switch(a)
{
   case a &lt; 10:
     //ones place
     break;
   case a &lt; 100:
     //hundreds place
     break;
   //etc.....
}
</code></pre>

<p>Hope this helps.</p>
"
"9514664","<p>1) Start using coding formats. Its advisable to use <strong>objStudent</strong> rather than some 'st'.</p>

<p>2) There is no use of creating <strong>int sidevalue</strong>. Directly use a switch case as give below:</p>

<pre><code>switch(Integer.parseInt(attribute.getValue()))
{
  case 1:
    ----
.
.
.
</code></pre>

<p>and so on...</p>

<pre><code>}
</code></pre>
"
"9523384","<blockquote>
  <p>public static String[] words; {
      words = new String[2];</p>

<pre><code>words[0] = ""Oil sucks!"";
words[1] = ""Do you know that I can talk?""; }
</code></pre>
</blockquote>

<p>If you want to use this as a method for initializing the <code>words</code> instead of declaring an array of String's then add parathesis after words in the method header and remove the semi-colon.</p>
"
"10032296","<p>Well, you can do one of two things.  You can either declare an fps object:</p>

<pre><code>fps myfps = new fps();
myfps.fps();
</code></pre>

<p>or you can make it all static:</p>

<pre><code>public static void fps(){
  ...
}
public static void tick(){}

//elsewhere
fps.fps()
</code></pre>
"
"10798568","<p>Busy-waiting (using a for loop) is not usually a good idea. You'd be better using <code>Thread.sleep(1000)</code> to sleep for (up to) 1000 milliseconds. See the api docs <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html#sleep(long)"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html#sleep(long)</a> for full info.</p>
"
"10826974","<pre><code>    String formatstring=String.format(""$%s"", 123);
    System.out.println(formatstring);
</code></pre>
"
"7878996","<p>You can do this. I had to make a chess game, and I wanted the chess piece piece to always go in the center of a cell which was a JlayeredPane:</p>

<pre><code>private void formMouseReleased(java.awt.event.MouseEvent evt) {
    // TODO add your handling code here:
    if (jl != null)
    {
        jl.setLocation(evt.getX()+10, evt.getY()+10);
        Component com = findComponentAt(evt.getPoint());
        if (com instanceof JPanel)
        {
            // System.out.println(""Yes, it's a jpanel"");
            ((JPanel)com).add(jl);
            ((JPanel)com).validate();
        }
    }
}
</code></pre>
"
"7882320","<p>You should try a </p>

<pre><code>do {


}while(condition is true)
</code></pre>

<p>loop. However that said, you have to implement checks assuming that there will be runaway data or conditions resulting in an infinite loop. Just my 2 cents </p>
"
"9621323","<p>You need to use <a href=""http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/mvc.html#mvc-ann-exceptionhandler"" rel=""nofollow""><code>@ExceptionHandler</code></a> annotation to your method:</p>

<pre><code>@ExceptionHandler(NoSuchRequestHandlingMethodException.class)
public ModelAndView handleNoSuchRequestHandlingMethod(NoSuchRequestHandlingMethodException ex, HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {
    ...
}
</code></pre>
"
"10085062","<p>You can use <code>invokeLater()</code>.
This works for me:</p>

<pre><code>b.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                b.setText(""Saving"");
                SwingUtilities.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                        try {
                            sleep(1000);
                            b.setText(""Saved"");
                        } catch (InterruptedException e) {
                            // TODO Auto-generated catch block
                            e.printStackTrace();
                        }
                    }
                });
            }
        });
</code></pre>
"
"9629051","<p>Your program should work but the answer to your questions is no. JVM will not treat <code>a1</code> as an alias of <code>qValues[0]</code>, instead it copy the value of the latter to the former.</p>

<p>Check this good referenece: <a href=""http://www.yoda.arachsys.com/java/passing.html"" rel=""nofollow"">http://www.yoda.arachsys.com/java/passing.html</a></p>
"
"10880182","<p>remove the <code>v.remove(value)</code> and everything will work as expected</p>

<p><strong>Edit:</strong> sorry, misread the question there</p>

<p>This has nothing to do with threadsafety though. You're not even multithreading so there is no reason Java would throw an exception for this.</p>

<p>If you want exceptions when you are changing the vector make it Unmodifiable</p>
"
"10131401","<p>Extending <a href=""http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ConcurrentLinkedQueue.html"" rel=""nofollow"">ConcurrentLinkedQueue</a>, you can use: </p>

<pre><code>private int capacity;

// proper constructor

public boolean add(E e) {
  synchronized(mutex) {
    if (super.size() == capacity) {
      super.remove(super.element());
    }
  }
  return super.add(e);
}
</code></pre>

<p><strike>However, this puts an overhead to the calls to <code>size()</code> method. On a high frequency requirement, it's better to override methods such as <code>add(E e)</code>.</strike>.</p>

<p><strong>Updated based on the comment</strong>.</p>
"
"10934704","<p>Try this,</p>

<pre><code>ThreadPoolExecutor ex =
    new ThreadPoolExecutor(limit, limit, 20, TimeUnit.SECONDS, q);
for (int i = 0; i &lt; limit; i++) {
  ex.execute(new RunnableObject(i + 1));
}
</code></pre>

<p>Lines to be added</p>

<pre><code>ex.shutdown();
ex.awaitTermination(timeout, unit)
</code></pre>
"
"9673223","<p>try</p>

<pre><code>problems.set(0, p); 
</code></pre>

<p>the first position in an array is always 0.  </p>

<p><em>edit</em> you should be using the .add() method to add an object to the array though</p>
"
"10203561","<p>For that you need not to go for complete path because</p>

<p>when you are creating file than by default it will create at <code>ROOT</code> of you server</p>

<p>which is <code>C:\glassfish3\glassfish\</code> here.</p>

<p>hope this will help you.</p>
"
"10975555","<pre><code>textString.split(""\\)::|::\\("") 
</code></pre>

<p>should work.</p>
"
"10975562","<p>This should work for you.</p>

<pre><code>\)::|::\(
</code></pre>
"
"7970602","<pre><code>public class OverloadVarArgs {

public static void main(String... args){
    OverloadVarArgs a = new OverloadVarArgs(""One Argument"");
    OverloadVarArgs b = new OverloadVarArgs(""Two"", ""Arguments"");
    OverloadVarArgs c = new OverloadVarArgs(""One, Argument"");

}

public OverloadVarArgs(String a){
    System.out.println(""Constructor 1"");
}

public OverloadVarArgs(String... a){
    System.out.println(""Constructor 2"");
}
}
</code></pre>

<p>Output:</p>

<p>Constructor 1</p>

<p>Constructor 2</p>

<p>Constructor 1</p>
"
"10264973","<p>The two <code>createConnection</code> implementations you propose are equivalent; there's no functional difference between direction returning a connection versus stashing the connection in a variable and returning that.</p>

<p>As to whether there is some violation of dependency inversion going on, I would say that the factory is sort-of fine, depending on how it is intended to be used. What you want is for classes to take a <code>Connection</code> as a parameter, rather than having a factory that it calls directly to obtain a connection.</p>
"
"7995120","<p>I'm not sure I fully understand your question, but I think I know what you're talking about. I believe what is happening is you're application isn't closing the socket when you end it. In Windows, I'm not sure that there is a way to close that socket outside the process that opened it, but in Linux you can do and lsof then kill that pid.</p>

<pre><code>lsof -i tcp:8989
kill -9 some_PID
</code></pre>
"
"11012350","<p>If you can not make it through UI, Try to edit settings in the following file.
<pre><code>YOUR-WORKSPACE\.metadata\.plugins\org.eclipse.core.runtime\.settings</code></pre> there will be a file called <code>org.eclipse.ui.browser.prefs</code> open it with any text editor and change the appropriate values, It is self descriptive you can easily find out what to change and all. Have a back up of the same before you modify.</p>

<p>Hope this helps you.</p>

<p>EDIT: Restart your eclipse to effect the above change.</p>
"
"11015091","<p>You can use the <code>rs.getRow()</code> method.</p>

<pre><code> if(rs.getRow() &gt;= 1){
      //Has at least 1 result
    }
</code></pre>

<p><a href=""http://www.docjar.com/html/api/java/sql/ResultSet.java.html"" rel=""nofollow"">Source:</a></p>

<pre><code>/**
    * Retrieves the current row number.  The first row is number 1, the
    * second number 2, and so on.
    * &lt;p&gt;
    * &lt;strong&gt;Note:&lt;/strong&gt;Support for the &lt;code&gt;getRow&lt;/code&gt; method
    * is optional for &lt;code&gt;ResultSet&lt;/code&gt;s with a result
    * set type of &lt;code&gt;TYPE_FORWARD_ONLY&lt;/code&gt;
    *
    * @return the current row number; &lt;code&gt;0&lt;/code&gt; if there is no current row
    * @exception SQLException if a database access error occurs
    * or this method is called on a closed result set
    * @exception SQLFeatureNotSupportedException if the JDBC driver does not support
    * this method
    * @since 1.2
 */
      int getRow() throws SQLException;
</code></pre>
"
"11045536","<pre><code>    for(String i:list){
        //
    }
</code></pre>
"
"8056409","<p>Try replacing <code>INT</code> with <code>INTEGER</code> in your create statement. </p>

<p>More information here <a href=""http://www.sqlite.org/datatype3.html"" rel=""nofollow"">http://www.sqlite.org/datatype3.html</a>.</p>
"
"11089263","<p>Order is important, as is type.  The output of a long divided by a long is a long.  The result of the division you're performing is 0, and 0 * 100 == 0.  You would be much better off using something like this:</p>

<pre><code>System.out.println((long) (4091365376.0 / 4091495462.0 * 100));
</code></pre>
"
"11089286","<p>In integer math:</p>

<pre><code>4091365376 / 4091495462 = 0
0 * 100 = 0
</code></pre>

<p>You're expecting</p>

<pre><code>4091365376 / 4091495462 = 0.9999682057572327
0.9999682057572327 * 100 = 99.99682057572327
</code></pre>

<p>but you can't do that with integers (or long integers).  Use doubles if you want a double value.</p>
"
"8068528","<p>The best way is not to write any initializing statements. This is because if you write 
<code>int a[]=new int[3]</code> then by default, in Java all the values of array i.e. <code>a[0]</code>, <code>a[1]</code> and <code>a[2]</code> are initialized to <code>0</code>! Regarding the local variable hiding a field, post your entire code for us to come to conclusion.</p>
"
"10410075","<p>You can modify your thest and do something like</p>

<pre><code>public void theTest(){
    if (System.getProperty(""skipMyTest"") == null){
         //execute the test
    }
}
</code></pre>

<p>and pass the environment variable if you want to skip the test</p>
"
"9899624","<pre><code>  if (board[x][y] != null) {
    // it's not null, but that doesn't mean it's ""set"" either.  You may want to do further checking to ensure the object or primitive data here is valid
  }
</code></pre>

<p>Java doesn't have an equiv. to isset because knowing if something is truly set goes beyond just stuffing a value into a location.  </p>
"
"11231693","<p>Given these very specific constraints (i.e. this is not a general case solution), this will work:</p>

<pre><code>import java.util.Set;
import java.util.TreeSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class test {

    public static void main(String[] args) {

        String s = ""y z a a a b c c z"";

        Pattern p = Pattern.compile(""(a )+(b )+(c ?)+"");
        Set&lt;String&gt; set = recurse(s, p, 0);
    }

    public static Set&lt;String&gt; recurse(String s, Pattern p, int depth) {
        int temp = depth;
        while(temp&gt;0) {
            System.out.print(""  "");
            temp--;
        }
        System.out.println(""-&gt; "" +s);

        Matcher matcher = p.matcher(s);
        Set&lt;String&gt; set = new TreeSet&lt;String&gt;();

        if(matcher.find()) {
            String found = matcher.group().trim();
            set.add(found);
            set.addAll(recurse(found.substring(1), p, depth+1));
            set.addAll(recurse(found.substring(0, found.length()-1), p, depth+1));
        }

        while(depth&gt;0) {
            System.out.print(""  "");
            depth--;
        }
        System.out.println(""&lt;- "" +s);
        return set;
    }
}
</code></pre>

<p>I'm reasonably sure you can adapt it to work on other cases, but the recursion into the matched string means that overlapping matches (like the one pointed out by @ahenderson) won't work.</p>
"
"8137437","<p>""classes that declares in the method"" are <strong>anonymous classes</strong>, and ""classes that declares in blocks bounded by { }"" are <strong>inner classes</strong>.</p>

<p>Anonymous classes cannot be declared as <code>final</code> because there is no way to inherit it.</p>

<p>Inner classes can be <code>final</code> unless there would be any subclasses of it.</p>
"
"10494957","<p>First, create a date and time pattern string as specified in the <a href=""http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html"" rel=""nofollow""><code>SimpleDateFormat</code></a> javadocs and then call <a href=""http://docs.oracle.com/javase/7/docs/api/java/text/DateFormat.html#parse%28java.lang.String%29"" rel=""nofollow""><code>parse</code></a> to convert the string to a <code>Date</code> object.</p>
"
"10494970","<p>Use <code>SimpleDateFormat</code>. Something like this:</p>

<pre><code>DateFormat fmt = new SimpleDateFormat(""EEE MMM d hh:mm:ss Z yyyy"");
Date date = fmt.parse(str);
</code></pre>
"
"10495003","<pre><code>SimpleDateFormat sf1 = new SimpleDateFormat(""EEE MMM d HH:mm:ss Z yyyy"");
SimpleDateFormat sf = new SimpleDateFormat(""MM/dd/yyyy"");
Date date = sf.parse(sf.format(sf1.parse(yourTimeStamp)));
</code></pre>
"
"11239380","<p><strong>This warning is issued usually when you contruct Collection of raw type.</strong> i.e.You don't define what type of objects it will contain.</p>

<pre><code>java.util.ArrayList arrList = new java.util.ArrayList(Arrays.asList(list));// issues warning as you made ArrayList of raw type.
</code></pre>

<p>To overcome it , Just add object type in ArrayList declaration.</p>

<pre><code>java.util.ArrayList&lt;Integer&gt; arrList = new java.util.ArrayList(Arrays.asList(list));
</code></pre>
"
"8163479","<p>You can maintain a list of acceptable Mime Types and then get Mime Type of file you are reading. If it matches good to go.</p>

<pre><code>import javax.activation.MimetypesFileTypeMap;
import java.io.File;

class GetMimeType {
  public static void main(String args[]) {
    File f = new File(""gumby.gif"");
    System.out.println(""Mime Type of "" + f.getName() + "" is "" +
                         new MimetypesFileTypeMap().getContentType(f));
    // expected output :
    // ""Mime Type of gumby.gif is image/gif""
  }
}
</code></pre>

<p><a href=""http://www.rgagnon.com/javadetails/java-0487.html"" rel=""nofollow"">http://www.rgagnon.com/javadetails/java-0487.html</a></p>
"
"11260228","<p>Just a thought, any specific reason for the file storage of names and scores ?<br></p>

<p>Seems like a <code>Map&lt;String, Integer&gt;</code> would serve you much better...</p>
"
"9947982","<p>I used <a href=""https://github.com/Atomidata/django-audit-log/blob/master/docs/usage.rst"" rel=""nofollow"">django-audit-log</a> and I am very satisfied.</p>

<p>Django-audit-log can track multiple models each in it's own additional table. All of these tables are pretty unified, so it should be fairly straightforward to create a SQL view that shows data for all models.</p>

<p>Here is what I've done to track a single model (""Pauza""):</p>

<pre><code>class Pauza(models.Model):
    started      = models.TimeField(null=True, blank=False)
    ended        = models.TimeField(null=True, blank=True)
    #... more fields ...

    audit_log = AuditLog() 
</code></pre>

<p>If you want changes to show in Django Admin, you can create an <a href=""https://docs.djangoproject.com/en/dev/ref/models/options/#django.db.models.Options.managed"" rel=""nofollow"">unmanaged model</a> (but this is by no means required):</p>

<pre><code>class PauzaAction(models.Model):

    started      = models.TimeField(null=True, blank=True)
    ended        = models.TimeField(null=True, blank=True)
    #... more fields ...

    # fields added by Audit Trail:
    action_id    = models.PositiveIntegerField(primary_key=True, default=1, blank=True)
    action_user  = models.ForeignKey(User, null=True, blank=True)
    action_date  = models.DateTimeField(null=True, blank=True)
    action_type  = models.CharField(max_length=31, choices=(('I', 'create'), ('U', 'update'), ('D', 'delete'),), null=True, blank=True)
    pauza        = models.ForeignKey(Pauza, db_column='id', on_delete=models.DO_NOTHING, default=0, null=True, blank=True)

    class Meta:
        db_table = 'testapp_pauzaauditlogentry'
        managed = False
        app_label = 'testapp'
</code></pre>

<p>Table <code>testapp_pauzaauditlogentry</code> is automatically created by django-audit-log, this merely creates a model for displaying data from it. 
It may be a good idea to throw in some rude tamper protection:</p>

<pre><code>class PauzaAction(models.Model):

    # ... all like above, plus:

    def save(self, *args, **kwargs):
        raise Exception('Permission Denied')
    def delete(self, *args, **kwargs):
        raise Exception('Permission Denied')
</code></pre>

<p>As I said, I imagine you could create a SQL view with the four <code>action_</code> fields and an additional 'action_model' field that could contain varchar references to model itself (maybe just the original table name).</p>
"
"10570932","<p>An abstract class is a class which at least one method is not implemented. That's why it is mandatory to use the keyword ""<code>abstract</code>"" before writing the header of the method. </p>

<p>Against by an interface is a class whose all methods are abstract, that's why it is not necessary to use the <code>abstract</code> keyword.</p>
"
"9967265","<p>Should be like this I think</p>

<pre><code> try {
                User sessionuser =(User)session.getAttribute(""User"");
                String username = sessionuser.getUsername(),firstname="""",surname="""",password="""";

                if (request.getParameter(""firstname"") == """"){
                    firstname = sessionuser.getFirstname();
                }
                else{firstname = request.getParameter(""firstname"");
                }

                if (request.getParameter(""surname"") == """"){
                    surname = sessionuser.getSurname();
                }
                else{surname = request.getParameter(""surname"");
                }
                password = request.getParameter(""password"");

                User user = new User(username, firstname, surname, password);
                //this.updateUser(user); 
                this.updateUser(username, firstname, surname, password);

                //user.updateUser();

                session.setAttribute(""User"", user);
                request.setAttribute(""u"", user);
                request.getRequestDispatcher(""UpdateUser.jsp"").forward(request,     response);
</code></pre>

<p>You can also use <code>null</code> instead of <code>""""</code></p>
"
"9987848","<p>you need an Instance of your BodyMassIndex:</p>

<pre><code>BodyMassIndex bmi = new BodyMassIndex(...)
double BMI = bmi.getBodyMassIndex();
</code></pre>

<p>The way you use it, means that the methods are declared as static ones in the BMI class. like: </p>

<pre><code>public static double getBodyMassIndex() {...}
</code></pre>

<p>but that would not be a great design.</p>
"
"11334030","<p>It may be a problem that there is nothing added yet to the tab.</p>

<p>Try setting the content manager of the content panel to <code>BorderLayout</code>, adding a <code>JPanel</code> with <code>BorderLayout</code>. Center and then coloring that panel.</p>
"
"9994576","<p>I have solved my problem as follows:</p>

<p>Disable security manager after WebStart started my application. First line in my <code>main()</code> method:</p>

<pre><code>System.setSecurityManager(null);
</code></pre>

<p>Tell Tomcat to use the default class loader:</p>

<pre><code>context.setLoader(new WebappLoader(getClass().getClassLoader()));
</code></pre>

<p>Now Tomcat runs within WebStart :-D</p>
"
"11335588","<p>I'm pretty sure you have to use your Client ID, not the email address. It looks like this: 37382847321922.apps.googleusercontent.com</p>

<p>See <a href=""https://developers.google.com/android-publisher/authorization"" rel=""nofollow"">https://developers.google.com/android-publisher/authorization</a></p>

<pre><code>client_id=&lt;the client ID token created in the APIs Console&gt;
</code></pre>

<p>And I'm pretty sure you don't need a P12 file. You only need the </p>

<pre><code>client_secret=&lt;the client secret corresponding to the client ID&gt;
</code></pre>

<p>Try doing it manually from the command line first, with 'wget'. </p>
"
"10613668","<p>+""sale_Limit )"" - should be space, change to:</p>

<pre><code>+""sale_Limit ) ""
</code></pre>

<p>""values ("" +txtid.getText()+ "",'"" - missing quotes, change to:</p>

<pre><code>""values ('"" +txtid.getText()+ "",'""
</code></pre>
"
"11360348","<pre><code>/**
 * If input string is a regex, matches will always return a false.
 */ 
public boolean isRegex(final String str) {   
    return str != null ? !str.matches(str) : false;
}
</code></pre>
"
"11370346","<pre><code>public class cleardir {
static String userprofile = System.getenv(""USERPROFILE"");
   private static final String FILE_DIR = userprofile+""\\Downloads\\Software_Tokens"";
   private static final String FILE_TEXT_EXT = "".sdtid"";

   public static void run(String args[]) {
    new cleardir().deleteFile(FILE_DIR,FILE_TEXT_EXT);
   }

   public void deleteFile(String folder, String ext){

     GenericExtFilter filter = new GenericExtFilter(ext);
     File dir = new File(folder);
     if (dir.exists()) { 
     //list out all the file name with .txt extension
     String[] list = dir.list(filter);

     if (list.length == 0) return;

     File fileDelete;

     for (String file : list){
    String temp = new StringBuffer(FILE_DIR)
                      .append(File.separator)
                      .append(file).toString();
        fileDelete = new File(temp);
        boolean isdeleted = fileDelete.delete();
        System.out.println(""file : "" + temp + "" is deleted : "" + isdeleted);
     }
   }
   }
   //inner class, generic extension filter 
   public class GenericExtFilter implements FilenameFilter {

       private String ext;

       public GenericExtFilter(String ext) {
         this.ext = ext;             
       }

       public boolean accept(File dir, String name) {
         return (name.endsWith(ext));
       }
    }
}
</code></pre>
"
"10042011","<p>You can setup your web.xml as filtered resource and have this value filled by maven from maven profile settings - that what we do. </p>

<p>in pom filter all resources (you can do taht if you have no ${} marking in them)</p>

<pre><code>&lt;webResources&gt;
    &lt;resource&gt;
        &lt;directory&gt;src/main/webapp&lt;/directory&gt;
        &lt;filtering&gt;true&lt;/filtering&gt;
    &lt;/resource&gt;
&lt;/webResources&gt;
</code></pre>

<p>in web.xml put</p>

<pre><code>&lt;context-param&gt;
     &lt;param-name&gt;spring.profiles.active&lt;/param-name&gt;
     &lt;param-value&gt;${spring.prfile}&lt;/param-value&gt;
&lt;/context-param&gt;
</code></pre>

<p>in pom create maven profiles</p>

<pre><code>&lt;profiles&gt;
    &lt;profile&gt;
        &lt;id&gt;DEFAULT&lt;/id&gt;
        &lt;activation&gt;
            &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;
        &lt;/activation&gt;
        &lt;properties&gt;
            &lt;spring.profile&gt;prod&lt;/spring.profile&gt;
        &lt;/properties&gt;
    &lt;profile&gt;
    &lt;profile&gt;
        &lt;id&gt;DEMO&lt;/id&gt;
        &lt;properties&gt;
            &lt;spring.profile&gt;demo&lt;/spring.profile&gt;
        &lt;/properties&gt;
    &lt;profile&gt;
&lt;/profiles&gt;
</code></pre>

<p>Now you can use </p>

<pre><code>mvn jetty:run -P DEMO
</code></pre>

<p>or simply <code>-P DEMO</code> with any maven command</p>
"
"11435950","<p>Where are you trying to print it?</p>

<p>If you are trying to print to console:</p>

<pre><code>while (true) {
 System.out.println(""text"");
}
</code></pre>
"
"11436039","<p>It's quite simple actually:</p>

<pre><code>for (int i = 1; i &lt;= 1000; i++) {
        System.out.println(""Case \"""" + i + ""\"" Application.FollowHyperlink \""http://mypage/"" + i + ""/\"""");
    }
</code></pre>
"
"11441132","<p>Replace</p>

<pre><code>average = sum / 10;
</code></pre>

<p>with</p>

<pre><code>average = sum / 10.0;
</code></pre>
"
"8294788","<p>you could do something like this :</p>

<pre><code>Object bar;
if ((bar = getFoo()) != null) {
  return bar;
} else if ((bar = getBoo()) != null) {
  return bar;
} else {
  return getBaz()
}
</code></pre>

<p>this way you only need to call the get methods, but not the has ones</p>

<pre><code>EDIT
</code></pre>

<p>this is the same in a more readable format that also elminates the need to call the has methods</p>

<pre><code>Object bar = getFoo()

if (bar == null) {
  bar = getBoo()
}

if (bar == null) {
  bar = getBaz()
}

return bar;
</code></pre>
"
"10087008","<p>Just implement some sort of collection in the object that has the other objects
For example in customer you could say:</p>

<pre><code>private List&lt;Job&gt; jobs; 
</code></pre>

<p>then by using getters and setters you can add values jobs to this list.
This is basic OO stuff, I don't think you searched enough on the internet. there is a lot of info available on these subjects.</p>

<p>Btw, you can use all sort of collections (Sets, Lists, Maps)</p>
"
"10742016","<p>From the javadoc: ""This linked list defines the iteration ordering, which is the order in which elements were inserted into the set (insertion-order).""</p>

<p>So you can simply:</p>

<pre><code>LinkedHashSet&lt;Integer&gt; numbers = new LinkedHashSet&lt;Integer&gt;();
numbers.add(1);
numbers.add(2);
numbers.add(33);
numbers.add(44);
numbers.add(108);

for (Integer i : numbers) {
    System.out.println(i);
}
</code></pre>
"
"10096189","<p>I would do this:</p>

<pre><code>class MouseActions implements MouseMotionListener, MouseListener
{
..
..
}

canvas.addMouseListener(new MouseActions ());
canvas.addMouseMotionListener(new MouseActions() );
</code></pre>

<p>and that would probably work.</p>
"
"11507004","<p>Yes: whenever you can and want to recover from them.</p>

<p>Many common exceptions inherit from <code>RuntimeException</code> and each may or may not be recoverable depending on the particular circumstances. The <code>RuntimeException</code> class itself does not imply that the exception must or must not be caught.</p>

<p>For example, you may have a library method which throws <code>IllegalArgumentException</code> on certain inputs. If applicable to your program, you could catch this exception and recover in some way, for example by trying a different input, or explaining to the user why the operation cannot continue.</p>
"
"8336530","<p>you need to enable this service by using attribute: </p>

<pre><code> service android:enabled=""true"" android:name="".your service name""&gt;
</code></pre>
"
"10874040","<p>Use recursion and provide a depth parameter which tells how many spaces there are in front of each output element.</p>

<p>Something along the lines of:</p>

<pre><code>private final int INDENTSIZE = 4;

public void printNodes() {
    for (Node n : roots) {
        System.out.print(""- "" + n.getName());
        printNode(n, 1);
    }
}

private void printNode(Node n, int depth) {
    List&lt;Node&gt; children = n.getChildren();

    for (Node child : children) {
        printIndent(depth);
        System.out.print(""- "" + child.getName());
        printNode(child, depth + 1);
    }
}

private void printIndent(int depth) {
    System.out.println();
    for (int i = 0; i &lt; depth * INDENTSIZE; i++) {
        System.out.print("" "");
    }
}
</code></pre>

<p>Of course, the <code>getChildren()</code> you have to implement by your own. Shouldn't be that hard if you have a Map or a Tree.</p>

<p>This example however, does not adress cyclic references and will then loop forever.</p>
"
"10139644","<p>I would suggest using tokens for this ... simply go through each character and decide what to do based on what the character is. Here's the pseudo-code</p>

<pre><code>string word = """";

while ( EOF ){

    char = getNextChar()

    if ( char not space or full-stop ){
        append the char to the word
    }
    else {
        if ( the word is empty ){ continue /* ignore multi space */ }
        else {
            add the word to an array of words
            reset the word to """"
        }
    }
}
</code></pre>

<p>This way, you have a complete control of the way you process the data - you don't have to worry about crazy scenarios with to include in the regex rule. Most of all, this is the most efficient way (def better than regex) and you do only a single pass through the data.</p>
"
"11514661","<p>don't invent your own serialization format. java already has that.</p>

<pre><code>ArrayList&lt;String&gt; files = ...; // whatever

// write the object to a file

ObjectOutput out = new ObjectOutputStream(new FileOutputStream(""filename.ser""));
out.writeObject(files);
out.close();

// read the object back

InputStream is = new FileInputStream(""filename.ser""); 
ObjectInputStream ois = new ObjectInputStream(is); 
ArrayList&lt;String&gt; newFiles = = (ArrayList)ois.readObject(); 
ois.close(); 
</code></pre>
"
"8347195","<p>Variables should be initialised when defined, e.g.</p>

<pre><code>Object myObject = new Object();
</code></pre>

<p>not</p>

<pre><code>Object myObject;
... // other code that might use myObject
myObject = new Object();
</code></pre>

<p>This will eliminate most cases of an object potentially being null. For other cases where an object may be null, checking it is in order, but that does not mean you have to check every single variable.</p>
"
"11535085","<p>It works if you do it like this</p>

<pre><code>public class StringArray 
{

    /**
     * @param args
     */
    public static void main(String[] args) 
    {
        show(new String[]{""A"", ""B""});
    }
    static void show(String[] s)
    {
        System.out.println(s[0] + s[1]);
    }
}
</code></pre>

<p>because you are actually creating a new array ""object"". The other way, {""A"", ""B""} doesn't mean anything. {""A"", ""B""} isn't an array object, so it won't work. The first way works because you are actually specifying that what is being passed to the function is an array object.</p>
"
"10147852","<p>I'm not sure if this will work, but with things like trying to prevent rainbow tables in hashes and other security problems, doing something like</p>

<pre><code>for(int i = 0; i &lt; 100; i++) {
}
</code></pre>

<p>might do the trick. But again I've never tested this, it's just a suggestion</p>
"
"10951665","<p><a href=""http://www.exampledepot.com/egs/javax.swing.tree/RowHeight.html"" rel=""nofollow"">http://www.exampledepot.com/egs/javax.swing.tree/RowHeight.html</a></p>

<p>works great for dynamic row heights.</p>

<pre><code>// Create tree
JTree tree = new JTree();

// All rows will be given 15 pixels of height
tree.setRowHeight(15);

// Have the row height for each row computed individually
tree.setRowHeight(0);

// If the row height is 0 and the height of a row has dynamically changed, it is     necessary
// to flush the internal cache of row heights. The following calls flush the     internal     cache.
if (tree.getRowHeight() &lt;= 0) {
// Temporary change to non-zero height
tree.setRowHeight(1);
}
tree.setRowHeight(0);
</code></pre>
"
"10235604","<p>Try this:</p>

<pre><code>System.getProperty(""user.home"")
</code></pre>
"
"10252682","<pre><code>Colombo,Sri Lanka,Now())' at line 1
</code></pre>

<p>Looks like you're missing single quotes around your strings.</p>
"
"10332505","<p>Just use a <a href=""http://docs.oracle.com/javase/6/docs/api/java/util/ArrayList.html"" rel=""nofollow""><code>ArrayList&lt;Integer&gt;</code></a>.</p>
"
"11047951","<pre><code>public enum body
{
    NO_LEG = 0,         // bit 1
    LEG_ONE = 2,        // bit 2 
    LEG_TWO = 4,        // bit 3 
    NO_ARM = 8,          // bit 4 
    ARM_ONE = 16,  // bit 5 
    ARM_TWO = 32  // bit 6 

}
</code></pre>

<p>use it like this 
   (int)body.LEG_ONE ; /// which returns 2</p>

<p>this is also very fast, and easy readable since it is done on compile time.</p>
"
"11726637","<p>Ensure that you have set permissions for <code>DELETE</code> statements. Certain users will have certain commands disallowed for security purposes.</p>
"
"10396493","<p>You probably need to see what classpaths Netbeans is providing to Java that your CLI command isn't.  </p>

<p>Try removing the <code>package</code> call if you're not using packages, as it can lead to complications.  </p>
"
"8545663","<p>Like this:</p>

<pre><code>public class TestCountArray {

    public static Map&lt;Integer, Integer&gt; countElementOcurrences(int[] array) {

        Map&lt;Integer, Integer&gt; countMap = new HashMap&lt;Integer, Integer&gt;();

        for (int element : array) {
            Integer count = countMap.get(element);
            count = (count == null) ? 1 : count + 1;
            countMap.put(element, count);
        }

        return countMap;
    }

    public static Integer mostOcurrencesElement(int[] array) {
        Map&lt;Integer, Integer&gt; countMap = countElementOcurrences(array);

        int maxCount = 0;
        Integer element = null;
        for (Integer e : countMap.keySet()) {
            if (countMap.get(e) &gt; maxCount) {
                element = e;
                maxCount = countMap.get(e);
            }
        }

        return element;

    }

    public static void main(String[] args) {

        int[] a = new int[] {1,2,3,4,5,6,7,7,7,7}; 

        System.out.println (mostOcurrencesElement(a));

    }

}
</code></pre>
"
"11137252","<p>Try this out:</p>

<pre><code>public static void main(String[] args) {
            View sal = new View();
            sal.setSize(500, 400);
            sal.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            sal.setVisible(true);
</code></pre>

<p>}    </p>

<p>Comment these lines after the constructor:</p>

<pre><code>super(titleText);
setSize(500,400);
setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
setVisible(true);
</code></pre>

<p>Hope that helps.</p>
"
"11139697","<p>not confirmed about Linux but you can make entry to windows registry too.</p>

<p>either way,</p>

<pre><code>String path = System.getProperty(""user.home"")+ ""\\AppLication Data""+""\\xyzFolder"";
</code></pre>

<p>this works for both windows 7 to because %appData% shows the path which legacy for above.</p>
"
"10484709","<p>try to use <code>Set</code> instead of <code>ArrayList</code>.</p>
"
"11160720","<p>Maybe try this:</p>

<pre><code>arg=""ab|cd""
java className $arg
</code></pre>
"
"10497482","<p>There's <a href=""http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/overview.html#d0e743"" rel=""nofollow"">a section about Logging</a> in the Spring Reference.</p>

<p>It shows how to configure different logging frameworks, among them <a href=""http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/overview.html#d0e826"" rel=""nofollow"">log4j</a></p>

<p>In your case the last line of the config would be:</p>

<pre><code>log4j.logger.org.springframework.transactions=DEBUG
</code></pre>
"
"8638688","<pre><code>String a = ""[ hello, char[]={a,b,c} ... bye ] "";
a.substring(1,23);
System.out.println(a);
</code></pre>

<p>There you go i miss read.</p>
"
"11240286","<p>The methods you can declare as static are the ones that don't require instantiation, such as </p>

<pre><code>public class MyClass
{
    public static string InvertText(string text)
    {
        return text.Invert();
    }
}
</code></pre>

<p>Which you can then in return call out in any other class without instanciating that class.</p>

<pre><code>public class MyClassTwo
{
    public void DoSomething()
    {
        var text = ""hello world"";
        Console.Write(MyClass.InvertText(text));
    }
}
</code></pre>

<p>... But that's something you probably already know. It doesn't give you any real benefits per se, other than making it more clear that the method doesn't use any instance variables.</p>

<p>In other words, you can most safely just turn it off completely. If you know you will never use a method in other classes (in which case it should just be private), you don't need it to be static at all. </p>
"
"11904467","<p>Maybe you need add</p>

<pre><code>File outputFile = new File(dest+""""+filename);
if(!outputFile.exist())outputFile.createNewFile();
</code></pre>
"
"10568182","<p>If this isn't a lesson how to use Arrays, I strongly advocate in making contact with List, and other collections - but preferably List, and concretely ArrayList. It is so convenient! And it is easy. </p>

<p>There are 3 or 4 basic operations: Constructor to define a List, add elements, remove elements, iterate over all elements. </p>

<p>And about 50 other not so frequently used methods, and methods which use Lists and so on. </p>

<pre><code>public static void main (String [] args)
{
    List &lt;Integer&gt; myarray = new ArrayList &lt;Integer&gt; ();
    System.out.println (""Enter integers into the system, to quit enter -99"");
    Scanner scan = new Scanner (System.in);

    while (scan.hasNextInt ())
    {
        int temp = scan.nextInt ();
        if (temp == -99)
        {
            System.out.println (""Successfully terminated by inputting -99"");
            System.out.println ();
            break;
        }
        else {
            myarray.add (temp);
            if (myarray.size () == 50)
            {
                System.out.println (""successfully filled array fully up"");
                System.out.println ();
            }
        }
    }
    for (int i : myarray)
    {
        System.out.print (i + "","");
    }
    System.out.print (""}"");

    Set &lt;Integer&gt; hsi = new HashSet &lt;Integer&gt; (); 
    hsi.addAll (myarray);

    Collections.sort (myarray);
    System.out.println (""Array list: {"");
    int idx = 0;
    for (int i: hsi) {
        System.out.println (i + ""\t"" + Collections.frequency (myarray, i));
    }
    System.out.println (myarray.size ());
}
</code></pre>

<p>See how short and simple? Just add the elements - you don't need to know in advance how many elements it contains. No marker-fields or external values to mark the end necessary! </p>

<p>Usage:</p>

<pre><code>java Numbers
Enter integers into the system, to quit enter -99
4 44 0 33 2 2 7 9 1  4 3 90 -99 
Successfully terminated by inputting -99

4,44,0,33,2,2,7,9,1,4,3,90,}Array list: {
0   1
1   1
2   2
3   1
33  1
4   2
7   1
9   1
44  1
90  1
12
</code></pre>

<p>Your first idea for collecting values, you like to get by index or you want to iterate over, should be ArrayList, not a plain old array. Array is only useful in exceptional cases - when you surely know the size in advance to begin with. </p>

<p>ArrayLists are fast, believe it - no - don't believe it, test it!</p>
"
"10575043","<p>Once the Connection object is obtained, use it to execute the PreparedStatement/Statement/CallableStatement which is placed in a try block, then put the house-cleaning jobs like closing the statment, and the conn.</p>

<p>eg:  </p>

<pre><code> try{

    Connection conn = DriverManager.getConnection(url,username,password);

    PreparedStatement pStat = conn.prepareStatement(""Drop table info"");

    pStat.executeUpdate();
      }
       catch(Exception ex){
        }

   finally(){

     pStat.close();
     conn.close();
 }
</code></pre>
"
"11290739","<p>Sollution 1:
Run following on command prompt:</p>

<pre><code>javac myclass.java
java myclass
</code></pre>

<p>Sollution 2:
Run following on command prompt:</p>

<pre><code>cd ..
cd..
javac mypack.pack1.myclass.java
java mypack.pack1.myclass
</code></pre>

<p>The problem was you were already in <code>F:\mypack\pack1</code> directory. So you don't need to specify <code>mypack.pack1.myclass</code>. If you want to run it the same way, run it from F: directory directly. I mean execute <code>cd..</code> 2 times and run your command.</p>
"
"11943468","<p>This Will return your current used interface address:</p>

<pre><code>NetworkInterface ni;
try {
    Enumeration&lt;NetworkInterface&gt; interfaces NetworkInterface.getNetworkInterfaces();
    while (interfaces.hasMoreElements()) {
        ni = interfaces.nextElement();
        if (ni.isUp()) {
            Enumeration&lt;InetAddress&gt; inetAddresses = ni.getInetAddresses();
            while (inetAddresses.hasMoreElements()) {
                InetAddress ia = inetAddresses.nextElement();
                if (!ia.isLinkLocalAddress()) {
                    return ia;
                }
            }
        }
    }
} catch (SocketException ex) {
    throw new RuntimeException(ex);
}
</code></pre>
"
"8715542","<p>Make it
    <code>String text = """"+getMVariable(""testInfo.freqMax"");</code></p>

<p>(EDIT: Actually, not that sure if this works :/)</p>
"
"10627835","<p>Yes @Matthew, is much better the best practices using </p>

<pre><code>List&lt;Integer&gt; numbers = new ArrayList&lt;Integer&gt;
</code></pre>

<p>because can you use the methods the ArrayList class and List class. I hope help you.</p>
"
"11341565","<pre><code>include ""iostream""
include ""time.h""
define START clock_t t1,final;t1=clock();
define END final=clock()-t1;cout &lt;&lt; (double)final / ((double)CLOCKS_PER_SEC);
using namespace std;
int main()
{
    START   

    END
    return 0;
}

//in C++ write the programme between the START and END
//it will print the run time at the end of execution...
</code></pre>
"
"8725848","<p>append method should be used instead of ""+"".</p>

<p><code>new StringBuilder(""select id1, "").append("" id2 "").append("" from "").append("" table"").toString();</code></p>
"
"8748993","<p>By using the <code>available()</code> method in the <a href=""http://docs.oracle.com/javase/1.4.2/docs/api/java/io/InputStream.html#available%28%29"" rel=""nofollow""><code>InputStream</code></a> class.  From the Javadoc:</p>

<blockquote>
  <p>Returns the number of bytes that can be read (or skipped over) from
  this input stream without blocking by the next caller of a method for
  this input stream. The next caller might be the same thread or or
  another thread.</p>
</blockquote>
"
"11437281","<p>Create a new <code>int</code> array and copy over the values, casting as needed.</p>

<pre><code>int[] arr = new int[len];

for(int i = 0; i &lt; len; i++)
    arr[i] = (int)buf[i];
</code></pre>
"
"11468087","<pre><code> private  int maxHeight(BinaryNode&lt;AnyType&gt; n) {
  if (n ! = null) return 0;
  int leftheight = maxHeight(n.left);
   int rightheight = maxHeight(n.right);
  return (leftheight &gt; rightheight) ? leftheight + 1 : rightheight + 1;
}
</code></pre>

<p>So far you have known the 4 cases to count the height</p>

<p>The essence is to continue to go left or right node if the left child or the right child exist.
if exist, return 1.</p>

<p>The counting function goes in the last statement. That is to get the largest height counted.</p>

<p>The main course is to get familiar with recursion and the programming stack  when the method is working. </p>
"
"10752848","<p>Only <code>SortedSet</code> can do the ordering of the <code>Set</code></p>
"
"12126312","<p>This is exactly what the String object's replace function is for. If you want to get all occurrences of the &amp;a, use a Regular expression, like so:</p>

<pre><code>&lt;html&gt;
&lt;script&gt;

a =  ""This&amp;aIs&amp;aA&amp;aTest""

alert(a.replace(new RegExp (""&amp;a"", ""g"") , "" ""));

&lt;/script&gt;
&lt;/html&gt;
</code></pre>

<p>or replaceAll().</p>
"
"11492090","<p>Place your instructor's suggestion above this:</p>

<pre><code>String array[]=pr_name.split("" "");
</code></pre>

<p>It appears you're storing the text string as pr_name so before you split on the spaces, you can strip the other characters.  It should appear like this:</p>

<pre><code>pr_name = pr_name.replaceAll(""[^a-zA-Z\s:]"", """");
String array[]=pr_name.split("" "");
</code></pre>
"
"8830909","<p>this is mostly used in Java beans like below.</p>

<p><code>public Class MyBean{</code></p>

<p><code>private int var1;</code></p>

<p><code>public void setVar1(int pVar1){</code></p>

<p><code>this.var1=pvar1;</code></p>

<p><code>}</code></p>

<p><code>public int getVar1(){</code></p>

<p>return var1;`</p>

<p><code>}</code></p>

<p><code>}</code></p>

<p>benefits are as below</p>

<p><strong>1.</strong> with this we can achieve <strong>Encapsulation</strong></p>

<p><strong>2.</strong> it is called as <strong>DTO (Data Transfer Object)</strong> design pattern.
it is used to transfer data from one layer to another layer in MVC based applications.
like u can get user entered data from form (by using getters) and u can use the same data to insert into database(by using setter) and vice verca.
latest frameworks (SPring )providing it as inbuilt functionality.</p>
"
"11525166","<p>I think you need to set the adapter on the list object loaded from xml. Something like:</p>

<pre><code>listaNodiView = (ListView) findViewById(R.id.ListViewLista);
listaNodiView.setListAdapter(dataSource);
</code></pre>

<p>where <code>R.id.ListViewLista</code> is the id of the List resource inside your layout xml declaration (NOT row.xml)</p>
"
"8833671","<p>The simplest way of using them in Java is by using the <code>String.matches</code> method:</p>

<pre><code>boolean matches = ""abc"".matches(""[a-z]+"");
</code></pre>

<p>That would yield <code>true</code>.</p>

<p>The second way of doing it is useful if you have to use a specific regex pattern a lot of times. You can compile it and reuse it:</p>

<pre><code>Pattern pattern = Pattern.compile(""[a-z]+"");
Matcher matcher = pattern.matcher(""abc"");
boolean matches = matcher.matches();
</code></pre>
"
"10774121","<p>You can convert that <code>byte []</code> into <code>String</code> and parse that String by the below code.</p>

<pre><code>String value = new String(buf);
</code></pre>

<p>And I would recommend you to send that data into proper standardize format such as <code>XML</code> or <code>JSON</code>. And create one parser that will parse that <code>Packet</code>'s data and give you the desired output from the received packet.</p>
"
"8833893","<p>What you are trying to do it to turn the literal string<code>R.raw.xyz</code> into a URI.
What you really want is to first resolve <code>R.war.xyz</code> into a string and then turn that into an Uri.
There is e.g. <code>Context.getString()</code> for this purpose.</p>
"
"8833920","<p>Try this :</p>

<pre><code>Bundle bundle = getIntent().getExtras();
    String choice= blabla// your solution to get song name
    String debug = ""R.raw."" + choice;   
    Uri myUri = Uri.parse(debug);        
    mPlayer = MediaPlayer.create(activity.this, myUri);
    mPlayer.start();
</code></pre>
"
"10793931","<p>Put digits of input into List, create random generator that will return indexes of this List, form your output:</p>

<pre><code>Integer input = 5278;
char[] digits = String.valueOf(input).toCharArray();

int numberOfTrinities = 4;
String result = """";
Random generator = new Random();
List&lt;String&gt; trinities = new ArrayList&lt;String&gt;();
while(trinities.size() &lt; numberOfTrinities ) {
    String nextTrinity = """";
    for(int i = 0; i &lt; 3; i++) {
        nextTrinity  += digits(generator.nextInt(digits.size()));
    }
    if(isUniqueDigitsTrinity(trinities, nextTrinity)) {
        trinities.add(nextTrinity);
    }        
}
String result = """";
for(String trinity : trinities) {
    result += trinity;
}
System.out.printl(""Input: "" + input + "", Result: "" + result);
</code></pre>

<p>We nead this to check unique digits in trinity:</p>

<pre><code>private boolean isUniqueDigitsTrinity(List&lt;String&gt; trinities, String candidateTrinity) {
    for(String existingTrinity : trinities) {
        String checker = existingTrinity;
        for(char candidateChar : candidateTrinity.toCharArray()) {
            checker.replace(candidateChar, '');
        }
        if(checker.length() &lt;= 0) {
            return false;
        }
    }
    return true;
}
</code></pre>
"
"11536721","<p>You can use JavaServerPage (JSP) or Applets, here's an example for JSP for your situation:</p>

<pre><code>&lt;!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.0 Transitional//EN""&gt; 
&lt;HTML&gt; 
&lt;HEAD&gt; 
&lt;TITLE&gt;JSP&lt;/TITLE&gt; 
&lt;/HEAD&gt; 
&lt;BODY&gt; 
&lt;H2&gt;JSP &lt;/H2&gt; 
&lt;UL&gt; 
&lt;LI&gt;Curent time: &lt;%= new java.util.Date() %&gt; 
&lt;LI&gt;Host name: &lt;%= request.getRemoteHost() %&gt; 
&lt;LI&gt;ID sesion: &lt;%= session.getId() %&gt; 
&lt;/UL&gt; 
&lt;% deleteconfig deletecfg = new deleteconfig(); %&gt;
&lt;%= delectecfg.initiate(); =%&gt;
&lt;/BODY&gt; 
&lt;/HTML&gt; 
</code></pre>

<p>JSP scripting elements are:</p>

<ul>
<li>Expressions: <code>&lt;% = expression%&gt;</code> The expression is evaluated and printed out the document.</li>
<li>Scriptlet <code>&lt;% code%&gt;</code> The code is inserted into the servlet service method.</li>
<li>Statements: <code>&lt;%! code%&gt;</code> The code is inserted into the servlet class, outside of any method.</li>
</ul>

<p>For JSP scripting elements is possible and another syntactic form, based on XML markup:</p>

<ul>
<li><code>&lt;jsp:expression&gt; Java expression &lt;/ jsp: expression&gt;</code></li>
<li><code>&lt;jsp:scriptlet&gt; Java code &lt;/ jsp: scriptlet&gt;</code></li>
<li><code>&lt;jsp:declaration&gt; Statement Java &lt;/ jsp: declaration&gt;</code></li>
</ul>
"
"12209876","<p>When it comes to </p>

<blockquote>
  <p>final keyword</p>
</blockquote>

<p>of Java in the context of Java collections (Maps, Sets and Lists), declaring them as final doesn't make them  unmodifyable. When I say collection/container is modifyable/unmodifyable , it actually means that I can/can't modify the contents of it. So using declaring them final actually means that reference to that collection is unmodifyable, but collection by itself is modifyable. Suppose you want to make them unmodifyable, what you have to do is,</p>

<pre><code>UnmodifyableCollection&lt;T&gt; {

  public boolean add(T t){
    throw new  UnsupportedException();
 }

  public T remove(T t){
    throw new  UnsupportedException();
 }

}
</code></pre>

<p>something like above where any addition/deletion of contents are not allowed. <code>Collections.unmodifyXXX()</code> methods do the same things.</p>

<p>also final keywords have got wider uses like</p>

<blockquote>
  <p>1) To Restrict subclassing (making a class immutable) </p>
  
  <p>2) To restrict  method overriding  </p>
  
  <p>3) To define constants</p>
</blockquote>

<p>Also be careful when you declare a collection with static final, because the container is available for all the objects. Check your intent whether you  really need that design and be sure why you want that.</p>
"
"8896984","<p>To get the contents of an element in JavaScript:</p>

<pre><code>var el = document.getElementById('hiddenDivHL');
var contents = el.innerHTML;
alert(""Found "" + contents.length + "" characters of content."");
</code></pre>

<p>See <a href=""http://jsfiddle.net/zymsys/JzVFe/"" rel=""nofollow"">your example on jsfiddle</a>.</p>

<p>I think the confusion is due to the fact that your question is tagged JavaScript, but the code you posted is Java.  They are different languages, and JavaScript people will only be confused by that parser.  I haven't used Java in years so I can't really help you there.</p>
"
"12221664","<p>Try this:</p>

<pre><code>if (but1 == true &amp;&amp; but2 == true) {
    // do something
}
</code></pre>
"
"12221667","<p>You cannot compare variables with <code>=</code>.  A single equals sign is used for assignment, where <code>==</code> is used for comparison.</p>

<p>In Java, you can do the following:</p>

<pre><code>if (a == true &amp;&amp; b == true)
{
//do code
}
</code></pre>
"
"12223893","<p>you should use <code>implements</code> statement ,</p>

<pre><code>public void prepareForLaunch() implements Launchbla {
}
</code></pre>
"
"11609587","<p>Well....notify serves purpose of premature notifying to the threads waiting on the locked object. if you don't use Notify ,then certainly when it finishes it releases lock. </p>

<pre><code>So that is equivalent to notify
</code></pre>

<p>no it's not..Consider the situation below.</p>

<pre><code>class Job extends Thread {  
    private Integer number = 0;  
    public void run() {

       synchronized(this) {
       for (int i = 1; i &lt; 1000000; i++) {  
            number++;  
        }  
        notify();     //releases lock here and your main thread continues
        do sumthing...
        do sumthing...
        }  
    }
    public Integer getNumber() {  
        return number;  
    }  
}  
</code></pre>

<p>if you don't use notify() ...lock will be released only after you do all your sumthings..</p>
"
"12239489","<pre><code>private static String findMin(String[] list) {
    String minState = list[0]; 
    for(int i=1; i&lt;list.length; i++){
        String min=list[i];
        minState=(min!=null&amp;&amp;min.compareTo(minState)&lt;0)?min:minState;
    }
    return minState;
}
</code></pre>
"
"11615795","<p>It's probably a JSONArray you want to be converting it to. If you aren't pulling values based on their ids in a JSONObject, then it's a JSONArray. You can just do:</p>

<pre><code>for (int i = 0; i &lt; jsonArray.length(); i++) {

    whateverTheObjectIs = jsonArray.getObject(i);

}
</code></pre>
"
"11615851","<p>A static method does not have a <code>this</code> pointer available, so the code given won't compile. Is there a reason that you need <code>getData()</code> to be static?</p>
"
"12245214","<pre><code>Button submitRating = (Button) findViewById(R.id.submitRatingButton);
        submitRating.setOnClickListener(new View.onClickListener)
        {
             @Override
         public void onClick(View v) 
            {
                              //Insert your code here
                    }
        }
</code></pre>
"
"10965244","<p>Try this,</p>

<pre><code>catch(NullPointerException ex){
     Thread t = new Thread(new Runnable(){

                            public void run(){

                                  isOpenDialog = true;

                                  JOptionPane.setMessageDialog(Title,Content);
                                }
                              });

     t.start();

     t.join(); // Join will make the thread wait for t to finish its run method, before
                  executing the below lines

     isOpenDialog = false;

   }
</code></pre>
"
"8957816","<p>As you have mentioned, the ""correct"" uses of <code>instanceof</code> are rather limited. As far as I know, you have basically summed up the two main uses.</p>

<p>However you can generalize your statements a bit though as follows:</p>

<ol>
<li>Type-checking before necessary casts.</li>
<li>Implementing special case scenarios that depend on very particular class instances</li>
</ol>
"
"11703825","<p>Try this code. <code>read</code> and <code>write</code> methods in FileStream ignore whitespace and indents.</p>

<pre><code>try{
File f1 = new File(""source.xml"");
File f2 = new File(""destination.xml"");
InputStream in = new FileInputStream(f1);  
OutputStream out = new FileOutputStream(f2);

 byte[] buf = new byte[1024];
 int len;
 while ((len = in.read(buf)) &gt; 0){
 out.write(buf, 0, len);
}
 in.close();
  out.close();
 System.out.println(""File copied."");
 }catch(FileNotFoundException ex){
     System.out.println(ex.getMessage() + "" in the specified directory."");
 System.exit(0);
}catch(IOException e7){
 System.out.println(e7.getMessage());  
   }
</code></pre>
"
"12252493","<p>There is a <code>List</code> interface in Java. The Java ""standard lib"" will be available to you in any environment, so you can use it freely. You can use one of the classes that implement <code>List</code>, such as the <code>ArrayList</code>.</p>

<pre><code>List&lt;String&gt; list = new ArrayList&lt;String&gt;();
list.add(""hello"");
list.add(""world"");
</code></pre>
"
"12263835","<p>NO This is not a singleTon</p>

<pre><code>public class Final_output{
   private static Final_output ourInstance = new Final_output();
   Cafe_factory obj=null;    

   private Final_output() {
     obj = new Cafe_factory();
     obj.getOrder(""French Fries"");
     obj.getOrder(""Biryani"");
     obj.getOrder(""Ice-cream"");
   }

   public Final_output getINstance(){
       return ourInstance;
   }

}
</code></pre>
"
"10970776","<pre><code>import java.io.*;
import java.awt.image.*;
import javax.servlet.*;
import javax.servlet.http.*;
import com.keypoint.PngEncoder;

public class ChartViewer extends HttpServlet 
{

  public void init() throws ServletException {
  }

  //Process the HTTP Get request
  public void doGet(HttpServletRequest request, HttpServletResponse response)
     throws ServletException, IOException {

   // get the chart from session
   HttpSession session = request.getSession();
   BufferedImage chartImage = (BufferedImage) session.getAttribute(""chartImage"");

   // set the content type so the browser can see this as a picture
   response.setContentType(""image/png"");

   // send the picture
   PngEncoder encoder = new PngEncoder(chartImage, false, 0, 9);
   response.getOutputStream().write(encoder.pngEncode());

  }

  //Process the HTTP Post request
  public void doPost(HttpServletRequest request, HttpServletResponse response)
     throws ServletException, IOException {
    doGet(request, response);
  }

  //Process the HTTP Put request
  public void doPut(HttpServletRequest request, HttpServletResponse response)
     throws ServletException, IOException {
  }

  //Clean up resources
  public void destroy() {
  }

}
------------------------

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.HashMap;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.transform.Source;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.TransformerFactoryConfigurationError;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;
import org.w3c.dom.Document;


public class Generator extends HttpServlet {

    public static final String defContentType = ""text/html; charset=UTF-8"";
    public static final String contentTypeHTML = defContentType;
    // public static final String contentTypeXML = ""text/xml; charset=UTF-8"";
    // public static final String contentTypeCSV = ""application/vnd.ms-excel"";
    public static final String errorTemplate = ""+++ERRORS+++"";
    private static HashMap cache;

    public Generator() {
        super();
    }

    /**
     * @see javax.servlet.http.HttpServlet#doGet(javax.servlet.http.HttpServletRequest,
     *      javax.servlet.http.HttpServletResponse)
     */
    protected void doGet(HttpServletRequest request,
            HttpServletResponse response) throws ServletException, IOException {
        doPost(request, response);
    }

    /**
     * @see javax.servlet.http.HttpServlet#doPost(javax.servlet.http.HttpServletRequest,
     *      javax.servlet.http.HttpServletResponse)
     */
    protected void doPost(HttpServletRequest request,
            HttpServletResponse response) throws ServletException, IOException {
        String contentType = null;
        Document doc = null;
        String xsl = null;
        contentType = (String) request.getAttribute(""contenttype"");
        if (contentType == null)
            contentType = defContentType;
        doc = (Document) request.getAttribute(""xml-doc"");
        xsl = (String) request.getAttribute(""xsl-file-name"");
        String path = getServletContext().getRealPath(""/WEB-INF/xsl/"");
        // Output goes in the response stream.
        PrintWriter out = response.getWriter();
        if (doc == null || xsl == null) {
            String errorMsg = """";
            if (doc == null)
                errorMsg += ""XML document missing from call to OutputGenerator&lt;br /&gt;"";
            if (xsl == null)
                errorMsg += ""XSL filename missing from call to OutputGenerator&lt;br /&gt;"";
            StringBuffer buf = generateError(errorMsg);
            log(errorMsg);
            out.write(buf.toString());
            return;
        }
        // The servlet returns HTML.
        response.setContentType(contentType);
        if (cache == null)
            cache = new HashMap();
        Transformer t = null;
        // Get the XML input document and the stylesheet.
        Source xmlSource = new DOMSource(doc);
        // Perform the transformation, sending the output to the response.
        // XSL processing can be time consuming, but this is mainly due to the
        // overhead
        // of compiling the XSL sheet.
        // By caching the compiled sheets, the process is speeded up
        // dramatically.
        // Time saved on subsequent requests can be 99% or more (hundreds of
        // milliseconds).
        try {
            // check if the XSL sheet was found in cache, and use that if
            // available
            if (cache.containsKey(xsl))
                t = (Transformer) cache.get(xsl);
            else {
                // otherwise, load the XSL sheet from disk, compile it and store
                // the compiled
                // sheet in the cache
                TransformerFactory tFactory = TransformerFactory.newInstance();
                Source xslSource = new StreamSource(
                        new File(path, xsl + "".xsl""));
                t = tFactory.newTransformer(xslSource);
                cache.put(xsl, t);
            }
            // perform the XSL transformation of the XML Document into the
            // servlet outputstream
            t.transform(xmlSource, new StreamResult(out));
        } catch (TransformerConfigurationException e) {
            e.printStackTrace();
            throw new ServletException(e);
        } catch (TransformerFactoryConfigurationError e) {
            e.printStackTrace();
            throw new ServletException(e);
        } catch (TransformerException e) {
            e.printStackTrace();
            throw new ServletException(e);
        }
    }

    private StringBuffer generateError(String error) throws IOException {
        String path = getServletContext().getRealPath(""/WEB-INF/templates/"");
        File f = new File(path, ""callerror.html"");
        FileInputStream fs = new FileInputStream(f);
        BufferedInputStream bis = new BufferedInputStream(fs);
        int numBytes = bis.available();
        byte b[] = new byte[numBytes];
        // read the template into a StringBuffer (via a byte array)
        bis.read(b);
        StringBuffer buf = new StringBuffer();
        buf.append(b);
        int start = buf.indexOf(errorTemplate);
        int end = start + errorTemplate.length();
        // replace placeholder with errormessage
        // (will automatically adjust to take longer or shorter data into
        // account)
        buf.replace(start, end, error);
        return buf;
    }
}

----------------

package com;

import java.io.*;
import java.awt.*;
import java.util.*;
import java.awt.image.*;
import org.jfree.data.*;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.chart.*;
import org.jfree.chart.plot.*;
import org.jfree.chart.urls.*;
import org.jfree.chart.entity.*;
import javax.servlet.http.*;

public class Pie3DDemo {

  public Pie3DDemo() {
  }

  private DefaultPieDataset getDataset() {
    // categories...
    String[] section = new String[] {
      ""Jan"",""Feb"",""Mar"",""Apr"",""May"",""Jun"",
      ""Jul"",""Aug"",""Sep"",""Oct"",""Nov"",""Dec""
   };

    // data...
    double[] data = new double[section.length];
    for (int i = 0; i &lt; data.length; i++) {
    data[i] = 10 + (Math.random() * 10);
    }

    // create the dataset...
    DefaultPieDataset dataset = new DefaultPieDataset();
    for (int i = 0; i &lt; data.length; i++) {
    dataset.setValue(section[i], data[i]);
    }
    return dataset;
  }

  public String getChartViewer(HttpServletRequest request, HttpServletResponse response) {
    DefaultPieDataset dataset = getDataset();
    // create the chart...
    JFreeChart chart = ChartFactory.createPieChart(
      ""Pie3D Chart Demo"",  // chart title
      dataset,             // data
      true,                // include legend
      true,
      false
    );

    // set the background color for the chart...
    chart.setBackgroundPaint(Color.cyan);
    PiePlot plot = (PiePlot) chart.getPlot();
    plot.setNoDataMessage(""No data available"");

    // set drilldown capability...
    plot.setURLGenerator(new StandardPieURLGenerator(""Bar3DDemo.jsp"",""section""));
    plot.setLabelGenerator(null);

    // OPTIONAL CUSTOMISATION COMPLETED.

    ChartRenderingInfo info = null;
    HttpSession session = request.getSession();
    try {

      //Create RenderingInfo object
      response.setContentType(""text/html"");
      info = new ChartRenderingInfo(new StandardEntityCollection());
      BufferedImage chartImage = chart.createBufferedImage(640, 400, info);

      // putting chart as BufferedImage in session, 
      // thus making it available for the image reading action Action.
      session.setAttribute(""chartImage"", chartImage);

      PrintWriter writer = new PrintWriter(response.getWriter());
      ChartUtilities.writeImageMap(writer, ""imageMap"", info, false);
      writer.flush();

    }
    catch (Exception e) {
       // handel your exception here
    }

    String pathInfo = ""http://"";
    pathInfo += request.getServerName();
    int port = request.getServerPort();
    pathInfo += "":""+String.valueOf(port);
    pathInfo += request.getContextPath();
    String chartViewer = pathInfo + ""/servlet/ChartViewer"";
    return chartViewer;
  }
}

------------

package com;

import java.io.IOException;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

//import org.apache.xerces.dom.DocumentImpl;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

/**
 * @author Jeroen Wenting
 */
public class XSLTest extends HttpServlet {
    /**
     * 
     */
    private static final long serialVersionUID = 1L;

    /**
     * @see javax.servlet.http.HttpServlet#doGet(javax.servlet.http.HttpServletRequest,
     *      javax.servlet.http.HttpServletResponse)
     */
    protected void doGet(HttpServletRequest arg0, HttpServletResponse arg1)
            throws ServletException, IOException {
        doPost(arg0, arg1);
    }

    /**
     * @see javax.servlet.http.HttpServlet#doPost(javax.servlet.http.HttpServletRequest,
     *      javax.servlet.http.HttpServletResponse)
     */
    protected void doPost(HttpServletRequest request,
            HttpServletResponse response) throws ServletException, IOException {
        String xslFilename = ""test"";//getInitParameter(""xslfile-html"");
        //String beanName = getInitParameter(""formbean"");
        String contentType = ""text/html; charset=UTF-8"";//getInitParameter(""contenttype"");
        request.setAttribute(""xsl-file-name"", xslFilename);
        try {
            if (contentType != null)
                request.setAttribute(""contenttype"", contentType);
            DocumentBuilderFactory factory = DocumentBuilderFactory
                    .newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();
            // Document doc = new DocumentImpl();
            Document doc = builder.newDocument();
            Element root = doc.createElement(""ehwa-doc"");
            // generate XML for transformation
            Element elem = doc.createElement(""focuscontrol"");
            elem.appendChild(doc.createTextNode(""alert('loaded')""));
            root.appendChild(elem);
            elem = doc.createElement(""data"");
            elem.appendChild(doc.createTextNode(""Hello World!""));
            root.appendChild(elem);
            doc.appendChild(root);
            request.setAttribute(""xml-doc"", doc);
            RequestDispatcher rd = request
                    .getRequestDispatcher(""/servlet/generator"");
            rd.forward(request, response);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

--------

package jstl;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.servlet.jsp.JspException;
import javax.servlet.jsp.JspWriter;

import java.io.IOException;
import javax.servlet.jsp.tagext.SimpleTagSupport;
import javax.servlet.jsp.tagext.TagSupport;

import com.Pie3DDemo;

public class ChartTagClass extends SimpleTagSupport {

    private String user;
    private String chartType;
    private HttpServletRequest request;
    private HttpServletResponse response;
    private Pie3DDemo myChart = new Pie3DDemo();
    private String chartViewer;

    public void setUser(String user) {
    this.user = user;
    }

    public void setChartType(String chartType) {
    this.chartType = chartType;
    }

    public void setReq(HttpServletRequest request) {
    this.request = request;
    }

    public void setRes(HttpServletResponse response) {
    this.response = response;
    }

    public void doTag() throws JspException, IOException {
    chartViewer = myChart.getChartViewer(request, response);        
    getJspContext().getOut().write(""&lt;img src=\""""+chartViewer+""\"" border=0 usemap=\""#imageMap\""&gt;"");  
    }

    public String getChart() {
    return ""Hai"";
    }
}

--------

&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;taglib version=""2.0"" xmlns=""http://java.sun.com/xml/ns/j2ee"" 
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" 
  xsi:schemaLocation=""http://java.sun.com/xml/ns/j2ee web-jsptaglibrary_2_0.xsd""&gt;
  &lt;tlib-version&gt;1.2&lt;/tlib-version&gt;
    &lt;short-name&gt;ct&lt;/short-name&gt;
    &lt;uri&gt;charts.tld&lt;/uri&gt;
    &lt;tag&gt;
    &lt;name&gt;chart&lt;/name&gt;
    &lt;tag-class&gt;jstl.ChartTagClass&lt;/tag-class&gt;
    &lt;body-content&gt;empty&lt;/body-content&gt;
    &lt;info&gt;This Tag Displays charts&lt;/info&gt;
    &lt;attribute&gt;
        &lt;name&gt;user&lt;/name&gt;
        &lt;required&gt;true&lt;/required&gt;
        &lt;description&gt;UserName&lt;/description&gt;
        &lt;rtexprvalue&gt;true&lt;/rtexprvalue&gt;
    &lt;/attribute&gt;
    &lt;attribute&gt;
        &lt;name&gt;chartType&lt;/name&gt;
        &lt;required&gt;true&lt;/required&gt;
        &lt;description&gt;Chart type&lt;/description&gt;
        &lt;rtexprvalue&gt;true&lt;/rtexprvalue&gt;
    &lt;/attribute&gt;    
    &lt;attribute&gt;
        &lt;name&gt;req&lt;/name&gt;
        &lt;required&gt;true&lt;/required&gt;
        &lt;description&gt;Chart request&lt;/description&gt;
        &lt;rtexprvalue&gt;true&lt;/rtexprvalue&gt;
    &lt;/attribute&gt;  
    &lt;attribute&gt;
        &lt;name&gt;res&lt;/name&gt;
        &lt;required&gt;true&lt;/required&gt;
        &lt;description&gt;Chart response&lt;/description&gt;
        &lt;rtexprvalue&gt;true&lt;/rtexprvalue&gt;
    &lt;/attribute&gt;          
    &lt;/tag&gt;
&lt;/taglib&gt;

-----------


&lt;%@ page language=""java"" contentType=""text/html; charset=ISO-8859-1"" pageEncoding=""ISO-8859-1""%&gt;
&lt;%@ taglib prefix=""c"" uri=""charts.tld"" %&gt;
&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd""&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Pie Chart Demo&lt;/title&gt;
&lt;/head&gt;


&lt;body&gt;
&lt;c:chart user=""ilaya"" chartType=""pie"" req=""&lt;%=request%&gt;"" res=""&lt;%=response%&gt;""/&gt;

&lt;/body&gt;
&lt;/html&gt;

--------


&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;

&lt;web-app xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns=""http://java.sun.com/xml/ns/javaee"" xmlns:web=""http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"" xsi:schemaLocation=""http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"" id=""WebApp_ID"" version=""2.5""&gt;

  &lt;display-name&gt;XSLT&lt;/display-name&gt;
  &lt;welcome-file-list&gt;
    &lt;welcome-file&gt;index.html&lt;/welcome-file&gt;
    &lt;welcome-file&gt;index.htm&lt;/welcome-file&gt;
    &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;
    &lt;welcome-file&gt;default.html&lt;/welcome-file&gt;
    &lt;welcome-file&gt;default.htm&lt;/welcome-file&gt;
    &lt;welcome-file&gt;default.jsp&lt;/welcome-file&gt;
  &lt;/welcome-file-list&gt;

  &lt;servlet&gt;
    &lt;servlet-name&gt;Servlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;com.XSLTest&lt;/servlet-class&gt;
  &lt;/servlet&gt;

  &lt;servlet-mapping&gt;
    &lt;servlet-name&gt;Servlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/servlet&lt;/url-pattern&gt;
  &lt;/servlet-mapping&gt;

    &lt;servlet&gt;
    &lt;servlet-name&gt;ServletG&lt;/servlet-name&gt;
    &lt;servlet-class&gt;com.Generator&lt;/servlet-class&gt;
  &lt;/servlet&gt;

  &lt;servlet-mapping&gt;
    &lt;servlet-name&gt;ServletG&lt;/servlet-name&gt; 
    &lt;url-pattern&gt;/servlet/generator&lt;/url-pattern&gt;
  &lt;/servlet-mapping&gt;

    &lt;servlet&gt;
    &lt;servlet-name&gt;ChartViewer&lt;/servlet-name&gt;
    &lt;servlet-class&gt;com.ChartViewer&lt;/servlet-class&gt;
  &lt;/servlet&gt;
  &lt;servlet-mapping&gt;
    &lt;servlet-name&gt;ChartViewer&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/servlet/ChartViewer&lt;/url-pattern&gt;
  &lt;/servlet-mapping&gt;


&lt;/web-app&gt;

-------

&lt;?xml version=""1.0""?&gt;
&lt;xsl:stylesheet xmlns:xsl=""http://www.w3.org/1999/XSL/Transform""
    version=""1.0""&gt;
    &lt;xsl:output method=""html"" indent=""yes"" /&gt;
    &lt;xsl:template match=""ehwa-doc""&gt;
        &lt;html&gt;
            &lt;body&gt;
                &lt;xsl:attribute name=""onload""&gt;&lt;xsl:apply-templates
                    select=""focuscontrol"" /&gt;&lt;/xsl:attribute&gt;
                &lt;form&gt;
                    &lt;input type=""hidden"" value=""1"" name=""runset"" id=""runset"" /&gt;
                &lt;/form&gt;
            &lt;/body&gt;
        &lt;/html&gt;
    &lt;/xsl:template&gt;
    &lt;xsl:template match=""focuscontrol""&gt;
        &lt;xsl:value-of select=""."" /&gt;
    &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;

-----------


&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd""&gt;
&lt;html xmlns=""http://www.w3.org/1999/xhtml"" lang=""en-US"" xml:lang=""en-US""&gt;
&lt;head&gt;
&lt;title&gt;&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
+++ERRORS+++
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
"
"12312750","<p><code>Process.waitFor()</code> is useless for some native system command.</p>

<p>You need to get the process's output to determine if it is returned.</p>

<p>I wrote a sample code for you</p>

<pre><code>/**
 * 
 * @param cmdarray      command and parameter of System call
 * @param dir           the directory execute system call
 * @param returnImmediately   true indicate return after system call immediately; 
     *                          false otherwise.
 *  if set true, the returned call result does not have reference value
 * @return the return code of system call , default is -1
 */
public static int systemCall(String[] cmdarray,File dir,boolean returnImmediately)
{
  int result = -1;
  try {
   Process p = Runtime.getRuntime().exec(cmdarray,null,dir);
  if(!returnImmediately)
  {
   java.io.InputStream stdin = p.getInputStream();
   java.io.InputStreamReader isr = new java.io.InputStreamReader(stdin);
   java.io.BufferedReader br = new java.io.BufferedReader(isr);
   String line = null;
   while ( (line = br.readLine()) != null)
      System.out.println(line);
      }
      try{result =  p.exitValue();}
        catch(Exception ie){;}
      } catch (IOException e) {
        e.printStackTrace();}

  return result;
}

public static void main(String[] argc){             
  String[] cmdarray = {""jar"",""cvf"",""s2.jar"",""*""};
  File dir = new File(""D:\\src\\struts-2.3.1"");
  int k = systemCall(cmdarray,dir,true);
  System.out.println(""k=""+k);
 }
</code></pre>
"
"12339256","<p>""firstString == thirdString"" returns false.</p>

<p>The method intern ""returns a canonical representation for the string object."" 
If you assign the interned string:</p>

<pre><code>thirdString=thirdString.intern();
</code></pre>

<p>last ""firstString == thirdString"" returns true</p>
"
"9058325","<p>In CSharp , you can use linq to implement it more easier. </p>

<pre><code>var result = doubleArray.Where(p =&gt; p &lt; inputValue).OrderByDescending(p =&gt; p).FirstOrDefault();
</code></pre>
"
"11034180","<p>Your problem lies in the fact the the main thread terminates after the setup process and therefore terminates all other threads.</p>

<p>An elegant way to wait for threads to finish their work is to use a high-level synchronization  aid, like <a href=""http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/CountDownLatch.html"" rel=""nofollow"">CountDownLatch</a>.</p>

<p>In this case, you could rewrite your init code like this:</p>

<pre><code>public void init() throws InterruptedException {
    ...
    producer = r.createThreads();
    r.startThreads();
    consumer = s.createThreads();
    s.startThreads();
    ...
    producer.getCountDownLatch().await();      // wait for all producers to finish
    consumer.getCountDownLatch().await();      // wait for all consumers to finish 
    // note: you could also encapsulate the latch and internally delegate the await
    // producer.await(); // nicer to read
}
</code></pre>

<p>On your Sender and Receiver classes, you create and maintain the CountDownLatch:</p>

<pre><code>class Sender {
    final CountDownLatch sync;
    public Sender (int threadCount) {
        sync = new CountDownLatch(threadCount);
        ...
    }
    public CountDownLatch getCountDownLatch() {
        return sync;
    }
    // alternative
    public boolean await() {
        return sync.await();
    }
} 
</code></pre>

<p>When you create the threads, you pass the countDownLatch to each runnable.
When they are done working, you decrement the latch:</p>

<pre><code>class MyRunnable implements Runnable {
    private final CountDownLatch latch;
    public MyRunnable(CountDownLatch latch) {
        this.latch = latch;
        ...
    } 
    public void run() {
        // DO STUFF
        latch.countDown();
    }
}
</code></pre>

<p>With this synchronization process in place, your program will only terminate when all producers and consumers have done their job.
Additionally. the <code>await</code> method can take a timeout as argument, sothat you can ensure program termination within some boundaries.
e.g. let all producers work, but wait only 5 minutes for the consumers: </p>

<pre><code>public void init() {
    ...
    producer.getCountDownLatch().await();      // wait for all producers to finish
    boolean allFinished = consumer.getCountDownLatch().await(5, TimeUnit.MINUTES);      // wait 5 minutes for all consumers to finish.
    if (!allFinished) {
        // alert that not all consumers ended on time
    }
    ...
}
</code></pre>
"
"9076300","<p>One possible way to think of it, is because of wildcards in Generics.</p>

<p>Imagine if you had, </p>

<pre><code>List&lt;? extends Serializable&gt; list = new ArrayList&lt;&gt; extends Serializable&gt;();
</code></pre>

<p>(Assuming that all the strings are in the <code>list</code>). If the List API had <code>List.lastIndexOf(E e)</code>, then literally, with our example above, this would make it <code>List.lastIndexOf(? extends Serializable)</code> and you couldn't really pass an object other than <code>null</code>.</p>

<p>This is the reason why they put <code>Object</code> as parameter type. One should just implement the object's <code>equals()</code> method correctly for <code>lastIndexOf()</code> search.</p>
"
"11834351","<p>Add static to the class declaration of item, like <code>static class Item {}</code></p>
"
"9084290","<p>Its better to build the tree first and then display since this can accomodate any changes later. You can create a Node object like</p>

<pre><code>class Node{
  // level deep of this node, can use to format the display like
  // 4 level deep will have four leading spaces
  private int level;
  // the actual text
  private String text;
  // Parent Node for this, can be null if this is the root node, set this when creating
  private Node parent;
  // children of this Node
  private List&lt;Node&gt; children; 
  // Getters and setters for the above properties....
}
</code></pre>
"
"9088155","<p>If you need to specify a method that takes a template parameter type, the template comes before the return type:</p>

<pre><code>&lt;T&gt; void foo(T param) { ... }
</code></pre>
"
"11858911","<p>I'm pretty sure this should solve your problem:</p>

<pre><code>    int largestNumber = Integer.MIN_VALUE;
    int smallestNumber = Integer.MAX_VALUE; 

    for(int i = 0; i &lt; yourArray.Length; i++)
    {
        if(yourArray[i] &gt; largestNumber)
            largestNumber = yourArray[i];

        if(yourArray[i] &lt; smallestNumber)
            smallestNumber = yourArray[i];

    }

    int biggestDifference = largestNumber - smallestNumber ;
</code></pre>
"
"12434932","<p>Even if your loops and what not work might work as is (and i really don't know because I didn't want to waste my time...others have already answered the question asked), your loops would never work correctly because of your lack of braces...</p>

<p>Since you have multiple lines inside your for loops and if statement you have to have them..</p>

<pre><code>for(i = 0; i &lt;=n; i++) { //for items of an array

    for( j = V1; i &gt;= 0; i--) { //for items in v1

        for( k = V2; j &gt;= 0; j--) { //for itemns in v2

            if(v1[i] &lt;= j &amp;&amp; v2[i] &lt;= k) {
                int V1 = v1[i];
                int V2 = v2[i];
            }
        }
    }
}
</code></pre>

<p>Is the only way that would get close to working...and I doubt it will even then. I can tell you now that 3 for loops are not required for this problem...</p>

<p>As a matter of fact, @Sujay already gave one way to do it with just 2.</p>
"
"9106427","<pre><code>int N;
function num_paths(intx,int y)
{
    int[][] arr = new int[N][N];
arr[N-1][N-1] = 0;
for(int i =0;i&lt;N;i++)
{
    arr[N-1][i]=1;
    arr[i][N-1]=1;
}
for(int i = N-2;i&gt;=0;i--)
{
    for(int j=N-2;j&gt;=0;j--)
    {
        arr[i][j]= arr[i+1][j]+arr[i][j+1];
    }
}
return arr[0][0];
 }
</code></pre>
"
"11176046","<p>put this entry in manifest with activity and Override onConfigurationChanged function</p>

<pre><code>android:configChanges=""orientation|keyboardHidden|screenSize""

@Override
public void onConfigurationChanged(Configuration newConfig) {
   // super.onConfigurationChanged(newConfig);


}
</code></pre>

<p>this will stop re-creation of the activity on the orientation change......</p>
"
"11176051","<p>Make your activity to look something like this in manifest</p>

<pre><code>  &lt;activity
                android:name="".Hello""
                android:label=""@string/app_name""
                android:screenOrientation=""portrait""   &lt;-- Screen will be forced to have portrait
                android:configChanges=""orientation|keyboardHidden|screensize"" &gt; &lt;-- No Restart in these cases
</code></pre>

<p>ScreenSize attribute seems to be added in 4.0 so don't mentioned it if you are ruuning below 4.0.</p>
"
"9146276","<p>As you didn't give us very much information, I'm assuming the language you're writing the code in is C#.
First of all: Prefer System.Collections.Generic.List over an ArrayList.
Secondly: One way would be to loop through every item in the list and check whether it contains ""How"". Another way would be to use LINQ. Here's a quick example that filters out every item which doesn't contain ""How"":</p>

<pre class=""lang-cs prettyprint-override""><code>var list = new List&lt;string&gt;();
list.AddRange(new string[] {
    ""How are you?"",
    ""How you doing?"",
    ""Joe"",
    ""Mike"", });

foreach (string str in list.Where(s =&gt; s.Contains(""How"")))
{
    Console.WriteLine(str);
}
Console.ReadLine();
</code></pre>
"
"12533574","<p>Why do you have differentiation between the way you're using gmail and yahoo at your code? <BR>
Have you tried using <code>start.tls.enable=true</code> for yahoo as well, instead of the two lines with the SocketFactory?</p>
"
"12537740","<pre><code>while (rs.next()) {
        al = new ArrayList();

        al.add(rs.getString(""product_id""));
        al.add(rs.getString(""product_name""));
        al.add(rs.getString(""product_description""));
        al.add(rs.getDouble(""product_price""));
    }
</code></pre>

<p>you are initializing the arraylist inside the loop. That can be an issue too, if not, might make issues if that is not what you are expecting. The answer is given by others I guess</p>
"
"11981482","<pre><code>    String string = ""1,234,567"";
    String[] splits = string.trim().split("","");
    int num = 0;
    for (String split : splits)
    {
        num = (num * 1000) + Integer.parseInt(split.trim());
    }
    System.out.println(num); // prints 1234567
</code></pre>
"
"9189087","<p>Lets say you create 3 thread: T1, T2, T3. and following is the looping construct, for eaxmple</p>

<pre><code>for(int i=0; i&lt;100; i++)
{
    for(int j=0; j&lt;100; j++)
    {
        for(int k=0; k&lt;100; k++)
        {
            // do some processing.
        }
    }
}
</code></pre>

<p>Modify the increment part as <code>i += no. of threads</code>. In this case it will be <code>i += 3</code></p>

<p>Thus, the initial values of i, j, k will vary for each thread.</p>

<p>For T1: <code>i = 0;</code></p>

<p>For T2: <code>i = 1;</code></p>

<p>For T3: <code>i = 2;</code></p>

<p>Similary the loop limit can be set.</p>
"
"12541284","<p>First off, posting the error given by eclipse would be helpful.</p>

<p>But in any case, your syntax errors are stemming from the fact that you aren't defining the datatype of your variables, such as x, z, s, etc.</p>

<p>For example,</p>

<pre><code>int x = a;
int z = b;
</code></pre>

<p>etc.</p>
"
"11289450","<p>I am sure, that once you generated UUID for a record, it will be static. Thus there is no point in mapping UUID as an object to database and then converting it back to String on retrieval. </p>

<p><strong>Use UUID as a String</strong>:</p>

<pre><code>@Id
@Column(name = ""customer_id"")
private String id;

//getter and setter

public void setId(UUID id) {
    this.id = id.toString();
}
</code></pre>

<p>Also there are some things to consider:</p>

<ol>
<li>Whether to use ID, UUID or both. There is <a href=""http://www.codinghorror.com/blog/2007/03/primary-keys-ids-versus-guids.html"" rel=""nofollow"">quick discussion over this</a>.</li>
<li>Using 'uuid' for names rather than 'id', it is misleading.</li>
<li>Removing '-' signs from UUID, save 4 bytes.</li>
<li>Generating UUID in @PrePersist section if you use Spring.</li>
</ol>
"
"12553546","<p><a href=""http://docs.oracle.com/javase/1.4.2/docs/api/java/lang/ArrayIndexOutOfBoundsException.html"" rel=""nofollow"">ArrayIndexOutOfBounds</a> exception occur when you are trying to extract the variable at a wrong position in the array.</p>

<p>When you run a program in java after compilation e.x.<code>javac hello</code> and then executing the class file by <code>java hello</code> , the 0th position of the <code>args[0]</code> will be the filename i.e. <code>hello</code> in this case.</p>

<p>For you to successfully extract argument issued at the run time you have to use n+1 position in the array. For example. If I am running my program as <code>java hello argument</code> I'll be using <code>args[1]</code> if I wish to use the issued variable <code>argument</code> at run time and so on for extracting the associated text.</p>

<p>If you are unsure whether your statement will generate an exception or not, it is always safe to use <code>try &amp; catch</code> block .Read - <a href=""http://docs.oracle.com/javase/tutorial/essential/exceptions/"" rel=""nofollow"">Exception Handling</a></p>
"
"12585811","<p>None of the given answers remove duplicates from the final result, they just remove the duplication. So if a string is present twice it will still be present in the final result, but just the one time. If thats not required, well yeah I have just wasted five minutes ...</p>

<pre><code> public Map&lt;String, String&gt; countOccurences(List&lt;String&gt; source){
       Map&lt;String, Integer&gt; result =   new HashMap&lt;&gt;(source.size());
        int temp =0;
        for (String value : source) {
            if(result.containsKey(value)){
                temp = result.get(value);
                temp++;
                result.put(value, temp);
                temp = 0;
            }
            else {
                result.put(value, 1);
            }
        }
    }
    public List&lt;String&gt; sublistSingles(Map&lt;String, Integer&gt; results){
        List&lt;String&gt; duplicatesRemoved = new ArrayList&lt;&gt;(results.size());
        for(Map.Entry&lt;String, Integer&gt; result:results.entrySet()){
            if(result.getValue().equals(1)){
              duplicatesRemoved.add(result.getKey());
            }
        }
        return duplicatesRemoved;
    }
</code></pre>
"
"12591279","<p>you can separate sort order &amp; UI data from other bulky data in each entity. the later can remain unchanged.</p>

<p>hmm, if you have this:</p>

<pre><code>entitles = [bigdata1, bigdata2, bigdata3, ...]
order_numbers = [2, 3, 1, ...]
</code></pre>

<p>order_numbers can be the result of a sort or arbitrarily user defined values.</p>

<p>then you have</p>

<pre><code>display_order = [2, 0, 1, ...]
</code></pre>

<p>means bigdata3 is displayed first. If UI wants to change the orders in anyway, only order_numbers and display_order need changes, not entitles. This is my understanding.</p>
"
"12160130","<p>One possible reason for this could be <code>click()</code> method is not able to dispatch <code>click</code> event on every element.</p>

<p>Hence, you could explicitly fire <code>click</code> event on the element you are trying to click.</p>
"
"12165089","<pre><code>import java.util.Arrays;

Arrays.sort (int [])
Arrays.sort (String [])
</code></pre>

<p>this will sort array of Strings.</p>
"
"12634024","<p>1.Rather than using String Class use String Buffer or String Builder which is a mutable class. On the other hand, String Class is immutable. You can use String Buffer like</p>

<ol>
<li><p><code>String Buffer stbuffer = new String Buffer();</code></p>

<pre><code>stbuffer.append(""insert into "");
stbuffer.append(""&lt;tablename&gt; "");
stbuffer.append(""&lt;fields &gt;"");
stbuffer.append("" values"");
stbuffer.append(""(+"");
stbuffer.append(String);
stbuffer.append("")"");  ....etc
</code></pre></li>
<li><p>You can get the final string representation using <code>stbufffer.toString();</code> </p></li>
<li><p>You can insert this type of queries to exceute <code>update()</code> methods like <code>ins.executeUpdate(stbuffer.toString);</code></p></li>
<li><p>You can also use it like this for Insert statement and also for  Prepared Statement </p></li>
</ol>
"
"11334025","<p><strong>EDIT</strong> a more detailed answer.</p>

<p>The problem is ... </p>

<p><strong>You wrote</strong>:</p>

<p><strong>It is sorted by created time and fileCreatedTime field in FileObject I get from system time when detect this file:</strong>
....</p>

<p><strong>thread_1 is a listener</strong> of hard disk to detect a new file created. We use WatchService api in Java 7. When a new file <strong>is created by another program</strong>. ...  <strong>thread_1 detects and get it</strong> and <strong>put it to a PriorityBlockingQueue ex</strong>: </p>

<ul>
<li>The create time and the ""file writing finished time"", can be very different. (depending on the file size).</li>
</ul>

<p><strong>for example:</strong></p>

<p>Open a File manager. Start downloading a about 60 mb File. Note the Create time. After about 3 minutes look at the final time.</p>

<p>to detect a new file, looking at the create time is the <strong>wrong moment</strong> to ""<strong>put it to a PriorityBlockingQueue ex</strong>:""</p>

<p>thraed_1 have to wait until the file writing has <strong>finished</strong>. And then he can put it to ""<strong>a PriorityBlockingQueue ex</strong>:"" </p>

<p><strong>How can I detect that the write is completed on a file ?</strong></p>

<p>3 not too complicated options</p>

<ul>
<li>a.) Compare the file is created and the file is ready time.
<strong>or</strong>   </li>
<li>b.) Observe that the size of the file is growing steadily. If the
file is finished it stops growing.
<strong>or</strong>   </li>
<li>c.) Try to move it to a temp folder.</li>
</ul>

<p><strong>What would you prefer ?</strong></p>

<p>I would prefer solution c.</p>

<p>A file opened for writing can not be moved. After the <strong>3rd party program</strong> closes the file it can be moved. </p>

<p><strong>The necessary steps.</strong></p>

<ul>
<li>thread_1 is watching for created files by a <strong>3rd party program</strong>.</li>
<li>thread_1 trying to move it to a xyztmp folder ( every 10 or 20 or ... seconds).</li>
<li>thread_1 looking for new incoming files in the 
xyztmp folder and put it to a PriorityBlockingQueue ex.</li>
</ul>

<hr>

<p><strong>solution b. is more complicated.</strong></p>

<p>thread_1 put the incoming filenames and the size in a control array to compare 3-5 times.(every 5 seconds or more).</p>

<p>Array</p>

<pre><code>(filenamexyz.dat, size1, size2, size3, ...).
(filenameabc.dat, size1, size2, size3, ...).
(filenamefgh.dat, size1, size2, size3, ...).
....
</code></pre>

<p>If a file identified by name every 5 comparative sizes are the same the <strong>3rd party program</strong> has finished writing to this file.</p>

<p>Now it can be put to a PriorityBlockingQueue ex: </p>

<p><strong>Let's look step by step</strong></p>

<p>We assume thread_2 started when the list.size is 2 !</p>

<ul>
<li>3rd party program starts writing files one by one.</li>
<li>3rd party program starts writing FILE_1.</li>
<li>thread_1 detects created FILE_1, put it in the list.</li>
<li>3rd party program finished writing FILE_1.</li>
<li>3rd party program starts writing FILE_2.</li>
<li>thread_1 detects created FILE_2, put it in the list.</li>
<li>if(priorityBlockingQueue.size) > 1) TRUE</li>
<li>thread_2 starts with reading and processing first file in the list FILE_1.</li>
</ul>

<hr>

<ul>
<li>3rd party program finished writing FILE_2.</li>
<li>3rd party program starts writing FILE_3.</li>
<li>thread_1 detects created FILE_3, put it in the list.</li>
<li>thread_2 finshed processing FILE_1.</li>
<li>thread_2 starts with next file in the list FILE_2.</li>
</ul>

<hr>

<ul>
<li>3rd party program finished writing FILE_3.</li>
<li>3rd party program starts writing FILE_4.</li>
<li>thread_1 detects created FILE_4, put it in the list.</li>
<li>thread_2 finshed processing FILE_2.</li>
<li><p>thread_2 starts with next file in the list FILE_3.</p>

<p>NOW THE TROUBLE STARTS</p></li>
</ul>

<hr>

<ul>
<li>3rd party program finished writing FILE_4.</li>
<li>3rd party program starts writing FILE_5. (FILE_5 Larger then FILE_4).</li>
<li>thread_1 detects created FILE_5, put it in the list.</li>
<li>thread_2 finshed processing FILE_3.</li>
<li>thread_2 starts with next file in the list FILE_4.</li>
<li><strong>thread_2 finshed processing FILE_4.</strong></li>
<li><strong>thread_2 starts with next file in the list FILE_5.</strong></li>
<li><strong>thread_2 finshed processing FILE_5.</strong></li>
<li>3rd party program finished writing FILE_5.</li>
</ul>

<p>If the file that the 3rd party program writes <strong>is larger and needs more time</strong> to write and thread_2 has finished reading the smaller FILE_4 .</p>

<p>thread_2 takes the next file out of the list - FILE_5, whether the file is ready to read or not.</p>

<p>FILE_5 is the file 3rd party program still writes.
FILE_5 is the file thread_2 is reading and processing. The bytes thread_2 <strong>reads are only</strong> the bytes <strong>3rd party program has written</strong> at this time.</p>
"
"12669669","<p>You could convert it to a list and then use the contains method</p>

<p>This will return true or false. You can use this in your if statement.</p>

<p>eg</p>

<pre><code>if (Arrays.asList('a', 'b', 'c').contains('c')) {
   System.out.print(""input might be a,b,d but not c"");
}
else {
   System.out.print(""input is c"");
}
</code></pre>

<p>(btw your code sample does not compile. <code>System</code> should have a capital letter)</p>
"
"12225084","<p>I think you want to remove specific object from list. If you  get index from your code</p>

<pre><code>int index = clients.get(this)
</code></pre>

<p>Then you can remove easily</p>

<pre><code>clients.remove(index);
</code></pre>

<p>or if you get object from list then remove</p>

<pre><code>clients.remove(object) // remove by object
</code></pre>
"
"12230696","<p>Use a try-catch like so:</p>

<pre><code>try {
    //code
} catch ( InterruptedException e) {
    //interrupted
}
</code></pre>

<p>I think that should do the trick, you could also keep a boolean variable on whether to exit, so they would check that variable, if it's true, stop</p>
"
"12682563","<p>This is basically a differ, take a look at this:</p>

<ul>
<li><a href=""http://en.wikipedia.org/wiki/Diff"" rel=""nofollow"">diff</a></li>
</ul>

<p>and the root algorithm:</p>

<ul>
<li><a href=""http://en.wikipedia.org/wiki/Longest_common_subsequence_problem"" rel=""nofollow"">Longest common subsequence problem</a></li>
</ul>

<p>Here's a sample Java implementation:</p>

<ul>
<li><a href=""http://introcs.cs.princeton.edu/java/96optimization/Diff.java.html"" rel=""nofollow"">http://introcs.cs.princeton.edu/java/96optimization/Diff.java.html</a></li>
</ul>

<p>which compares lines. The only thing you need to do is split by word instead of by line or alternatively put each word of both sentences in a separate line. </p>

<p>If e.g. on Linux, you can actually see the results of the latter option using <code>diff</code> program itself before you even write any code, try this:</p>

<pre><code>$ echo ""I want to delete unnecessary words on this simple sentence.""|tr "" "" ""\n"" &gt; 1
$ echo ""I want to delete words on this sentence.""|tr "" "" ""\n"" &gt; 2
$ diff -uN 1 2
--- 1   2012-10-01 19:40:51.998853057 -0400
+++ 2   2012-10-01 19:40:51.998853057 -0400
@@ -2,9 +2,7 @@
 want
 to
 delete
-unnecessary
 words
 on
 this
-simple
 sentence.
</code></pre>

<p>The lines with <code>-</code> in front are different (alternatively, it would show <code>+</code> if the lines were added into sentence B that were not in sentence A). Try it out to see if that fits your problem.</p>

<p>Hope this helps.</p>
"
"11397039","<p>All objects in Java are passed by reference (well, technically, the references to objects are passed by value, which is the cause of the effect in my second paragraph. In my opinion it's easier to think of primitives being passed by value and objects being passed by reference if you're new to Java, though). So if you add something to/remove something from your ArrayList in a method it is passed to, the update will be reflected everywhere else (assuming no multithreading/concurrency issues). However, if you assign a different ArrayList to a member of a class, that new ArrayList will replace the old one, so you'd want to hold a reference to the old one somewhere else if you want to keep using it.</p>

<p>Note, however, that when you pass an ArrayList into a method on its own (and are not referencing it as a member of a class), assigning a new/different ArrayList to that variable will not have an affect outside of the function. So if you pass in an ArrayList as <code>apple</code>, then assign a new ArrayList to <code>apple</code>, you can manipulate that new ArrayList as <code>apple</code>, but the old ArrayList will still be there once the method completes.</p>

<p>There's a bit more to it, but that's the basics.</p>
"
"11414147","<p><code>the problem is if I change the vector v1, the second v2 is changing too ...My goal is to keep the copy intact even if I change the source vector</code></p>

<p>This is because <code>Collections.copy(v2,v1)</code> make a <strong><em>sallow copy</em></strong> not <strong>deep copy</strong>.</p>

<p>Make <strong>deep copy</strong> of your <code>Vector</code>.</p>

<p>Apologize for previous answer.</p>

<p><strong>Edit:</strong> </p>

<p>I am assuming that your <code>vector</code> is containing objects of type <code>Serializable</code>. With this approach you can get a deep copy of your collection.</p>

<pre><code>static public Object deepCopy(Object oldObj) throws Exception {
    ObjectOutputStream oos = null;
    ObjectInputStream ois = null;
    try {
        ByteArrayOutputStream bos = new ByteArrayOutputStream(); // A
        oos = new ObjectOutputStream(bos); // B
        // serialize and pass the object
        oos.writeObject(oldObj); // C
        oos.flush(); // D
        ByteArrayInputStream bin = new ByteArrayInputStream(
                bos.toByteArray()); // E
        ois = new ObjectInputStream(bin); // F
        // return the new object
        return ois.readObject(); // G
    } catch (Exception e) {
        System.out.println(""Exception in ObjectCloner = "" + e);
        throw (e);
    } finally {
        oos.close();
        ois.close();
    }
}
</code></pre>
"
"12728859","<p>Class <a href=""http://joda-time.sourceforge.net/apidocs/org/joda/time/YearMonthDay.html"" rel=""nofollow"">YearMonthDay</a> is deprecated and you shouldn't use it. If you change to simple DateTime you can obtain the week day by calling:</p>

<pre><code>dateTime.getDayOfWeek();
</code></pre>

<p>For Friday it will be 5.</p>

<p>One of the approaches can be making a custom addDays method which should look something like that:</p>

<pre><code>addDays(DateTime dateTime, int days) {
    for(int i=0;i&lt;days;i++){
        dateTime.plusDays(1);
        if(dateTime.getDayOfWeek()==6) dateTime.plusDays(2); // if Saturday add 2 more days    }
}
</code></pre>
"
"12382800","<p>I have read that iterators are very helpful in Swing especially if you iterate through collection in <code>paintComponent(Graphics g)</code> method.</p>

<p>The benefit of iterators is that you can iterate through the same collection from multiple threads and you even remove an element of that collection using the method <code>remove()</code> while the collection is accessed concurrently elsewhere.</p>

<blockquote>
  <p>The behavior of an iterator is unspecified if the underlying
  collection is modified while the iteration is in progress in any way
  other than by calling this method.
  THIS means that if you modify the same collection concurrently then behavior of method remove is not defined. BUT method remove works well EVEN IF you traverse through the same collection concurrently while calling iterator.remove()!!! I have used this in my GUI.</p>
</blockquote>

<p>According to my experience it is necessary to use an iterator in the method <code>paintComponent</code> rather than cycle <code>for</code> or <code>for-each</code>!</p>
"
"11534171","<p>I'm not sure how java will handle this, but other languages will blow up horribly and die if you reference something across scopes like you're doing with <code>final int n</code> (since it goes out of scope when the loop stops).  Consider making it a field of the runnable object.  Also, you're synchronizing on the graphics object while you're doing all of the real work.  It's likely that you aren't getting any real performance increase from this.  You might benefit from explicitly checking if the object is on the screen in parallel which is a read only operation, adding on-screen objects to a set or collection of some other sort, and then rendering sequentially.</p>
"
"12790181","<p>In order to do what you want, I'd use atomic references:</p>

<pre><code>class PairHolder {
   public final ConcurrentMap map1;
   public final ConcurrentMap map2;
   public PairHolder(...) // set values here.
}

private AtomicReference&lt;PairHolder&gt; mapHolder = ... // initialize it somehow

do {
  PairHolder holder = mapHolder.get();
  ConcurrentMap map1 = holder.map1.clone()
  ConcurrentMap map2 = holder.map2.clone()
  newMap1.putIfAbsent(...);
  newMap2.putIfAbsent(...);
} while (!mapHolder.compareAndSet(holder, new PairHolder(newMap1,newMap2))
</code></pre>

<p>this way you alway will be sure, that mapHolder contains the reference to PairHolder, which in turn have two maps updated 100% atomically. At least CAS should guarantee this, however on multi-processor systems it might be false.</p>
"
"9536855","<p>What you want is called a hash. The easiest way would be to check out the <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#hashCode%28%29"" rel=""nofollow""><code>hashCode()</code></a> method from the JDK.</p>

<p>But that is not very secure (secure in this context means, that you have only a few collisions). For a better hash you can use <a href=""http://docs.oracle.com/javase/6/docs/api/java/security/MessageDigest.html"" rel=""nofollow"">MessageDigest</a>, with MD5 or SHA1.</p>
"
"9537605","<p>You can achieve this by Encryption of Java.</p>

<p>At first you need two jars:</p>

<ol>
<li><a href=""http://grepcode.com/snapshot/repo1.maven.org/maven2/org.bouncycastle/bcmail-jdk16/1.46"" rel=""nofollow"">bcmail-jdk16-1.46.jar</a></li>
<li><a href=""http://grepcode.com/snapshot/repo1.maven.org/maven2/org.bouncycastle/bcprov-jdk16/1.46"" rel=""nofollow"">bcprov-jdk16-1.46.jar</a></li>
</ol>

<p>Here is complete example of how to <a href=""http://en.wikipedia.org/wiki/Data_Encryption_Standard"" rel=""nofollow"">Data Encryption Standard</a> in Java:</p>

<pre><code>import java.io.UnsupportedEncodingException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;

import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;

import org.bouncycastle.util.encoders.Base64;


public class KeyGen {
    private SecretKey key;
    private Cipher ecipher;
    private Cipher dcipher;
    private static KeyGen keyGen;

    private KeyGen() throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException{
        key = KeyGenerator.getInstance(""DES"").generateKey();
        ecipher = Cipher.getInstance(""DES"");
        dcipher = Cipher.getInstance(""DES"");
        ecipher.init(Cipher.ENCRYPT_MODE, key);
        dcipher.init(Cipher.DECRYPT_MODE, key);
    }

    public static KeyGen getInstance() throws NoSuchAlgorithmException, InvalidKeyException, NoSuchPaddingException {
        if(keyGen == null) {
            keyGen = new KeyGen();
        }
        return keyGen;
    }

    public String encrypt(String str) throws UnsupportedEncodingException, IllegalBlockSizeException, BadPaddingException {
        byte[] utf8 = str.getBytes(""UTF8"");
        byte[] enc = ecipher.doFinal(utf8);
        return new String(Base64.encode(enc));
    }

    public String decrypt(String str) throws IllegalBlockSizeException, BadPaddingException, UnsupportedEncodingException {
        byte[] dec = Base64.decode(str);
        byte[] utf8 = dcipher.doFinal(dec);
        return new String(utf8, ""UTF8"");
    }

    public static void main(String[] args) throws InvalidKeyException, NoSuchAlgorithmException, NoSuchPaddingException, UnsupportedEncodingException, IllegalBlockSizeException, BadPaddingException {
        KeyGen keyGen = KeyGen.getInstance();
        String string = ""JOYMAA"";
        String enc = keyGen.encrypt(string);
        System.out.println(enc);
        String dec = keyGen.decrypt(enc);
        System.out.println(dec);
    }
}
</code></pre>

<p>Usage:</p>

<pre><code>KeyGen keyGen = KeyGen.getInstance();
String string = ""JOYMAA"";
String enc = keyGen.encrypt(string);
System.out.println(enc);
String dec = keyGen.decrypt(enc);
System.out.println(dec);
</code></pre>

<p>Hope this will help you.</p>
"
"12802382","<p>checked exception is just a syntax limit</p>

<p>code below from lombok <a href=""http://www.projectlombok.org/"" rel=""nofollow"">http://www.projectlombok.org/</a></p>

<p>you will get</p>

<p>Exception in thread ""main"" java.io.IOException
    at B.main(B.java:19)</p>

<pre><code>public static RuntimeException sneakyThrow(Throwable t) {
    if (t == null) throw new NullPointerException(""t"");
    B.&lt;RuntimeException&gt;sneakyThrow0(t);
    return null;
}

@SuppressWarnings(""unchecked"")
private static &lt;T extends Throwable&gt; void sneakyThrow0(Throwable t) throws T {
    throw (T)t;
}

public static void main(String[] args) {
    throw sneakyThrow(new IOException());
}
</code></pre>
"
"12814307","<p>I tried this two line to convert string into double</p>

<blockquote>
<pre><code>NumberFormat nf = NumberFormat.getInstance()
dounum=nf.parse(""24,000.50"").toDouble()
</code></pre>
</blockquote>
"
"12818948","<p><code>this</code> refers to your current instance class. <code>this</code> is usually used for your accessors. E.g.:</p>

<pre><code>public void Sample{
 private String name;

 public setName(String name){
  this.name = name;
 }
}
</code></pre>

<p>Notice that <code>this</code> was used to point specifically to the class <code>Sample</code>'s <strong>variable</strong> name, instead of the <strong>parameter</strong> in the method <code>setName</code>.</p>
"
"9583200","<p>Well, you can with a little bit of work like this</p>

<pre><code>    Set&lt;String&gt; s = new HashSet&lt;String&gt;();
    Random r = new Random();
    String res = s.toArray(new String[0])[r.nextInt(s.toArray().length)];
</code></pre>

<p>This grabs a randomly selected object from the set.</p>
"
"12488251","<p>Copied this from another question, hope it helps</p>

<p>You can simply call your servlet method by javascript for example</p>

<p>in submit button i just use name attribute</p>

<pre><code>   &lt;li class=""button-row""&gt;
  &lt;input type=""submit"" value=""ADD"" id=""add""class=""btn-submit img-  swap"" name=""add"" /&gt;
    &lt;input type=""submit"" value=""Delete""  class=""btn-delete img-swap"" name=""delete"" /&gt;
   &lt;input type=""submit"" value=""Update"" class=""btn-update img-swap"" name=""update"" /&gt;
 &lt;input type=""submit"" value=""Search"" class=""btn-search img-swap"" name=""search"" /&gt;
 &lt;/li&gt;
</code></pre>

<p>you can call single servlet with multiple method in javascript by submit tag name as follows</p>

<pre><code>   &lt;script type=""text/javascript""&gt;
var frm = document.forms[0];

if (request.getParameter(""add"") != null) {

    var pageName = ""/DepartmentServlet?method=add""
    frm.action = pageName;
    frm.submit();

 }
 else if (request.getParameter(""delete"") != null) {
//likewise you can call your other method from DepartmentServlet
//Even you can pass parameter by onClick event
// Invoke action 2.
  }
 else if (request.getParameter(""update"") != null) {
// Invoke action 3.  }

 &lt;/script&gt;
</code></pre>
"
"12824750","<p>Use <a href=""http://tinyurl.com/8err8ej"" rel=""nofollow""><code>Collections#sort</code></a> and a <code>Comparator</code>:</p>

<pre><code>List&lt;Item&gt; lstItem = new ArrayList&lt;Item&gt;();
//fill the data...
Comparator&lt;Item&gt; comparator = new Comparator&lt;Item&gt;() {
    public int compareTo(Item i1, Item i2) {
        return i1.count.compareTo(i2.count);
    }
};
Collections.sort(lstItem, comparator);
</code></pre>
"
"11651844","<p>When you print a integer, besides a string, it just acts like a string. However, if you did:</p>

<pre><code>System.out.println(1+1);
</code></pre>

<p>It would print out 2. This is because the integer is next to another.</p>

<p>If you did:</p>

<pre><code>System.out.println(""Test""+1+1);
</code></pre>

<p>It would print Test2. Because, you look at the addition of numbers first. Hope I helped.</p>
"
"12848647","<p>Perhaps more explicit than making the <code>*</code> reluctant/lazy would be to say that you're looking for A, followed by a bunch of stuff that <em>isn't a B</em>, followed by the B:</p>

<pre><code>Pattern ptrn = Pattern.compile(""\\b(A[^B]*B)\\b"");
</code></pre>
"
"11687666","<p>As the other people stated a class implementing the Java Set interface would be more suitable.</p>

<p>However if the use of an ArrayList is a requirement you can use the methods <code>ArrayList&lt;E&gt;.Contains(Object elem)</code> to verify if an object is already included in your ArrayList. But note that items are getting searched with the use of the <code>Object.equals(Object o)</code> method.</p>
"
"9668920","<p>This will cause the current thread to wait 5 seconds:</p>

<pre><code>try {
    Thread.currentThread().wait(5000);
} catch (InterruptedException e) {
    e.printStackTrace();
}
</code></pre>
"
"11691919","<pre><code>   public int[] createArray(int size){return new int[size];}
</code></pre>

<p>Well it's a dumb code. Creates array of size you want. It's not expandable once created. For that you need to expand manually by copying to a larger array when your old array is full. Or better, get it done by a collection called <code>ArrayList</code>, which doubles capacity when reaches to some threshold.</p>

<p>If you implement your own expandable array, it will be same as using ArrayList: <a href=""http://docs.oracle.com/javase/6/docs/api/java/util/ArrayList.html"" rel=""nofollow"">see</a></p>

<blockquote>
  <p>Each ArrayList instance has a capacity. The capacity is the size of the array used to store the elements in the list. It is always at least as large as the list size. As elements are added to an ArrayList, its capacity grows automatically. The details of the growth policy are not specified beyond the fact that adding an element has constant amortized time cost.</p>
</blockquote>
"
"12860891","<p>Follow below stepts that will resolve problem for sure.</p>

<p>1) Install latest version of jdk</p>

<p>2) Open eclipse.ini file in editplus (search for that file in eclipse folder)</p>

<p>3) write first two lines like below with your java path and your java version</p>

<pre><code>-vm
C:\Program Files\Java\jdk1.6.0_12\bin\javaw.exe

after writing that two lines your eclipse.ini files looks like this

-vm

C:\Program Files\Java\jdk1.6.0_12\bin\javaw.exe

-startup
plugins/org.eclipse.equinox.launcher_1.1.0.v20100507.jar
--launcher.library
plugins/org.eclipse.equinox.launcher.win32.win32.x86_1.1.0.v20100503
-product
.
.
.
.
.
</code></pre>
"
"12862565","<p>There is error in this line:</p>

<pre><code>for(int k = 0; k&lt;datastring.length;k++){
  dd = datastring[k].split(Reg2);
</code></pre>

<p>I think it will do  the work for you to do this:</p>

<pre><code>dd = datastring.split(Reg2);
</code></pre>
"
"12895166","<p>I posted some sample code on <a href=""http://ideone.com/vSdSh"" rel=""nofollow"">ideone</a>.  The basic idea is to create a custom RuntimeException class <code>IOIteratorException</code> that only excepts an IOException as the cause.  Then you can write code like this</p>

<pre><code>try
{
      iterator . next ( ) ;
}
catch ( IOIteratorException cause )
{
      cause . getCause ( ) ; // the compiler knows this is an IOException so you don't need to cast it
}
</code></pre>
"
"12917211","<p>Why dont you try ::</p>

<pre><code>int[] totals = //method that returns int array
    System.out.println(totals.toString());
</code></pre>
"
"12917272","<p>Your method doesn't seem to init your array, try this:</p>

<pre><code>int[] totals = new int[10]; //method that returns int array
System.out.println(Arrays.toString(totals));
</code></pre>
"
"11792803","<p>I think you have to flush() your writer before closing it.</p>

<pre><code>private static void write(ArrayList&lt;String&gt; out, String fname) throws IOException {
    FileWriter writer = new FileWriter(new File(""D:\\Denemeler\\deneme3.txt""));
    for (int i = 0; i &lt; out.size(); i++) {
        writer.write(out.get(i) + ""\n"");
    }
    // Flush the writer before closing it.
    writer.flush();

    writer.close();
}
</code></pre>
"
"12635813","<p>I think this question has already been resolved somewhere. The ""official"" solution should be :</p>

<pre><code>  public int dominator(int[] A) {
    int N = A.length;

    for(int i = 0; i&lt; N/2+1; i++)
    {
        int count=1;
        for(int j = i+1; j &lt; N; j++)
        {
            if (A[i]==A[j]) {count++; if (count &gt; (N/2)) return i;}
        }
    }

    return -1;
  }
</code></pre>
"
"11820863","<p>The best debugging solution for me is to place multiple Print statements after each major block of code.</p>

<pre><code>System.out.println(""1"");

//Code1 block

System.out.println(""2"");

//code 2 block

System.out.println(""3"");

//code 3 block

System.out.println(""4"");
</code></pre>

<p>By doing this, you can see which is the last print statement that executes and modify it. the last number that prints and then the catch statement's stack trace should help.</p>
"
"9803680","<pre><code>String s1 = ""asdfasdadfsdf,asdfasd,fasd,fasd,fasdf"";

            s1.lastIndexOf("","");
            System.out.println(s1.substring(s1.lastIndexOf("","")+1,s1.length()));
</code></pre>
"
"11884706","<pre><code>public class Reality extends Abstraction {
    int number = 1;
    public Reality() {
        this.printNumber();
    }
}
</code></pre>

<p>Above the code <code>number</code> is an instance variable Of class <code>Reality</code> and calling method of super class. In super class <code>printNumber()</code> method will print value of <code>number</code> 0 because it is initialized with 0.</p>

<p>If you want to get subclass variable value of <code>number</code>, you have to pass value as method argument as follows:</p>

<pre><code>public Reality(int num) {
    this.printNumber();
}
</code></pre>
"
"12983669","<p>You probably want to get rid of the first backslash</p>

<pre><code>"".*?Spare\\(.*?\\)""
</code></pre>

<p>because <code>\S</code> matches anything that's not whitespace.</p>

<p>For the other, your regex needs to look like:</p>

<pre><code>""ns1:tearline.*""
</code></pre>
"
"12983688","<p>To match a line starting with TearLine:</p>

<pre><code>^TearLine
</code></pre>

<p>To match lines containing Spare:</p>

<pre><code>Spare
</code></pre>

<p>To combine those in one expression :</p>

<pre><code>(?:^TearLine)|(?:Spare)
</code></pre>
"
"11900451","<p>Unfortunately, there is no simple, universal way to do this... There even isn't a simple, universal way to automatically do <code>clone()</code> method, even though this is just copying from one object to another one, of the same type.</p>
"
"11906370","<p>Concerning your first question:<br>
Actually if the machine can not allocate the <code>1024</code> MB that you asked as max heap size it will not even start the JVM.<br>
I know this because I noticed it often trying to open eclipse with large heap size and the OS could not allocate the larger heap space the JVM failed to load. You could also try it out yourself to confirm. So the rest of the details are irrelevant to you. If course if your program uses too much swap (same as in all languages) then the performance will be horrible.  </p>

<p>Concerning your second question:  </p>

<blockquote>
  <p>the memory leaks vanish    </p>
</blockquote>

<p>Not possible as they are bugs <em>you</em> will have to fix </p>

<blockquote>
  <p>and OutOfMemoryError does not occur? Can the quality of GC be better
  in the latest version?   </p>
</blockquote>

<p>This could happen, if for example some different algorithm in GC is used and it manages to kick-in before you seeing the exception. But if you have a memory leak then it would probable mask it or you would see it intermittent.<br>
Also various JVMs have different GCs you can configure   </p>

<p><strong>Update:</strong><br>
I have to admit (after see @Orochi note) that I noticed the behavior on max heap on Windows. I can not say for sure that this applies to linux as well. But you could try it yourself.   </p>

<p><strong>Update 2:</strong>
As an answer to comments of @DennisCheung
From <a href=""http://publib.boulder.ibm.com/infocenter/javasdk/tools/index.jsp?topic=/com.ibm.java.doc.igaa/_1vg00014884d287-11c3fb28dae-7ff6_1001.html"" rel=""nofollow"">IBM</a>(my emphasis):  </p>

<blockquote>
  <blockquote>
    <p>The table shows both the maximum Java heap possible and a <strong>recommended</strong> limit for the maximum Java heap size setting ......It is important to have more physical memory than is required by all of the processes on the machine combined to prevent paging or swapping. Paging reduces the performance of the system and affects the performance of the Java memory management system.</p>
  </blockquote>
</blockquote>
"
"12744073","<pre><code>(x-1, y-1) -&gt; upper left
(x-1, y) -&gt; left
(x-1, y+1) -&gt; lower left
</code></pre>

<hr>

<pre><code>(x, y+1) -&gt; up
(x, y) -&gt; current position
(x, y-1) -&gt; down
</code></pre>

<hr>

<pre><code>(x+1, y+1) -&gt; upper right
(x+1, y) -&gt; right
(x+1, y-1) -&gt; lower right
</code></pre>

<p>You can use this as guide. Now all you need to do is add them in a try catch.</p>

<pre><code> for( int x=0; x&lt;arr.length; x++ ){
  for(int y=0; y&lt;arr[x].length; y++){
  if( arr[x][y] == 8 ){
    try{
      System.out.println(""Upper Left is: "" + arr[x-1][y-1]);
    }catch(ArrayIndexOutOfBoundsException e){
     //do something
    }


    try{
      System.out.println(""Left is: "" + arr[x-1][y]);
    }catch(ArrayIndexOutOfBoundsException e){
     //do something
    }

    //.....and others
   }
  }
</code></pre>
"
"13011224","<p>This would work for you.</p>

<pre><code>if(number == Float.NaN)
</code></pre>
"
"11952595","<pre><code> Integer[] intArray = IntegerList.toArray(new Integer[IntegerList.size()]);
</code></pre>
"
"11952839","<p>when you launch your application from the console, you do your java -jar (filename) (args)  so if you were to run a program that reads from a file you would do </p>

<p>If your program was called readFile, after you made an executable version of it (I wouldn't explain how to do that part) you have to lauch the program.</p>

<pre><code>java -jar readFile.jar C:/user/Matt/documents/myText.txt
       ^ launch program       ^ args
</code></pre>

<p>the file location would be the args[] to the program.</p>
"
"9882215","<p>Two ArrayLists would probably be the easiest..  Just make sure you store the pairs in the same index and it should work fine.  Code would look something like:</p>

<pre><code>ArrayList&lt;String&gt; list1 = new ArrayList&lt;String&gt;();
ArrayList&lt;String&gt; list2 = new ArrayList&lt;String&gt;();
list1.add(""hi"");
list2.add(""hello"");
get(""hi"");
</code></pre>

<p>and your get method:</p>

<pre><code>get(String s){
    return list2.get( list1.indexOf(s) );
}
</code></pre>

<p>Don't know if this is the best solution, but it is a solution.</p>
"
"12764168","<p>How about sorting the array first? You then compare middle and first and last elements of the sorted array to find the dominant element.</p>

<pre><code>public Integer findDominator(int[] arr) {
    int[] arrCopy = arr.clone();

    Arrays.sort(arrCopy);

    int length = arrCopy.length;
    int middleIndx = (length - 1) /2;

    int middleIdxRight;
    int middleIdxLeft = middleIndx;

    if (length % 2 == 0) {
        middleIdxRight = middleIndx+1;
    } else {
        middleIdxRight = middleIndx;
    }

    if (arrCopy[0] == arrCopy[middleIdxRight]) {
        return arrCopy[0];
    }

    if (arrCopy[middleIdxLeft] == arrCopy[length -1]) {
        return arrCopy[middleIdxLeft];
    }

    return null;
}
</code></pre>
"
"9894324","<p>JSP has built-in <strong>request</strong> object.when one jsp redirect to another jsp with  some parameter, you can get parameter value using this <strong>request</strong> object.</p>

<pre><code>       &lt;%
String param1 = request.getParameter(""parameter_name"");

  %&gt;
</code></pre>

<p>you can find example here - </p>

<p><a href=""http://www.roseindia.net/jsp/RequestObjectInJSP.shtml"" rel=""nofollow"">http://www.roseindia.net/jsp/RequestObjectInJSP.shtml</a></p>
"
"13050578","<p>You will have to invent a new table that stores those IDs and link that table as a regular @OneToMany relation.</p>

<pre><code>@Entity 
class A{
 List&lt;MyRefTable&gt; p;
 @OneToMany
 getP(...){..};
 setP(...){..};
}

@Entity MyRefTable {
  long myRefTableId;
  int p;
}
</code></pre>

<p>Just like any other table that has a OneToMany relation to the A Entity.
There is no ""list"" construct in databases.</p>

<p>Sebastian</p>
"
"12020052","<p>I'm not really a java expert, but if you are writing a method to store some sort of state in an object, you should have a private variable in a object and pass a value into the method and store it in the private variable.  You would initialize it with the constructor and have a </p>

<p><code>void fooSetWhatever(int i)
{
     privateInt = i
}</code></p>

<p>and have a </p>

<p><code>int i fooGetWhatever ()
{
   return privateInt;
}</code></p>

<p>if you want to add / subtract the value have</p>

<p><code>void fooAddToWhatever (int i)
{
    privateInt += i;
}</code></p>

<p><code>// can't remember if java likes +=, you could do privateInt = privateInt + i;</code></p>
"
"12027180","<p>agree with @Kumar Vivek Mitra, but i think you can add the redirect in the finally block</p>

<pre><code> try{

    // Your code

 }catch(Exception ex){

   // syserr

 }finally{
      //redirect
 }
</code></pre>
"
"13084098","<p><strong>EDIT</strong> <em>Tested OK</em><br/>
<em>LazyViewHolder.class</em></p>

<pre><code> public class LazyViewHolder {
        private EditText et;
        private TextView text;
        private Button btnSub;
        public LazyViewHolder() {
            // TODO Auto-generated constructor stub
        }

        LazyViewHolder(TextView textView,EditText ed,Button btn) {
            super();
            this.setEt(ed);
            this.setText(textView);
            this.setBtnSub(btn);
        }

        public EditText getEt() {
            return et;
        }

        public void setEt(EditText et) {
            this.et = et;
        }

        public TextView getText() {
            return text;
        }

        public void setText(TextView text) {
            this.text = text;
        }

        public Button getBtnSub() {
            return btnSub;
        }

        public void setBtnSub(Button btnSub) {
            this.btnSub = btnSub;
        }




    }
</code></pre>

<p><strong>getView()in Custom Adapter</strong></p>

<pre><code>@Override
    public View getView(int position, View convertView, ViewGroup parent) {
        View v = convertView;
        final TextView textView;
        final EditText et;
        final Button sub;

        if (v == null) {
            v = inflater.inflate(R.layout.row, null);
            textView = (TextView) v.findViewById(R.id.tvLabel);
            textView.setText(""Hello""+position);
            et = (EditText) v.findViewById(R.id.etWhatToFill);
            sub = (Button) v.findViewById(R.id.btnSubmit);
            v.setTag(new LazyViewHolder(textView, et, sub));
            sub.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View v) {
                    // TODO Auto-generated method stub
                textView.setText(et.getText().toString());  
                }
            });
        } else {
            LazyViewHolder viewHolder = (LazyViewHolder) v.getTag();
            sub = viewHolder.getBtnSub();
            et=viewHolder.getEt();
            textView = viewHolder.getText();
        }
        return v;
    }
</code></pre>

<p><strong>Please Find Detailed Explanation for ListView and CustomListView</strong> <a href=""http://www.vogella.com/articles/AndroidListView/article.html"" rel=""nofollow"">here</a></p>
"
"9973662","<p><code>ArrayList.equals()</code> is inherited from <code>java.lang.Object</code> - therefore <code>equals()</code> on ArrayList is independent of the content of the list.</p>

<p>If you want to use an ArrayList as a map key, you will need to override <code>equals()</code> and <code>hashcode()</code> in order to make two arraylists with the same content in the same order return true on a call to <code>equals()</code> and return the same hashcode on a call to <code>hashcode()</code>.</p>

<p>Is there any particular reason you <em>have</em> to use an ArrayList as opposed to say a simple String as the key?</p>

<p>edit: Ignore me, as Joachim Sauer pointed out below, I am so wrong it's not even funny.</p>
"
"12854284","<p>Add Students Objects to List and Use <code>Collections.sort(list, custom_comparetor).</code></p>

<p><strong>Prepare one Custom comparator to sort Students Objects.</strong></p>

<p>Try this code it might helpful</p>

<p><strong>StudentComparator.java</strong> </p>

<pre><code>class StudentComparator implements Comparator {

    public int compare(Object stud1, Object stud2) {
        List&lt;Group&gt; list1Grp = ((Student) stud1).getGroups();
        List&lt;Group&gt; list2Grp = ((Student) stud2).getGroups();

        Collections.sort(list1Grp, new GroupComparator());
        Collections.sort(list2Grp, new GroupComparator());
        return list1Grp.get(0).getCreationDate().compareTo(list2Grp.get(0).getCreationDate());
    }

}
</code></pre>

<p><strong>GroupComparator.java</strong> </p>

<pre><code>public class GroupComparator implements Comparator {

    public int compare(Object grp1, Object grp2) {
        return ((Group) grp1).getCreationDate().compareTo(
                ((Group) grp2).getCreationDate());
    }

}
</code></pre>

<p>main method</p>

<p>add student object to one new List</p>

<p>then use </p>

<pre><code>Collections.sort(new_stud_list, new StudentComparator());
</code></pre>
"
"10008897","<p>I think you have to initialize the array like this.</p>

<pre><code>boolean[][] expectedResults;
 expectedResults = new boolean[8][2];
</code></pre>
"
"12091616","<p>If double backslash looks weird to you, C# also allows <a href=""http://msdn.microsoft.com/en-us/library/aa691090%28v=vs.71%29.aspx"" rel=""nofollow"">verbatim string literals</a> where the escaping is not required.</p>

<pre><code>Console.WriteLine(@""Mango \ Nightangle"");
</code></pre>

<p>Don't you just wish Java had something like this ;-)</p>
"
"13120451","<p>Create <code>Arraylist&lt;Date&gt;</code> of Date class. And use <code>Collections.sort()</code> for ascending order.    </p>

<p>See <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#sort-java.util.List-"" rel=""nofollow"">sort(List&lt;T&gt; list)</a></p>

<blockquote>
  <p>Sorts the specified list into ascending order, according to the natural ordering of its elements.</p>
</blockquote>

<p>For Sort it in descending order See <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#reverseOrder--"" rel=""nofollow"">Collections.reverseOrder()</a></p>

<pre><code>Collections.sort(yourList, Collections.reverseOrder());
</code></pre>
"
"12879556","<p>It's possible without regex:</p>

<pre><code>String phrase = 
""6
0 1 1 0 0
1 1 1 1 0
0 0 0 1 0
4
1 1 0 1 0
0 0 0 1 0
1 1 0 1 0
0 1 1 0 0"";

String delims = ""[4 6]+"";

String[] parts= phrase.split(delims);
</code></pre>
"
"12879602","<p>Yes it would require regexp. You can create a <code>java.util.regex.Pattern.compile(""([64][^64]+?)"", Pattern.MULTILINE)</code> and create a <code>java.util.regex.Matcher</code> out of it and starting find()ing through your CharSequence. You can query for group(1) each time you find() something.</p>
"
"10024111","<p>Probably not what you wanted but certainly what you asked for.. :-)</p>

<pre><code>String original = ""message.txt.cpabe"";
original = ""message.txt"";
</code></pre>
"
"12884510","<p>you can use <code>volatile</code> keyword with your <code>Boolean</code> <code>condition</code>.</p>

<pre><code>volatile Boolean condition = false;
</code></pre>

<p>or you can use <code>java.util.concurrent.atomic.AtomicBoolean</code></p>

<pre><code>    AtomicBoolean condition = new AtomicBoolean(false);
    (new Thread(new MyRunnable(condition))).start();
    ...
    public MyRunnable(AtomicBoolean condition2) {
        this.condition = condition2;
    }
    ...
    public void run() {
    while (true) {
        if (condition.get() == true) {
            System.out.println(""second"");
            break;
        }
    }
}
</code></pre>
"
"12140894","<p>implements Comparator or using algorithm bubble sort</p>

<pre><code>Arrays.sort(stringArray); it will sort only one array
</code></pre>
"
"12141094","<p>Maybe the following code will help you.</p>

<p>You should use <code>Arrays.sort()</code></p>

<h3>Example:</h3>

<pre><code>import java.util.Arrays;

String [] stringArray = {""ab"", ""aB"", ""c"", ""0"", ""2"", ""1Ad"", ""a10""};

//order Ascending
Arrays.sort(stringArray);

//Descending
Arrays.sort(stringArray, Collections.reverseOrder());
</code></pre>
"
"12145834","<p>Environment variables are platform specific. Windows stores them in Registry. </p>

<p>*In the registry the User environment variables are stored at
HKEY_CURRENT_USER\Environment
and the System environment variables are stored at
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment
(from <a href=""http://demins.blogspot.co.il/2007/10/where-does-windows-xp-store-evrironment.html"" rel=""nofollow"">http://demins.blogspot.co.il/2007/10/where-does-windows-xp-store-evrironment.html</a>)*</p>

<p>There are a lot of ways to access windows registry from java. You can for example execute command line using utility named <code>reg</code> that has a reach command line. You can also use one of interoparability APIs like JaWin, Jinterop, Jintegra. You can also refer to my solution explained <a href=""http://alexradzin.blogspot.co.il/2011/01/access-windows-registry-with-pure-java.html"" rel=""nofollow"">here</a>.</p>

<p>On linux you can use command line like <code>export MYVAR=myvalue</code>. I mean execute this command line from java using <code>Runtime.exec()</code> or <code>ProcessBuilder</code>. The problem is that this variable will not become really persistent. It will be visiable for all users until the computers is restarted. To make it really persistent you have to modify user login script (e.g. <code>bashrc</code> file for most linux systems if users's default shell is bash). </p>
"
"10102386","<p>You can use <code>SwingUtilities.invokelater( ... )</code> to make updates to your UI while you are making some other calculations. In your case </p>

<pre><code>repaint() 
</code></pre>

<p>or even better </p>

<pre><code>revalidate();
repaint();
</code></pre>

<p>should be called inside the <code>invokeLater</code> runnable implementation.</p>
"
"12940069","<p>try</p>

<pre><code>TreeSet(Comparator&lt;? super E&gt; comparator)
</code></pre>

<p><a href=""http://docs.oracle.com/javase/6/docs/api/java/util/TreeSet.html#TreeSet(java.util.Comparator"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/util/TreeSet.html#TreeSet(java.util.Comparator</a>)</p>
"
"13209665","<p>It depends on how you want to access it, I'm not entirely clear on how this works but my understanding is a static variable doesn't need to be instantiated, its already an object so you could try something like this.</p>

<pre><code>    public class Test {
        public static int a;
    }
</code></pre>

<p>Then refer to it by referring to the Test class,</p>

<pre><code>    if (Test.a != null) {}
</code></pre>

<p>Or of course you could simply create an object of the Test class where ever you want to refer to the variable.</p>

<pre><code>    Test test = new Test();
    if (test.a != null) {}
</code></pre>

<p>And finally my third solution would be to pass it into the constructor of the new class.</p>

<pre><code>    public class NewCLass {
         int newInt;  
         public NewClass(int num1) {
            this.newInt = num1;
         }
    }
</code></pre>

<p>then when you created an object of that class you'd have to pass an int into the constructor, or use mulitple constructors. As for your last question use what ever you want, I rarely use the Integer class unless I need to use a static method from it or something along those lines. I prefer to use int. Hope that helped.</p>
"
"13213152","<p>You should write a kind of template into the <code>@RequestMapping</code>:</p>

<pre><code>http://localhost:8080/userGrid?_search=${search}&amp;nd=${nd}&amp;rows=${rows}&amp;page=${page}&amp;sidx=${sidx}&amp;sord=${sord}
</code></pre>

<p>Now define your business method like following:</p>

<pre><code>@RequestMapping(""/userGrid?_search=${search}&amp;nd=${nd}&amp;rows=${rows}&amp;page=${page}&amp;sidx=${sidx}&amp;sord=${sord}"")
public @ResponseBody GridModel getUsersForGrid(
@RequestParam(value = ""search"") String search, 
@RequestParam(value = ""nd"") int nd, 
@RequestParam(value = ""rows"") int rows, 
@RequestParam(value = ""page"") int page, 
@RequestParam(value = ""sidx"") int sidx, 
@RequestParam(value = ""sort"") Sort sort) {
...............
}
</code></pre>

<p>So, framework will map <code>${foo}</code> to appropriate <code>@RequestParam</code>. </p>

<p>Since sort may be either asc or desc I'd define it as a enum:</p>

<pre><code>public enum Sort {
    asc, desc
}
</code></pre>

<p>Spring deals with enums very well. </p>
"
"10140617","<p>import org.junit. * ;</p>

<p>public class JUnitTest {</p>

<pre><code>@Test
public void functionTest() throws TestException {
    try {
        function (-1);
        fail("""");
    } catch (TestException e) {
        if (!e.getMessage().equals(""Integer may not be negative.."")) 
          fail("""");
    }
}
</code></pre>
"
"13242179","<p>City17Mogul, </p>

<p>I stopped reading at your main method, because I already found a show-stopper: You're not doing anything at all with <code>args</code> (the command-line arguments passed into the main method)... so your <code>source</code>, <code>uniqueWord</code>, and <code>word</code> variables are ALLWAYS <code>null</code>... and I presume that is the root cause of your <code>NullPointerException</code>'s.</p>

<p>You might also want to google for: How to read a stacktrace... it's a skill new programmers must learn, and the skill is even portable between (almost all) modern languages.</p>

<p>The stacktrace would have told you exactly which line of code the NPE occurs on, and from there it's usually pretty easy to workout which variable(s) is/are null... especially if you use a debugger... just put a breakpoint on the offending line, rerun the program WITH THE SAME INPUTS, and examine the value of all variables on that line... one or more of them must be null.</p>

<p>Cheers. Keith.</p>
"
"12965045","<p>You should replace the <code>[]</code> too!</p>

<p>The example is <code>[hostname]</code> and you sould replace all this with something like this:</p>

<pre><code>jdbc:mysql://localhost:3306/openfire
</code></pre>
"
"10194378","<p>You need to learn the basics about Java i think.</p>

<p>Here is a basic example of what i think you are trying:</p>

<pre><code>package Example;

public class A
{
    String myVar;

    public String getMyVar()
    {
        return myVar;
    }

    public void setMyVar(String myVar)
    {
        this.myVar = myVar;
    }
}
</code></pre>

<p>You need to create an instance of A.</p>

<pre><code>package Example;

public class B
{

    /**
     * @param args
     */
    public static void main(String[] args)
    {
        // TODO Auto-generated method stub
        A myA = new A();

        myA.setMyVar(""Hello World!"");

        System.out.println(myA.getMyVar);
    }

}
</code></pre>

<p>Look up java 'getters' and 'setters'.</p>
"
"10203173","<p>your expression doesnt escape special chars like +,(,)</p>

<p>try this</p>

<pre><code>/\(\d+[\+|-|\/|\*]\d+)\G?/
</code></pre>

<p>\G is the whole pattern over again</p>

<p>? means the previous thing is optional</p>

<p>i changed your [0-9]* to \d+ which i think is more correct</p>

<p>i changed your , to | </p>
"
"10223807","<p>Strings are constant; their values cannot be changed after they are created. String buffers support mutable strings. Because String objects are immutable they can be shared. For example:</p>

<pre><code>     String str = ""abc"";
</code></pre>

<p>is equivalent to:</p>

<pre><code>     String str = new String(""abc"");
</code></pre>

<p>You should avoid the second way to declare a string, for reasons explained into other answers</p>
"
"13290720","<p>Also you likely don't need to <code>stop()</code>, <code>pause()</code> would likely suffice, meaning that you can call <code>play()</code> once you want to continue playing.</p>
"
"13292887","<p>Are you expecting this kind of arrangment</p>

<pre><code>class class1 {
 int IDNumber = 123;  //same person as class2
 String name = ""John"";
 String company = ""Intel"";
 }

 class class2 { 

 int IDNumber = 123;  //same person as class1
 int income = 500;
 int workYears = 3;
 } 


 public class MyData{
public static void main(String arg[]){
    HashMap&lt;Integer, class1&gt; one = new HashMap&lt;Integer, class1&gt;();
    HashMap&lt;Integer, class2&gt; two = new HashMap&lt;Integer, class2&gt;();
    one.put(1, new class1());
    two.put(2, new class2());

    HashMap&lt;Integer, Object&gt; three = new HashMap&lt;Integer, Object&gt;();
    three.putAll(one);
    three.putAll(two);

    System.out.println(three);
}
 }
</code></pre>
"
"13013074","<p>Use <code>DTO Design Pattern</code>. It was used in <code>EJB 2.0</code>. Entity was container managed. <code>DTO Design Pattern</code> is used to solve this problem.
But, it might be use now, when the application is developed <code>Server Side</code> and <code>Client Side</code> separately.<code>DTO</code> is used when <code>Server side</code> doesn't want to pass/return <code>Entity</code> with annotation to <code>Client Side</code>.</p>

<p>DTO Example :</p>

<p>PersonEntity.java</p>

<pre><code>@Entity
public class PersonEntity {
    @Id
    private String id;
    private String address;

    public PersonEntity(){

    }
    public PersonEntity(String id, String address) {
        this.id = id;
        this.address = address;
    }
    //getter and setter

}
</code></pre>

<p>PersonDTO.java</p>

<pre><code>public class PersonDTO {
    private String id;
    private String address;

    public PersonDTO() {
    }
    public PersonDTO(String id, String address) {
        this.id = id;
        this.address = address;
    }

    //getter and setter 
}
</code></pre>

<p>DTOBuilder.java</p>

<pre><code>public class DTOBuilder() {
    public static PersonDTO buildPersonDTO(PersonEntity person) {
        return new PersonDTO(person.getId(). person.getAddress());
    }
}
</code></pre>

<p>EntityBuilder.java &lt;-- it mide be need</p>

<pre><code>public class EntityBuilder() {
    public static PersonEntity buildPersonEntity(PersonDTO person) {
        return new PersonEntity(person.getId(). person.getAddress());
    }
}
</code></pre>
"
"10286949","<p><a href=""http://commons.apache.org/lang/api-2.5/org/apache/commons/lang/StringUtils.html"" rel=""nofollow"">Apache Commons Lang.</a> has a class <code>org.apache.commons.lang.StringUtils</code> which has a method that counts the occurrences of the specific substring. It already exist, so you can use it directly instead of creating your own solution.</p>

<pre><code>//First parameter is the string to find and second param is the String to search.
StringUtils.CountMatches(""1234"",""12341234""); 
</code></pre>
"
"13025508","<p>See following changes:</p>

<pre><code>Man Fred = null; 
Try
{   
    Fred = new Man(); 
} 
catch (exception e) 
{   
    Print e  
}  

If(Fred != null)
{
    Print Fred.getName (); 
}
</code></pre>
"
"13027117","<pre><code>if(modelYear&gt;=1995 &amp;&amp; modelYear&lt;=1998)
{
  System.out.println(""Recall"");   
}
else if(modelYear&gt;=2004 &amp;&amp; modelYear&lt;=2006)
{
  System.out.println(""Recall"");
}
</code></pre>
"
"12383033","<p>create two classes with the same package/name at two different locations</p>

<pre><code>public class PrintStackTraceUtil
 {
 public static void printStackTrace(Throwable err)
     {
     //ignore
     }
 }
</code></pre>

<p>and</p>

<pre><code>public class PrintStackTraceUtil
 {
 public static void printStackTrace(Throwable err)
     {
     err.printStackTrace();
     }
 }
</code></pre>

<p>when compiling your java program, put only one of those paths in your sourcepath</p>
"
"10311346","<p>With version 2.21.0 of selenium-java.jar you can do this;</p>

<pre><code>driver.findElement(By.id(""..."")).isDisplayed()
</code></pre>
"
"10384309","<p>Try this:</p>

<pre><code>List list = new ArrayList();
list.add(""Apple"");
list.add(""Banana"");

Object[] ol = list.toArray();
</code></pre>
"
"12459982","<p>To trim the white spaces, use this.</p>

<pre><code>public String trimSpaces(String s){
    String str = """";
    boolean spacesOmitted = false;
    for (int i=0; i&lt;s.length; i++){
        char ch = s.chatAt(i);
        if (ch!=' '){
            spacesOmitted = true;
        }
        if (spacesOmitted){
            str+=ch;
        }
    }
    return str;
}
</code></pre>

<p>Then use the trimmed string in the place of name.</p>
"
"10394458","<p>It's important to understand that declaring an <code>Exception</code> may be thrown, indicates that it <strong>has</strong> to be treated by the client code. It means that you, <strong>as the author of the method</strong>, cannot just let it pass.</p>

<p>On the other hand, if the calculation failure is something not that acute, something that maybe a problem for the client code and also may not, you can just return <code>boolean</code> as you stated, letting the client code decide whether a special treatment should apply. If you think the client needs more information than just a <code>boolean</code> you can always return some sort of <code>CalculationResult</code> object.</p>
"
"13447116","<p>Answer depends on the real intention behind the <code>default listener</code>. If your default listener(Dummy) doesn't do anything thing, then there is no need of creating such listener. <code>Null</code> with <code>null-check</code> is meant to handle such scenarios only(more efficient and compact).</p>

<p>But on the other hand, if you want some default behavior implemented through default listener, then you should be creating the default listener.</p>

<p>As a thumb rule, I would not crowd the program with objects until there is any use/requirement is there.</p>
"
"12511965","<p>I would remove the string value and the duplicate IE instance, its of no use ...</p>

<pre><code>enum Browser {
    CHROME,
    FIREFOX,
    IE
</code></pre>

<p>If you must have lower case representation just convert from enum name when you need it.</p>
"
"13447511","<p>I would do neither. I would use option 1, but greatly simplified:</p>

<pre><code>doMyBatchJob() {
   if (listener == null) {
       return; // if listener is null, do nothing
   }
   listener.progressStarted(params);
   while (x) {
      listener.progressUpdated(current, expected)
   }
   listener.progressFinished(params);
}
</code></pre>

<p>This follows the ""exit early"" mantra. Also, it does't result in ""class bloat"" - your <code>DummyListener</code> idea adds no value. Using a <code>null</code> instead is clean and clear - everyone knows what's going on if the listener is <code>null</code> (ie nothing) and it's more obvious when debugging.</p>
"
"13150182","<p>psuedo code</p>

<pre><code>function revarray(a[1...n])
  if a.length == 1 or a.length == 0
    do nothing 
  # return a
  else
     swap a[1] and a[n]
     revarray(a[2...n-1])
  # return a (The function will not return anything but the contents of a are changed)
</code></pre>
"
"10501901","<p>like the aticle says:</p>

<pre><code>// Get the Todos
    System.out.println(service.path(""rest"").path(""todos"").accept(
            MediaType.TEXT_XML).get(String.class));
    // Get XML for application
    System.out.println(service.path(""rest"").path(""todos"").accept(
            MediaType.APPLICATION_JSON).get(String.class));
    // Get JSON for application
    System.out.println(service.path(""rest"").path(""todos"").accept(
            MediaType.APPLICATION_XML).get(String.class));
</code></pre>

<p>you try to specify the method path which you want to call</p>
"
"10534303","<p>use something like:</p>

<pre><code>public void doGet(HttpServletRequest req, HttpServletResponse resp)
 throws IOException {

        // Get client's IP address
        String ipAddress = req.getRemoteAddr(); // ip 

        // Get client's hostname
        String hostname = req.getRemoteHost(); // hostname
    } 
</code></pre>
"
"12604545","<p>You have to pass the class of enum as parameter:</p>

<pre><code>public &lt;T extends Enum&gt; T getValue(key, Class&lt;T extends Enum&gt; enumClazz) {
    return enumClazz.cast(...);
}
</code></pre>
"
"12605193","<p>Have a getType method in your Enum, then use that to help cast your string.</p>

<p>getType() in the Enum.</p>

<pre><code> public Class getType()
 {      
    return type;    
 } 
</code></pre>

<p>Using the getType() method to help cast the string.</p>

<pre><code> public Object getValue(Key key , String strValue)
 {
    return key.getType().cast(strValue) ;   
 }
</code></pre>

<p>You might have to write an IF statement to work out how to parse the String for different objects e.g. for Integer use the Integer.parseInt(s) method, otherwise you'll get a ClassCastExcpetion</p>
"
"13577417","<p>Write another testclass inside that class use a main function. and from that main function test the class.</p>

<p>You need to test your time class? am I right?</p>

<pre><code> public class test
 {
     public static void main(String args[])
     {
        Time t = new Time();

       //now use any method of time class
        //i.e. t.methodname(pram)
     }
 }
</code></pre>
"
"12612296","<p>You have to cast the strings to integers first, to do math with them afterwards.</p>

<pre><code>int a = Integer.parseInt(a[0]);
int b = Integer.parseInt(a[1]);

int temp = a+b;
</code></pre>
"
"13590318","<p>As far as i know, no because java trys to save ram usage by removing un-needed 0's. The best way would be to create it into a string and create a method that can times, add, take away, devide a string integer by  a string integer(times no's and then readd the 0's to the start).</p>

<p>EDIT</p>

<pre><code>public String addStringInteger(String x1, Integer i){
    String leading0 = """";
    String nol = """";
    boolean onLeading = true;
    for(char c : x1.toCharArray()){
        String l = Character.toString(c);
        if(onLeading &amp;&amp; l.equals(""0"")){
            leading0 += ""0"";
        }else{
            onLeading = false;
            nol += l;
        }
    }
    int intO = Integer.parseInt(nol) + i; //you can change + to x, -, / etc
    return leading0 + """"+ intO;
}
</code></pre>

<p>this example would allow you to do addStringInteger(""001"", 20) and you would get 0021 back, the method could be edited so you get 021 back, but i made that as a quick example, this sort of method should be able to perform anything. </p>
"
"13594547","<p>I also suggest to use <code>replace</code> instead <code>replaceAll</code> .
I write here a code to fix the issue, and to try to explain how use Backslash in java string.</p>

<pre><code>String bs1=""\\"";
String bs2=""\\"";
String sReplaced = s.replace(""&lt;BSLASH&gt;"", bs1.concat(bs2));
</code></pre>
"
"13603467","<p>You need exactly the <code>String[] args</code> parameter (it's an array).</p>

<p>The reason is that you need to declare the <code>main()</code> method with a <em>specified signature</em> (and a method signature contains its name, number of its parameters <strong>and</strong> the types of the parameters).</p>

<p>So if you create a function which a different parameter type (String vs. String array), it is not recognized.</p>
"
"13612950","<p>try this:</p>

<pre><code>ResultSet result = stmt.executeQuery(""SELECT * FROM authors WHERE name = "" + myname);
</code></pre>
"
"10645023","<blockquote>
  <p>Try using outputText.validate() after outputText.setText(output)</p>
</blockquote>

<p>I tried this for my program too which is similar. For some reason using the <code>Thread.sleep(delay)</code> directly following a <code>outputText.setText(""dsfgsdfg"")</code>, even with a <code>outputText.validate()</code> does not allow the user to see the output. It's the strangest thing. It is as if the code is read after the <code>setText</code> method is trying to be invoked. Then hits the sleep method and it all goes to hell.</p>
"
"10694966","<p>Crete o set environment variable if you use windows <code>JAVA_HOME=E:\software\installed\java</code>, and after append the Java bin directory <code>%JAVA_HOME%\bin</code>. Note that paths are separated from each other with semicolons <code>(;)</code> I hope help you. That's work for me !!!. I don't understand. What happen?.</p>
"
"12659601","<p>Take a look at the <a href=""http://docs.oracle.com/javase/7/docs/api/java/util/Random.html"" rel=""nofollow""><code>Random</code></a> class</p>
"
"12659672","<pre><code>        int noToCreate = 1_000; // the number of numbers you need
        Set&lt;Integer&gt; randomNumbers = new HashSet&lt;&gt;(noToCreate);

        while (randomNumbers.size() &lt; noToCreate) {
            // number is only added if it does not exist
            randomNumbers.add(ThreadLocalRandom.current().nextInt(100_000_000, 1_000_000_000));
        }
</code></pre>
"
"12659883","<p>I know doing this is bit odd, but still i think u can have you unique 9 digits number with almost no relation to each other.....</p>

<p>Ask u asked for <code>there should have no correlation between the numbers</code></p>

<pre><code>public class NumberGen {

    public static void main(String[] args) {

        long timeSeed = System.nanoTime(); // to get the current date time value

        double randSeed = Math.random() * 1000; // random number generation

        long midSeed = (long) (timeSeed * randSeed); // mixing up the time and
                                                        // rand number.

                                                        // variable timeSeed
                                                        // will be unique


                                                       // variable rand will 
                                                       // ensure no relation 
                                                      // between the numbers

        String s = midSeed + """";
        String subStr = s.substring(0, 9);

        int finalSeed = Integer.parseInt(subStr);    // integer value

        System.out.println(finalSeed);
    }

}
</code></pre>
"
"12679468","<p>Once you check/adjust, assign <code>current_guy</code> to a final variable:</p>

<pre><code>int current_guy=0;


if (a.equals(""bf""))
    {
        current_guy=1;
    }

final int final_current_guy = current_guy;

guy1.setOnClickListener(new OnClickListener() {

    public void onClick(View v) {

    // TODO Auto-generated method stub
    if (final_current_guy==1) {
        }
    }
</code></pre>

<p>Or use one-line assignment:</p>

<pre><code>final int current_guy = (a.equals(""bf"") ? 1 : 0);
</code></pre>
"
"13321074","<p>Here is something that i did...</p>

<pre><code>import javax.swing.JOptionPane;

public class NearestNumber {

public static void main(String[] arg)
{
    int[] array={100,-3420,3040,400433,500,-100,-200,532,6584,-945};

    String myNumberString =JOptionPane.showInputDialog(null,""Enter the number to test:"");
    int myNumber = Integer.parseInt(myNumberString);

    int nearestNumber = findNearestNumber(array,myNumber);

    JOptionPane.showMessageDialog(null,""The nearest number is ""+nearestNumber);
}

public static int findNearestNumber(int[] array,int myNumber)
{

    int min=0,max=0,nearestNumber;

    for(int i=0;i&lt;array.length;i++)
    {
        if(array[i]&lt;myNumber)
        {
            if(min==0)
            {
                min=array[i];
            }
            else if(array[i]&gt;min)
            {
                min=array[i];
            }
        }
        else if(array[i]&gt;myNumber)
        {
            if(max==0)
            {
                max=array[i];
            }
            else if(array[i]&lt;max)
            {
                max=array[i];
            }
        }
        else
        {
            return array[i];
        }
    }

    if(Math.abs(myNumber-min)&lt;Math.abs(myNumber-max))
    {
        nearestNumber=min;
    }
    else
    {
        nearestNumber=max;
    }

    return nearestNumber;
}
</code></pre>

<p>}</p>
"
"12705927","<p>Try this simple recursive approach:</p>

<pre><code>public static void insertionSort(int[] array, int index) {
    if(array.length == index + 1) return;

    insertionSort(array, index + 1);

    // insert array[index] into the array

}
</code></pre>
"
"13327505","<p>There are three requirements you must satisfy:</p>

<ol>
<li>Consistently reduce the contents of one account by the specified amount.</li>
<li>Consistently increase the contents of the other account by the specified amount.</li>
<li>If one of the above is successful, the other must also be successful.</li>
</ol>

<p>You can achieve 1. and 2. by using <a href=""http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/atomic/package-summary.html"" rel=""nofollow"">Atomics</a>, but you will have to use something other that <code>double</code> as there is no <code>AtomicDouble</code>. <code>AtomicLong</code> would probably be your best bet.</p>

<p>So you're left with your third requirement - if one succeeds the other <strong>must</strong> succeed. There is a simple technique that works superbly with atomics and that is using the <code>getAndAdd</code> methods.</p>

<pre><code>class Account {
  AtomicLong balance = new AtomicLong ();
}

...
Long oldDebtor = null;
Long oldCreditor = null;
try {
  // Increase one.
  oldDebtor = debtor.balance.getAndAdd(value);
  // Decrease the other.
  oldCreditor = creditor.balance.gtAndAdd(-value);
} catch (Exception e) {
  // Most likely (but still incredibly unlikely) InterruptedException but theoretically anything.
  // Roll back
  if ( oldDebtor != null ) {
    debtor.getAndAdd(-value);
  }
  if ( oldCreditor != null ) {
    creditor.getAndAdd(value);
  }
  // Re-throw after cleanup.
  throw (e);
}
</code></pre>
"
"13331682","<p>Java is a case sensitive language, the term <code>Void Class</code> differ from <code>void class</code>, and from <code>Void class</code>, and from <code>void Class</code>. And it was not clear what is asked here until the question is edited several times. The third is correct as well as <code>Class&lt;Void&gt;</code>.</p>

<p>But talking about <em>Void Class</em> without context is absurd, instead use <code>abstract</code>. <code>void</code> is a return type of the method that returns nothing. </p>
"
"10819015","<p>Here a list of all port:  </p>

<pre><code>http://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers  
</code></pre>

<p>The first thing I do is to limit the port search-range.<br>
Then I try over the ""normal"" port used (80, 8080, 443, ...). The waiting seconds cannot be restricted.</p>
"
"13774578","<pre><code>public class get_gps  {

        Criteria criteria = new Criteria();

        criteria.setHorizontalAccuracy(5000);
</code></pre>

<p>In your above code you are missing to complete  method with } bracket.</p>

<p>change your code with</p>

<pre><code>    public class get_gps  {

            Criteria criteria = new Criteria();



   criteria.setHorizontalAccuracy(5000);
}
</code></pre>
"
"12803046","<p>Probably there are different tastes to this, and a good answer might also depend on what your app is doing.</p>

<p>First, for a small application I wouldn't mind having the menu in the main class. </p>

<p>But then for nice structure, it is a good idea to have a class that is responsible for printing the line-based menu and then of course also for reading the user input and invoking the action the user asks for. I think a good idea would be to call such a class <code>Controller</code> or <code>Dispatcher</code>. This class would be a singleton. Further I would think it's a good idea
to have a method <code>displayMenu</code> and <code>dispatch</code>. Both would be called from the constructor consecutively. </p>

<p>How <code>dispatch</code> is then calling the appriopriate action will depend on the rest of your app.</p>

<p>Some people don't like this style, as your main routine will probably have declarations only. </p>
"
"10976245","<p>It is Mathematically impossible to do this without a loop. In order to create a mapping, F, of a discrete set of values to another discrete set of values, F must operate on each element in the originating set. (A loop is required to do this, basically.)</p>

<p>That being said:</p>

<p>Why do you need a new list? You could be approaching whatever problem you are solving in the wrong way.</p>

<p>If you have a list of <code>Student</code>, then you are only a step or two away, when iterating through this list, from iterating over the I.D. numbers of the students.</p>

<pre><code>for(Student s : list)
{
    int current_id = s.getID();
    // Do something with current_id
}
</code></pre>

<p>If you have a different sort of problem, then comment/update the question and we'll try to help you.</p>
"
"13468622","<p>I've tried something new, and now it works. I don't know if this is a blundering but <br>
just take a look.</p>

<pre class=""lang-java prettyprint-override""><code>private StoppableThread t;

public void initComponents() {
...
...
t = new StoppableThread() {
        @Override
        public void run() {
            setIsRunning(true);
            long timestamp = new Date().getTime();
            int minutes = Integer.parseInt(jHibernateTextField.getText());
            long secounds = minutes * 60;
            long millisecounds = secounds * 1000;
            long elapsedTime = new Date().getTime();

            do {
                try {
                    Thread.sleep(1000);
                    millisecounds -= new Date().getTime() - elapsedTime;
                    secounds = millisecounds / 1000;
                    if(secounds &lt; 60) {
                        jHibernateTextField.setText("""" + secounds);
                        jRemainingLabel.setText("" secounds remaining"");
                    }
                    else {
                        jHibernateTextField.setText("""" + secounds / 60);
                        jRemainingLabel.setText("" minutes remaining"");
                    }
                } catch (InterruptedException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
                elapsedTime = new Date().getTime();
            }while(!isStopped() &amp;&amp; timestamp + minutes * 60 * 1000 &gt; new Date().getTime());

            jHibernateTextField.setText("""" + minutes);

            if(isStopped()) return;
            else {
                console.out(""Computer wird schlafen gelegt =)"");
                //Hibernate (siehe LAPTOP)
            }

        }
    };

    jHibernateCheckBox.addActionListener(new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent e) {


            Thread thread = new Thread(AutoBarbarPanel.this.t);


            if(jHibernateCheckBox.isSelected()) {
                jHibernateTextField.setEnabled(false);
                thread.start();
            }
            else {
                jHibernateTextField.setEnabled(true);
                t.setIsStopped(true);
            }
        }

    });
}
</code></pre>

<p>Thanks for all answers</p>
"
"13471636","<pre><code>System.out.println(Arrays.toString(
    ""Many words//separated.by-different\tcharacters""
        .split(""\\W+"")));
//[Many, words, separated, by, different, characters]
</code></pre>
"
"13914273","<pre><code>yourJTextField.addKeyListener(new KeyAdapter()
        {
            @Override
            public void keyTyped(KeyEvent e)
            {
                // Here limiting the character of your number. for examlpe this wil only accept one digit
                if (yourJTextField.getText().length() == 1) {
                    e.consume();
                }

                // Here limiting your input to only number
                char c = e.getKeyChar();
                if(!((c &gt;= '0') &amp;&amp; (c &lt;= '7') || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)))
                {
                    //do what so ever you want
                }
                else
                {
                    //do what so ever you want
                }
            }
        })
</code></pre>
"
"12830590","<p>The variable 'i' is an integer and is being used as a counter to iterate through the array 'grades'. Use the counter 'i' to index into the array to get the value of the grade, then use an if statement to check if it is a grade less than 60%. Then if it is less than 60%, add it to your total percentage and return the value as a percentage.</p>

<p>Extending/Editing Features code:</p>

<pre><code>public float getPercentFailing(float[] grades) {
    int count=0;
    float sum= 0;
    for (int i = 0; i &lt; grades.length; i++) {
        float grade = grades[i];
        if( grade &lt; 0.6 )
            sum = sum + grades[i];
        count++;
    }
    return sum/count;
}
</code></pre>
"
"13491595","<pre><code>Try this.

 public static void main(String a[]){
 String days [] = {""Sunday"",""Monday"",""Tuesday"",""Wednesday"",""Thursday"",""Friday"",""Saturday""};
    Date d = new Date();
    SimpleDateFormat  st = new SimpleDateFormat (""EEEEE"");
    String day = st.format(d);
    for(int i=0;i&lt;days.length;i++){
        if(days[i].equals(day)){
            System.out.println(days[i+2]);
            break;
        }
    }
}
</code></pre>
"
"11012962","<p>This <a href=""http://www.jugpadova.it/articles/2006/02/05/accessing-a-resource-within-a-jar"" rel=""nofollow"">link</a> tells you how.</p>

<p>The magic is the getResourceAsStream() method :</p>

<pre><code>InputStream is = 
this.getClass().getClassLoader().getResourceAsStream(""yourpackage/mypackage/myfile.xml"")
</code></pre>
"
"13937973","<p>Now the code looks working or the problem is not evident. The OP should present more details about what error he/she receives.</p>

<p>Error in initial post was here:</p>

<pre><code>public void getObject(Object Object)
{
        this.object = object;
}
</code></pre>

<p>you should name formal parameter <code>object</code> instead of <code>Object</code>, i.e. write</p>

<pre><code>public void getObject(Object object)
</code></pre>

<p>instead of </p>

<pre><code>public void getObject(Object Object)
</code></pre>

<p>Java is case sensitive.</p>

<p>Line <code>this.object = object;</code> does nothing in your code since assigning field <code>object</code> to itself. Separate variable <code>Object</code> plays no role. And you should get warning about it.</p>

<p>Also you'd better name method <code>setObject</code>.</p>
"
"13510338","<p>You have a risk of <code>NullPointerException</code> if your <code>calculateStr()</code> method returns <em>null</em> and then you try to call a method on str.</p>

<p>More generally, avoid having variables with a <em>null</em> value. It stronger for class attributes, by the way.</p>
"
"12839387","<p>Your <code>try-catch</code> overrides your <code>throws InvalidValueException</code>
You shoud remove your <code>try-catch</code>, or remove your <code>throws InvalidValueException</code>.</p>
"
"13534046","<p>Add the next plugin to your pom.xml:</p>

<pre><code>&lt;plugin&gt;
     &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
     &lt;version&gt;2.3.2&lt;/version&gt;
     &lt;configuration&gt;
          &lt;source&gt;1.6&lt;/source&gt;
          &lt;target&gt;1.6&lt;/target&gt;
     &lt;/configuration&gt;
&lt;/plugin&gt;
</code></pre>
"
"13544790","<p>C#</p>

<pre><code>int dominant = 0;
        int repeat = 0;
        int? repeatedNr = null;
        int maxLenght = A.Length;
        int halfLenght = A.Length / 2;
        int[] repeations = new int[A.Length];

        for (int i = 0; i &lt; A.Length; i++)
        {
            repeatedNr = A[i];
            for (int j = 0; j &lt; A.Length; j++)
            {
                if (repeatedNr == A[j])
                {
                    repeations[i]++;
                }
            }
        }
        repeatedNr = null;
        for (int i = 0; i &lt; repeations.Length; i++)
        {
            if (repeations[i] &gt; repeat)
            {
                repeat = repeations[i];
                repeatedNr = A[i];
            }
        }
        if (repeat &gt; halfLenght)
            dominant = int.Parse(repeatedNr.ToString());
</code></pre>
"
"13963287","<p>There is one issue i notice in the above approach.</p>

<p>When the user enters just one character (eg <code>""H""</code>), after getting the entries from the DB and setting the adapter to the searchView via <code>searchView.setSuggestionsAdapter(&lt;adapter&gt;)</code>, the drop down list is not shown.</p>

<p>Only after entering a second character (eg <code>"" "", ""a""</code>), the suggestion list gets displayed.
Is anybody else observing this behavior ?</p>
"
"11077527","<p>Try following code it works fine for me :</p>

<pre><code>     Bitmap bmp[];
     **BitmapFactory.Options options = new BitmapFactory.Options();
    options.inSampleSize = 2;**
    bmp=new Bitmap[fileNames.length]; /* FileName is the total files to be decoded*/

    for(int i = 0; i &lt; fileNames.length; i++)   
    {

        bmp[i]=BitmapFactory.decodeFile(path.getPath()+""/""+ fileNames[i],options);
             }
</code></pre>
"
"11114184","<p>You can use this</p>

<pre><code>String currentDir = new File(""."").getAbsolutePath();
</code></pre>

<p>or this:</p>

<pre><code>System.getProperty(""user.dir"")
</code></pre>

<p>I prefer the first option</p>

<p>Regards</p>
"
"13589318","<p>First I want to confirm the memory savings as I saw some doubts raised. Per the documentation of <code>short</code> in tutorial here : <a href=""http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html</a></p>

<blockquote>
  <p><strong>short</strong>: The short data type is a 16-bit signed two's complement integer. It has a minimum value of -32,768 and a maximum value of 32,767 (inclusive). As with byte, the same guidelines apply: <strong>you can use a short to save memory in large arrays, in situations where the memory savings actually matters.</strong></p>
</blockquote>

<p>By using <code>short</code> You do save the memory in <strong>large arrays(hope that is the case)</strong> hence its good idea to use it. </p>

<p>Now to your question:</p>

<blockquote>
  <p>Is the performance/memory benefit of short nullified by downcasting?</p>
</blockquote>

<p><strong>Short Answer is NO.</strong> Down casting from <code>int</code> to <code>short</code> happens at compilation time itself hence no down impact from performance perspective, but <strong>since you are saving memory, it may result in the better performance in memory threshold scenarios</strong>.</p>
"
"12916354","<pre><code>scrollBar.getValue()==scrollBar.getMaximum()
</code></pre>
"
"13607487","<p>As the enum class is not declared abstract, and probably even not wanted to be called abstract, do:</p>

<pre><code>public void method() {
    }
</code></pre>

<p>A non-abstract class cannot have an abstract method.</p>
"
"11129499","<p>1) This will not require much effort, and leaves the array intact:</p>

<pre><code> public boolean isArrayContainsDuplicates(int [] intArray){
  int expectedOutPut = (intArray.length*(intArray.length+1))/2;
  int actualOutput = 0;
  for(int i =0 ; i &lt; intArray.length; i++){
   if(intArray[i]&gt;intArray.length)return true;
   actualOutput += intArray[i];
  }
  return expectedOutPut == actualOutput ? false: true;
 }
</code></pre>

<p>2) This will require touching a varying amount of elements in the Array. Best case, it hits the first element which would be O(1), average case is it hits in the middle O(log n), and worse case is it goes all the way through and returns false O(n).</p>

<p>O(1) refers to a number of operations which are not related to the total number of items. In this case, the first element would be the only one which has this case.</p>

<p>O(log n) - log is a limiting factor which can be a real number from 0 to 1. Thus, multiplying by log will result in a smaller number. Hence, O(log n) refers to a required amount of operations which are less than the number of items.</p>

<p>O(n) - This is when it required a number of operations equal to the number of items.</p>

<p>These are all big-o notation for the required time.</p>

<p>This algorithm uses memory which will increase as n increases. However, it will not grow linearly but instead be a fraction of the size n is and therefore its spacial Big-O is O(log n).</p>

<p>3) Yes, this is possible - however, it is only possible in best-case scenarios.</p>
"
"14035137","<p>For Android you would probably want to do something like this:</p>

<pre><code>initialize();
setButtonListeners();
new Thread() {
    public void run() {
        try {
            sleep(3000);
        } catch (Exception e) {
        } finally {
                Intent menuIntent = new Intent(SplashLoadScreen.this,
                        MainMenu.class);
                startActivity(menuIntent);
        }
    }
}.start();
</code></pre>

<p>I'm not too familiar with BlackBerry, but it seems like you use pushScreen() instead of startActivity(), and you don't use Intents like Android does, so perhaps something as this:</p>

<pre><code>initialize(); //Method to initialize all variables you might want to use.
//...Some code
new Thread() {
    public void run() {
        try {
            sleep(3000); //Time in milliseconds 
            //to make this thread sleep before executing whatever other code.
        } catch (Exception e) {
        } finally {
                pushScreen(new MyScreen()); //Push next screen
        }
    }
}.start();
</code></pre>

<p>The try{} catch(){} finally{} thing is exception handling.
Basically, if any errors happen when it's attempting to sleep for 3000 millis, then it will catch all Exceptions (a.k.a. errors) and do whatever's in catch(){}. Then, after either the try {} (if no exceptions have been found) or the catch(){} (if errors have been found) is finished, it does whatever's in the finally{}. This case finally will push the next screen.</p>
"
"14053107","<pre><code>SimpleDateFormat dateFormat = new SimpleDateFormat(""dd/mm/yyyy hh:mm:ss a"");
</code></pre>

<p>use <code>hh</code> in place of <code>HH</code></p>
"
"12930190","<p>Use:</p>

<pre><code>cal.add(Calendar.DAY_OF_MONTH, -5)
</code></pre>

<p>EDIT: sorry. <code>DAY_OF_MONTH</code> is a synonym to <code>DATE</code>. Instead of <code>1</code> use <code>Calendar.JANUARY</code>.</p>
"
"14060135","<p>I dont know your data but if you optimize your loop, it will effect the deserialize time  unbelievably.</p>

<p>if you look at example below </p>

<blockquote>
<pre><code>computeRecursively(30);

computeRecursivelyWithLoop(30); // 270 milisecond    

computeIteratively(30);        // 1 milisecond            

computeRecursivelyFasterUsingBigInteger(30); // about twice s fast as before version          

computeRecursivelyFasterUsingBigIntegerAllocations(50000);   // only 1.3 Second !!!
</code></pre>
</blockquote>

<pre><code>public class Fibo {
    public static void main(String[] args) {
        // try the methods
    }

    public static long computeRecursively(int n) {

        if (n &gt; 1) {
            System.out.println(computeRecursively(n - 2)
                    + computeRecursively(n - 1));
            return computeRecursively(n - 2) + computeRecursively(n - 1);
        }
        return n;
    }

    public static long computeRecursivelyWithLoop(int n) {
        if (n &gt; 1) {
            long result = 1;
            do {
                result += computeRecursivelyWithLoop(n - 2);
                n--;
            } while (n &gt; 1);
            System.out.println(result);
            return result;
        }
        return n;
    }

    public static long computeIteratively(int n) {
        if (n &gt; 1) {
            long a = 0, b = 1;
            do {
                long tmp = b;
                b += a;
                a = tmp;
                System.out.println(a);
            } while (--n &gt; 1);
            System.out.println(b);
            return b;
        }
        return n;
    }

    public static BigInteger computeRecursivelyFasterUsingBigInteger(int n) {
        if (n &gt; 1) {
            int m = (n / 2) + (n &amp; 1); // not obvious at first – wouldn’t it be
                                        // great to have a better comment here?
            BigInteger fM = computeRecursivelyFasterUsingBigInteger(m);
            BigInteger fM_1 = computeRecursivelyFasterUsingBigInteger(m - 1);
            if ((n &amp; 1) == 1) {
                // F(m)^2 + F(m-1)^2
                System.out.println(fM.pow(2).add(fM_1.pow(2)));
                return fM.pow(2).add(fM_1.pow(2)); // three BigInteger objects
                                                    // created
            } else {
                // (2*F(m-1) + F(m)) * F(m)
                System.out.println( fM_1.shiftLeft(1).add(fM).multiply(fM));
                return fM_1.shiftLeft(1).add(fM).multiply(fM); // three
                                                                // BigInteger
                                                                // objects
                                                                // created
            }
        }
        return (n == 0) ? BigInteger.ZERO : BigInteger.ONE; // no BigInteger
                                                            // object created
    }

    public static long computeRecursivelyFasterUsingBigIntegerAllocations(int n) {
        long allocations = 0;
        if (n &gt; 1) {
            int m = (n / 2) + (n &amp; 1);
            allocations += computeRecursivelyFasterUsingBigIntegerAllocations(m);
            allocations += computeRecursivelyFasterUsingBigIntegerAllocations(m - 1);
            // 3 more BigInteger objects allocated
            allocations += 3;
            System.out.println(allocations);
        }
        return allocations; // approximate number of BigInteger objects
                            // allocated when
                            // computeRecursivelyFasterUsingBigInteger(n) is
                            // called
    }
}
</code></pre>
"
"12930375","<p>This a segment of code that is working on my pc. first you have to get the calendar instance the perform your calculation.</p>

<pre><code>            Calendar cal = Calendar.getInstance();
     System.out.println(""Today : "" + cal.getTime());
    // Subtract 300 days from the calendar
    cal.add(Calendar.DATE, -300);
    System.out.println(""300 days ago: "" + cal.getTime());
</code></pre>

<p>This is the output that you will get:<br/></p>

<pre><code>    Today : Wed Oct 17 10:41:23 EET 2012
    300 days ago: Thu Dec 22 10:41:23 EET 2011
</code></pre>
"
"14064993","<p>I think so it is asking for authentication of your username. </p>

<pre><code>session=Session.getInstance(props,
         new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(fromUsername, password);
            }
          });
</code></pre>

<p>And then use above session in your code.</p>

<p>I haven't use the code specified in the google link u mentioned but i use java mail api to send email from my gmail account.Use above code for authentication</p>
"
"13697933","<p>use the following regular expression. I checked and that is working correctly.</p>

<pre><code>[[\\w]||[\\s]||[_]||[-]||[.]]*.zip
</code></pre>
"
"14104368","<pre><code>short unicode = string.charAt(index);
</code></pre>
"
"13727747","<h1>Sure,</h1>

<p>try </p>

<pre><code>Bar[] foo = new Bar[4];
foo[2] = new Bar();
System.out.print(foo[2]);
</code></pre>

<p>Regards</p>
"
"14151066","<p>Consider following code:</p>

<pre><code>public void someMethod(Car c) {
  c.thisIs(); 
}
</code></pre>

<p>'c' can hold reference of all subclasses. Whichever reference is hold by 'c', that method will be called. Its also called runtime polymorphism.</p>
"
"14151509","<p>Here is a very simple Java program that will run out of space</p>

<pre><code>public class OutOfMemory {

    public static void main(String[] arg) {

        List&lt;Long&gt; mem = new LinkedList&lt;Long&gt;();
        while (true) {
            mem.add(new Long(Long.MAX_VALUE));
        }
    }
}
</code></pre>
"
"14170470","<pre><code>you can get button using 

String buttonName =  request.getParameter(""button-name"") 
</code></pre>

<p>Then you have to pass the value as hidden value to next page;</p>
"
"11306855","<p>The following will not give you the calling class but the class which contains the code. Maybe it helps:</p>

<pre><code>this.getClass();
</code></pre>
"
"14192227","<p>you can create your variable as you want.</p>

<pre><code>public class MyVariable{
    public byte variable;
    MyVariable(int a){
        variable = new byte[a];
    }
}
</code></pre>
"
"13027590","<p>Use the Calendar Class to create an instance with GMT as the timezone.</p>

<p>From that you can get the time in milliseconds.</p>

<p>see below code sample. </p>

<pre><code>public class TimeTest {

    public static void main(String [] args) {
        Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(""GMT""));
        System.out.println(cal.currentTimeMillis());

    }
}
</code></pre>

<p>Hope this helps.</p>
"
"11337682","<p>If you are using JDBC, can try this</p>

<pre><code>PreparedStatement statement = connection.prepareStatement(""SELECT ? FROM ? WHERE ?=? "");
</code></pre>

<p>then</p>

<pre><code>statement.setString(1, ""column_name"");
statement.setString(2, ""table_name"");
statement.setString(3, ""column_name"");
statement.setBigDecimal(4, 123);
</code></pre>

<p>If you are using other ORM like Hibernate or JPA, I believe there are also ways to do.</p>
"
"13817239","<p><code>run()</code> is an overrided method from <code>Runnable</code>. In the runnable interface, there's no checked exception definition, so you couldn't throw checked exception from there. But you can throw <code>RuntimeException</code> instead of that.</p>
"
"13054937","<pre><code>For i = 2 to n

   check whether A[i-1] &amp;&amp; A[i] are with diff sign..
   in C++; return  ((A[i-1] ^  A[i]) &lt; 0).  
</code></pre>

<p>Same explained here : <a href=""http://www.youtube.com/watch?v=Z59REm2YKX0"" rel=""nofollow"">http://www.youtube.com/watch?v=Z59REm2YKX0</a></p>

<p><strong>EDIT</strong></p>

<p>If an integer is negative, then the high order bit is 1.  Otherwise, it's 0.  You can check if two integers have different signs by XORing them together.  If the signs are different, then the high order bit of the result will be 1.  If they're the same, then the high order bit will be 0.  Thus,</p>

<p>A XOR B &lt; 0 is equivalent to ""A and B have different signs""</p>

<p><em>Peter Ruderman</em>  </p>
"
"13848097","<p>yeah, their suggestions are completely right. What I suggest you is to write the first check as: </p>

<pre><code>""sort"".equals(command)
</code></pre>

<p>Maybe it does not make sense in this case but in future. Use the static type first so you never need a null check before</p>
"
"13091061","<p>The problem is order of execution.  As climbage pointed out, ajax calls are asynchronous, so the browser is continuing to do stuff as it waits for the result.</p>

<p>At it's most basic:</p>

<pre><code>function doSomething() {
    $.post(""SaveFileServlet"", {data : JSON.stringify(jsonPieces)}, function(response) {
      alert('post done');
    }
    alert('doSomething done');
}
</code></pre>

<p>Almost 100% of the time, the first alert that you will get will be the 'doSomething done' not 'post done'.  </p>

<p>This is because JavaScript is not waiting for the ajax call to complete to keep on going to the next step.</p>
"
"14283473","<p>I already had that issue, I can't really explain why that bug but I know that line :</p>

<pre><code>getLoaderManager().initLoader(0, null, this);
</code></pre>

<p>don't work in my code, So you can changed it for that :</p>

<pre><code>LoaderManager lm = getLoaderManager();
lm.initLoader(LOADER_ID, null, this);
</code></pre>

<p>The code start the methods :  </p>

<pre><code>onCreateLoader
</code></pre>

<p>you can try...</p>
"
"11440162","<pre><code>import java.util.Scanner;


public class FlowerCounter {
public static void main(String[] args)
{
   String[] flowers = {""Petunia"", ""Pansy"", ""Rose"", ""Violet"", ""Carnation""};
   double[] price = {.50, .75, 1.50, .50, .80};
   double cost = 0;

   Scanner keyboard = new Scanner(System.in);
   System.out.println(""What kind of flower would you "" +
                          ""like to purchase? \nPetunia, Pansy, Rose,"" +
                          "" Violet, or Carnation?"");

   String index = keyboard.nextLine();

   System.out.println(""How many "" + index +""s"" + "" would you like?"");
   int count = keyboard.nextInt();

  if (index.equals(""Petunia"") || index.equals(""petunia""))
       cost = (double)price[0] * count;
   else if (index.equals(""Pansy"") || index.equals(""pansy""))
       cost = (double)price[1] * count;
   else if (index.equals(""Rose"") || index.equals(""rose""))
       cost = (double)price[2] * count;
   else if (index.equals(""Violet"") || index.equals(""violet""))
       cost = (double)price[3] * count;
   else if (index.equals(""Carnation"") || index.equals(""carnation""))
       cost = (double)price[4] * count;
   else 
       System.out.println(""wrong flower"");

   System.out.println(""The cost for "" + count+ "" ""  +  index  + "" is "" + cost);            
}

}
</code></pre>
"
"13899183","<p>Interfaces by Java definition are <em>static</em>, <em>public</em> and <em>final</em> .  </p>

<p>You cannot instantiate an interface <strong>without</strong> giving an <em>implementation</em> between a pair of <em>{ and }</em>.</p>

<pre><code>new InterfaceA() { int getA() { blah...;return x} };
</code></pre>
"
"13899264","<p>the main thread does not exit the loop because because in while condition does not anything and checking condition is doing very speedy and while not sense changing variable. you have 2 way for resolve this problem:
1-in while loop waiting for a short time for example 5ms</p>

<pre><code>    while(path != null){
     try{
       Thread.currentThread().sleep(50);
     }catch(){
       //do nothing
     }
    }
</code></pre>

<p>2-define path variable as volatile:</p>

<pre><code>  volatile String path;
</code></pre>
"
"11523388","<p>You cannot compare strings via <code>==</code>, because that will only check for object identity, while two strings with the same content (e.g. <code>A</code>) might be separate objects. Use <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/String.html#equals%28java.lang.Object%29"" rel=""nofollow""><code>equals()</code></a> instead:</p>

<pre><code>if (""A"".equals(get)) {
        txtV.setText(""..."");
}
</code></pre>

<p>Note the different order in the comparison. That prevents <code>NullPointerExceptions</code> if <code>get</code> should be null.</p>

<p><a href=""http://www.zparacha.com/java-string-comparison/#.UAVnJpHEKPM"" rel=""nofollow"">Here is a good explanation for this.</a></p>
"
"13930986","<p>Your <code>SpaceObjectImpl</code>  must implement <code>Comparable</code> interface.</p>

<p>The following is <a href=""http://www.mkyong.com/java/java-object-sorting-example-comparable-and-comparator/"" rel=""nofollow"">an example by mkyong</a> that illustrates this concept:</p>

<pre><code>public class Fruit implements Comparable&lt;Fruit&gt;{

    private String fruitName;
    private String fruitDesc;
    private int quantity;

    public Fruit(String fruitName, String fruitDesc, int quantity) {
        super();
        this.fruitName = fruitName;
        this.fruitDesc = fruitDesc;
        this.quantity = quantity;
    }

    public String getFruitName() {
        return fruitName;
    }
    public void setFruitName(String fruitName) {
        this.fruitName = fruitName;
    }
    public String getFruitDesc() {
        return fruitDesc;
    }
    public void setFruitDesc(String fruitDesc) {
        this.fruitDesc = fruitDesc;
    }
    public int getQuantity() {
        return quantity;
    }
    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    public int compareTo(Fruit compareFruit) {

        int compareQuantity = ((Fruit) compareFruit).getQuantity(); 

        //ascending order
        return this.quantity - compareQuantity;

        //descending order
        //return compareQuantity - this.quantity;

    }   
}
</code></pre>

<p>Here, the <code>Fruit</code> class has implemented <code>Comparable</code> interface with type as <code>Fruit</code> and has also <code>overriden</code> <code>compareTo</code> method.</p>
"
"11523490","<pre><code>result = getIntent().getExtras();
if(result!=null){
    String get = result.getString(""secilen"");
    if(number == 0){
    imgView.setImageResource( R.drawable.tas );


    if (get.equals(""A""))
        txtV.setText(""..."");
    }

    else if (get.equals(""B"")){
        txtV.setText(""..."");
    }

    else if (get.equals(""C"")) {
        txtV.setText(""..."");
    }
  }
}
</code></pre>
"
"13939718","<p>you can declare a subpart of the code to be another part in a for loop, example - </p>

<pre><code>public class (classname) {
    for(int i = 1; i &lt;= 4; i++) {
        for(int j = 1; i &lt;= 4; j++) {
    system.out.println(i + ""*"" + j + ""="" (i*j));
}
</code></pre>

<p>}</p>

<p>it is almost in infinite loop; if you change int to long, and add more variables, you can practically make it last 25 x 10^12 minutes long </p>
"
"13174815","<p>In the first for put:</p>

<pre><code>for(a : arr) {
//
}
</code></pre>
"
"11566180","<p>Have you tried to use Spring-EL?
Take a look at this <a href=""http://static.springsource.org/spring/docs/current/spring-framework-reference/html/expressions.html"" rel=""nofollow"">LINK</a></p>

<p>With Spring-EL you can do something like the following:</p>

<pre><code>&lt;bean id=""dir"" class=""java.lang.String""&gt;
    &lt;property name=""path"" value=""c:/work/"" /&gt;
&lt;/bean&gt;
&lt;bean id=""file"" class=""java.lang.String""&gt;
    &lt;property name=""fileName"" value=""file.properties"" /&gt;
&lt;/bean&gt;
&lt;bean id=""path"" class=""java.lang.String""&gt;
    &lt;property name=""initialShapeSeed"" value=""#{dir.path}#{file.fileName}""/&gt;
&lt;/bean&gt;
</code></pre>

<p>This is available since Spring 3.0.</p>
"
"13955675","<p>Have a private constructor to avoid all these checks.</p>

<pre><code>class Singleton {
    private static final Singleton instance = new Singleton();

    private Singleton() {
    }

    public static final Singleton getInstance() {
        return instance;
    }
}
</code></pre>
"
"13180685","<p>if you reflected into a class that inherited from an abstract class, and then tried to dig into the base class for that instance, a property defined as abstract in the abstract class would have no value, but it is part of the class definition. </p>

<p>Heres an example:</p>

<pre><code>public class absBase{

    private string name;
    private int ID;

    public abstract int GetID();
}

public class concreteClass:absBase{
    @Override
    public int GetID(){
        return ID + 1;
    }
}
</code></pre>

<p>so if you were reflecting absBase, and looked at GetID, it would have to be abstract by definition, if you looked at concreteClass.GetID() however it would be public.
hope that helps.</p>
"
"13186373","<p>First, </p>

<p>you cant have <code>abstract</code> methods in an <code>interface.</code> They are essentially abstract by default, since it is illegal to have any implementation code within the interface.</p>

<p>Second, java doesnt support multiple inheritance, so your line:</p>

<pre><code>public interface AnimalCard extends Hideable, Speakable
</code></pre>

<p>is illegal. </p>

<p>The best way to solve your problem once you fix those things is to make Animal card abstract.</p>

<pre><code>public abstract Animal extends AnimalCard {
  public void hide() { ... }
  public void show() { ... }
  public boolean equals(Object obj) { ... }  
  public abstract String speak();       
}

public class Puppy extends Animal {
  // Here is where I need to define the speak method.
  public String speak() { ... }
}
</code></pre>
"
"14446533","<p>The <code>compareTo</code> method knows that trailing zeros do not affect the numeric value represented by a <code>BigDecimal</code>, which is the only aspect <code>compareTo</code> cares about.  By contrast, the <code>equals</code> method generally has no way of knowing what aspects of an object someone cares about, and should thus only return <code>true</code> if two objects are equivalent in <em>every</em> way that a programmer might be interested in.  If <code>x.equals(y)</code> is true, it would be rather surprising for <code>x.toString().equals(y.toString())</code> to yield false.</p>
"
"13232818","<pre><code>public class AycanClass extends AsyncTask&lt;String, Void, String&gt; implements IAppointments {

    Activity activity;
    MainActivity mainactivityobjectname;

    public AycanClass(Activity activity){
        this.activity = activity;
    }

    @Override
    protected void onPostExecute(String result) {
           super.onPostExecute(result); 
           mainactivityobjectname.setFilters(value);      
    }     
}
</code></pre>
"
"13251449","<blockquote>
  <p>should you catch unchecked exceptions?</p>
</blockquote>

<p>Yes and No. Depends on what exception is thrown. </p>

<blockquote>
  <p>Are unchecked exceptions ideally programming errors that you don't check for?</p>
</blockquote>

<p>You can write a <code>catch</code> block to catch unchecked exception but <strong>again depends whether you should</strong>. If you do then it's possible that a bug remain unsolved for a long time and by the time it is discovered it's size is also changed.</p>

<blockquote>
  <p>Should they just bubble up from your application?</p>
</blockquote>

<p>If they occur, try to solve their cause (if it' spossible). Don't <code>catch</code> them always as Hard and Fast rule.</p>
"
"14039827","<p>Do you mean you want to check the length like</p>

<pre><code>if (text.length() != 6)
</code></pre>
"
"11717200","<p>just getCookies() methos, direct from cookieStore, no <code>httClient.getCookiStore();</code></p>

<pre><code>HttpResponse response = httpclient.execute(httppost, localContext);

//look here
List&lt;Cookie&gt; cookies = mycookieStore.getCookies();
</code></pre>
"
"14042120","<p><strong>Always use</strong> <em><strong>ONE WAY HASH ALGORITHM.</em></strong></p>

<p>I would say GO with MD5 hashing. While storing password in DB, use MD5 hashing. So that if you have your password as <strong>pass</strong>, after hashing it will get stored as <em>asjasdfklasdjf789asdfalsdfashdflasdf</em> (32 character).</p>

<p><strong>As you said, you want to de-crypt the password also.</strong> <em><strong>I would say don't do that</em></strong>. While checking the password against DB, what you can do is hash the password and compare that string with what you have in database.</p>

<pre><code>if (DoHashMD5(myPass).equals(rs.getString(2))) {
    System.out.print(""You are registered user!!!"");
} else {
    System.out.print(""Invalid user!!!"");
}
</code></pre>

<p>here <code>rs.getString(2)</code> would be your query parameter.</p>
"
"14563060","<p>use</p>

<pre><code>    uri = URIUtil.encodeQuery(urlString)
</code></pre>

<p>instead</p>

<pre><code>    uri = new URI(urlString); 
</code></pre>
"
"14046456","<p>According to the api <a href=""http://pdfbox.apache.org/apidocs/org/apache/pdfbox/util/TextPosition.html#getFont%28%29"" rel=""nofollow"">getfont()</a> returns The font size.</p>

<p>You can use <a href=""http://pdfbox.apache.org/apidocs/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.html#getStyle%28%29"" rel=""nofollow"">getStyle()</a> method and it will return <code>STYLE_UNDERLINE</code> for underlined font. Thus you can retrieve underline style.</p>
"
"14600921","<p>I would just simply count digits. rough code from scratch:</p>

<pre><code>String result = """";
Pattern pattern = Pattern.compile(""[\\s0-9]+"");
Matcher matcher = pattern.matcher(t);
int index = 0;
while (matcher.find()) {
    int newIndex = matcher.start();
    result += t.substring(index, newIndex);
    result += convert(matcher.group());

    index = matcher.end() + 1;
}

result += t.substring(index, t.length() - 1);


private String convert(String uglyNumber) {

    // get rid of whitespaces
    String number = uglyNumber.replace(""\\s"", """");

    // simply count digits
    if( 6 &lt; number.length() &amp;&amp; number.length() &lt;= 9 ) {
    return ""million"";
    } else if( 9 &lt; number.length() &amp;&amp; number.length() &lt;= 12 ) {
        return ""million"";
    } else ...

    return ulgyNumber;
}
</code></pre>

<p>if numbers are more compilcated than simple mix of digits and whitespaces, you may want to have a look for this <a href=""http://www.regular-expressions.info/floatingpoint.html"" rel=""nofollow"">regex site</a>:</p>
"
"11747046","<p>You need to start the waiting Dialog in a new Thread. I don't know how you create your chart, but here is a sample</p>

<pre><code>SwingUtilities.invokeLater(new Runnable() {
        public void run() {
             dialog = new JDialog();
             dialog.setUndecorated(true);
             JPanel panel = new JPanel();
             panel.add(new JLabel(""Please wait""));
             dialog.add(panel);                
             GuiHelper.centerDialog(dialog); 
             dialog.setVisible(true);

            Thread performer = new Thread(new Runnable() {
                public void run() {
                    dialog.setVisible(false); 
                    //Here the code that prepare the chart                              
                }
        });
        performer.start();
    }
});     
</code></pre>
"
"14624082","<p>You need to use  </p>

<pre><code>if (operator == '+') 
</code></pre>

<p>Notice the 'double equal to'.</p>
"
"13332766","<p>Provided you keep a thigh control over your R file to make sure your IDs are consecutive, you could try something like:</p>

<pre><code>for (int i = R.id.firstTextView; i &lt;= R.id.lastTextView; i++){
    views.setTextViewText(i, """" + realtimeData.get(i).id);
}
</code></pre>

<p>which would allow to just add IDs to the R file without having to modify your code to change the hardcoded <code>6</code> number.</p>

<p>Just to prove my point:</p>

<pre><code>&lt;TextView android:id=""@+id/testStart"" /&gt;
&lt;TextView android:id=""@+id/test2"" /&gt;
&lt;TextView android:id=""@+id/test3"" /&gt;
&lt;TextView android:id=""@+id/testEnd"" /&gt;
&lt;Button android:id=""@+id/button1"" /&gt;
</code></pre>

<p>generates:</p>

<pre><code>    public static final int button1=0x7f070004;
    public static final int menu_settings=0x7f070005;
    public static final int test2=0x7f070001;
    public static final int test3=0x7f070002;
    public static final int testEnd=0x7f070003;
    public static final int testStart=0x7f070000;
</code></pre>

<p>Adding at a later stage:</p>

<pre><code> &lt;TextView android:id=""@+id/test4"" /&gt;
</code></pre>

<p>right before </p>

<pre><code>    &lt;TextView android:id=""@+id/testEnd"" /&gt;
</code></pre>

<p>immediately changes R.java to:</p>

<pre><code>    public static final int button1=0x7f070005;
    public static final int menu_settings=0x7f070006;
    public static final int test2=0x7f070001;
    public static final int test3=0x7f070002;
    public static final int test4=0x7f070003;
    public static final int testEnd=0x7f070004;
    public static final int testStart=0x7f070000;
</code></pre>
"
"11764323","<p>You can try this method after deserializable value </p>

<pre><code>DecimalFormat dec = new DecimalFormat(""###.##"");

System.out.println(dec.format(value));
</code></pre>
"
"14075056","<p>The previous answers are not perfect because they do not handle dates such as Feb 31.</p>

<p>Here is my iterative interpretation of MONTHS_BETWEEN in Javascript...</p>

<pre><code>    // Replica of the Oracle function MONTHS_BETWEEN where it calculates based on 31-day months
    var MONTHS_BETWEEN = function(d1, d2) {
        // Don't even try to calculate if it's the same day
        if (d1.getTicks() === d2.getTicks()) return 0;

        var totalDays = 0;
        var earlyDte = (d1 &lt; d2 ? d1 : d2); // Put the earlier date in here
        var laterDate = (d1 &gt; d2 ? d1 : d2); // Put the later date in here
        // We'll need to compare dates using string manipulation because dates such as 
        // February 31 will not parse correctly with the native date object
        var earlyDteStr = [(earlyDte.getMonth() + 1), earlyDte.getDate(), earlyDte.getFullYear()];

        // Go in day-by-day increments, treating every month as having 31 days
        while (earlyDteStr[2] &lt; laterDate.getFullYear() ||
               earlyDteStr[2] == laterDate.getFullYear() &amp;&amp; earlyDteStr[0] &lt; (laterDate.getMonth() + 1) ||
               earlyDteStr[2] == laterDate.getFullYear() &amp;&amp; earlyDteStr[0] == (laterDate.getMonth() + 1) &amp;&amp; earlyDteStr[1] &lt; laterDate.getDate()) {
            if (earlyDteStr[1] + 1 &lt; 32) {
                earlyDteStr[1] += 1; // Increment the day
            } else {
                // If we got to this clause, then we need to carry over a month
                if (earlyDteStr[0] + 1 &lt; 13) {
                    earlyDteStr[0] += 1; // Increment the month
                } else {
                    // If we got to this clause, then we need to carry over a year
                    earlyDteStr[2] += 1; // Increment the year
                    earlyDteStr[0] = 1; // Reset the month
                }
                earlyDteStr[1] = 1; // Reset the day
            }

            totalDays += 1; // Add to our running sum of days for this iteration
        }
        return (totalDays / 31.0);
    };
</code></pre>
"
"14102468","<p>You can also use Scanner class</p>

<pre><code>Scanner scan = new Scanner(file);  
String content = scan.next(); 
</code></pre>
"
"11790827","<p>try this:</p>

<pre><code>public class MainActivity extends Activity implements OnClickListener {
 //rest of your code
}
</code></pre>
"
"14707381","<p>You have to initate your Array, for example:</p>

<pre><code>int PrimeList[] = new int[3]
</code></pre>
"
"14707454","<p>I think You have not intialize both your variables <code>int Prime;</code> and <code>int PrimeList[];</code></p>

<p>Initialize them as </p>

<pre><code>int Prime = 0;
int PrimeList[] = new PrimeList[10];
</code></pre>
"
"11805040","<p>I'm pretty sure you can do this:</p>

<pre><code>public static int numDivisible(int low, int high, int test) {
    return (high-low)/test;
}
</code></pre>

<p>There you go. A constant-time solution. Since you don't need to know exactly <em>which</em> numbers are divisible, you don't need to bother iterating through all of them.</p>

<p><strong>EDIT</strong>: Change this to the following, as per @Chaser324.</p>

<pre><code>public static float numDivisible(float low, float high, float test) {
    return Math.ceil((high-low)/test);
}
</code></pre>

<p><strong>EDIT</strong>: A small typo ie., changed <code>text</code> to <code>test</code></p>
"
"11805055","<p>Rather than iterating over each and every number, you could try</p>

<pre><code>public int test(int floor, int ceil, int n) {
    int a = (floor / n) + 1;
    int counter = 0;
    while (a * n &lt;= ceil) {
        counter++;
        a++;
    }
    return counter;
}
</code></pre>

<p>and only use multiples of the divisor. Now you're not doing repeated division (slow), you're doing repeated multiplication (faster).</p>
"
"11805332","<pre><code>public static int solution(int low,int high, int n) {
    boolean h0=high%n==0;
    boolean l0=low%n==0;

    int k1=l0?low/n:(low+n-low%n)/n;
    int k2=h0?high/n:(high+n-high%n)/n;

    //                 |-----------|
    // ---------------k1----------k2---------------

    if(k2*n&gt;high) k2--;

    return k2-k1+1;

}
</code></pre>
"
"13395175","<p>Please let me rephrase my question:</p>

<p>I have a Java application that accesses a webservice via HTTPS and via a keystore/truststore that contains the SSL certificate of that server.</p>

<p>When I run this application under eclipse everything works as expected, so the certificate is valid.</p>

<p>When I try to use the keystore in a different eclipse project or when I try to package to functional project into a runnable jar and run it, I get a</p>

<pre><code>sun.security.validator.ValidatorException: PKIX path building failed:   
 sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid 
 certification path to requested target
</code></pre>

<p>What could possibly cause this, since it apparently works under eclipse? (in the one specific project)</p>
"
"14719504","<p>Although your probably not going to do this given you have already answered the question... you really should not:</p>

<ul>
<li>Checkin <code>.project</code> and <code>.classpath</code> files</li>
<li>Share projects files across different computers instead of using SCM (particularly since your using Git).</li>
</ul>

<p>I believe <strong>Ivy</strong>, <strong>Gradle</strong>, <strong>SBT</strong>, and <strong>Maven</strong> all have solutions for managing <code>.classpath</code> and <code>.project</code>.  You should investigate those options. Also Eclipse has both a Maven and Ivy plugin (<a href=""http://ant.apache.org/ivy/ivyde/"" rel=""nofollow"">http://ant.apache.org/ivy/ivyde/</a>) which will automatically manage your your classpath for you based on the Ivy and Maven file.</p>

<p>As a developer that works on many other projects is rather annoying when some one checkins <code>.project</code> and <code>.classpath</code>. Sharing outputted files across different machines (<code>.class</code> and <code>.project</code>, <code>.classpath</code>) is also dangerous. Thats because you could have different versions of Eclipse and different JDK compilers not to mention Eclipse partially compiles Java files. It may work for you now but its a hack. </p>

<p>Also as I noted in a comment you'll either have to remember to refetch ivy dependencies or include those in your sync (ie your <code>.ivy2</code> directory which can be absolutely massive) and since you'll have to remember to refetch ivy dependencies are you that lazy to not regenerate your <code>.classpath</code> (unless SBT is completely lacking on that) ?</p>
"
"13403739","<p>I have worked it out.  What solved the problem was adding the <code>login-processing-url=""/admin/j_spring_security_check""</code> attribute to the <code>&lt;form-login&gt;</code> tag.  I haven't worked with Spring Security before and I guess I just assumed the filters would magically find <code>j_spring_security_check</code> and process accordingly.  Maybe the filters do pick it up if the <code>j_spring_security_check</code> is from the root URI (ie /sharleepark/j_spring_security_check) of the application? I have never seen the need for <code>login-processing-url</code> to be specified in any of the tutorials I have been looking at.  Thanks again everyone for their input.</p>
"
"11805351","<p>Kindly provide comments on algorithm below: Suppose the range is [R1,R2] and number to be divided is n.</p>

<p>Find the smallest number starting from R1 divisible by n.Call it small. </p>

<p>Find the largest number starting from R2 divisible by n. Call it large.</p>

<p>Total numbers that are divisible= (large-small)/n + 1.</p>

<p>Worst case is still O(n) but might be efficient for large difference between R1 and R2.Hopefully I have covered all cases. Kindly suggest.</p>

<pre><code>int numofDivisible(int R1, int R2, int n) {

int small = R1, large= R2;

if ((R1 &gt; R2) || (n==0)) return 0;

if (R1 == R2) {
    if (R1 % n == 0) 
        return 1;
    else 
        return 0;
}

while(small &lt;= R2){

     if(small % n == 0)
         break;

      ++small;
}

if (small &gt; R2)
    return 0;


while (large &gt; small) {

    if (large % n == 0)
       break;

    --large;
}

if (large == small)
   return 1;

return ((large-small)/n + 1);

}
</code></pre>
"
"13409553","<p>Here's something quick and dirty (have not compiled it, but you should get the idea.</p>

<pre><code>URL url = new URL(""http://..."");
String query = url.getQuery();
String paramStrings[] = query.split(""\\&amp;"");
HashMultiMap&lt;String, String&gt; params = HashMultiMap.create(); // &lt;== google guava class
for (int i=0;iparamStrings.length;i++) {
    String parts[] = params[i].split(""="");
    params.put(URLDecoder.decode(parts[0], ""UTF-8""), URLDecoder.decode(parts[1], ""UTF-8""));
}

Set&lt;String&gt; paramVals = params.get(""paramName"");
</code></pre>

<p>If you don't want to use the guava class, you can accomplish the same thing with some additional code, and a HashMap></p>
"
"14748429","<p>try adding these to your props config..</p>

<pre><code>  props.put(""mail.smtp.auth"", true);
  props.put(""mail.smtp.starttls.enable"", true);
</code></pre>
"
"14185148","<p>I have to answer my own question as I managed to fix it with neither GridLayout nor BoxLayout. Although there might be a way how this can be achieved with this layout I found it easier to do it with no layout at all.</p>

<p>The following is the code:</p>

<pre><code>    frame.setLayout(null);
    frame.getContentPane().add(drawPanel1);
    frame.getContentPane().add(drawPanel2);
    drawPanel1.setBounds(0, 0, frame.getWidth(), frame.getHeight());
    drawPanel2.setBounds(0, 0, frame.getWidth(), frame.getHeight());
</code></pre>

<p>This code enables both two panels to take over the whole frame size which ultimately solves this problem.</p>
"
"14189865","<p>Actually no String objects will be created just two String literals. 
When Strings are initialized like you have they are literals not objects. If you wanted to create String objects you would do the following</p>

<pre><code>String a = new String(""abcd"");
</code></pre>
"
"11840351","<p><strike>The reason is that num is copied by-value, not as a reference in the call to <code>recursion( num - 1 );</code></strike></p>

<p>Edit: Yeesh, people are happy to downvote, arent' they? True, reference vs. copy-by value wasn't the correct answer, but in my initial reading of his code example it looked like a misunderstanding of that particular problem. I stand corrected.</p>
"
"13451342","<p>Wait a second.. Why u need to parsing that if u have a right value ?
Anyway, i use this :</p>

<pre><code>SimpleDateFormat oFormat = new SimpleDateFormat(""yyyy-MM-dd"");
String sDate = oFormat.format(""24-10-2012"");
</code></pre>

<p>it will appearing date like 2012-10-24. So if u want to parsing to dd-MM-yyyy, u just need change the format to what u want.</p>

<p>NB : Sorry if my english is bad. :D</p>
"
"11840376","<p>I don't know why you are going through all this to do a function like that? I apologize if I'm not getting your question but here is a good code I would suggest..</p>

<pre><code>public static void main(String[] args){
    countdown(10);
}

public void countdown(int num){

    for(int i = num; i &gt;= 0; i--){
        System.out.println(num);
    }
}
</code></pre>
"
"14254555","<p>You can try</p>

<pre><code> String original=""/abc/"";
 original.replaceAll(""/"","""");
</code></pre>

<p>Then do call trim to avoid white spaces.</p>

<pre><code>original.trim();
</code></pre>
"
"14254582","<p>This one seems works :</p>

<pre><code>/?([a-zA-Z]+)/?
</code></pre>

<p>Explanation :</p>

<p>/? : zero or one repetition</p>

<p>([a-zA-Z]+) : capture alphabetic caracter, one or more repetition</p>

<p>/? : zero or one repetition</p>
"
"14768645","<p>Hi Friend finally i am able to send Message using OAUTH , Posting my OAuth2Authenticator source,</p>

<pre><code>/* Copyright 2012 Google Inc.
*
* Licensed under the Apache License, Version 2.0 (the ""License"");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an ""AS IS"" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package com.example;

import com.sun.mail.imap.IMAPStore;
import com.sun.mail.imap.IMAPSSLStore;
import com.sun.mail.smtp.SMTPTransport;

import java.security.Provider;
import java.security.Security;
import java.util.Properties;
import java.util.UUID;
import java.util.logging.Logger;

import javax.mail.Address;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.URLName;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;


/**
* Performs OAuth2 authentication.
*
* &lt;p&gt;Before using this class, you must call {@code initialize} to install the
* OAuth2 SASL provider.
*/
public class OAuth2Authenticator {
 private static final Logger logger =
     Logger.getLogger(OAuth2Authenticator.class.getName());

 public static final class OAuth2Provider extends Provider {
   private static final long serialVersionUID = 1L;

   public OAuth2Provider() {
     super(""Google OAuth2 Provider"", 1.0,
           ""Provides the XOAUTH2 SASL Mechanism"");
     put(""SaslClientFactory.XOAUTH2"",
         ""com.google.code.samples.oauth2.OAuth2SaslClientFactory"");
   }
 }

 /**
  * Installs the OAuth2 SASL provider. This must be called exactly once before
  * calling other methods on this class.
  */
 public static void initialize() {
   Security.addProvider(new OAuth2Provider());
 }

 /**
  * Connects and authenticates to an IMAP server with OAuth2. You must have
  * called {@code initialize}.
  *
  * @param host Hostname of the imap server, for example {@code
  *     imap.googlemail.com}.
  * @param port Port of the imap server, for example 993.
  * @param userEmail Email address of the user to authenticate, for example
  *     {@code oauth@gmail.com}.
  * @param oauthToken The user's OAuth token.
  * @param debug Whether to enable debug logging on the IMAP connection.
  *
  * @return An authenticated IMAPStore that can be used for IMAP operations.
  */
 public static IMAPStore connectToImap(String host,
                                       int port,
                                       String userEmail,
                                       String oauthToken,
                                       boolean debug) throws Exception {
   Properties props = new Properties();
   props.put(""mail.imaps.sasl.enable"", ""true"");
   props.put(""mail.imaps.sasl.mechanisms"", ""XOAUTH2"");
   props.put(OAuth2SaslClientFactory.OAUTH_TOKEN_PROP, oauthToken);
   Session session = Session.getInstance(props);
   session.setDebug(debug);

   final URLName unusedUrlName = null;
   IMAPSSLStore store = new IMAPSSLStore(session, unusedUrlName);
   final String emptyPassword = ""&lt;your_gmail_password&gt;"";
   store.connect(host, port, userEmail, emptyPassword);
   return store;
 }

 /**
  * Connects and authenticates to an SMTP server with OAuth2. You must have
  * called {@code initialize}.
  *
  * @param host Hostname of the smtp server, for example {@code
  *     smtp.googlemail.com}.
  * @param port Port of the smtp server, for example 587.
  * @param userEmail Email address of the user to authenticate, for example
  *     {@code oauth@gmail.com}.
  * @param oauthToken The user's OAuth token.
  * @param debug Whether to enable debug logging on the connection.
  *
  * @return An authenticated SMTPTransport that can be used for SMTP
  *     operations.
  */
 public static SMTPTransport connectToSmtp(String host,
                                           int port,
                                           String userEmail,
                                           String oauthToken,
                                           boolean debug) throws Exception {
   Properties props = new Properties();
   props.put(""mail.smtp.starttls.enable"", ""true"");
   props.put(""mail.smtp.starttls.required"", ""true"");
   props.put(""mail.smtp.sasl.enable"", ""true"");
   props.put(""mail.smtp.sasl.mechanisms"", ""XOAUTH2"");
   props.put(""mail.smtp.auth"",""true"");
   props.put(OAuth2SaslClientFactory.OAUTH_TOKEN_PROP, oauthToken);



   Session session = Session.getInstance(props);
   /*,
           new javax.mail.Authenticator() {
        protected PasswordAuthentication getPasswordAuthentication() {
            return new PasswordAuthentication(""prateek.engineer@gmail.com"", emptyPassword);
        }
      });*/
   session.setDebug(debug);

   final URLName unusedUrlName = null;
   SMTPTransport transport = new SMTPTransport(session, unusedUrlName);
   // If the password is non-null, SMTP tries to do AUTH LOGIN.
   final String emptyPassword = ""&lt;your_gmail_password&gt;"";
   transport.connect(host, port, userEmail, emptyPassword);

   Message message = new MimeMessage(session);
   message.setFrom(new InternetAddress(""&lt;your_gmail_id&gt;""));
   message.setRecipients(Message.RecipientType.TO,InternetAddress.parse(""&lt;recepient_emailid&gt;""));
   message.setSubject(""Test Message"");
   message.setText(""First Message using OAuth Protocol"");
   /*SMTPTransport.send(message);*/

   Address[] add=new InternetAddress[1];
   add[0]= new InternetAddress(""&lt;recepient_emailid&gt;"");
   transport.sendMessage(message, add);

   return transport;
 }

 /**
  * Authenticates to IMAP with parameters passed in on the commandline.
  */
 public static void main(String args[]) throws Exception {
   /*if (args.length != 2) {
     System.err.println(
         ""Usage: OAuth2Authenticator &lt;email&gt; &lt;oauthToken&gt;"");
     return;
   }*/
   String email = ""&lt;your_gmail_id&gt;"";

   String oauthToken = """";


   initialize();

   IMAPStore imapStore = connectToImap(""imap.gmail.com"",
                                       993,
                                       email,
                                       oauthToken,
                                       true);
   System.out.println(""Successfully authenticated to IMAP.\n"");
   SMTPTransport smtpTransport = connectToSmtp(""smtp.gmail.com"",
                                               587,
                                               email,
                                               oauthToken,
                                               true);

   System.out.println(""Successfully authenticated to SMTP."");
 }
}
</code></pre>

<p>add your password and the line u missed because of which u r getting authentication required exception is :::</p>

<pre><code>props.put(""mail.smtp.auth"",""true"");
</code></pre>

<p>in your <strong>connectToSmtp(.... , ...);</strong> method</p>

<p>AND RESPONSE YOU GET IS ::</p>

<pre><code>From: &lt;your_email_id&gt;
To: &lt;recepient_eemail_id&gt;
Subject: Test Message
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

First Message using OAuth Protocol //its message u have 
.
250 2.0.0 OK 1360312537 a1sm52630615pav.2 - gsmtp
Successfully authenticated to SMTP.
</code></pre>
"
"14318796","<p>It worked after adding a If statement like below:</p>

<pre><code>String id = """";


if(rSelect.next()){
    id = rSelect.getString(1);
}
</code></pre>

<p>Since, there can exists only one row or nothing according to my query.</p>
"
"13562963","<p>Based on the code posted in the linked question</p>

<pre><code>wr.type(MediaType.MULTIPART_FORM_DATA).post(ClientResponse.class, multipart);
</code></pre>

<p>the problem may be that you annotate your method with <code>@GET</code>, but actually your client issues a <code>POST</code>. Maybe some implementation of JAX-RS still route the request to your method but fail to extract parameters because of method mismatching. The algorithm is indeed very different once you compare what a GET looks like:</p>

<pre><code>GET /path/to/resource?id=foobar HTTP/1.1
Host: example.com
</code></pre>

<p>and a POST:</p>

<pre><code>POST /path/to/resource HTTP/1.1
Host: example.com
Content-Type: multipart/form-data, boundary=A9zfsdf0x;9ad

--A9zfsdf0x;9ad
content-disposition: form-data; name=""id""

foobar
</code></pre>

<p>So, when you design your RESTful API, you should carefully choose the method, and use it both on the client and on the server.</p>
"
"11983644","<p>This is because you pass the Object, and objects in Java are always passed by reference. Only primitive (int, double, char, long...) are passed by value. </p>

<p>In C it could be:</p>

<pre><code>public void changeSomething(A&amp; a){
 a.setA(13);
}
</code></pre>
"
"13569938","<p>You won't run into any memory leak issues, but possible heap space issues. To avoid heap issues, use a buffer.</p>

<p>It all depends on how you are currently reading the line. It is possible to avoid all heap issues by using a buffer. </p>

<pre><code>public void readLongString(String superlongString, int size, BufferedReader in){
  char[] buffer = new char[size];
  for(int i=0;i&lt;superlongString.length;i+=size;){
       in.read(buffer, i, size)
       //do stuff 
     }
}
</code></pre>
"
"13610419","<p>This is one of the main issues with primitives. That the range of values is such that <code>null</code> can not be meaningfully represented.<br>
I recommend going to <code>Float</code> or else you would have to define specific range of values and their meaning.<br>
Example: If you <code>-1.0</code> is not a meaningfull number in your domain, you can use that to signify <code>null</code>.<br>
But I highly recommend to switch to object instead of primitives.   </p>

<blockquote>
  <p>The reason why i am not using Float object is to achieve a high memory
  and speed performance.  </p>
</blockquote>

<p>Unless you are doing some really heavy number crunching boxing/autoboxing would not cause any performance issue.<br>
As always, do your measurements and if you find that there is indeed a performance issue then you can drop <code>Float</code> to go with prematives.<br>
Don't optimize too early</p>
"
"14382283","<p>Workaround solution: Use <strong>StringBuilder</strong> instead of <code>String</code>. Of course, <code>StringBuilder</code> cannot be changed reference in the <code>handleEvent</code>, but we could invoke its method.</p>

<pre><code>    final StringBuilder sb = new StringBuilder();

    Listener selection = new Listener() {

        public void handleEvent(Event event) {
        ...
        switch (comboVal) {
             case ""A"": sb.delete(0, sb.length()).append(""a"");
             case ""B"": sb.delete(0, sb.length()).append(""b"");
            ...
        }
       }
    };

...
System.out.println(sb.toString());
</code></pre>

<p>Then you could get String value by <code>StringBuilder.toString();</code></p>

<p><em>EDIT: Please provide the reason voting down this answer.</em></p>
"
"14387226","<p>While this is <strong>not code I would ever recommend using</strong> in most cases, it does serve the purpose:</p>

<pre><code>int i = 0;
while ( i &lt;= 10 )
{
  Console.WriteLine(i.ToString());
  if ( i == 8 )
  {
    // Do some work here, then bail on this iteration.
    goto Continue;
  }

Continue:  // Yes, C# does support labels, using sparingly!
  i++;
}
</code></pre>
"
"14401944","<p>This is my answer in Java: I store a count in seperate array which counts duplicates of each of the entries of the input array and then keeps a pointer to the array position that has the most duplicates. This is the dominator. </p>

<pre><code>private static void dom(int[] a) {
        int position = 0;
        int max = 0;
        int score = 0;
        int counter = 0;
        int[]result = new int[a.length];

        for(int i = 0; i &lt; a.length; i++){
            score = 0;
            for(int c = 0; c &lt; a.length;c++){

                if(a[i] == a[c] &amp;&amp; c != i ){
                    score = score + 1;
                    result[i] = score; 
                    if(result[i] &gt; position){
                        position = i;
                    }
            }

            }
        }


                 //This is just to facilitate the print function and MAX = the number of times that dominator number was found in the list.

        for(int x = 0 ; x &lt; result.length-1; x++){
            if(result[x] &gt; max){
                max = result[x] + 1;
            }

        }




  System.out.println("" The following number is the dominator "" + a[position] +  "" it appears a total of "" + max);





}
</code></pre>
"
"14950769","<p>Modify the while loop as below.  Declare s1 as String s1; one time outside the loop.  To end the loop, simply use ctrl+z.</p>

<pre><code>  while (sc.hasNext())
  {    
    s1 = sc.next();
    System.out.println(s1);
    System.out.print(""Enter your sentence: "");
  }
</code></pre>
"
"14415532","<p>In the binary search you compare your key to elements of the array data[i]. To get the last matching index you should change your compare function so that it gives inequality even if key is equal to data[i] and also to data[i+1].</p>

<pre><code>int upperBoundBinarySearch(int data[],int start, int end, int key) {
  while(start &lt; end) {
    int middle = start + (end-start)/2;
    if (data[middle] == key &amp;&amp; (middle == end || data[middle+1] != key))
      return middle;
    if (data[middle] &gt; key)
      end = middle;
    else {
      if (start == middle)
        return start;
      start = middle;
    }
  }
  return start;
}
</code></pre>
"
"14968366","<pre><code>public class TestClassLoaderAccess {
    public static void main(String[] argv) {
        TestClassLoaderAccess me = new TestClassLoaderAccess();
        ClassLoader myLoader = me.getClass().getClassLoader();
        System.out.println(myLoader.getClass().getSuperclass().getName());
        java.net.URLClassLoader myUrlLoader = (java.net.URLClassLoader) myLoader;
        java.net.URL resource = myUrlLoader.findResource(""TestClassLoaderAccess.class"");
        System.out.println(resource.toString());
    }
}
</code></pre>

<p>Running it:</p>

<pre><code>C:\JavaTools&gt;javac TestClassLoaderAccess.java

C:\JavaTools&gt;java TestClassLoaderAccess
java.net.URLClassLoader
file:/C:/JavaTools/TestClassLoaderAccess.class

C:\JavaTools&gt;
</code></pre>

<p>(The first println is just to prove that the class loader is a subclass of URLClassLoader.)</p>
"
"14432154","<pre><code>public boolean verifyPwd(){
        if (!(pword.equals(pwdRetypePwd.getText()))){
                  txtaError.setEditable(true);
                  txtaError.setText(""*Password didn't match!"");
                  txtaError.setForeground(Color.red);
                  txtaError.setEditable(false);
                  return false;
           }
        else {
            addNewUser();
            return true;
        }
}
</code></pre>
"
"14441148","<p>Your matcher just matches one letter, as it doesn't have a <code>*</code> or <code>+</code>. So it doesn't hits the end. Perhaps you meant </p>

<pre><code>Pattern p = Pattern.compile(""hello"");
Matcher m = p.matcher(""[a-z]+"");
</code></pre>
"
"14992841","<p>I think taskQueue is a good strategy but has one big problem ""If a push task is created successfully, it will eventually be deleted (at most seven days after the task successfully executes)."" <a href=""https://cloud.google.com/appengine/docs/java/taskqueue/"" rel=""nofollow"">Source</a></p>

<p>I would instead use the <a href=""https://cloud.google.com/appengine/docs/java/gettingstarted/usingdatastore#adding_data_post_and_display_ui_to_jsp"" rel=""nofollow"">datastore</a>. here is one strategy you can take:</p>

<ol>
<li>Insert a record into datastore once you completed ""parsing that data"".</li>
<li>Check the current date against the create/insert date to see how much time has passed by since your job was completed/started etc
(clearly, you don't want to do every minute etc maybe do it once a
day or every hour)</li>
<li>Execute the next task that you need to  do as soon as condition in step 2 become passed your ""arbitrary amount of time"" you want.</li>
</ol>

<p>Here is how you can add a record to data store...to get you started ..</p>

<pre><code>    Entity parsDataHolder = new Entity(""parsing_data_done"", guestbookKey);
    parsDataHolder.setProperty(""date"", date);

DatastoreService datastore = DatastoreServiceFactory.getDatastoreService();
datastore.put(parsDataHolder)
</code></pre>
"
"14465180","<p>It seems like what you want to do is check the condition and then if it is false wait until timeout.  Then, in the other thread, notifyAll once the operation is complete.</p>

<p><strong>Waiter</strong></p>

<pre><code>syncrhonized(sharedObject){
  if(conditionIsFalse){
       sharedObject.wait(timeout);
       if(conditionIsFalse){ //check if this was woken up by a notify or something else
           //report some error
       }
       else{
           //do stuff when true
       }
  }
  else{
      //do stuff when true
  }
}
</code></pre>

<p><strong>Changer</strong></p>

<pre><code>  syncrhonized(sharedObject){
   //do stuff to change the condition
   sharedObject.notifyAll();
 }
</code></pre>

<p>That should do the trick for you.  You can also do it using a spin lock, but you would need to check the timeout every time you go through the loop.  The code might actually be a bit simpler though.</p>
"
"14475439","<p>how about</p>

<pre><code>public abstract class Enemy extends GameObject{
    public abstract void updatePositionCommon(){ 
        //code common to all

        updatePosition();
    }
    public abstract void updatePosition(){ 
        //override this method in children
    }

}
</code></pre>
"
"12166564","<p>I would use something like</p>

<pre><code>String s = myClass.getMyItems().toString();
assertTrue(s.contains("", name=foo, "") &amp;&amp; s.contains("", name=bar, ""));
</code></pre>
"
"12174661","<p>static variable belongs to the class and not to object(instance).
A static variable can be accessed directly by the class name and doesn’t need any object.
it saves space not having to have variables for the same data for each class. </p>

<pre><code>Syntax : &lt;class-name&gt;.&lt;variable-name&gt;

public class AA{

 static int a =10;


}
</code></pre>

<p><strong>You can call</strong></p>

<pre><code>System.out.println(AA.a);
System.out.println(aObject.a);
</code></pre>

<p>There is no differen between two calling but maintain coding convention to keep more readbale </p>
"
"15097747","<p>If you are asking how to retrieve the author information from the book instance, then you can get that using </p>

<pre><code>bookInf.getAuthor().getAuFname()
</code></pre>

<p>or </p>

<pre><code>bookInf.getAuthor().getAuSname()
</code></pre>

<p>However, you will have to modify the getAuthor method of the Book class first, as it is returning isbn instead of author. Hope it helps.</p>
"
"12177506","<p>Try it with <code>exclude-result-prefixes</code>, like this:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""ISO-8859-1""?&gt;
&lt;xsl:stylesheet version=""1.0""
                xmlns:xsl=""http://www.w3.org/1999/XSL/Transform""
                xmlns:abc=""http://abc.ru""
                exclude-result-prefixes=""abc""&gt;

    &lt;xsl:template match=""/""&gt;
      &lt;xsl:apply-templates select=""@* | node()""/&gt;
    &lt;/xsl:template&gt;

    &lt;xsl:template match=""a""&gt;
     &lt;href var=""{@href}""&gt;&lt;xsl:value-of select="".""/&gt;&lt;/href&gt;
    &lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</code></pre>
"
"15123717","<p>I hate to use the forbidden word but you could use a <code>goto</code> statement to create an an effective subroutine inside the method.  It is ugly and dangerous but much easier than what was shown in previous answers.  Although the private method with a call inside of the first method is much better, and serves you needs just fine.  I don't know why you would want to use a nested method for something as simple as this.</p>
"
"14539826","<p>This is a very common mistake for beginners.</p>

<p>As others have mentioned, you need to know that <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/String.html#replaceAll%28java.lang.String,%20java.lang.String%29"" rel=""nofollow""><code>replaceAll</code></a> returns a new string and doesn't change the current one, since strings are immutable in Java.</p>

<p>So use:</p>

<pre><code>input=input.replaceAll(""\\s"","""");
</code></pre>

<p>If you wish, you can have assistant plugins to help you with such bugs, such as <a href=""http://marketplace.eclipse.org/content/findbugs-eclipse-plugin"" rel=""nofollow""><strong>findBugs</strong></a> and <a href=""https://developers.google.com/java-dev-tools/download-codepro"" rel=""nofollow""><strong>codePro</strong></a>. </p>
"
"12211319","<p>Guava version 11:     </p>

<pre><code>   SortedSet exclusiveTailSet = Sets.filter(eSortedSet, Ranges.greaterThan(start));
</code></pre>

<p><strong>p.s.</strong> There is also a <strong>hack</strong> for SortedSet in case you couldn't use NavigableSet. The solution is to add for the search pattern a special symbol (start+""\0""). And this addition symbol will change the hashCode and thus the default tailset implementation of a SortedSet will work fine:</p>

<pre><code> SortedSet&lt;String&gt; t = s.tailSet(start+""\0""); 
</code></pre>

<p>It will be an equivalent of java.util.TreeSet#tailSet(E fromElement, boolean <em>inclusive</em>) with <strong>false</strong> value in a second parameter.</p>

<hr>

<p>God bless that the last com.google.common.collect.ImmutableSortedSet (since version 12)   has an implementation of NavigableSet also.</p>
"
"15170383","<p>This is how I got the  answer:</p>

<pre><code>def fib():
        x,y = 0,1
        while True:
            yield x
            x,y = y, x+y

def even(seq):
    for number in seq:
        if not number % 2:
            yield number

def under_a_million(seq):
    for number in seq:
        if number &gt; 4000000:
            break
        yield number   

print sum(even(under_a_million(fib())))
</code></pre>

<p>-M1K3</p>
"
"13833350","<p>Well, we have <code>newA2.y.equals(""b"")</code>, and since the third argument to <code>newA1</code>'s constructor is null, the <code>if</code> block does not execute.</p>

<p>However, when <code>newA2</code> is created, <code>newA1.y</code> is changed from <code>""a""</code> to <code>newA2.y + newA1.y</code>, ie <code>""ba""</code>. I'll let you figure out where the remainder of the output comes from.</p>

<p>This is why things can be confusing if you change the state of an object within the constructor of another object (and this makes things extremely <strong>not</strong> thread safe). The entire design is a bit of a code smell, in that you're coupling your <code>Alpha</code> objects.</p>
"
"12226339","<p>Yes it works. I tried a simple test case. and it works. :</p>

<pre><code>public class Test {
    private int variable;
    private Test2 test2;

    public Test(int variable, Test2 test2) {
        this.variable = variable;
        this.test2 = test2;
        test2.printTest(this);
    }

    public int getVariable() {
        return variable;
    }

    public static void main(String[] args) {
        Test test = new Test(111111,new Test2());
    }
}
class Test2{

    Test2() {
    }

    public void printTest(Test test){
        System.out.println(test.getVariable());
    }
}
</code></pre>

<p>And it works like a charm</p>
"
"14558971","<p>You could take a look at <a href=""http://www.yourkit.com/"" rel=""nofollow"">Yourkit</a> (commercial software), which can monitor memory, CPU and many more. It has special view that show how much time was spent in methods (for example you can see that 40% of the execution time was spent in method <code>xyz()</code>).</p>
"
"14568303","<p>Not sure about how you invoke a Java constructor in Clojure, but try making a default constructor in Java:  </p>

<pre><code>public ServerBuilder()  {
    this.limit = 100;  //some default
}
</code></pre>

<p>And yes, this clearly won't work if you want to pass an argument to the constructor.</p>

<p>Based on the other answer by @jtahlborn you can cast the long to an int using </p>

<p><code>(ServerBuilder. (int 100))</code> </p>

<p>from <a href=""http://clojure.org/java_interop#Java%20Interop-Some%20optimization%20tips"" rel=""nofollow"">http://clojure.org/java_interop#Java Interop-Some optimization tips</a></p>
"
"12284119","<pre><code>Class A 
{
 $x;
 function method1()
  {
   $time = microtime(true);
  }
 sleep($time + 30);
 task()//want to run this after (x+30) time
}
</code></pre>
"
"13897660","<pre><code>public class Main {

public static void main(String[] args) {
    boolean cond = true;
    int nothing = 0;

    for (int i = 0; i &lt; 20; i++) {
        int value = 0;
        long time = System.nanoTime();
        for (int count = 0; count &lt; 10000000; count++) {
            if (cond) {
                value = 1 + 2;
            }
        }

        time = System.nanoTime() - time;
        System.out.println(""1) performance: "" + time);
        nothing = value; // prevent java ignoring value

        value = 0;
        time = System.nanoTime();
        for (int count = 0; count &lt; 10000000; count++) {
            if (cond) {
                value = 1 + 2;
            } else {
                value = 1 + 3;
            }
        }
        time = System.nanoTime() - time;
        System.out.println(""2) performance: "" + time);
        nothing = value; // prevent java ignoring value
    }

    nothing = nothing + 1;
}
}
</code></pre>

<p><strong>This is the result:</strong></p>

<pre><code>1) performance: 1797000
2) performance: 3742000
1) performance: 7290000
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 1000
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 1000
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
1) performance: 0
2) performance: 0
</code></pre>
"
"12319765","<pre><code>   System.out.println(""get date range from week number and year in java"");
   System.out.println(); // print a blank line

   // get the input from the user
   Scanner sc = new Scanner(System.in);

   System.out.print(""Enter the week : "");
   int weekNumber  = sc.nextInt(); 
   System.out.print(""Enter the Year: "");
   int year = sc.nextInt() ;



   Calendar cal = Calendar.getInstance();
   //cal.setTime(new Date());

   cal.set(Calendar.YEAR, year);
   cal.set(Calendar.WEEK_OF_YEAR, weekNumber);

   SimpleDateFormat formatter = new SimpleDateFormat(""yyyy/MM/dd HH:mm:ss"");

   cal.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY);
   System.out.println(formatter.format(cal.getTime())); // start date

   cal.add(Calendar.DAY_OF_WEEK, 6);
   System.out.println(formatter.format(cal.getTime())); // end date
</code></pre>
"
"14650409","<p>You are checking <code>i&lt;=n</code>.So when <code>i==n</code>, you will get 0 only and it will return false always.Try <code>i&lt;=(n/2)</code>.No need to check until <code>i&lt;n</code>.</p>
"
"14657775","<p>A suggestion I have for you; It should be</p>

<pre><code>    public static void main(String[] args) {
    ...
    }
</code></pre>

<p>Instead Of</p>

<pre><code>    public static void main(String args[]) {
    ...
    }
</code></pre>
"
"12364931","<p>You should use integers as input if you convert them with:</p>

<pre><code>    String CalculateCheckSum( Integer[] bytes ){
        Integer CheckSum = 0, i = 0;
        for( i = 0; i &lt; bytes.length; i++ ){
            CheckSum += bytes[i];
        }
        return Integer.toHexString(CheckSum);
    }
</code></pre>

<p>this will return the expected 0xCE4 hope this fixed your problem</p>
"
"15869788","<p>I've created small Socket Factory class to handle the HTTP CONNECT via socket. The socket then can be used as per-normal provided the proxy supports CONNECT to the destination.</p>

<pre><code>public final class SocketFactory {

    public static Socket GetSocket(String host, String port) throws IOException {

        /*************************
         * Get the jvm arguments
         *************************/

        int proxyPort = Integer.parseInt(System.getProperty(""http.proxyPort""));
        String proxyHost = System.getProperty(""http.proxyHost"");

        // Socket object connecting to proxy
        Socket sock = new Socket(proxyHost, proxyPort);

        /***********************************
         * HTTP CONNECT protocol RFC 2616
         ***********************************/
        String proxyConnect = ""CONNECT "" + host + "":"" + port;

        // Add Proxy Authorization if proxyUser and proxyPass is set
        try {
            String proxyUserPass = String.format(""%s:%s"",
                    System.getProperty(""http.proxyUser""),
                    System.getProperty(""http.proxyPass""));

            proxyConnect.concat("" HTTP/1.0\nProxy-Authorization:Basic ""
                    + Base64.encode(proxyUserPass.getBytes()));
        } catch (Exception e) {
        } finally {
            proxyConnect.concat(""\n\n"");
        }

        sock.getOutputStream().write(proxyConnect.getBytes());
        /***********************************/

        /***************************
         * validate HTTP response.
         ***************************/
        byte[] tmpBuffer = new byte[512];
        InputStream socketInput = sock.getInputStream();

        int len = socketInput.read(tmpBuffer, 0, tmpBuffer.length);

        if (len == 0) {
            throw new SocketException(""Invalid response from proxy"");
        }

        String proxyResponse = new String(tmpBuffer, 0, len, ""UTF-8"");

        // Expecting HTTP/1.x 200 OK
        if (proxyResponse.indexOf(""200"") != -1) {

            // Flush any outstanding message in buffer
            if (socketInput.available() &gt; 0)
                socketInput.skip(socketInput.available());

            // Proxy Connect Successful, return the socket for IO
            return sock;
        } else {
            throw new SocketFactoryException(""Fail to create Socket"",
                    proxyResponse);
        }
    }

    /**
     * Simplest Base64 Encoder adopted from GeorgeK
     * 
     * @see http://stackoverflow.com/questions/469695/decode-base64-data-in-java/4265472#4265472
     */
    private static class Base64 {
        /***********************
         * Base64 character set
         ***********************/
        private final static char[] ALPHABET = ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/""
                .toCharArray();

        /**
         * Translates the specified byte array into Base64 string.
         * 
         * @param buf
         *            the byte array (not null)
         * @return the translated Base64 string (not null)
         */
        public static String encode(byte[] buf) {
            int size = buf.length;
            char[] ar = new char[((size + 2) / 3) * 4];
            int a = 0;
            int i = 0;
            while (i &lt; size) {
                byte b0 = buf[i++];
                byte b1 = (i &lt; size) ? buf[i++] : 0;
                byte b2 = (i &lt; size) ? buf[i++] : 0;

                int mask = 0x3F;
                ar[a++] = ALPHABET[(b0 &gt;&gt; 2) &amp; mask];
                ar[a++] = ALPHABET[((b0 &lt;&lt; 4) | ((b1 &amp; 0xFF) &gt;&gt; 4)) &amp; mask];
                ar[a++] = ALPHABET[((b1 &lt;&lt; 2) | ((b2 &amp; 0xFF) &gt;&gt; 6)) &amp; mask];
                ar[a++] = ALPHABET[b2 &amp; mask];
            }
            switch (size % 3) {
            case 1:
                ar[--a] = '=';
            case 2:
                ar[--a] = '=';
            }
            return new String(ar);
        }
    }
}
</code></pre>

<p><a href=""https://code.google.com/p/java-socket-over-http-proxy-connect/"" rel=""nofollow"">https://code.google.com/p/java-socket-over-http-proxy-connect/</a></p>
"
"13972677","<p>This is how I solved this problem.
I had in my application google maps too, and I change: </p>

<pre><code>c:\users\manuel\.Android\debug.keystore
</code></pre>

<p>with new created key (new key didn't work) and error was:</p>

<pre><code>Failed to find style 'mapViewStyle' in current theme
</code></pre>

<p>after returning old key everithing worked fine.
I really hate developing for android it's mess comparing to Visual studio development.
this problem cost me 4h ...</p>

<p>To re-create debug.keystore use this <a href=""http://stackoverflow.com/questions/2194808/debug-certificate-expired-error-in-eclipse-android-plugins/2196397#2196397"">&quot;Debug certificate expired&quot; error in Eclipse Android plugins</a></p>
"
"16103895","<p>Don't divide by 2. Just bitshift(>>) once. 2/2 = 1 </p>

<pre><code> 00000010 = 2 
    &gt;&gt; 1
    00000001 = 1

    Code:

    int x = 64;
    int y = 0;
    y = x&gt;&gt;1;
    System.out.println(y);

    ------------------------------------------------------
    32
</code></pre>
"
"12423182","<p>please try the following code.</p>

<pre><code>String className = ""com.android.internal.telephony.gsm.GSMPhone"";
Class classToInvestigate = Class.forName(className);
Object gsmObj = classToInvestigate.newInstance();

Object arglist[] = new Object[3];
arglist[0] = new String(""Phone Number"");
arglist[1] = new String (""16035552412""); // Not a real phone number
arglist[2] = null;

Class[] paramTypes = new Class[3];
paramTypes[0] = String.class;
paramTypes[1] = String.class;
paramTypes[2] = Message.class;

Method setLine1Number = classToInvestigate.getMethod(""setLine1Number"", paramTypes);
boolean accessible = setLine1Number.isAccessible();
setLine1Number.setAccessible(true);

Object TestReturn = setLine1Number.invoke(gsmObj, arglist);
</code></pre>
"
"16295655","<p>""Should I clone the list first?""</p>

<p>That will be the easiest solution, remove from the clone, and copy the clone back after removal.</p>

<p>An example from my rummikub game:</p>

<pre><code>SuppressWarnings(""unchecked"")
public void removeStones() {
  ArrayList&lt;Stone&gt; clone = (ArrayList&lt;Stone&gt;) stones.clone();
  // remove the stones moved to the table
  for (Stone stone : stones) {
      if (stone.isOnTable()) {
         clone.remove(stone);
      }
  }
  stones = (ArrayList&lt;Stone&gt;) clone.clone();
  sortStones();
}
</code></pre>
"
"14740776","<pre><code>Text=Text.replace("" red "", "" blue "");
Text=Text.replace("" red&lt;"","" blue&lt;"");
Text=Text.replace("" red."", "" blue."");
</code></pre>
"
"14009220","<pre><code>for(int i=0; i&lt;myArray.length; i++)
{
  if(myArray[i] != 0)
  {
    completed = true;break;
  }
}
</code></pre>

<p>Just look for non zero.</p>

<p>OR</p>

<pre><code>for(int i=0; i&lt;myArray.length; i++)
{
  if(myArray[i] == 0)
  {
    completed = false;break;
  }
}
</code></pre>

<p>Just look for zero.</p>
"
"14009232","<p>Alternately, you could do </p>

<pre><code>var completed = true;
for(int i=0; i&lt;myArray.length; i++)
{
   if(myArray[i] == 0)
   {
       completed = false;
   }
}
</code></pre>

<p>Which would do the same. </p>
"
"12438057","<p>The answer to this question as I figure it out is, in the SOAP_ADDRESS string, remove the /WebSiteName part and it works fine. I have tested this in my android device. Works perfectly.</p>

<p>The corrected String should be as follow:</p>

<pre><code>private static final String SOAP_ADDRESS = ""http://myStaticIP:portNo/CommunicationInterface.asmx"";
</code></pre>

<p>where CommunicationInterface.asmx is the web service name.
other static variables remain same.</p>

<p>Note: This is used when the web site is hosted in IIS. </p>
"
"16650907","<p>I think a found a simpler approach:</p>

<pre><code>public interface MyRunnable extends Runnable {
    public void run(int data);
}

public void someMethod(int n, String s, MyRunnable r) {
   ...
   r.run(n);
   ...
}
</code></pre>

<p>the call:</p>

<pre><code>someMethod(5, ""Hello"", new MyRunnable() {

    @Override
    public void run(int data) {
        // TODO Auto-generated method stub

    }

    @Override
    public void run() {
        // TODO Auto-generated method stub

    }
});
</code></pre>
"
"16667119","<p>Have a look at this:
<a href=""http://developer.android.com/reference/android/content/AsyncTaskLoader.html"" rel=""nofollow"">Android AsyncTaskLoader Reference</a></p>

<p>I believe your problem resides at this line:</p>

<pre><code>public class MainFragment extends ListFragment implements
    //LoaderManager.LoaderCallbacks&lt;Cursor&gt;
    LoaderManager.LoaderCallbacks
</code></pre>

<p>You should change to something like this:</p>

<pre><code>public static class AppListFragment extends ListFragment
    implements LoaderManager.LoaderCallbacks&lt;List&lt;AppEntry&gt;&gt;
</code></pre>
"
"16864901","<p>With the command line, after having unzipped the JAR, something like this should work :</p>

<pre><code>for f in *.class; do javap -c $(basename -s .class $f) | grep invoke | sed 's/.*Method\(.*\)/\1/g'; done | wc -l
</code></pre>
"
"16917318","<p>I download html manually:</p>

<pre><code>private String downloadHtml(String path) {
    InputStream is = null;
    try {
        String result = """";
        String line;

        URL url = new URL(path);
        is = url.openStream();  // throws an IOException
        BufferedReader br = new BufferedReader(new InputStreamReader(is));

        while ((line = br.readLine()) != null) {
            result += line;
        }
        return result;
    } catch (IOException ioe) {
        ioe.printStackTrace();
    } finally {
        try {
            if (is != null) is.close();
        } catch (IOException ioe) {
            // nothing to see here
        }
    }
    return """";
}
</code></pre>

<p>and then give it to JSoup</p>

<pre><code>Documant doc = Jsoup.parse(downloadHtml(path));
</code></pre>

<p>And have no problem with timeout.</p>
"
"14832110","<pre><code>private void tset(){
    int min1; float somefloat;
    try {
        //setting values for min and somefloat
        min1 = 1;
        somefloat = 0.92f;
    while (true){
        //warning: variables min1 and somefloat may not be initialized.
        float value1 = (1023 - min1) * somefloat;
        System.out.println(""Value: "" + value1);
    }
    } catch (Exception ioe) {
        System.err.println(""Read Exception"");
    } 
}
</code></pre>

<p>This may be the code you are looking for...</p>
"
"14839200","<pre><code> object = ObjectGenerator.getObject(objectName);
</code></pre>

<p>always returns Object's object since you are calling a static method. For explicitly getting the generic object you have used for T,in your code,</p>

<pre><code> object = ObjectGenerator.&lt;T&gt; getObject(objectName); 
</code></pre>

<p><code>&lt;T&gt;</code> is used in static context. For non static invocation it is not needed.</p>
"
"14870361","<pre><code>{   
int LowerLeftSide;
if ((BRICK_WIDTH / 2) == 0) {
     LowerLeftSide = ((getWidth()/2) - (BRICK_WIDTH*(BRICKS_IN_BASE/2)));
} else {
     LowerLeftSide = ((getWidth()/2) - (BRICK_WIDTH*(BRICKS_IN_BASE/2-1)));
}
</code></pre>
"
"14164661","<p>The first <code>print</code> is wrong, since it uses the <code>y</code> value from the previous for loop.</p>

<p>Change it to:</p>

<pre><code>for(x = 1; x &lt;= row; x++){
  System.out.print(x +  ""    "");
  for(y = 1 ; y &lt;= column; y++){
    System.out.print(y * x + ""    "");
  }
  System.out.println();
}
</code></pre>

<p>Update: the loop end was also <code>&lt;</code>, while they should be <code>&lt;=</code> (since they're 1-based). I updated that in the fragment above.</p>
"
"17746875","<p>There is a utility/command in Linux/Unix called <code>dos2unix</code> that will help you convert your files from dos to unix format. To install simply type in console(you may need root privileges)</p>

<pre><code>yum install dos2unix
</code></pre>

<p>To do the conversion you have to use command dos2unix followed by filename. For example</p>

<pre><code>[aniket@localhost ~]$ dos2unix sample.txt 
dos2unix: converting file sample.txt to UNIX format ...
</code></pre>

<p>For all files in a directory you can simply use </p>

<pre><code>dos2unix *
</code></pre>
"
"14188026","<p>You should rewrite this code </p>

<p>1) 
class Field 
add method getType();</p>

<p>2) code:</p>

<pre><code>public static int getNumberOfOwned(Player owner, String type){
  int count = 0;      
  for (Field f: board.fieldList){
    if (f.getType.equals(type)&amp;&amp; f.getOwnedBy().equesl(owner))
    count++;
  }
  return count;
</code></pre>

<p>}</p>
"
"14188032","<p>Make <code>string getTypeString()</code> a property of Field, and avoid having a bunch of if statements (check <code>type.equals(f.getTypeString())</code>) Make getOwnedBy a property of Field, and don't use a cast. (fields that don't have owners can return null)</p>
"
"12571586","<p>use a collections object like <code>ArrayList</code>,</p>

<pre><code>List&lt;Double&gt; doubles = new ArrayList&lt;Double&gt;();
doubles.add(...);
doubles.add(...);
...
Double[] temp = doubles.toArray(new Double[0]);
</code></pre>
"
"14194661","<p>To make sure that an element is present you can do the following:</p>

<pre><code>driver.findElements(By.id(""id""));
</code></pre>

<p>That will return an array, if that array size is > 0 then the element/s is present.</p>

<p>Also, you need to provide more information, such as language and what have you tried before asking,</p>

<p>Good luck</p>
"
"14937400","<pre><code>public static double number;

    if(speech==""hi"")
    {
        number=1;
    }
    else if(speech==""thanks"")
    {
        number=2;
    }
    else if(speech==""Bye"")
    {
        number=0;
    }
    else
    {
        System.out.println(""Word Not Found"");
    }
</code></pre>
"
"18278087","<p>It can be rendered as the following table:</p>

<pre><code>&lt;table class=""machine"" name=""""&gt;
   &lt;tr&gt;
     &lt;th class=""partdescriptor"" colspan=""2""&gt;
     &lt;th class=""part"" colspan=""4""&gt;
   &lt;/tr&gt;
   &lt;tr&gt;
     &lt;td class=""partdescriptor group""&gt;&lt;/td&gt;
     &lt;td class=""partdescriptor"" id=""""&gt;&lt;/td&gt;
     &lt;td class=""part group""&gt;&lt;/td&gt;
     &lt;td class=""part"" id=""""&gt;&lt;/td&gt;
     &lt;td class=""description""&gt;&lt;/td&gt;
     &lt;td class=""compat""&gt;&lt;/td&gt;
    &lt;/tr&gt;
 &lt;/table&gt;
</code></pre>

<p>The markup decomposes into the following JSON object due to the lack of metadata via attributes:</p>

<pre><code>{
    ""objectHTMLTableElement"": [
        {
            ""classname"": ""machine"",
            ""name"": """"
        },
        {
            ""tr"": [
                {
                    ""HTMLTableCellElement"": {""classname"":""partdescriptor"",""colspan"":2}
                },
                {
                    ""HTMLTableCellElement"": {""classname"":""part"",""colspan"":4}
                }
            ]
        },
        {
            ""tr"": [
                {
                    ""HTMLTableCellElement"": {""classname"":""partdescriptor group""}
                },
                {
                    ""HTMLTableCellElement"": {""classname"":""partdescriptor"",""id"":""""}
                },
                {
                    ""HTMLTableCellElement"": {""classname"":""part"",""id"":""""}
                },
                {
                    ""HTMLTableCellElement"": {""classname"":""description""}
                },
                {
                    ""HTMLTableCellElement"": {""classname"":""compat""}
                }
            ]
        }
    ]
}
</code></pre>

<p>Alternatively, Unicode can simplify the mapping:</p>

<pre><code>{""name"":"""",""[{\u0022group\u0022:\u0022\u0022},{\u0022id\u0022:\u0022\u0022}]"":
 [
 {""group"":""""},
 {""id"":""""},
 {""description"":""""},
 {""compat"":""""}
 ]
}
</code></pre>

<p>Which can be stringified:</p>

<pre><code>JSON.stringify({""name"":"""",""[{\u0022group\u0022:\u0022\u0022},{\u0022id\u0022:\u0022\u0022}"":[{""group"":""""},{""id"":""""},{""description"":""""},{""compat"":""""}]})
</code></pre>

<p>to produce:</p>

<pre><code>""{\""name\"":\""\"",\""[{\\\""group\\\"":\\\""\\\""},{\\\""id\\\"":\\\""\\\""}]\"":[{\""group\"":\""\""},{\""id\"":\""\""},{\""description\"":\""\""},{\""compat\"":\""\""}]}""
</code></pre>

<p>which can be parsed:</p>

<pre><code>JSON.parse(""{\""name\"":\""\"",\""[{\\\""group\\\"":\\\""\\\""},{\\\""id\\\"":\\\""\\\""}]\"":[{\""group\"":\""\""},{\""id\"":\""\""},{\""description\"":\""\""},{\""compat\"":\""\""}]}"")
</code></pre>

<p>to produce an object literal:</p>

<pre><code>({name:"""", '[{""group"":""""},{""id"":""""}]':[{group:""""}, {id:""""}, {description:""""}, {compat:""""}]})
</code></pre>
"
"14210283","<p>DO this way</p>

<pre><code>(""String"".replace('t','T').Tostring() ==  (""String"".replace('t','T')).ToString()
</code></pre>

<p>This will solve your problem because the replace statement should be converted to string before eveluation.</p>

<p>You can also user the String.Equals for this or better you use ignore case as you mention in your question.</p>
"
"18328201","<p>lol: i find the problem here <code>Format formatter = new SimpleDateFormat(""yyyy-MM-dd_HH:mm:ss"");</code></p>

<p>you must let use:</p>

<pre><code>SimpleDateFormat format = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"");
</code></pre>

<p>if you use <code>(""yyyy-MM-dd_HH:mm:ss"")</code> will never create file ,create file will fail</p>

<p>you can try it again ! i find it ,i shared this bug with everyone ,thankyou for you reading i really find it ,i think this is will be helpful to someone with
who deal with storing a picture and use of the dateFormatter ,it cost me almost two nights and days for me to find out!</p>
"
"14954241","<p>I think you can't do that. Check out this class:</p>

<pre><code>public class TestClass
{
    private List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();

    /**
     * @param args
     * @throws NoSuchFieldException
     * @throws SecurityException
     */
    public static void main(String[] args)
    {
        try
        {
            new TestClass().getClass().getDeclaredField(""list"").getGenericType(); // this is the type parameter passed to List
        }
        catch (SecurityException e)
        {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        catch (NoSuchFieldException e)
        {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        new TestClass().&lt;Integer&gt; insert(new ArrayList&lt;Integer&gt;());
    }

    public &lt;T&gt; void insert(List&lt;T&gt; tList)
    {
        ParameterizedType paramType;
        paramType = (ParameterizedType) tList.getClass().getGenericInterfaces()[0];
        paramType.getActualTypeArguments()[0].getClass();
    }
}
</code></pre>

<p>You can get the type parameters from a class or a field but it is not working for generic methods. Try using a non-generic method!</p>

<p><strong>OR</strong></p>

<p>another solution might be passing the actual <code>Class</code> object to the method.</p>
"
"14282676","<p><strong>This code works fine...</strong></p>

<pre><code>public class Exec2 {

static String SSH_SERVER_PATH = ""localhost"";
static String SSH_SERVER_USERNAME = ""root"";
static String SSH_SERVER_PASSWORD = ""root"";

public static void main(String[] arg) {
    try {
        JSch jsch = new JSch();
        String host = SSH_SERVER_PATH;
        String user = SSH_SERVER_USERNAME;

        Session session = jsch.getSession(user, host, 22);

        // username and password will be given via UserInfo interface.

        UserInfo ui = new MyUserInfo();
        session.setUserInfo(ui);
        session.connect();

        String command = ""uname"";

        Channel channel = session.openChannel(""exec"");
        ((ChannelExec) channel).setCommand(command);

        channel.setInputStream(null);

        ((ChannelExec) channel).setErrStream(System.err);

        InputStream in = channel.getInputStream();

        channel.connect();

        byte[] tmp = new byte[1024];
        while (true) {
            while (in.available() &gt; 0) {
                int i = in.read(tmp, 0, 1024);
                if (i &lt; 0)
                    break;
                System.out.print(new String(tmp, 0, i));
            }
            if (channel.isClosed()) {
                System.out.println(""exit-status: "" + channel.getExitStatus());
                break;
            }
            try {
                Thread.sleep(1000);
            } catch (Exception ee) {
            }
        }
        channel.disconnect();
        session.disconnect();
    } catch (Exception e) {
        System.out.println(e);
    }
}

public static class MyUserInfo implements UserInfo, UIKeyboardInteractive {

    String passwd;

    public String getPassword() {
        return passwd;
    }

    public boolean promptYesNo(String str) {
        return true;
    }


    public String getPassphrase() {
        return null;
    }

    public boolean promptPassphrase(String message) {
        return true;
    }

    public boolean promptPassword(String message) {
        passwd = SSH_SERVER_PASSWORD;
        return true;
    }

    public void showMessage(String message) {
        System.out.println(""message = "" + message);
    }

    public String[] promptKeyboardInteractive(String destination,
            String name, String instruction, String[] prompt, boolean[] echo) {
        if (prompt[0].equals(""Password: "")){
            String[] response = new String[1];
            response[0] = SSH_SERVER_PASSWORD;
            return response;
        }
        return null;
    }
}
}
</code></pre>
"
"18508670","<p>I think you need to include a Throwable in your new Exception object e.g. something like </p>

<pre><code>throw new Exception(""ERROR"", new Throwable()); 
</code></pre>

<p><a href=""http://www-01.ibm.com/support/docview.wss?uid=swg21386753"" rel=""nofollow"">Check this IBM article</a></p>

<blockquote>
  <p>The correct way to catch and re-throw an exception is to pass the
  caught exception object as the ""rootCause"" or inner exception
  parameter to the constructor of the new exception</p>
</blockquote>
"
"12638095","<p>The pattern here look quite good and should work. However, sometimes I find it easier to do stuff like this step by step, e.g.:</p>

<pre><code>  public static void main(String[] args){

    String[] testStrings = { ""&lt;blockquote&gt;1. тест1; тест2; &lt;/blockquote&gt;"",
      ""&lt;blockquote&gt;2. тест1; тест2; &lt;/blockquote&gt;"",
      ""&lt;blockquote&gt;1) тест1; тест2; &lt;/blockquote&gt;"",
      ""&lt;blockquote&gt;2) тест1; тест2; &lt;/blockquote&gt;"",
      ""&lt;blockquote&gt;1. 1) тест1; тест2; &lt;/blockquote&gt;"",
      ""&lt;blockquote&gt;1) 1. тест1; тест2; &lt;/blockquote&gt;"" };

    for (String testString : testStrings){

      String result = testString
        .replace(""&lt;blockquote&gt;"", """")
        .replace(""&lt;/blockquote&gt;"", """")
        .replaceAll(""\\d\\.|\\d\\)"", """")
        .trim();

      System.out.println(result);
    }
  }
</code></pre>
"
"15005054","<p>In C range for __int32 is –2147483648 to 2147483647. <a href=""http://msdn.microsoft.com/en-us/library/s3f49ktz.aspx"" rel=""nofollow"">See here for full ranges.</a></p>

<pre><code>unsigned short 0 to 65535
signed short –32768 to 32767
unsigned long 0 to 4294967295
signed long –2147483648 to 2147483647
</code></pre>

<p>There are no guarantees that an 'int' will be 32 bits, if you want to use variables of a specific size, particularly when writing code that involves bit manipulations, you should use the 'Standard Integer Types'.</p>

<p>In Java</p>

<p>The int data type is a 32-bit signed two's complement integer. It has a minimum value of -2,147,483,648 and a maximum value of 2,147,483,647 (inclusive).</p>
"
"12659434","<p>I will try this</p>

<pre><code> public static int[]  swapping(int[] lane) 
  {   
int[] result = new int[lane.length];  

 for(int i = 0; i &lt; result .length; i++) {  
      if ( result[i]==0) 
      {
        if( i==0)
           {
           }
         else
            {
       temp = result[i] ; 
       result[i]  = result [i-1] ; 
       result [i-1] = temp ; 
             }
     else
      {
       }
 return result ;
}
</code></pre>
"
"18822233","<pre><code>public static boolean compareFundIds(String requestFundIds, String existingFundIds) {
        boolean isFundsSame = false;
        String[] string1Arry= org.springframework.util.StringUtils.tokenizeToStringArray(requestFundIds, "","");
        String[] string2Arry= org.springframework.util.StringUtils.tokenizeToStringArray(existingFundIds, "","");
        if(string1Arry.length == string2Arry.length){
            Arrays.sort(string1Arry);
            Arrays.sort(string2Arry);
            if(Arrays.equals(string1Arry,string2Arry)){
                isFundsSame = true;
            }
        }
        return isFundsSame;
    }
</code></pre>

<p>Sample <strong>Input String</strong> passed to this method are</p>

<pre><code>String str1= ""11,12"";
String str2= ""12,11"";
</code></pre>
"
"12669474","<p>You can use the swap method from Collections:     </p>

<pre><code>Collections.swap(Integer, list1, list2);
</code></pre>
"
"12683738","<p>Use <code>keyboard.nextInt()</code> to read an int value. If you need to read 3 values, use it 3 times.</p>

<p>Documentation link:</p>

<ul>
<li><a href=""http://docs.oracle.com/javase/6/docs/api/java/util/Scanner.html#nextInt%28%29"" rel=""nofollow"">Scanner#nextInt</a>.</li>
</ul>

<blockquote>
  <p>Scans the next token of the input as an int. This method will throw InputMismatchException if the next token cannot be translated into a valid int value as described below. If the translation is successful, the scanner advances past the input that matched.</p>
</blockquote>

<p>If you don't know if the next data could be an integer, you can use <a href=""http://docs.oracle.com/javase/6/docs/api/java/util/Scanner.html#hasNextInt%28%29"" rel=""nofollow""><code>Scanner#hasNextInt</code></a> method.</p>
"
"12685886","<p><code>System.exit(0)</code> closes the entire app.
<code>finish()</code> is another snippet that closes the current activity.</p>
"
"15101598","<p>You cannot use <code>DataOutputStream</code>, it's for Java-Java communication. Try <code>Writer</code> for writing headers, and original OutputStream for writing file content.</p>

<p>What's happening is that the browser sees invalid response, and closes the connection. The serve is still writing to the client, which responds RST because the connection is gone.</p>
"
"19199560","<pre><code>Arrays.fill(arr, new double[4]);
</code></pre>
"
"15136005","<p>Maybe <a href=""http://www.mkyong.com/java/how-to-determine-a-prime-number-in-java/"" rel=""nofollow"">this</a> article can help you:</p>

<pre><code>boolean isPrime(int n) {
//check if n is a multiple of 2
if (n%2==0) return false;
//if not, then just check the odds
for(int i=3;i*i&lt;=n;i+=2) {
    if(n%i==0)
        return false;
}
return true;
}
</code></pre>
"
"14407809","<p>Looks like my issue was in my JSP. I had the following form initially:</p>

<pre><code>&lt;%@ page language=""java"" contentType=""text/html; charset=ISO-8859-1""
pageEncoding=""ISO-8859-1""%&gt;
&lt;!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd""&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv=""Content-Type"" content=""text/html; charset=ISO-8859-1""&gt;
&lt;title&gt;File Delete&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;form method=""post"" action=""DeleteServlet""
        enctype=""multipart/form-data""&gt;
        Select file to delete: &lt;input type=""file"" name=""dataFile""
            id=""fileChooser"" /&gt;&lt;br /&gt;
        &lt;br /&gt; &lt;input type=""submit"" value=""Delete"" /&gt;
    &lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>I changed this by deleting <code>encytype=""multipart/form-data""</code> from the form, and was then able to use request.getParameter(""dataFile"") to get the file name. </p>
"
"12713298","<pre><code>// Convert millis to seconds. This can be simplified a bit,
// but I left it in this form for clarity.
long m = System.currentTimeMillis(); // that's our input
int s = Math.max(.18*(Math.toRadians(m)/Math.PI),Math.pow(Math.E, Math.log(m)-Math.log(1000)));
System.out.println( ""seconds: s"" );
</code></pre>
"
"19614778","<p>Change <code>/usr/local/Cellar/scala/2.9.2</code> to <code>/usr/local/Cellar/scala/</code> and you are good to go.</p>
"
"12726495","<p>If I understand your question well, one response to your question is this:</p>

<pre><code>      ArrayList alDeposits = new ArrayList(); 
      ArrayList alWithDrawals = new ArrayList(); 
      ArrayList alChecks = new ArrayList();  
      while (!alDeposits.isEmpty() || !alWithDrawals.isEmpty() || !alChecks.isEmpty()) {
      //get record 5 times until list is empty
        for (int i=0 ; i&lt;5; i++) {
          if (!alDeposits.isEmpty()) {
            alDeposits.remove(0);//get record
          }
          if (!alWithDrawals.isEmpty()) {
            alWithDrawals.remove(0);//get record
          }
          if (!alChecks.isEmpty()) {
            alChecks.remove(0);//get record
          }
        }
      }
</code></pre>
"
"19738775","<p>OK the reason why equals compare scale and value is understandable.
However did you know that:</p>

<pre><code>double value = 5735000.0;
if (! BigDecimal.valueOf(value).equals(new BigDecimal(value)) {
    // Please explain how the valueOf construct a BigDecimal with scale of 1
    // But the constructor construct a BigDecimal with scale of 0
}
</code></pre>

<p>This is bad</p>
"
"14464367","<p>try to use <code>switch case</code> statment.
but normally it's not the prefermance bottleneck.</p>
"
"12740939","<p>Something like below ?</p>

<pre><code>int i=1;
        int mul;
        while(true)
        {
            mul = i++;
            if(mul*(ans2)==ans1)
            {
                System.out.println(mul);
                break;
            }
            else if(mul*(ans2)&gt;ans1)
            {
                System.out.println(""Cannot be divided"");
                break;
            }
        }
</code></pre>
"
"20045785","<p>A more groovyesque approach would be to use <strong>inject</strong> in combination with <strong>metaClass</strong>:</p>

<p>I would to love to say:</p>

<pre><code>String myInput=""This string is FORBIDDEN""
myInput.containsAny([""FORBIDDEN"",""NOT_ALLOWED""]) //=&gt;true
</code></pre>

<p>And the method would be:</p>

<pre><code>myInput.metaClass.containsAny={List&lt;String&gt; notAllowedTerms-&gt;
   notAllowedTerms?.inject(false,{found,term-&gt;found || delegate.contains(term)})
}
</code></pre>

<p>If you need <strong>containsAny</strong> to be present for any future String variable then add the method to the class instead of the object:</p>

<pre><code>String.metaClass.containsAny={notAllowedTerms-&gt;
   notAllowedTerms?.inject(false,{found,term-&gt;found || delegate.contains(term)})
}
</code></pre>
"
"15193682","<p>I think this is what you intended (untested):</p>

<pre><code>// The ""E006"" class.
import java.awt.*;
import hsa.Console;

public class E006
{
    static Console c;           // The output console

    public static void main (String[] args)
    {
        c = new Console();
        int i, j;
        for(i = 0; i &lt; 10; i++) {
            for(j = 0; j &lt; i; j++) {
                c.print("" "");
            }
            c.println(""*"");
        }
    } // main method
} // E006 class
</code></pre>

<p>Why does it (should it) work? In the first loop (i=0) it loops 0 times printing spaces, then adds an asterisk with a newline (println adds a newline after the end). Next loop, it prints one space before the asterisk, next prints 2, etc.</p>

<p>p.s. is this homework? you should tag it.</p>
"
"15193779","<p>You also can create a reference for your linked list. <code>LinkedList ll = YourLinkedList;</code>
Then you can do <code>while (ll != null) ll = ll.next;</code>.</p>
"
"12761977","<pre><code>import java.util.Scanner;

//begin class driver       
public class driver {

/**
 * @paramargs the command line arguments
 */
//begin main method
    public static void main(String[] args) {
    //initiates scanner
        Scanner userInput = new Scanner (System.in);

    //declare variables
    int dayOfWeek;
    String userEvent;

    //creates object for calender class
    calender calenderObject = new calender();
    calender.fillArray();

    //user prompt
    System.out.println(""Enter day of week for your event in the following format:"");
    System.out.println(""Enter 1 for Monday"");
    System.out.println(""Enter 2 for Tuesday"");
    System.out.println(""Enter 3 for Wednsday"");
    System.out.println(""Enter 4 for Thursday"");
    System.out.println(""Enter 5 for Friday"");
    System.out.println(""Enter -1 to quit"");

    //collect user input
    dayOfWeek = userInput.nextInt(); 

    //user prompt
    System.out.println(""Please type in the name of your event"");

    //collect user input
    userEvent = userInput.next();

    //begin while loop
    while (dayOfWeek != -1) {
        if ((dayOfWeek&gt;=1) &amp;&amp; (dayOfWeek&lt;=5)){
            calenderObject.createEvent(dayOfWeek, userEvent,dayOfWeek);
            for (int i=0;i&lt;calender.length;i++){
                System.out.println(calender.events[i]);
            }
            dayOfWeek = userInput.nextInt();

            if  (dayOfWeek == -1){
                for (int i=0;i&lt;calender.length;i++){
                    System.out.println(calender.events[i]);
                }
                System.exit(0);
            }
            System.out.println(""Please type in the name of your event"");    
            userEvent = userInput.next();
        } else{
            System.out.println(""You have entered an invalid number"");
            System.out.println(""Press -1 to quit or enter another day"");
            System.out.println(""Enter 1 for Monday"");
            System.out.println(""Enter 2 for Tuesday"");
            System.out.println(""Enter 3 for Wednsday"");
            System.out.println(""Enter 4 for Thursday"");
            System.out.println(""Enter 5 for Friday"");
            System.out.println(""Enter -1 to quit"");
            dayOfWeek = userInput.nextInt(); 
        }
    }

    //end main method
}
</code></pre>

<p>}</p>

<pre><code>    //begin calender class
public class calender {

    static int length = 5;
    static String[] events = new String[length];

    public static String[] fillArray(){
        for (int i=0; i&lt; length;i++){
            events[i] = ""-No event planned-"";
        }
        return events;
    }

    //begin createEvent method
public String[] createEvent(int l, String userEvent, int dayOfWeek){
    int t = l;
        if(t%5 == 1 ){
            events[0] = (""Monday Appoinment: "") + userEvent;
        } else if(t%5 == 2 ){
            events[1] = (""Tuesday Appoinment: "") + userEvent;
        } else if(t%5 == 3 ){
            events[2] = (""WednsdayAppoinment: "") + userEvent;
        } else if(t%5 == 4){
            events[3] = (""Thursday Appoinment: "") + userEvent;
        } else if(t%5 == 0 ){
            events[4] = (""Friday Appoinment: "") + userEvent;
        }        
        return events;
    }

//end calender class    
}
</code></pre>
"
"15258110","<p>You can just use: </p>

<pre><code>mainPanel.setResizeHorizontal(true);
mainPanel.setResizeVertical(true)
</code></pre>

<p>and your problem will be solved.</p>
"
"20412391","<p>Alternatively you can use verify, as follows:</p>

<pre><code>when(myMock.doSomething(""1"")).thenReturn( ""1"" );
assertEquals(myMock.doSomething(""1""),""1"");
verify(myMock).doSomething(""1"")
</code></pre>
"
"14524141","<p>You can start by assuming a relationship like this:</p>

<pre><code>y = A*exp(B*x)
</code></pre>

<p>Taking the natural log of both sides:</p>

<pre><code>ln(y) = ln(A) + B*x
</code></pre>

<p>Substitute as many points as you like and solve for the two coefficients.  It's a simple linear regression problem.</p>

<p>Here's what I get for your data:</p>

<pre><code>y = exp(2.006369+0.013132*x)
</code></pre>

<p>Here's a table of generated values: </p>

<pre><code>X   Y
0   7.436267437
20  9.669855877
40  12.5743343
60  16.35121402
80  21.26253316
100 27.6490367
120 35.95381719
140 46.75305634
160 60.7960002
180 79.0569415
200 102.8028156
220 133.6811
240 173.8341152
260 226.0476583
</code></pre>

<p>This will work even if you have lots of data.</p>

<p>If you do a Taylor series expansion of the exponential function, you'll see that it's an infinite series of polynomial terms.  The quadratic and cubic proposals are truncated approximations to the exponential.</p>
"
"20492022","<p>I had the same problem using processs to execute some software using the console, and i just solved it using process.waitFor()</p>

<p>For me it worked perfectly.</p>

<pre><code>    try{
        Process tr = Runtime.getRuntime().exec( new String[]{ ""wkhtmltopdf"",frontPage,frontPagePDF});
        tr.waitFor();
    } catch (Exception ex) {
        EverLogger.logEntry(""Error al pasar a PDF la portada"", ""error"", ""activity"");
        return;
    } 
some more code here.
</code></pre>
"
"15608812","<p>This code will work well and merge audio of similar type with in seconds... </p>

<pre><code>try {


                   InputStream in = new FileInputStream(""C:\\a.mp3"");//firstmp3
                    byte[] buffer = new byte[1 &lt;&lt; 20];  // loads 1 MB of the file
                    OutputStream os = new FileOutputStream(new File(""C:\\output.mp3"", true);//output mp3
                    int count;
                    while ((count = in.read(buffer)) != -1) {
                        os.write(buffer, 0, count);
                        os.flush();
                    }
                    in.close();
                    in = new FileInputStream(""C:\\b.mp3"");//second mp3
                    while ((count = in.read(buffer)) != -1) {
                        os.write(buffer, 0, count);
                        os.flush();
                    }
                    in.close();
                    os.close();




               } catch (FileNotFoundException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
</code></pre>
"
"20717454","<p>Abstract class without abstract method means you can create object of that abstract class.
See my Example.</p>

<pre><code>abstract class Example{
void display(){
 System.out.println(""Hi I am Abstract Class."");
}
}
class ExampleDemo 
{
public static void main(String[] args) 
{
Example ob = new Example(){};
ob.display();
}
}
</code></pre>

<p>If you write one abstract method inside abstract class then it will not compile.
Which means if you create abstract class without  abstract method then you can create Object of that Abstract Class.</p>
"
"14546262","<p>Ok, the check outside the synchronized section is to avoid needless entering of the monitor section. It could be omitted if you are trying to optimize performance. It also only works if there is no way to reset helper to null after creaton of the object. The check inside the synchronized section is to avoid inconsistence (as one could have created the object while we were waiting for entering the monitor).</p>

<p>The inner part of synchronized can only be executed mutual exclusively That's where the consistency comes from. But again: The outer <code>if (helper == null)</code> is only allowed if helper can't turn null anymore after being assigned with a new reference to an instance of Helper.</p>
"
"15636782","<p>Finally Solved. I tried everything to get authenticated at my exchange server, but no success. Use the code below:</p>

<pre><code>Properties props = (Properties)System.getProperties().clone();
props.put(""mail.smtp.host"", host);
props.setProperty(""mail.smtp.port"", ""587"");
props.put(""mail.smtp.auth"", true);

//Bypass the SSL authentication
props.put(""mail.smtp.ssl.enable"", false);
props.put(""mail.smtp.starttls.enable"", false);
</code></pre>
"
"12841426","<p>You have to pass <code>Class&lt;E&gt;</code> so you may instantiate an array of <code>E</code>. (As <code>&lt;E&gt;</code> is dropped at runtime, E is just Object.)</p>

<pre><code>Class&lt;E&gt; klazz;

E[] firstItemInArray2 = (E[])
        java.lang.reflect.Arrays.newInstance(klazz, numArraysInUse);
</code></pre>
"
"21435199","<p>package producer.consumer;</p>

<p>import java.util.ArrayList;
import java.util.List;</p>

<p>public class ThreadInterComm {</p>

<pre><code>public static void main(String args[]) {

    List&lt;Integer&gt; sharedObject = new ArrayList&lt;Integer&gt;(1);
    sharedObject.add(new Integer(0));

    Runnable task = new MyTask(sharedObject);

    Thread t1 = new Thread(task, ""T1"");
    Thread t2 = new Thread(task, ""T2"");
    Thread t3 = new Thread(task, ""T3"");

    t1.start();
    t2.start();
    t3.start();

}
</code></pre>

<p>}</p>

<p>class MyTask implements Runnable {</p>

<pre><code>private final List&lt;Integer&gt; sharedObject;
String name = ""T1"";//Initializing with T1 

public MyTask(List&lt;Integer&gt; sharedObject) {
    this.sharedObject = sharedObject;
}

public void run() {

    synchronized (sharedObject) {
        while (true) {//Or use a counter how many times to do the job
            if (!name.equals(Thread.currentThread().getName())) {
                try {
                    sharedObject.wait();//Let other Threads wait
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
            if (name.equals(Thread.currentThread().getName())) {
                int value = sharedObject.remove(0).intValue();
                sharedObject.add(new Integer(++value));
                System.out.println(Thread.currentThread().getName() + "" : ""
                        + sharedObject.get(0));
                if (Thread.currentThread().getName().equals(""T1"")) {

                    name = ""T2"";// give lock to t2
                } else if (Thread.currentThread().getName().equals(""T2"")) {

                    name = ""T3"";// give lock to t3
                } else if (Thread.currentThread().getName().equals(""T3"")) {

                    name = ""T1"";// give lock to t1
                }
                i--;
                sharedObject.notifyAll();
            }

    }}

}
</code></pre>

<p>}</p>
"
"14624614","<p>It is indeed safe is <code>UnsafeLazyInitialization.resource</code> is immutable, i.e. the field is declared as final:</p>

<pre><code>private static final Resource resource = new Resource();
</code></pre>

<p>It might also be considered as thread-safe if the <code>Resource</code> class itself is immutable and does not matter which instance you are using. In that case two calls could return different instances of <code>Resource</code> without issue apart from an increased memory consumption depending on the number of threads calling <code>getInstance()</code> at the same time).</p>

<p>It seems far-fetched though and I believe there is a typo, real sentence should be</p>

<blockquote>
  <p>UnsafeLazyInitialization is actually safe if *<em>r</em>*esource is
  immutable.</p>
</blockquote>
"
"21511176","<p>I find out that there is one solution for getting <code>Class&lt;?&gt;</code> from T:</p>

<pre><code>public class Action&lt;T&gt;{
}

public Class&lt;?&gt; getGenericType(Object action) throws ClassNotFoundException{
   Type type =
   ((ParameterizedType)action.getClass().getGenericSuperclass())
      .getActualTypeArguments()[0];
   String sType[] = type.toString().split("" "");

   if(sType.length != 2)
      throw new ClassNotFoundException();

   return Class.forName(sType[1]);
}
</code></pre>

<p>The usage of code above:</p>

<pre><code>Action&lt;String&gt; myAction = new Action&lt;String&gt;();

getGenericType(myAction);
</code></pre>

<p>I did not tested this with primitive types (int, byte, boolean).</p>

<p>I think that it is not very fast, but you do not have to pass <code>Class&lt;?&gt;</code> to constructor.</p>

<p><strong>EDIT:</strong></p>

<p>The usage above is not right, because generic superclass is not available for <code>Action&lt;String&gt;</code>. Generic super class will be available only for inherited class like <code>class ActionWithParam extends Action&lt;String&gt;{}</code>. This is reason why I changed my mind and now I suggest to pass class parameter to constructor, too. Thanks to <a href=""http://stackoverflow.com/users/86989/newacct"">newacct</a>  for correction.</p>
"
"12870963","<p>You could redirect the c output to a file and then tail the file from another thread in java using </p>

<pre><code>org.apache.commons.io.input.Tailer
</code></pre>
"
"21840898","<p>For the sake of completeness, you should have a method which can check <em>all</em> arrays:</p>

<pre><code>    public static &lt;E&gt; boolean compareArrays(E[] array1, E[] array2) {
      boolean b = true;
      for (int i = 0; i &lt; array2.length; i++) {
        if (array2[i].equals(array1[i]) ) {// For String Compare
           System.out.println(""true"");
        } else {
           b = false;
           System.out.println(""False"");
        }
      } 
      return b;
    }
</code></pre>
"
"12879872","<p>You can use <code>nextDouble()</code> like below:</p>

<pre><code>r = minValue + ((new Random()).nextDouble() * (maxValue - minValue));
</code></pre>

<p>where <code>minValue, maxValue</code> is the range you want your random number in.</p>

<p><strong>Full Code</strong></p>

<pre><code>import java.util.Random;

class Main {

    int genRandom(int minValue, int maxValue) {
        return (int) (minValue + ((new Random()).nextDouble() * (maxValue - minValue)));
    }

    public static void main(String [] args){
        Main m = new Main();
        for(int i = 0; i&lt;5; i++){
            System.out.println(""Random Number is: "" + m.genRandom(1, 100));
        }
    }
}
</code></pre>

<p><strong>Sample Output:</strong></p>

<pre><code>Random Number is: 95
Random Number is: 89
Random Number is: 9
Random Number is: 73
Random Number is: 20
</code></pre>
"
"17038074","<blockquote>
  <p>`</p>
</blockquote>

<pre><code>javax.swing.JFileChooser  jfc
</code></pre>

<blockquote>
  <p><code>= new javax.swing.JFileChooser (new java.io.File(""C:/Users/Documents""))</code> { </p>
</blockquote>

<p><code>@Override protected javax.swing.JDialog createDialog</code></p>

<pre><code>&gt; ( java.awt.Component parent ) throws java.awt.HeadlessException {
&gt; javax.swing.JDialog dialog = super.createDialog( parent ); 
</code></pre>

<blockquote>
  <p>dialog.setIconImage(new
  javax.swing.ImageIcon(""C:/Img.png"").getImage());</p>
</blockquote>

<pre><code>return dialog; 
</code></pre>

<h2>}};</h2>
"
"17071192","<p>If you are using spring-mvc, make sure you put this line</p>

<pre><code>&lt;bean id=""multipartResolver""
      class=""org.springframework.web.multipart.commons.CommonsMultipartResolver"" /&gt;
</code></pre>

<p>in your app-config.xml.</p>

<p>This worked for me.</p>
"
"14688848","<p>I will base my response on the assumption that <strong>id</strong> is an int hence the comparison against 1 is proper and a compilation error is not in place. 
<a href=""http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.21.1"" rel=""nofollow"">==</a> is the equality operator in java as described in section <a href=""http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.21.1"" rel=""nofollow"">15.21.1</a> of the JLS. Being a boolean operator, == will output a <a href=""http://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.2.5"" rel=""nofollow"">boolean</a> value.
<a href=""http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.26.2"" rel=""nofollow"">=</a> is the java's assignment operator, in this particular case it's the <a href=""http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.26.2"" rel=""nofollow"">compound assignment operator</a> having the following syntax:</p>

<blockquote>
  <p>boolean f = (op1 op op2)</p>
</blockquote>

<p>In translation = assigns the output value of the <code>(op1 op op2)</code> operation to the left operand, in this case <strong>f</strong>. </p>

<p>Looking back to your sample, the output of <code>id == 1</code> (true if id has the value 1, false otherwise) is assigned to <strong>retry</strong>. </p>

<p>To conclude in plain english, your sample has the following meaning: <em>Retry as long as id has the value 1</em>. </p>
"
"17261682","<p><code>public static String setPrecision(String number, int decimal){</code></p>

<pre><code>    double nbr = Double.valueOf(number);
    int integer_Part = (int) nbr;
    double float_Part = nbr - integer_Part;
    int floating_point = (int) (Math.pow(10, decimal) * float_Part);
    String final_nbr = String.valueOf(integer_Part) + ""."" + String.valueOf(floating_point);
    return final_nbr;

}`
</code></pre>
"
"17318391","<pre><code>class Program
{
    static void Main(string[] args)
    {
        int []A= new int[] {3,6,2,6};
        int[] B = new int[A.Length];
        Program obj = new Program();
        obj.ABC(A,B);

    }

    public int ABC(int []A, int []B)
    { 
        int i,j;

        int n= A.Length;
        for (j=0; j&lt;n ;j++)
        {
            int count = 1;
            for (i = 0; i &lt; n; i++)
            {
                if ((A[j]== A[i] &amp;&amp; i!=j))
                {
                    count++;

                }

             }
           int finalCount = count;
            B[j] = finalCount;// to store the no of times a number is repeated 

        }
       // int finalCount = count / 2;
        int finalCount1 = B.Max();// see which number occurred max times
        if (finalCount1 &gt; (n / 2))
        { Console.WriteLine(finalCount1); Console.ReadLine(); }

        else
        { Console.WriteLine(""no number found""); Console.ReadLine(); }
        return -1;
    }
}
</code></pre>
"
"12926881","<pre><code>// static String[] valsbyte = new String[10]; // global variable if you return a string
static byte[] valsbyte = new byte[10]; // global variable


// static String[] toBinary(int a){ // if you return a string
static byte[] toBinary(int a){
n++;
if(n&gt;10){ // check recursion to jump over process and internal method call


// valsbyte[n] = a%2; // if you reurn a string

valsbyte[n] = new Integer(ax).byteValue(); // convert to byte



//LAST LINE OF METHOD
return valsbyte[n];
</code></pre>
"
"23012166","<p>You could also do something like:</p>

<pre><code>String str = ""a + b - c * d / e &lt; f &gt; g &gt;= h &lt;= i == j"";
String[] arr = str.split(""(?&lt;=\\G(\\w+(?!\\w+)|==|&lt;=|&gt;=|\\+|/|\\*|-|(&lt;|&gt;)(?!=)))\\s*"");
</code></pre>

<p>It handles white spaces and words of variable length and produces the array:</p>

<pre><code>[a, +, b, -, c, *, d, /, e, &lt;, f, &gt;, g, &gt;=, h, &lt;=, i, ==, j]
</code></pre>
"
"23098101","<pre><code>public boolean firstWednesdayOfTheMonth() {
        // gets todays date
        Calendar calendar = Calendar.getInstance();
        // get the date
        int date = calendar.get(Calendar.DAY_OF_MONTH);
        // get the day of the week SUNDAY == 1, MONDAY == 2 ....
        int day =   calendar.get(Calendar.DAY_OF_WEEK); 
        // this checks if its a wednesday and the date falls within 8 then it should be the first wednesday
        if (date &lt; 8 &amp;&amp;  day == 4) {
                return true;
        }

            return false;   
    }
</code></pre>
"
"17524784","<p>go to that path ""C:\Program Files (x86)\JetBrains\IntelliJ IDEA 12.1.4\bin\idea.exe.vmoptions""
 and change size to -Xmx512m</p>

<pre><code>  -Xms128m
  -Xmx512m
  -XX:MaxPermSize=250m
  -XX:ReservedCodeCacheSize=64m
  -XX:+UseCodeCacheFlushing
  -ea
  -Dsun.io.useCanonCaches=false
  -Djava.net.preferIPv4Stack=true
</code></pre>

<p>hope its will work</p>
"
"23389382","<p>Just explicitly use the <code>javaws.exe</code> from the JRE you want, like this:</p>

<blockquote>
  <p>C:\Program Files\Java\jdk1.6.0_45\jre\bin\javaws.exe file.jnlp</p>
</blockquote>

<p>But please have other answers in mind, like j2se version setting and jnlp spec.</p>
"
"12950354","<p>Have a look to <a href=""http://docs.oracle.com/javase/tutorial/uiswing/events/propertychangelistener.html"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/uiswing/events/propertychangelistener.html</a></p>

<pre><code>public class Test {
    PropertyChangeSupport pcs = new PropertyChangeSupport(this);
    private String name;
    private int age;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        String oldName = this.name;
        this.name = name;
        pcs.firePropertyChange(""name"", oldName, name);
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        int oldAge = this.age;
        this.age = age;
        pcs.firePropertyChange(""age"", oldAge, age);

    }

    public void addPropertyChangeListener(PropertyChangeListener listener) {
        pcs.addPropertyChangeListener(listener);
    }

    public void removePropertyChangeListener(PropertyChangeListener listener) {
        pcs.removePropertyChangeListener(listener);
    }

    public Test(){

    }
    public static void main (String[] args){
        Test myTestObject = new Test();
        myTestObject.addPropertyChangeListener(new MyPropertyChangeListener());
        myTestObject.setAge(12);
        myTestObject.setName(""Rick"");
        myTestObject.setName(""Andrew"");
    }
    private static class MyPropertyChangeListener implements  PropertyChangeListener {
        @Override
        public void propertyChange(PropertyChangeEvent event) {
            String clazz = event.getSource().getClass().getName();
            System.out.println(clazz+""::""+event.getPropertyName()+"" changed from ""+event.getOldValue()+"" to ""+event.getNewValue());
        }
    }
}
</code></pre>

<p>This is a simple example but using this approach you can create different PropertyChangeListeners and provide different logic inside theirs method propertyChange.
Also is possible to fire only the changes over a small set of attributes and not over all of them (not storing the oldValue and not firing the firePropertyChange method of PropertyChangeSupport).</p>

<p>Of course that you can use AOP, but perhaps you are looking for a solution like presented above. I hope this helps.  </p>
"
"14712927","<p><code>UnsafeLazyInitialization.getInstance()</code> <strong>can never return null</strong>.</p>

<p>I'll use @assylias's table.</p>

<pre><code>                              Some Thread
---------------------------------------------------------------------
 10: resource = null; //default value                                  //write
=====================================================================
           Thread 1               |          Thread 2                
----------------------------------+----------------------------------
 11: a = resource;                | 21: x = resource;                  //read
 12: if (a == null)               | 22: if (x == null)               
 13:   resource = new Resource(); | 23:   resource = new Resource();   //write
 14: b = resource;                | 24: y = resource;                  //read
 15: return b;                    | 25: return y;    
</code></pre>

<p>I'll use the line numbers for Thread 1. Thread 1 sees the write on 10 before the read on 11, and the read on line 11 before the read on 14. These are <strong>intra-thread happens-before</strong> relationships and don't say anything about Thread 2. The read on line 14 returns a value defined by the JMM. Depending on the timing, it may be the Resource created on line 13, or it may be <strong>any</strong> value written by Thread 2. But that write has to happen-after the read on line 11. There is only one such write, the unsafe publish on line 23. The write to null on line 10 is not in scope because it happened before line 11 due to <strong>intra</strong>-thread ordering.</p>

<p>It doesn't matter if <code>Resource</code> is immutable or not. Most of the discussion so far has focused on inter-thread action where immutability would be relevant, but the reordering that would allow this method to return null is forbidden by <strong>intra</strong>-thread rules. The relevant section of the spec is <a href=""http://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html#jls-17.4.7"" rel=""nofollow"">JLS 17.4.7</a>.</p>

<blockquote>
  <p>For each thread t, the actions performed by t in A are the same as
  would be generated by that thread in program-order in isolation, with
  each write w writing the value V(w), given that each read r sees the
  value V(W(r)). Values seen by each read are determined by the memory
  model. The program order given must reflect the program order in which
  the actions would be performed according to the intra-thread semantics
  of P.</p>
</blockquote>

<p>This basically means that while reads and writes may be reordered, reads and writes to the <em>same</em> variable have to appear like they happen in order to the Thread that executes the reads and writes.</p>

<p>There's only a single write of null (on line 10). Either Thread can see its own copy of resource or the other Thread's, but it cannot see the earlier write to null <strong>after</strong> it reads either Resource.</p>

<p>As a side note, the initialization to null takes place in a separate thread. The section on Safe Publication in JCIP states:</p>

<blockquote>
  <p>Static initializers are executed by the JVM at class initialization
  time; because of internal synchronization in the JVM, this mechanism
  is guaranteed to safely publish any objects initialized in this way
  <a href=""http://docs.oracle.com/javase/specs/jls/se7/html/jls-12.html#jls-12.4.2"" rel=""nofollow"">[JLS 12.4.2]</a>.</p>
</blockquote>

<p>It may be worth trying to write a test that gets <code>UnsafeLazyInitialization.getInstance()</code> to return null, and that gets some of the proposed equivalent rewrites to return null. You'll see that they're not truly equivalent.</p>

<p><strong>EDIT</strong></p>

<p>Here's an example that separates reads and writes for clarity. Let's say there's a public static variable object.</p>

<pre><code>public static Object object = new Integer(0);
</code></pre>

<p>Thread 1 writes to that object:</p>

<pre><code>object = new Integer(1);
object = new Integer(2);
object = new Integer(3);
</code></pre>

<p>Thread 2 reads that object:</p>

<pre><code>System.out.println(object);
System.out.println(object);
System.out.println(object);
</code></pre>

<p>Without any form of synchronization providing inter-thread happens-before relationships, Thread 2 can print out lots of different things.</p>

<pre><code>1, 2, 3
0, 0, 0
3, 3, 3
1, 1, 3
etc.
</code></pre>

<p>But it cannot print out a decreasing sequence like 3, 2, 1. The intra-thread semantics specified in 17.4.7 severely limit reordering here. If instead of using <code>object</code> three times we changed the example to use three separate static variables, many more outputs would be possible because there would be no restrictions on reordering.</p>
"
"18164207","<p>I've found a way to escape utf characters:</p>

<pre><code>public static String bytesToHex(String s) {
    if (s == null) return ""null"";
    byte[] bytes = s.getBytes();
    final char[] hexArray = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
    char[] hexChars = new char[bytes.length * 2];
    int v;
    for (int j = 0; j &lt; bytes.length; j++) {
        v = bytes[j] &amp; 0xFF;
        hexChars[j * 2] = hexArray[v &gt;&gt;&gt; 4];
        hexChars[j * 2 + 1] = hexArray[v &amp; 0x0F];
    }
    return ""x'"" + new String(hexChars) + ""'"";
}
</code></pre>

<p>strings will appear as x'AD3214123F1' and this is what MySQL likes.</p>
"
"18355080","<pre><code>//You can change the Set to Array and then iterate over a range.

Set&lt;Integer&gt; set = new TreeSet&lt;Integer&gt;();
for (int i = 0; i &lt;= 100; i++) {
         set.add(i);
    }
Object[] array = set.toArray();


for (Integer i = 0; i &lt; 100; i++) {
        System.out.print(array[i] + "" ,"");
    }
</code></pre>
"
"23851377","<p>Ok, this is how object streams work and the solution that works everywhere.</p>

<p>Object stream data is preceded by a 4 byte 'magical' sequence <code>AC ED 00 05</code>. An <code>ObjectInputStream</code> will peek for this data at construction time rather than before the first read. And that's logical: one wants to be sure it is a proper stream before being too far in an application. The sequence is buffered by the <code>ObjectOutputStream</code> at construction time so that it is pushed on the stream at the first write.</p>

<p>This method gives rise to complexities in buffered situations or transferring via sockets.
Fortunately there is a just as simple as effective solution to all these problems:</p>

<p>Flush the <code>ObjectOutputStream</code> immediately after construction!</p>

<pre><code>ObjectOutputStream myStream =  new ObjectOutputStream ( anotherStream );
myStream.flush();
</code></pre>
"
"12976876","<p>For me...</p>

<pre><code>System.out.println(Math.cos(50));
System.out.println(Math.cos(new Double(50)));
System.out.println(Math.cos(Math.toRadians(50)));
System.out.println(Math.cos(Math.toRadians(new Double(50))));
</code></pre>

<p>returns</p>

<p>0.9649660284921133<br>
0.9649660284921133<br>
0.6427876096865394<br>
0.6427876096865394  </p>

<p><br/><br/></p>

<p><a href=""http://www.wolframalpha.com/input/?i=cos%2850deg%29"" rel=""nofollow"">http://www.wolframalpha.com/input/?i=cos%2850deg%29</a> </p>

<p><code>cos(50deg)</code> give same result as <code>cos(50)</code>... so Wolfram is degree by default.</p>
"
"12978817","<p>During this process, don't open the file.Try as below : </p>

<pre><code>FileWriter writer = new FileWriter(""C:/xyz.txt"", true);
BufferedWriter out = new BufferedWriter(writer);
out.write(""your text"");
out.close();
</code></pre>
"
"14750414","<pre><code>Calendar cal = Calendar.getInstance();//getting the instance of the Calendar using the factory method
we have a get() method to get the specified field of the calendar i.e year

int year=cal.get(Calendar.YEAR);//for example we get 2013 here 

cal.set(year, 0, 1); setting the date using the set method that all parameters like year ,month and day
Here we have given the month as 0 i.e Jan as the month start 0 - 11 and day as 1 as the days starts from 1 to30.

Date firstdate=cal.getTime();//here we will get the first day of the year

cal.set(year,11,31);//same way as the above we set the end date of the year

Date lastdate=cal.getTime();//here we will get the first day of the year

System.out.print(""the firstdate and lastdatehere\n"");
</code></pre>
"
"12979185","<p>The exception shows that it is of FileNotFound Exception. Please try to make new file first.
Try with following code.</p>

<pre><code>File file = File file(""c:/xyz.txt"");
if(!file.exists()){  // this will return boolean {true} if file exists.
   file.createNewFile(); // create new empty file.
}
FileWriter writer = new FileWriter(""C:/xyz.txt"", true);
BufferedWriter out = new BufferedWriter(writer);
out.write(""your text"");
out.close();
</code></pre>

<p>Ok no issues.. try to figure out it using different Readers and Writers. </p>

<pre><code>    String currentExecutablePath = System.getProperty(""user.dir"");
    String rootPath = currentExecutablePath + ""xyz.txt"";
    File file = new File(rootPath);
    ServletOutputStream op = res.getOutputStream(); 
    if(file.exists()){
        int length = 0;
        res.setContentType(""application/octet-stream"");
        res.setContentLength((int) file.length());

        byte[] bbuf = new byte[1000];
        DataInputStream in = new DataInputStream(new FileInputStream(file));            
        while ((in != null) &amp;&amp; ((length = in.read(bbuf)) != -1)) {
            op.write(bbuf, 0, length);
        }
    }
</code></pre>
"
"23993916","<p>Here is code given below to convert a List into a comma separated string without iterating List explicitly for that you have to make a list and add item in it than convert it into a comma separated string</p>

<p>Output of this code will be: Veeru,Nikhil,Ashish,Paritosh </p>

<p>instead of output of list [Veeru,Nikhil,Ashish,Paritosh]</p>

<pre><code>String List_name;
List&lt;String&gt; myNameList = new ArrayList&lt;String&gt;();
myNameList.add(""Veeru"");
myNameList.add(""Nikhil"");
myNameList.add(""Ashish"");
myNameList.add(""Paritosh"");

List_name = myNameList.toString().replace(""["", """")
                    .replace(""]"", """").replace("", "", "","");
</code></pre>
"
"14754743","<p><a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/String.html#compareTo(java.lang.String)"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/lang/String.html#compareTo(java.lang.String)</a></p>

<p>There is the compare to which returns an int.  There is also equals which 
returns a boolean.  If you have a string instance it should be able to 
execute. If you pass instance.equals(null) it will return false.  if your 
instance is null then you will get a null pointer.</p>

<pre><code>public class App
{

public static void main( String[] args )
{
    String myString = ""test"";

    if(myString.equals(null))
    {
        System.out.println(""Its NUll"");
    }else
    {
        System.out.println(""Not Equal"");
    }

}

}
</code></pre>
"
"24074505","<p>Append the following statement to the JDBC-mysql protocol:</p>

<pre><code>?zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true&amp;characterEncoding=UTF-8&amp;characterSetResults=UTF-8
</code></pre>

<p>for example:</p>

<pre><code>jdbc:mysql://localhost/infra?zeroDateTimeBehavior=convertToNull&amp;autoReconnect=true&amp;characterEncoding=UTF-8&amp;characterSetResults=UTF-8
</code></pre>
"
"18757563","<p>In Ruby you can do something like</p>

<pre><code>def dominant(a)
  hash = {}
  0.upto(a.length) do |index|
    element = a[index]
    hash[element] = (hash[element] ? hash[element] + 1 : 1)
  end

  res = hash.find{|k,v| v &gt; a.length / 2}.first rescue nil
  res ||= -1
  return res
end
</code></pre>
"
"24146559","<p>What about something like :</p>

<pre><code>angle = angle % 360;
</code></pre>
"
"18931834","<p>Sometimes you have to specify the names used in the wsdl (case sensitive):
&lt;{Log}>, &lt;{} CrewId>, &lt;{} OrderID>, &lt;{} OrderNumber></p>

<pre><code>@XmlElement(name = ""CrewId"")
protected String crewId;
@XmlElement(name = ""OrderID "")
protected String orderID;
@XmlElement(name = ""Login"")
protected String login;
@XmlElement(name = ""OrderNumber"")
protected String orderNumber;
</code></pre>
"
"13002361","<p>If you want to print your elements in the ArrayList, update your last statement to print as below:</p>

<pre><code>  System.out.println(""Sayının Basamak Sayısı: "" + liste);
</code></pre>

<p>Or you can iterate your list and print as :</p>

<pre><code> for(Object i: liste){
    System.out.println(i);
 }
</code></pre>

<p>This will print your individual list items in separate lines.</p>

<p><strong>Also please fix your while condition as <code>while(bolum != 0);</code></strong> as it may terminate after the very first iteration as <code>bolum</code> will be non zero i.e.  <code>1, 2...(!= 0)</code>.</p>
"
"19210203","<p>Maybe this method would help you for precising double values.</p>

<pre><code>double truncate(double number)
    {
        int integerPart = (int) number;
        double fractionalPart = number - integerPart;
        fractionalPart *= 100;  //It is for upto two decimal values after point.
                                //You can increase the zeros to fulfill your needs.
        int fractPart = (int) fractionalPart;
        fractionalPart = (double) (integerPart) + (double) (fractPart)/100;
        return fractionalPart;
    }
</code></pre>

<p>This method will allow to set the precision level.</p>

<pre><code>double truncate(double number, int precision)
{
    double prec = Math.pow(10, precision);
    int integerPart = (int) number;
    double fractionalPart = number - integerPart;
    fractionalPart *= prec;
    int fractPart = (int) fractionalPart;
    fractionalPart = (double) (integerPart) + (double) (fractPart)/prec;
    return fractionalPart;
}
</code></pre>
"
"19438790","<p>For example if you want to calculate how many a's are there in the String, you can do it like this:</p>

<pre><code>if (string.contains(""a""))
{
    numberOf_a++;
    string = string.replaceFirst(""a"", """");
}
</code></pre>
"
"25787799","<p>I have a slightly modified version of <a href=""http://stackoverflow.com/users/2182351/mani"">Mani</a>'s.</p>

<pre><code>private static BigDecimal truncateDecimal(final double x, final int numberofDecimals) {
    return new BigDecimal(String.valueOf(x)).setScale(numberofDecimals, BigDecimal.ROUND_DOWN);
}

public static void main(String[] args) {
    System.out.println(truncateDecimal(0, 2));
    System.out.println(truncateDecimal(9.62, 2));
    System.out.println(truncateDecimal(9.621, 2));
    System.out.println(truncateDecimal(9.629, 2));
    System.out.println(truncateDecimal(9.625, 2));
    System.out.println(truncateDecimal(9.999, 2));
    System.out.println(truncateDecimal(3.545555555, 2));

    System.out.println(truncateDecimal(9.0, 2));
    System.out.println(truncateDecimal(-9.62, 2));
    System.out.println(truncateDecimal(-9.621, 2));
    System.out.println(truncateDecimal(-9.629, 2));
    System.out.println(truncateDecimal(-9.625, 2));
    System.out.println(truncateDecimal(-9.999, 2));
    System.out.println(truncateDecimal(-9.0, 2));
    System.out.println(truncateDecimal(-3.545555555, 2));

}
</code></pre>

<p>Output:</p>

<pre><code>0.00
9.62
9.62
9.62
9.62
9.99
9.00
3.54
-9.62
-9.62
-9.62
-9.62
-9.99
-9.00
-3.54
</code></pre>
"
"15015602","<p>from my limited recall of C</p>

<pre><code>for i = (length( array ) -1 ) to 0
  { print( array( i ) ; i-- }
</code></pre>

<p>NOTE: you are counting ELEMENTS not BYTES
ALSO: you subtract 1 from length because you are counting down to ZERO not 1</p>
"
"13090002","<p>If you don't want to loose presision then you should use <code>multiplication</code></p>

<pre><code>    BigDecimal bigDecimal = new BigDecimal(""100.111"");
    long l = (long) (bigDecimal.doubleValue() * 1000);&lt;--Multiply by 1000 as it
                                                         is miliseconds
    System.out.println(l);
</code></pre>

<p>Output:</p>

<pre><code>100111
</code></pre>
"
"19965920","<p>this is a server problem, you maybe set the read_buffer_size on your my.cnf, too high like 4M, 16M, or so.</p>

<pre><code>read_buffer_size=32M (too high)
</code></pre>

<p>delete that line or put a value like 4k,16k or 32k.</p>

<pre><code> read_buffer_size=16k
</code></pre>
"
"25824900","<p>This works:</p>

<pre><code>    Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone(""UTC""));
    GregorianCalendar gregorianCalendar = new GregorianCalendar
    (
        calendar.get(Calendar.YEAR),
        calendar.get(Calendar.MONTH),
        calendar.get(Calendar.DAY_OF_MONTH),
        calendar.get(Calendar.HOUR_OF_DAY),
        calendar.get(Calendar.MINUTE),
        calendar.get(Calendar.SECOND)
    );
    return gregorianCalendar.getTime();
</code></pre>
"
"25928239","<p>Here is my solution in Java that runs in linear time</p>

<pre><code>public int longestTwoDistinctCharacterSubString() {
    String str = ""abbaaacaccaade"";

    int longest = 0;
    int startIndex = 0;
    int currentConsecutiveCount = 1;

    Character firstDistinctChar = null;
    Character secondDistinctChar = null;

    for (int i = 0; i &lt; str.length(); i++) {
        Character charAtPreviousIndex = (i &gt; 0) ? str.charAt(i - 1) : null;
        Character charAtCurrentIndex = str.charAt(i);

        if ((firstDistinctChar != null &amp;&amp; firstDistinctChar.equals(charAtCurrentIndex)) || 
            (secondDistinctChar != null &amp;&amp; secondDistinctChar.equals(charAtCurrentIndex))) {
            // continue with function
        } else if (firstDistinctChar == null) {
            firstDistinctChar = charAtCurrentIndex;
        } else if (secondDistinctChar == null) {
            secondDistinctChar = charAtCurrentIndex;
        } else {
            int length = i - startIndex;
            if (length &gt; longest) {
                longest = length;
            }

            firstDistinctChar = null;
            secondDistinctChar = null;
            startIndex = i - currentConsecutiveCount;
        }

        if (charAtCurrentIndex.equals(charAtPreviousIndex)) {
            currentConsecutiveCount++;
        } else {
            currentConsecutiveCount = 1;
        }
    }

    return longest;
}
</code></pre>
"
"26009125","<p>Before was not possible to see debug tool bar, after </p>

<pre><code> Window-&gt;Reset Perpective
</code></pre>

<p>was possible to show it again</p>
"
"26015440","<p>This can also be achieved using ""printf"" with out specifying the format. the code goes as below:</p>

<pre><code>if (System.out.printf(""Hello"") == null) {
    System.out.print(""Hello"");
} else {
    System.out.println(""World"");
}
</code></pre>
"
"13112409","<p>This answer is related to <strong>Mountain Lion</strong> and not Lion. I needed to do this for the AWS Command Line Tools. According to <a href=""http://docs.amazonwebservices.com/AWSEC2/latest/UserGuide/SettingUp_CommandLine.html#java-runtime"" rel=""nofollow"">the AWS docs</a>, running <code>which java</code> returns <code>/usr/bin/java</code>.</p>

<p>So, I set <code>JAVA_HOME=/usr</code> in my <code>.bashrc</code>.</p>

<p>Apparently, <code>/usr/bin/java</code> is a symbolic link to <code>/System/Library/Frameworks/JavaVM.framework/Versions/Current/Commands/java</code> which makes it all work.</p>

<p><strong>Update</strong></p>

<p>As mentioned in the comment below, this <code>JAVA_HOME</code> value is not an ideal solution when the <code>JAVA_HOME</code> environment variable is to be used by things other than the AWS Command Line Tools. It works fine for the AWS Command Line Tools, though, as given in their docs.</p>
"
"26667426","<p>Try this:</p>

<pre><code>final NetworkInterface netInf = NetworkInterface.getNetworkInterfaces().nextElement();
final byte[] mac = netInf.getHardwareAddress();
final StringBuilder sb = new StringBuilder();
for (int i = 0; i &lt; mac.length; i++) {
        sb.append(String.format(""%02X%s"", mac[i], (i &lt; mac.length - 1) ? ""-"" : """"));        
}
log.info(""Mac addr: {}"", sb.toString());
</code></pre>
"
"20728547","<p>1 alternate way is to do:</p>

<pre><code>String b = a + """";
</code></pre>
"
"15136166","<p>1) enum is a keyword in Object oriented method.</p>

<p>2) It is used to write the code in a Single line, That's it not more than that.</p>

<pre><code>     public class NAME
     {
        public static final String THUNNE = """";
        public static final String SHAATA = """"; 
        public static final String THULLU = """"; 
     }

-------This can be replaced by--------

  enum NAME{THUNNE, SHAATA, THULLU}
</code></pre>

<p>3) Most of the developers do not use enum keyword, it is just a alternative method.. </p>
"
"20845389","<p>import java.io.*;
public class Pattern4</p>

<p>{</p>

<pre><code>int height,num,space,i,j,k=0;
public void main()throws IOException
{
    System.out.println(""Enter the heigheight"");
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    height= Integer.parseInt(br.readLine());
    for (num=height-1;num&gt;=0;num--)
    {
        for(space=num;space&gt;=1;space--)
        System.out.print("" "");
        if((height-num)%2==0)//if height-num is even
        {
            for(i=1;i&lt;=((height-num)/2);i++)//1 2 3 4 5
            System.out.print(i+"" "");
            for(i=((height-num)/2);i&gt;=1;i--)//5 4 3 2 1
            System.out.print(i+"" "");
        }
        else
        {
            k++;
            for(i=1;i&lt;=k;i++)//1 2 3 4 5
            System.out.print(i+"" "");
            for(j=i-2;j&gt;=1;j--)//4 3 2 1
            System.out.print(j+"" "");
        }
        System.out.println("""");
    }
}
</code></pre>

<p>}</p>

<p>this wud give the output. TRY IT !</p>
"
"27193570","<pre><code>public class WordReverse {

static StringBuilder sb = new StringBuilder();

public static void main(String[] args) {

    Scanner sc = new Scanner(System.in);
    System.out.println(""Enter the correct Sentence :"");
    String str = sc.nextLine().replaceAll(""\\s+"", "" "");         //remove unwanted space using regex

    int lastIndex = 0, i = 0;

    for (char chars : str.toCharArray()) {
        if (chars != ' ') {
            i++;
        } else {
            myReverse(str.substring(lastIndex, i).toCharArray());
            lastIndex = i + 1;
            i++;
        }
    }
    myReverse(str.substring(lastIndex, i).toCharArray());       //reverse the last word

    System.out.println(sb);
}
public static void myReverse(char c[]) {
    for (int i = (c.length - 1) ; i &gt;= 0 ; i--) {
        sb.append(c[i]);
    }
    sb.append("" "");
} }
</code></pre>
"
"15215531","<p>Based of what you have already:</p>

<pre><code>String regex = ""([0-9]){4}+([-])?([0-1][0-2])+([-])?([0-2][0-9]|3[0-1])"";
</code></pre>
"
"15219986","<p>Try this way</p>

<pre><code>    Object[] move = { ""Up"", ""Down"" };

.... some code

    move = { ""Up"", ""Down"", ""Left"" };
</code></pre>
"
"21326752","<p>(a)   (b)        (c)   (d)</p>

<hr>

<hr>

<hr>

<hr>

<hr>

<hr>

<hr>

<hr>

<hr>

<hr>

<pre><code>int line;
int star;
System.out.println(""Triangle a"");
        for( line = 1; line &lt;= 10; line++ )
        {
            for( star = 1; star &lt;= line; star++ )
            {

                System.out.print( ""*"" );
            }
            System.out.println();
        }

 System.out.println(""Triangle b"");

          for( line = 1; line &lt;= 10; line++ )
        {
            for( star = 1; star &lt;= 10; star++ )
            {

        if(line&lt;star)
                System.out.print( ""*"" );
                else
                  System.out.print("" "");
            }
            System.out.println();
        }

 System.out.println(""Triangle c"");

          for( line = 1; line &lt;= 10; line++ )
        {
            for( star = 1; star &lt;= 10; star++ )
            {

        if(line&lt;=star)
                System.out.print( ""*"" );
                //else
                 // System.out.print("" "");
            }
            System.out.println();
        }

 System.out.println(""Triangle d"");

          for( line = 1; line &lt;= 10; line++ )
        {
            for( star = 1; star &lt;= 10; star++ )
            {

        if(line&gt;10-star)
                System.out.print( ""*"" );
                else
                  System.out.print("" "");
            }
            System.out.println();
        }
</code></pre>
"
"15230397","<p>Try this</p>

<pre><code>if (e.getKey().toString().equals(""3"")) 
</code></pre>

<p>I think <code>e.getKey()</code> returns an object and you were comparing it with integer. Either convert it to integer and compare or to String and compare</p>
"
"27628756","<p>If you're dealing with a Java character array (such as password characters that you read from the console), you can convert it to a JRuby string with the following Ruby code:</p>

<pre><code># GIST: ""pw_from_console.rb"" under ""https://gist.github.com/drhuffman12""

jconsole = Java::java.lang.System.console()
password = jconsole.readPassword()
ruby_string = ''
password.to_a.each {|c| ruby_string &lt;&lt; c.chr}

# .. do something with 'password' variable ..    
puts ""password_chars: #{password_chars.inspect}""
puts ""password_string: #{password_string}""
</code></pre>

<p>See also ""<a href=""http://stackoverflow.com/a/27628738/4390019"">http://stackoverflow.com/a/27628738/4390019</a>"" and ""<a href=""http://stackoverflow.com/a/27628756/4390019"">http://stackoverflow.com/a/27628756/4390019</a>""</p>
"
"21694732","<p>This is simple java code for decimal to binary using only primitive type int, hopefully it should help beginners.</p>

<pre><code>import java.io.BufferedReader;
import java.io.InputStreamReader;

public class DtoB {
    public static void main(String[] args) {

        try { // for Exception handling of taking input from user.

            System.out.println(""Please enter a number"");

            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            String input = br.readLine();       
            int x = Integer.parseInt(input);

            int bin = 0;
            int p = 1;
            while (x &gt; 0) {
                int r = x % 2;
                bin = (r * p) + bin;
                x = x / 2;
                p *= 10;
            }
            System.out.println(""Binary of "" + input + "" is = "" + bin);
        } catch (Exception e) {
            System.out.println(""Please enter a valid decimal number."");
            System.exit(1);
            e.printStackTrace();
        }
    }
}
</code></pre>
"
"13181360","<p>This oughta do it:</p>

<pre><code>String[] abc = {""A"", ""B"", ""C"", ""D"", ""E"", ""F"", ""G"", ""H"", ""I"", ""J"", ""K"", ""L"", ""M"", ""N"", ""O"", ""P"", ""Q"", ""R"",
            ""S"", ""T"", ""U"", ""V"", ""W"", ""X"", ""Y"", ""Z"", };

for(int i=0; i&lt;abc.length; i++){
 System.out.println(abc[i] + (i+1) + ""\t"");
 if( i % 5 == 0 ){
  System.out.println();
 }
}
</code></pre>
"
"27787088","<p>Use 
<a href=""http://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormatterBuilder.html"" rel=""nofollow"">DateTimeFormatterBuilder</a></p>

<pre><code>public static String getDayOfWeek(DateTime dateTime) {
    DateTimeFormatterBuilder b = new DateTimeFormatterBuilder();
    b = b.appendDayOfWeekText();
    DateTimeFormatter fmt = b.toFormatter().withLocale(Locale.US);
    return fmt.print(dateTime);
}

@Test
public void testGetDayOfWeek()
{
    Assert.assertEquals(""Thursday"", getDayOfWeek(new DateTime(2015, 1, 1, 0, 0)));
}
</code></pre>
"
"21848714","<p>Use XPath as bellow</p>

<pre><code>  DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
  DocumentBuilder builder = factory.newDocumentBuilder();
  Document doc = builder.parse(""&lt;Your xml doc uri&gt;"");
  XPathFactory xPathfactory = XPathFactory.newInstance();
  XPath xpath = xPathfactory.newXPath();
  XPathExpression expr = xpath.compile(""//Type[@type_id=\""4218\""]"");
  NodeList nl = (NodeList) expr.evaluate(doc, XPathConstants.NODESET);
</code></pre>
"
"27896599","<p>you must use the file: protocol</p>

<pre><code>SmbFile dest = new SmbFile (""file:"" + ""C:/SQLRESTORESTAGE/v2.bak"");
</code></pre>
"
"27918066","<pre><code>public class HHMMSS {

        final int UUR = 3600;
        final int MINUUT = 60;

    public void converteerTijd() {

        int uren, minuten, seconden, ingave;
        System.out.print(""Geef een aantal seconden: "");
        ingave = Input.readInt();
        uren = ingave / UUR;
        minuten = (ingave - uren * UUR) / MINUUT;
        seconden = ingave - uren * UUR - minuten * MINUUT;
        String nU1 = (uren &lt; 10) ? ""0"" : """";
        String nM1 = (minuten &lt; 10) ? ""0"" : """";
        String nS1 = (seconden &lt; 10) ? ""0"" : """";
        System.out.println(nU1 + uren + ""-"" + nM1 + minuten + ""-"" + nS1 + seconden);
</code></pre>
"
"15682908","<pre><code>1.int id = 1;
  boolean retry = id == 1;
</code></pre>

<p>which means <code>retry = true;</code>.</p>

<pre><code>2.int id = 2;
  boolean retry = id == 1;
</code></pre>

<p>which means <code>retry = false;</code>.</p>

<p>Simplification id == 1 can be consider as</p>

<pre><code>if ( id == 1 ){
}
</code></pre>
"
"15775549","<p>Dude you've got this all wrong.</p>

<p>public class ICalculator2 extends ICalculator{</p>

<pre><code>public int negate(){
    int val =mul(-1);
    return val;}}
</code></pre>

<p>you see?  -22 and 100 are examples, they don't matter.  The point is just that you need to negate whatever it is.  </p>
"
"15818977","<pre><code>String paragraph = ""My first sentence. My second sentence"";
String [] sentences = paragraph.split(""\\."");
</code></pre>

<p>this should split the sentences up since they all end with a full stop.</p>
"
"13236800","<p>Try this:</p>

<pre><code>public class Sub {

    public String replaceChar(String str, int x, int y){
        String temp = ""XXX"";
        String str1 = """";
        str1 = str.substring(x, y+1);
        str = str.replace(str1, temp);
        return str;
    }

    public static void main(String args[]){
        Sub s = new Sub();
        System.out.println(s.replaceChar(""ABC123"", 3, 5));
    }

}
</code></pre>
"
"28643317","<p>Here is a simplified version of Sticky's code that seems to work. I changed it to an extend JApplet and use the <code>init()</code> method instead of the <code>main()</code>.  </p>

<pre><code>public class JavaApplication51 extends JApplet {
    public  void something() {
       JButton button = new JButton(""Click for more"");             
        add(button);
        setLayout(null);
        button.setLayout(null);
        button.setLocation(100,100);
        button.setSize(101,20);
        setVisible(true); 
    }

    public void paint(Graphics g) {
        super.paint(g);
        g.drawString(""Hello"", 200, 50);
    }

    public void init() {
        something();
    }
}
</code></pre>
"
"13236843","<p>A few steps that might help:</p>

<ol>
<li>Identify the number of characters you need changed</li>
<li>Identify the left side of the string you intend to keep (<code>str.substring(0,p1);</code>)</li>
<li>Identify the right side of the string you intend to keep (<code>str.substring(p2,str.length());</code>)</li>
<li>Put them together (<code>String output = firstPart + addedChars + secondPart;</code>)</li>
</ol>
"
"22813946","<p>Have you made sure, there is no timing issue? Make a break point before finding the element and look if your code runs fine. If there is a timing issue, use a an explicit Wait before clicking your button. Note also, that the button should be clickable (element must be visible AND enabled) before actually clicking it. </p>

<p>a solution with explicit wait could look like this:</p>

<pre><code>By by = By.xpath(""//div[@class='btn magenta_s']/a/span"");
WebDriverWait w = new WebDriverWait(driver, timeout);
WebElement element = w.waitUntil(ExpectedConditions.elementToBeClickable(by);
element.click();
</code></pre>
"
"22934933","<p>add in your pom</p>

<pre><code>    &lt;dependency&gt;
         &lt;groupId&gt;commons-discovery&lt;/groupId&gt;
         &lt;artifactId&gt;commons-discovery&lt;/artifactId&gt;
         &lt;version&gt;0.5&lt;/version&gt;
         &lt;scope&gt;test&lt;/scope&gt; 
    &lt;/dependency&gt;
</code></pre>

<p>Addition to the classPath jar necessary goes</p>
"
"13249897","<p>try using </p>

<pre><code>SpannableStringBuilder test = new SpannableStringBuilder();
test.append(""\n"");
test.append(Html.fromHtml(""&lt;sup&gt;5&lt;/sup&gt;/&lt;sub&gt;9&lt;/sub&gt;""));
test.append(""\n"");
</code></pre>
"
"23387738","<p>Run it like this on the command line:</p>

<pre><code>java -jar /path/to/your/jar/jarFile.jar
</code></pre>
"
"23497311","<p>I found a solution for the wiping the console in an Eclipse IDE. It uses the Robot class. Please see code below and caption for explanation:</p>

<pre><code>   import java.awt.AWTException;
   import java.awt.Robot;
   import java.awt.event.KeyEvent;

   public void wipeConsole() throws AWTException{
        Robot robbie = new Robot();
        //shows the Console View
        robbie.keyPress(KeyEvent.VK_ALT);
        robbie.keyPress(KeyEvent.VK_SHIFT);
        robbie.keyPress(KeyEvent.VK_Q);
        robbie.keyRelease(KeyEvent.VK_ALT);
        robbie.keyPress(KeyEvent.VK_SHIFT);
        robbie.keyPress(KeyEvent.VK_Q);
        robbie.keyPress(KeyEvent.VK_C);
        robbie.keyRelease(KeyEvent.VK_C);

        //clears the console
        robbie.keyPress(KeyEvent.VK_SHIFT);
        robbie.keyPress(KeyEvent.VK_F10);
        robbie.keyRelease(KeyEvent.VK_SHIFT);
        robbie.keyRelease(KeyEvent.VK_F10);
        robbie.keyPress(KeyEvent.VK_R);
        robbie.keyRelease(KeyEvent.VK_R);
    }
</code></pre>

<p>Assuming you haven't changed the default hot key settings in Eclipse and import those java classes, this should work. </p>
"
"16263683","<p>Xincrol algorithm solves this problem. Explanation + source code:</p>

<p><a href=""http://openpatent.blogspot.co.il/2013/04/xincrol-unique-and-random-number.html"" rel=""nofollow"">http://openpatent.blogspot.co.il/2013/04/xincrol-unique-and-random-number.html</a></p>

<pre><code>/**
 * Xincrol - Unique and Random Number Generator
 * Xincrol.java
 * Purpose: Generating unique random numbers in specified range.
 *
 * @author Tofig Kareemov
 * @version 1.2 2013.04.28
 */
package androphic.estereos.lib.algs;

public class Xincrol {
    // Private Data...
    private int iUniqueSeed = 0;
    private int[] iKey = new int[8];
    private int iSet = 0;
    private int iSystemID = 0;

    // Constructor
    public Xincrol() {
        iSystemID = System.getProperties().toString().hashCode();
        for (int i = 0; i &lt; iKey.length; ++i) {
            iKey[i] = i;
        }
        reset(Integer.MAX_VALUE);
    }

    // .

    // Private Methods...
    private void reset(int iBase) {
        iUniqueSeed = 0;
        iKey[0] ^= iSystemID;
        iKey[1] ^= (int) System.nanoTime();
        iKey[2] ^= (int) (System.nanoTime() &gt;&gt; 32);
        iKey[3] ^= (int) System.currentTimeMillis();
        iKey[4] ^= (int) (System.currentTimeMillis() &gt;&gt; 32);
        iKey[5] ^= 0xa5a5a5a5;
        iKey[6] ^= 0x5a5a5a5a;
        iKey[7] ^= 0xff00ff00;
        int iGlue = iKey[iKey.length - 1];
        int iBaseMask = iBase - 1;
        for (int i1 = 0; i1 &lt; 2; ++i1) {
            for (int i = 0; i &lt; iKey.length; ++i) {
                iGlue = iGlue ^ iKey[i] ^ i;
                if ((iKey[i] &amp; 1) == 0) {
                    iGlue = INC(iGlue, iBaseMask);
                } else {
                    iGlue = DEC(iGlue, iBaseMask);
                }
                if ((iKey[i] &amp; 2) == 0) {
                    iGlue = ROL(iGlue, iBaseMask);
                } else {
                    iGlue = ROR(iGlue, iBaseMask);
                }
                iKey[i] = XOR(iGlue, iKey[i], iBaseMask);
            }
        }
        iSet = iKey[iKey.length - 1] &amp; 3;
    }

    // Set 1 Function
    private int XOR(int iA, int iB, int iBaseMask) {
        return ((iA ^ iB) &amp; iBaseMask);
    }

    private int INC(int iA, int iBaseMask) {
        return ((++iA) &amp; iBaseMask);
    }

    private int ROL(int iA, int iBaseMask) {
        iA &lt;&lt;= 1;
        if (iA &gt; iBaseMask) {
            iA |= 1;
        }
        return (iA &amp; iBaseMask);
    }

    // .

    // Set 2 Functions
    private int DEC(int iA, int iBaseMask) {
        return ((--iA) &amp; iBaseMask);
    }

    private int ROR(int iA, int iBaseMask) {
        if ((iA &amp; 0x00000001) == 1) {
            return ((iA &gt;&gt;&gt; 1) &amp; iBaseMask) | ((iBaseMask + 1) &gt;&gt;&gt; 1);
        } else {
            return ((iA &gt;&gt;&gt; 1) &amp; iBaseMask);
        }
    }

    // .
    // .

    // Public Methods

    public synchronized void randomize(int iRange) {
        int iBase = 1;

        if (iRange &lt;= 0) {
            return;
        }
        for (; iBase &lt; iRange; iBase &lt;&lt;= 1) {
        }
        reset(iBase);
    }

    public int incdec(int iA, int iSet, int iBaseMask) {
        switch (iSet) {
        case 0:
            return INC(iA, iBaseMask);
        case 1:
            return DEC(iA, iBaseMask);
        case 2:
            return INC(iA, iBaseMask);
        case 3:
            return DEC(iA, iBaseMask);
        default:
            return 0;
        }
    }

    public int rolror(int iA, int iSet, int iBaseMask) {
        switch (iSet) {
        case 0:
            return ROL(iA, iBaseMask);
        case 1:
            return ROL(iA, iBaseMask);
        case 2:
            return ROR(iA, iBaseMask);
        case 3:
            return ROR(iA, iBaseMask);
        default:
            return 0;
        }
    }

    public synchronized int next(int iRange) {
        int iResult = iRange;
        int iBase = 1;

        for (; iBase &lt; iRange; iBase &lt;&lt;= 1) {
        }
        if ((iKey == null) || (iUniqueSeed &gt;= iBase)) {
            reset(iBase);
        }
        int iBaseMask = iBase - 1;
        for (int i = 0; (i &lt; iBase) &amp;&amp; (iResult &gt;= iRange); ++i) {
            iUniqueSeed = (++iUniqueSeed) % iBase;
            iResult = iUniqueSeed;
            for (int i1 = 0; i1 &lt; iKey.length; ++i1) {
                iResult = XOR(iResult, iKey[i1], iBaseMask);
                for (int i2 = iKey[i1] | iBase; i2 &gt; 1; i2 &gt;&gt;&gt;= 1) {
                    if ((i2 &amp; 1) == 1) {
                        iResult = incdec(iResult, iSet, iBaseMask);
                    } else {
                        iResult = rolror(iResult, iSet, iBaseMask);
                    }
                }
            }
        }
        return iResult;
    }

    public synchronized int prev(int iRange) {
        int iResult = iRange;
        int iBase = 1;

        if (iRange &lt;= 0) {
            return 0;
        }
        for (; iBase &lt; iRange; iBase &lt;&lt;= 1) {
        }
        if ((iKey == null) || (iUniqueSeed &gt;= iBase)) {
            reset(iBase);
        }
        int iBaseMask = iBase - 1;
        for (int i = 0; (i &lt; iBase) &amp;&amp; (iResult &gt;= iRange); ++i) {
            iUniqueSeed = (--iUniqueSeed) % iBase;
            iResult = iUniqueSeed;
            for (int i1 = 0; i1 &lt; iKey.length; ++i1) {
                iResult = XOR(iResult, iKey[i1], iBaseMask);
                for (int i2 = iKey[i1] | iBase; i2 &gt; 1; i2 &gt;&gt;&gt;= 1) {
                    if ((i2 &amp; 1) == 1) {
                        iResult = incdec(iResult, iSet, iBaseMask);
                    } else {
                        iResult = rolror(iResult, iSet, iBaseMask);
                    }
                }
            }
        }
        return iResult;
    }

    public synchronized int random(int iRange) {
        randomize(iRange);
        return iKey[iKey.length - 1];
    }

    // .

    public static void main(String[] args) {
        Xincrol oXincrol = new Xincrol();
        int iRange = 10;
        int iTries = 100;
        int iValueStringLength = ("""" + (iRange - 1)).length();
        int[] iTest = new int[iRange];
        for (int i1 = 0; i1 &lt; iTries; ++i1) {
            for (int i2 = 0; i2 &lt; iRange; ++i2) {
                // Printing progress
                if (i2 == 0) {
                    System.out.print("""" + (i1 * 100 / iTries) + ""%, "" + i1
                            + "": "");
                }
                // Generating
                iTest[i2] = oXincrol.next(iRange);
                // Printing values
                String s = """" + iTest[i2];
                for (; s.length() &lt; iValueStringLength; s = "" "" + s) {
                }
                System.out.print(s);
                // Printing end of line
                if (i2 == iRange - 1) {
                    System.out.println();
                    // Testing for successful generation
                    boolean bSuccess = false;
                    for (int i3 = 0; i3 &lt; iTest.length; ++i3) {
                        bSuccess = false;
                        for (int i4 = 0; i4 &lt; iTest.length; ++i4) {
                            if (iTest[i4] == i3) {
                                bSuccess = true;
                            }
                        }
                        if (!bSuccess) {
                            System.out.println(""Error!!!"");
                            System.exit(1);
                        }
                    }
                    // Randomizing for the next line
                    System.out.flush();
                    oXincrol.randomize(iRange);
                } else {
                    System.out.print("","");
                }
            }
        }
        System.out.println(""Success!!!"");
    }
}
</code></pre>
"
"13287472","<p>I ended up in splitting in two methods.</p>

<p>Public methods have been renamed to <code>lookupAsType</code>. Both delegate/return </p>

<pre><code>String[] fieldsArray = StringUtils.split(fields, ',');
return lookup(project, fieldsArray, asList, mediaType);
</code></pre>

<p>The new method <code>lookup</code> has the same code s before but contains not an if clause for the media types.</p>

<pre><code>if (mediaType.equals(MediaType.APPLICATION_JSON)) {
    body = projectValues;
} else if (mediaType.equals(MediaType.APPLICATION_XML)) {
    body = new Project(projectValues);
} else {
    throw new NotImplementedException(""Project lookup is not implemented for media type '"" + mediaType + ""'"");
}
</code></pre>

<p>The bad thing is that MediaType is not a enum but an ugly class.</p>
"
"13288423","<p>It depends on the rest of the coding guidelines.  I don't see any
problem dropping the braces <em>if</em> the opening brace is always on a line
by itself.  If the opening brace is at the end of the <code>if</code> line,
however, I find it too easy to overlook when adding to the contents.  So 
I'd go for either:</p>

<pre><code>if ( a &gt; 10 ) {
    a = 0;
}
</code></pre>

<p>regardless of the number of lines, or:</p>

<pre><code>if ( a &gt; 10 )
{
    //  several statements...
}
</code></pre>

<p>with:</p>

<pre><code>if ( a &gt; 10 )
    a = 0;
</code></pre>

<p>when there is just one statement.  The important thing, however, is that
all of the code be consistent.  If you're working on an existing code
base which uses several different styles, I'd alway use braces in new
code, since you can't count on the code style to ensure that if they
were there, they'd be in a highly visible location.</p>
"
"16492956","<p>In python, in case you need to quickly decode one of these.</p>

<pre><code>  def decodeJavaByteArray(byte):
      return byte if byte &gt;= 0 else abs(byte) + 128  
  data = [-47, 1, 16, 84, 2, 101, 110, 83, 111, 109, 101, 32, 78, 70, 67, 32, 68, 97, 116, 97]
  print [chr(decodeJavaByteArray(i)) for i in data]
=&gt; ['\xaf', '\x01', '\x10', 'T', '\x02', 'e', 'n', 'S', 'o', 'm', 'e', ' ', 'N', 'F', 'C', ' ', 'D', 'a', 't', 'a']
</code></pre>

<p>:-D</p>
"
"24053197","<pre><code>import java.io.UnsupportedEncodingException;
import java.net.URISyntaxException;

public class URLDecoding { 

    String decoded = """";

    public String decodeMethod(String url) throws UnsupportedEncodingException
    {
        decoded = java.net.URLDecoder.decode(url, ""UTF-8""); 
        return  decoded;
//""You should use java.net.URI to do this, as the URLDecoder class does x-www-form-urlencoded decoding which is wrong (despite the name, it's for form data).""
    }

    public String getPathMethod(String url) throws URISyntaxException 
    {
        decoded = new java.net.URI(url).getPath();  
        return  decoded; 
    }

    public static void main(String[] args) throws UnsupportedEncodingException, URISyntaxException 
    {
        System.out.println("" Here is your Decoded url with decode method : ""+ new URLDecoding().decodeMethod(""https%3A%2F%2Fmywebsite%2Fdocs%2Fenglish%2Fsite%2Fmybook.do%3Frequest_type"")); 
        System.out.println(""Here is your Decoded url with getPath method : ""+ new URLDecoding().getPathMethod(""https%3A%2F%2Fmywebsite%2Fdocs%2Fenglish%2Fsite%2Fmybook.do%3Frequest"")); 

    } 

}
</code></pre>

<p>You can select your method wisely :) </p>
"
"29768079","<p>I found this example interesting:</p>

<pre><code>ByteArrayInputStream bis = new 
   ByteArrayInputStream(uploadedFile.getContents());
Iterator&lt;?&gt; readers = ImageIO.getImageReadersByFormatName(""jpg"");
ImageReader reader = (ImageReader) readers.next();
IIOMetadata meta = reader.getImageMetadata(0);
Element tree = (Element) meta.getAsTree(""javax_imageio_jpeg_image_1.0"");
Element jfif = (Element)tree.getElementsByTagName(""app0JFIF"").item(0);
int dpiH = Integer.parseInt( jfif.getAttribute(""Xdensity"") );
int dpiV = Integer.parseInt( jfif.getAttribute(""Ydensity"") );

/* now test that (dpiH == dpiV) */
/* imports are:
import javax.imageio.ImageIO;
import javax.imageio.ImageReadParam;
import javax.imageio.ImageReader;
import javax.imageio.metadata.IIOMetadata;
import javax.imageio.stream.ImageInputStream;
import org.primefaces.model.UploadedFile;
import org.w3c.dom.Element;
*/
</code></pre>
"
"16644082","<p>If you couldn't find the build.xml file in your project then you have to build it to be able to debug it and get your <strong>.apk</strong>  </p>

<p>you can use this <strong>command-line</strong> to build:</p>

<pre><code>android update project -p ""project full path""
</code></pre>

<p>where ""Project full path"" -- Give your full path of your project location</p>

<p>after this you will find the build.xml then you can debug it.</p>
"
"13306669","<p>You can kinda force GC like this....</p>

<pre><code>private static void force_gc()
{
    Object obj = new Object();
    WeakReference&lt;Object&gt; ref = new WeakReference&lt;Object&gt;(obj);
    obj = null;
    while (ref.get() != null)
    {
        Log.d(LOGTAG, ""Forcing gc() ..."");
        System.gc();
    }
}
</code></pre>

<p>apart from that... i'm interested to see where this question goes.</p>
"
"24260918","<p><strong>you can use ""res.previous()"" as follows, it works..!!</strong></p>

<pre><code>ResulerSet res= getDate();

if(!res.next())
{
System.out.println(""No Data Found."");
}
else
{
    res.previous();
    while(res.next())
    {
      //code to display the data in the table.
    }
}
</code></pre>
"
"29805134","<p>I see better to use Scanner for reading in different charsets.</p>

<pre><code>    FileInputStream is = new FileInputStream(fileOrPath);
    Scanner scanner = new Scanner(is, ""cp1250"");
    String out = scanner.next();
</code></pre>

<p>And method <code>next()</code> returns <code>String</code> value in charset of application.</p>

<p>Tested on ""czech language"" from ""cp1250"" to ""UTF-8"".</p>
"
"16644531","<p>Using ant debug after building build.xml file :</p>

<p>in your cmd your root should be your project at first then use the ant debug command
e.g:</p>

<pre><code>c:\testApp&gt;ant debug 
</code></pre>
"
"24322744","<p>Use Thrift API:</p>

<pre><code>TSerializer serializer = new TSerializer(new TSimpleJSONProtocol.Factory());
String json = serializer.toString(object);
</code></pre>

<p>It will boolean to 0 or 1 instead of true/false.</p>
"
"13316689","<p>I would like to show how I would do to pass an input to the HTML. I usually use python to send request to the page where I need to input the data. Before doing that you need to know if you need to supply web-cookies or not, if yes, copy the cookie, if you need to be logged in otherwise not, just check that. Once that is done, you need to know the field names for the input area as you will be using them to POST or GET data using your script. Here is sample usage. </p>

<pre><code>import urllib
import urllib2
import string
headers = {'Cookie': 'You cookies if you need'}
values = {'form_name':'sample text', 'submit':''}
data = urllib.urlencode(values)
req = urllib2.Request('website where you making request to',data,headers)

opener1 = urllib2.build_opener()


page1=opener1.open(req)
#OPTIONAL
htmlfile=page1.read()

fout = open('MYHTMLFILE.html', ""wb"")
fout.write(htmlfile)
fout.close()
</code></pre>
"
"13336360","<p><code>nextLine()</code> adds a <code>""\n""</code> to the end of the entered string, rendering it unequal to ""Hello"".</p>
"
"17160489","<p>Simple codes and test output:</p>

<pre><code>class NextPalin
{
public static void main( String[] args )
{
    try {
        int[] a = {2, 23, 88, 234, 432, 464, 7887, 7657, 34567, 99874, 7779222, 2569981, 3346990, 229999, 2299999 };
        for( int i=0; i&lt;a.length; i++)
        {
            int add = findNextPalin(a[i]);
            System.out.println( a[i] + ""  +  ""  + add +  ""  = ""  + (a[i]+add)  );
        }
    }
    catch( Exception e ){}
}

static int findNextPalin( int a ) throws Exception
{
    if( a &lt; 0 ) throw new Exception();
    if( a &lt; 10 ) return a;

    int count = 0, reverse = 0, temp = a;
    while( temp &gt; 0 ){
        reverse = reverse*10 + temp%10;
        count++;
        temp /= 10;
    }

    //compare 'half' value
    int halfcount = count/2;
    int base = (int)Math.pow(10, halfcount );
    int reverseHalfValue = reverse % base;
    int currentHalfValue = a % base;

    if( reverseHalfValue == currentHalfValue ) return 0;
    if( reverseHalfValue &gt; currentHalfValue )  return  (reverseHalfValue - currentHalfValue);

    if(  (((a-currentHalfValue)/base)%10) == 9 ){
        //cases like 12945 or 1995
        int newValue = a-currentHalfValue + base*10;
        int diff = findNextPalin(newValue);
        return base*10 - currentHalfValue + diff;
    }
    else{
        return (base - currentHalfValue + reverseHalfValue );
    }
}
}

$ java NextPalin
2  +  2  = 4
23  +  9  = 32
88  +  0  = 88
234  +  8  = 242
432  +  2  = 434
464  +  0  = 464
7887  +  0  = 7887
7657  +  10  = 7667
34567  +  76  = 34643
99874  +  25  = 99899
7779222  +  555  = 7779777
2569981  +  9771  = 2579752
3346990  +  443  = 3347433
229999  +  9933  = 239932
2299999  +  9033  = 2309032
</code></pre>
"
"24925447","<pre><code>//More Efficiently
public class Multiples {
    public static void main(String[]args) {

        int j = 5;

        System.out.println(j % 4 == 0);

    }
}
</code></pre>
"
"25171100","<pre><code>float a[] = {1.0f,3.0f,5.0f,6.0f,7.0f,10.0f,11.0f,3.2f,4.0f};

float first =0.0f;
float second=0.0f;
float third =0.0f;
for (int i=0; i&lt;a.length; i++){
    if(first &lt; a[i]){
        first=a[i];
    }
}
System.out.println(""first largest is ""+first);
for (int j=0; j&lt;a.length; j++){
    if(a[j] &lt;first &amp;&amp; a[j] &gt; second){
        second = a[j];
    }
}
System.out.println(""second largest is ""+second);
for (int k=0;k&lt;a.length; k++){
    if(a[k]&lt;second &amp;&amp; a[k]&gt;third){
        third =a[k];
    }
}
System.out.println(""third largest is ""+third);
</code></pre>
"
"17619486","<pre><code>public static void main(String[] args){

    Scanner Input = new Scanner(System.in);

    System.out.println(""Enter # to end "");
    while( !Input.hasNextInt(""#""))// return true if u input value = its argument
    {
        //ur code
    }//end while
</code></pre>
"
"25293027","<p>The mentioned above algorithm treats 1 as prime though it is not. 
Hence here is the solution.</p>

<pre><code>static boolean isPrime(int n) {
  int perfect_modulo = 0;
  boolean prime = false;

  for ( int i = 1; i &lt;=  n; i++ ) {
    if ( n % i == 0 ) {
      perfect_modulo += 1;
    }
  }
  if ( perfect_modulo == 2 ) {
    prime = true;
  }

  return prime;
}
</code></pre>
"
"25353452","<p>Here I compare two intents using a comparator (in a unit test using FEST):</p>

<pre><code>import static org.fest.assertions.api.Assertions.assertThat;

assertThat(intentOne).usingComparator(new IntentComparator()).isEqualTo(intentTwo);

private static class IntentComparator implements Comparator&lt;Intent&gt; {
    @Override
    public int compare(Intent left, Intent right) {
        return left.filterEquals(right) ? 0 : 1;
    }
}
</code></pre>
"
"13442040","<p>Not 100% sure, but couldnt you just do 
<code>String datavalue [] = str.split(""--"");</code> 
or something?</p>

<p>sample file:</p>

<p><code>x,y,z--123--Hello World</code></p>

<p>output:</p>

<p><code>""x,y,z"",
""123"",
""Hello World""</code></p>
"
"13448906","<p>Yes, you need N File readers.</p>

<pre><code>public void workOnFiles(){

    File []D = new File(""directoryName"").listFiles(); //D.length should equal to N.

    for(File F:D){

        doSortingForEachFile(F);//do sorting part here. The same reader cannot open same file here again.

    }
}

public void doSortingForEachFile(File f){
    try{
        ArrayList&lt;Integer&gt; list=new ArrayList&lt;Integer&gt;();
        Scanner s=new Scanner(f);
        while(s.hasNextInt()){//store ints inside the file.
            list.add(s.nextInt());
        }
        s.close();//once closed, cannot open again.
        Collections.sort(list);//this method will sort the ArrayList of int.
        //...write numbers inside list to another file...
    }catch(Exception e){}
}
</code></pre>
"
"26088936","<p>Steve Ebersole &amp; other members,<br>
Would you kindly explain the reason for an id with a larger gap(by default 50)?
I am using Hibernate 4.2.15 and found the following code in org.hibernate.id.enhanced.OptimizerFactory cass.</p>

<pre><code>if ( lo &gt; maxLo ) {
   lastSourceValue = callback.getNextValue();
   lo = lastSourceValue.eq( 0 ) ? 1 : 0;
   hi = lastSourceValue.copy().multiplyBy( maxLo+1 ); 
}  
value = hi.copy().add( lo++ );
</code></pre>

<p>Whenever it hits the inside of the if statement, hi value is getting much larger.  So, my id during the testing with the frequent server restart generates the following sequence ids:<br>
1, 2, 3, 4, 19, 250, 251, 252, 400, 550, 750, 751, 752, 850, 1100, 1150.</p>

<p>I know you already said it didn't conflict with the spec, but I believe this will be very unexpected situation for most developers.   </p>

<p>Anyone's input will be much helpful. </p>

<p>Jihwan</p>

<p>UPDATE:
ne1410s: Thanks for the edit.<br>
cfrick: OK. I will do that.  It was my first post here and wasn't sure how to use it.</p>

<p>Now, I understood better why maxLo was used for two purposes: Since the hibernate calls the DB sequence once, keep increase the id in Java level, and saves it to the DB, the Java level id value should consider how much was changed without calling the DB sequence when it calls the sequence next time.  </p>

<p>For example, sequence id was 1 at a point and hibernate entered 5, 6, 7, 8, 9 (with allocationSize = 5). Next time, when we get the next sequence number, DB returns 2, but hibernate needs to use 10, 11, 12... So, that is why ""hi = lastSourceValue.copy().multiplyBy( maxLo+1 )"" is used to get a next id 10 from the 2 returned from the DB sequence.  It seems only bothering thing was during the frequent server restart and this was my issue with the larger gap.</p>

<p>So, when we use the SEQUENCE ID, the inserted id in the table will not match with the SEQUENCE number in DB.  </p>
"
"26363839","<pre><code>/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package evenfibonaccisum;

import java.math.BigInteger;

/**
 *
 * @author blades of Aragon
 */
public class EvenFibonacciSum {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here

        long a=0;
      long b=1;
       long fib=1;
        int i=10;
        long sum=0;
        while(fib&lt;=4000000){
        fib=a+b;
        a=b;
        b=fib;
           if(fib&gt;=4000000){
           break ;
           }
           else{

               if(fib%2==0){

               sum=sum+fib;

               }


           }

        }
         System.out.println(""sum of even Fibonacci ""+sum);  






        }



    }
</code></pre>
"
"19037455","<p>Why not click to download from your browser then copy &amp; paste the exact link where it was downloaded, for example: </p>

<pre><code>wget http://download.oracle.com/otn-pub/java/jdk/7u40-b43/jdk-7u40-linux-x64.tar.gz?AuthParam=1380225131_dd70d2038c57a4729d8c0226684xxxx
</code></pre>

<p>You can find out the link by looking at the network tab of your browser after accepting terms in oracle and clicking to download. F12 in Chrome. Firebug in Firefox.</p>
"
"26961396","<p>You may use inheritance : <a href=""https://docs.oracle.com/javase/tutorial/java/IandI/subclasses.html"" rel=""nofollow"">https://docs.oracle.com/javase/tutorial/java/IandI/subclasses.html</a></p>

<pre><code>public class Main{
    public static void main(String[] args){
          HashMap&lt;Integer,Integer&gt; mymap = new myMap&lt;Integer,Integer&gt;();
          mymap.put(3,4);
          mymap.put(5,6);
          System.out.println(mymap.get(3));//this will print 4;
          System.out.println(mymap.getCountGets());//this will print 1 
          System.out.println(mymap.getCountPuts());//this will print 2
    }
}
class myMap&lt;K,V&gt; extends HashMap&lt;K,V&gt; {

public myMap(){
    countPuts = 0;
    countGets = 0;
}
private int countPuts, countGets ;

@Override
public V put(K k, V v){
    countPuts++;
    return super.put(k, v);
}
@Override
public V get(Object k){
    countGets++;
    return super.get(k);
}

public int getCountGets(){
    return countGets;
}

public int getCountPuts(){
    return countPuts;
}
</code></pre>

<p>}</p>
"
"26998530","<p>The OP did not state what real-world problem he/she was trying to solve.  There may be another approach that will successfully solve the issue.</p>

<p>I came across a similar problem when I was trying to find matches in a case independent manner.  I used <code>toUpperCase()</code> to try to normalize the strings before comparison using <code>String.indexOf()</code>, and found problems with this character.</p>

<p>I found no locales in which <code>toUpperCase()</code> of the ß character resulted in anything but SS (although admittedly I did not try all possible locales).</p>

<p>My solution was to use <code>String.toLowerCase()</code> for the matching.  In my data set, there were no incidents where doing that would change the number of characters.</p>

<p>EDIT TO ADD - A code sample (as requested):</p>

<pre><code>String[] matches = ""SS,ss,ß"".split("","");
System.out.printf(""%12s %5s %5s %5s\n"", "" "", matches[0], matches[1], matches[2]);
String g = ""Großenhain"";
for (String g1 : new String[]{g, g.toUpperCase(), g.toLowerCase(), g.toUpperCase().toLowerCase()})
{
    System.out.printf(""%12s"", g1);
    for (String match : matches)
        System.out.printf("" %5d"", g1.indexOf(match));
    System.out.println();
}
</code></pre>

<p>(I threw in the toUpperCase().toLowerCase() just for fun, not as a possible solution.)</p>

<p>Output:</p>

<pre><code>                SS    ss     ß
  Großenhain    -1    -1     3
 GROSSENHAIN     3    -1    -1
  großenhain    -1    -1     3
 grossenhain    -1     3    -1
</code></pre>
"
"27065039","<p>Warning for almost everybody in this thread: here is a sample code where inside the loop can easily be 200 times slower on my computer with java 7 (And the memory consumption is also slightly different). But it is about allocation and not only scope.</p>

<pre class=""lang-java prettyprint-override""><code>public class Test
{
    private final static int STUFF_SIZE = 512;
    private final static long LOOP = 10000000l;

    private static class Foo
    {
        private long[] bigStuff = new long[STUFF_SIZE];

        public Foo(long value)
        {
            setValue(value);
        }

        public void setValue(long value)
        {
            // Putting value in a random place.
            bigStuff[(int) (value % STUFF_SIZE)] = value;
        }

        public long getValue()
        {
            // Retrieving whatever value.
            return bigStuff[STUFF_SIZE / 2];
        }
    }

    public static long test1()
    {
        long total = 0;

        for (long i = 0; i &lt; LOOP; i++)
        {
            Foo foo = new Foo(i);
            total += foo.getValue();
        }

        return total;    
    }

    public static long test2()
    {
        long total = 0;

        Foo foo = new Foo(0);
        for (long i = 0; i &lt; LOOP; i++)
        {
            foo.setValue(i);
            total += foo.getValue();
        }

        return total;
    }

    public static void main(String[] args)
    {
        long start;

        start = System.currentTimeMillis();
        test1();
        System.out.println(System.currentTimeMillis() - start);

        start = System.currentTimeMillis();
        test2();
        System.out.println(System.currentTimeMillis() - start);
    }
}
</code></pre>

<p>Conclusion: depending of the size of the local variable, the difference can be huge, even with not so big variables.</p>

<p>Just to say that sometimes, outside or inside the loop DOES matter.</p>
"
"27186915","<p>i have check in java version 1.6.0_32 multiple main method is working but there should one main method like public static void main(String []args) of type signature. Ex is here which i had tested.</p>

<pre><code>public class mainoverload
{
public static void main(String a)
{
    System.out.println(""\nIts ""+a);
}
public static void main(String args[])
{
    System.out.println(""\nIts public static void main\n"");
    mainoverload.main(""Ankit"");
    mainoverload.main(15,23);
    mainoverload.main(15);
}
public static void main(int a)
{
    System.out.println(""\nIts ""+a);
}
public static void main(int a,int b)
{
    System.out.println(""\nIts ""+a+"" ""+b);
}
}    
</code></pre>
"
"13590728","<p>One possible example: <code>\\w{5}\\d\\w{2}</code></p>
"
"13605419","<pre><code>tiendas = new ArrayList&lt;Tienda&gt;(tiendasList);
</code></pre>

<p>All collection implementations have an overloaded constructor that takes another collection (with the template <code>&lt;T&gt;</code> matching). The new instance is instantiated with the passed collection.</p>
"
"13616408","<p>Well you can do it the ugly way if you want. I forget if there is a function to do it but if you want to manually do it here is the way.</p>

<pre><code> int array[10][10][10] = ...// just assume they are all filled.
    int newArray[10][10][10];
        for(int i = 0; i&lt; 10; i++)
        {
           for(int j = 0; j&lt; 10; j++)
           {
               for(int k = 0; k&lt; 10; k++)
               {
                  newArray[i][j][k] = array[i][j][k];
               }
           }
        }

    array = NULL;
</code></pre>

<p>This is just an example and probably isn't correct syntax but this way should work. The i&lt; 10 or any of the others should actually be i&lt; length of the array dimension. </p>
"
"19995823","<p>In my case problem was resolved by clicking <code>Remove All Breakpoints</code>  </p>
"
"13616466","<p>You can create subclass of ArrayList and override the clone() method to perform deep copy instead of shallow copy. Eg:</p>

<pre><code>public class DeepCopyArrayList extends ArrayList
{
  public Object clone()
  {
     // implement deep copy clone here
  }
}
</code></pre>

<p>Once you have this you only need to do</p>

<pre><code>myArray.clone()
</code></pre>
"
"27597538","<p>See example below for using a POJO as pseudo entity to retrieve result from native query without using complex SqlResultSetMapping. Just need two annotations, a bare @Enity and a dummy @Id in your POJO. @Id can be used on any field of your choice, an @Id field can have duplicate keys but not null values.</p>

<p>Since @Enity does not map to any physical table, so this POJO is called a pseudo entity.</p>

<p>Environment: eclipselink 2.5.0-RC1, jpa-2.1.0, mysql-connector-java-5.1.14</p>

<p>You can download complete maven project <a href=""https://github.com/jonathanluo/jpa"" rel=""nofollow"">here</a></p>

<p>Native query is based on mysql sample employees db
<a href=""http://dev.mysql.com/doc/employee/en/employees-installation.html"" rel=""nofollow"">http://dev.mysql.com/doc/employee/en/employees-installation.html</a></p>

<p>persistence.xml</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;&lt;persistence xmlns=""http://xmlns.jcp.org/xml/ns/persistence"" 
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" version=""2.1"" 
    xsi:schemaLocation=""http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd""&gt;
&lt;persistence-unit name=""jpa-mysql"" transaction-type=""RESOURCE_LOCAL""&gt;
    &lt;class&gt;org.moonwave.jpa.model.pojo.Employee&lt;/class&gt;
    &lt;properties&gt;
        &lt;property name=""javax.persistence.jdbc.url"" value=""jdbc:mysql://localhost:3306/employees"" /&gt;
        &lt;property name=""javax.persistence.jdbc.user"" value=""user"" /&gt;
        &lt;property name=""javax.persistence.jdbc.password"" value=""***"" /&gt;
        &lt;property name=""javax.persistence.jdbc.driver"" value=""com.mysql.jdbc.Driver"" /&gt;
    &lt;/properties&gt;
&lt;/persistence-unit&gt;
</code></pre>

<p></p>

<p>Employee.java</p>

<pre><code>package org.moonwave.jpa.model.pojo;

@Entity
public class Employee {

@Id
protected Long empNo;

protected String firstName;
protected String lastName;
protected String title;

public Long getEmpNo() {
    return empNo;
}
public void setEmpNo(Long empNo) {
    this.empNo = empNo;
}
public String getFirstName() {
    return firstName;
}
public void setFirstName(String firstName) {
    this.firstName = firstName;
}
public String getLastName() {
    return lastName;
}
public void setLastName(String lastName) {
    this.lastName = lastName;
}   
public String getTitle() {
    return title;
}
public void setTitle(String title) {
    this.title = title;
}
public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(""empNo: "").append(empNo);
    sb.append("", firstName: "").append(firstName);
    sb.append("", lastName: "").append(lastName);
    sb.append("", title: "").append(title);
    return sb.toString();
}
}
</code></pre>

<p>EmployeeNativeQuery.java</p>

<pre><code>public class EmployeeNativeQuery {
private EntityManager em;
private EntityManagerFactory emf;

public void setUp() throws Exception {
    emf=Persistence.createEntityManagerFactory(""jpa-mysql"");
    em=emf.createEntityManager();
}
public void tearDown()throws Exception {
    em.close();
    emf.close();
}

@SuppressWarnings(""unchecked"")
public void query() {
    Query query = em.createNativeQuery(""select e.emp_no as empNo, e.first_name as firstName, e.last_name as lastName,"" + 
            ""t.title from employees e join titles t on e.emp_no = t.emp_no"", Employee.class);
    query.setMaxResults(30);
    List&lt;Employee&gt; list = (List&lt;Employee&gt;) query.getResultList();
    int i = 0;
    for (Object emp : list) {
        System.out.println(++i + "": "" + emp.toString());
    }
}

public static void main( String[] args ) {
    EmployeeNativeQuery test = new EmployeeNativeQuery();
    try {
        test.setUp();
        test.query();
        test.tearDown();
    } catch (Exception e) {
        System.out.println(e);
    }
}
}
</code></pre>
"
"27705273","<p>I have also face this error in Logcat. For solve it that also take a 1 day but there is no any big error in our code as per we face.</p>

<p>Solution: Add that activity in Manifest.xml file of an application.</p>

<p>code:</p>

<pre><code>&lt;activity android:name=""com.example.youappname.activityname"" &gt; &lt;/activity&gt;
</code></pre>

<p>Add all the activities of app in Manifest like this.</p>

<p>Try and solve error.</p>
"
"13636151","<p>Here is an example of a function you could use with getting each item.  The speed of this is not really an increase.  Due to this being an arraylist there is not really a good way to do this.  There are better data structures for searching for parts of a string.</p>

<pre><code>    public class RegionMatchesDemo {
public static void main(String[] args) {
    String searchMe = ""Green Eggs and Ham"";
    String findMe = ""Eggs"";
    int searchMeLength = searchMe.length();
    int findMeLength = findMe.length();
    boolean foundIt = false;
    for (int i = 0; 
         i &lt;= (searchMeLength - findMeLength);
         i++) {
       if (searchMe.regionMatches(i, findMe, 0, findMeLength)) {
          foundIt = true;
          System.out.println(searchMe.substring(i, i + findMeLength));
          break;
       }
    }
    if (!foundIt)
        System.out.println(""No match found."");
  }
}
</code></pre>
"
"28041437","<pre><code>&lt;%@page import=""java.text.SimpleDateFormat""%&gt;
&lt;%@page import=""java.util.Date""%&gt;
&lt;%@page import=""java.util.Locale""%&gt;

&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Date Format&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;%
String stringDate = ""Fri May 13 2011 19:59:09 GMT 0530"";
Date stringDate1 = new SimpleDateFormat(""EEE MMM dd yyyy HH:mm:ss Z"", Locale.ENGLISH).parse(stringDate);
String stringDate2 = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"").format(stringDate1);

out.println(stringDate2);
%&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
"
"28092365","<p>This would be useful if you wanna scan large regions (hundred of millions rows) with conditioned scan that finds only a few records. This will prevent of ScannerTimeoutException</p>

<pre><code>package org.apache.hadoop.hbase.mapreduce;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.hbase.util.Bytes;
import org.apache.hadoop.mapreduce.InputSplit;
import org.apache.hadoop.mapreduce.JobContext;

public class RegionSplitTableInputFormat extends TableInputFormat {

    public static final String REGION_SPLIT = ""region.split"";

    @Override
    public List&lt;InputSplit&gt; getSplits(JobContext context) throws IOException {

        Configuration conf = context.getConfiguration();
        int regionSplitCount = conf.getInt(REGION_SPLIT, 0);
        List&lt;InputSplit&gt; superSplits = super.getSplits(context);
        if (regionSplitCount &lt;= 0) {
            return superSplits;
        }

        List&lt;InputSplit&gt; splits = new ArrayList&lt;InputSplit&gt;(superSplits.size() * regionSplitCount);

        for (InputSplit inputSplit : superSplits) {
            TableSplit tableSplit = (TableSplit) inputSplit;
            System.out.println(""splitting by "" + regionSplitCount + "" "" + tableSplit);
            byte[] startRow0 = tableSplit.getStartRow();
            byte[] endRow0 = tableSplit.getEndRow();
            boolean discardLastSplit = false;
            if (endRow0.length == 0) {
                endRow0 = new byte[startRow0.length];
                Arrays.fill(endRow0, (byte) 255);
                discardLastSplit = true;
            }
            byte[][] split = Bytes.split(startRow0, endRow0, regionSplitCount);
            if (discardLastSplit) {
                split[split.length - 1] = new byte[0];
            }
            for (int regionSplit = 0; regionSplit &lt; split.length - 1; regionSplit++) {
                byte[] startRow = split[regionSplit];
                byte[] endRow = split[regionSplit + 1];
                TableSplit newSplit = new TableSplit(tableSplit.getTableName(), startRow, endRow,
                        tableSplit.getLocations()[0]);
                splits.add(newSplit);
            }
        }

        return splits;
    }
}
</code></pre>
"
"20765525","<p>Primitive types (int, double, byte etc..) can't have methods.
So use this :</p>

<pre><code>String itemId = String.valueOf(item.getId());
</code></pre>
"
"13657596","<p>if you just want one really long line you should write in the loop, not storing it in a variable. </p>

<p>i think the problem is that the string just gets so long (i got a file with 48kb with code below) that it gets out of memory. though strange that it doesnt throw an OutOfMemoryException or similar.</p>

<pre><code>public static void main(String[] args) {

    try {

        int n = 10000;
        FileWriter fstream = new FileWriter(""input"" + n + "".txt"");
        BufferedWriter out = new BufferedWriter(fstream);

        for (int i = 0; i &lt; n; i++) {
            int temp = (int) Math.ceil((Math.random() * n));
            out.write(temp+"" "");
            out.flush();
        }
        out.close();
    } catch (Exception e) {
        System.err.println(""Error: "" + e.getMessage());
    }
}
</code></pre>
"
"13659273","<p>cant you just do </p>

<pre><code>ArrayList list = new ArrayList(size);
</code></pre>
"
"28970088","<p>If you want to get name of class using jni you can do this: </p>

<pre><code>jclass cls = env-&gt;FindClass(""java/lang/Class"");
jmethodID mid = env-&gt;GetMethodID(cls, ""getName"", ""()Ljava/lang/String;"");

cls = env-&gt;GetObjectClass(obj);

jstring className_jstring = env-&gt;CallObjectMethod(cls, mid);
const char * className = env-&gt;GetStringUTFChars(className_jstring, JNI_FALSE);

printf(""Class name: %s\n"", className);
</code></pre>

<p>It works for me.</p>
"
"28981703","<p>try this </p>

<pre><code>round(16.489, 2, BigDecimal.ROUND_CEILING);

public static double round(double x, int scale, int roundingMethod) {
        try {
            return (new BigDecimal
                   (Double.toString(x))
                   .setScale(scale, roundingMethod))
                   .doubleValue();
        } catch (NumberFormatException ex) {
            if (Double.isInfinite(x)) {
                return x;
            } else {
                return Double.NaN;
            }
        }
    }
</code></pre>
"
"29099496","<p>I guess this might help.
Although it is not standard but i hope it provides a simpler approach.</p>

<pre><code>public class ThreadDemo
{
    public static void main (String [] args)
    {
        PrintDemo pd=new PrintDemo();     
        MyThread1 mt1 = new MyThread1 (""T1"",pd);
        MyThread2 mt2 = new MyThread2 (""T2"",pd);     
        mt1.start ();
        mt2.start();
    }
}
class PrintDemo {
    private boolean oddFlag=true;
    public synchronized void printOdd(int i,String tName){
        if(oddFlag==false){
            try {
                wait();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }   
        }else{
            System.out.println(""\nThread ""+tName+"" count:""+i);
            oddFlag=false;
            notify();
        }
    }
    public synchronized void printEven(int i,String tName){
        if(oddFlag==true){
            try {
                wait();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }   
        }else{
            System.out.println(""\nThread ""+tName+"" count:""+i);
            oddFlag=true;
            notify();
        }
    }   
}
class MyThread1 extends Thread
{
    private PrintDemo pd;
    private String name;

    MyThread1(String threadName,PrintDemo pd){
        this.name=threadName;
        this.pd=pd;
    }  
    public void run ()  
    {
       for(int i=1;i&lt;=50;i+=2){
            pd.printOdd(i,name);
       }
    }
}
class MyThread2 extends Thread
{
    private PrintDemo pd;
    private String name;    
    MyThread2(String threadName,PrintDemo pd){
        this.name=threadName;
        this.pd=pd;
    }   
    public void run ()
    {
        for(int i=2;i&lt;=50;i+=2){
            pd.printEven(i,name);                   
        }
    }
}
</code></pre>
"
"21422872","<pre><code>String name=Vikash
String upperCase=name.toUpperCase()
String lowerCase=name.toLowerCase()
</code></pre>
"
"13688263","<p>The best way to do it is using Threads to read the output </p>

<p>What I would do is: using a Callable (a Runnable will also work) where I give the input from the process (process.getInputStream ()) and the output where I want to store the output. The same should be done for the StdErr. The resulting output can be read using whatever you like.</p>

<pre><code> public Object call () throws IOException {
        int bytesRead;
        byte[] b = new byte [ this.maxBlockSize ];

        try {
            while ( ( bytesRead = this.input.read ( b ) ) != -1 ) {
                this.output.write ( b, 0, bytesRead );
            }
        } finally {
            if ( this.output != null ) {
                this.output.close ();
            }
        }
        return null;
    }
</code></pre>
"
"21557386","<blockquote>
  <p>public String getPassphrase() {
          return null;
      }</p>

<pre><code>public boolean promptPassphrase(String message) {
    return true;
}

public boolean promptPassword(String message) {
    passwd = SSH_SERVER_PASSWORD;
    return true;
}

public void showMessage(String message) {
    System.out.println(""message = "" + message);
</code></pre>
</blockquote>
"
"13713519","<pre><code>for(float i =1.0f;i&lt;10f;i+=1f)
System.out.println(i/10f);`
</code></pre>

<p>is ugly as hell but works here (Ubuntu AMD64 OpenJDK)</p>
"
"21780107","<p>Use the code below. note: <code>String.format(""%.2f"", totalCost)</code> formats the <code>totalCost</code> value to two decimal place.    </p>

<pre><code>JOptionPane.showMessageDialog(null,""Your monthly payment is $"" + String.format(""%.2f"",totalCost),""Monthly Payment"",JOptionPane.PLAIN_MESSAGE);
</code></pre>
"
"21818429","<pre><code>package computeloan;




import java.util.Scanner;

public class ComputeLoan {

public static void main(String[] args) {
   Scanner input = new Scanner(System.in);

        System.out.print("" Enter Yearly Interest Rate : "");

        double annualIntersetRate = input.nextDouble();




        double monthlyIntersetRate = annualIntersetRate / 1200;




        System.out.print("" Enter Number of years :  "");


        int numberOfYears = input.nextInt();


        // Enter loan amount


        System.out.print("" Enter Loan Amount : "");


        double loanAmount = input.nextDouble();


        double monthlyPayment = loanAmount * monthlyIntersetRate /(1-1/Math.pow(1+monthlyIntersetRate,numberOfYears*12 ));





        double totalPayment = monthlyPayment * numberOfYears * 12;
        //Calculate monthlyPaymeent and totalPayment

        System.out.println("" The Monthly Payment Is : "" +(int)(monthlyPayment*100) /100.0);





        System.out.println("" The Total Payment Is : "" +(int)(totalPayment*100) /100.0 );
    }
}
</code></pre>
"
"13716606","<p>I think you can have a separate global variable to know which one was modified (I think you just need the reference of that string) and use like:</p>

<pre><code>if(r1==null)
    globalR = r1 = [something]    
else if(r2==null)
    globalR = r2 = [something]
else if(r3==null)
    globalR = r3 = [something]
else if(r4==null)
    globalR = r4 = [something]
else if(r5==null)
    globalR = r5 = [something]
</code></pre>

<p>then you can use globalR to handle that string</p>
"
"13718670","<p>Why are you passing entire list to the contains method? You should pass <code>finalval</code> rather.</p>
"
"13724987","<p><code>fooFunc()</code> will execute first, followed by <code>bazFunc()</code> and finally <code>barFunc()</code></p>

<p>We can all agree that <code>fooFunc()</code> must execute before <code>barFunc()</code> has anything to operate on.</p>

<p>Given that <code>bazFunc()</code> will only be called when <code>barFunc()</code> needs it's parameters, it stands to reason that this would happen after <code>fooFunc()</code>.</p>
"
"29865414","<p>This is another way to approach memoization for recursive fibonacci() method using a static array of values -</p>

<pre><code>public static long fibArray[]=new long[50];\\Keep it as large as you need

public static long fibonacci(long n){
long fibValue=0;
if(n==0 ){
    return 0;
}else if(n==1){
    return 1;
}else if(fibArray[(int)n]!=0){
    return fibArray[(int)n];    
}
else{
    fibValue=fibonacci(n-1)+fibonacci(n-2);
    fibArray[(int) n]=fibValue;
    return fibValue;
}
}
</code></pre>

<p>Note that this method uses a global(class level) static array fibArray[]. To have a look at the whole code with explanation you can also see the following - <a href=""http://www.javabrahman.com/gen-java-programs/recursive-fibonacci-in-java-with-memoization/"" rel=""nofollow"">http://www.javabrahman.com/gen-java-programs/recursive-fibonacci-in-java-with-memoization/</a></p>
"
"22376908","<pre><code>import java.util.Arrays;
public class ExampleContains {
    public static boolean EligibleState(String state){
        String[] cities = new String[]{""Washington"", ""London"", ""Paris"", ""NewYork""};
        boolean test = Arrays.asList(cities).contains(state)?true:false;
        return test;
     }

    public static void main(String[] args) {
        // TODO Auto-generated method stub
        System.out.println(EligibleState(""London""));
    }

}
</code></pre>
"
"29971081","<p>The class <a href=""http://jhpropertiestyp.sourceforge.net/jhpropertiestyped/javadoc/dk/heick/properties/types/utils/CommentedProperties.html"" rel=""nofollow"">CommentedProperties</a></p>

<p>Will parse the properties</p>

<pre><code> ## General comment line 1
 ## General comment line 2
 ##!General comment line 3, is ignored and not loaded
 ## General comment line 4


 # Property A comment line 1
 A=1

 # Property B comment line 1
 # Property B comment line 2
 B=2

 ! Property C comment line 1
 ! Property C comment line 2

 C=3
 D=4

 # Property E comment line 1
 ! Property E comment line 2  
 E=5

 # Property F comment line 1
 #!Property F comment line 2, is ignored and not loaded
 ! Property F comment line 3  
 F=5 
</code></pre>

<p>The properties file comments is:</p>

<pre><code>General comment line 1
General comment line 2
General comment line 4
</code></pre>

<p>So Property ""A"" comments is:</p>

<pre><code>Property A comment line 1
</code></pre>

<p>So Property ""B"" comments is:</p>

<pre><code>Property B comment line 1
Property B comment line 2
</code></pre>

<p>So Property ""C""</p>

<pre><code>Property C comment line 1
Property C comment line 2
</code></pre>

<p>So Property ""D"" comments is empty.</p>

<p>So Property ""E"" comments is:</p>

<pre><code>Property E comment line 1
Property E comment line 2
</code></pre>

<p>So Property ""F"" comments is:</p>

<pre><code>Property F comment line 1
Property F comment line 3
</code></pre>
"
"22526492","<pre><code>-Djava.net.preferIPv4Stack=true 
</code></pre>

<p>worked for me on Windows 8 and Eclipse Kepler Service Release 1 version.</p>
"
"13760883","<p>Create a class that implements Comparable which takes a Number in the constructor.
e.g.</p>

<pre><code>public class GenericNumber implements Comparable&lt;GenericNumber&gt; {
    private Number num;
    public GenericNumber(Number num) {
        this.num = num;
    }
    // write compare function that compares num member of two
    // GenericNumber instances
}
</code></pre>

<p>Then simply do this:</p>

<pre><code>GenericNumber i = new GenericNumber(new Integer(5));
GenericNumber j = new GenericNumber(new Double(7));
System.out.println(GenericsTest.compare(i,j));
</code></pre>
"
"13770589","<pre><code>public static String model;
public static int letternum;
public static String plate;
public static String letter;
public static int total;              
public static String alphabet = ""abcdefghijklmnopqrstuvwxyz"";

public static void main(String[] args) {
    Scanner input = new Scanner(System.in);

    //System.out.println(""Car Model:"");
    //model = input.nextLine();
    System.out.println(""License Plate: "");
    plate = input.nextLine();

    char one = plate.charAt(0);
    char two = plate.charAt(1);
    char three = plate.charAt(2);
    total = Integer.parseInt(one) + Integer.parseInt(two) + Integer.parseInt(three);
    letternum = total % 24;

    char letter = alphabet.charAt(letternum);

    System.out.println("""" + letter + total);

}
</code></pre>

<p>you forgot to cast it to integer</p>
"
"13835058","<p>Use the Class Bigintiger. here´s an example how to work / pow  with it</p>

<pre><code>public String higherPow() {
    BigIntiger i = new Bigintger(""2"");
    // doing a power(2^32)
    i = i.pow(32);
    // after 2^32 was made, do mod 100
    i = i.mod(new Bigintiger(""100""));
    return i.toString();
}
</code></pre>
"
"13843963","<p>Use the <code>try</code> statement so when it throws an error you can deal with it using a null <code>System.out.print()</code>.</p>
"
"22704210","<p>Not sure what youre trying to accomplish, i made a similar program using javascript, and heres the code, its really simple. btw, the quadratic equation is -b±√D/2a , i dont think you put that in completely. heres the code i wrote: 
Also, i think the problem is in the part where you've gone return:(root1,root2) , make it into an array or just do 2 return commands.
I.e return(root1)
return(root2) not sure if you cna have 2 returns ins a function, not a java programmer, sorry, but i tried :D</p>

<pre><code>else if(choice == 2){//quadratic start
     alert(""the equation is of the form : ax^2 + bx + c == 0 , only input the coefficients i.e - the value of ax^2 is a, or the value of bx is b, not bx. The value of b for the equation 5x^2 + 7x +3 is 7, not 7x"");
     var a = prompt(""Put in the value of a"");//declaring variables
     var b = prompt(""Put in the value of b, if the bx part of the equation doesn't exist, input 0. Ex for equation 2x^+6==0 , b ==0, since its technically 2x^2 + 0b + 6 == 0"");
     var c = prompt(""Put in the value of c, if the c part of the equation doesn't exist, input 0. Ex for equation 2x^+6x==0 , c ==0, since its technically 2x^2 + 6b + 0 == 0"");
     var D = ((b*b)-(4*a*c));//computing discriminant
     if(D &lt; 0){
     alert(""The quadratic equation doesn't have real roots; the closest value is : "" + (-b/2) +"" + i/2"");
     }
     else{
     root1 = (- b + Math.sqrt(D))/(2*a);
     root2 = (- b - Math.sqrt(D))/(2*a);
     }
     if(D===0){
     console.log(""Both roots are equal, their value is "" + root1);
     alert(""Both roots are equal, their value is "" + root1);
     }
     else if ( D &gt; 0){
     console.log(""The roots of the equation are: "" + root1 + "" and "" + root2);
     alert(""The roots of the equation are: "" + root1 + "" and "" + root2 );
     }
     }//quadratic end
</code></pre>

<p>and heres the complete program:</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;head&gt;
 &lt;script type=""text/javascript"" src =""code.js""&gt;&lt;/script&gt;
 &lt;script type=""text/javascript""&gt;
 var main = function(){//Linear in 2 start
 var choice = prompt(""Choose your type of equation : Type 1 for linear in 2 variables, 2 for quadratic in one variable "");
 if(choice ==1){
 alert(""The two equations are of the forms a1x + b1y + c1 = 0 and a2x + b2y + c2 = 0 respectively"")
 var a1 = prompt(""Enter value of a (a1) for equation 1"");
 var b1 = prompt(""Enter value of b (b1) for equation 1"");
 var c1 = prompt(""Enter value of c (c1) for equation 1"");
 var a2 = prompt(""Enter value of a (a2) for equation 2"");
 var b2 = prompt(""Enter value of b (b2) for equation 2"");
 var c2 = prompt(""Enter value of c (c2) for equation 2"");
 if(a1/a2===b1/b2===c1/c2){
 alert(""No solution is possible for the equation, i.e. the lines are parallel"")
 }
 else if(a1/a2===b1/b2 &amp;&amp; b1/b2!=c1/c2){
 alert(""The lines are collinear and the values of x and y are infinite"")
 }
 else{
 var ansy = (c2*a1-c1*a2)/(b1*a2-b2*a1);
 var ansx = (c1-b1*ansy/a1);
 alert(""x is equal to : "" + ansx);
 alert(""y is equal to : "" + ansy);
 }
 }
 else if(choice == 2){//quadratic start
 alert(""the equation is of the form : ax^2 + bx + c == 0 , only input the coefficients i.e - the value of ax^2 is a, or the value of bx is b, not bx. The value of b for the equation 5x^2 + 7x +3 is 7, not 7x"");
 var a = prompt(""Put in the value of a"");//declaring variables
 var b = prompt(""Put in the value of b, if the bx part of the equation doesn't exist, input 0. Ex for equation 2x^+6==0 , b ==0, since its technically 2x^2 + 0b + 6 == 0"");
 var c = prompt(""Put in the value of c, if the c part of the equation doesn't exist, input 0. Ex for equation 2x^+6x==0 , c ==0, since its technically 2x^2 + 6b + 0 == 0"");
 var D = ((b*b)-(4*a*c));//computing discriminant
 if(D &lt; 0){
 alert(""The quadratic equation doesn't have real roots; the closest value is : "" + (-b/2) +"" + i/2"");
 }
 else{
 root1 = (- b + Math.sqrt(D))/(2*a);
 root2 = (- b - Math.sqrt(D))/(2*a);
 }
 if(D===0){
 console.log(""Both roots are equal, their value is "" + root1);
 alert(""Both roots are equal, their value is "" + root1);
 }
 else if ( D &gt; 0){
 console.log(""The roots of the equation are: "" + root1 + "" and "" + root2);
 alert(""The roots of the equation are: "" + root1 + "" and "" + root2 );
 }
 }//quadratic end
}
var again = confirm(""Proceed to equation selection menu?"");
if(again === true){
 main();
}
 &lt;/script&gt;
 &lt;title&gt;Equation Solver&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
"
"22714639","<p>the solution is implementing anonymous class in this manner:</p>

<pre><code>        import org.openqa.selenium.Point;
        import org.openqa.selenium.interactions.HasInputDevices;
        import org.openqa.selenium.interactions.Mouse;
        import org.openqa.selenium.interactions.internal.Coordinates;

        .....

        final Point image = page.findImage(""C:\\Pictures\\marker.png"") ;

        Mouse mouse = ((HasInputDevices) driver).getMouse();

        Coordinates imageCoordinates =  new Coordinates() {

              public Point onScreen() {
                throw new UnsupportedOperationException(""Not supported yet."");
              }

              public Point inViewPort() {
                Response response = execute(DriverCommand.GET_ELEMENT_LOCATION_ONCE_SCROLLED_INTO_VIEW,
        ImmutableMap.of(""id"", getId()));

    @SuppressWarnings(""unchecked"")
    Map&lt;String, Number&gt; mapped = (Map&lt;String, Number&gt;) response.getValue();

    return new Point(mapped.get(""x"").intValue(), mapped.get(""y"").intValue());
              }

              public Point onPage() {
                return image;
              }

              public Object getAuxiliary() {
                // extract the selenium imageElement id (imageElement.toString() and parse out the ""{sdafbsdkjfh}"" format id) and return it
              }
            };

        mouse.mouseMove(imageCoordinates);
</code></pre>
"
"13895982","<p>You just need to initialize AC since it's possible neither option of the ""if"" would. Just do</p>

<pre><code>double AC = -1;
</code></pre>

<p>or some dummy value.</p>
"
"23030674","<p>This worked in my case:</p>

<pre><code>UIManager.put(""InternalFrame.useTaskBar"", Boolean.FALSE); 
</code></pre>

<p>It should be ""less invasive"" than replacing a whole UI class, and if you change to a Look and Feel that doesn't display the toolbar the property should be simply ignored</p>
"
"23034648","<p>This is what works for me. Reference <a href=""http://docs.oracle.com/javase/7/docs/technotes/guides/management/agent.html"" rel=""nofollow"">Oracle JMX Tutorial</a>. I am assuming you already know how to right SimpleMXBean used in below example.</p>

<pre><code>package sample;

import java.io.IOException;
import java.lang.management.ManagementFactory;
import java.rmi.registry.LocateRegistry;
import java.util.HashMap;
import java.util.Map;

import javax.management.MBeanServer;
import javax.management.ObjectName;
import javax.management.remote.JMXConnectorServer;
import javax.management.remote.JMXConnectorServerFactory;
import javax.management.remote.JMXServiceURL;

public class MBServerTest {
    public static void loadJMXAgent(int port, MBeanServer mbs) throws IOException  {
        LocateRegistry.createRegistry(port);
        System.out.println(""Initialize the environment map"");
        Map&lt;String,Object&gt; env = new HashMap&lt;String,Object&gt;();
        env.put(""com.sun.management.jmxremote.authenticate"", ""false"");
        env.put(""com.sun.management.jmxremote.ssl"", ""false"");
        System.out.println(""Create an RMI connector server"");
        JMXServiceURL url =
            new JMXServiceURL(""service:jmx:rmi:///jndi/rmi://:""+port+""/jmxrmi"");
        JMXConnectorServer cs =
            JMXConnectorServerFactory.newJMXConnectorServer(url, env, mbs);

        // Start the RMI connector server.
        //
        System.out.println(""Start the RMI connector server"");
        cs.start();

    }

    public static void main(String[] args) throws Exception {
        MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();
        loadJMXAgent(1199,mbs);

        SimpleStandard cache = new SimpleStandard();

        ObjectName name = new ObjectName(
                ""org.javalobby.tnt.jmx:type=ApplicationCacheMBean"");
        mbs.registerMBean(cache, name);
        imitateActivity(cache);
    }

    private static void imitateActivity(SimpleStandard cache) {
        while (true) {
            try {
                cache.cacheObject(""hello"");
                Thread.sleep(1000);
            } catch (InterruptedException e) {
            }
        }
    }
}
</code></pre>
"
"13935943","<p>It will return 0, always, because you are returning an <code>int</code> type. The result of your division will always be some floating point value, so you need to store it as such, and return it.</p>

<pre><code>public class cal {
    public int total = 11;
    public int count = 2508;
    public double calRatio;
    public void caln() {
        calRatio = (double)count / (double)total;
        System.out.print(calRatio);
    }
}
</code></pre>
"
"13951443","<p>To send email with gmail, think you should enable Transport Layer Security also.</p>

<pre><code>currentMessage.setTLS(true);
</code></pre>
"
"13962925","<p>You have to append the line seperator / break like this.</p>

<p>Try</p>

<pre><code>String separator = System.getProperty(""line.separator"");
    fos.append(seperator);
</code></pre>
"
"14046906","<p>one way of doing this is following : </p>

<pre><code>str.replaceAll(""@apple"", ""apple""); 
str.replaceAll(""@banna"", ""banna""); 
str.replaceAll(""@?"", ""?"");
</code></pre>
"
"24608180","<p>Because XWPFRun.addPicture does not work (it damage xdoc file) i manage to picture like this:</p>

<pre><code>    private void addPicture(final String fileName, final int id, int width, int height, final XWPFRun run)
{
    FileInputStream fileInputStream = null;

    try
    {
        fileInputStream = new FileInputStream(""/home/maq/ebworkspace/TeamForge_Tools/"" + fileName);
        final String blipId = run.getDocument().addPictureData(fileInputStream, Document.PICTURE_TYPE_JPEG);

        final int EMU = 9525;
        width *= EMU;
        height *= EMU;
        //String blipId = getAllPictures().get(id).getPackageRelationship().getId();

        final CTInline inline = run.getCTR().addNewDrawing().addNewInline();

        final String picXml = """" + ""&lt;a:graphic xmlns:a=\""http://schemas.openxmlformats.org/drawingml/2006/main\""&gt;""
                + ""   &lt;a:graphicData uri=\""http://schemas.openxmlformats.org/drawingml/2006/picture\""&gt;"" + ""      &lt;pic:pic xmlns:pic=\""http://schemas.openxmlformats.org/drawingml/2006/picture\""&gt;""
                + ""         &lt;pic:nvPicPr&gt;"" + ""            &lt;pic:cNvPr id=\""""
                + id
                + ""\"" name=\""Generated\""/&gt;""
                + ""            &lt;pic:cNvPicPr/&gt;""
                + ""         &lt;/pic:nvPicPr&gt;""
                + ""         &lt;pic:blipFill&gt;""
                + ""            &lt;a:blip r:embed=\""""
                + blipId
                + ""\"" xmlns:r=\""http://schemas.openxmlformats.org/officeDocument/2006/relationships\""/&gt;""
                + ""            &lt;a:stretch&gt;""
                + ""               &lt;a:fillRect/&gt;""
                + ""            &lt;/a:stretch&gt;""
                + ""         &lt;/pic:blipFill&gt;""
                + ""         &lt;pic:spPr&gt;""
                + ""            &lt;a:xfrm&gt;""
                + ""               &lt;a:off x=\""0\"" y=\""0\""/&gt;""
                + ""               &lt;a:ext cx=\""""
                + width
                + ""\"" cy=\""""
                + height
                + ""\""/&gt;""
                + ""            &lt;/a:xfrm&gt;""
                + ""            &lt;a:prstGeom prst=\""rect\""&gt;""
                + ""               &lt;a:avLst/&gt;""
                + ""            &lt;/a:prstGeom&gt;""
                + ""         &lt;/pic:spPr&gt;""
                + ""      &lt;/pic:pic&gt;"" + ""   &lt;/a:graphicData&gt;"" + ""&lt;/a:graphic&gt;"";

        //CTGraphicalObjectData graphicData = inline.addNewGraphic().addNewGraphicData();
        XmlToken xmlToken = null;
        xmlToken = XmlToken.Factory.parse(picXml);
        inline.set(xmlToken);
        //graphicData.set(xmlToken);

        inline.setDistT(0);
        inline.setDistB(0);
        inline.setDistL(0);
        inline.setDistR(0);

        final CTPositiveSize2D extent = inline.addNewExtent();
        extent.setCx(width);
        extent.setCy(height);

        final CTNonVisualDrawingProps docPr = inline.addNewDocPr();
        docPr.setId(id);
        docPr.setName(""Picture "" + id);
        docPr.setDescr(""Generated"");
    }
    catch (final Exception e)
    {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    finally
    {
        //close streams 
        if (fileInputStream != null)
        {
            try
            {
                fileInputStream.close();
            }
            catch (final IOException ioEx)
            {
                //can be ignored
            }
        }
    }

}
</code></pre>

<p>And running example: </p>

<pre><code> addPicture(filePath, xdoc.getNextPicNameNumber(Document.PICTURE_TYPE_JPEG), 100, 50, xRun);
</code></pre>
"
"24843806","<p>just write </p>

<pre><code>public class weightloss extends Activity implements OnclickListner 
</code></pre>
"
"14135829","<p>Look into <code>infix</code> and <code>postfix</code> notations if you want to make your arithmetic evaluator. For example:</p>

<p>In fix notation:</p>

<pre><code>y = 4 + 9 + 3 / 6 * 5;
</code></pre>

<p>Post fix notation:</p>

<pre><code>y = 4 9 3 6 / 5 * + +;
</code></pre>

<p><strong>Refrence</strong>
<a href=""http://scriptasylum.com/tutorials/infix_postfix/algorithms/infix-postfix/index.htm"" rel=""nofollow"">http://scriptasylum.com/tutorials/infix_postfix/algorithms/infix-postfix/index.htm</a></p>
"
"14150068","<pre><code>class ThreadDemo {

public static void main(String[] args) {

    NewThread t = new NewThread();

    try {
        for (int i = 5; i &gt; 0; i--) {
            System.out.println(""Main Thread: "" + i);
            Thread.sleep(1000);
            t.run(); //// forgot here
        }
    } catch (InterruptedException e) {
        // TODO: handle exception
        System.out.println(""Main Thread Interrupted."");
    }

    System.out.println(""Main Thread Exiting."");
}
</code></pre>

<p>}</p>

<p>add t.run();</p>
"
"25983513","<p>In your ""AndroidManifest.xml"", in the activity tag you can specify ""NoTitleBar"" in the theme property so that it will always hide the title:</p>

<pre><code>&lt;activity
    android:name=""com.my_package.MyActivity"" 
    android:theme=""@android:style/Theme.NoTitleBar.Fullscreen""
    android:configChanges=""navigation|orientation|screenLayout|layoutDirection""&gt;
</code></pre>
"
"26096477","<p>the other way , here I have used ArrayList and Map, so its not  call json object row by row but after iteration of resultset finished :</p>

<pre><code> List&lt;Map&lt;String, String&gt;&gt; list = new ArrayList&lt;Map&lt;String, String&gt;&gt;();

  ResultSetMetaData rsMetaData = rs.getMetaData();  


      while(rs.next()){

              Map map = new HashMap();
              for (int i = 1; i &lt;= rsMetaData.getColumnCount(); i++) {
                 String key = rsMetaData.getColumnName(i);

                  String value = null;

               if (rsmd.getColumnType(i) == java.sql.Types.VARCHAR) {
                           value = rs.getString(key);
               } else if(rsmd.getColumnType(i)==java.sql.Types.BIGINT)                         
                             value = rs.getLong(key);
               }                  


                    map.put(key, value);
              }
              list.add(map);


    }


     json.put(list);    
</code></pre>
"
"26425568","<ul>
<li><code>public</code> : it is a access specifier that means it will be accessed by publically.</li>
<li><code>static</code> : it is access modifier that means when the java program is load then it will create the space in memory automatically.</li>
<li><code>void</code> : it is a return type i.e it does not return any value.</li>
<li><code>main()</code> : it is a method or a function name.</li>
<li><code>string args[]</code> : its a command line argument it is a collection of variables in the string format.</li>
</ul>
"
"26675697","<pre><code>import java.util.HashSet;

public class SplitString {
    public static void main(String[] args) {
        String st = new String(""New Delhi-Chennai-New York-Bangalore-Chennai-New Delhi-Chennai-New York"");
        StringBuffer stb = new StringBuffer();

        HashSet&lt;String&gt; hashset = new HashSet&lt;String&gt;();
        for (String a : st.split(""-""))
            hashset.add(a);

        Object[] str = (Object[]) hashset.toArray();

        for (int i = 0; i &lt; str.length; i++) {
            stb.append(str[i]);

            if (i &lt; str.length - 1)
                stb.append(""-"");

        }

        System.out.println(stb);
    }
}
</code></pre>
"
"14255584","<p>I think the code <code>new FileWriter(file, true)</code> will help you to append the data into already existing file.</p>
"
"26970461","<p>You can write the last object as null.
And then iterate till you get a null at the reading side.
e.g.</p>

<pre><code>while ((object = inputStream.readObject()) != null) {
  // ...
}
</code></pre>
"
"27061581","<p>First you need to include the JSTL tags :-</p>

<pre><code>&lt;%@ taglib prefix=""c"" uri=""http://java.sun.com/jsp/jstl/core"" %&gt;
&lt;%@ taglib prefix=""fmt"" uri=""http://java.sun.com/jsp/jstl/fmt"" %&gt; 
</code></pre>

<p>at the start of the page </p>

<p></p>
"
"27645309","<p>thank you</p>

<pre><code>public static final Pattern DIACRITICS_AND_FRIENDS = Pattern.compile(
                              ""[\\p{InCombiningDiacriticalMarks}\\p{IsLm}\\p{IsSk}]+"");

private static String stripDiacritics(String str) {
    str = Normalizer.normalize(str, Normalizer.Form.NFD);
    str = DIACRITICS_AND_FRIENDS.matcher(str).replaceAll("""");
    return str;
}
</code></pre>

<p>=> stripDiacritics(""Et Ça sera sa moitié."" );</p>
"
"27872708","<pre><code>import java.util.HashSet;
</code></pre>

<p>import java.util.LinkedList;
import java.util.Iterator;</p>

<p>public class DeletDuplicateNodeinLinkList {</p>

<pre><code>public static void main(String[] args) {

    LinkedList&lt;Integer&gt; myLL = new LinkedList&lt;Integer&gt;();

    myLL.add(1231);
    myLL.add(12);
    myLL.add(12313);
    myLL.add(123);
    myLL.add(12313);
    myLL.add(1);
    myLL.add(1243242);
    System.out.println(myLL);

    myLL = deleteDups(myLL);
    System.out.println(myLL);
}

private static LinkedList&lt;Integer&gt; deleteDups(LinkedList&lt;Integer&gt; myLL) {
    // TODO Auto-generated method stub

    HashSet&lt;Integer&gt; myHashSet = new HashSet&lt;Integer&gt;();
    Iterator&lt;Integer&gt; itr;
    itr = myLL.iterator();

    while (itr.hasNext()) {
        if (!myHashSet.add(itr.next())) {
            itr.remove();
        }

    }

    return myLL;
}
</code></pre>

<p>}</p>
"
"27876300","<p>Check:</p>

<pre><code>ActionBar actionbar=getActionBar();
actionbar.setTitle(""your text"");
</code></pre>
"
"27883565","<pre><code>DecimalFormat df = new DecimalFormat(""#.##"");
                String hour = JOptionPane.showInputDialog(""Please input your hourly salary: "");
                double hr = Double.parseDouble(hour);
                double dr = hr * 8;             
                double wr = hr * 40;
                double mr = hr * 160;
                double yr = mr * 12;

    JOptionPane.showMessageDialog(null, ""Yearly: "" + df.format(yr) + "" / "" + ""Monthly: ""
                    + df.format(mr) + "" / "" + ""Weekly: ""+ df.format(wr) + "" / "" + ""Hour: "" + df.format(hr),
                    ""Yearly Salary Calculator by the hour"", JOptionPane.OK_OPTION, icon);
</code></pre>
"
"28171126","<p>try this something like this for example:</p>

<pre><code>myTableModel = new DefaultTableModel();
myTableModel.setColumnIdentifiers(new Object[]{""ID"", ""Name""});
JTable myTable = new JTable(myTableModel);

// remember to save the references
TableColumn myTableColumn0 = guiLoteryNumbersTable.getColumnModel().getColumn(0);
TableColumn myTableColumn1 = guiLoteryNumbersTable.getColumnModel().getColumn(1);
//...

// remove temporary the column (""hide"")
myTable.getColumnModel().removeColumn(myTableColumn1);

// then you restore that column when you need it (""show"")
myTable.getColumnModel().addColumn(myTableColumn1);
</code></pre>

<p>That's the best way I know to hide a column.</p>
"
"28534479","<pre><code>public class Window{
    public static final int size=3;
    public static void main(String[] args){
       for (int p = 1; p &lt;= 2; p++) {
            for (int i = 1; i &lt;=2; i++) {
                System.out.print(""+"");
                for (int j = 1; j &lt;= size; j++) {
                    System.out.print(""="");
                }
            }
                System.out.print(""+"");
                System.out.println();
            for (int k = 1; k &lt;= size; k++) {
                for (int i = 1; i &lt;= 3; i++) {
                    System.out.print(""|"");
                    for (int j = 1; j &lt;= size; j++) {
                        System.out.print("" "");
                    }
                }
                System.out.println();
            }
        }
        for (int i = 1; i &lt;= 2; i++) {
            System.out.print(""+"");
            for (int j = 1; j &lt;= size; j++) {
                System.out.print(""="");
            }
        }
        System.out.print(""+"");
    }
}
</code></pre>
"
"28913716","<p>package generics;</p>

<pre><code>public class Box&lt;T&gt; {

      public T j,k;
      int l;
      float f;

      @SuppressWarnings(""unchecked"")
    public void add(T j,T k) {
        this.j = j;
        this.k=k;

        if(j.toString().contains("".""))
        {
              this.f=Float.parseFloat(j.toString())+Float.parseFloat(k.toString());


        } else{
        this.l=Integer.parseInt(j.toString())+Integer.parseInt(k.toString());
        }
      }

      public int getInt() {
        return l;
      }

      public float getFloat() {
            return f;
          }

      public static void main(String[] args) {
         Box&lt;Integer&gt; integerBox = new Box&lt;Integer&gt;();
         Box&lt;Float&gt; floatBox = new Box&lt;Float&gt;();

         integerBox.add(new Integer(10),new Integer(20));
         floatBox.add(new Float(2.2),new Float(3.3));

         System.out.printf(""Integer Value :%d\n\n"", integerBox.getInt());
         System.out.printf(""float Value :%f\n"", floatBox.getFloat());
      }
    }
</code></pre>
"
"28961488","<pre><code>int i = 10 + + 11 - - 12 + + 13 - - 14 + + 15;

System.out.println(i);
</code></pre>
"
"29362618","<pre><code>import java.util.*;

public class RemoveDuplicateWord {

    public static void main(String[] args) {
        String str = ""Hai hello Hai how hello are how you"";
        removeDupWord(str);
    }

    public static void removeDupWord(String input) {
        List&lt;String&gt; list = Arrays.asList(input.split("" ""));
        LinkedHashSet&lt;String&gt; lhs = new LinkedHashSet&lt;String&gt;(list);
        for(String s : lhs) {
            System.out.print(s+"" "");
        }                   
    }
}
</code></pre>
"
"29425563","<pre><code>public class NewClass extends JFrame    
{

     public NewClass()
    {

    Calendar cal=new GregorianCalendar();
    JPanel   p1=new JPanel();
    JPanel   p2=new JPanel();
    JPanel   p3=new JPanel();
    JPanel   p=new JPanel();

    BorderLayout layout=new BorderLayout();
    p1.setLayout(new FlowLayout(FlowLayout.LEFT));

    JLabel l1=new JLabel(""Sunday"");
    JLabel l2=new JLabel(""Monday"");
    JLabel l3=new JLabel(""Tuesday"");
    JLabel l4=new JLabel(""Wednsday"");
    JLabel l5=new JLabel(""Thursday"");
    JLabel l6=new JLabel(""Friday"");
    JLabel l7=new JLabel(""Saturday"");

    p1.add(l1);
    p1.add(l2);
    p1.add(l3);
    p1.add(l4);
    p1.add(l5);
    p1.add(l6);
    p1.add(l7);

    p1.setBorder(new LineBorder(Color.BLACK));

    int x=cal.get(Calendar.MONTH)+1;
    System.out.println(x);
    int y=cal.get(Calendar.DAY_OF_WEEK);
    System.out.println(y);

    p2.setLayout(new GridLayout(5,7));
    if(x==4||x==6||x==9||x==11)
    {
        int j=1;
        for(int i=0;i&lt;(7-(y-1));i++)
        {
            JLabel l=new JLabel("" "",JLabel.CENTER);
            l.setBorder(new LineBorder(Color.BLACK));
            p2.add(l);
            j++;
        }
    for(int i=1;i&lt;=30;i++)
    {

        JLabel l=new JLabel(""""+i,JLabel.CENTER);
        l.setBorder(new LineBorder(Color.BLACK));
        p2.add(l);
        j++;
    } 
    }


    p.setLayout(layout);
    p.add(p2,BorderLayout.CENTER);
    p.add(p1,BorderLayout.NORTH);
    add(p,BorderLayout.CENTER);

    JLabel l8=new JLabel(""""+(cal.get(Calendar.MONTH+1)+""/""+cal.get(Calendar.YEAR)));
    l8.setHorizontalTextPosition(JLabel.CENTER);
    p3.setLayout(new FlowLayout(FlowLayout.CENTER));
    p3.add(l8);
    add(p3,BorderLayout.NORTH);  
    add(p,BorderLayout.CENTER);
     }  
</code></pre>
"
"29586507","<pre><code>char c=evt.getKeyChar();
if(!(Character.isDigit(c)||
    (c==KeyEvent.VK_BACK_SPACE)||c==KeyEvent.VK_DELETE||evt.getKeyChar() == '.')){
//  evt.getKeyChar() == '.' does accept point when jtextfield accepts decimal number
  evt.consume();
  getToolkit().beep();
}
</code></pre>
"
"29726533","<pre><code>public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String satr=scanner.nextLine();
    String newString = """";
    for (int i = 0; i &lt; satr.length(); i++) {
        if (Character.isUpperCase(satr.charAt(i))) {
            newString+=Character.toLowerCase(satr.charAt(i));
        }else newString += Character.toUpperCase(satr.charAt(i));
    }
    System.out.println(newString);
}
</code></pre>
"
"14560172","<p>You can save the lines in a list (in my code a arraylist) and ""read"" the lines backwards from the arraylist:</p>

<pre><code>try
    {

        FileInputStream fstream = new FileInputStream(""\\file path"");
        DataInputStream in = new DataInputStream(fstream);
        BufferedReader br = new BufferedReader(new InputStreamReader(in));
        String line = """";
        ArrayList&lt;String&gt; lines = new ArrayList&lt;String&gt;();

        //Read lines and save in ArrayList 
        while (br.ready())
        {
            lines.add(br.readLine());
        }

        //Go backwards through the ArrayList
        for (int i = lines.size(); i &gt;= 0; i--)
        {
            line = lines.get(i);
        }
    }
    catch (Exception e)
    {
        e.printStackTrace();
    }
</code></pre>
"
"29938300","<p>Use this method,but be careful to make an object in your main.</p>

<p><code>public static void setName(Object obj){
        Class setClass = obj.getClass();
        String className = setClass.getName();
        System.out.println(className);
    }</code></p>
"
"30206472","<p>Here is a small trick with linear search: just pass in the node or its position whose previous node you are searching for:</p>

<pre><code>private MyNode findNode(int pos) {
//node will have pos=pos-1
        pos-- = 1; 
        MyNode prevNode = null;
        int count = 0;  
        MyNode p = first.next;  // first = head node, find it however you want.
//this is for circular linked list, you can use first!=last for singly linked list
        while (p != first) { 
            if (count == pos) {
                prevNode = p;
                break;
            }
            p = p.next;
            count++;
        }
        return prevNode;
    }
</code></pre>
"
"14596881","<p>You can trace your log by class type.</p>

<p>example1:</p>

<pre><code>public class Bar {
    Logger logger = Logger.getLogger(""com.foo.Bar"");
    ...
    logger.debug(""debug message"");
}
</code></pre>

<p>Maybe you can see below a log message.</p>

<pre><code>DEBUG: **com.foo.Bar** debug message
</code></pre>

<p>example2:</p>

<pre><code>public class Foo {
    Logger logger = Logger.getLogger(""com.foo.Foo"");
    ...
    logger.debug(""debug message"");
}
</code></pre>

<p>Maybe you can see below a log message.</p>

<pre><code>DEBUG: **com.foo.Foo** debug message
</code></pre>

<p>If you have a lot of java class and logger message, It's too difficult to find where log messages are from.</p>
"
"30222891","<p>Like this:</p>

<pre><code>String a =""hh1hhhhhhhh"";
char s = a.charAt(3);
</code></pre>
"
"30303240","<p>Removing the <strong>JRE file</strong> located in my <code>C:/Program Files(*86)/Java</code> folder , reopening the eclipse IDE resolved the issue.</p>

<p>I had Java JDK installed in my <code>C:/Program Files/Java</code> folder which was not detected earlier.</p>
"
"14618443","<p>Algorithm is quite simple .</p>

<p>You need a single even number should present in the array of integers .</p>

<p>Because multiple of even number with odd/even number results in a even number . So you can return true if there is an even number .</p>

<p>In java ,</p>

<pre><code>public static int  has_even_pair(int [ ] values,int n)  //method definition to find sum
{
      int i;
      for(i=0; i&lt; n; i++)
      {
          if (values[i] % 2 == 0 )
          {
               return 1;

           }

      }

      return 0 ;
 }
</code></pre>
"
"14730662","<p>Define an enum would be more readable:</p>

<pre><code>public Enum Doors {
    DOOR1
    ,DOOR2
    ,DOOR3
    ,DOOR4
    ,DOOR5
    ,DOOR6
    ,DOOR7
    ,DOOR8
}
</code></pre>

<p>However, you can manage with simple byte array and masking operations:</p>

<pre><code>byte[] doors = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07};
</code></pre>

<p>Then in order to check which permissions are set you do something like:</p>

<pre><code>(byte) b &amp; doors[i]; // 1 = 0...7
</code></pre>
"
"14789766","<p>You could use <a href=""http://docs.oracle.com/javase/6/docs/api/java/util/Date.html"" rel=""nofollow""><code>java.util.Date</code></a>. So your <code>Employee</code> class will look like this:</p>

<pre><code>public class Employee {
  private Date Birthday;
  public Employe(Date birthday) {}
}
</code></pre>

<p>This is the idea.</p>
"
"14789779","<p>Java provides the Date class available in java.util package, this class encapsulates the current date and time.</p>

<p>Also pass parameter of Date Of Birth in the constructor of Employee: </p>

<pre><code>import java.util.*;


public Employee(String name, int idNumber, String Gender, 
    int year, int month, int day, Date dob)
</code></pre>
"
"14856700","<p>if you are declaring it as private, you CANNOT access it outside the class context.</p>

<p>An option would be to expose public getters/setters to interact with your variable.</p>

<pre><code>public class MyClass {
    private int x;
    public int getX(){
        return x;
    }
    public void setX(int value){
        x = value;
    }
}
</code></pre>
"
"14863233","<p>What about this approach?</p>

<pre><code>trait RandomOrdering[T] extends Ordering[T]

object RandomOrdering {
  implicit def defaultOrdering[T] = new RandomOrdering[T] {
    def compare(x:T, y:T) = (Random nextInt 3) - 1
  }
}

def sample[A](items:List[A], sampleSize:Int)(implicit r:RandomOrdering[A]) =
  items.sorted take sampleSize
</code></pre>

<p>It might be less performant but it also allows you to inject a different <code>RandomOrdering</code>.</p>
"
"14875431","<p>I think what you really mean is that you are passing an <em>instance</em> of an Object to your <code>doStuff()</code> method, this Object then has a <code>doSomething()</code> method that you should be able to call. Unless you have an inheritance hierarchy, you would need to make your method take a parameter of type <code>Object</code> and cast to your specific <code>Object</code>.</p>

<pre><code>public void doStuff(Object o) {
  if(o instanceof Class1) {
     Class1 c1 = (Class1)o;
     c1.doSomething();
  } 
  else if(o instanceof Class2) {
     Class2 c2 = (Class2)o;
     c2.doSomething();
  }
  else {
     ....
  }
}
</code></pre>
"
"14979478","<p>Using the first method declaration will not allow you to add anything new to the list. For example this will not compile.</p>

<pre><code>public static void someMethod(List&lt;? extends Number&gt; numberList, Number number) {
    numberList.add(number);
}
</code></pre>

<p>while the second allows you to do this:</p>

<pre><code>public &lt;T extends Number&gt; static void someMethod(List&lt;T&gt; numberList, T number) {
    numberList.add(number);
}
</code></pre>
"
"15006815","<p>It may be that you wish to execute a DOS or unix command in the workflow of Java program execution...</p>

<pre><code>String command = ""cmd /c dir /s"";
String homeDir = ""C:\\WINDOWS"";
Process process = Runtime.getRuntime().exec(command + "" "" + homeDir);
</code></pre>

<p>And may be you wish to process the output...</p>

<pre><code>final InputStream in = process.getInputStream();
int ch;
while((ch = in.read()) != -1) {
   System.out.print((char)ch);
}
</code></pre>

<p>Close code with try, catch</p>
"
"15012121","<p>I think your code should be something like,</p>

<pre><code>rs.next();
            if ((user.equals(rs.getString(""username""))) &amp;&amp; (pass.equals(rs.getString(""password"")))) {
                JOptionPane.showMessageDialog(null, ""You are now logon!"");
            } 
</code></pre>
"
"15097045","<p>Make <code>rez</code> an attribute instead of a local variable. As your method is <code>static</code>, the attribute should be too. This means moving the definition outside the method.</p>

<p>public class CDlg {</p>

<pre><code>   static int rez;

   static int ShowConfirm(String caption, String msg, Context context) {
   ...
</code></pre>

<p>In the inner classes, you need to refer to the CDlg class</p>

<pre><code>   public void onClick(DialogInterface arg0, int arg1) {
        CDlg.rez = 1;
   }
</code></pre>

<p>As a side note, it is strange that you use an <code>static</code> method for this. One of the mistakes of the people new to Java/OOP is to abuse <code>static</code> code, that feels more like <code>C</code> was. Maybe you want to reconsider your code.</p>
"
"15102577","<p>You need to be using Java 7's try with resources or a try-finally block:</p>

<pre><code>try(stmt = HibernateSession.instance().connection().prepareStatement("""")) {


}
</code></pre>

<p>This warning will be generated on types that inherit from <code>AutoCloseable</code> that are not guaranteed to be closed.  (Or possible <code>Closeable</code>, I forget which).</p>

<p>Now that I see what you're asking, just write less complicated code.</p>

<pre><code>Foo f = null; // don't do this, but it's what you're doing
f = new Foo();
</code></pre>

<p>Is what you're doing, and you found one of several situations where you actually have to pay a penalty for this extraneous work.</p>

<p>Furthermore your <code>try/finally</code> should be clean.  <code>.close()</code> can't throw, why are you catching?</p>

<pre><code>try { // don't do this
    stmt.close();
}
catch(SQLException exc) {

}
</code></pre>

<p>Should generate an Eclipse warning telling you that you're catching something that doesn't throw.  That might even be a compile error, not sure, but sounds like you would benefit from playing with Eclipse > Preferences > Compiler and reviewing what warnings are intelligent.  If you don't understand a warning, google it and see if it would be helpful to you, don't just skip over it. (sort of like you did with this one).</p>
"
"15102594","<p>A leak is possible if an exception is thrown when you call <code>stmt.close()</code> in the <code>finally</code> block.</p>
"
"15102847","<p>The problem was that in your <code>finally</code> block an exception might potentially occur, which would prevent <code>stmt</code> from closing.</p>

<p>One workaround is that you can replace everything in the <code>finally</code> block with:</p>

<pre><code>JDBCUtilities.close(stmt);
</code></pre>

<p>See the <a href=""http://www.athenasource.org/docs/javadoc/org/athenasource/framework/unidbi/JDBCUtilities.html#close%28java.sql.Statement%29"" rel=""nofollow"">docs</a> for <code>JDBCUtilities.close</code>. As you can see, no exception will be thrown using this utility method so you don't need to worry about resource leak. One additional benefit is that the utility method handles the <code>null</code> case for <code>stmt</code> as well so we don't need to code it ourselves.</p>

<p>Actually, it is <a href=""http://www2.sys-con.com/itsg/virtualcd/java/archives/0504/ashmore/index.html"" rel=""nofollow"">good practice</a> to use <code>JDBCUtilities</code>.</p>
"
"15237191","<pre><code>&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    android:layout_width=""wrap_content""
    android:layout_height=""wrap_content""
    android:layout_margin=""10dp""
    android:gravity=""center_horizontal""&gt;
</code></pre>

<p>Does the job!</p>
"
"15262297","<p>Here's a sample snippet</p>

<pre><code>Color c = new Color(0,0,0,0);
Color d = new Color(0,0,0,0);

    if( c.equals(d)){
        System.out.println(""True"");
    } else {
        System.out.println(""False"");
    }
</code></pre>

<p>This will print <code>True</code>... Changing the color value will print <code>False</code>.</p>
"
"16299809","<p>you can just add 
""<code>&lt;packaging&gt;pom&lt;/packaging&gt;</code>"" 
in your pom.xml and then you should be able to add modules.</p>
"
"16339493","<pre><code>public void toArray() {
    int x = applicants.size();
    StringBuffer strBuffer = new StringBuffer();
    for(Object o:applicants){
        strBuffer.append(o);
    }
    int []x = new int[]{strBuffer.toString()};
}
</code></pre>

<p>I think it should work</p>
"
"16340013","<p>If you closely examine the stack trace, all the classes involved (in parsing HTTP text to Java request object) are from the framework and there is <strong>no user control over it</strong>. </p>

<p>Now the <strong>basic premise</strong> behind this is: The server will always assume that the data it received is <strong>always URL encoded</strong> and HENCE it will always try to decode. </p>

<p>If the decoding fails, that implies that the basic tenets of the HTTP protocol were not adhered to and hence rejects the request outrightly without giving user a chance to handle it.</p>

<p>So IMHO, you cannot handle this condition as the server is rightly handling it by itself. </p>

<p><strong>EDIT:</strong></p>

<p>One the solution proposed by @Ravi above <em>looks</em> like it solves the problem. I tried the same code but I could never catch the exception ! </p>

<p>Digging down deeper, it became clear why that exception (<code>java.io.CharConversionException</code>) could not be handled in any user defined code.</p>

<p>Though <code>java.io.CharConversionException</code>is thrown but its never propagated in the call hierarchy. Here is why,</p>

<p>In the stack trace   </p>

<pre><code>        at org.apache.tomcat.util.buf.UDecoder.convert(UDecoder.java:83)
        at org.apache.tomcat.util.buf.UDecoder.convert(UDecoder.java:49)
        at org.apache.tomcat.util.http.Parameters.urlDecode(Parameters.java:429)
        at org.apache.tomcat.util.http.Parameters.processParameters(Parameters.java:412)
</code></pre>

<p>Look at the <strong>source</strong> of the method <code>processParameters()</code> in class <code>org.apache.tomcat.util.http.Parameters</code> (Code taken from <a href=""http://grepcode.com/file/repository.springsource.com/org.apache.coyote/com.springsource.org.apache.coyote/6.0.18/org/apache/tomcat/util/http/Parameters.java#Parameters.processParameters%28byte%5B%5D,int,int,java.lang.String%29"" rel=""nofollow"">grepcode</a>)</p>

<pre><code>public void processParameters( byte bytes[], int start, int len, 
                                   String enc ) {
        int end=start+len;
        int pos=start;

        if( debug&gt;0 ) 
            log( ""Bytes: "" + new String( bytes, start, len ));

        do {
            boolean noEq=false;
            int valStart=-1;
            int valEnd=-1;

            int nameStart=pos;
            int nameEnd=ByteChunk.indexOf(bytes, nameStart, end, '=' );
            // Workaround for a&amp;b&amp;c encoding
            int nameEnd2=ByteChunk.indexOf(bytes, nameStart, end, '&amp;' );
            if( (nameEnd2!=-1 ) &amp;&amp;
                ( nameEnd==-1 || nameEnd &gt; nameEnd2) ) {
                nameEnd=nameEnd2;
                noEq=true;
                valStart=nameEnd;
                valEnd=nameEnd;
                if( debug&gt;0) log(""no equal "" + nameStart + "" "" + nameEnd + "" "" + new String(bytes, nameStart, nameEnd-nameStart) );
            }
            if( nameEnd== -1 ) 
                nameEnd=end;

            if( ! noEq ) {
                valStart= (nameEnd &lt; end) ? nameEnd+1 : end;
                valEnd=ByteChunk.indexOf(bytes, valStart, end, '&amp;');
                if( valEnd== -1 ) valEnd = (valStart &lt; end) ? end : valStart;
            }

            pos=valEnd+1;

            if( nameEnd&lt;=nameStart ) {
                log.warn(""Parameters: Invalid chunk ignored."");
                continue;
                // invalid chunk - it's better to ignore
            }
            tmpName.setBytes( bytes, nameStart, nameEnd-nameStart );
            tmpValue.setBytes( bytes, valStart, valEnd-valStart );

            try {
                addParam( urlDecode(tmpName, enc), urlDecode(tmpValue, enc) );
            } catch (IOException e) {
                // Exception during character decoding: skip parameter
                log.warn(""Parameters: Character decoding failed. "" + 
                         ""Parameter skipped."", e);
            }

            tmpName.recycle();
            tmpValue.recycle();

        } while( pos&lt;end );
    }
</code></pre>

<p>In the method, there is do-while loop for parsing all the request parameters. Look at the <strong>try-catch block</strong> at the end of loop in the method. There is a comment which says</p>

<pre><code>// Exception during character decoding: skip parameter
</code></pre>

<p>So even if the exception is thrown but its <strong>not propagated</strong>. Its logged as a warning message and parameter value is set to null. 
So it's clear that <strong>you will never be able to catch that exception</strong> (<code>java.io.CharConversionException</code>)</p>
"
"16372476","<p>public class Sample {</p>

<pre><code>/**
 * author CLRZ
 */
public static void main(String[] args) {
    int a; // variable
    Scanner in = new Scanner(System.in); // scans your input
    System.out.println(""Enter your number's choice:""); 
    int sem1 = in.nextInt(); // reads next integer
    if (sem1 == 1) // conditioned if your choice number is equal to 1
    System.out.println(""Hello World1""); // output wil be Hello World
    int b;

    System.out.println(""Enter your number's choice:"");
    int sem2 = in.nextInt(); 
    if (sem2 == 2)
    System.out.println(""Hello World2"");
    int c;

    System.out.println(""Enter your number's choice:"");
    int sem3 = in.nextInt(); 
    if (sem3 == 3)
    System.out.println(""Hello World3"");
}
</code></pre>

<p>}</p>
"
"16842119","<p>I know this question is quite old, but since TreeSet implements NavigableSet you have access to the subSet method which runs in constant time.</p>

<pre><code>subSet(k, k + 1).first();
</code></pre>

<p>The first() call takes log(n) time where n is the size of the original set. This does create some unnecessary objects which could be avoided with a more robust implementation of TreeSet, but it avoids using a third party library.</p>
"
"17559091","<p>Change:
<code>public boolean lf_ch=false;</code> to: <code>public static boolean lf_ch=false;</code>
You can access/change the value with: <code>tabsmain.lf_ch</code> </p>
"
"17681499","<p>I post my solution. I think that it could be improved but its working. </p>

<pre><code>    int A[] = { 0,1,3,-2,0,1,0,-3,2,3 };
    int P,Q,R;
    int maxdepth = -1;
    int depth = -1;

    for ( int i=0; i &lt; ( A.length -1 ); i++ ) {
        P=i;
        for (Q = P+1; Q &lt; A.length -1; Q++ ) {
            if (A[P] &lt;= A[Q] ) {
                continue;
            }
            for (R=Q+1; R &lt; A.length-1; R++) {
                if (A[R] &lt;= A[Q]) {
                    continue;
                } else {
                    if ( A[Q] &lt; A[P] &amp;&amp; A[R] &gt; A[Q]) {
                        depth = Math.min(A[P] - A[Q], A[R] - A[Q]);
                        System.out.println(""Depth of ("" + P + "","" + Q + "","" + R + "")="" + depth);
                        if ( maxdepth &lt; depth ) maxdepth = depth;
                    }
                }
            }
        }

    }
    System.out.println(""Maxdepth:"" + maxdepth);
</code></pre>
"
"18034702","<pre><code>public static TreeMap&lt;String, String&gt; sortMap(HashMap&lt;String, String&gt; passedMap, String byParam) {
    if(byParam.trim().toLowerCase().equalsIgnoreCase(""byValue"")) {
        // Altering the (key, value) -&gt; (value, key)
        HashMap&lt;String, String&gt; newMap =  new HashMap&lt;String, String&gt;();
        for (Map.Entry&lt;String, String&gt; entry : passedMap.entrySet()) {
            newMap.put(entry.getValue(), entry.getKey());
        }
        return new TreeMap&lt;String, String&gt;(newMap);
    }
    return new TreeMap&lt;String, String&gt;(passedMap);
}
</code></pre>
"
"18052381","<p>Crashing the application can be done using the OutOfMemoryError also.</p>

<pre><code>public class StringOutOfMemory {
    public static void main(String[] args) {
        int i = 0;
        StringBuilder s = new StringBuilder(""a"");
        while (true) {
            s.append(""ahgsdgjsdffsdfhsdgfsdfsdsfhdsgksdgkfgsdkfkdghfksdkfsdkfdkjfskdfkjsdfkdksdkdfjksjkhsdfjkfsdkjfsdhjkfsdjkfhdjkfkjsdfkjdsjkfd"");
            System.out.println(i++); 
        }
    }
}
</code></pre>

<p>Output:</p>

<pre><code>java.lang.OutOfMemoryError}}}
</code></pre>
"
"18679836","<pre><code>File file = new File(""newname.ext"");
if (!file.exists()) {
    InputStream link = (getClass().getResourceAsStream(""/pack/resources/filename.ext""));
    Files.copy(link, file.getAbsoluteFile().toPath());
}
</code></pre>
"
"18940064","<pre><code>    Why we do override clone() in cloning process?
    //clone() in Object class is protected
    package java.lang;


    protected native Object clone()
            throws CloneNotSupportedException;

    java.lang is default import in our java applications.

Note: If parent and sub class are both in same package then the methods in parent class are directly accessible. If they are in different package,then in subclass we have to override the parent class methods to use.

    Note:Object class is in java.lang package,we are using it in different package,so we have to override the clone() which is protected in Object class


first we will look into Protected method behavior.here is sample program to understand this
    //this class is in com.anusha.clonetrial
    package com.anusha.clonetrial;

    public class A {

        public A()
        {

        }
        protected void disp1()
        {
            System.out.println(""class a"");
        }
        protected void disp2()
        {
            System.out.println(""class a"");
        }
    }
    //below classes are in com.anusha.Test
    package com.anusha.Test;
    import com.anusha.clonetrial.A;


    class AA {


        protected void disp1()
        {
            System.out.println(""class aa"");
        }

        protected void disp2()
        {
            System.out.println(""class aa"");
        }
    }

    //class B derived from AA which is present in the same package
    class B extends AA
    {

        void show()
        {


            System.out.println(""class b"");
        }
    }

    //class C derived from A which is present in the different package

    class C extends A
    {

        @Override
        protected void disp1()
        {
            super.disp1();
        }
        void show()
        { 
            System.out.println(""class c"");
        }
    }

    package com.anusha.Test;




    public class CloneTest {


        public static void main(String[] args) {
            B b=new B();
            C c=new C();
            b.disp1();
            b.disp2();
            c.disp1();
            c.disp2();//gives error because it is not overridden.


        }

    }
</code></pre>
"
"18981872","<p>I get the same error. Here the problem which leads to this error message:</p>

<p>I create some objects which use the Logger before I configure the log4j:</p>

<pre><code>Logger.getLogger(Lang.class.getName()).debug(""Loading language: "" + filename);
</code></pre>

<p>Solution: 
Configure the log4j at the beginning in the main method:</p>

<pre><code>PropertyConfigurator.configure(xmlLog4JConfigFile); 
// or BasicConfigurator.configure(); if you dont have a config file
</code></pre>
"
"19265122","<p>Duplicate integer remove : this is the perfect answer 
/// Haris  ///</p>

<pre><code>public static void duplicateRemove(int[] arr) {
    int temp = 0;

    for (int i = 0; i &lt; arr.length; i++) {
        for (int j = 0; j &lt; arr.length; j++) {
            if (arr[i] &lt; arr[j]) {
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }

    int count;
    for (int j = 0; j &lt; arr.length;) {
        count = 1;
        for (int i = j + 1; i &lt; arr.length; i++) {
            if (arr[i] == arr[j]) {
                count++;
            } else
                break;

        }
        System.out.println(arr[j] + "" is :  "" + count);
        j += count;
    }

}
</code></pre>
"
"19426420","<p><strong>ARM - Automatic Resource Management(Introduced since Java 7)</strong></p>

<p>Take a very simple example</p>

<pre><code>static String readFirstLineFromFileWithFinallyBlock(String path)
                                                     throws IOException {
    BufferedReader br = new BufferedReader(new FileReader(path));
    try {
        return br.readLine();
    } finally {
        if (br != null) br.close();
    }
}
</code></pre>

<p>Now if <code>readLine()</code> function throws Exception and then even <code>close()</code> function [in finally block] throws exception then the later is given more priority and is thrown back to the calling function. In this case the <code>Exception thrown by the readLine() method is ignored/suppressed</code>. You can chain the  causing exception in your exception and rethrow your exception from finally block.</p>

<p>Since <code>java 7</code> functionality has been provided to retrieve suppressed Exceptions. You can call <code>public final java.lang.Throwable[] getSuppressed()</code> function on the catched throwable object to view the suppressed Exceptions.</p>

<p>For Eg.</p>

<pre><code>static String readFirstLineFromFileWithFinallyBlock(String path)
        throws Exception {
    try (BufferedReader br = new BufferedReader(new FileReader(path));) {
        return br.readLine();
    }
}
</code></pre>

<p>Now if <code>br.readLine();</code> line throws <code>Exception1</code> and then lets say <code>Exception2</code> is thrown while closing the resource [Imagine this happening in an implicit finally block that try-with-resource statement creates] then Exception1 suppresses Exception2.</p>

<p>Few points to note here - </p>

<ol>
<li>If try-with-resource block throws exception i.e while resource instantiation then try block will not execute and the same exception will be thrown.</li>
<li>If instantiation of resource is successful, try block throws an exception and exception is thrown while closing the resource then the exception thrown while closing resource is suppressed by the exception thrown from try block.</li>
<li>If you provide explicit finally block and exception is thrown from that block it will suppress all other exception. (This explicit finally block executes after resources are closed)</li>
</ol>

<p>I have compiled most of the possible scenarios with code snippets and output in following post. </p>

<p><a href=""http://opensourceforgeeks.blogspot.in/2014/12/suppressed-exceptions-in-java-7.html"" rel=""nofollow"">Suppressed exceptions in java 7</a></p>

<p>Hope that helps.</p>
"
"19461587","<p>Yep..</p>

<p>The host is unreachable, just like that. However, if everything is oK (well configured node/network, good wifi signal,..) You can force the process using <code>ping serverIP</code> (from phone) or <code>ping smartphone</code> (from server).</p>

<p>The ping (ICMP packets) will force the router to speedup the new routing (way to reach the host)... send lot of pings (-n option) eg: <code>ping google.com -n 1000</code> (1000 consecutive pings)</p>
"
"20414939","<pre><code>//diagonal
if(board[0][0].equals(board[1][1]) &amp;&amp; board[1][1].equals(board[2][2]) || board[2][0].equals(board[1][1]) &amp;&amp; board[1][1].equals(board[0][2]))
       { return true;} // &lt;&lt;&lt;&lt;&lt;you forgot the {} ^_^
    return false;
}
</code></pre>
"
"20707670","<p>It might seem silly , but if u wanna try utility function </p>

<pre><code>System.out.println(Integer.parseInt((Integer.toString(i,2))));
</code></pre>

<p>there must be some  utility method to do it directly, I cant remember.</p>
"
"20876122","<p>to reference a <em>public</em> method in another class, call </p>

<pre><code>Class.Method();
</code></pre>
"
"21203029","<pre><code> public int myfunc(int low, int high, int test) {   
    int count = 0;
    if(low % test == 0)
       count++;
    count +=(high-low)/test;
    return count;
 }
</code></pre>
"
"21311839","<p>Java byte is signed from -128 to 127, if u want to get the representation from 0 to 255 i use this 2 functions</p>

<pre><code>public static byte fromIntToByte(String value) throws Exception {
        return fromIntToByte(Integer.parseInt(value));
    }

    public static byte fromIntToByte(int value) throws Exception {
        String stringByte = """";
        if (value &lt; 0 &amp;&amp; value &gt; 255) {
            throw new Exception(""Must be from 0&lt;=value&lt;=255"");
        }
        if (value &lt;= 127) {
            for (int i = 0; i &lt; 8; i++) {
                stringByte = String.valueOf(value % 2) + stringByte;
                value = value / 2;
            }
        } else {
            value = value / 2;
            for (int i = 0; i &lt; 7; i++) {
                stringByte = String.valueOf(value % 2) + stringByte;
                value = value / 2;
            }
            stringByte = ""-"" + stringByte;
        }
        System.out.println(stringByte);
        byte b = Byte.parseByte(stringByte, 2);
        return b;
    }
</code></pre>
"
"21586283","<pre><code>import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map.Entry;

public class CollectionsSort {

    /**
     * @param args
     */`enter code here`
    public static void main(String[] args) {
        // TODO Auto-generated method stub

        CollectionsSort colleciotns = new CollectionsSort();

        List&lt;combine&gt; list = new ArrayList&lt;combine&gt;();
        HashMap&lt;String, Integer&gt; h = new HashMap&lt;String, Integer&gt;();
        h.put(""nayanana"", 10);
        h.put(""lohith"", 5);

        for (Entry&lt;String, Integer&gt; value : h.entrySet()) {
            combine a = colleciotns.new combine(value.getValue(),
                    value.getKey());
            list.add(a);
        }

        Collections.sort(list);
        for (int i = 0; i &lt; list.size(); i++) {
            System.out.println(list.get(i));
        }
    }

    public class combine implements Comparable&lt;combine&gt; {

        public int value;
        public String key;

        public combine(int value, String key) {
            this.value = value;
            this.key = key;
        }

        @Override
        public int compareTo(combine arg0) {
            // TODO Auto-generated method stub
            return this.value &gt; arg0.value ? 1 : this.value &lt; arg0.value ? -1
                    : 0;
        }

        public String toString() {
            return this.value + "" "" + this.key;
        }
    }

}
</code></pre>
"
"22931446","<pre><code>public class Class1 {
private String extref=""MY"";

public String getExtref() {
    return extref;
}

public String setExtref(String extref) {
    return this.extref = extref;
}

public static void main(String[] args) {

    Class1 obj=new Class1();
    String value=obj.setExtref(""AFF"");
    int returnedValue=getMethod(value);     
    System.out.println(returnedValue);
}

/**
 * @param value
 * @return
 */
private static int getMethod(String value) {
      HashMap&lt;Integer, String&gt; hashmap1 = new HashMap&lt;Integer, String&gt;();
        hashmap1.put(1,""MY"");
        hashmap1.put(2,""AFF"");

        if (hashmap1.containsValue(value))
        {
            for (Map.Entry&lt;Integer,String&gt; e : hashmap1.entrySet()) {
                Integer key = e.getKey();
                Object value2 = e.getValue();
                if ((value2.toString()).equalsIgnoreCase(value))
                {
                    return key;
                }
            }
        }   
        return 0;

}
}
</code></pre>
"
"23571531","<p>This should work :</p>

<pre><code>&lt;property name=""connection.url""&gt;jdbc:oracle:thin:@//localhost:1521/ORCL&lt;/property&gt;
</code></pre>
"
"23580431","<p>Identifiers are names of classes, interfaces, methods, variables and packages.</p>

<p>Identifiers MUST start with </p>

<pre><code> A - Z or a - z
 $ or _
</code></pre>

<p>Can also contain </p>

<pre><code>  0 - 9
</code></pre>

<p>Cannot be </p>

<pre><code>  null
  true or false
  a keyword
</code></pre>

<p>No limits on number of characters</p>

<p>(I am not talking about additional Unicode characters)</p>

<p><a href=""http://choosejava.blogspot.in/2014/04/identifiers-in-java.html"" rel=""nofollow"">Click here</a> for more</p>
"
"23750319","<p>There is one-line <a href=""https://code.google.com/p/guava-libraries/"" rel=""nofollow"">guava</a> solution:</p>

<pre><code>Lists.charactersOf(""hello"");
</code></pre>

<p>You can pass resulting <code>ImmutableList</code> to constructor of <code>ArrayList</code> but may I ask why do you need exactly ArrayList?</p>
"
"23752305","<p>you can create a List[] and initialize them by for loop. it compiles without errors:</p>

<pre><code>List&lt;e&gt;[] l;
for(int i = 0; i &lt; l.length; i++){
    l[i] = new ArrayList&lt;e&gt;();
}
</code></pre>

<p>it works with arrayList[] l as well.</p>
"
"24061403","<p>The complete code here</p>

<pre><code>import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
public class VBTest {
    public static void main(String[] args) {
         try {
             String line;
             OutputStream stdin = null;
             InputStream stderr = null;
             InputStream stdout = null;
             Process process =  Runtime.getRuntime().exec( ""cscript E:/Send_Mail_updated.vbs"" );
             stdin = process.getOutputStream ();
             stderr = process.getErrorStream ();
             stdout = process.getInputStream ();

              // ""write"" the parms into stdin
              line = ""param1"" + ""\n"";
              stdin.write(line.getBytes() );
              stdin.flush();

              line = ""param2"" + ""\n"";
              stdin.write(line.getBytes() );
              stdin.flush();

              line = ""param3"" + ""\n"";
              stdin.write(line.getBytes() );
              stdin.flush();

              stdin.close();

              // clean up if any output in stdout
              BufferedReader brCleanUp = new BufferedReader (new InputStreamReader (stdout));
              while ((line = brCleanUp.readLine ()) != null) {
                System.out.println (""[Stdout] "" + line);
              }
              brCleanUp.close();

              // clean up if any output in stderr
              brCleanUp =
                new BufferedReader (new InputStreamReader (stderr));
              while ((line = brCleanUp.readLine ()) != null) {
                System.out.println (""[Stderr] "" + line);
              }
              brCleanUp.close();
           }
           catch( IOException e ) {
              System.out.println(e);
              //System.exit(0);
           }
    }
}
</code></pre>
"
"24632558","<p>If you observe the fibonacci sequence, every third number is a even number:</p>

<p>1,1,<strong>2</strong>,3,5,<strong>8</strong>,13,21,<strong>34</strong></p>

<p>So an array of length 3 will suffice. We can generate the next 3 fibonacci numbers and store it(overwrite) in the array, the sum of all the third elements(even fib number) in the array will give us the sum of all even numbers in the fibonacci sequence.</p>

<p>Code:</p>

<pre><code>public class Prob2 {
    public static int sumOfEvenFibonacci(int limit){
        int fibonacci[] = {1, 1, 2}; 
        int j, sum = 2;

        while(fibonacci[2] &lt; limit){
            for(j = 0; j &lt; 3; j++){
                fibonacci[j] = fibonacci[(j+1)%3] + fibonacci[(j+2)%3];
            }
            sum += fibonacci[2];
        }
        return sum - fibonacci[2];
    }
}
</code></pre>

<p>Trivial test cases:</p>

<pre><code>public class TestProb2 {

@Test
public void testSumOfMultiples(){
    int actual = Prob2.sumOfEvenFibonacci(15);
    assertEquals(10, actual);

    actual = Prob2.sumOfEvenFibonacci(50);
    assertEquals(44, actual);

    actual = Prob2.sumOfEvenFibonacci(200);
    assertEquals(188, actual);

    actual = Prob2.sumOfEvenFibonacci(4000000);
    assertEquals(4613732, actual);
}
</code></pre>

<p>}</p>

<p>P.S: This answer may not exactly answer the OP's question but wanted to share the technique out of joy of finding it. Hope it helps others who land here looking for a solution.</p>
"
"24794704","<p>Here’s an example defines a SimpleDateFormat object as a static field. When two or more threads access “someMethod” concurrently with different dates, they can mess with each other’s results.</p>

<pre><code>    public class SimpleDateFormatExample {
         private static final SimpleDateFormat simpleFormat = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss.SSS"");

         public String someMethod(Date date) {
            return simpleFormat.format(date);
         }
    }
</code></pre>

<p>You can create a service like below and use jmeter to simulate concurrent users using the same SimpleDateFormat object formatting different dates and their results will be messed up.</p>

<pre><code>public class FormattedTimeHandler extends AbstractHandler {

private static final String OUTPUT_TIME_FORMAT = ""yyyy-MM-dd HH:mm:ss.SSS"";
private static final String INPUT_TIME_FORMAT = ""yyyy-MM-ddHH:mm:ss"";
private static final SimpleDateFormat simpleFormat = new SimpleDateFormat(OUTPUT_TIME_FORMAT);
// apache commons lang3 FastDateFormat is threadsafe
private static final FastDateFormat fastFormat = FastDateFormat.getInstance(OUTPUT_TIME_FORMAT);

public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response)
        throws IOException, ServletException {

    response.setContentType(""text/html;charset=utf-8"");
    response.setStatus(HttpServletResponse.SC_OK);
    baseRequest.setHandled(true);

    final String inputTime = request.getParameter(""time"");
    Date date = LocalDateTime.parse(inputTime, DateTimeFormat.forPattern(INPUT_TIME_FORMAT)).toDate();

    final String method = request.getParameter(""method"");
    if (""SimpleDateFormat"".equalsIgnoreCase(method)) {
        // use SimpleDateFormat as a static constant field, not thread safe
        response.getWriter().println(simpleFormat.format(date));
    } else if (""FastDateFormat"".equalsIgnoreCase(method)) {
        // use apache commons lang3 FastDateFormat, thread safe
        response.getWriter().println(fastFormat.format(date));
    } else {
        // create new SimpleDateFormat instance when formatting date, thread safe
        response.getWriter().println(new SimpleDateFormat(OUTPUT_TIME_FORMAT).format(date));
    }
}

public static void main(String[] args) throws Exception {
    // embedded jetty configuration, running on port 8090. change it as needed.
    Server server = new Server(8090);
    server.setHandler(new FormattedTimeHandler());

    server.start();
    server.join();
}
</code></pre>

<p>}</p>

<p>The code and jmeter script can be downloaded <a href=""http://www.luyue.org/simpledateformat-thread-safety/"" rel=""nofollow"">here</a> .</p>
"
"24841298","<p>I like the JTextArea approach mentioned above, because it resizes nicely at SOUTH in a BorderLayout panel (as long as the CENTER component can take up the slack if the number of lines in the JTextArea changes).</p>

<p>However, in Nimbus L&amp;F there is a catch in setting the JTextArea's background colour.  It seems that Nimbus uses magic colours (extended class of java.awt.Color) that go transparent in JTextArea. So if you are copying the background colour from a JPanel to the JText area you need to convert the Color to ARGB and back to Color.  The following code works for me in all the L&amp;Fs in my JRE (Nimbus, CDE Motif, Metal, Mac OS X):</p>

<pre><code>    JTextArea ta = new JTextArea(text);
    ta.setEditable(false);
    ta.setLineWrap(true);
    ta.setWrapStyleWord(true);
    JLabel lb = new JLabel();
    Font f = lb.getFont();
    ta.setFont(f.deriveFont(f.getSize2D() * 0.9f));
    ta.setBorder(lb.getBorder());
    ta.setBackground(new Color(lb.getBackground().getRGB(), true));
    ta.setForeground(new Color(lb.getForeground().getRGB(), true));
    ta.setOpaque(lb.isOpaque());
</code></pre>

<p>I made the font a bit smaller.  Of course you can keep JLabel's font size if you want.</p>
"
"24866099","<pre><code>public static void main(String[] args) {
String str=""Prashant"";
int len=str.length();
char []c=new char[len];
for(int j=len-1,i=0;j&gt;=0 ;j--,i++){
    c[i]=str.charAt(j);
}
str=String.copyValueOf(c);
System.out.println(str);
}
</code></pre>
"
"24904022","<pre><code>public boolean isEmpty(){
    if (head == null) return true;
    else return false ;
}
</code></pre>
"
"25503147","<pre><code>public class listPrimes {
public static void main(String[] args) {
    printPrimes(1000);

}

static void printPrimes(int max) 
{

    for(int k=2;k&lt;=max;k++)
    { 
        int counter=0;
        for(int i=1;i&lt;=k;i++)
        {
            if((k%i)==0)
            {
                counter++;
            }
        }
        if(counter==2)
        {
            System.out.println(k+""is prime"");
        }
    }
}
</code></pre>

<p>}</p>
"
"26154808","<pre><code>Complete code :
public class Overloading {
public static void show(int i) {
    System.out.println(""int:""+i);
}
  public static void show(Integer i){
     System.out.println(""Integer&gt;&gt;""+i);
}
public static void show(long i){
    System.out.println(""long&gt;&gt;""+i);
}
public static void show(Long i){
    System.out.println(""Long&gt;&gt;""+i);
}
public static void show(int... i){
    System.out.println(""int...&gt;&gt;""+i);
}
public static void show(Integer... i){
    System.out.println(""Integer...&gt;&gt;""+i);
}
public static void show(Long... i){
    System.out.println(""Long...&gt;&gt;""+i);
}
public static void show(Object i){
    System.out.println(""Object&gt;&gt;""+i);
}
public static void main(String[] args) {
    show(1);
    show(1l);

}
}
</code></pre>
"
"26705760","<pre><code>int[] A =  new int[] {0, 1, 3, -2, 0, 1, 0, -3, 2, 3 };
        int P,Q;
        boolean first_time = true;
        int depth = -1;

        for ( P=0; P &lt; ( A.length -1 ); P++ ) 
        {
           if(A[P] &gt; A[P+1])
           {
               for(Q =P+1; Q &lt;( A.length -1 ); Q++)
               {
                   if(A[Q-1] &gt; A[Q])
                   {
                       if(A[Q] &lt; A[Q+1])
                       {
                            int temp_depth = Math.min(A[P] - A[Q], A[Q+1] - A[Q]);

                            if(first_time){ depth = temp_depth; first_time = false; }

                            if ( depth &lt; temp_depth ) depth = temp_depth;

                            System.out.println(""Depth of ("" + P + "","" + Q + "","" + (Q+1) + "")="" + depth);

                            break;
                       }
                   }
               }
           }
        }
        System.out.println(""Depth:"" + depth);
</code></pre>
"
"26853171","<p>For ArrayList the following works:</p>

<pre><code>ArrayList&lt;Foo&gt; list = new ArrayList&lt;Foo&gt;();

//... add values

Foo[] resultArray = new Foo[list.size()];
resultArray = list.toArray(resultArray);
</code></pre>
"
"26952949","<p>Look this code.....</p>

<pre><code>public int[] getRandomNonrepeat(int iMin, int iMax){
    int iSize = iMax - iMin + 1;
    int[] random = new int[iSize];
    int iLoopRepetion=0;
    Random rand = new Random();
    for(int i=0;i&lt;iSize;i++){
        random[i]=rand.nextInt(iSize)+1;
        for(iLoopRepetion=0;iLoopRepetion&lt;i;iLoopRepetion++)
            if(random[i]==random[iLoopRepetion])
                break;
        if(iLoopRepetion!=(i)&amp;&amp;iLoopRepetion!=iSize-1)
            i--;
    }
    return random;
}
</code></pre>
"
"27603966","<p>As explained earlier there are 2 approaches </p>

<p>First one is to just add this line to your main method:</p>

<pre><code>BasicConfigurator.configure();
</code></pre>

<p>Second approach is to add this standard <strong>log4j.properties</strong> file to your classpath:</p>

<p>While taking second approach you need to make sure you initialize the file properly,
Eg.</p>

<pre><code>Properties props = new Properties();
props.load(new FileInputStream(""log4j property file path""));
props.setProperty(""log4j.appender.File.File"", ""Folder where you want to store log files/"" + ""File Name"");
</code></pre>

<p>Make sure you create required folder to store log files.</p>
"
"27797969","<p>Use the following code:</p>

<pre><code>String xyz=null;
system.out.println(xyz);
</code></pre>
"
"27868669","<p>Can't I do this </p>

<p><code>int randx = (int)(Math.random() * 10) + 1;</code> </p>

<p>for range from 1 - 10?? </p>

<p>Seems to be working OK.</p>
"
"28813276","<pre><code>import org.springframework.test.util.ReflectionTestUtils;

@RunWith(MockitoJUnitRunner.class)
public CustomServiceTest{

@InjectMock
private CustomServiceImpl customService;

@Mock
private DataService dataService;

@Before
public void setup() {
    ReflectionTestUtils.setField(customService, ""url"", ""http://someurl"");
}    
...
}
</code></pre>
"
"29163426","<pre><code>z=z++;
</code></pre>

<p>This means first assign the value of z (which is in right position) to the z (which in left position), then do the increment in right z (which is of no use).</p>
"
"29207094","<pre><code>    public class Prime 
    {

        void dispaly()
        {
            for(int i=1;i&lt;100; i++)

            {
                boolean isPrimeNumber = true;

                for(int j=2; j&lt;i; j++)
                {

                    if(i%j==0) 
                    {
                    isPrimeNumber=false;
                    break;
                    }

                }



            if(isPrimeNumber)
            {

                System.out.print(i + "" "");

            }


        }


        }

        void dispaly1()
        {
            System.out.print(""\n"");

            for(int i=1;i&lt;100; i++)

            {


                for(int j=2; j&lt;i; j++)
                {

                    if(i%j==0) 
                    {


                    System.out.print(i + "" "");
                    break;

                    }

                }




            }


        }

        public static void main(String[] args)
        {
            Prime p= new Prime();
            System.out.print(""The Prime Numbers are : "");
            System.out.print(""\n"");
            p.dispaly();
            System.out.print(""\n"");
            System.out.print(""The Composite Numbers are : "");
            p.dispaly1();

        }
    }
</code></pre>
"
"29511857","<pre><code>public class Student implements Comparable&lt;Student&gt;{

    public String studentName;

    public Student(String name,DayInWeek weekDay){
        this.studentName = name;
        this.studentDays = weekDay;
    }

    public enum DayInWeek {
        SATURDAY,SUNDAY, MONDAY,TUESDAY, WEDNESDAY,THURSHDAY,FRIDAY
    }
    public DayInWeek studentDays;

    @Override
    public int compareTo(Student s1) {
        if(s1.studentDays.ordinal() &lt; this.studentDays.ordinal())
            return 1;
        else if(s1.studentDays.ordinal() &gt; this.studentDays.ordinal())
            return -1;
        else
            return 1;
    }
}
</code></pre>
"
"29700559","<pre><code>//clear all the columns from the table

while (Table.getColumns().size()!=0)
{
    Table.getColumns().remove(0);
}
//clear  all rows

Table.setItems(FXCollections.observableArrayList());
</code></pre>
"
"29903448","<pre><code>qlist=dao.getdistinctquestion();
            System.out.println(qlist);
            List&lt;QuestionMaster&gt; alist = new ArrayList&lt;QuestionMaster&gt;();
            int i=1, c=0;  String sub="""";
            for( QuestionMaster qq:qlist){
                System.out.println(""element:""+qq.getSubject());
                if(i==1){
                    c=1;   // sub = qq.getSubject();
                }
                else
                if (qq.getSubject().equals(sub)==false){
                    QuestionMaster ss = new QuestionMaster();
                    ss.setSubject(sub);
                    ss.setTag(""""+c);
                    alist.add(ss);
                    c=1;
                }
                else
                    c++;
                sub=qq.getSubject();
                i++;
            }
            QuestionMaster ss = new QuestionMaster();
                ss.setSubject(sub);
                ss.setTag(""""+c);
                alist.add(ss);


            qlist=alist;
</code></pre>

<p>======================================================================</p>

<pre><code>for(Object im:list){
            Object[] a=(Object[]) im;
            System.out.println(""subject =""+a[0]+""total questions =""+a[1]);

        }
</code></pre>
"
"30096020","<pre><code>//My own binary converter method
public int baseTwo(int number){
    int counter=0; //keeps the digits place
    int remainder = 0; //keeps binary number form 
    while(number&gt;=1){
        remainder += (number%2)*(Math.pow(10, counter));
        counter+=1;
        number = number/2;
    }
    return remainder;
}
</code></pre>

<blockquote>
  <p>This is how I solved the question converting decimal number to binary number.</p>
</blockquote>
"
"30200361","<p>Check this </p>

<pre><code>public class RandomNumbers {

    public static void main(String[] args) {
        // TODO Auto-generated method stub
        int n = 5;
        int A[] = uniqueRandomArray(n);
        for(int i = 0; i&lt;n; i++){
            System.out.println(A[i]);
        }
    }
    public static int[] uniqueRandomArray(int n){
        int [] A = new int[n];
        for(int i = 0; i&lt; A.length; ){
            if(i == A.length){
                break;
            }
            int b = (int)(Math.random() *n) + 1;
            if(f(A,b) == false){
                A[i++] = b;
            } 
        }
        return A;
    }
    public static boolean f(int[] A, int n){
        for(int i=0; i&lt;A.length; i++){
            if(A[i] == n){
                return true;
            }
        }
        return false;
    }
}
</code></pre>
"
"30218490","<p>for mac user .
java 8  should  add</p>

<pre><code>export JAVA_HOME=`/usr/libexec/java_home -v 1.8`
# JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_05.jdk/Contents/Home
</code></pre>

<p>java 6 :</p>

<pre><code>export JAVA_HOME=`/usr/libexec/java_home -v 1.6`
# JAVA_HOME=/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home
</code></pre>

<p>ref :<a href=""http://qiita.com/seri_k/items/e978c1339ce51f13e297"" rel=""nofollow"">http://qiita.com/seri_k/items/e978c1339ce51f13e297</a></p>
"
"12285910","<p>This is an anonymous class and you are redefining/overriding <code>run</code>. Are you using the passed-in <code>Runnable</code> inside your <code>run</code>? No you don't. So the question is, why did you expect it to print <code>Cat</code>?</p>

<pre><code> new Thread(r) {
  public void run() {
    System.out.print(""Dog"");
  }
};
</code></pre>
"
"12323636","<p>Using Jon Skeet's answer of <a href=""http://stackoverflow.com/questions/599161/best-way-to-convert-an-arraylist-to-a-string"">how to convert a List to a String</a> (using Guava), another option would be to convert the 2 lists to 2 strings and then compare them using <code>equals</code>.  No looping.</p>
"
"13252400","<p>You should store the values you get from <code>s.nextInt();</code>, this can be achieved by :</p>

<pre><code>int j = 0;
for (int i : a){
      System.out.println(""Enter number : "");
      a[j++]=s.nextInt();

}
</code></pre>

<p>This should work.</p>
"
"13290782","<p>Using your code try:</p>

<pre><code>for (int[] is : set) {
   System.out.printf(""Sorted Elements: %d "", is[0]);
}
</code></pre>

<p>but you still need to sort it, as mentioned in previous post</p>
"
"13327696","<p>From <a href=""http://en.wikipedia.org/wiki/RC_time_constant"" rel=""nofollow"">wikipedia's RC time constant entry</a>: <em>Cutoff frequency</em> - The time constant  is related to the cutoff frequency fc, an alternative parameter of the RC circuit</p>

<pre><code>tau = 1 / (2π * f)
</code></pre>

<p>Why 2π? From <a href=""http://en.wikipedia.org/wiki/Time_constant"" rel=""nofollow"">wikipedia's time constant entry</a></p>

<pre><code>ω = 2π * f is the frequency in radians per second.
</code></pre>

<p>From the <a href=""http://en.wikipedia.org/wiki/Time_constant"" rel=""nofollow"">same entry</a>, Tau is the equivalent of RC and is the rise time of the system. A low rise time means that higher frequency input will not excite the system. It is easy to image then that it is connected to the low pass filter's cutoff frequency. Ultimately it controls how much of the feedback signal is mixed in with the new input signal.</p>

<p>In my 2nd order low pass filter, I use the following for alpha.</p>

<pre><code>α = 1 / (T * tau)
</code></pre>

<p>In my audio application the 2nd order filter is two single order filters chained, and I calculate the filter output like this. <code>filter1Out</code> and <code>filter2out</code> are the current values of the filters and this is the update after receiving <code>input</code>.</p>

<pre><code>filter1Out = filter1Out + (alpha * (input - filter1Out));
filter2Out = filter2Out + (alpha * (filter1Out - filter2Out));
</code></pre>

<p>To determine what you want your cutoff frequency to be with the Android compass, I would at first not implement any filtering and try to use the data as provided. The cutoff really depends on what you are doing with the signal. Are you smoothing it for on screen animations? Are you smoothing it for path tracking? Is there noise in the signal that you want to reject? Each could need a different setting. If the unfiltered signal changes too often then figure out how often you want it to change and use that as your starting point for the filter cutoff.</p>

<p>I hope this helps. The derivation of the DSP math is beyond my skills, but I've implemented low pass filters for audio applications a few times.</p>
"
"13349484","<p>If a regex solution is <strong>not</strong> mandatory, the problem can be solved with a split, a list/set and a <em>contains</em> check, such as is your current code. Here is my own version of it:</p>

<pre><code>public static void main(String[] args) {
  String[] tests = {
    ""11,22,33"", //valid.
    ""12,23,34"", //valid.
    ""11,11,22"", //not valid.
    ""12,12,23"" //not valid.
  };

  for (String s : tests) {
    System.out.println(isValid(s));
  }
}

public static boolean isValid(String source) {
  Set&lt;String&gt; set = new HashSet&lt;String&gt;();
  for (String sub : source.split("","")) {
    if (!set.add(sub)) {
      return false;
    }
  }
  return true;
}
</code></pre>

<hr>

<p>If a regex solution is mandatory, the answer will depend on your exact format. Which you have not specified clearly.</p>

<p>By that, I mean that your regex will have to be very tightened around your format, otherwise it won't work. Other answers already cover exemplifying some possibilities for a 2-digit sub-range length as is your example. But, as stated, your format is not really crystal-clear as being that outside the sampling scope.</p>

<p>For an example different from the other answers, consider the assumption that validity is determined by different ranges of the same number. Most codes answered will not match in case the sub-ranges are of different sizes. For example, <code>11,111,22</code> would <strong>not</strong> match.</p>

<p>For this specific example, here is a possible regex solution:</p>

<pre><code>String matcher = "".*?(\\d+)(,\\1).*"";
String t1 = ""111,222.333"";
String t2 = ""111,111,222"";
String t3 = ""11,1111,222"";
String t4 = ""111,222,111"";
System.out.println(t1.matches(matcher)); //false
System.out.println(t2.matches(matcher)); //true
System.out.println(t3.matches(matcher)); //true
System.out.println(t4.matches(matcher)); //false
</code></pre>

<p>Also, it's not clear whether a non-consecutive situation such as <code>11,22,11</code> would be <em>""ok""</em> or not. I'm assuming it is <strong>not</strong>. But I couldn't achieve a regex-only solution for that yet.</p>

<hr>

<p>As should be clear by most answers so far, a regex-only solution requires a regex so specific it can hardly be called <em>easily-maintainable</em>, as any change to the data-source's format is probably going to demand changes to the regex.</p>

<p>As such, a solution that actually uses code other than regex, such as that you already have, or similar ones such as mine, is probably best.</p>
"
"13355360","<p>You are correct, in that it is not safe.  However, you can simply synchronize on any Object in scope, and remove ""synchronized"" from the method definition</p>

<pre><code>public class MyThread {
  private Object lock = new Object();
  private int counter;

  protected void threadMetod() {
    synchronized (lock) {
      counter++;
    }
  }

  public void otherReset() {
    synchronized (lock) {
      counter = 0;
    }
  }
}
</code></pre>
"
"13378232","<p>The switch/case statement inside of a for loop is fine, the problem is that switch isn't a function call. Try something like this:</p>

<pre><code>    string obj;
    switch (n){

    case 1 : obj=""thumb""; break;
    case 2 : obj=""show""; break;
    //Etc
    }


    }
    println(""This old man, he played "" + n);
    println(""He played knick-knack on my"" + obj);
    println(""With a knick-knack, paddy-whack,"");
    println(""Give your dog a bone"");
    println(""This old man came roiling home"");
</code></pre>
"
"13436619","<p>could you parse the entire sentence, and your delimiter would be a full stop. then from the example above you would essentially have 2 strings; ""The sun rose"", and "" plants started to grow"", you could then get the second character of each one, (taking the space after the full stop to be the first character) and capitalize that. </p>

<pre><code>public class mainClass {

public static void main(String[] args) {

    String phrase = "" The sun rose. plants started to grow."";
    String delims = ""\\.""; //full stop as delimiter
    String[] tokens = phrase.split(delims);

    String capitalizedLetter;
    String word;
    String capitalizedWord;

    for(String sentence: tokens)
    {
    capitalizedLetter = sentence.substring(0, 2).toUpperCase();
    word = sentence.substring(2);
    capitalizedWord = capitalizedLetter + word;
    System.out.println(capitalizedWord + "".""); //to include the missing full-stop
    } 

}
</code></pre>

<p>}  </p>

<p>Hope this helps! best of luck!</p>
"
"13580058","<p>You can also check if your string contains a dot/point : </p>

<pre><code>String var1=""5.5"";

if (var1.contains(""."")){
// it should be a double
}else{
// int
}
</code></pre>
"
"13676900","<p>Try this code</p>

<pre><code>import java.io.*;
import java.util.*;

class Read
{
public static void main(String args[])
{
    Scanner scan=null;
    try 
    {
       scan = new Scanner(new java.io.File(""textfile.txt""));
       while(scan!=null)
       {
        String line = scan.nextLine();
        String[] elements = line.split("","");
       }
    } catch (FileNotFoundException e){ }        
}
}
</code></pre>
"
"13676911","<pre><code>class Read
{
    private static final String TEXT_FILE = ""textfile.txt"";

    public static void main(String args[])
    {
        // BAD
        try {
          Scanner scan = new Scanner(new java.io.File(""textfile.txt""));
        } 
        catch (FileNotFoundException e) {
          ; // Eating exceptions - a bad habit :(
        }        
        while(scan.hasNext()){
          String line = scan.nextLine();
          String[] elements = line.split("","");
        }
    }
}
</code></pre>

<p>In contrast ...</p>

<pre><code>class Read
{
    public static void main(String args[])
    {
        // Good
        try {
          Scanner scan = new Scanner(new java.io.File(TEXT_FILE));
          while(scan.hasNext()){
            String line = scan.nextLine();
            String[] elements = line.split("","");
          }
        } 
          catch (FileNotFoundException e){
            System.out.println (""Error parsing "" + TEXT_FILE + "": "" + e.getMessage());
        }        
    }
}
</code></pre>
"
"13697042","<pre><code>int i=0;
for (AnnotationData annotations : annotation){
 if(i==1)
   {
    break;
   }
 i++;
}
</code></pre>
"
"13697062","<pre><code>boolean isFirst=true;

for (AnnotationData annotations : annotation){
    if(isFirst)
    {
        isFirst = false;
        // Your Code here
    }
    else
    {  
        break;
    }  
}
</code></pre>
"
"13719662","<p>This happens because a++ is more like a Method then a realistic Number.</p>

<p>you can splitt them into two seperat lines.</p>

<p>the first one would be </p>

<pre><code>a = a;
return a + 1;
</code></pre>

<p>the seconde one would be</p>

<pre><code>a = a+1;
</code></pre>
"
"13719668","<p>When you write <code>a++</code> it means a will increment AFTER the '=' operator has been processed. So </p>

<pre><code>b = a++;
System.out.println(a);
System.out.println(b);
</code></pre>

<p>Should produce on your screen: 11, 10. Because <code>a</code> becomes 11 after b takes the value of 'a'. If you change the <code>a++</code> to <code>++a</code> you force the increment to happen before the '=' is processed so you will be giving b = a + 1 and on your screen you should be having 11,11.</p>
"
"13731170","<p>It's not possible with parameters of type <code>Class</code>. Instead, your method must accept Parameters of type <code>Type</code> the way GSON does it with the <a href=""http://google-gson.googlecode.com/svn/tags/1.1.1/docs/javadocs/com/google/gson/reflect/TypeToken.html"" rel=""nofollow""><code>TypeToken</code></a> class.</p>
"
"13747399","<p>Maybe something like:</p>

<pre><code>rs.last(); 
rowcnt = myResultSet.getRow(); // get row no.
rs.beforeFirst();

int i = 0;  
Integer[] options = new Integer[rowcnt];  
while (rs.next()) {  
  options[i] = Integer.parseInt(rs.getString(i));  
  i++;  
}  
</code></pre>
"
"13764135","<p>What about <code>0[0-2][0-6][0-6][0-6][0-6][0-6][0-6][0-6][0-6][0-6][0-6]</code>? Obviously I guessed you need a fixed length string of 12 chars, otherwise <code>0[0-2][0-6]+</code> would be ok.</p>
"
"13764257","<p>Write your own method</p>

<pre><code>public boolean checkEqual(DateTime first,DateTime second){
     if(first.&lt;getterforyear&gt; == second.&lt;getterforyear&gt; &amp;&amp; first.&lt;getterformonth&gt; == second.&lt;getterformonth&gt; &amp;&amp; first.&lt;getterforday&gt; == second.&lt;getterforday&gt;){
         return true;
  }
 return false;
}
</code></pre>
"
"13876533","<p>You could also hardcode it, <code>(X{n})|(X{m})</code> </p>
"
"13879944","<p>Try this code:</p>

<pre><code>class demo extends HttpServlet {
       public void init(ServletConfig config) {
             String path = config.getServletContext().getRealPath(""/"");
       }
}
</code></pre>

<p>It should work</p>
"
"13883935","<p>I guess you could move the if statements outside the while, like so</p>

<pre><code>if (b1) {
    while (true) {
        doThis();
    }
}
if (b2) {
    while (true) {
        doThat();
    }
}
</code></pre>

<p>But you're really not gaining anything, since you still have to evaluate the condition that makes the while loop repeat, and you have to do THAT twice as often as the original code.</p>
"
"13892390","<p>Used for BaseAdapter and getView() method inside code write down and particular onClickListner imlement and try this out this code,</p>

<pre><code>mArrayList.remove(position);
notifyDataSetChanged();
</code></pre>
"
"13997408","<p>I use them all the time to initialize lists and maps.</p>

<pre><code>List&lt;String&gt; myList = new ArrayList&lt;String&gt;(){{
    add(""blah"");
    add(""blah2"");
}};
for(String s : myList){
    System.out.println(s);
}
</code></pre>
"
"14008638","<pre><code>ObservableList&lt;String&gt; items = FXCollections.observableArrayList();
ListView lv;
lv.setItems(items);
items.add();
items.remove;
</code></pre>
"
"14040467","<p>Try it : </p>

<pre><code> String example = ""[""41020834846 - Yan Oda 1"";
    String pattern = ""^(\[\"")"";
    example = example.replaceAll(pattern,""""));
</code></pre>
"
"14120314","<p><strong>Update</strong></p>

<p>According to a comment, <code>.runOnUiThread()</code> runs its runnable asynchronously, which means the task may or may not have run by the time we get to the ""statements down the lines"". Then it is impossible to get the results to those statements in the rest of the method (and none of the solutions here will help you with that).</p>
"
"14150755","<pre><code>    System.out.println(""Would you like to exit? "");
    String Exit = input.nextLine();

}while(!Exit.equals('y');
</code></pre>
"
"14189895","<p>Are you trying to open a local image in the default web browser? if so, do:</p>

<pre><code>java.io.File imageFile = new java.io.File(""image.png"");
java.awt.Desktop.getDesktop().browse(imageFile.toURI());
</code></pre>

<p>It will open the File Image to the default web browser.</p>
"
"14233242","<p><a href=""http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ArrayBlockingQueue.html"" rel=""nofollow"">Java's <code>ArrayBlockingQueue</code></a> offers a fixed sized circular buffer.</p>
"
"14369688","<p>If the body parts depend upon one another so you can't do as @dicarlo2's answer:</p>

<pre><code>private interface GetObjects {
    List&lt;SomeObject&gt; get();
}

public void method1(int a, int b) {
    impl(a, b, new GetObjects() { public List&lt;SomeObject&gt; get() {
        return service.getListA(c, d);
    }});
}

public void method2(int a, int b) {
    impl(a, b, new GetObjects() { public List&lt;SomeObject&gt; get() {
        return service.getListB(c, d, e);
    }});
}

private void impl(int a, int b, GetObjects getObjects) {
    //body (the same in both of methods)
    List&lt;SomeObject&gt; list = getObjects.get();
    //rest of the body (the same in both of methods)
}
</code></pre>

<p>You can use an enum in place of <code>GetObjects</code> if you are concerned about the <code>new</code>, but don't mind getting the order mixed up, missing out on outer <code>this</code> and don't want to open this up (although it could implement an public interface).</p>

<p>Better syntax coming in Java SE 8, possibly. IIRC, along the lines of:</p>

<pre><code>public void method1(int a, int b) {
    impl(a, b, { -&gt; service.getListA(c, d) });
}
</code></pre>
"
"14375039","<pre><code>public static void main(String[] arg) {
    int result2 = sumVarArgs(1, 2);
    System.out.println(result2);
    int result3 = sumVarArgs(1, 2, 3);
    System.out.println(result3);
    int result4 = sumVarArgs(1, 2, 3, 4);
    System.out.println(result4);
    int result5 = sumVarArgs(1, 2, 3, 4, 5);
    System.out.println(result5);

}


    /**
     * Aoccepts an all int variables and conciders them as an array and adds
     * them
     *
     * @param argsAry multiple number of input parameters having data type
     * &lt;i&gt;int&lt;/i&gt;
     * @return sum of all passed int variables in int format
     */
public static int sumVarArgs(int... argsAry) {
     int c = 0;
     for (int i = 0; i &lt; argsAry.length; i++) {
         c += argsAry[i];
     }
     return c;
}
</code></pre>
"
"14396072","<p>Use Reflection in that Way:</p>

<pre><code>YourClasss instance; // this instance has those all JPanel fields
Method setVisible = JPanel.class.getMethod(""setVisible"", new Class[] {Boolean.class});

List&lt;String&gt; numberOfFieldList = getNumbersOfFieldsToSetInvisible(); 

for (String number : numerOfFieldList) {
  Field benderPanelField = YourClass.getField(""BenderPanel"" + number);
  Object fieldInYourInstance = benderPanelField.get(instance);
  setVisible.invoke(fieldInYourInstance, Boolean.FALSE);
}
</code></pre>

<p>Maybe it will help.</p>
"
"14396194","<p>Simple example using your setup:</p>

<pre><code>    List&lt;Integer&gt; visibleItems = new ArrayList&lt;Integer&gt;();

    JPanel[] myPanels = new JPanel[]{BenderPanel1, BenderPanel2, BenderPanel3};

    for (int i = 0; i &lt; myPanels .length; i++) {
        myPanels[i].setVisible(false);
        if(visibleItems.contains(i) ){
            myPanels[i].setVisible(true);
        } 
    }
</code></pre>
"
"14432546","<p>Your Turn interface has a ArrayList and a ArrayList. If either of them are not serializable you will get this error. The fact that T is decided at runtime creates another <code>debugging</code> challenge. Although its a good design, I recommend that you javadoc it so that developers to use your Turn interface know that the T has to be Serializable too, else it can break during runtime.</p>

<blockquote>
  <blockquote>
    <blockquote>
      <p>In your case class <code>Hand</code> is not Serializable in most probability.</p>
    </blockquote>
  </blockquote>
</blockquote>
"
"14439297","<p><strong>Update</strong></p>

<p>As you setting value in Splash screen that object in memory was different and in another activity you creating another object that also different in memory that's why you getting null.</p>

<p>If this was your requirement to init url in splash screen and used in another then there are many ways.</p>

<ol>
<li>You directly get the string in your activity as you getting in splash screen.</li>
<li>In splash screen make appDetails object as public static so you can access in another activities also</li>
<li>Implement serialization on ApplicationDetails and put this object in putExtra as we put string,int etc value for passing data between activity and get this data using bundle in started activity</li>
</ol>

<p><strong>Edited</strong></p>

<p>For using single object you need make that object declare as public static in splash screen</p>

<pre><code>public static ApplicationDetails appDetails;
</code></pre>

<p>now assign value in splash screen oncreate() and used in another activity or even another class also like this way</p>

<pre><code>public class AboutViewController extends Activity {

    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        // direct use object by class name
        System.out.println("" app support url "" + SplashScreen.appDetails.getSupportURL());
    }

}
</code></pre>
"
"14612064","<p>OMG, iterate over array - this is the worst workaround (but my bad english is more worse than it). Look at <a href=""http://code.google.com/p/guava-libraries/"" rel=""nofollow"">http://code.google.com/p/guava-libraries/</a> This lib contains <strong>robust</strong> code for your need (de-facto must have library in your project). You can see and analyze sources - it's free , but you experience in best practice will be grown as my english skills.
Below is excample of guava code:</p>

<pre><code>  public static double min(double... array) {
    checkArgument(array.length &gt; 0);
    double min = array[0];
    for (int i = 1; i &lt; array.length; i++) {
      min = Math.min(min, array[i]);
    }
    return min;
  }
</code></pre>

<p>P.S: learn libraries with standart code and do not reinvent the wheel. Be happy!</p>
"
"14808914","<p>Try</p>

<pre><code>public class ThreadExample extends Thread { /* Whatever */ }

Thread t = new ThreadExample();
t.start();
</code></pre>

<p>Cheers,</p>
"
"14836227","<p>Use following code:</p>

<pre><code>SimpleDateFormat df = new SimpleDateFormat(""YYYY-MM-dd"");
Date date = new Date();
System.out.println(df.format(date));
</code></pre>

<p>It should be <code>dd</code> and not <code>DD</code>.</p>
"
"14932868","<p>In context of method call only time use of <code>this</code>  matters  if you are using <code>OuterClass.this.method()</code>.</p>

<pre><code>class OuterClass {
    void method() { }

    class InnerClass {
        void method() {
            OuterClass.this.method(); // not the same as method().
        }
    }
 }
</code></pre>
"
"14935754","<p>You should probably using a <code>Long</code> or <code>BigInteger</code> for you factorial calculation as you may be losing precision in your calculation using a double. You also do not need any fractional value which is the main use case for floating point numbers. Once you have an integer representation of your number it will make it much easier for you to sum the digits.</p>

<pre><code>String num = String.valueOf(bigInt);
int sum = 0;
for ( Character i : num.toCharArray() ) {
    sum += Integer.parseInt(String.valueOf(i));
}
</code></pre>

<p>A different method of doing this would be-</p>

<pre><code>long n = factorial(6);
int sum = 0;
while (n &gt; 0) {
    int p = n % 10;
    sum += p;
    n = n / 10;
}
</code></pre>
"
"14972314","<p>You can check twice like this </p>

<pre><code>text.contains(s);
text.contains(s.toLowerCase());
</code></pre>
"
"15001668","<p>May be</p>

<pre><code>canvas.setBitmap(toDisk);
</code></pre>

<p>is not in correct place.</p>

<p><strong>Try this :</strong></p>

<pre><code>toDisk = Bitmap.createBitmap(640,480,Bitmap.Config.ARGB_8888);              
toDisk.compress(Bitmap.CompressFormat.JPEG, 100, new FileOutputStream(new File(""arun.jpg"")));

canvas.setBitmap(toDisk);
</code></pre>
"
"15056433","<p>Issue is that they should be living outside of your source code entirely.  You should be using something like Apache Commons Config, or at least loading from a <code>.properties</code> file.</p>

<p>I will also note that I'm interpreting ""single"" with respect to a reasonable scope.  For instance, there should not be one Config file for all Java developers used stored on Google's servers with a request form for modifying.  There probably should not be done for your entire code base; however, per UOR or package is a reasonable scope, and is the one I use in practice.</p>
"
"15086669","<p>There <em>is</em> a way to get the runtime type of the type parameter by using Guava's <code>TypeToken</code> to capture it. The solution's disadvantage is that you have to create an anonymous subclass each time you need an instance of <code>Container</code>.</p>

<pre><code>class Container&lt;T&gt; {

    TypeToken&lt;T&gt; tokenOfContainedType = new TypeToken&lt;T&gt;(getClass()) {};

    public Type getContainedType() {
        return tokenOfContainedType.getType();
    }
}

class TestCase {

    // note that containerTest is not a simple instance of Container,
    // an anonymous subclass is created
    private Container&lt;String&gt; containerTest = new Container&lt;String&gt;() {};

    @Test
    public void test() {
        Assert.assertEquals(String.class, containerTest.getContainedType());
    }
}
</code></pre>

<p>The key of this solution is described in tha JavaDoc of <code>TypeToken</code>'s constructor used in the code above:</p>

<blockquote>
  <p>Clients create an empty anonymous subclass. Doing so embeds the type parameter in the anonymous class's type hierarchy so we can reconstitute it at runtime despite erasure.</p>
</blockquote>
"
"15107814","<p>This instruction gives error because you are adding a double value to an int one.</p>

<pre><code>a = a+1.5;
</code></pre>

<p>Convert the instrunction</p>

<pre><code>int a = 10;
</code></pre>

<p>to</p>

<pre><code>double a = 10;
</code></pre>

<p>if you want to keep decimal precision if not if you cast the result of the sum to int it will ceil or round the result.</p>
"
"15201599","<p>There should not be problem to you in your problem explanation.  I understood your problem as in the following code.</p>

<pre><code>import java.util.*;
class Test
{
  int x;
}
public class Demo
{
   public static void main(String args[])
   {
      Vector&lt;Test&gt; vect = new Vector&lt;Test&gt;();

      Test t1 = new Test();
      Test t2 = new Test();
      t1.x = 10;
      t2.x = 20;

      vect.add(t1);
      vect.add(t2);

      for(Test t : vect)
      {
         System.out.println(t.x);
      }  
  }
}
</code></pre>

<p>I read this type of gimmicks in <a href=""http://way2java.com/collections/vector-play-with/"" rel=""nofollow"">Vector Play With</a>.</p>
"
"15294095","<p>im edited my previous answer </p>

<pre><code>  String s =""stackjomvammssastackvmlmvlrstack"";      
  String pattern = ""stack"";

Matcher m = pattern.matcher(s);
int i=0;
while (m.find())
{    
    System.out.println(m.start());
    System.out.println(m.start()+m.length());
}
</code></pre>
"
"15310444","

<pre><code>public static void main(String[] args) {

    System.out.println(pow2(2,3));

}

public static double pow2(double x,int y){
    double total=1;
    for(int i=1;i&lt;=y;i++){
        total*=x;
    }
    return total ;
}
</code></pre>
"
"15310616","<pre><code>public static double pow2(double x,int y){
    double total=1;
    if(y&gt;0){
    for(int i=1;i&lt;=y;i++){
        total*=x;
    }
    return total;
    }
    else if (y&lt;0){
        double temp=1/x;//this makes 2 as 1/2
        y=y*-1;         //to have a meaningful iteration if for loop
        for(int i=1;i&lt;=y;i++){
            total*=temp;
        }   
        return total;
    }else
        return 1;
}
</code></pre>
"
"15312900","<p>Just make abstract class GameObject with method: Rectangle2D getShape(). This method could look like:</p>

<pre><code>abstract class GameObject {
    private Image image;

    GameObject(String path) {
        try {
          image = ImageIO.read(new File(path));
        } catch (IOException ex) {}
    }

    Rectangle2D getShape() {
       return new Rectangle2D.Float(0, 0, (int)image.getWidth(), (int)image.getHeight());
    }
}
</code></pre>

<p>Player, Enemy, Arrow, Wall would be subclasses of GameObject class</p>
"
"15404567","<p>So just print the numbers one by one</p>

<pre><code> @Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    final Random myRandom = new Random();


     Button buttonGenerate = (Button)findViewById(R.id.generateme);
    final TextView textGenerateNumber = (TextView)findViewById(R.id.generatenumber);

    buttonGenerate.setOnClickListener(new OnClickListener(){

             @Override
             public void onClick(View v) {
                 ArrayList&lt;Object&gt; Arry1 = new ArrayList&lt;Object&gt;();
                    for(int i=0;i&lt;1;i++){
                   ArrayList&lt;Integer&gt; Arry = new ArrayList&lt;Integer&gt;();
                   for(int k=0;k&lt;7;k++){
                       textGenerateNumber.setText(myRandom.nextInt(10));
                   }
                       Arry1.add(Arry);
                   }

                       }
                       });  
                    }
                 }
</code></pre>
"
"15411525","<p>In my opinion, you should use Pattern object, with a matcher you can extract your parameters. This code can help you :</p>

<pre><code>Pattern p = Pattern.compile(""Logged in as: (.)+ (Administrator)"", Pattern.CASE_INSENSITIVE);
Matcher m = p.matcher(myString);
if (m.find()) {
   return m.group(1);
}

else {
   System.out.println(""Not found !"");
}
</code></pre>

<p>Hope it will help :)</p>
"
"15422938","<p>I think you want </p>

<pre><code>int[] nums3 = new int[4];
</code></pre>
"
"15422946","<pre><code>   // declares an array of integers

    int[] anArray;

    // allocates memory for 10 integers
    anArray = new int[10];

    // initialize first element
    anArray[0] = 100;
    // initialize second element
    anArray[1] = 200;
    // etc.
    anArray[2] = 300;
    anArray[3] = 400;
</code></pre>

<p>Source: <a href=""http://docs.oracle.com/javase/tutorial/java/nutsandbolts/arrays.html"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/java/nutsandbolts/arrays.html</a></p>
"
"15454052","<pre><code>    int one, two;
    Random r = new Random();
    one = r.nextInt(3) + 1;
        two = r.nextInt(3) + 1;
    while (one == two){
            two = r.nextInt(3) + 1;
</code></pre>
"
"15494323","<pre><code>**if(""A"".equals(package_plan.toUpperCase()) &amp;&amp; getUsageCharge() &gt; 14.95)
        {
            sB = getUsageCharge() - 14.95;
            System.out.println(""You're spending more money than you should. If you switched to Plan B you would save:$"" + sB);
        }
        else if(""A"".equals(package_plan.toUpperCase()) &amp;&amp; getUsageCharge() &gt; 19.95)
        {
            sC = getUsageCharge() - 19.95;
            System.out.println(""You're spending more money than you should. If you switched to Plan C you would save:$"" + sC);
        }
        else if(""B"".equals(package_plan.toUpperCase()) &amp;&amp; hours &lt; 10)
        {
            sA = getUsageCharge() - 9.95;
            System.out.println(""You're spending more money than you should. If you switched to Plan A you would save:$"" + sA);
        }
        else if(""B"".equals(package_plan.toUpperCase()) &amp;&amp; getUsageCharge() &gt; 19.95)
        {
            sC = getUsageCharge() - 19.95;
            System.out.println(""You're spending more money than you should. If you switched to Plan C you would save:$"" + sC);**
        }**
</code></pre>

<p>Did u meant to comment it, if yes do it right. or this is error and unreachable statement according to the code provided.</p>

<p>Comment it with <code>/* your code to comment */</code></p>
"
"15540803","<p>A three-level index where a higher-level key can be used to access all lower level keys and objects will require a three-level map.</p>

<pre><code>class ThreeLevelMap&lt;K1,K2,K3,V&gt;
{
    private Map&lt;K1,Map&lt;K2,Map&lt;K3,V&gt;&gt;&gt; store = new HashMap&lt;K,Map&lt;K2,Map&lt;K3,V&gt;&gt;&gt;();
    ...
    public V put(K1 key1, K2 key2, K3 key3, V value) { ... }
    public V get(K1 key1, K2 key2, K3 key3) { ... }

    public static class TLMEntry&lt;K1,K2,K3,V&gt;
    {
    ...
    }
    public Collection&lt;TLMEntry&lt;K1,K2,K3,V&gt;&gt; get(K1 key1, K2 key2) { ... }
    public Collection&lt;TLMEntry&lt;K1,K2,K3,V&gt;&gt; get(K1 key1) { ... }
}
</code></pre>

<p>This is a basic skeleton but should get you going in the right direction.</p>
"
"15607116","<p>Static variables will have only one instance across different instances.</p>

<p>Here</p>

<p>at first</p>

<p>Z was 2</p>

<p>When you call</p>

<pre><code>public Whatever()
</code></pre>

<p>Z was changed to 6</p>

<p>after that you have changed X</p>

<p>but that had no impact on Z</p>

<p>so the value is 6</p>

<p>Thanks</p>
"
"15613571","<p>What you need to do is set the session into an attribute based on the session.</p>

<p><code>request.getSession().setAttribute(""sess"",request.getSession());</code></p>

<p>Use this to compare it to the current session. If this comparison fails, then redirect to the login page. This should be done in each page.</p>
"
"15613724","<p>In every servlet, check whether Session is null or not. If session is not null then only do the request processing else redirect to login page.</p>

<pre><code>HttpSession session  = request.getSession();

if(Session !=null)
{
try
{      
    // acutal servlet actions

}else
{

  // redirect to login page

 }
</code></pre>

<p>Also it would be good if you add null check for session in your above code.</p>

<pre><code>HttpSession session  = request.getSession();
if(session !=null)
try
{      
    session.removeAttribute(""logonSessData"");
    session.invalidate();                               
    String pageToForward = request.getContextPath();
    response.sendRedirect(pageToForward);           }
catch (Exception sqle)
{
    System.out.println(""error UserValidateServlet message : "" + sqle.getMessage());
    System.out.println(""error UserValidateServlet exception : "" + sqle);
}
}else
{
  //session already null/ expired
}
</code></pre>
"
"15627006","<pre><code>    import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;

public class JXML {
private DocumentBuilder builder;
private Document doc = null;
private DocumentBuilderFactory factory ;
private XPathExpression expr = null;
private XPathFactory xFactory;
private XPath xpath;
private String xmlFile;
public static ArrayList&lt;String&gt; XMLVALUE ;  


public JXML(String xmlFile){
    this.xmlFile = xmlFile;
}


private void xmlFileSettings(){     
    try {
        factory = DocumentBuilderFactory.newInstance();
        factory.setNamespaceAware(true);
        xFactory = XPathFactory.newInstance();
        xpath = xFactory.newXPath();
        builder = factory.newDocumentBuilder();
        doc = builder.parse(xmlFile);
    }
    catch (Exception e){
        System.out.println(e);
    }       
}



public String[] selectQuery(String query){
    xmlFileSettings();
    ArrayList&lt;String&gt; records = new ArrayList&lt;String&gt;();
    try {
        expr = xpath.compile(query);
        Object result = expr.evaluate(doc, XPathConstants.NODESET);
        NodeList nodes = (NodeList) result;
        for (int i=0; i&lt;nodes.getLength();i++){             
            records.add(nodes.item(i).getNodeValue());
        }
        return records.toArray(new String[records.size()]);
    } 
    catch (Exception e) {
        System.out.println(""There is error in query string"");
        return records.toArray(new String[records.size()]);
    }       
}

public boolean updateQuery(String query,String value){
    xmlFileSettings();
    try{
        NodeList nodes = (NodeList) xpath.evaluate(query, doc, XPathConstants.NODESET);
        for (int idx = 0; idx &lt; nodes.getLength(); idx++) {
          nodes.item(idx).setTextContent(value);
        }
        Transformer xformer = TransformerFactory.newInstance().newTransformer();
        xformer.transform(new DOMSource(doc), new StreamResult(new File(this.xmlFile)));
        return true;
    }catch(Exception e){
        System.out.println(e);
        return false;
    }
}




public static void main(String args[]){
    JXML jxml = new JXML(""c://user.xml"");
    jxml.updateQuery(""//Order/CustomerId/text()"",""222"");
    String result[]=jxml.selectQuery(""//Order/Item/*/text()"");
    for(int i=0;i&lt;result.length;i++){
        System.out.println(result[i]);
    }
}
</code></pre>

<p>}</p>
"
"15630380","<p>Your best bet is:</p>

<pre><code>String[] s3 = new String[ss.length-1];
System.arraycopy(ss, 0, s3, 0, ss.length-1);
</code></pre>

<p>Or do it in Python.</p>

<p>Unfortunately there's no convenient way to join your subarray back into a string, but if a subarray is what you want, then you're good to go.</p>
"
"15630400","<pre><code>String whatYouWant = s.substring(0, s.length() - last.length());
</code></pre>
"
"15630654","<pre><code>public static void main(String args[]) {
    String s =""23+43*435/675-90"";
    String[] ss = s.split(""[-+*/]"");
    String last=ss[ss.length-1];
    System.out.println(last);
    String except_last = s.substring(0, s.length() - last.length());
    System.out.println(except_last);
}
</code></pre>
"
"15697935","<p>use <a href=""http://developer.android.com/reference/android/view/animation/Animation.AnimationListener.html"" rel=""nofollow"">AnimationListener</a> for setting Button Visibility <code>GONE</code> when Animation end.</p>

<pre><code>.....
anim2.setAnimationListener(animButnListener);
askbtn.startAnimation(anim2);
AnimationListener animButnListener = new AnimationListener(){
  @Override
  public void onAnimationEnd(Animation animation) {

   // make  Button Visibility GONE  here
    againbtn.setVisibility(View.GONE);
  }
  //.......other AnimationListener methods
};
</code></pre>
"
"15742263","<p>You can always typecast to a specific type to execute that action.</p>

<pre><code>void action(Base base) 
{
    if(base instanceof Foo)
    {
         Foo foo = (Foo) base;
         //executes specific foo action
    }
    else
    {
        // handle the edge case where the wrong type was sent to you
    } 
}
</code></pre>
"
"15752257","<p>In java <em>code</em> you can't use just the word <code>print</code> to print a variable as it is not recognized by java. You have to use the <code>System.out.print</code> or something of that nature for output.</p>
"
"15768668","<p>finally block's only purpose is to <strong>close the resources</strong> which you have opened inside try block. 
resources could be anything like database connections,File writing/reading  etc:</p>

<pre><code>Connection conn= null;
try {
 conn= get the db conn;
//do some DML/DDL
}
catch(SQLException ex) {

}
finally {
conn.close();
}
</code></pre>
"
"15831125","<p>try running this command:</p>

<p><code>jar xvf &lt;your_jar_file&gt; &lt;path_to_another_location&gt;</code></p>

<p>If the path does not exist it will be created automatically.</p>
"
"15851635","<p>Use <code>public &lt;T&gt; T PostQuery(String url, Object graph){}</code> would be ok,because you have declared a generic type to this method when declare <code>&lt;T&gt;</code> like:</p>

<pre><code>public &lt;T&gt; T PostQuery(String url, Object graph){
    Object obj = null;
    //...
    return (T)obj;
}
</code></pre>
"
"15898214","<p><code>Class1</code> is not <strong>static</strong>, so you can access its variable and functions only by creating instance to it.</p>

<pre><code>int var = new Class1.getVar();
</code></pre>

<p>or make <code>class1</code>, <code>getVar1</code> and <code>var1</code> as <strong>static</strong></p>

<pre><code>public static class1 {
    private static int var1;

    public Class1(int index1, int index2)  {
        //...
        Class2 c2 = new Class2();
        //..
    }

    public static int getVar1() {
        return var1;
    }
}
</code></pre>
"
"15900914","<p><code>String</code> class implements <code>CharSequence</code> and also it extends from <code>Object</code> class. So if somebody is using other type of <code>CharSequence</code> we have to typecast like your first version <code>(String)value</code> <br><em>[ <code>(String)value</code> if it contains <code>String</code> object and <code>(StringBuffer)value</code> for StringBuffer type of object]</em><br>
About <code>toString()</code> we have to override <code>toString()</code> method in our class which will show our object representation in String format as per our requirement. If we don't override then default implementation of <code>toString()</code> from <code>Object</code>class will be inherited and will give the String in hexadecimal representation of the hash code of our object like <code>UserObject@12dacd1</code></p>

<p>Other implementation of <code>CharSequence</code> are <strong>CharBuffer, StringBuffer, StringBuilder</strong></p>

<p>1> <strong>(String)value</strong> means <code>value</code> contains String object. If it doesn't contain <code>String</code> the <code>ClassCastException</code> will be thrown at runtime. Typecasting will throw compile time exception if you typecast with irrelevant type hierarchy. like given below <br></p>

<pre><code>Exception e = new Exception();
String str = (String)e;
</code></pre>

<p>2> Invoking <strong>toString()</strong> means <code>anyobject</code>  is not necessary to be a <code>String</code> object. Proper overriding <code>toString()</code> method in our own class will be helpful for the String representation of our own class and also it will <strong>never</strong> throw any exception exists in the java world because it inherits <code>toString()</code> from object class. So if your override <strong>toString</strong> and you print <code>System.out.println(userObject);</code> then it will not show  hexadecimal representation of the hash code of our object like <code>UserObject@12dacd1</code><br></p>

<pre><code>public class UserObject {
    String name;
    int age;
    @Override
    public String toString() {
        return "" Name=""+name+"" \n age=""+age;
    }

    public static void main(String[] args) {
        UserObject uo = new UserObject();
        uo.name=""AAA"";
        uo.age=18;
        System.out.println(uo); //output will be ""Name=AAA age=18"" instead of ""UserObject@12dacd1""

    }
}
</code></pre>

<p>About new Long(value) and (Long)value.</p>

<p><code>new Long(value)</code> means, you have got value as <code>long/String</code> you want to convert it into wrapper class <code>Long</code> object. So you can use Long(long), Long(String) <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/Long.html#constructor_summary"" rel=""nofollow"">constructor</a> as per the condition.</p>

<p>Long typecasting explanation is  similar to above String typecasting or any typecasting. <code>(Long)value</code>  means when you get the code like below then you can typecast to Long, Integer, Double as well depends on the assigned value at the right side of the equal symbol.</p>

<pre><code>Number i=10L; //java.lang.Number
Long a= (Long)i;
</code></pre>
"
"15900917","<p>Those are all very different. The first one is <code>Type Casting</code>. Let's say that you receive an Object on your method, and you know it's a String, so you want it to be referred to as that type. so you do that</p>

<pre><code>public void method(Object obj){
    String str = (String) obj;
}
</code></pre>

<p>The <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#toString%28%29"" rel=""nofollow"">toString</a> method is one inherited from <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html"" rel=""nofollow"">Object</a> class, that returns to you a <code>String</code> representation of any given <code>Object</code>. </p>

<p>So the difference is, when you do the casting, your object must already be a <code>String</code>, there is no actual conversion. The difference is that you can use a more specific type for your variable,  but when you invoke toString that is not necessary. </p>

<p>Invoking <code>toString</code> may give you a different object than the original one, unless your class is already a <code>String</code>, in that case the same reference is returned.</p>
"
"15981484","<p>Sure.  You could pass in the string to print into your Main class:</p>

<pre><code>public class MainClass implements Runnable {
     private String toPrint;

     public static void main(String[] args) {
         new Thread(new MainClass(""Hello"")).start();
         new Thread(new MainClass(""World"")).start();
    }

    public MainClass(String toPrint) {
         this.toPrint = toPrint;
    }

    public void run() {
         System.out.print(toPrint);
    }
}
</code></pre>

<p>Of course you have no idea if it will print out <code>""HelloWorld""</code> or <code>""WorldHello""</code>.  The threads are going to run in parallel with no guarantee of order.  That's the whole point of threaded programs -- they run asynchronously.  Trying to force a particular word output negates the performance improvements.</p>
"
"15983574","<p>Sometimes it is very simple... you need to install visualvm via</p>

<pre><code>sudo apt-get install visualvm
</code></pre>

<p>For locating the files, use</p>

<pre><code>dpkg -L visualvm
</code></pre>
"
"15996662","<p>This is what I came up with:</p>

<pre><code>    public static String interChange(String input){
        if(input.length() % 2 != 0) throw new IllegalArgumentException(""Not supported"");
        int middle = input.length()/2;
        StringBuilder result = new StringBuilder();
        for(int i=middle;i&lt;input.length();++i){
            result.append(""""+input.charAt(i-middle)+input.charAt(i));
         }
         return result.toString();
}
</code></pre>

<p>Upsss! I just noticed that you do not want working code. Sorry</p>
"
"16017769","<p>Loop it </p>

<pre><code>for (String s: list) {
            s=""""; 
            //or 
            s=""a"";
        }
</code></pre>
"
"16036634","<p>Two things,</p>

<ol>
<li>While loop should cover entire run method( i believe so seeing the code)</li>
<li><p>Since its infinite loop, which could collect empty inputs , you should handle that as well.</p>

<p>public void run(){</p>

<pre><code>while(!destroy){

    while(active){
        try{
            S = SS.accept();
            IS = S.getInputStream();
            if(IS!=null &amp;&amp; IS.available()&gt;0){
                OIS = new ObjectInputStream(IS);
                Character Char = (Character)OIS.readObject();
                loading_state.setChar(Char);
                pause();
            }
        }
        catch(Exception e){  ..}
    }
}
</code></pre>

<p>}</p></li>
</ol>
"
"16089207","<p>The numel function of matlab</p>

<p>n = numel(A) returns the the number of elements, n, in array A.</p>

<p>You Can make yours like</p>

<pre><code>int arraycount(int a[])
    {
    int counter;
    for(int i=0;i&lt;a.length;i++)
    {
    counter++;
    }
    return counter;
    }
</code></pre>
"
"16089240","<pre><code>class main{
    public static void main (String[] args){
    // numel returns the number of array elements, as does .length in Java.
    int[] testArr = {1,2,3,4,5,6,7,8};
    System.out.println(testArr.length);
    }
}
// Result: 8
</code></pre>
"
"16090815","<p>I managed to solve this problem.</p>

<p>How I wish the size of an image, I made a small function that solved my problem.</p>

<pre><code> public static int length(BufferedImage bi)
{
    int x;
    x=bi.getHeight()*bi.getWidth();
    return x;
}
</code></pre>
"
"16199149","<p>The best thing I could come up for this is using modulo.</p>

<pre><code>for(int i = 0; i &lt; 3; i++) {
    System.out.println(""("" + i % 3 + "","" + i + ""));
}
</code></pre>

<p>This eliminates the need for a second variable.</p>
"
"16199201","<p>do it like this:</p>

<p><a href=""http://stackoverflow.com/questions/228038/best-way-to-reverse-a-string"">Best way to reverse a string</a></p>

<pre><code>    static void Main(string[] args)
    {
        var aa = new List&lt;String&gt;();

        aa.Add(""hello"");
        aa.Add(""goodbye"");

        var x = from s in aa select Reverse(s);

        foreach (var c in x)
            Console.WriteLine(c.ToString( ));

        Console.ReadLine();
    }

    public static string Reverse(string s)
    {
        char[] charArray = s.ToCharArray();
        Array.Reverse(charArray);
        return new string(charArray);
    }
</code></pre>
"
"16339571","<pre><code>       StringBuffer strBuffer = new StringBuffer();
        for(Object o:list){
            strBuffer.append(o);
        }
        double []x = new double[]{strBuffer.toString()};
</code></pre>

<p>I consider this should work</p>
"
"12559433","<p>I know this expression from C++. It can be true if <code>n</code> is not a number. See <a href=""http://stackoverflow.com/questions/570669/checking-if-a-double-or-float-is-nan-in-c"">Checking if a double (or float) is nan in C++</a></p>
"
"16412319","<p>As others point out, a logical and (&amp;&amp;) is probably the best way to consolidate your logic. An &amp;&amp; operation will only evaluate to <code>true</code> if both sides evaluate to <code>true</code>.</p>

<pre><code>if (address != null &amp;&amp; firstName != null &amp;&amp; lastName != null) {
    // Whatever you want to do with that...
} else {
    // Whatever you want to do with bad input
}
</code></pre>

<p>For the sake of diversity, you could also use a try-catch approach. In Java, a NullPointerException will be thrown if you try to call a method on a null value, which you can catch and handle.</p>

<pre><code>try {
    // Whatever you want to do with that...
} catch (NullPointerException npe) {
    // Whatever you want to do with bad input
}
</code></pre>

<p>This approach can be helpful if you've got a really big set of inputs that might be null, although in general I wouldn't advocate it. (The problem with the second approach is that if you call some other method from the <code>try</code> part that triggers a NullPointerException, it will end up in the <code>catch</code> block here, even though it may be totally unrelated to these inputs - i.e. you could make it hard for yourself to spot a bug in a different part of your program.)</p>
"
"16462924","<p>You have a blank space in you pattern, so you'd have to tweak it a little, the quickest alteration would be this, so that you can still have blank spaces in between your list elements:</p>

<pre><code>""^(MIN|MAX|SUM|AVERAGE):[(\d+(\.\d+)?)][(\d+(\.\d+)?), ]+$""
</code></pre>
"
"13568710","<p>I would use an ORM library like Hibernate, so you just iterate through a plain list of objects.</p>

<p>It might seem a bit heavy-weight if your just doing JDBC operations, but it looks like you've reached where it would be useful to you. Something like this...</p>

<pre><code>@Entity
@Table(name = ""users"")
class User {
    private String login;
    ...
}
</code></pre>

<p>and then a DAO class like this...</p>

<pre><code>public List&lt;Users&gt; getUsers() {
    return (List&lt;Users&gt;)sessionFactory.getCurrentSession().createQuery(""from Users"").list();
}
</code></pre>

<p>Obviously there's plenty of setup and such to bring Hibernate into your project, but I think the benefits outweight that.</p>

<p>Edit: I don't think JOOQ can do ORM, but it does seem to have a row mapping system. If you want to stick with JOOQ try creating a <code>RecordHandler</code> and use <code>fetchInto()</code> method.</p>
"
"16632989","<p>In Java you do not pass the actual object nor do you pass the reference to the object. <strong>You pass copy of the reference to that object.</strong> Now when you say</p>

<pre><code>makeNew(N);
</code></pre>

<p>N which is the reference to <code>new Test(5)</code> is not passed but <strong>the copy of it's reference</strong> is passed. In the makeNew() function this copy points to some new object and print the value appropriately but the N will still point to the original object.</p>
"
"16663280","<p>I think you have some typo in above code as Patashu has suggested.</p>

<p>This is how class B goes:</p>

<pre><code>public class B
</code></pre>

<p>{</p>

<pre><code>private A a;
private C c;

public static void main(String []a)
{
    B b=new B();
    b.methodB1();
    b.methodB2();
}

public void methodB1()
{
    c= new C();
    a = c.methodC1();
    System.out.println(""Inside Method B1"");
}

public void methodB2()
{
    a.methodA1();
    System.out.println(""Inside Method B2"");
}
</code></pre>

<p>}</p>

<p>//////////////////////////////////////////
This is class A:</p>

<pre><code>  public class A
{

   public void methodA1()
    {  
      System.out.println(""This is class A"");  
    }
}
</code></pre>

<p>and this is working absolutely fine with my JVM... May be there could be issue with the JVM? Not sure! But the above code is working absolutely fine.</p>
"
"16668112","<p>try this code to achieve random number in java.<br> Pass numOfCharacters value(suppose 4)</p>

<pre><code>public static String getRandomalphanumericNumber(int numOfCharacters) {
        StringBuffer buffer = new StringBuffer();
        Random random = new Random();
        char[] chars = new char[] { 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',
                'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
                'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F',
                'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R',
                'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '1', '2', '3', '4',
                '5', '6', '7', '8', '9', '0' };
        for (int i = 0; i &lt; numOfCharacters; i++) {
            buffer.append(chars[random.nextInt(chars.length)]);
        }
        return buffer.toString();
    }
</code></pre>
"
"16677005","<p>enter code here</p>

<p>public class UserManager {</p>

<pre><code>public boolean insertUser(UserBean u) {
    return new UserDAO().insertUser(u);
}

public String validateUser(UserBean u) {
    return new UserDAO().userValidate(u);
}

public boolean insertproducts(adminbean u) {
    return new admindao().insertproducts(u);
}

public boolean getmessage(UserBean u) {
    return new UserDAO().getmessage(u);
}

public ArrayList&lt;String&gt; getDescription() {
    return new Prod_Details().getProd_Description();
}
 public ArrayList&lt;String&gt; getDetails(String pid) {
    return new description().getDescription(pid);
}
 public boolean insertOrder(cartbean u) {
    return new cartDAO().insertOrder(u);
}

public ArrayList&lt;String&gt; getOrder(String email) {
    return new orderDAO().getOrder(email);    
}
</code></pre>

<p>}</p>
"
"16712725","<p>Try to use </p>

<pre><code> String action = request.getParameter(""action"")+"""";
</code></pre>

<p>So all the other checks wont give a NPE.</p>
"
"16715153","<pre><code>long s1 = ((Class)o1).getSize();
</code></pre>

<p>Is where it is complaining.  I think this fixes it:  </p>

<pre><code>if(o1 instanceof Class)  
{  
     long s1 = ((Class)o1).getSize();
}  
</code></pre>

<p>Essentially you have not guaranteed that <code>o1</code> is a <code>Class</code></p>
"
"13736145","<p>You have to remove ""next"" from the collection after it has been process.
with your code, it is stock at ""next"";
For example: if your ""users.values()"" returns a collection i.e</p>

<p>{{john, 1}, {jen, 2}, {peter, 3}}</p>

<p>Your while loops keeps return true and because it keeps returning ""{john,1}"" which is at the fist index.
and so it is an infinite ""loop"". This is how Iterator works. hasNext() will return true if it has an element at the first index and next() will return that element  that hasNext() confirmed it has.</p>

<p>For your loop to progress i think you have to add a line of code or 2. see below:</p>

<pre><code>     Map&lt;String, String&gt; users = new HashMap&lt;String, String&gt;();
    users.put(""1"", ""John"");
    users.put(""2"", ""peter"");
    users.put(""3"", ""uche"");
     Iterator&lt;String&gt; coll = users.values().iterator();
        while(coll.hasNext()){


       String currentUser = coll.next();
       System.out.print(currentUser);

      //coll.remove(currentUser);
    }
</code></pre>

<p>hope this helps..</p>

<p>My former code might not be the ""right"" way to do it but did the job and did not SKIP any second element @ EJP. thanks any way for putting me straight.. :)</p>
"
"16812337","<p>Use java.util.ZipInputStream class to read migrate.zip file from source folder and use java.util.ZipOutputStream class to write migrate.zip to the destination folder....</p>

<pre><code>public class CopyZip
{
  public static void main(String[] args)
  {
     FileInputStream fin = new FileInputStream(new File(""source_folder\migrate.zip""));
     ZipInputStream zin = new ZipInputStream(fin);
     byte[] in_bytes = new bytes[1000];
     zin.read(in_bytes,0,1000);


     FileOutputStream fout = new FileOutputStream(new File(""dest_folder\migrate.zip""));
     ZipOutputSrream zout = new ZipOutputStream(fout);
     zout.write(in_bytes,0,in_bytes.length);
  }
}
</code></pre>
"
"13833884","<p>Try it</p>

<pre><code>int value = (Integer)op.getValue();

if(value  ! = 0 || value  != 4096){
}
</code></pre>
"
"13851417","<p>I'm not sure what kind of 'list of websites' you're referring to, but for eg. a comma-separated file of websites you could read the entire file and use the <code>String</code> <code>split</code> function to get an array, or you could use a <code>BufferedReader</code> to read the file line by line and add to an <code>ArrayList</code>.</p>

<p>From there you can simply loop the array and append to a <code>String</code>, or if you need to:</p>

<blockquote>
  <p>do a ""block escape"", so everything in between the ""block"" is escaped</p>
</blockquote>

<p>You can use a Regular Expression to extract parts of each <code>String</code> according to a pattern:</p>

<pre><code>String oldString = ""&lt;someTag&gt;I only want this part&lt;/someTag&gt;"";
String regExp = ""(?i)(&lt;someTag.*?&gt;)(.+?)(&lt;/someTag&gt;)"";
String newString = oldString.replaceAll(regExp, ""$2"");
</code></pre>

<p>The above expression would remove the xml tags due to the <code>""$2""</code> which means you're interested in the second group of the expression, where groups are identified by round brackets <code>( )</code>.
Using <code>""$1$3""</code> instead should then give you only the surrounding xml tags.</p>

<p>Another much simpler approach to removing certain ""blocks"" from a <code>String</code> is the <code>String</code> <code>replace</code> function, where to remove the block you could simply pass in an empty string as the new value.</p>

<p>I hope any of this helps, otherwise you could try to provide  a full example with you input ""list of websites"" and the output you want. </p>
"
"16909404","<p><code>double</code> + <code>int</code> == <code>double</code></p>

<pre><code>return 5/2   // returns 2 (not turned into doubles)
return 5.0/2 // returns 2.5 (turned into doubles)
return (int)(5.0/2)  // returns 2 (turned into doubles, then turned into int)
return 5d/2 // returns 2.5 (turned into doubles)
</code></pre>
"
"13973570","<p>Can't you use the rounding?</p>

<pre><code>int value=Math.round(yourDouble)
</code></pre>
"
"13984779","<p>Create in input as a string from file or command line and pass it to below method it will return a map containing words as a key and values as their occurrence or count in that sentence or paragraph.</p>

<pre><code>public Map&lt;String,Integer&gt; getWordsWithCount(String sentances)
{
    Map&lt;String,Integer&gt; wordsWithCount = new HashMap&lt;String, Integer&gt;();

    String[] words = sentances.split("" "");
    for (String word : words)
    {
        if(wordsWithCount.containsKey(word))
        {
            wordsWithCount.put(word, wordsWithCount.get(word)+1);
        }
        else
        {
            wordsWithCount.put(word, 1);
        }

    }

    return wordsWithCount;

}
</code></pre>
"
"17032729","<p>You should either create several EditText views, or then parse the contents of the EditText</p>

<pre><code>EditText textView;

String[] splitFloatStrings = textView.getText().toString();.split("","");
float[] parsedFloats = new float[splitFloatStrings.length];

for (int i=0; i &lt; parsedFloats.length; i++) {
    parsedFloats[i] = Float.valueOf(splitFloatStrings[i];
}
</code></pre>

<p>As per <a href=""http://stackoverflow.com/questions/4202712/java-parsing-a-string-of-floats-to-a-float-array"">Java parsing a string of floats to a float array?</a></p>
"
"17055434","<p>Try this:</p>

<pre><code>suma=suma.divide(BigInteger.valueOf(2));
</code></pre>
"
"14020282","<pre><code>Date date1;
Date date2;
[...]
Calendar c1 = Calendar.getInstance();
c1.setTime(date1);
Calendar c2 = Calendar.getInstance();
c2.setTime(date2);
int result = c1.compareTo(c2); // 0 if equal, &lt; 0 if c1 before c2, &gt; 0 if c1 after c2
</code></pre>
"
"17067884","<p>A different possible, simpler but possibly less efficient solution:</p>

<ol>
<li>for each null check left and right values
a. if they are both numeric, take average
b. if one is null and one is numeric, set the middle to the value, leave the other null</li>
<li>repeat until there are no nulls</li>
</ol>

<p><strong>How does it work?</strong></p>

<pre><code>{null,null,5,111,21,null,22,null,null,null,98,25,47,null,1,23,null}
{null,5   ,5,111,21,21,  22,  22,null,98  ,98,25,47,24  ,1,23,23  }
{5   ,5   ,5,111,21,21,  22,  22,60  ,98  ,98,25,47,24  ,1,23,23  }
</code></pre>

<p>The average of these values will be the same and the algorithm is simpler.</p>

<p><strong>Advantages</strong></p>

<ul>
<li>handles start/end nulls without any modification</li>
<li>less memory required</li>
</ul>

<p><strong>Disadvantages</strong></p>

<ul>
<li>does something a bit different...!</li>
<li>may require multiple iterations</li>
<li>in pessimistic case will take more time</li>
</ul>
"
"17123684","<p>Because Java uses pass-by-reference. This means that it passes a <strong>copy</strong> of the variable, and not a reference to the ""original"" one.</p>

<p>E.g. in C++, you can do this:</p>

<pre><code>void change_var(int &amp;x)
{
    x = 2;
}

int x = 10;
change_var(x);
std::cout &lt;&lt; x &lt;&lt; std::endl;
</code></pre>

<p>This would print <code>2</code>, since the reference to the variable <code>x</code> is being passed, and <strong>not</strong> a copy.</p>
"
"17123687","<p>The <code>Long</code> class is immutable, so you can not pass back the value by modifying it in the called function. In your <code>ClassB</code> a copy is created and the original value is never changed.</p>

<p>If you want the caller to see the changed value, you must pass it back as return value.</p>

<p>The same is true for the other primitive wrappers and String.</p>
"
"14065825","<p>If they are in a particular folder you can first get the file name and parse it accordingly to get a particular string. Try this one</p>

<p>`</p>

<pre><code>       public void listFilesForFolder(final File folder) {
            for (final File fileEntry : folder.listFiles()) {
                if (fileEntry.isDirectory()) {
                    listFilesForFolder(fileEntry);
                } else {
                    if(fileEntry.getName().contains(""20120614""){
//code to compare the latest date
}

                }
        }
}
</code></pre>

<p><br>
Try this out, I guess this is what you wanted...</p>
"
"17132583","<p>Try with keyListener in your textfield</p>

<pre><code>jTextField.addKeyListener(new KeyListener() {

        @Override
        public void keyTyped(KeyEvent e) {
        }

        @Override
        public void keyPressed(KeyEvent e) {
            if (text.getText().length() &gt;= 1) {
                button.setEnabled(true);
            } else {
                button.setEnabled(false);
            }
        }

        @Override
        public void keyReleased(KeyEvent e) {
        }

    });
</code></pre>
"
"17165001","<p>Alternative: <strong>don't do that</strong>. In your class, do:</p>

<pre><code>private static final Queue&lt;Long&gt; ALARM_QUEUE = new LinkedList&lt;Long&gt;();
</code></pre>

<p>Problem solved!</p>
"
"14106648","<p>Here's the Javadoc for StringBuilder:</p>

<ul>
<li><a href=""http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/StringBuilder.html"" rel=""nofollow"">http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/StringBuilder.html</a></li>
</ul>

<p>Based on the code you've posted, I'm guessing:</p>

<p>1) You're saving the letters needed (e.g. the letters in the word ""apple"") to getLetters.</p>

<p>2) getLetters is type StringBuilder</p>

<p>3) if userCharInput is type ""char"", then indexOf() probably <em>won't</em> give the expected results</p>

<p>4) Substitute ""if"" for your ""else if""</p>

<p>SUGGESTIONS:</p>

<p>Try changing ""getLetters"" to a ""String"", and see if that helps.</p>

<pre><code>while (...) {
  ...
  //getLetters is the StringBuilder, and the userCharInput is a String.
  if(getLetters.indexOf(userCharInput)==-1)  {
     playerCounter++;
  }
  // Debug: comment this out once it's working
  System.out.println (""userCharInput="" + userCharInput + "", playerCounter="" + playerCounter);
  if(playerCounter == 3) {
    System.out.println(""All lives are gone! Game Over!"");
    playerCounter = 1; //resets the playerCounter to one.
    System.exit(0);
  }
  ...
}
</code></pre>
"
"14106892","<p>You can declare objects as <code>public static</code> and reference them from another class.  <br/><br/>ActivityA:</p>

<pre><code>public static int testIntegerA = 42;

Intent intentInteger = new Intent(getActivityContext(), ActivityB.class);
intentInteger.putExtra(""INTENT_EXTRA"", testIntegerA);
startActivity(intentInteger);
</code></pre>

<p>ActivityB:</p>

<pre><code>public static int intentInt, staticInt;

staticInt = ActivityA.testIntegerA;
intentInt = getIntent().getExtras().getInt(""INTENT_EXTRA"");
</code></pre>

<p>Now both <code>intentInt</code> and <code>staticInt</code> equal 42;</p>
"
"17169688","<p>How about </p>

<pre><code>float new = Math.round( 10.0 * f ) / 10.0;
</code></pre>

<p>It won't be precise, as floats/doubles are just sums of finite series of 1/2^n, but might be good enough for you.</p>

<p>Perhaps you should be thinking about <a href=""http://docs.oracle.com/javase/6/docs/api/java/text/NumberFormat.html"" rel=""nofollow"">presenting the float</a> with one significant decimal point and keep full precision internally?</p>

<p>Cheers,</p>
"
"17197523","<p>Have your tried changing your loop condition to </p>

<p>i &lt; inputNeurons.size() - 1</p>

<p>as in the below example?</p>

<pre><code>for(int i = 0; i&lt;inputNeurons.size() - 1; i++) {
    inputNeurons.get(i).ResetInput();
    inputNeurons.get(i).ReceiveInput(inputs.get(i));
}
</code></pre>
"
"14203686","<p>I see how you are trying this but possibly a while loop would be easier and then just use string operations to create each line as you want them.</p>

<pre><code>   public static void pyramid(){
        line=1;
        i=1;
        while(line &lt;= 5){
                      System.out.println(""*""*i);
                      i +=2;
                      line +=1;
                     }
    }
</code></pre>

<p>Also I dont know if you mean by ""increase the stars by 3"" do you mean that the number of stars per row would go (1,4,7,10) or accelerate by 3 like num+2, num+5, num+8 like (1,3,8,16).</p>

<p>If you wanted to do it the second way, this should work.</p>

<pre><code>public static void pyramid(){
            line=1;
            i=1;
            a=3;
            while(line &lt;= 5){
                          System.out.println(""*""*i);
                          i += 2+a*(i-1);
                          line +=1;
                         }
        }
</code></pre>
"
"14216780","<p>Here are some of my thoughts about how to make a qualified unit test:</p>

<p>First of all, try to make your a implementer class fully tested, which means all of its methods should be covered by the UT. Doing this will save you a lot of time when you need to refactor your code. For your case, it could be :</p>

<pre><code>class FooTest {
    protected Foo fooImpl;

    @Test
    public void testGetBaz() {
    ...
    }

    @Test
    public void testDoBar() {
    ...
    }
</code></pre>

<p>}</p>

<p>You will find you need to check the internal state of your class and there is nothing wrong it for UT should be a kind of white-box test.</p>

<p>Second, all methods should be tested separately and not depend on each other. In my opinion, for your code posted above, it looks like more than a function test or an integration test, but it's also necessary.</p>

<p>Third, I don't think it's a good practice to use spring or other container to assemble the target object for you, which will make your test running relatively slow, especially when there a load of tests to run. And your class should intrinsically be pojo and you can complete the assembling in another method in your test class if your target object is really complex.</p>

<p>Fourth, if the parent interface of some class is really big, Dividing the test methods into several groups is something you should do. <a href=""http://weblogs.java.net/blog/johnsmart/archive/2010/04/25/grouping-tests-using-junit-categories-0"" rel=""nofollow"">Here</a> is more info.</p>
"
"14231713","<p>Just use <code>myList.remove(myObject)</code>.</p>

<p>It uses the equals method of the class. See <a href=""http://docs.oracle.com/javase/6/docs/api/java/util/List.html#remove(java.lang.Object"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/util/List.html#remove(java.lang.Object</a>)</p>

<p>BTW, if you have more complex things to do, you should check out the guava library that has dozen of utility to do that with predicates and so on.</p>
"
"17315946","<p>You can make this method static.</p>

<pre><code>public static void startChronometer(){
        mChronometer.start();
        showElapsedTime();
    } 
</code></pre>

<p>you can call this function in other class as below:</p>

<pre><code>MainActivity.startChronometer();
</code></pre>

<p>OR</p>

<p>You can make an object of the main class in second class like,</p>

<pre><code>MainActivity mActivity = new MainActivity();
mActivity.startChronometer();
</code></pre>
"
"17317359","<p><strong>It is possible to create schemas automatically. Add the following property to your Hibernate config xml:</strong> </p>

<pre><code>&lt;property name=""hibernate.hbm2ddl.auto""&gt;update&lt;/property&gt;
</code></pre>

<p><strong>OR</strong></p>

<pre><code>&lt;prop key=""hibernate.hbm2ddl.auto""&gt;update&lt;/prop&gt;
</code></pre>

<p>As per the above property, Hibernate will only create the database if it doesn't already exist, and will update any existing tables to match your current domain model. </p>

<p><strong>Another choice will be this:</strong></p>

<pre><code> &lt;property name=""hibernate.hbm2ddl.auto""&gt;create-drop&lt;/property&gt;
</code></pre>

<p>The above property implies that Hibernate will create a brand-new database each time you start the application</p>

<p><strong>UPDATE: USEFUL URLs</strong></p>

<p><a href=""http://manikandanmv.wordpress.com/2011/04/13/hibernate-basics-simple-example/"" rel=""nofollow"">http://manikandanmv.wordpress.com/2011/04/13/hibernate-basics-simple-example/</a></p>

<p><a href=""http://khartig.wordpress.com/2008/12/20/dynamic-schema-and-database-creation-with-netbeans-hibernate-and-ejb3/"" rel=""nofollow"">http://khartig.wordpress.com/2008/12/20/dynamic-schema-and-database-creation-with-netbeans-hibernate-and-ejb3/</a></p>

<p><a href=""http://blog.sencide.com/2011/03/hibernate-tutorial-for-beginners.html"" rel=""nofollow"">http://blog.sencide.com/2011/03/hibernate-tutorial-for-beginners.html</a></p>

<p><a href=""http://www.jroller.com/eyallupu/entry/hibernate_s_hbm2ddl_tool"" rel=""nofollow"">http://www.jroller.com/eyallupu/entry/hibernate_s_hbm2ddl_tool</a></p>

<p><a href=""http://hannelita.wordpress.com/2012/03/21/hibernate-cfg-hibernate-4-0-0/"" rel=""nofollow"">http://hannelita.wordpress.com/2012/03/21/hibernate-cfg-hibernate-4-0-0/</a></p>
"
"17328788","<p>I can clearly see at least one place, where you are simply wasting CPU cycles:</p>

<pre><code>for (int i = 0; i &lt; keys.length; i++) {
    if (hashMap2.containsKey(keys[i])) {
         ans += hashMap.get(keys[i]) * hashMap2.get(keys[i]);
    }
}

float hashLength = 0;
for (int i = 0; i &lt; keys.length; i++) {
     hashLength += (hashMap.get(keys[i]) * hashMap.get(keys[i]));
}
</code></pre>

<p>here you have 2 cycles of the same bounds on the same 2 hashMaps. Why won't you just do it in one cycle:</p>

<pre><code>float hashLength = 0;
int hm = 0;
for (int i = 0; i &lt; keys.length; i++) {
    hm = hashMap.get(keys[i])*hashMap2.get(keys[i]);
    hashLength += hm;
    if (hashMap2.containsKey(keys[i])) {
         ans += hm;
    }
}
</code></pre>

<p>By the way, is there any special reason of using hashMap? Or you can do with some simpler sort of array?</p>
"
"14291097","<p>in the final variables <code>interaface1.x</code>, <code>interface2.x</code>; if we take <code>x</code> of <code>interface1</code> the object referred might be different than the second interface. </p>

<p>But In <code>method1()</code> if we take any interface the body of method will be same, as <code>interface1.method1()</code>, is same as <code>interface2.mathod1()</code>.
But in the other hand with <code>x</code>.
<code>interface1.x</code> is not same as <code>interface2.x</code></p>
"
"17337202","<p>Catching <code>Throwable</code> and <code>finally</code> are not interchangeable.</p>

<ul>
<li><p>Code in a <code>finally</code> clause will be executed on exit from the block <em>regardless</em> of the reason for exit. It will be executed if no exception is thrown. It is therefore the appropriate location for cleanup code that must always be executed.</p></li>
<li><p>The <code>catch</code> <code>Throwable</code> code will be executed <em>only</em> if an exception is thrown. </p></li>
</ul>
"
"14323778","<p>You could disable Auto activation via the check box in</p>

<pre><code>Window -&gt; Preferences -&gt; Java/Editor/Content Assist
</code></pre>

<p>and activate the auto-complete feature on demand. The default hotkey for this is </p>

<p><kbd>CTRL</kbd>+<kbd>Space</kbd></p>
"
"14332427","<p>For setting header in java, you can use:</p>

<pre><code>request.setHeader(attributeName, attributeValue);
</code></pre>

<p>And for redirecting to another page, you can use:</p>

<pre><code>request.sendRedirect(URL);
</code></pre>
"
"17410767","<p>This should do it:</p>

<pre><code>^(.+) (-?\$\d*\.\d\d)$
</code></pre>

<p>The second half of the regex matches the dollar amount, including the optional - sign. The first part takes everything else except the separating space.</p>
"
"14428287","<p>I think it depends on what your constructor is doing.  If your constructor is merely doing raw setting of variables, then I don't think you need to include setters for them.</p>

<p>However, if your constructor code is doing any kind of business logic prior to setting the value of a variable, then I think this warrants creating a setter for at least the variable in question (if not all of them).</p>

<p>For example, if your constructor code does this, then don't include any setters:</p>

<pre><code>public MyClass( String varA, String varB, int varC )
{
  this.varA = varA;
  this.varB = varB;
  this.varC = varC;
}
</code></pre>

<p>But if your code does this, you should include a setter to decouple the logic and make it cleaner:</p>

<pre><code>public MyClass( String varA, String varB, int varC )
{
  if ( varA == null )
  {
    this.varA = '(empty)';
  }
  else
  {
    this.varA = varA;
  }

  this.varB = varB;

  if ( varC &lt; 0 )
  {
    callSomeMethod();
  }

  this.varC = varC;
}
</code></pre>

<p>This kind of logic warrants creating setters.  </p>
"
"17553484","<p>Not only is <code>s</code> only visible in the loop in the second but much more importantly, a new <code>s</code> is instantiated every run of the loop.  You may want this, you may not. There will be a performance cost to new instantiations, but it is safer if you want to make sure it is garbage collected once you leave the loop and you don't try to access it elsewhere.</p>
"
"14509719","<p>You can also do it by hand:</p>

<p>The first method can be described with a recurrence relation of <code>F(x) = F(x-1) * x</code> which generates the pattern...</p>

<pre><code>F(x) = F(x-1) * x
= F(x-2)*x*(x-1)
= F(x-3)*x*(x-1)*(x-2)
. . .
= k*n
</code></pre>

<p>which is O(n).</p>

<p>Obviously, the second method can be described by O(n) as well, which means they are in the same upper bound. But this can be used as a quick check before implementing timing solutions.</p>
"
"17686252","<pre><code>public String addAnd(String[] s)
{
    String result = """";
    for (int i = 0; i &lt; s.length - 2; i++)
    {
        result += s[i] + "", ""
    }
    result += s[s.length - 2];
    result += ("" &amp; "" + s[s.length - 1]);
    return result;
}
</code></pre>

<p>This should do the trick.</p>
"
"14598991","<p>You are copying bytes into char (which use twice the space) and back into bytes again.</p>

<pre><code>InputStream in = context.openFileInput(""data.txt"");
ByteArrayOutputStream bais = new ByteArrayOutputStream();
byte[] bytes = new byte[8192];
for(int len; (lne = in.read(bytes) &gt; 0;)
   bais.write(bytes, 0, len);
in.close();
return bais.toByteArray();
</code></pre>

<p>This will half your memory requirement but it can still mean you run out of memory.  In this case you have to either</p>

<ul>
<li>increase your maximum heap size</li>
<li>process the file progressively instead of all at once</li>
<li>use memory mapped files which allows you to ""load"" a file without using much heap.</li>
</ul>
"
"14599065","<p>This solution will test the free memory before loading...</p>

<pre><code>File test = new File(""c:/tmp/example.txt"");

    long freeMemory = Runtime.getRuntime().freeMemory();
    if(test.length()&lt;freeMemory) {
        byte[] bytes = new byte[(int) test.length()];
        FileChannel fc = new FileInputStream(test).getChannel();
        MappedByteBuffer mbb = fc.map(FileChannel.MapMode.READ_ONLY, 0, (int) fc.size());

        while(mbb.hasRemaining()) {
            mbb.get(bytes);
        }
        fc.close();
    }
</code></pre>
"
"17693545","<p>use a foreach loop</p>

<pre><code>foreach(var x in route)
{

}
</code></pre>
"
"14606128","<p>Maybe the <code>java.util.Stack</code> is more useful here. What is the usage of your list?</p>
"
"17696731","<p>I'm tempted to suggest nesting a for loop:</p>

<pre><code>for (int i = 0; i &lt; resultList.size(); i++)
{
  for(int j = 0; j &lt; resutList.get(i).size(); j++){
    System.out.println(""-&gt;""+resultList.get(i).get(j));
  }         
}
</code></pre>
"
"17702099","<p>If the beans (A, B) you are talking about are <code>SessionScope</code> its no problem at all, they will be selected correctly.</p>

<pre><code>public class BusinessLogic {

  private BaseClassOfBeanAandB bean;

  public void methodCalledByUserAorB() {
    bean.doFoo();
  }

}
</code></pre>
"
"17811622","<p>Isn't</p>

<pre><code>nextIndex() 
</code></pre>

<p>what you are looking for instead of y? 
P.s. using ListIterator</p>

<p>Edited:
this is what I meant in code:</p>

<pre><code>Iterator&lt;E&gt; it = list.iterator();
while (it.hasNext()){
    process(it.next(), it.previousIndex());
}
</code></pre>
"
"17824593","<p>I would use bitwise and: </p>

<pre><code>if ((number &amp; 1) == 0) {
    // Even.
} else {
    // Odd.
}
</code></pre>

<p>This is basically checking to see if the low order bit is zero.</p>

<p>This is much faster than using the modulus operator (<code>%</code>).</p>
"
"17834232","<p>As the first answer, </p>

<pre><code>List&lt;? extends SomeObject&gt; l;
</code></pre>

<p>must contains Object that inherit from SomeObject, not some direct SomeObject.</p>
"
"14749512","<p>You probably want to split on '],[', not on the whole pattern you are searching. Try this:</p>

<pre><code>String[] parts = mainstr.split(""\\\\],\\\\[""); // Never sure when to use double or quadruple slashes.
</code></pre>

<p>After that, you might need to replace the brackets.</p>
"
"14773087","<pre><code>while (rs.next()) {

     System.out.println(""done5"");    

     String username=rs.getString(1);
     String password=rs.getString(2);    

     if(user.equals(username) &amp;&amp; pass.equals(password))
     {
         response.sendRedirect(""LoginSuccess.jsp"");
         return;

     }  
     else
     {
        JOptionPane.showMessageDialog(null, ""retry"");
     }
break;
     }
</code></pre>

<p>This is not a correct implementation but should solve your problem.</p>
"
"14773111","<p>Make your query so that you select only the results having the right username and password:</p>

<pre><code>String queryTest = ""select username,password from login where username=? and password=?"";
PreparedStatement pstmt = conn.prepareStatement(queryTest);
pstmt.setString(1, user);    
pstmt.setString(2, pass);
</code></pre>
"
"17887492","<pre><code>    public static void main(String []s)
     {
        for(i=0;i&lt;=200;i=i+2)
          {
            sum=sum+i;
          }
     System.out.println(sum)
    }
</code></pre>

<p>Use this approach for all three condition matters</p>
"
"17889917","<p>First of all <code>java.util.Date</code></p>

<blockquote>
  <p>Allocates a Date object and initializes it so that it represents the time at which it was allocated, measured to the <strong>nearest millisecond</strong>.</p>
</blockquote>

<p>So, if you have variable <code>milliseconds</code></p>

<ol>
<li><p>Somehow calculate number of milliseconds between your date and Jan 1, 1970 (Unix epoch) <code>diff</code></p></li>
<li><p>Use <code>Date(long)</code> constructor</p>

<pre><code>new Date(milliseconds - diff);
</code></pre></li>
</ol>
"
"14791182","<p>try this instead of onCancelListener():</p>

<pre><code>@Override
public void onBackPressed() {
   super.onBackPressed();
   //rest of code here
}
</code></pre>
"
"17965492","<p>You can use Spring's Query structure:</p>

<pre><code>Query query = new Query();
query.addCriteria(Criteria.where(""id"").is(10).orOperator(Criteria.where(""id"").is(20));
this.client.findOne(query, clazz);
</code></pre>
"
"18001256","<p>Corrected code:</p>

<pre><code> public void addString(String... myString) {
       StringBuilder sb = new StringBuilder();

       for(int i = 0; i &lt; myString.length; i++) {
          if(i = 0){
             sb.append(""("" + myString[i])
          }else if (i = myString.length-1){
             sb.append(myString[i] + "")"");
          }else{
             sb.append(myString[i])
          }
          sb.append(""("" + myString[i] + "" AND "" + myString[i+1] + "")"");
       }

       System.out.println(sb);
    }
</code></pre>

<p><strong>EDIT</strong>: Here is a better version based off of one of the answers above:</p>

<pre><code>public void addString(String[] myString) 
    {
       StringBuilder sb = new StringBuilder();
       sb.append(""("");
       for(int i = 0; i &lt; myString.length; i++){
          sb.append(myString[i] + "" AND "");
       }
       sb.append("")"")

       System.out.println(sb);
    }
</code></pre>
"
"14817260","<p>When you compare two instances using ==, you are actually comparing their memory addresses to see if they are references to the same object.</p>

<p>Assume if you create two object as bellow,</p>

<p>Object ob1 = new Object();
Object ob2 = new Object();</p>

<p>now ob1 == ob2 return false. Because ob1 and ob2 refers to different memory addresses.</p>

<p>but if you assign as bellow
ob1 = ob2, then (ob1 == ob2) returns true. Because both refers to the same memory address.</p>

<p>If you compare two objects using equals(), then the JVM checks whether you override the equals method. If not it calls the Object's equals method and return boolean accordingly.</p>

<p>If you override the equals() then the jvm returns the boolean according to the implementation.</p>

<p>You have the Vehicle class as bellow,</p>

<pre><code>public class Vehicle {

    private int modelNo;
    private String color;

    /**
     * @return the modelNo
     */
    public int getModelNo() {
        return modelNo;
    }

    /**
     * @param modelNo
     *            the modelNo to set
     */
    public void setModelNo(int modelNo) {
        this.modelNo = modelNo;
    }

}
</code></pre>

<p>now you create two Vehicle instances as bellow and call the equal()</p>

<pre><code>Vehicle vehicle1 = new Vehicle();
vehicle1.setModelNo(111);

Vehicle vehicle2 = new Vehicle();
vehicle2.setModelNo(111);

System.out.println(vehicle1.equals(vehicle2));
</code></pre>

<p>The output should be false, because we dont override the equals() and it calls the Object's equals() and it checks the memory address and returns false.</p>

<p>Now we modify the Vehicle class as bellow,</p>

<pre><code>public class Vehicle {

    private int modelNo;
    private String color;

    /**
     * @return the modelNo
     */
    public int getModelNo() {
        return modelNo;
    }

    /**
     * @param modelNo
     *            the modelNo to set
     */
    public void setModelNo(int modelNo) {
        this.modelNo = modelNo;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((color == null) ? 0 : color.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (!(obj instanceof Vehicle))
            return false;
        Vehicle other = (Vehicle) obj;
        if (color == null) {
            if (other.color != null)
                return false;
        } else if (!color.equals(other.color))
            return false;
        return true;
    }

}
</code></pre>

<p>Now we create two Vehicle instances with the same modelNo and invoke the equals() on one of the instances as bellow,</p>

<pre><code>Vehicle vehicle1 = new Vehicle();
vehicle1.setModelNo(111);

Vehicle vehicle2 = new Vehicle();
vehicle2.setModelNo(111);

System.out.println(vehicle1.equals(vehicle2));
</code></pre>

<p>Now the output should be true. Because we override the equals method in Vehicle class. So, when we call the equals method on any instance of Vehicle, then the overiden equals() will be called. It compares the modelNo in both Vehicle instances and return the boolean accordingly.</p>

<p>Note: If you override the equals() then thr best practice to override the hashcode() also.</p>
"
"18001272","<p>Try this:</p>

<pre><code>public void addString(string[] myString) {
  StringBuilder sb = new StringBuilder();

   sb.Append(""("");
   for(int i = 0; i &lt; myString.length; i++) {
      sb.Append(myString[i] + "" AND "");
   }

   string result = sb.ToString().Substring(0, sb.ToString().LastIndexOf(""AND""));
   result += "")"";

   System.out.println(result);
}
</code></pre>
"
"14820097","<p>You can do <code>private T[] tarray;</code>, But you cannot assign it to <code>(T[]) new Object[size];</code>. How can an array of Object be same an array of any other class.
<code>T</code> is not even  there after compilation. 
It is called type erasure. E.g if you do </p>

<pre><code>List&lt;Person&gt; persons = new ArrayList&lt;Person&gt;();
</code></pre>

<p>It becomes <code>List persons = new ArrayList()</code> after compilation.</p>
"
"14838381","<p>It is similar to ask ""Is there a way to initialize a generic object: <code>new T()</code>?""</p>

<p>Of course it is impossible, as the compiler does not know what the type is of it.</p>

<p>Array is the same, its type relies on its elements. If the type of its elements is unknown, the type of itself is unknown.</p>

<p>Those classes which can take generic types like <code>List</code>, <code>Set</code>, <code>Map</code>, etc. are different. They have their own classes as types and they are dynamic, so you can initialize one like <code>new ArrayList&lt;T&gt;()</code>.</p>

<hr>

<p>You can try on this:</p>

<pre><code>public class Test {
    public static void main (String args[]) {
        int[] i = new int[3];
        short[] s = new short[4];
    ArrayList&lt;String&gt; a = new ArrayList&lt;String&gt;();

        System.out.println(i.getClass().getName());
        System.out.println(s.getClass().getName());
        System.out.println(args.getClass().getName());
        System.out.println(a.getClass().getName());
    }
}
</code></pre>

<p>You will see the types of elements are already combined with the arrays, while not combined with ArrayList.</p>
"
"18086078","<p>if you want to exit the loop if either continueSurvey is 0 OR i=3
you have to write the while loop like this:</p>

<pre><code>while((continueSurvey != 0) || (i &lt; 3)) {
    ...
}
</code></pre>

<p>the &amp;&amp; (and) operator symbolises that both conditions have to be true in order for the loop to exit not one of them (|| or).</p>
"
"14978849","<p>You need to use a double <code>for</code> here. Something like this:-</p>

<pre><code>for(int i = 0; i &lt; pixels.length; i++){
        for(int i = 0; i &lt; pixels[i].length; i++){
               threshold += (double)pixels[i][j];
        }
}
</code></pre>
"
"18118574","<p>well the most convenient way to do this is by making the  <code>sppAcronym</code> as private variable and providing public setters and getters for the same , this way u can create an object of the class y.java like </p>

<pre><code>y obj=new y();
</code></pre>

<p>and use the setter and getter in your x.java 
an example can be :-</p>

<p>in y.java</p>

<pre><code>private String sppAcronym;
public void setsppAcronym(String sppAcronym)
{
this.sppAcronym=sppAcronym;
}
public String getsppAcronym()
{
return sppAcronym;
}
</code></pre>

<p>in x.java </p>

<pre><code>y obj=new y();

obj.setsppAcronym(getAcronym);
String sppAcronym=obj.getsppAcronym();
</code></pre>
"
"18135233","<p>I would do this:</p>

<ul>
<li>make array</li>
<li>convert to string</li>
</ul>

<p>then this code</p>

<pre class=""lang-java prettyprint-override""><code>for (String s: list1) {
    boolean obtained = false;
    double tempD;

    try {
        tempD = Double.parseDouble(s); 
        obtained = true;
    } catch (Exception e) {
        e.printStackTrace();
    }

    if (obtained) {
        list2.add(tempD);
    }
}
</code></pre>
"
"18185439","<p><code>Object class</code> has a reference to a class, but <code>obj</code> has the reference to an instance only, so you should use the method <code>obj.getClass()</code></p>

<p><strong>PS:</strong> If downvoting, please let me know where is my fault.</p>
"
"15055144","<p><code>for (String s : ar) {
if (s.startsWith(""A"")) {/* You code here */}}</code></p>

<p>Should be :-</p>

<pre><code>for(int i = 0; i &lt; ar.length; i++){
        if(ar[i].startsWith(""A"")){
            System.out.println(""Found in index "" + i);
        }
}
</code></pre>
"
"15118790","<p>You can try this a well:</p>

<pre><code>package com.stack.overflow.works.main;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;

/**
 * @author sarath_sivan
 */

public class DuplicatesFinder {

    public static void findDuplicates(String inputString) {
        Map&lt;Character, Integer&gt; duplicatesMap = new HashMap&lt;Character, Integer&gt;(); 
        char[] charArray = inputString.toCharArray();
        for (Character ch : charArray) {
            if (duplicatesMap.containsKey(ch)) {
                duplicatesMap.put(ch, duplicatesMap.get(ch) + 1);
            } else {
                duplicatesMap.put(ch, 1);
            }
        }
        Set&lt;Character&gt; keySet = duplicatesMap.keySet();
        for (Character ch: keySet) {
            if (duplicatesMap.get(ch) &gt; 1) {
                System.out.println(""[INFO: CHARACTER "" + ch + "" IS DUPLICATE, OCCURENCE: "" + duplicatesMap.get(ch) + "" TIMES]"");
            }
        }
    }

    public static void main(String[] args) {
        DuplicatesFinder.findDuplicates(""sarath kumar sivan"");
    }

}
</code></pre>

<p>It will produce the simple test result for the input string ""sarath kumar sivan"" like this:</p>

<pre><code>[INFO: CHARACTER   IS DUPLICATE, OCCURENCE: 2 TIMES]
[INFO: CHARACTER s IS DUPLICATE, OCCURENCE: 2 TIMES]
[INFO: CHARACTER r IS DUPLICATE, OCCURENCE: 2 TIMES]
[INFO: CHARACTER a IS DUPLICATE, OCCURENCE: 4 TIMES]
</code></pre>
"
"18249757","<p><code>Collections.reverse(listOne);</code> passes the reference to <code>listOne</code>(the object) by value, which is how one defines ""pass by reference"". Everything other than primitives is passed this way: by reference. It does not try to avoid it, it is only different from C++ in that it doesn't <em>explicitly</em> use pointers.</p>

<p>EDIT: Okay, I think I see where you're coming from.</p>

<pre><code>private static void changelist(List&lt;Integer&gt; list) {
    list.add(4);//This modifies the list object
    list = new ArrayList&lt;Integer&gt;();//This modifies the local copy of the reference to the list object
    list.add(5);
}
public static void main(String[] args) {
    List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
    list.add(1);
    list.add(2);
    list.add(3);
    System.out.println(list);//output is [1,2,3]
    //This copies the value of the reference. 
    //If you modify the object in the underlying 
    //function, changes will be preserved when you return
    //However if you modify what the reference points to,
    //the function will only modify the local copy
    changelist(list);
    System.out.println(list);//output is [1,2,3,4]

}
</code></pre>
"
"18256818","<p>If you skip step 1 and just do the shuffeling immediately I think you will have the fastest solution.</p>

<pre><code>int range = 1000;
List&lt;Integer&gt; arr = new ArrayList&lt;Integer&gt;(range);
for(int i=0;i&lt;range;i++) {
    arr.add((int)(Math.random()*i), new Integer(i));
}
</code></pre>
"
"18297873","<p>Please add <code>throws IOException</code> after main method's signature </p>

<pre><code>public static void main(String[] args) throws IOException
</code></pre>

<p><strong>For your Next Question :</strong></p>

<pre><code>import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Progetto {

    public static void main(String args[]) throws IOException {
        int a[] = null;
        int b[] = null;
        try {
            // Open the file that is the first
            // command line parameter

            FileInputStream fstream = new FileInputStream(""prova.txt"");
            BufferedReader br = new BufferedReader(new InputStreamReader(fstream));
            String strLine = br.readLine(); // step 1

            if (strLine != null) {
                String[] delims = strLine.split("",""); // step 2

                // step 3
                a = new int[Integer.parseInt(delims[0])];
                b = new int[Integer.parseInt(delims[1])];

                // step 4
                for (int i = 0; i &lt; a.length; i++)
                    a[i] = Integer.parseInt(br.readLine());

                // step 5
                for (int i = 0; i &lt; b.length; i++)
                    b[i] = Integer.parseInt(br.readLine());

                br.close();
            }// step 6
        } catch (Exception e) {// Catch exception if any
            System.err.println(""Error: "" + e.getMessage());
        }
        // step 7
        System.out.println(Arrays.toString(a));
        System.out.println(Arrays.toString(b));
    }

}
</code></pre>
"
"15203778","<p>The answer is no rtf
Why you don't use Google to find it yourself
Why you don't use the ide to show you the documentation
</p>

<p>i thinlk override equals solve the problem but is a hack</p>

<pre><code>import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Main {

    public static void main(String arg[]) {
        ArrayList&lt;Dog&gt; firstGroup = new ArrayList&lt;Dog&gt;();

        firstGroup.add(new Dog(""Rintintin""));
        firstGroup.add(new Dog(""Courage""));
        firstGroup.add(new Dog(""Scooby-Dooby-Do""));

        ArrayList&lt;Dog&gt; secondGroup = new ArrayList&lt;Dog&gt;();

        secondGroup.add(new Dog(""fido""));
        secondGroup.add(new Dog(""Courage""));
        secondGroup.add(new Dog(""Rintintin""));

        List&lt;Dog&gt; filterByName = filterByName(firstGroup,secondGroup);

        System.out.print(Arrays.toString(filterByName.toArray()));
    }

    private static List&lt;Dog&gt; filterByName(ArrayList&lt;Dog&gt; firstGroup, ArrayList&lt;Dog&gt; secondGroup) {
        List&lt;Dog&gt; result=new ArrayList&lt;&gt;();
        for (Dog orginal : firstGroup) 
            for (Dog finDog : secondGroup) 
                if(orginal.getName().equals(finDog.getName()))
                    result.add(new Dog(orginal.getName()));
        return result;
    }


}
</code></pre>
"
"18323875","<p>Regex is not the best choice to do this - or to say it right away: its not possible (in java).</p>

<p>Regex might be able to change the formating of a given String, using backreferenes, but it can not generate <em>content aware</em> backreferences. In other words: You would require some kind of recursion (or iterative solution) to resolve an infinite depth of nested parenthesis.</p>

<p>Therefore, you would need to write your own parser, that is able to handle your input.</p>

<p>While replacing the <code>DDT1234</code> Strings with the appropriate <code>x(DDT1234)</code> representation is easily doable (its a single backreference for ALL occurrences), you need to take care for correct nesting on your own. </p>

<p>For parsing nested expressions, you may want to have a look at this example:
<strong>Parsing an Infix Expression with Parentheses (like ((2*4-6/3)*(3*5+8/4))-(2+3))</strong>
<a href=""http://www.smccd.net/accounts/hasson/C++2Notes/ArithmeticParsing.html"" rel=""nofollow"">http://www.smccd.net/accounts/hasson/C++2Notes/ArithmeticParsing.html</a></p>

<p>Its just a (verbal) example of how to handle such a given string. </p>
"
"18336107","<pre><code>public static void main(String[] args) {
    // TODO Auto-generated method stub
     String[] stringArrays ={""a"",""s"",""d"",""f"",};
     for (int i = 0; i &lt; stringArrays.length; i++) {
        System.out.println(stringArrays[i]);
    }


}
</code></pre>
"
"18350772","<p>what about this snippet ?</p>

<pre><code>public static void strDiff(String hear, String dear){
    String[] hr = dear.split(""\n"");
    for (String h : hr) {
        if (!hear.contains(h)) {
            System.err.println(h);
        }
    }
}
</code></pre>
"
"18355456","<p>Firs you should create getters and setters.Then</p>

<pre><code> class Circle{
    double radius;
    public double getRadius(){
    return radius;
    }
    public void setRadius(double r){
    radius=r;
    }
    void CircleMeasurement(){
        radius = r;
    }
....
    r = in.nextInt;
        Circle circle1 = new Circle();
    circle1.setRadious(r);
</code></pre>
"
"18372518","<p>When you declare a class without a access specifier it is by package-default. This means you can access that class in that package only. </p>

<p>If you want to access class from another package, make class <strong>public</strong>, i.e.</p>

<pre><code>public class SampleClass
</code></pre>

<p>Similarly, in your case, as you want to access the Interface as well, you have to make that interface public as well.</p>

<p>This will solve your problem.</p>
"
"18384944","<p><code>&lt;E&gt;</code> declares a type argument.<br>
You can only use it when creating a generic type or method.</p>

<p><code>&lt;? ...&gt;</code> is a wildcard <em>value</em> of a type argument.<br>
You can only use it when creating a closed generic type.</p>
"
"18407557","<p>To init String[][], you should init the list(array) of String[]</p>

<p>So you need to define a list</p>

<pre><code>List&lt;String[]&gt;  string = new List&lt;String[]&gt;();
for (int i = 0;....)
{
String[] _str = new String[numbers];
_str[0] = ...
string.append(_str);
}
</code></pre>
"
"18443518","<p>If your file is kind of below format:</p>

<pre><code>name=foo.cf
xyz=abc
xyz1=abc1
version=7.1
</code></pre>

<p>I mean key=value kind of content. Then the below code is a sophisticated way of retrieving the version.            </p>

<pre><code>            File file = new File(""foo.cf"");
            InputStream inputStream = null;
            HashMap&lt;String, String&gt; defPropMap = new HashMap&lt;String, String&gt;();
            try {
                inputStream = new FileInputStream(file);
                Scanner scanner = new Scanner(inputStream);
                while (scanner.hasNextLine()) {
                    String[] columns = scanner.nextLine().split(""="");
                    if(columns.length == 2)
                        defPropMap.put(columns[0].trim(), columns[1].trim());
                    else
                        defPropMap.put(columns[0].trim(), null);
                }

            } catch (FileNotFoundException e) {
                logger.warn(""Caught FileNotFoundException"", e);

            }
            finally{
                try {
                    inputStream.close();
                } catch (IOException e) {
                    logger.warn(""Caught IOException"", e);

                }
            }
</code></pre>

<p>otherswise line by line read.</p>
"
"15338352","<p>You should make sure that your input really is an integer (i.e. ""16""), or if it's out of Integer range, then use <code>Double.parseDouble()</code> or <code>Long.parseLong()</code></p>
"
"15338432","<p>You are getting the <code>java.lang.NumberFormatException: For input string: ""002428859600""</code> because, the number <code>002428859600</code> cannot be represented as a 32-bit integer (type <code>int</code>). It can be represented as a 64-bit integer (type <code>long</code>). long literals in Java end with an ""L"": <code>002428859600L</code></p>
"
"18452815","<p>I have solved this problem.
The codes update as following:  </p>

<pre><code>String sql= null;
if(val.isEmpty()){
System.out.println(val);
System.out.println(""Insert ts: "" + ts + "" val: null"");
sql= ""INSERT INTO "" + table + ""(ts,val,pointId)"" + "" VALUES"" + ""("" + ""'"" + ts + ""'"" + "", "" + ""NULL"" + "" , "" + ""'"" + pointId + ""'"" + "")"";
}
else{
System.out.println(""Insert ts: "" + ts + "" val: "" + val);
sql= ""INSERT INTO "" + table + ""(ts,val,pointId)"" + "" VALUES"" + ""("" + ""'"" + ts + ""'"" + "", "" + ""'"" + val + ""'"" + "", "" + ""'"" + pointId + ""'"" + "")"";
}

Statement st = (Statement) conn.createStatement();  //create the instances of statement
count = st.executeUpdate(sql);
</code></pre>

<p>Basically, if insert null into database, just do insert into table(val) value(NULL).</p>
"
"18461014","<p>I have made a jar with and keep it on desktop.Then,I double clicked on the jar and it working fine for me.</p>

<p><em>How I and what I have monintored:</em> In my main class, perform some operation and at the end I add on <code>Thread.sleep(25000);</code> to hold the program for few moments. After every double click on the exported jar I found one new <strong>javaw.exe process</strong> added in the system process tree. I have noticed it on Task manager. and after 25000ms respective javaw.exe process ended. As my application does not cointain any GUI that's why I have not seen any GUI changes for the respective process. I'm Confident that if my application have some GUI, I will surely get the respective GUI window on every run.</p>

<p><em>Common mistakes :</em> when we export a project from Eclipse as Runnable JAR file, it is exported with selected Eclipse launch configuration and Eclipse specific launch wrappers. Now if the configuration does not match when you are trying to run it via double-click you will not be able to see the error, If you run it from CMD then surely you will get the error log. </p>

<p><em>To create standard executable JAR file :</em> To create a standard executable JAR file, you can export as <strong>JAR file</strong> and <strong>specify the main class</strong> in last screen of the wizard.</p>

<p>That's working for me fine. I used the same jar from different system and keeping it different location.</p>
"
"18465263","<p>Depending on the situation, you could also just leave the method blank, if it is <code>void</code>.</p>
"
"15354792","<p>Try this (note I'm not using generics because you can't have generic arrays):  </p>

<pre><code>ArrayList entered = new ArrayList();
Scanner in = new Scanner(System.in);
while(true)
{
    try
    {
        System.out.print(""Enter a number (enter a non-number to stop)\n&gt;"");
        entered.add(in.nextInt());
    }
    catch(InputMismatchException e)
    {
        break;
    }
}
List[] lists = new List[entered.size() / 1000 + 1];
int currentElement = 0;
for(int i = 0; i &lt; lists.length; ++i)
{
    lists[i] = entered.subList(currentElement, (currentElement + 1000 &lt; entered.size()) ? currentElement + 1000 : entered.size());
    currentElement += 1000;
}
</code></pre>
"
"15364117","<p>its throwing unrreachable code because compiler knows that when the controll reaches that return statement, then it would return and no more code would be executed.To solve this, what you could do is, either put the return statement in a condition block like i have shown below, but again  this program wont return u the result you wanted. it will return only the year. if you want the entire result ie. number of years + number of weeks + number of  days i would suggest you to make the entire answer to a single string and return.</p>

<pre><code>public double Convertir(double Number) {
        // Number = nombre;
        double annee = 0;
        double semaine = 0;
        double jour = 0;
        while ((Number - 365) &gt;= 0) {
            annee += 1; // this calculates the number of years
        }
        if (annee &gt; 0) {
            return annee;
        }
        double nombreSemaine = Number - (annee * 365);
        while ((nombreSemaine - 7) &gt;= 0) {
            semaine = semaine + 1;
        }// this calculates the number of weeks
        if (semaine &gt; 0)
            return semaine;

        double nombreJour = Number - (annee * 365) - (semaine * 7);
        nombreJour = jour;
        return jour;
    }
</code></pre>
"
"15391490","<p>You could still load the keys if necessary, </p>

<pre><code>public static PublicKey bigIntegerToPublicKey(BigInteger e, BigInteger m)  {
    RSAPublicKeySpec keySpec = new RSAPublicKeySpec(m, e);
    KeyFactory fact = KeyFactory.getInstance(""RSA"");
    PublicKey pubKey = fact.generatePublic(keySpec);
    return pubKey;
}

public static PrivateKey bigIntegerToPrivateKey(BigInteger e, BigInteger m) {
    RSAPrivateKeySpec keySpec = new RSAPrivateKeySpec(m, e);
    KeyFactory fact = KeyFactory.getInstance(""RSA"");
    PrivateKey privKey = fact.generatePrivate(keySpec);
    return privKey;
}
</code></pre>

<p>all you need is the modulus and the exponent.</p>
"
"18604189","<p>You are getting String index out of line because you tried to access characters outside of the string (valid range is from 0 to length-1). And even if you used length-1, your code will not do what you want. What you really need is to have two dummy placeholders (I assume your string will never contain '#' or '$') replacing 'a' and 'e' and then swap 'a' and 'e' with the dummy placeholders. The code follows:</p>

<pre><code>System.out.println(""Write something awesome."");
String input1 = ""I like to eat bananas"";//Keyboard.readString();
System.out.println(""Pick a letter from that awesome sentence."");
char letter1 = 'e';
System.out.println(""Pick another letter from that awesome sentence."");
char letter2 = 'a';

// dummy placeholders
char letter3 = '#';
char letter4 = '$';

String newUserImput = input1.replace (letter1, letter3);
newUserImput = newUserImput.replace (letter2, letter4);
newUserImput = newUserImput.replace (letter3, letter2);
newUserImput = newUserImput.replace (letter4, letter1);

System.out.println(newUserImput);        
</code></pre>
"
"18618620","<p>The plain static singleton you proposed in your question is correct. An alternative approach would be to use the singleton pattern (<a href=""http://stackoverflow.com/questions/3907929/should-i-make-jacksons-objectmapper-as-static-final/16197551#16197551"">the use of singleton pattern been discussed at length in answer comments to a similar question</a>). Here's a simple example: </p>

<pre><code>public enum Mapper {
  INSTANCE;
  private final ObjectMapper mapper = new ObjectMapper();

  private Mapper(){
    // Perform any configuration on the ObjectMapper here.
  }

  public ObjectMapper getObjectMapper() {
    return mapper;
  }
}
</code></pre>

<p>Then you can use (and reuse) the <code>ObjectMapper</code> singleton as follows:</p>

<pre><code>ObjectMapper mapper = Mapper.INSTANCE.getObjectMapper();
JsonSimple jsonSimple = mapper.readValue(jsonString, JsonSimple.class);
</code></pre>

<p>This is safe as <code>ObjectMapper</code> is <a href=""http://wiki.fasterxml.com/JacksonFAQThreadSafety"" rel=""nofollow"">thread-safe after configuration</a>. </p>

<p>Caveat: As @StaxMan points out in the answer comments, this does NOT guarantee against further (re)configuration on the returned singleton.</p>
"
"15413464","<p>You are correct, allocating objects inside a loop is a performance anti-pattern.
instead you can boost the speed of execution and improve memory usage by making use of static class members.</p>

<pre><code>// Number.java
public class Number {  
  private static long n;
 public static void setNumber(long number){
        n = number;
 }
 static boolean isPrime() {
     for(long k = 2; k &lt; n; k++) {
       if(n % k == 0) return false;
     }
     return true;
 }
}
</code></pre>
"
"18747072","<p><code>Update - this ""solution"" is no longer valid (see my above accepted answer) - keeping this answer because it did help alleviate the problem so long as the side-effects are tolerable.</code></p>

<p>Ok, I may have found a work-around for my case.</p>

<pre><code>props.put(""mail.smtp.ssl.trust"", ""smtp.somecompany.com"");
</code></pre>

<p>I added this to my Session construction, and now it works. This is a work-around, not a fix imho since I still do not know why my Godaddy SSL cert is not default trusted... it is not a self-signed cert. </p>

<p>Anyone please feel free to chime in as I'd really like to understand this problem.</p>
"
"18769139","<p><code>In.available()</code> just tells you that there is no data to be consumed by <code>in.read()</code> without blocking (waiting) at the moment but it does not mean the end of stream. But, they may arrive into your PC at any time, with TCP/IP packet. Normally, you never use <code>in.available()</code>. <code>In.read()</code> suffices everything for the reading the stream entirely. The pattern for reading the input streams is </p>

<pre><code>byte[] buf;
int size;

while ((size = in.read(buf)) != -1)
  process(buf, size);

// end of stream has reached
</code></pre>

<p>This way you will read the stream entirely, until its end. </p>

<p><strong>update</strong> If you want to read multiple files, then chunk you stream into ""packets"" and prefix every one with an integer size. You then read until size bytes is received instead of <code>in.read = -1</code>.</p>

<p><strong>update2</strong> Anyway, never use <code>in.available</code> for demarking between the chunks of data. If you do that, you imply that there is a time delay between incoming data pieces. You can do this only in the real-time systems. But Windows, Java and TCP/IP are all these layers incompatible with real-time.</p>
"
"18783457","<p>As you want to remove the first dot and replace the second one with a space, you need replace the whole P.O. section</p>

<p>Use </p>

<pre><code>replace(""P\\.O\\."", ""PO "");
</code></pre>
"
"18783476","<p>You should use <code>replaceFirst</code> method twice. </p>

<pre><code>String replace = uppercase.replace(""\\."", """").replaceFirst(""\\."", """");
</code></pre>
"
"18789476","<p>If the download is based on your app then you need to send a broadcast?</p>

<pre><code>Intent i = new Intent();
i.setAction(DownloadManager.ACTION_DOWNLOAD_COMPLETE);
sendBroadcast(i);
</code></pre>
"
"15490857","<p>Try using BufferedWriter ..</p>

<pre><code>BufferedWriter writer = new BufferedWriter(new FileWriter(""outfile""));
writer.write(received_string);
</code></pre>
"
"18811842","<p>The correct regex to match if 2+ <code>'</code>'s exist is:</p>

<pre><code>(.*'){2,}
</code></pre>
"
"18814634","<pre><code>public class test {

public static void main(String[] args) throws Exception, IOException {

    int count=0;
    HashSet&lt;Integer&gt; set1 = new HashSet&lt;Integer&gt;();
    HashMap&lt;Integer, String&gt; ee=new HashMap&lt;Integer,String&gt;();
    BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
    System.out.println(""how many elements u want to store"");
    int n=Integer.parseInt(br.readLine());
    System.out.println(""enter te element u want insert"");
    for(int i=0;i&lt;n;i++)
    {
        boolean x=set1.add(Integer.parseInt(br.readLine()));
        if(x==false)
        {
            count++;
        }
    }
    System.out.println(""no of duplicate elements is   ""+count);
    }
}
</code></pre>
"
"18819450","<p>All in all, here is what you need</p>

<pre><code>package mypackage;

import java.util.Scanner;

public class Collate {

    public static void main(String[] args) {
        Scanner in1 = null;
        Scanner in2 = null;
        try {
            System.out.printf(""Enter 1st word: "");
            in1 = new Scanner(System.in);

            String a = in1.next();

            System.out.printf(""Enter second word: "");
            in2 = new Scanner(System.in);
            String b = in2.next();

            System.out.println(new Collate().collate(a, b));
        } finally {
            in1.close();
            in2.close();
        }

    }

    public String collate(String a, String b) {
        String result = """";
        for (int i = 0; i &lt; Math.max(a.length(), b.length()); i++) {
            result += a.charAt(i);
            result += b.charAt(i);
        }
        return (result);
    }
}
</code></pre>
"
"18837254","<p>That ""language called Java"" bit amused me.</p>

<p>A quick search for ""java concatenate"" (which I recommend you do now and every time you have a question) revealed that most good Java programmers hate using <code>+</code> for concatenation. Even if it isn't used numerically when you want string concatenation, like in your code, it is also slow.</p>

<p>It seems that a much better way is to create a StringBuffer object and then call its <code>append</code> method for each string you want to be concatenated to it. See here: <a href=""http://www.ibm.com/developerworks/websphere/library/bestpractices/string_concatenation.html"" rel=""nofollow"">http://www.ibm.com/developerworks/websphere/library/bestpractices/string_concatenation.html</a></p>
"
"15527592","<p>Java good practices say that, as often as possible, return statements should be unique and written at the end of the method. To control what you return, use a variable. However, for returning from a void method, like the example you use, what I'd do would be perform the check in a middle method used only for such purpose. Anyway, don't take this too serious - keywords like <code>continue</code> should never be used according to Java good practices, but they're there, inside your scope.</p>
"
"15543861","<p>This is actually what i need.</p>

<pre><code>double rawOffset = TimeZone.getDefault().getRawOffset();

rawOffset = rawOffset / (60 * 60 * 1000);

System.out.println(""rawOffset : "" + rawOffset);
</code></pre>
"
"15549314","<p><code>double</code> and <code>float</code> represent numbers in different formats. </p>

<p>Because of this you are bound to find certain numbers that store perfectly in one format but not in the other. You happen to have found one that correctly fits in a <code>float</code> but does not fit <code>exactly</code> in a `double.</p>

<p>This problem can also show itself when two different formatters are used.</p>
"
"18906451","<p>Using the logic found <a href=""http://docs.oracle.com/javase/tutorial/java/IandI/subclasses.html"" rel=""nofollow"">here</a>, while you cannot (outside of a subclass) instantiate <code>FilterInputStream</code>, you can still (as you do in your second example) acquire an <a href=""http://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html"" rel=""nofollow"">instance</a> of <code>FilterInputStream</code>.</p>

<p>It is more semantics than anything else.</p>

<p>EDIT: According to the terminology ""Instantiating a Class"" explained <a href=""http://docs.oracle.com/javase/tutorial/java/javaOO/objectcreation.html"" rel=""nofollow"">here</a>, in your second example you are, in fact, instantiating <code>FilterInputStream</code>, since <code>DataInputStream</code> is a subclass of <code>FilterInputStream</code>, and therefore considered a <code>FilterInputStream</code>.</p>
"
"18923440","<p>Try This</p>

<pre><code>private BufferedImage get(String path) throws IOException{    
    URL url = this.getClass().getClassLoader().getResource(path);     
    String thing = url.getFile();       
    return ImageIO.read(new File(thing));      
}
</code></pre>
"
"15562932","<p>You have the following code</p>

<pre><code>IvParameterSpec ivParameterSpec = new IvParameterSpec(aesKey.getEncoded());
decryptCipher.init(Cipher.DECRYPT_MODE, aesKey, ivParameterSpec);
</code></pre>

<p>to initialize the cipher object that performs the decryption, but you have</p>

<pre><code>encryptCipher.init(Cipher.ENCRYPT_MODE, aesKey);
</code></pre>

<p>to initialize the cipher object that performs the encryption. Notice the problem? If you don't provide an IV then one is deduced, but if you do, then you have to use the same for encrypting and decrypting.</p>

<p>Try</p>

<pre><code>// Encrypt cipher
Cipher encryptCipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
encryptCipher.init(Cipher.ENCRYPT_MODE, aesKey);

// Encrypt
ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
CipherOutputStream cipherOutputStream = new CipherOutputStream(outputStream, encryptCipher);
cipherOutputStream.write(s.getBytes());
cipherOutputStream.flush();
cipherOutputStream.close();
byte[] encryptedBytes = outputStream.toByteArray();

// Decrypt cipher
Cipher decryptCipher = Cipher.getInstance(""AES/CBC/PKCS5Padding"");
decryptCipher.init(Cipher.DECRYPT_MODE, aesKey);
</code></pre>
"
"19023312","<p>You can initialize array with ArrayList. For example <code>ArrayList a = new ArrayList();</code>. Of course, you must include <code>import java.util.ArrayList</code></p>
"
"15571316","<p>Observe output of following program. <br>
1> See output without clone() method. Remove clone() method from following program. (example of shallow copy)<br>
2> See output with clone() method. (Example Deep copy. See ArrayList object's output)<br></p>

<pre><code>import java.util.ArrayList;
import java.util.List;

public class DeepCopy implements Cloneable {
    private List&lt;String&gt; hobbiesList;
    private int age;
    private String name;
    private float salary;

    public static void main(String[] args) throws CloneNotSupportedException {
        DeepCopy  original = new DeepCopy();
        original.name=""AAA"";
        original.age=20;
        original.salary=10000;
        original.hobbiesList = new ArrayList&lt;String&gt;();
        original.hobbiesList.add(""Cricket"");
        original.hobbiesList.add(""Movies"");
        original.hobbiesList.add(""Guitar"");
        original.hobbiesList.add(""Eating"");

        DeepCopy  cloned = (DeepCopy) original.clone();
        System.out.println(""original:=""+original);
        System.out.println(""cloned  :=""+cloned);
        System.out.println(""After adding two more hobbies in 'original' which untimately reflected in 'cloned'"");
        cloned.name=""BBB"";
        cloned.age=27;
        cloned.salary=18237;
        cloned.hobbiesList.add(""Trecking"");
        System.out.println(""original       :=""+original);
        System.out.println(""cloned  changed:=""+cloned);
    }
    @Override
    protected Object clone() throws CloneNotSupportedException {
        DeepCopy clone = (DeepCopy)super.clone();
        clone.hobbiesList = new ArrayList&lt;String&gt;(clone.hobbiesList);
        return clone;
    }
    @Override
    public String toString() {
        return ""My name is (String)""+name + "" having age (int)""+age+"". I earned (float)""+salary+"" and hobbies are (ArrayList)""+hobbiesList;
    }
}
</code></pre>
"
"15590754","<p>With the code <code>Arrays.asList(c)</code>.  Don't use <code>StringBuffer</code> use <code>StringBuilder</code> instead. You have not needed a synchronized collection. This really returns an instance of the list but it's an <code>Arrays</code> inner instance. If you need other instance implementation you have to construct a new list using a copy constructor.</p>
"
"15620105","<pre><code>setPreferredSize()
setMinimumSize()
setMaximumSize()
</code></pre>

<p>should do the trick</p>
"
"19103027","<p>No it is not because Singleton pattern is just based on this.</p>

<pre><code>public static Test newInstance(){
    if(instance==null){
        instance = new Test();
    }
    return instance;
}
</code></pre>

<p>See singleton pattern for detail.</p>
"
"19109203","<p>try </p>

<pre><code>id == list[pos].getItemNumber()
</code></pre>

<p>instead of </p>

<pre><code>id.equals(list[pos].getItemNumber()
</code></pre>
"
"15627621","<p>I've made ​​a function to sort a list of objects by a specific variable in the model class. It may not directly match the one you need, but maybe you can take the idea. I'm using reflection to be able to sort any class models with any data type.</p>

<pre><code> public Vector sort(Vector list, String kelas, String s, String asc) throws NoSuchMethodException {

        try {
            // Creates an object of type Class which contains the information of
            // the class String
            Object[] obj = list.toArray();
            Object[] args = {};
            Class cl = Class.forName(kelas);
            Method toSort = cl.getMethod(s, null);
            if (asc.equalsIgnoreCase(""desc"")) {
                if (toSort.getReturnType().toString().equalsIgnoreCase(""int"") || toSort.getReturnType().toString().equalsIgnoreCase(""double"")) {
                    for (int i = 0; i &lt; obj.length; i++) {
                        for (int j = i; j &lt; obj.length; j++) {
                            try {
                                if (Double.parseDouble(toSort.invoke(obj[i], args).toString()) &lt; Double.parseDouble(toSort.invoke(obj[j], args).toString())) {
                                    Object temp = obj[i];
                                    obj[i] = obj[j];
                                    obj[j] = temp;
                                }
                            } catch (IllegalAccessException ex) {
                                Logger.getLogger(DbBean.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (IllegalArgumentException ex) {
                                Logger.getLogger(DbBean.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (InvocationTargetException ex) {
                                Logger.getLogger(DbBean.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                } else {
                    for (int i = 0; i &lt; obj.length; i++) {
                        for (int j = i; j &lt; obj.length; j++) {
                            try {
                                if (toSort.invoke(obj[i], args).toString().compareToIgnoreCase(toSort.invoke(obj[j], args).toString()) &lt; 0) {
                                    Object temp = obj[i];
                                    obj[i] = obj[j];
                                    obj[j] = temp;
                                }
                            } catch (IllegalAccessException ex) {
                                Logger.getLogger(DbBean.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (IllegalArgumentException ex) {
                                Logger.getLogger(DbBean.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (InvocationTargetException ex) {
                                Logger.getLogger(DbBean.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                }
            } else {
                if (toSort.getReturnType().toString().equalsIgnoreCase(""int"") || toSort.getReturnType().toString().equalsIgnoreCase(""double"")) {
                    for (int i = 0; i &lt; obj.length; i++) {
                        for (int j = i; j &lt; obj.length; j++) {
                            try {
                                if (Double.parseDouble(toSort.invoke(obj[i], args).toString()) &gt; Double.parseDouble(toSort.invoke(obj[j], args).toString())) {
                                    Object temp = obj[i];
                                    obj[i] = obj[j];
                                    obj[j] = temp;
                                }
                            } catch (IllegalAccessException ex) {
                                Logger.getLogger(DbBean.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (IllegalArgumentException ex) {
                                Logger.getLogger(DbBean.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (InvocationTargetException ex) {
                                Logger.getLogger(DbBean.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                } else {
                    for (int i = 0; i &lt; obj.length; i++) {
                        for (int j = i; j &lt; obj.length; j++) {
                            try {
                                if (toSort.invoke(obj[i], args).toString().compareToIgnoreCase(toSort.invoke(obj[j], args).toString()) &gt; 0) {
                                    Object temp = obj[i];
                                    obj[i] = obj[j];
                                    obj[j] = temp;
                                }
                            } catch (IllegalAccessException ex) {
                                Logger.getLogger(DbBean.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (IllegalArgumentException ex) {
                                Logger.getLogger(DbBean.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (InvocationTargetException ex) {
                                Logger.getLogger(DbBean.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                }
            }

            list = new Vector();
            for (int i = 0; i &lt; obj.length; i++) {
                list.add(obj[i]);
            }
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
        return list;
    }
</code></pre>

<p>you can call that function as simple as this :</p>

<pre><code>Vector sortedList=sort(UnsortedList, ""bean.Items"", ""getItemName"", ""asc"");
</code></pre>

<p>This line will sort my item list (item is a model class) based on Item Name ascending</p>
"
"15629030","<p>You can use </p>

<pre><code>double numberGrade = 2.5;
Math.ceil(numberGrade);
</code></pre>
"
"19173025","<p>A good way to model this is to create something like a <code>UserData</code> class such that <code>TempUser</code> has-a <code>UserData</code> and <code>PermUser</code> has-a <code>UserData</code>.  You could also make <code>TempUser</code> has-a <code>PermUser</code>, though that's going to be less clear.  If your application needs to use them interchangeably (something you'd get with the inheritance you were using), then both classes can implement an interface that returns the <code>UserData</code> (or in the second option, <code>getPermUser</code>, where <code>PermUser</code> returns itself).  </p>

<p>If you really want to use inheritance, easiest might be to map it using the ""Table per class hierarchy"" and then using straight JDBC to update the discriminator column directly.</p>
"
"19222632","<p>The algorithm is not very efficient, but if I understand correctly your need, it should work if you modify it this way(under the supposition that arrNums contains a primitive type and never contains 0) :</p>

<pre><code>for (int k = 0; k &lt; arrNums2.length; k++) {
    for (int i = k+1; i &lt;arrNums2.length; i++) {
        if(arrNums2[k]!= 0 &amp;&amp; arrNums[k] == arrNums2[i]){             
            points = points -5;            
            for (int j = i+1; j &lt; arrNums2.length; j++) {
                    if(arrNums2[i]==arrNums2[j]){
                        arrNums2[j]=0;
                }
            }
        }
    }
}
</code></pre>
"
"19240569","<p>Hey Try code given below-</p>

<pre><code>@Test
public void writeToExcel() {
    //Blank workbook
    XSSFWorkbook workbook = new XSSFWorkbook(); 

    //Create a blank sheet
    XSSFSheet sheet = workbook.createSheet(""Employee Data"");

    //This data needs to be written (Object[])
    Map&lt;String, Object[]&gt; data = new TreeMap&lt;String, Object[]&gt;();
    data.put(""1"", new Object[] {""ID"", ""NAME"", ""PHONE""});
    data.put(""2"", new Object[] {1, ""Amit"", ""9865321425""});
    data.put(""3"", new Object[] {2, ""Lokesh"",""9562264578""});
    data.put(""4"", new Object[] {3, ""John"", ""9458262145""});


    //Iterate over data and write to sheet
    Set&lt;String&gt; keyset = data.keySet();
    int rownum = 0;
    for (String key : keyset)
    {
        Row row = sheet.createRow(rownum++);
        Object [] objArr = data.get(key);
        int cellnum = 0;
        for (Object obj : objArr)
        {
           Cell cell = row.createCell(cellnum++);
           if(obj instanceof String)
                cell.setCellValue((String)obj);
            else if(obj instanceof Integer)
                cell.setCellValue((Integer)obj);
        }
    }
    try
    {
        //Write the workbook in file system
        FileOutputStream out = new FileOutputStream(new File(""D:/writeTest.xlsx""));
        workbook.write(out);
        out.close();
        System.out.println(""writeTest.xlsx written successfully on disk."");
    } 
    catch (Exception e) 
    {
        e.printStackTrace();
    }
}
</code></pre>

<p>By default cell type for excel is String. If you want to store phone number in numeric format then you have to set cell type to numeric.</p>

<pre><code>           if(obj instanceof String)
                cell.setCellValue((String)obj);
            else if(obj instanceof Integer){
               // set cell format to numeric
                cell.setCellType(Cell.CELL_TYPE_NUMERIC);
                cell.setCellValue((Integer)obj);
            }
</code></pre>

<p>While reading excel file remember one thing that you are reading String type cell data or Numeric type cell data. </p>

<p>To read String type cell data use code as-</p>

<pre><code>cell.getStringCellValue();
</code></pre>

<p>and to read numeric cell type data--</p>

<pre><code>cell.getNumericCellValue();
</code></pre>
"
"19269643","<p>No it won't. <code>Integer</code> is a wrapper which adds some functionality to the primitive <code>int</code> type. If you are not going to use that functionality, its better to stick to <code>int</code>.</p>

<p>In this case it might not make a lot of difference but suppose you were to use say
<code>Integer[]</code> instead of <code>int[]</code>, then youd be wasting a LOT of memory and speed.</p>
"
"19305245","<p>Using condition ? valueA : valueB operator is meaningful only if there is an Lvalue,</p>

<p>Lvalue = condition ? valueA : valueB </p>

<p>The exact meannig of this operator can be transformed to an if else statement:</p>

<pre><code>int y,z;
</code></pre>

<p>int     x= (y==0) ? y+1 : z+3 </p>

<p>this ends up to be the same as:</p>

<pre><code>if(y==0)
{
    x=y+1;
}else
{
    x = z+3;
}
</code></pre>
"
"19341205","<p>Picks a random number between your values and then tests if it is divisible by div. If it is it returns that value otherwise it will have to do at max div-1 iterations to get to a number divisible by div.</p>

<p>In your situation call rBetweenGenerator(min, max, 5)</p>

<pre><code>public int rBetweenGenerator(int min, int max, int div)
{
  int res = min + ((new Random()).nextInt(max - min + 1))
  for(int i = res; i &lt; res + div; i++)
  {
    if( i % div == 0 )
    {
      return i;
    }
  } return -1; //error
}
</code></pre>
"
"15784672","<p>Look In 1.1 you are saying any class which extends Integer and in 1.2 any class which extends Number. Now is such a way Integer is sub class of Number that's why it didn't give any error in 1st case. But is 2.1 you are saying only U and in 2.2 only S and you are doing </p>

<pre><code> public List&lt;S&gt; l2 = l1
</code></pre>

<p>and l1 is of type U not S and generics don't supports such object referencing by it's own. You will have to use wild cards like used in 1st case.</p>

<pre><code> public List&lt;? extends Number&gt; l2 = l1;
</code></pre>

<p>Will solve your problem..</p>
"
"19405465","<pre><code>File f = new File(filepath)
BufferedReader b = new Bufferedreader(f.getInputStream);
String line = """";
String[] myArray = new String[100];
while((line = b.readLine())!=null)    // read file
{
     myArray[count++] = line;   // store in an array
}
</code></pre>
"
"19421209","<p>You need setter for this.</p>

<pre><code>public void setEnvironment(Environment environment) {
    this.environment = environment;
}
</code></pre>
"
"15807353","<p>In my opinion, this is an inappropriate pattern to use. It makes assumptions about the JVM's behavior which are non-trivial and confusing. Also, it has a dummy class. Dummy classes should be avoided when possible.</p>

<p>I suggest the straightforward approach:</p>

<pre><code>public class Foo {
    private volatile static final Foo instance = null;

    private Foo() {
    }

    public static Foo instance() {
        if (instance == null) instance = new Foo();
        return instance;
        }
    }
}
</code></pre>

<p>... although, this does not work as-is - it's not thread safe.. What you really want is the double-check pattern presented in Item 71 of Bloch's <strong>Effective Java</strong>; see <a href=""http://stackoverflow.com/a/3580658/1593077"">here</a>. Adapting the example at the link to your case, we get:</p>

<pre><code>public class Foo {
    private volatile static final Foo instance = null;

    private Foo() {
    }

    public static Foo instance() {
        if (instance != null) return instance;
        synchronized(instance) {
           Foo result = instance;
           if (instance == null) {
                result = instance = new Foo();
           return result;
        }
    }
}
</code></pre>

<p>Notes:</p>

<ul>
<li>Don't worry about the performance of this code, modern JVMs take care of it and it's just fine. After all, <a href=""http://c2.com/cgi/wiki?PrematureOptimization"" rel=""nofollow"">premature optimization is the root of all evil</a>.</li>
<li>As is suggested in other answers, the above is not Bloch's preferred solution, but I think using an enum for a singleton is semantically inappropriate just like what OP did originally.</li>
</ul>
"
"15814881","<pre><code>String a = ""Bobs big barbeque"";
String r = a.replace("" "","""");
</code></pre>

<p>r now contains your string without spaces...</p>
"
"19426078","<p>A recursive method would be the easiest for this :</p>

<pre><code>int power(int base, int exp) {
    if (exp != 1) {
        return (base * power(base, exp - 1));
    } else {
        return base;
    }
}
</code></pre>

<p>where <code>base</code> is the number and <code>exp</code> is the exponenet</p>
"
"15878115","<p>You can simply rely on Guava to generate a pretty good hashcode without worrying about how it is computed:</p>

<pre><code>@Override  
public int hashCode()  
{  
  return com.google.common.base.Objects.hashCode(this.from, this.to);  
}  
</code></pre>

<p>EDIT : for a symetric hashcode, just do the following:</p>

<pre><code>@Override  
public int hashCode()  
{  
  return com.google.common.base.Objects.hashCode(Math.max(this.from, this.to),Math.min(this.from, this.to));  
}  
</code></pre>
"
"19508493","<p>1: Use String.format</p>

<p>2: introduce variable heShe</p>

<pre><code>string describePerson(String name, boolean gender, int age) 
{
    String x = gender ? ""She"" : ""He"";

    return (name + ""is ""+gender+"". "" + x + "" is""+age+ ""years old.);
} 
</code></pre>

<p>3: parameter gender is boolean, better is to make use of an enum</p>
"
"15899797","<p>this might help you</p>

<pre><code>int[] series=new int[100];
</code></pre>

<p>you can add as follows</p>

<pre><code>series[series.lenght-1]=5;
series[series.lenght-1]=6;
series[series.lenght-1]=9;
</code></pre>

<p>and further more.......</p>
"
"15903380","<p>The problem is in your network.
Please make sure that the real android device and the your server(<code>192.168.1.2</code>) are in the same network.</p>

<p>If those are in the same network only then you can communicate with the server from yourclient </p>
"
"19532303","<p>You are adding a newline (""\n"") to your input, (<code>inputGrade.toUpperCase()+""\n"";</code>) so none of your cases are valid.
That is, ""A"" does not equal ""A\n""</p>

<p>I think you should not use ""gradeEntered"" and instead use:</p>

<pre><code>switch (inputGrade.toUpperCase())
</code></pre>

<p>especially since after running the loop more than once, your ""gradeEntered"" string will start to look like this: ""A\nB\nF\nQ\n"", which is very far removed from all your cases.</p>

<p>Also, switching on strings is not good practice - it is a newish development in java, and won't be supported by computers running older versions fo java  - though for your own use, if the compiler doesn't complain then it is fine. Still, better to get in the habit of switching on chars or ints, since most other programming languages won't let you switch on strings.</p>
"
"15935036","<p>change it to 
<code>(int)(long)out.write(uaCount.get(args[1]).singleValues.get(i));</code>.
you have to cast Long to integer</p>
"
"19586413","<p>This will return false flag because of comparison between String object and ENUM instance.</p>

<p>If you do this:</p>

<pre><code>String variable1 = ""1A"".
boolean flag = variable1.equals(Test.LETTER.value); 
system.out.println(flag);
</code></pre>

<p>This will return </p>

<pre><code>True
</code></pre>

<p>all though</p>

<p>IN java <strong>.equals</strong> methods look like this</p>

<pre><code>public final boolean equals(Object other) { 
    return this==other;
}
</code></pre>

<p>I always use == because it is null safe.</p>
"
"15941845","<p>this is the right code</p>

<pre><code>System.out.print(n + "" "");
xMethod(n-1);
</code></pre>
"
"15941869","<p>this
            xMethod(n-1);
            System.out.print(n + "" "");</p>

<p>should be:</p>

<pre><code>        System.out.print(n + "" "");
        xMethod(n-1);
</code></pre>
"
"15952803","<p>Now I have the solution !</p>

<p>First, there were some problems with Unicode, so I have put ISO-8859-1 everywhere. <a href=""http://stackoverflow.com/a/10319155/1824094"">Including in the Base64 encoding and decoding.</a></p>

<p>Then, I have juggled with the variants.</p>

<p>Here is my Java code which works for Blowfish decryption :</p>

<pre><code>String encryptedString = … ;
String decryptedString = null;
SecretKeySpec key = new SecretKeySpec(myKey.getBytes(CHARSET_ISO_8859_1), ""Blowfish"");
Cipher cipher;
try {
    cipher = Cipher.getInstance(""Blowfish/ECB/PKCS5Padding"");
    cipher.init(Cipher.DECRYPT_MODE, key);
    byte[] decrypted = cipher.doFinal(encryptedString.getBytes(CHARSET_ISO_8859_1));
    decryptedString = new String(decrypted, CHARSET_ISO_8859_1);
} [ catch Exceptions … ]
</code></pre>

<p>Note that I have replaced <code>""Blowfish""</code> with <code>""Blowfish/ECB/PKCS5Padding""</code> for getting the <code>Cipher</code> instance, but, if you do the same for the key, it fails.</p>

<p>The key <code>myKey</code> has to be a Latin-1 string of 8 characters. This makes a key of 128 bits. The Blowfish algorithm allows bigger keys, but they fail in Java because of the USA export restriction in the JRE — the USA allow encryption but not stronger than what the <a href=""http://en.wikipedia.org/wiki/NSA"" rel=""nofollow"">NSA</a> can break.</p>

<p>The <code>CHARSET_ISO_8859_1</code> is a constant defined like this :</p>

<pre><code>final Charset CHARSET_ISO_8859_1 = Charset.forName(""ISO-8859-1"");
</code></pre>

<p>And <code>Charset</code> is <code>java.nio.charset.Charset</code>.</p>

<p>Last but not least, I have changed my encryption Java code accordingly.</p>
"
"15994563","<p>Contrary to some of the comments here, making a class final <em>does</em> have to do with immutability.  For a class to be immutable, it <em>should</em> be final, so as to not allow subclasses to override any getters, and thereby not allowing them to ""mutate"" it by returning a different value.</p>

<pre><code>Recall that to guarantee immutability, a class must not permit itself to be subclassed.

- Joshua Bloch, Effective Java
</code></pre>

<p>also, from the Java tutorials, <a href=""http://docs.oracle.com/javase/tutorial/essential/concurrency/imstrat.html"" rel=""nofollow"">A Strategy for Defining Immutable Objects</a>:</p>

<blockquote>
  <p>3.Don't allow subclasses to override methods. The simplest way to do this is to declare the class as final</p>
</blockquote>
"
"19732296","<p>Your loop (do {} while(condition)) will loop infinite when you enter some string different ""q"" because condition always is true.
try with :</p>

<pre><code>while (!choice.equals(""q"")) {
    switch (choice) {
        case ""a"":
        myGeek.getName();
        break;
  case ""b"":
        myGeek.getnumberofQuestions();
        break;
   case ""c"":

        System.out.println(""Enter the first number"");
        int input1 = scan.nextInt();
        System.out.println(""Enter the second number"");
        int input2 = scan.nextInt();
        System.out.println(""Enter the third number"");
        int input3 = scan.nextInt();
        myGeek.allTheSame(input1, input2, input3);
        break;
    case ""d"":
        System.out.println(""Enter the first number"");
        int num1 = scan.nextInt();
        System.out.println(""Enter the second number"");
        int num2 = scan.nextInt();
        myGeek.sum(num1, num2);
        break;
    case ""e"":
        System.out.println(""Enter a string: "");
        String word1 = scan.nextLine();
        System.out.println(""Enter an integer: "");
        int numberOfTimes = scan.nextInt();
        System.out.println(""Enter the third number"");
        myGeek.repeat(word1, numberOfTimes);
        break;
    case ""f"":
        System.out.println(""Enter a string: "");
        String word2 = scan.nextLine();
        myGeek.isPalindrome(word2);
        break;
    case ""?"":
        System.out.println(""Command Options: "");
        System.out.println(""a: Geek's Name"");
        System.out.println(""b: Num Questions Asked"");
        System.out.println(""c: All Numbers Are the Same"");
        System.out.println(""d: Sum Between Two Integers"");
        System.out.println(""e: Repeat the String"");
        System.out.println(""f: It is Palindrome"");
        System.out.println(""?: Display"");
        System.out.println(""q: Quit"");
        break;
    }
}
</code></pre>
"
"19738582","<p>As John said, put a single space in the label and/or set it's <code>setMinimumSize()</code>.</p>

<p>Minimum size is useful if the label is intended to be populated later, on UI activity.. prevents the UI from compacting into an ugly state when nothing is initially selected.</p>
"
"16036931","<p>The method  <code>Thread.stop()
</code> should not be used. It is deprecated for a reason - 
<a href=""http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Thread.html#stop%28%29"" rel=""nofollow"">deprecation reason</a>. Use <code>volatile boolean</code>flag in the thread to check whether it should stop or not. Set the flag in the main thread when you want to stop it.</p>
"
"19769759","<p>Since Timestamp in Java is number of milliseconds from UNIX Epoch - change 45 days to number of milliseconds (45d=45*24h=45*24*3600s=45*24*3600*1000ms) so if:</p>

<pre><code>(time_B + 45*24*3600*1000) &gt;= time_A
</code></pre>

<p>it means that time_B is 45 days (or more) 'further' in time that time_A</p>

<p>Of course you can use JodaTime and other libs too.</p>
"
"19799311","<p>To get the immediate superclass</p>

<pre><code>p1.getClass().getSuperClass();
</code></pre>

<p>However, in the event you are declaring an interface, you might use </p>

<pre><code>        Class[] interfaces = p1.getInterfaces();
        if(interfaces != null){
            for(Class i : interfaces){
                System.out.println(i);
            }
        }
</code></pre>
"
"16102233","<p>Think about overriding hashcode and equals of your Person-class to identify your objects.</p>

<p>Also look at <a href=""http://docs.oracle.com/javase/6/docs/api/java/util/List.html#contains%28java.lang.Object%29"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/util/List.html#contains%28java.lang.Object%29</a></p>

<p>To use it, you should override the equals() and hashCode() method of User in a way like this:</p>

<p><code></p>

<p>public boolean equals(Object o){</p>

<p>.... some standard stuff like is Null and instanceof</p>

<p>return this.getCustomerID() == ((User) o).getCustomerID();</p>

<p>}</p>

<p></code></p>

<p>if you use eclipse you can generate it.</p>
"
"19838641","<p>compile with fully qualifier name.</p>

<pre><code>javac model\YourClass.java
</code></pre>
"
"16108800","<p>The <code>Holder</code> class is OK, but the class <code>someClass</code> can appear in an inconsisten state - between creation and the call to <code>initialize()</code> the <code>holder</code> instance variable is <code>null</code>. </p>
"
"19843124","<p>here is layman approach</p>

<pre><code>import java.util.*;

public class One {
    public static void main(String[] args) 
    {
        String[] inputArray = new String[]{ ""november"", ""a"",""b"",""c"",""d"",""december"", ""i"",""j"",""k"",""april"", ""g"",""h""};
        List&lt;String&gt; monthNames = new ArrayList&lt;String&gt;();
        List&lt;String&gt; monthNamesOutput = new ArrayList&lt;String&gt;();
        List&lt;String&gt; alphabetsOutput = new ArrayList&lt;String&gt;();
        monthNames.add(""january"");
        monthNames.add(""february"");
        monthNames.add(""march"");
        monthNames.add(""april"");
        monthNames.add(""may"");
        monthNames.add(""june"");
        monthNames.add(""july"");
        monthNames.add(""august"");
        monthNames.add(""september"");
        monthNames.add(""october"");
        monthNames.add(""november"");
        monthNames.add(""december"");
        for(String temp:inputArray)
        {
            if(monthNames.contains(temp))
            {
                monthNamesOutput.add(temp);
            }
            else
            {
                alphabetsOutput.add(temp);
            }
        }
        System.out.println(monthNamesOutput);
        System.out.println(alphabetsOutput);
    }
}
</code></pre>
"
"16145988","<p>Add 7 by x times. </p>

<pre><code>for(int i=0; i&lt;10; i++)
    result = result+7;
</code></pre>
"
"16209029","<p>You can use CountdownLatch for this purpose. Start network thread, then call await on countdown latch:</p>

<pre><code>CountDownLatch latch = new CountDownLatch(1);

// start network thread
networkThread.start();

boolean wasFinished = latch.await(you_timeout);

// Interrupt network thread as it still waiting:
if(!wasFinished) {
    networkThread.interrupt();
}
</code></pre>

<p>In network thread after read succes call latch.countDown();</p>
"
"16215574","<pre><code>import java.util.*;
class Anagrams 
{
    public static void main(String[] args) 
    {
        System.out.println(""Enter the two words"");
        Scanner scan = new Scanner(System.in);
        String word1 = scan.next();
        String word2=scan.next();

        StringBuilder sb1= new StringBuilder(word1);
        StringBuilder sb2= new StringBuilder(word2);
        int count=0;
        System.out.println(""length ! ""+sb1.length());
        System.out.println(""Length ! ""+sb2.length());
        if(sb1.length()==sb2.length()){
            for(int i=0;i&lt;sb1.length();i++){
                for(int k=0;k&lt;sb2.length();k++){
                    if(sb1.charAt(i)==sb2.charAt(k)){
                        sb2.deleteCharAt(k);
                        count++;
                        System.out.println(""Count is ""+count);
                        break;
                    }
                }
            }

            if(count==sb1.length()){

                System.out.println(""Anagrams!"");
            }
            else{
                System.out.println(""Not Anagrams"");
            }
        }
        else{
            System.out.println(""Not equal in length"");
        }
    }
}
</code></pre>
"
"20017828","<p>Draw in other method and pass <code>Graphics</code> to draw with </p>

<pre><code>public void paint (Graphics g) {
    super.paint(g);
    draw_shape(g);
}

private void draw_shape(Graphics g) {                                         
    g.drawLine(0, 0, 100, 100);
}  
</code></pre>
"
"16216003","<p>If you have this structure, could you not do</p>

<pre><code>public static List&lt;File&gt; subdirectories(File root, String toFind) {
    List&lt;File&gt; ret = new ArrayList&lt;File&gt;();
    for(File dir : root.listFiles()) {
        File dir2 = new File(dir, toFind);
        if (dir2.isDirectory())
            ret.add(dir2);
    }
    return ret;
}
</code></pre>
"
"20029767","<p>Of course there are better ways to do this (such as using List of Objects, as suggested by Peter Lawrey), but since this is in the specs you have, you can try this: when you declare your arrays, <strong>also</strong> allocate memory for them :</p>

<pre><code>private String[] names = new String[MAXSIZE];             // softdrink names
private String[] ids = new String[MAXSIZE];               // softdrink identifications
private int[] startingInventory = new int[MAXSIZE];    // starting inventory of the softdrinks
private int[] finalInventory = new int[MAXSIZE];       // final inventory of the softdrinks
private int[] transactionCounts = new int[MAXSIZE];    // number of transactions per softdrink
</code></pre>

<p>Then, in your functions, you can simply assign values to 0 and empty String:</p>

<pre><code>private void initializeInt(int[] a) {
    for(int i = 0; i &lt; a.length; i++) {
        a[i] = 0;
    }
}
</code></pre>

<p>and </p>

<pre><code>private void initializeString(String[] s) {
    for(int i = 0; i &lt; s.length; i++) {
        s[i] = """";
    }
}
</code></pre>

<p>Please note that you have an error in your <strong>displayReport()</strong> function too. You are using %f to display int values (%f is used for floats). Instead, change it to %d. Also, in your for loop, you are not actually looping through your arrays. Just use i as an index when iterating. Another thing is that you are displaying only 10 entries, whereas your MAXSIZE, which you use to initialise arrays is 100, so if you want to display all array elements, change 10 to MAXSIZE:</p>

<pre><code>public void displayReport() {
   System.out.printf(""%-22s %-16s %-23s %-23s %s %n"", ""Soft Drink"", ""ID"",
                     ""Starting Inventory"", ""Final Inventory"",
                     ""# transaction"");
   for(int i = 0; i &lt; MAXSIZE; i++) {
       //change ""%-22s %-16s %-23f %-23f %f %n"" to the below
       //and names etc. to names[i] etc.
       System.out.printf(""%-22s %-16s %-23d %-23d %d %n"", names[i], ids[i],
                         startingInventory[i], finalInventory[i], 
                         transactionCounts[i]);

   }
}
</code></pre>
"
"16238687","<p>Having waited for a time for a convincing reason, my take.</p>

<p>The article I linked (again, it is <a href=""http://www.artima.com/lejava/articles/equality.html"" rel=""nofollow"">http://www.artima.com/lejava/articles/equality.html</a>) explains why there are issues when implementing equals in a subclass (mostly, that the <code>instanceof</code> check leads to asimmetries that are forbidden by the <code>equals</code> contract).</p>

<p>If your superclass does not implement equals, you may find this situation.</p>

<ul>
<li><p>B extends A</p></li>
<li><p>B implements <code>equals</code>, lets say like</p>

<pre><code>public boolean equals(Object obj) {
  A a = (A) obj;  &lt;-- this cast is the most problematic issue from this example
  return this.id.equals(a.getId());
}
</code></pre></li>
</ul>

<p>So you end with </p>

<pre><code>A a = new A(""Hello"");
B b = new B(""Hello"");
a.equals(b) != b.equals(a);
</code></pre>

<p>One point that would go against this example is that your superclass is abstract, but probably Eclipse is issuing the warning in prevention that you instantiate it (or it is just that the warning check is not so fine-grained).</p>
"
"16241362","<p>The new value of <code>obj</code> will be read.</p>

<p>From the standard's section on <a href=""http://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html#jls-17.4.5"" rel=""nofollow"">Happens before</a>:</p>

<blockquote>
  <p>A write to a volatile field (§8.3.1.4) happens-before every subsequent read of that field.</p>
</blockquote>

<p>From definition of shared variable:</p>

<blockquote>
  <p>All instance fields, static fields, and array elements are stored in heap memory. In this chapter, we use the term variable to refer to both fields and array elements.
  Local variables (§14.4), formal method parameters (§8.4.1), and exception handler parameters (§14.20) are never shared between threads and are unaffected by the memory model.</p>
</blockquote>

<p>The read of <code>obj</code> inside of the synchronized block is separate from the initial evaluation of the expression <code>obj</code> to determine the which object's build-in monitor to lock.  The reassignment of <code>obj</code> will happen before the first read, but not the second.  Since <code>obj</code> is a <code>volatile</code> field, that second read must see the updated value of <code>obj</code>.</p>
"
"16246179","<p>You can Implement Comparable Interface in Album class if you can change it and the simply call  <code>Arrays.sort(albums)</code>, it will short your array you can use first and last element of array as lowest and highest selling albums respectively.<br>
<br/><br/>
Code will be some thing like this <br/></p>

<pre><code>public class Album implements Comparable&lt;Album&gt;{
     /*
      your existing code here
     */
     public int compareTo(Album compareAlbum) {
       int compareSales = ((Album) compareAlbum).getSales(); 
       return this.sales - compareSales
     }
}
</code></pre>

<p><br/><br/>
If you can't change Album class then Grammin's answer is ok.</p>
"
"16302844","<p>It depends what you mean by better.  An alternative implementation might be as follows:</p>

<pre><code>public static int[] Ranges = new int[] { 5, 10, 15, 20 };

...

int i = 0;
while(i &lt; Ranges.Length)
{
    if (number &gt;= Ranges[i]) return i+1;
    i++;
}
</code></pre>

<p>This allows the ranges to be non-uniform and potentially be specified by a data file.</p>
"
"16305334","<p>you could consider transforming the string into a bytecode:</p>

<pre><code>System.out.println(r);// display data-all be correct
String line = (String.valueOf(r) + ""\n"");
os.write(line.getBytes());
</code></pre>
"
"16315356","<p>The reason for the error is that generics in java are not type covariant. You can read tutorials on web in this regard.</p>

<p>You can use following alternative:</p>

<pre><code>col.addAll(Arrays.asList(new SampleClass[]{sampleClassInstance}));
</code></pre>
"
"20129487","<p>From here:</p>

<pre><code>public void mouseMoved(MouseEvent e){
 xpos=getX();
 if(xpos&lt;0){polyrot--;}
 else if(xpos&gt;0){polyrot++;}
 repaint();
 break;
}
</code></pre>

<p>It seems you update only the xpos. You should update also the variable ypos.
You might want to do it with something like this:</p>

<pre><code>ypos=e.getY();
if (this.ypos&lt;0){
 this.polyrot--;
}else if (this.ypos&gt;0) {
 this.polyrot++;
}
this.repaint();
</code></pre>
"
"20185174","<p>just make <code>InputStream</code>  <code>non-static</code> that's all.
I used post method and just fine...</p>
"
"16397655","<pre><code>static void modify(String m)
    {
       m = ""Else"";
       System.out.println(m);
    }
</code></pre>

<p>If you do this m will print Else, it is only the local variable m what is getting assigned to a new value. value of actual in the main method is not getting changed here.</p>
"
"16455472","<p>Just change the line to</p>

<pre><code>str = str.replaceAll(""\\"","".""); 
</code></pre>

<p>Edit : I didnt try it, because the problem here is not whether its a correct regex,but the problem here is that he is not assigning the str to new str value. Anyways regex corrected now.</p>
"
"16459231","<p>The implementation of getCuffSize() method can be below, so that your end objective is met</p>

<pre><code>public String getCuffSize()
{
   return (cuffSize == null) ? """" : cuffSize;
}
</code></pre>
"
"20391705","<p>SimpleDateFormat: <a href=""http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html"" rel=""nofollow"">This will accomplish your goal quite easily.</a></p>

<p>Simply do the following..</p>

<pre><code>SimpleDateFormat fmt = new SimpleDateFormat... (read the java docs)
fmt.format(your string)
</code></pre>

<p>No need to re-invent the wheel and make your program larger... This code already exists in Java.</p>

<p>EDIT: Since OP can't read..
S   Millisecond Number  978</p>
"
"20414584","<p>I did create a file ""version.xml"" in the res/values folder of the included copy of google services and pasted the code:</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;resources&gt;
&lt;integer name=""google_play_services_version""&gt;4030500&lt;/integer&gt;
&lt;/resources&gt;
</code></pre>

<p>the original copy missed the file and it did solve my problem</p>
"
"16606224","<p>Reduce the usage of if conditions. It slows down your code. Try to use ternary operators if possible if this affects your speed even though it is not recommended in java 1.5.</p>

<p>Try this solution:</p>

<pre><code>if( (factors==2)&amp;&amp;(primeNum&lt;2000000) )
</code></pre>

<p>instead of repeated if conditions and post any difference.</p>
"
"16619055","<p>You don't need <code>play ~run</code>, just <code>play run</code></p>
"
"20418373","<p>At first, read the text file strings into <code>ArrayList</code>. Than search the <code>ArrayList</code> with searched word.</p>

<pre><code> List&lt;String&gt; list=new ArrayList&lt;&gt;();

 // put file string here using Scanner

 String searchWord= ""omar"";// Read Search word here,

 if(!list.contain(searchWord)){// Check weather word contain at list.
      System.out.println(""doesn't exist"");
 }
</code></pre>
"
"20427329","<p>In Java, an object will be <em>shortlisted</em> for garbage collection when is no longer possible to be reached from any active reference.</p>

<p>You can facilitate this by assigning its reference to null:</p>

<pre><code>obectRef = null;
</code></pre>

<p>But, this is no guarantee that it will actually be deleted.</p>
"
"16640212","<p>I am working on a project with a similar structure to yours. Here is the major difference between mine and yours</p>

<pre><code>protected static EntityManagerFactory
 em=Persistence.createEntityManagerFactory(""cinema"");
</code></pre>

<p>You might be getting the null pointer exception in your MovieBean class as you have not created the entitymanager factory. It has not been instansiated and that is why you are getting the null pointer exception. This code has not been tested in your case. It just stands out to me so I said I would say it.</p>

<p>EDIT:
After looking at the tomcat site via your link there is also</p>

<pre><code>@PersistenceContext(unitName = ""cinema"", type = PersistenceContextType.EXTENDED)
 private EntityManager em;
</code></pre>
"
"16667383","<p>Encapsulation is to restrict the access to the Class's variables and to regularize the way of editing them.</p>

<pre><code>Class Test
{
 public int a;
 public Test()
 {
  a = 0;
 }
 public getA()
 {
  return a;
 }

 public setA(int a)
 {
   this.a = a
 }
}

Class TestMain
{
  main()
 {
   Test t = new Test();
   System.out.println(t.a);   // This prints 0;
   int a = t.getA();
   a = 10;
   System.out.println(t.a);   // This still prints 0;

   t.a = 20;
   System.out.println(t.a);   // This prints 20;
 }
}
</code></pre>

<p>In the above example the programmer may not be intentionally changing the value of <code>t.a</code> but the value changes.</p>

<p>If he really intents to change it, then he should use the setter.</p>

<p>Encapsulation is the feature that java provides which solves certain practical problems and helps in extensibility.</p>

<p>If the Test and TestMain classes are written by same person, there wont't be any confusion.
But practically that is not the case.</p>
"
"20471498","<p>Try this:</p>

<pre><code>String fileName = Integer.valueOf(inputWorkbook.getName().substring(0, 7)) + "".xls"";
</code></pre>

<p>Only works, if your filename-pattern is like ""[0-9]{8}.xls"".</p>
"
"20479237","<p>You do set <code>i</code> in all your codes, but you are only returning it after the first <code>if</code> condition. Your method signature reads:</p>

<pre><code>public static int byteArrayToInt(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
</code></pre>

<p>Notice the <code>int</code> in the signature. Maybe the intended code is:</p>

<pre><code>public static int byteArrayToInt(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
{
    int i = 0;
    int j = 0;
    if (j &gt;= paramInt2)
        return i;
    if ((j == 0) &amp;&amp; (paramArrayOfByte[(paramInt1 + (paramInt2 - 1) - j)] &lt; 0))
        i |= (int)paramArrayOfByte[(paramInt1 + (paramInt2 - 1) - j)];
    while (true)
    {
        if (j &lt; paramInt2 - 1)
            i &lt;&lt;= 8;
        j++;
        break;
        i |= paramArrayOfByte[paramInt1 + (paramInt2 - 1) - j];
    }

    return i;
}
</code></pre>
"
"20497033","<p>Here is something that works given what you have provided: </p>

<pre><code>public static void main(String[] args)
{
  String search = ""Total Toys"";
  String str = ""This is something Total Toys 300,000.00 49,999.00 This is something"";
  int index = str.indexOf(search);
  index += search.length();
  String[] tokens = str.substring(index, str.length()).trim().split("" "");
  String val1 = tokens[0];
  String val2 = tokens[1];
  System.out.println(""Val1: "" + val1 + "", Val2: "" + val2);
}
</code></pre>

<p>Output:</p>

<pre><code>Val1: 300,000.00, Val2: 49,999.00
</code></pre>
"
"20501396","<p>\D matches any non-numeric character, so of course it will fail if you pass it a string with digits in it.</p>

<p>If you want to match only characters and numbers you could do something like:</p>

<pre><code>matches(""[a-zA-Z0-9""]+);
</code></pre>
"
"16740128","<p>define the date as static. <code>static String date;</code> you can't refer non statics from static method main</p>
"
"16802875","<p>Here's a working example. Perhaps try using a BufferedReader.</p>

<pre><code>import java.io.*;
import java.util.Scanner;

public class ScanXan {
public static void main(String[] args) throws IOException {

    Scanner s = null;

    try {
        s = new Scanner(new BufferedReader(new FileReader(""xanadu.txt"")));

        while (s.hasNext()) {
            System.out.println(s.next());
        }
    } finally {
        if (s != null) {
            s.close();
        }
    }
}
}
</code></pre>

<p>From <a href=""http://docs.oracle.com/javase/tutorial/essential/io/scanning.html"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/essential/io/scanning.html</a></p>
"
"20569653","<p>Use</p>

<pre><code> viewPager.setOnPageChangeListener(mPageChangeListener);
</code></pre>

<p>Remove</p>

<pre><code> private void setOnPageChangeListener(
        OnPageChangeListener mPageChangeListener2) {
    // TODO Auto-generated method stub

}
</code></pre>

<p>and</p>

<pre><code> setOnPageChangeListener(mPageChangeListener);
</code></pre>
"
"16814046","<p>use this code:</p>

<pre><code>public static void print(Context context) {

    String examplePath = ""file:///sdcard/dcim/Camera/20111210_181524.jpg"";

    Intent sendIntent = new Intent(Intent.ACTION_SEND);
    sendIntent.setType(""image/jpeg"");
    sendIntent.putExtra(Intent.EXTRA_SUBJECT, ""Photo"");
    sendIntent.putExtra(Intent.EXTRA_STREAM, Uri.parse(examplePath));
    sendIntent.putExtra(Intent.EXTRA_TEXT, ""Enjoy the photo"");
    context.startActivity(Intent.createChooser(sendIntent, ""Email:""));
}
</code></pre>
"
"20601208","<p>Check this to understand pseudo random generation and seeds : <a href=""http://en.wikipedia.org/wiki/Pseudorandom_number_generator"" rel=""nofollow"">http://en.wikipedia.org/wiki/Pseudorandom_number_generator</a></p>

<p>A pseudorandom number generator (PRNG), also known as a deterministic random bit generator DRBG, is an algorithm for generating a sequence of numbers that approximates the properties of random numbers. The sequence is not truly random in that it is completely determined by a relatively small set of initial values, called the PRNG's state, which includes a truly random seed.</p>

<p>If you want to have different sequences (the usual case when not tuning or debugging the algorithm), you should pass System.currentTimeMillis() as seed when initializing the Random instance. This Random instance should of course be kept outside of your method.</p>

<p>You code should probably be like this :</p>

<pre><code>private Random generator = new Random(System.currentTimeMillis());
double randomGenerator() {
    return generator.nextDouble()*0.5;
}
</code></pre>
"
"16900791","<p>You can have the array easily sorted with <code>Arrays.sort</code>. Then the first element is the smallest and the last the largest:</p>

<pre><code>int[] value= {5,16,3,32,6};
Arrays.sort(value);
int min = value[0];
int max = value[value.length-1];
int dif = max-min;
</code></pre>
"
"16937217","<p>This exception is also thrown when:</p>

<ul>
<li>The File is a actually a Folder.</li>
<li>If you don't have the necesary permissions to access the file</li>
</ul>

<p>Change the permissions of this file to open it (chmod 777 FileOne.txt)</p>

<p>EDIT:</p>

<p>If is an anroid app, add the following permission to the manifest:</p>

<pre><code>&lt;uses-permission android:name=""android.permission.WRITE_EXTERNAL_STORAGE"" /&gt;
</code></pre>
"
"16937364","<p>this file is created in : your root , which is not readable i think . </p>

<p>so provide a path , to create any file in a specified directory : </p>

<p>Edited : </p>

<pre><code>FileOutputStream fos = app.openFileOutput(Environment.getExternalStorageDirectory() + File.separator +""FileOne.txt"", Context.MODE_APPEND);
</code></pre>
"
"20701563","<pre><code>   String htmlString =""&lt;font color='#00ff00' size='100'&gt; SampleText &lt;/font&gt;"";
            int pos1=htmlString.indexOf(""size='"");
            if(pos1!=-1){
                int pos3=pos1+6; /*6 is the length of size=' */
                String tempString=htmlString.substring(pos3, htmlString.length());
                int pos2=tempString.indexOf(""'"");
                if(pos2!=-1){
                    String sizeString=htmlString.substring(pos3, pos3+pos2);
                    String stringToReplace=htmlString.substring(pos1,pos3+pos2+1);
                    int size=Integer.parseInt(sizeString);
                    int newSize=size/4;
                    String newString=""size'""+newSize+""'"";                        
                    htmlString=htmlString.replace(stringToReplace, newString);
                }
            }
</code></pre>
"
"17047499","<p>At first glance, your code should work. To see why it doesn't work, you will have to debug it. If you don't know how to use a debugger, yet, use the ""poor man's debugger"":</p>

<pre><code>System.out.println(""enter if you want to use plus or minus"");
plumi = Max.next();
System.out.println(""You entered [""+plumi+""]""); // poor man's debugger
</code></pre>

<p>I'm quoting the value with <code>[]</code> because they are rarely part of the value that I want to print and it makes it easier to see when there are additional, unexpected whitespaces (like <code>[ plumi]</code> or <code>[plumi ]</code>)</p>
"
"20739974","<p>Use the <a href=""http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Joiner.html"" rel=""nofollow"">Joiner</a> API, which gives a much more elegant way of joining lists with separators:</p>

<pre><code>Joiner.on("","").join(Rolelist1)
</code></pre>
"
"20761112","<p>This is what you want.</p>

<pre><code>SELECT * FROM table_name ORDER BY id DESC LIMIT 1
</code></pre>
"
"17134938","<pre><code>if (someString.indexOf(""Hey"")&gt;=0) 
     doSomething();
</code></pre>
"
"20801727","<p>You can use <a href=""http://jettison.codehaus.org/apidocs/org/codehaus/jettison/json/JSONArray.html"" rel=""nofollow""><strong>org.codehaus.jettison.json.JSONArray</strong></a> for the same (<a href=""http://repo1.maven.org/maven2/org/codehaus/jettison/jettison/1.3.3/jettison-1.3.3.jar"" rel=""nofollow""><strong>Download jar</strong></a>).</p>

<p>Example Code :</p>

<pre><code>   ArrayList bibo=new ArrayList();

   .....

  JSONArray ar=new JSONArray(bibo);
  String json= ar.toString();
</code></pre>
"
"17200599","<p>One option you have is to first match <em>all</em>  tags and then use a regex to match the ones that have  so that you can ignore them. So your pseudo code would look like:</p>

<pre><code>&lt;a&gt;tags = html.find(all&lt;a&gt;tags);
for(String &lt;a&gt;tag : &lt;a&gt;tags){
    if(&lt;a&gt;tag.isHref()) continue;
    //do proccessing
}
</code></pre>
"
"17209774","<pre><code>String[] myArray = {""AAAA"",""BBBB"",""CCCC""};
String[] myNewArray = {""\uAAAA"",""\uBBBB"",""\uCCCC""};
        String we=""\\u"";
        for (int i=0; i&lt;myArray.length; i++) {
    myNewArray[i] = we + myArray[i];

}
</code></pre>
"
"20867055","<p>The error is obviously in this line :-</p>

<pre><code>        mEditText = new EditText(mContext);
</code></pre>

<p>By doing this, you have created a new object for an Edittext. We do such thing when we create a dynamic edittext or any other widget.</p>

<p>In a normal scenario, you need to pass a reference to your edittext which you must have given in a property called as ""id"" in an xml file for the edittext for example :-</p>

<pre><code> &lt;EditText 
     android:id = ""@+id/editText1""
     &lt;!-- other properties--&gt;
&lt;/EditText
</code></pre>

<p>and in your class, you need to do like this firstly :- <code>mEditText = (EditText)findViewById(R.id.editText1);</code></p>

<p>I hope you got it now</p>
"
"17228633","<p>A <code>final</code> class cannot be subclassed. This is necessary to improve security even if it has some drawbacks.</p>

<p>E.g. the class <code>java.lang.String</code> is <code>final</code>. Therefore you cannot subclass <code>String</code> and can be sure that a <code>String</code> parameter is never a subclass that does something harmful (e.g. sending the <code>String</code> somewhere).</p>
"
"17229614","<p>I research this, and I read this on Hardcore Java, Publisher : O'Reilly ISBN : 0-596-00568-7</p>

<p><strong>Why Classes are tagged Final:</strong></p>

<p>There are two ways to make a class final. The first is to use the keyword final in the class declaration:</p>

<pre><code>public final class SomeClass {
  //  . . . Class contents
}
</code></pre>

<p>The second way to make a class final is to declare all of its constructors as private:</p>

<pre><code>public class SomeClass {
  public final static SOME_INSTANCE = new SomeClass(5);
  private SomeClass(final int value) {
  }
</code></pre>

<p>Marking it final saves you the trouble if finding out that it is actual a final, to demonstrate look at this Test class. looks public at first glance.</p>

<pre><code>public class Test{
  private Test(Class beanClass, Class stopClass, int flags)
    throws Exception{
    //  . . . snip . . . 
  }
}
</code></pre>

<p>Unfortunately, since the only constructor of the class is private, it is impossible to extend this class. In the case of the Test class, there is no reason that the class should be final. The Test class is a good example of how implicit final classes can cause problems.</p>

<p><strong>So you should mark it final when you implicitly make a class final by making it's constructor private.</strong></p>
"
"20941656","<p>The easiest way is, first change the method to a String and go ahead to accept input as a string.  You then control the input variable with an if-else or case statement as follows.</p>

<pre><code>Scanner reader = new Scanner(System.in);

String c = reader.nextLine();

switch (c) {
  case "" a"":
    your code here..
  break;
  case ""b"":
    your code here..
  break;
  default: 
    your code here..
}
</code></pre>

<p>but be sure to change the method to a String. This is the easiest way possible.</p>
"
"20945266","<pre><code>try {
    //Code here that cause OutOfMemoryError
} catch (Error ee) {
    ee.printStacktrace();
}
</code></pre>
"
"17328956","<p>just add your .jar file in applet tag as an attribute as shown below:</p>

<pre><code>&lt;applet
    code=""file.class""
    archive=""file.jar""
    height=550 
    width=1100&gt;         
&lt;/applet&gt;
</code></pre>
"
"20982494","<p>Anonymous classes are useful, but not applicable in most scenarios. This is as true for a <code>Thread</code> class, as for any other type of class.</p>

<p>In cases, for instance, that multiple instantiations of a Thread object are needed and that Thread object also has state (e.g., some calculation results), or communicates with other objects (e.g., via a queue), one has to extend the <code>Thread</code> class, or implementing the <code>Runnable</code> interface and then using a <code>Thread</code> constructor to actually start the thread.</p>

<p>The subject has been discussed extensively, so you can check the answers (and the links) posted to an <a href=""http://stackoverflow.com/questions/15471432/why-implements-runnable-is-preferred-over-extends-thread"">earlier StackOverflow question</a>, or many other similar ones.</p>
"
"17372626","<p>From my notes:</p>

<p>Methods named <strong>finalize()</strong> are called before the object is garbage-collected.  There is no need to free any objects, but some other resources (e.g. open file descriptors) may need to be freed.</p>

<pre><code>protected void finalize() throws IOException {
    if( fd != null ) closeIt() ;
}
</code></pre>

<p>Theoretically, a finalizer might do something to prevent an object from being garbage-collected (e.g. store ""this"" in some reference). This is never a useful thing to do.</p>

<p>Unlike constructors, finalizers are not automatically chained. It's a very good idea to chain them manually, preferably at the end of the finalizer:</p>

<pre><code>protected void finalize() {
    // free resources consumed by this class
    // chain upward:
    super.finalize() ;
}
</code></pre>
"
"17406854","<p>Other Solution is:</p>

<pre><code>public static double[] fatCoordinates(double lat,double lon){
    double phi = Math.toRadians(lat);
    double lambda = Math.toRadians(lon);
    double e2 = Math.pow(WGS_E,2);
    double Rn = WGS_A / Math.sqrt(1 - e2 * Math.pow(Math.sin(phi), 2));
    double[] XYZ = new double[3];
    XYZ[0] = Rn * Math.cos(phi) * Math.cos(lambda);
    XYZ[1] = Rn * Math.cos(phi) * Math.sin(lambda);
    XYZ[2] = Rn * (1 - e2) * Math.sin(phi);

    return XYZ;


}
</code></pre>

<p>with </p>

<pre><code>public static final double WGS_A = 6378137.0;


public static final double WGS_E = 0.0818191908426;
</code></pre>

<p>It's taken from <a href=""https://josm.openstreetmap.de/browser/josm/trunk/src/org/openstreetmap/josm/data/projection/Ellipsoid.java?rev=4382"" rel=""nofollow"">https://josm.openstreetmap.de/browser/josm/trunk/src/org/openstreetmap/josm/data/projection/Ellipsoid.java?rev=4382</a></p>
"
"21078604","<p>The method <code>findMP3</code> is declared as static. Static variables and methods are members of the class. </p>

<p>You can invoke it directly using the classname. So, it should be <code>findMP3Tracks.findMP3()</code></p>

<p>Also, a word about the static method. If you do know that the behaviour of the method isnt different for different instances, then you might/can declare it as static. Although, it is a design decision that you would make. If it does behave differently based on the passed in parameter, it is better off to have a method which isnt static. </p>
"
"21081078","<p>Comparing doubles like that is very problematic; due to the way double values are represented chances are that <code>totalRoll == 7.0</code> will not give you true, even if <code>totalRoll</code> is exactly 7.0. A better way to compare doubles (if you have to use them) would be something like this:</p>

<pre><code>while (Math.abs(totalRoll - 7.0) &gt; 0.0001 &amp;&amp; Math.abs(totalRoll - 11.0) &gt; 0.0001) { ... }
</code></pre>

<p>That way the inaccuracy of saving double values doesn't hurt you as much.</p>

<p><strong>Edit:</strong> As there have been downvotes, I'll post some more information to back up what I'm saying:</p>

<ul>
<li><a href=""http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html"" rel=""nofollow"">What Every Computer Scientist Should Know About Floating-Point Arithmetic</a> is a good article that shows various problems related to floats and doubles</li>
<li><a href=""http://stackoverflow.com/questions/6786254/is-it-safe-when-compare-2-float-double-directly-in-java"">This thread</a> explains in some detail how to compare two double values safely</li>
<li><a href=""http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html"" rel=""nofollow"">BigDecimal</a> is a class in the Java standard library which works for any precision, so its <a href=""http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html#compareTo%28java.math.BigDecimal%29"" rel=""nofollow"">compareTo</a> function will be more accurate than the method explained above</li>
</ul>

<p>Also, the following code prints <code>false</code> for me:</p>

<pre><code>System.out.println(((7.0 / 100) * 100) == 7.0);
</code></pre>

<p>If anyone has information that disproves what I'm saying then please tell me about it.</p>
"
"21113479","<p>The error occurs on line 3</p>

<pre><code>        byt = (byte[]) arrays.get(0) ;
</code></pre>

<p>arrays.get(0) returns a Byte which you then try to cast to a byte[]</p>
"
"21113600","<p>If you tried to put byte-arrays into the ArrayList arrays, then you should correct its declaration to:</p>

<pre><code>ArrayList&lt;Byte[]&gt; arrays = new ArrayList&lt;Byte[]&gt;();
</code></pre>

<p>and fill it with your data.</p>
"
"17486701","<p>you can just use two method</p>

<pre><code>if(yourTextFieldName.getText().endsWith(""."") &amp;&amp; yourTExtFieldName.startsWith(""."")) {
    //write your code here
}
</code></pre>
"
"17531427","<p>You can do this:</p>

<pre><code>tmp.replaceAll(""\\W"", """");
</code></pre>

<p>to remove punctuation</p>
"
"21168962","<p>These is the sample .You can create a boolean field and check it inside run:</p>

<pre><code>public class Sample implements Runnable {

   private volatile boolean isRunning = true;

   public void run() {

     while (isRunning) {
         //do work
     }
   }

   public void kill() {
       isRunning = false;
   }

}
</code></pre>

<p>To stop it just call</p>

<pre><code>sample.kill();
</code></pre>

<p>This should work.</p>
"
"21214125","<p>try this</p>

<pre><code>  list.remove(POJO);
  list.add(index,POJO);
</code></pre>
"
"21215477","<p>You can create an object reference of the main class in your derived class. Then call these methods using the object of your main class.</p>

<pre><code>class Main
{
  ------
} 

class derived
{
  Main m = new Main();double[] A=new double[1];
    Scanner s = new Scanner(System.in);
    int i=0,wc=1;
    int arrayGrowth=1;
    while(s.hasNext())
    {
      if (A.length == wc) {
                // expand list
                A = Arrays.copyOf(A, A.length + arrayGrowth);
                wc+=arrayGrowth;
               }
    A[i]=s.nextDouble();
    i++;
    }
    int len=A.length-1;
  m.findMin(A,len);
  m.computePositiveSum(A,len);
  m.countNegative(A,len);
}
</code></pre>
"
"17589294","<p>You can have an array with references to almost anything using <code>Object</code> class (you are not limited to arrays of <code>String</code>):</p>

<pre><code>Object [] myArr = {fruits, colors};
</code></pre>
"
"17665404","<p>Why don't you simply cast it like this:</p>

<pre><code>public Map&lt;K,V&gt; asMap() {
    return (Map&lt;K,V&gt;) this;
}
</code></pre>
"
"17678575","<p>If you know what extensions are important, you can simply check for them explicitly. You would have a collection of known extensions, like this:</p>

<pre><code>List&lt;String&gt; EXTS = Arrays.asList(""tar.gz"", ""tgz"", ""gz"", ""zip"");
</code></pre>

<p>You could get the (first) longest matching extension like this:</p>

<pre><code>String getExtension(String fileName) {
  String found = null;
  for (String ext : EXTS) {
    if (fileName.endsWith(""."" + ext)) {
      if (found == null || found.length() &lt; ext.length()) {
        found = ext;
      }
    }
  }
  return found;
}
</code></pre>

<p>So calling <code>getExtension(""file.tar.gz"")</code> would return <code>""tar.gz""</code>.</p>

<p>If you have mixed-case names, perhaps try changing the check to <code>filename.toLowerCase().endsWith(""."" + ext)</code> inside the loop.</p>
"
"17697776","<p>Try this one</p>

<pre><code>FileLocationWithExtension = ""nameofFile""+ "".*""
</code></pre>
"
"17767305","<p>You must have a <code>main</code> method to put your code in. Like this:</p>

<pre><code>public class Character
    public static void main(String[] args) {
        System.out.println(""Enter your new character's name."");
        System.out.println(""\t"");
        new Character(input.nextLine());
    }

    public Character(String name) {
        this.name = name;
    }

    String name;
    int level = 1;
    int XP = 0;
    int maxHP = 20;
    int HP = maxHP;
    int gold = 100;
    int potions = 0;
}
</code></pre>

<p>The comments suggested many other improvements, which are here too.</p>
"
"21462297","<p>This is another way (just to show another possibilty): </p>

<pre><code>    String number = String.valueOf(a);

    String firstNumber =  number.substring(0, 1);
    String secondNumber = number.substring(1);

    sum = Integer.parseInt(firstNumber) +  Integer.parseInt(secondNumber);
</code></pre>

<p>and remember to initialize sum not only declare it:</p>

<pre><code>    int sum = 0; 
</code></pre>

<p>also remember to close the scanner <code>br</code> when you finish working with it :</p>

<pre><code>    br.close;
</code></pre>
"
"17825931","<p>Try to use this <code>int count = ((Long) criteria.list().size()).intValue();</code></p>
"
"21484136","<p>if you have to insert a value in posgres DB you can do so:</p>

<pre><code>INSERT INTO TABLE_NAME (NAME_FIELD) VALUES('"" + YOUR_VARIABLE + ""'::inet)

INSERT INTO ""ManagerJob"".""InterfacciaRete"" (""Description"",""IPAddress"",""id"") VALUES ('eth0','192.168.2.143'::inet,1)
</code></pre>
"
"17854799","<p>Something like: </p>

<pre><code>new ArrayList&lt;ABC&gt;(getOfferCriteria().getCommitments().values()).get(0)
</code></pre>
"
"21513040","<p>I think you try to compare to strings with <code>==</code> when you should use <code>.equals()</code>. The strings are stored i a constant pool, but in this case you read a string from somewhere else, which not nescessarily goes into the constant pool.</p>

<p>Try</p>

<pre><code>assertTrue(outContent.toString().equals(""WINNER IS Bob""));
</code></pre>

<p>or whatever your testing library calls it.</p>

<p>which looks for the characters in the String instead of the memory address (""ref"") of the String.</p>
"
"17883298","<p>Static  variables are in classes alloaced in a special memory place meaning,  in your app exsists only 1 array <code>Myclass.list</code>, and the thing is they are not dynamic. So your list has to have a fixed size.</p>

<pre><code>public final  static String[] list=new String[]
    {""str1"", //0
    ""str2"", //1
    ""str3"", //2
    ""str4"", //3
    };
</code></pre>

<p>You can't modify those values, by result i doubt it will cause leaks.</p>
"
"21534651","<p>Try this</p>

<pre><code>#!/bin/bash

JARS=/home/guest/lib
CONFIG=/home/guest/AnalyticServer.properties

echo JARS=$JARS
echo CONFIG=$CONFIG

for file in `ls $JARS/*.jar`;
do
    classpath=$classpath:$file
done

cmd=""java -classpath $classpath com.test.ASDataSourceClient DELETE -c $CONFIG -n test_ds""
echo $cmd
exec $cmd
</code></pre>
"
"21542862","<p>Every open connection must be closed, or it won't get implemented and no errors will be displayed. First learned lesson.</p>

<pre><code>public static void DeleteRow(String name)
  {
     try 
     {  
        Class.forName(""com.mysql.jdbc.Driver"");
        Connection connection = DriverManager.getConnection(url, username, password);

        PreparedStatement st = connection.prepareStatement(""DELETE FROM Table WHERE name = "" + name + "";"");
        st.executeUpdate(); 
        connection.close();
     }
     catch(Exception e)
     {
         System.out.println(e);
     }
}
</code></pre>

<p>Hope this helps</p>
"
"17917233","<ol>
<li><code>Math.round(a*100)</code> makes <code>Math.round(12873)</code> results <code>12873</code> </li>
<li>result of step 1 <code>12873</code> is a <code>long</code> typed value but not a <code>double</code> value.</li>
<li>So when it divides by 100, generates an <code>non-decimal</code> result <code>12873/100 = 128</code>. </li>
<li>Now it stores in a double variable as <code>128.0</code>.</li>
</ol>

<blockquote>
<pre><code>double roundOff = Math.round(128.54);
System.out.println(roundOff);// output -- 129.0
double roundOff = Math.round(128.23);
System.out.println(roundOff);// output -- 128.0
double roundOff = Math.round(128.73);
System.out.println(roundOff);// output -- 129.0
double roundOff = Math.round(128.93);
System.out.println(roundOff);// output -- 129.0
</code></pre>
</blockquote>
"
"17962884","<p>That's an unfortunate design decision in Java that primitive types (<code>int</code> is one of them) are treated differently from objects. You cannot use <code>new</code> to create an <code>int</code>; you treat them just like you would in C, for example – just assign a value, no need to construct anything:</p>

<pre><code>int foo = 0;
</code></pre>

<p>Note that you cannot use local variables that haven't been initialised explicitly before.</p>

<p>There are wrapper classes, e.g. <code>Integer</code> that simply wrap primitive types to allow them to be used in contexts where an actual object or class is required (e.g. generics), but in your case that doesn't seem to be necessary.</p>
"
"21573156","<p>The following code should work:</p>

<pre><code>driver.manage().deleteAllCookies();
</code></pre>
"
"17992622","<p>In memory first IIB and SIB get executed then your main function loaded into stack that's why you getting this output. 
As it name suggest IIB (intilised instance block) this is very important static is like free sailors which are floating on sea can be used by any class before main method get executed. </p>

<pre><code>public class TestFirst

{
System.out.println("" From IIB"");

}
static
{
    System.out.println(""SIB "");
}

     public static void main(String   [] args){

System.out.println("" TestFirst "");

}

}
</code></pre>
"
"17995083","<pre><code> public static int numberOfOccurence(String yourString, char needle) {
      int nb = 0;
      for (int i=0; i &lt; yourString.length(); i++)
    {
        if (yourString.charAt(i) == needle)
                   nb++;

    }
    return nb;
}
</code></pre>

<p>You can also use Pattern and Matcher :</p>

<pre><code>   Pattern pattern = Pattern.compile(""i"");
   Matcher  matcher = pattern.matcher(""saigigd"");

   int count = 0;
   while (matcher.find())
   count++;
   System.out.println(count); 
</code></pre>
"
"18056443","<pre><code>public void webClick(View v) 
{
    Intent intent = new Intent(this, Webview.class);

    switch(v.getId())
    {
        case R.id.button1:
            intent.putExtra(""weblink"",""file:///android_asset/chapter/chapter1.html"");
            startActivity(intent);
            break;

        case R.id.button2:
            intent.putExtra(""weblink"",""file:///android_asset/chapter/chapter2.html"");
            startActivity(intent);
            break;

        case R.id.button3:
            intent.putExtra(""weblink"",""file:///android_asset/chapter/chapter3.html"");
            startActivity(intent);
            break;
.
.
.
.

        case R.id.button100:
            intent.putExtra(""weblink"",""file:///android_asset/chapter/chapter100.html"");
            startActivity(intent);
            break;
        default:
            break;
     }

}
</code></pre>
"
"18065618","<p>The issue here is that floating points are subject to floating point precision errors.  You can use <code>double</code> for twice the precision (you will still eventually get errors, but it is more accurate than using <code>float</code>).</p>

<p>E.g.</p>

<pre><code>public static void main(String[] args) {
    int q = 48;
    double p = 6.95;

    System.out.println(q * p);
}
</code></pre>

<p><a href=""http://ideone.com/Hphvyu"" rel=""nofollow"">This will give 333.6.</a></p>
"
"21731397","<p>Make it this way</p>

<pre><code>String phrase = ""WazzUp ? Who’s On FIRST??? IDUNNO"";
phrase = phrase.toLowerCase();

int count = 0;

int i = 0;
 System.out.println(phrase);

for (i = 0 ; i &lt; phrase.length(); i++) {

String t = phrase.substring(i, i + 1);

if (t == ""a"") {
  count++;
  System.out.println(count);
  }
if (t == ""e"") {
  count++;
  }
if (t == ""i"") {
  count++;
  }
if (t == ""o"") {
  count++;
  }
if (t == ""u"") {
  count++;
  }

  }

  System.out.println(count);
</code></pre>
"
"21757467","<p>The Java doc says,</p>

<pre><code>reverse()
Causes this character sequence to be replaced by the reverse of the sequence.
</code></pre>

<p>so it will replace your original String. </p>
"
"18165070","<p>In <code>someMethod</code> you are changing the internals of a passed object, hence it would persist even after returning back to main method, if its not your intention, then make <code>name</code> as <code>final</code>.</p>

<p>In <code>anotherMethod</code> you are creating a new object assigning to local variable and changing it, hence it wouldn't touch the passed object as you are expecting.</p>
"
"18205376","<p>The arguments passed to the main method are from command line. So they are <code>String</code></p>

<p>main method can also be written like this</p>

<pre><code>public static void main(String... args) {

 }
</code></pre>
"
"18213353","<p>In Java, objects are passed by reference, primitives are passed by value.</p>

<pre><code>public class Laser {
    public static void main(String[] args) {
        //Create a Box of size 5.
        Box b1 = new Box(5);
        //Create an array of Box objects, which are the results of the go method
        Box[] ba = go(b1, new Box(6));
        // ba now looks like {new Box(6), b1 /*b1 is size 4 now*/}
        // assign reference to b1 at index 0 in ba.
        ba[0] = b1;
        // array now looks like {b1, b1}
        for(Box b : ba)
            System.out.println(b.size + "" "");
    }

    static Box[] go (Box b1, Box b2) {
        //set the size of the first box to 4
        b1.size = 4;
        //create an array of boxes, with b2 in index 0 and b1 in index 1
        Box[] ma = {b2, b1};
        return ma;
    }
}
</code></pre>
"
"18227832","<p>How about comparing the paths?</p>

<pre><code>    boolean areRelated = file.getAbsolutePath().contains(dir.getAbsolutePath());
    System.out.println(areRelated);
</code></pre>

<p>or </p>

<pre><code>boolean areRelated = child.getAbsolutePath().startsWith(parent.getAbsolutePath())
</code></pre>
"
"18276885","<p>You can use the deepToString method from Java to print out your array.</p>

<p>Documentation Link:
<a href=""http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Arrays.html#deepToString%28java.lang.Object%5B%5D%29"" rel=""nofollow"">http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Arrays.html#deepToString(java.lang.Object[])</a></p>

<p>Here is a code sample:</p>

<pre><code>System.out.println(""Your translated message is:"" + java.util.Arrays.deepToString(translation));    
</code></pre>
"
"21911004","<pre><code>   SharedPreferences prefs = getSharedPreferences(""com.example.app"", Context.MODE_PRIVATE);
    String yourText = prefs.getString(""your_key"", ""
    EditText yourEditText = (EditText) findViewById(R.yourEditText.setText(yourText);
</code></pre>

<p>try like this. </p>
"
"21941313","<p>Add <code>&lt;meta-data&gt;</code>after closing <code>&lt;application&gt;</code> tag. This solved my problem</p>
"
"21976038","<p>This is how I would add stream functionality to an <code>Iterable&lt;T&gt;</code>.</p>

<pre><code>public interface StreamableIterable&lt;T&gt; extends Iterable&lt;T&gt; {

   public default Stream&lt;T&gt; stream() {
      final Stream.Builder&lt;T&gt; streamBuilder = Stream.builder();
      forEach(t -&gt; streamBuilder.add(t));
      return streamBuilder.build();
   }
}
</code></pre>

<p>Not sure if it's the correct way, but it fairly simply creates a stream from an <code>Iterable</code>.</p>
"
"21983850","<p>In your Servlet class, you can use the following code : </p>

<pre><code>ServletContext context = getServletContext();
String path = context.getRealPath(""/WEB-INF/Uploads/my.txt"");
</code></pre>

<p>Then the path should be correct. And then you can use a normal FileReader :</p>

<pre><code>FileReader reader = new FileReader(path);
BufferedReader br = new BufferedReader(reader);
String firstline = br.readLine();
System.out.println(firstline);
...
</code></pre>
"
"22019729","<p>The object of type <code>Item</code> that is being passed must be instantiated.</p>

<p>As pointed out by others, you cannot simply create it via:</p>

<pre><code>Item item = new Item(); // this does not work!
</code></pre>

<p>However, you can <code>extend</code> the class and create all the abstract methopds required and then instantiate the new class.</p>

<pre><code>class ItemB extends Item
{
  ...
}
</code></pre>

<p>Then you can work with the new class,</p>

<pre><code>ItemB item = new ItemB();
</code></pre>
"
"18329199","<p>A couple of questions you need to be clear before heading into your code and fix your coding issue. <br/></p>

<p>1) Why do you need to use ObjectInputStream and ObjectOutputStream? If you are just read and write string, better to use BufferedWriter and BufferedReader. We only use OIS and OOS to read and write object.</p>

<p>2) Your question is nothing related to the Serialization and De-serialization . Please do a google search to see how to do the proper serialize and de-serialize. In your code snippet:</p>

<pre><code>public class WriteFile implements java.io.Serializable // there is no meaning to implement the mark up interface here.
</code></pre>

<p>In short, only mark java.io.Serializable on a POJO or data object. </p>

<p>3) When you type ctrl-c or ctrl-z, there is a system interrupt signal triggered, the whole system will stop abruptly, that will cause the corruption of the data writing.</p>

<p>I spent a bit of time to write a complete <strong>working sample</strong> for you. Hopefully you can get sth from my sample.</p>

<p>ConsoleWriter</p>

<pre><code>/**
    * Write Console String to a file
    * When you type quit or save it will write to the file in one go.
    * 
    * @author Seabook Chen
    *
*/
public class SimpleConsoleWriter {
    private static final String NEW_LINE =  System.getProperty(""line.separator"");

    public static void main(String[] args) {

        if (args == null || args.length == 0) {
            throw new RuntimeException(""Please specify the file name!!!"");
        }

        String filepath = args[0];

        Scanner in = new Scanner(System.in);
        System.out.println(""Please input your comments ...."");
        System.out.println(""Type quit to finish the input! Please type exact quit to quit!!!"");
        System.out.println(""Type save to write to the file you specified. "");

        StringBuilder sb = new StringBuilder();
        while(true) {
            String input = in.nextLine();

            if (""quit"".equalsIgnoreCase(input) || ""save"".equalsIgnoreCase(input)) {
                System.out.println(""Thanks for using the program!!!"");
                System.out.println(""Your input is stored in "" + filepath);
                break;
            }

            sb.append(input);
            sb.append(NEW_LINE);

        }

        FileWriter fw = null;
        BufferedWriter bw = null;

        try {
            fw = new FileWriter(filepath, true);
            bw = new BufferedWriter(fw);
            bw.write(sb.toString(), 0, sb.toString().length());
            bw.flush();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (fw != null) {
                try {
                    fw.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

            if (bw != null) {
                try {
                    bw.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }


    }
}
</code></pre>

<p>SimpleConsoleReader</p>

<pre><code>/**
 * Read a file and output in the console 
 * 
 * @author Seabook Chen
 *
 */
public class SimpleConsoleReader {
    public static void main(String[] args) {
        if (args == null || args.length == 0) {
            throw new RuntimeException(""Please specify the file name!!!"");
        }
        File file = new File(args[0]);
        FileReader fr = null;
        BufferedReader br = null;
        String nextLine = null;
        try {
            fr = new FileReader(file);
            br = new BufferedReader(fr);

            while((nextLine = br.readLine()) != null ) {
                System.out.println(nextLine);
            }

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (fr != null) {
                try {
                    fr.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }

            if (br != null) {
                try {
                    br.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}
</code></pre>
"
"22070601","<pre><code>import java.util.*;
class dt
{
    Date d;
    String mon;         
    dt()
    {   d= new Date();
        mon = """"+(d.getMonth()+1)+"""";
        System.out.println("" mon is ""+);        
    }
    public static void main(String[]avi)
    {     new dt();   }
}
</code></pre>

<p>this code will return current month</p>

<p>like... use method d.getYear() to get current year</p>

<p>note: mon = """"+(<strong>d.getMonth()+1</strong>)+"""";
in this i've added 1 month because this method returns 0 -> for jan, 1 -> for feb etc...</p>
"
"22090559","<p>You can implement this by event <code>onChange</code>.</p>
"
"18361326","<p>Creating a instance of an object inside the object could lead into a StackOverflowError since every time that you create an instance from this ""<code>Test</code>"" class you will be creating another instance and another instance and so on.. try to avoid this practice!</p>

<pre><code>public class Test  {       
       public Test() {  
         Test ob = new Test();       
       }  

      public static void main(String[] args) {  
        Test alpha = new Test();  
      }  
      } 
</code></pre>
"
"22151954","<p>No, there's no better way. Instances of <code>Collection</code> can only hold onto objects, not primitives. So your workaround is the way to go.</p>

<p>Unless you are coding a time critical component, wondering about memory usage and/or performance in this case might indicate you are victime of premature optimization. </p>
"
"18423720","<p>Instead of giving you the answer/solution to your homework, I am going to help you figure out how to figure it out. :)</p>

<p>In order to adequately debug your software and troubleshoot what's going on, <strong>you need to know what your variables are doing.</strong> There are two methods:</p>

<ol>
<li>Attach a debugger - Most IDEs will come with a debugger that will help you accomplish this.</li>
<li>Print out your variables to the console. This is my preferred method. Me and debuggers never have gotten along well together. :)</li>
</ol>

<p>So, here is what I would do if I were trying to figure your program out:</p>

<pre><code>import java.util.Scanner;

public class Change {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);

//        System.out.println(""Enter Purchase Price: "");

        double price = 5.65d;//scan.nextDouble();

        int newPrice = (int) (price * 100);
        System.out.println(""newPrice: "" + newPrice);

        int paid = (int) (newPrice + 1);
        System.out.println(""paid: "" + paid);

        int change = (int) (paid - newPrice);
        System.out.println(""change: "" + change);

        int quarters = (int) (change / 25);
        int dimes = (int) ((change % 25) / 10);
        int nickels = (int) ((change % 25 % 10) / 5);
        int pennies = (int) (change % 25 % 10 % 5);

        System.out.println(""Dispensing: "" + quarters + "" Quarters,""
                + dimes + ""Dimes,"" + nickels + ""Nickels,""
                + pennies + ""Pennies."");

        System.out.println(""Program written by Ashley "");
    }
}
</code></pre>

<p>(Note: Instead of utilizing the scanner, I just manually entered ""5.65"" into the <code>price</code> variable just to save time)</p>

<p>Which produces the output:</p>

<pre><code>newPrice: 565
paid: 566
change: 1
Dispensing: 0 Quarters,0Dimes,0Nickels,1Pennies.
Program written by Ashley 
</code></pre>

<p>So, now you can see what your program is doing wrong. Can you spot it?</p>
"
"18448635","<p>It is always good or rather necessary to compare your java objects using <code>equals</code> instead of <code>==</code> operator.  Because in equals implementation, you can compare the objects against their attributes values. Whereas using ==, you can only check whether two reference are pointing to the same memory object or not.</p>

<p>In case of hashed collection it becomes more important because of the complexity of retrieval of objects. </p>
"
"22233875","<p>Try this :- </p>

<pre><code>Scanner keyboard = new Scanner(System.in);
    ArrayList runs = new ArrayList();


    System.out.println(""Enter non empty string of 1s and 0s"");
    String input = keyboard.nextLine();
    char[] array = input.toCharArray();

    for(int i = 0; i &lt; input.length()-1; i++)
    {
        if(array[i] == array[i+1])
        {
            runs.add(i);
        }

    }
    for(int i = 0; i&lt;= array.length; i++)
    {
        System.out.println(runs);
    }
</code></pre>
"
"18528173","<p>You can use this code   </p>

<pre><code>&lt;LinearLayout xmlns:android=""http://schemas.android.com/apk/res/android""
xmlns:tools=""http://schemas.android.com/tools""
android:layout_width=""match_parent""
android:layout_height=""wrap_content""
android:gravity=""right""
android:orientation=""vertical""
android:paddingBottom=""@dimen/activity_vertical_margin""
android:paddingLeft=""@dimen/activity_horizontal_margin""
android:paddingRight=""@dimen/activity_horizontal_margin""
android:paddingTop=""@dimen/activity_vertical_margin"" &gt;

&lt;RelativeLayout
    android:layout_width=""match_parent""
    android:layout_height=""wrap_content"" &gt;

    &lt;ImageView
        android:id=""@+id/icon""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:layout_alignParentLeft=""true""
        android:src=""@drawable/ic_launcher"" /&gt;

    &lt;TextView
        android:id=""@+id/title""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:layout_toRightOf=""@id/icon""
        android:gravity=""center_vertical""
        android:text=""Test title""
        android:textSize=""16sp"" /&gt;

    &lt;TextView
        android:id=""@+id/secondLine""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:layout_below=""@id/title""
        android:layout_toRightOf=""@id/icon""
        android:singleLine=""true""
        android:text=""Details""
        android:textAppearance=""?android:attr/textAppearanceSmall"" /&gt;
&lt;/RelativeLayout&gt;

&lt;View
    android:layout_width=""match_parent""
    android:layout_height=""1dp""
    android:background=""#000000""
    android:layout_marginLeft=""2dp"" /&gt;

&lt;LinearLayout
    android:layout_width=""wrap_content""
    android:layout_height=""wrap_content""
    android:orientation=""horizontal"" &gt;

    &lt;Button
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:text=""Button1"" /&gt;

    &lt;View
        android:layout_width=""1dp""
        android:layout_height=""match_parent""
        android:background=""#000000""
       android:layout_marginLeft=""2dp"" /&gt;

    &lt;Button
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:text=""Button2"" /&gt;
&lt;/LinearLayout&gt;
</code></pre>

<p></p>

<p>Modify the code w.r.t your need</p>
"
"18544656","<pre><code>Integer int = null;
</code></pre>

<p>ints are primitives, they have default values different from null.</p>
"
"18544673","<p>The simple boxed Integer <code>Integer i = null;</code> has already been supplied. Here is an alternative:</p>

<pre><code>class NullableInt {
    private int value;
    private boolean isNull;
    public NullableInt() { isNull = true; }
    public NullableInt(int value) { 
      this.value = value; 
      isNull = false;
    }
    public NullableInt(String intRep) {
      try { value = Integer.parseInt(intRep);
      } catch (NumberFormatException) {
         isNull = true;
      }
    }
    boolean isNull() { return isNull; }
    void setNull(boolean toNull) { isNull = toNull; }
    void setValue(int value) { this.value = value; }
    int getValue() { return value; }
    @Override 
    public String toString() { return isNull ? """" : value; }
}

NullableInt integer1 = new NullableInt(56);
NullableInt integer2 = new NullableInt();

System.out.pritnln(integer1); // &gt;&gt; ""56""
System.out.println(integer2); // &gt;&gt; """"

// and finally, to address the actual question:
String id = """";
System.out.println(new NullableInt(id)); // &gt;&gt; """"
</code></pre>
"
"22318358","<pre><code>File f = new File(""test.txt"");
            String [] str = f.getName().split(""\\."");
            if(str.length&gt;1) {
                System.out.println(str[1]);
            }else {
                System.out.println(""No extension. File name is :"" + str[0]);
            }
</code></pre>
"
"18553638","<p>Don't use generics:</p>

<pre><code>public interface Foo {
    public void doSomething(Foo foo);
}
</code></pre>
"
"18553721","<p>Indeed. I'd advocate that we use <code>This</code> as the conventional name for such type parameters</p>

<pre><code>public interface IComparesWith&lt;This&gt; 
{
    int compare(This t);
}
</code></pre>

<p>my previous answer: <a href=""http://stackoverflow.com/questions/16022443/convenient-way-to-write-generic-interface-that-points-out-to-its-implementor/16023983#16023983"">Convenient way to write generic interface that points out to its implementor</a></p>
"
"22337380","<p>Use an escape character </p>

<pre><code>                String saveUser = ""user"";
            String timeOfMAking = String.valueOf(time);
            CharSequence Title = saveUser +"" \- ""+ timeOfMAking;
</code></pre>
"
"18567477","<p>Change it as</p>

<pre><code>    for(int i = 0; i&lt;width; i++){
        for(int j = 0; j&lt;width; j++){
</code></pre>
"
"22501246","<p>Call <code>wait()</code> method on the thread whenever button is clicked or event happens (whenever you desire) and again call <code>notify()</code> method to resume the thread</p>
"
"22501429","<p>Instead do something like this</p>

<pre><code>   public int fightMath(int one, int two) {
    return Calculate(one,two)

    }


    private int Calculate(int one,int two){

    if (one==0){
        if(two==0){
     //return value}
    }else if (one==1){
   // return value as per condtiion
    }

    }
</code></pre>
"
"22501786","<pre><code>private Thread thread = new Thread(new ClientThread());
private boolean isStarted = false;
btnUpload.setOnClickListener(new View.OnClickListener() {

        @Override
        public void onClick(View v) {
            if (!isStarted)
                thread.start();
            else
                thread.stop();
    }
});
</code></pre>

<p>Try this.</p>
"
"22503816","<p>The correct syntax is the following :</p>

<pre><code>if (positionE != -1){
   if ((position == -1) || (positionE &lt; position))
                   position = positionE;
}
</code></pre>

<p>The several conditions must be written inside one only if.</p>
"
"22504172","<p>Use this:   </p>

<pre><code>if (positionE!=-1) {
    if ((position==-1) || (positionE&lt;position)) {
         position = positionE;
    }        
}
</code></pre>
"
"18758937","<p>You should use Apache Commons IO: <a href=""http://commons.apache.org/proper/commons-io/"" rel=""nofollow"">http://commons.apache.org/proper/commons-io/</a></p>

<p>See <code>IOUtils.copy()</code> <a href=""http://commons.apache.org/proper/commons-io/javadocs/api-release/index.html?org/apache/commons/io/package-summary.html"" rel=""nofollow"">http://commons.apache.org/proper/commons-io/javadocs/api-release/index.html?org/apache/commons/io/package-summary.html</a></p>
"
"22523946","<p>Check This: <strong>Insert Values of ArrayList into HashMap</strong>  </p>

<pre><code>HashMap&lt;String, Item&gt; itemMap = new HashMap&lt;String, Item&gt;();

for (Item item : itemList) 
{
   itemMap.put(item.getitemCode(), item);
}
</code></pre>
"
"22540205","<p>Usually Iterator it's a bit speeder than to do a for loop using <code>objects.get(i)</code>, but the difference has no real impact on your code.
The main advantage of Iterator is that you can remove an object from the list during its crossing by calling the remove method on iterator. </p>
"
"22600981","<p>I don't know how your packages separated,while when the transport data contains too many parameters,My advice is to create a new Object that calls <i>DTO</i>(data transport object) in javaee.As you said,it's not easy to guarantee. Otherwise,to use <i>CALLBACK</i> is a better way that could be easily guaranteed and extended.Nothing is perfect,you'd choose which aspect is your attention.
<br>callback seen as</p>

<pre><code>void function(Callback callback){
    callback.do();
}
</code></pre>

<p>This is my advice but not a exactly correct way.Maybe it's helpful for you.</p>
"
"22603149","<p>As the asker said <code>main</code> belongs to <code>Son</code> class and is extending <code>Father</code>. I modified the code a little, so I was able to compile.</p>

<pre><code>    class Father {
    static{
        System.out.println(""f - static"");

    }
}

public class Son extends Father {
    static {
        System.out.println(""son - static"");
    }

public static void main(String[] args) throws ArrayIndexOutOfBoundsException{
        int a[] = new int[2];
        System.out.println(a[3]);
    }
}
</code></pre>

<p>And the output is:-</p>

<pre><code>f - static
son - static
Exception in thread ""main"" java.lang.ArrayIndexOutOfBoundsException: 3
    at kanwal.Son.main(Son.java:20)
</code></pre>

<p>Its working exactly, the way it is supposed to.</p>

<p><strong>EDIT:-
This answer was made, before OP edited the question.</strong></p>
"
"22628588","<p>use <code>? :</code> operator, else will not be required.
So that same code will be eliminated and also there will not be another method or <code>goto</code> in picture.</p>

<p><strong>Note :</strong> However this will not print exact result if <code>a &gt; 5</code> and <code>b &lt; 7</code>.
Extra <code>""I don't like your variables""</code> will not be printed in that case.</p>

<p>Example :</p>

<pre><code>string result = ""I don't like your variables"";

if (a &gt; 5)
{
    result = (b &gt; 7) ? ""Even better, b &gt; 7"" : ""Very well, a &gt; 5"";
}

Print(result);
</code></pre>
"
"18852856","<p>This will work for you</p>

<p><a href=""http://regex101.com/r/cB2oN4"" rel=""nofollow""><code>^end\s([a-zA-Z]+[0-9]+)$</code></a> explanation and proof is at the link.</p>

<p><em>NOTE:</em> Here is why yours doesn't work: <a href=""http://regex101.com/r/aI9yZ8"" rel=""nofollow""><code>^end\\s+[a-zA-Z]{1}[a-zA-Z_0-9]</code></a></p>
"
"18861336","<p>You have a semicolon immediately after <code>if</code> so it is not executed. Change:</p>

<pre><code>if (Add == true);
</code></pre>

<p>to:</p>

<pre><code>if (Add == true)
</code></pre>

<p>Also you should consider using <code>boolean</code> primitive instead of <code>Boolean</code> class.</p>
"
"22663313","<p>you could write as:</p>

<pre><code>Iterator&lt;Map.Entry&lt;String,String&gt;&gt; iter = map.entrySet().iterator();
    while (iter.hasNext()) {
        Map.Entry&lt;String,String&gt; entry = iter.next();
        if(null == (entry.getValue())){
            iter.remove();
        }
    }
</code></pre>
"
"18876094","<p>I think java really messed with regular expression in String.replaceAll();</p>

<p>Other than java I have never seen a language parse regular expression this way. You will be confused if you have used regex in some other languages.</p>

<p>In case of using the ""\"" in replacement string, you can use <code>java.util.regex.Matcher.quoteReplacement(String)</code></p>

<pre><code>String.replaceAll(""/"",Matcher.quoteReplacement(""\\""));
</code></pre>

<p>By using this <code>Matcher</code> class you can get the expected result.</p>
"
"18912252","<p>Camel removes headers after sending a message to an endpoint using the <code>to</code> operation.</p>
"
"22740306","<p>You need to use mysql STR_TO_DATE function</p>

<p><a href=""http://dev.mysql.com/doc/refman/5.1/en/date-and-time-functions.html#function_str-to-date"" rel=""nofollow"">http://dev.mysql.com/doc/refman/5.1/en/date-and-time-functions.html#function_str-to-date</a></p>

<pre><code>String query = ""select name from table 
where 
      table.date &gt; STR_TO_DATE(gt, '%d/%m/%y')
      AND 
      table.date &lt; STR_TO_DATE(gt1, '%d/%m/%y')"";
</code></pre>
"
"18954482","<p>This will basically take the first integer before the first dot. Make sure to do appropriate checks if the script is empty or if a dot even exists first.</p>

<pre><code>String versionInt = deviceVersion.split(""\\."")[0];
</code></pre>
"
"22826442","<p>There is an important distinction between call by value and call by name. Javascript is a call-by-value language - all parameters are passed as values. However, the value of a variable containing an object is a reference to that object; changing the contents of the object does not constitute changing the function parameter (strictly speaking). I.e. if you call <code>mergeSort(a)</code>, when it returns, the <code>a</code> is still the same <code>a</code>, pointing at the same memory location, but it will have different content.</p>
"
"22826549","<p>Both of the previous answers posted here are incorrect. Java is a strictly By Val language. You cannot pass a reference to an object through a method call in java. When you pass <code>a</code> you are passing the value of the object <code>a</code>, essentially creating a new localized object that only exists inside of the one method to which it is passed. The only way you could be actually changing the value of the list <code>a</code> through a method call and get the value of that method back to the same scope from which it was called, is either by having a return statement, or if the method <code>mergeSort</code> explicitly sets the value of a variable <code>a</code> defined in a scope above that of the place where you call <code>mergeSort</code>. For example, see this: <a href=""https://ideone.com/HEm2S3"" rel=""nofollow"">https://ideone.com/HEm2S3</a></p>
"
"22837439","<pre><code>String s = ""http://www.freegreatpicture.com/files/146/26189-abstract-color-background.jpg"";
s = s.substring(s.indexOf(""/"", str.indexOf(""/"") + 1));
</code></pre>
"
"19091463","<p>There is nothing wrong with the output. Just check and recheck again. the output will </p>

<pre><code>Inside first method.
Inside third method.
Inside first method.
Inside second method.
Inside first method.
Inside second method.
Inside first method.
Inside third method.
Inside first method.
Inside second method.
Inside first method.
</code></pre>

<p>thanks.</p>
"
"19115383","<p>this might help</p>

<pre><code>&lt;style name=""Style""&gt;  
&lt;item name=""android:textSize""&gt;9px&lt;/item&gt;
&lt;item name=""android:gravity""&gt;center_horizontal&lt;/item&gt;
&lt;item name=""android:textColor""&gt;#fff&lt;/item&gt;
&lt;item name=""android:textStyle""&gt;bold&lt;/item&gt;
</code></pre>

<p>
in selector</p>

<pre><code>&lt;selector xmlns:android=""http://schemas.android.com/apk/res/android""&gt;
&lt;item android:state_focused=""true""
  android:state_pressed=""false"" 
  style=""@style/Style"" /&gt; &lt;/selector&gt;
</code></pre>
"
"19133584","<p>Use Double, not double.</p>

<pre><code>Double  dValue= someVariable;

if(!dValue.isNaN())
{
 // you code here
}
</code></pre>
"
"22922312","<pre><code>for (int i = 0; i &lt; r; ) {
    for (int j = 0; j &lt; c; ) {
            int n = (int)(Math.random()*(474))+1;
                if(!myList.contains(n)) {
                    myList.add(n);
                    myList.add(n);
                    i++;
                    j = j+2;
                }
    }
}
</code></pre>
"
"19152872","<p>Just use <code>TimerTask</code> to repeat it on particular time interval.</p>

<pre><code>//Declare the timer
Timer t = new Timer();
//Set the schedule function and rate
t.scheduleAtFixedRate(new TimerTask() {

    @Override
    public void run() {
        // Call your service or broadcasting or whatever here that is going to be repeated.
        //Called each time when 1000 milliseconds (1 second) (the period parameter)
        // Here you can specify that this action repeat after whatever time.
    }

},
//Set how long before to start calling the TimerTask (in milliseconds)
0,
//Set the amount of time between each execution (in milliseconds)
1000);
</code></pre>
"
"22935705","<p>Try adding a <code>br.close();</code> at the end of the try block. This flushes the buffer and will give the data from the file.</p>
"
"22935760","<p>Try this:</p>

<pre><code>File myFile = new File(""files"", ""ISBN 123-654.txt"");
</code></pre>
"
"19212494","<p>The problem is you are setting the direction based on the value of the integer, instead of whether a condition has previously been met.  Try this:</p>

<pre><code>//this bit is in a method which is continiouly called nonstop
    if (forward &amp;&amp; (goalieposx&gt;200)){
        forward=false;
    }

    System.out.println(forward);

    if(forward=true){
        goalieposx++;
        System.out.println(""forward"");
    }
    else if (forward=false){
        goalieposx--;
        System.out.println(""backwards"");
    }

}
</code></pre>
"
"23057728","<p>in the MainActivity you should correctly implement OnClickListener interface:</p>

<pre><code>@Override
public void onClick(View v) {
    switch(v.getId()) {
        case R.id.imageButton1:
            Intent intent = 
            new Intent(this, OtherActivity.class);
            startActivity(intent);
            break;
        case R.id.imageButton2:
            Intent intent = 
            new Intent(this, OtherActivity2.class);
            startActivity(intent);
            break;
     }
}
</code></pre>
"
"23078916","<p>Just put System.gc(); after new Prac().call(); line.. your finalize would be called..(It is not guarantee) your code will look like this..</p>

<pre><code>public static void main(String[] args) throws InterruptedException
{
    new Prac().call(); //line 1
    System.gc();
    Thread.sleep(1000); //line 2 object a is eligible for GC.

}
</code></pre>
"
"23147506","<p>Give the structure of your project please.
If you have a Maven project, your code should be as follows:</p>

<pre><code>URL imageURL = LoginWindow.class.getClassLoader().getResource(""src/main/resources/img/pause.png"");
</code></pre>
"
"23147609","<p>try this if you are  running in an applet</p>

<pre><code>URL url = new URL(getCodeBase(), ""resources/img/pause.png"");
</code></pre>
"
"19378918","<p>YES:</p>

<p>look @ static {} I added to your code</p>

<pre><code>public class A {
    static{
        boolean is4cselected=false;
    }

        public A(){
            //
    //
        }
        public void set4c(){
            is4cselected=true;
        }

    }
    class B{
        public static void main(String args[]){
            A a=new A();
            a.set4c();

        }

    }
</code></pre>
"
"23206352","<p>Make the inner class (Viewer) static
<code>public static class Viewer extends JFrame</code>
you can not acces non-static things from static methods</p>
"
"19436447","<p>Method  3 is not thread-safe, meaning that if multiple callers come in at the same time, you can end up with more than one singleton.  Method 1 and 2 will work and are essentially the same thing.  You might want to consider this example, using <a href=""http://en.wikipedia.org/wiki/Double-checked_locking"" rel=""nofollow"">double check locking</a>:</p>

<pre><code>Class ClassX{  
   private static ClassX objX = null;

   public static ClassX getInstance(){
      if(objX == null)
          synchronized(this) {
              if(objX == null)
              objX = new ClassX();
          }

      return objX;
   }
}
</code></pre>

<p>It may seem silly, but double-checked locking is thread safe and far cheaper than using a <code>synchronized</code> version of <code>getInstance()</code>, which makes absolutely sure that you will only ever have 1 <code>ClassX</code> instance.  Also, this allows you to pass data into <code>getInstance()</code> should you choose to use it as a factory or service locator who's job it is to create or store singletons.</p>
"
"23239981","<p>@Emracool... I'd suggest you an alternative. Since you seem to be trying to load a *.txt file. Better to use <code>FileInputStream()</code> rather then this annoying <code>getClass().getClassLoader().getResourceAsStream()</code> or <code>getClass().getResourceAsStream()</code>. At least your code will execute properly.  </p>
"
"23271771","<p>You could use this :</p>

<pre><code>if(Arrays.binarySearch(newAlphabet, letters) &lt; 0){
  newAlphabet[I] = letters;
 }
</code></pre>

<p>You should either include a <code>while</code> loop to make sure each index of the array is filled before moving to the next or you could make use of the return value of <code>Arrays.binarySearch</code> which is <code>(-(insertion index) - 1)</code> to fill the array and exit when the array is filled up.</p>
"
"23387416","<pre><code>public class JavaApplication55 {

    public static void main(String[] args) {

        int[] array ={234,435,567,768,123,456,789,789,5670,6789};
     for(int j =0;j&lt; array.length;j++){  
        for(int i =j+1;i &lt; array.length;i++ ){
        int temp;

            if(array[j]&gt;array[i]){

            temp =array[j];
            array[j] =array[i];

            array[i] =temp;

            }

            else{}


        }}





        for(int k =0;k&lt; array.length;k++){

            System.out.println(array[k]);

        }

    }
enter code here

}
</code></pre>
"
"19491771","<p>Finally I solved this by adding another pattern. At first I am looking for a string like <code>&lt;input ... name='MD' ... /&gt;</code> by pattern <code>"".*?(&lt;input[^&lt;&gt;]*name=\\\""MD\\\""[^&lt;&gt;]*&gt;).*?""</code> and after that I am looking for a value in result string with pattern <code>"".*?value=\\\""(.*?)\\\""""</code></p>

<p>Thank u everyone for help</p>
"
"19512216","<p>I spot the problem, see java.util.HashMap#get source code, it contains:</p>

<pre><code>public V get(Object key) {
        if (key == null)
            return getForNullKey();
        int hash = hash(key.hashCode());
        for (Entry&lt;K,V&gt; e = table[indexFor(hash, table.length)];
             e != null;
             e = e.next) {
            Object k;
            if (e.hash == hash &amp;&amp; ((k = e.key) == key || key.equals(k)))
                return e.value;
        }
        return null;
    }
</code></pre>

<p>So it check key with equals before returning the value.</p>
"
"19549317","<p><a href=""http://www.pretechsol.com/2013/10/how-to-check-if-string-contains-only.html#.UmgRIxAVuPA"" rel=""nofollow"">http://www.pretechsol.com/2013/10/how-to-check-if-string-contains-only.html#.UmgRIxAVuPA</a>   </p>

<p>private static boolean isNumber(final String number) {</p>

<pre><code>        boolean bisNumber = false;

        if (number == null) {

            bisNumber = false;

        }

        try {

            Integer.parseInt(number);

            bisNumber = true;

        } catch (NumberFormatException ne) {

            bisNumber = false;

        }

        return bisNumber;

    }
</code></pre>
"
"19553447","<p>Simply reverse the string before looping through it</p>

<pre><code>digit = new StringBuilder(digit).reverse().toString();
</code></pre>
"
"23568552","<p>intList is and ArrayList and you cant access it via []. That is an array operator. Instead to set to an index try</p>

<pre><code>intList.add(i, Integer.parseInt( (String) myList.get(i) ));
</code></pre>
"
"19581486","<ol>
<li><code>import</code> is done at runtime and <code>include</code> is done at the compile time.</li>
<li><code>import</code> act like <code>linker</code> which provides the path of required class file to the <code>jvm</code> and loads that class file to the RAM .</li>
</ol>

<p>Where include loads all the files to the RAM then starts the execution of the program.so include increases the overhead of the processor.
3. basically  c uses include beacause it is based on the concept of  static loading and java uses import because it is based on the concept of  dynamic loading.
You can refer <a href=""http://stackoverflow.com/questions/439662/what-is-the-difference-between-import-and-include-in-objective-c"">here</a></p>
"
"19597367","<p>class Dog {</p>

<pre><code>int size;
String breed;   
String name;
</code></pre>

<p>Void bark() {</p>

<pre><code>System.out.println(""Ham! Ham!"");
</code></pre>

<p>}
}</p>

<p>//this is the fist class</p>
"
"23625618","<p>Name of your class is <code>List</code> while jre has its own class List in <code>java.util.List</code> which you are importing.</p>

<p>Change the name of your class, it cant be any java's API name</p>
"
"23638339","<p>you can probably do it like this:</p>

<pre><code>String k = null;
String v = null;
options.put(k,v);
</code></pre>
"
"19629928","<p>You can use variable arguments concept in this case.</p>

<pre><code>method(int… ids){
    userid = ids[0];
    productid = ids[1];
}
</code></pre>
"
"23743318","<p>I solved it by using the Singleton Design Pattern in my <code>User</code> class. Just so people can look that up to solve this if they are having the same issues!</p>

<p>Cheers and thanks for all the replies!</p>
"
"19653269","<p>String in an immutable Object. And as of intern() function as per javadoc</p>

<pre><code>When the intern method is invoked, if the pool already contains a
string equal to this &lt;code&gt;String&lt;/code&gt; object as determined by
the {@link #equals(Object)} method, then the string from the pool is
returned. Otherwise, this &lt;code&gt;String&lt;/code&gt; object is added to the
pool and a reference to this &lt;code&gt;String&lt;/code&gt; object is returned.
</code></pre>

<p>So you must assign the return value Eg <code>string = string.intern();</code></p>

<p>As for your output it should be <code>true</code> irrespective of your class name because as mentioned above it has nothing to do with calling intern().</p>
"
"19690113","<p>EDIT:  I do not advocate using <code>java.util.Vector&lt;E&gt;</code>, but since you are coming from a C background, it might give you a warm fuzzy to use the same name. However, you should note (from <a href=""http://docs.oracle.com/javase/7/docs/api/java/util/Vector.html"" rel=""nofollow"">the Java API</a>)</p>

<blockquote>
  <p>Unlike the new collection implementations, Vector is synchronized. If a thread-safe implementation is not needed, it is recommended to use ArrayList in place of Vector.</p>
</blockquote>

<p>So it's best to use some other implementation of <code>java.util.List&lt;E&gt;</code> -- most common to use <code>java.util.ArrayList&lt;E&gt;</code></p>
"
"23829649","<p>Martin Baumgartner is probably right, try changing your lookup to: </p>

<pre><code>DataSource datasource = (DataSource) initialContext
            .lookup(""jdbc/dbcob"");
</code></pre>

<p>This will probably fix the error</p>
"
"19723358","<p>There is never a point to declaring a static method in an interface. They cannot be executed by the normal call MyInterface.staticMethod(). (EDIT:Since that last sentence confused some people, calling MyClass.staticMethod() executes precisely the implementation of staticMethod on MyClass, which if MyClass is an interface cannot exist!) If you call them by specifying the implementing class MyImplementor.staticMethod() then you must know the actual class, so it is irrelevant whether the interface contains it or not.</p>

<p>More importantly, static methods are never overridden, and if you try to do:</p>

<pre><code>MyInterface var = new MyImplementingClass();
var.staticMethod();
</code></pre>

<p>the rules for static say that the method defined in the declared type of var must be executed. Since this is an interface, this is impossible.</p>

<p>You can of course always remove the static keyword from the method. Everything will work fine. You may have to suppress some warnings if it is called from an instance method.</p>

<p>To answer some of the comments below, the reason you can't execute ""result=MyInterface.staticMethod()"" is that it would have to execute the version of the method defined in MyInterface. But there can't be a version defined in MyInterface, because it's an interface. It doesn't have code by definition.</p>
"
"23875940","<p>Try this out:</p>

<pre><code>stringHextoBinary[l] = new BigInteger(s,16).toString(2);
</code></pre>

<p>What this is doing is creating a new Integer with radix of 16 for you hex numbers and then converting that to a string of base 2 (binary). Haven't tested this out since I am not near a computer with a jvm installed but this is just an idea since you seem to need ideas in a hurry.</p>

<p>This should work too:</p>

<pre><code>stringHextoBinary[l] = Integer.toBinaryString(Integer.parseInt(s, 16));
</code></pre>
"
"23917975","<p>There are no such special method in ConcurrentHashMap.</p>

<p>You should implement pooling of your collection in second thread.
The simplest way is following:</p>

<pre><code>while (map.isEmpty()) {
   Thread.sleep(100);
}
map.get(0);
</code></pre>

<p>Also you can take a look into <code>BlockingQueue</code>, that have poll method. It can help with your task.</p>
"
"19770385","<p><code>Arrays.fill</code> will help you. </p>

<p>You can do like this </p>

<pre><code>ObjectA objs[] = new ObjectA[10];       
Arrays.fill(objs, getA());

//just printing objects     
for (int x = 0; x &lt; objs.length; x ++)
      System.out.println(objs[x]);
</code></pre>
"
"23930571","<p>Do you know
windows.setTimeout</p>

<p><a href=""http://www.w3schools.com/jsref/met_win_settimeout.asp"" rel=""nofollow"">http://www.w3schools.com/jsref/met_win_settimeout.asp</a></p>

<p>This is what you need</p>

<p>For example</p>

<pre><code>var resetTime_int;
function resetTimer(){
    if(resetTime_int) window.clearTimeout(resetTime_int)
    resetTime_int=window.setTimeout(function (){
    if(prompt('Your session is going to be end by 5 min, Please click OK to continue'))     
    location.reload()
    }, 1000*60*25)
}

resetTimer()
document.onmousemove=resetTimer
document.onkeyup=resetTimer
</code></pre>

<p>1000*60*25 = 25 Minutes.</p>
"
"23932773","<pre><code>Print the flowersInVase before the recursive call. That will solve your confusion like below.

public static void emptyVase( int flowersInVase ) {
          if( flowersInVase &gt; 0 ) {
           // take one flower and


            System.out.println(flowersInVase);  // **** Moved the print Here **********


            emptyVase( flowersInVase - 1 ) ;




          } else {
           // the vase is empty, nothing to do
              System.out.println(""Hurray It's empty now.."");
          }
        }



public class RecursionPractice {

    public static void main(String[] args) {

        emptyVase(7);
    }
</code></pre>
"
"23941286","<p>You could use an integer array whose indexes are ASCII codes. When you see a vowel, check its count in the array. If the count is 0, print the vowel and increase the count. For example, 'a' would be stored in arr[97]:</p>

<pre><code>public static void getVowels(String aString) {
    int[] arr = new int[128];
    char c;
    System.out.print(""Your string has the following vowels: "");
    for (int i = 0; i &lt; aString.length(); i++){
        c = aString.charAt(i);
        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {
            if (arr[c] == 0) {
                System.out.print(aString.charAt(i) + "" "");
                arr[c]++;
            }
        }
    }   
}
</code></pre>
"
"23983453","<p>see basically,</p>

<p>you need to remove an object information from arraylist if the list contains information whose id is same as removeid.</p>

<p>so before removing , you need to do a check for the information id in the list</p>

<p>so go for iterating list and find information in each iteration and check its id equlas to removeid</p>

<p>if equals then do list.remove(information)</p>

<pre><code>for (Information information: database) {
    // check for ID is same as remove id
   // if equals remove that entire object from list

    if (information.ID.equals(removeID)) {
        // remove object with ID same as removeid
        database.remove(information);
    }
}
</code></pre>
"
"24205292","<p>This will create a new session</p>

<pre><code>HttpSession ss = request.getSession(true); //creates a new session.
  if(ss.isNew()){
    ss.invalidate();  //this clears the session
    ss = request.getSession(true); // creates a new session 
    }
</code></pre>
"
"24288021","<p>Try this in class A:</p>

<pre><code>public &lt;T extends A&gt; T setX() {
    return (T) this;
}
</code></pre>

<p>And you can use it like this</p>

<pre><code>B b = new B().setX();
</code></pre>
"
"19859473","<p>You can stop multiple operations by this way.</p>

<pre><code>button.setOnClickListener(new OnClickListener(){
@Override
public void onClick()
{
    performOperation();

}

});

public void performOperation()
{
static boolean working = true;
if(working)
{
return;
}
working = true;

//Do you work here;


working = false;
}
</code></pre>
"
"24362065","<p>You have to make following correction in place where you are calling <code>resetDisplay()</code> method in your <code>mainactivity.java</code></p>

<pre><code>resetDisplay(handler.getTitle(), handler.getDate(), handler.getImage(), handler.getDescription());
</code></pre>
"
"19884161","<p>Just like Ian said, but probably you want java7 to be called from .sh script, so you need a function instead of alias added to .bash_profile:</p>

<pre><code>java7() {
    /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/bin/java ""$@""
}
export -f java7
</code></pre>
"
"24565673","<p>You could also just use a while loop doing a pointless computation like setting a variable to 0</p>

<pre><code>int var = 0;
while(true) {
    var = 0;
}
</code></pre>
"
"19893609","<p>You basically have two straightforward options - Switch to JDialog or use HTML.</p>

<p>JOptionPane is intended for simple messages or interaction with the users.  JDialog is a better choice if you want to break out of the canned use cases, and as you get more complex you will probably eventually have to switch to it.</p>

<p>To meet your immediate use case, you can send in an html message.  The rules are:</p>

<ul>
<li>You must begin and end with <code>&lt;html&gt;&lt;/html&gt;</code> tags.  Put them in the middle and nothing happens.</li>
<li><p>You must remove all ""\n""'s in your code.  They don't work in html
anyway and the JPanel tries to use each line, as defined by \n's as a
separate html doc.  Switch to <br></p>

<pre><code>int totalAmount = 345; //for testing

String message = ""&lt;html&gt;""
               +    ""Total Amount Deposited:  "" + totalAmount 
               +    ""&lt;br&gt; Enter Coin Value "" 
               +    ""&lt;br&gt;&lt;span style='font-size:10'&gt;(Enter 1 to stop)&lt;/span&gt;""
               + ""&lt;/html&gt;"";     
JOptionPane.showInputDialog(message);
</code></pre></li>
</ul>
"
"19911894","<p>I guess I can't say for sure in Java 1.7, but I have done this in Java 1.6.  You need 3 threads:</p>

<ul>
<li>The thread to read the stream</li>
<li>A monitor thread to monitor the reading thread</li>
<li>The main thread (gets created automatically for you, but I just want to be sure we don't forget about it.)</li>
</ul>

<p>The reading thread should update a reference shared between it and the monitor thread, but more importantly, <em>the monitor needs to have a reference to the reading thread.</em>  The reading thread updates a time value on every read.  The monitor sleeps for a set time, and each time it wakes up, it checks that time stamp.  If the difference between the previous time and current time exceeds some value, the monitor forces an interrupt on the reading thread and then stops itself as well.</p>

<p>This could conceivably be done with only two threads -- the Main and the Monitor, where the main thread will be doing the reading and does <code>monitor.setReaderThread(Thread.currentThread()); monitorThread.start()</code>.  But I have only done this with three threads.</p>
"
"25178859","<p>Downcast the context to ConfigurableApplicationContext.</p>

<pre><code>((ConfigurableApplicationContext)context).close();
</code></pre>
"
"25380400","<pre><code>public boolean CheckIsDataAlreadyInDBorNot(String TableName, String dbfield, String fieldValue)
    { 
         db = this.getReadableDatabase();

        String Query = ""Select * from "" + TableName + "" where "" + dbfield + ""=""
                + fieldValue;
        Cursor cursor = db.rawQuery(Query, null);

        if(cursor.getCount() &lt;=0)
         {
             return false;
         }
             return true;
    }
</code></pre>
"
"25857840","<p>It can be done using a single loop. </p>

<pre><code>public boolean StringContains(String full, String part) {
    long st = System.currentTimeMillis();
    if(full == null || full.trim().equals("""")){
        return false;
    }
    if(part == null ){
        return false;
    }
    char[] fullChars = full.toCharArray();
    char[] partChars = part.toCharArray();
    int fs = fullChars.length;
    int ps = partChars.length;
    int psi = 0;
    if(ps == 0) return true;
    for(int i=0; i&lt; fs-1; i++){
        if(fullChars[i] == partChars[psi]){
            psi++; //Once you encounter the first match, start increasing the counter
        }
        if(psi == ps) return true;
    }
    long et = System.currentTimeMillis()- st;
    System.out.println(""StringContains time taken ="" + et);
    return false;
}
</code></pre>
"
"19978385","<p>You cannot trust doubles in financial software. They may work great in simple cases, but due to rounding, inaccuracy in presenting certain values etc. you will run into problems.</p>

<p>You have no choice but to use <code>BigDecimal</code>. Otherwise you're saying ""I'm writing financial code which almost works. You'll barely notice any discrepancies."" and that's not something that'll make you look trustworthy.</p>

<p>Fixed point works in certain cases, but can you be sure that 1 cent accuracy is enough now and in the future?</p>
"
"19980454","<p>You'd like a method that would print every single index of the String array, i.e.</p>

<pre><code>public static void printStringArray(String[] myArray){
    for(int i = 0; i &lt; myArray.length; i++){
        System.out.println(myArray[i]);
    }
}
</code></pre>
"
"26502279","<p>If u are using below properties while sending mail, then comment it. This works for me. But this might cause security problem.</p>

<pre><code>props.put(""mail.smtp.starttls.enable"",""true"");
</code></pre>
"
"20043790","<pre><code>public class Loops {
  public static void main(String[] args) throws Exception {
    int i = 1;
    int sum = 0;
    while (i &lt; 101) {
       sum = i + 1;
    }
    System.out.print(sum);
  }
}
</code></pre>
"
"26778821","<p>try this its work perfectly.
this is function for read excel xlsx format and store all data in array list..</p>

<pre><code>     public ArrayList Xreadexcel(String file) {        
    boolean f = false;
    ArrayList arraycontainer = new ArrayList();
    try {
        FileInputStream myInput = new FileInputStream(file);
        XSSFWorkbook workbook = new XSSFWorkbook(file);
        XSSFSheet sheet = workbook.getSheetAt(0);
        int rowStart = sheet.getFirstRowNum();
        int rowEnd = sheet.getLastRowNum() + 1;
        int count = workbook.getNumberOfSheets();
        if (count &gt; 1) {
            System.out.println(""Only one Sheet Allowed"");
        } else {
            for (int rowNum = rowStart; rowNum &lt; rowEnd; rowNum++) {
                Row row = sheet.getRow(rowNum);
                int lastColumn = row.getLastCellNum();
                ArrayList arraylist = new ArrayList();
                int cn = 0;
                for (cn = 0; cn &lt; lastColumn + 1; cn++) {
                    Cell cell = row.getCell(cn, Row.RETURN_NULL_AND_BLANK);
                    if ((cell == null) || (cell.equals("""")) || (cell.getCellType() == cell.CELL_TYPE_BLANK)) {
                        arraylist.add("""");
                    } else {
                        cell.setCellType(Cell.CELL_TYPE_STRING);
                        arraylist.add(cell);
                    }
                }
                arraycontainer.add(arraylist);
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
    return arraycontainer;
}
</code></pre>
"
"27040173","<p>Try this:</p>

<pre><code>@Test
public void test(){
  Mock obj = mock(Mock.class);

  doCallRealMethod().when(obj).setValue(any(String.class));
  when(obj.getValue()).thenCallRealMethod();
  obj.setValue(""value"");

  testClass.method(obj);

  verify(anotherObj, times(1)).call(""changedValue"");
}
</code></pre>
"
"27581676","<p>You can do <code>-source 1.7 -target 1.7</code> then it will compile. But it won't compile if you have java 8 specific features like lambdas</p>
"
"28229379","<pre><code> String elementType = StringUtility.substringBetween(elementValue.getElementType(), ""{"", ""}"");
                                      Map&lt;String, String&gt;  eleTypeMap = new HashMap&lt;String, String&gt;();
                                      StringTokenizer token = new StringTokenizer(elementType, "","");
                                      while(token.hasMoreElements()){
                                          String str = token.nextToken();
                                          StringTokenizer furtherToken = new StringTokenizer(str,""="");
                                          while(furtherToken.hasMoreTokens()){
                                              eleTypeMap.put(furtherToken.nextToken(), furtherToken.nextToken());
                                          }
                                      }
</code></pre>
"
"28343238","<p>put this one into your onClic:</p>

<pre><code>moveTaskToBack(true);
    finish()
</code></pre>
"
"28447191","<p>This is known to happen even if there are some syntactical errors in your heap space setting in the <code>sqldeveloper.conf</code>.
If you have defined the heap space in any of the wrong ways mentioned <a href=""http://javahowto.blogspot.in/2006/06/6-common-errors-in-setting-java-heap.html"" rel=""nofollow"">here</a>,
it still will show the same error when you launch it.</p>

<p><strong>EDIT :</strong>
The correct way to set your heap size parameters would be something like this:</p>

<pre><code>AddVMOption -XX:MaxPermSize=256M
AddVMOption -Xms256M
AddVMOption -Xmx768M
</code></pre>
"
"28783416","<h2>using Hang-Man Game simple logic</h2>

<blockquote>
  <p>optional this is package name </p>
  
  <h2>package arr_game;</h2>
</blockquote>

<pre><code>import java.util.Random;
import java.util.Scanner;
public class HangMan {
public static char[] star;
    public static void main (String args[])
    {   
        char game[];
        Scanner input = new Scanner(System.in);
        Random r = new Random();
        String[] arr = { ""pakistan"", ""india"", ""jarmany"", ""america"", ""rashia"", ""iran"", ""iraq"", ""japan"", ""sudan"", ""canada""};

        String word = arr[r.nextInt(arr.length)];
        int count = word.length();
        char[] CharArr=word.toCharArray(); 
        char[] star = word.toCharArray();
        for(int i=0;i&lt;star.length;i++)
        {
            star[i] = '*';
            System.out.print(star[i]);
        }

        for (int i=1; i&lt;=3; i++)
        {
            System.out.printf (""\nGuess a Letter:"");
            char letter= input.next().charAt(0);

            for (int j=0;j&lt;CharArr.length; j++)
            {
                if(letter == star[j])
                {
                    System.out.println(""this word already exist"");
                }
                else
                {
                    if(letter==CharArr[j])
                    {
                        star[j]=letter;
                        i--;
                        System.out.printf(""CORRECT GUESS!\n"");
                    }
                }
            }
            System.out.print(star);
            switch(i+0)
            {
                    case 1: System.err.printf(""Strike 1\n"");
                        break;
                    case 2: System.err.printf(""Strike 2\n"");
                        break;
                    case 3: System.err.printf(""Strike 3\n"");
                        System.err.printf(""You're out!!! The word is Not_Matched\n"");
                        break;
            }   

            System.out.printf(""\n"");
            if((new String(word)).equals(new String(star))) 
            {
                System.err.printf(""Winner Winner, Chicken Dinner!\n"");
                break;
            }
        }
    }
}
</code></pre>
"
"28860258","<p>Static methods will called by its Class name so we don't need to create class object we just cal it with class name so we can't override static </p>

<p>for example</p>

<pre><code>class AClass{
public static void test(){

 } 
}

class BClass extends AClass{
public static void test(){}

}

class CClass extends BClass{
public static void main(String args[]){

AClass aclass=new AClass();

aclass.test(); // its wrong because static method is called 
               // by its class name it can't accept object
}
}
</code></pre>

<p>we just call it</p>

<p><code>AClass.test();</code></p>

<p>means static class can't be overridden 
if it's overridden then how to cal it .</p>
"
"29465899","<p>If you want to change text in TextView with click a bottun,you can write this:</p>

<pre><code>public void ChangeText(){
//ChangeText is metode for onClick the button
TextView Hello=(TextView) findViewById(R.id.textView);
//textView is an id for TextView on your window
Hello.setText(""Hello world!"");
}
</code></pre>

<p>check this video for better apperception : <a href=""https://www.youtube.com/watch?v=6rH1xPgD9S0"" rel=""nofollow"">https://www.youtube.com/watch?v=6rH1xPgD9S0</a></p>
"
"20363814","<p>I just type old fashioned code in to Netbeans 7.4 and it gives me;</p>

<pre><code>private Map&lt;String, Choice&gt; nameMap3() {
    final Map&lt;String, Choice&gt; hashMap = new HashMap&lt;&gt;();
    choices.stream().forEach((choice) -&gt; {
        hashMap.put(choice.getName(), choice);
    });
    return hashMap;
}
</code></pre>
"
"30253898","<p>First split the string on quotes. Odd segments will have quoted content; even ones will have to be split one more time on commas. I use it on logs, where quoted text doesn't have escaped quotes, just like in this question.</p>

<pre><code>    boolean quoted = false;
    for(String q : str.split(""\"""")) {
        if(quoted)
            System.out.println(q.trim());
        else
            for(String s : q.split("",""))
                if(!s.trim().isEmpty())
                    System.out.println(s.trim());
        quoted = !quoted;
    }
</code></pre>
"
"20389340","<p>Use this to replace all the spaces in your string with the empty string. </p>

<pre><code>myTable.myField = myTable.myField.replaceAll("" "", """");
</code></pre>

<p>For example this:</p>

<pre><code>String test = ""t eff  aa d d "";
System.out.println(test.replaceAll("" "", """"));   
</code></pre>

<p>Will print out <code>teffaadd</code></p>
"
"20415700","<pre><code>public boolean equals (Sequence other){
   int[] first = this.getValues();
   int[] second = other.getValues();
   boolean same = true;
   if(first.length != second.length){
          return false;
   }
   for(int i = 0; i &lt; first.length; i++){
       if(first[i] != second[i]){
          return false;
       }

    }
   return same;
}
</code></pre>

<p>Note: you will have to make the values array public in the Sequence class or add a getter method to the Sequence class...a getter would be the better option</p>
"
"20504624","<p>If the user input is in the form of a string (and the format has been verified), then you can strip out the decimal point and interpret the result as an integer (or leave it as a string without the decimal point).</p>

<pre><code>String input = ""11.45"";
String stripped = input.replace(""."", """"); // becomes ""1145""
int value = Integer.parseInt(stripped);
</code></pre>

<p>If it's a <code>float</code> already, then just multiply by 100 and cast, as @user1281385 suggests.</p>
"
"20504699","<p><strong>Tested and works</strong>. Even if the user enters a number <em>without</em> a decimal, it will keep it as such.</p>

<pre><code>double x = 11.45; // number inputted

String s = String.valueOf(x); // String value of the number inputted
int index = s.indexOf("".""); // find where the decimal is located

int amount = (int)x; // intialize it to be the number inputted, in case its an int

if (amount != x) // if the number inputted isn't an int (contains decimal)
    // multiply it by 10 ^ (the number of digits after the decimal place)
    amount = (int)(x * Math.pow(10,(s.length() - 1 - index)));

System.out.print(amount); // output is 1145

// if x was 11.4500, the output is 1145 as well
// if x was 114500, the output is 114500
</code></pre>
"
"20504806","<p>What about convert to float, multiply by 100 and then convert to int?</p>

<pre><code>String pound = ""10.45""; // user-entered string
int pence = (int)Math.round(Float.parseFloat(pound) * 100);
</code></pre>

<p>This might be also useful: <a href=""http://stackoverflow.com/questions/4323599/best-way-to-parsedouble-with-comma-as-decimal-separator"">best way to parseDouble with comma as decimal separator?</a></p>
"
"20592763","<p>Try this</p>

<pre><code>public void inputData(Map&lt;int,Map&lt;String,String&gt;&gt; inputDetailsMap, String fileName){
    System.out.println(inputDetailsMap.get(fileName));
}
</code></pre>
"
"20593063","<p>Do this to start your HomeActivity from your LoginActivity</p>

<p><code>startActivity(new Intent(this, HomeActivity.class)
.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP));</code></p>
"
"20604869","<p>The variable DeptNo must be bound to a value before you execute the statement like below.</p>

<pre><code>DriverManager.getConnection(DB_CONNECTION, DB_USER, DB_PASSWORD);
Statement statment = dbConnection.createStatement();
//Bind deptno to a value
statment.setParameter(""DeptNo"",5);
result = statment.execute(query);    
</code></pre>

<p>You must set values for all the variables in your prepared statement othwerise you cannot execute the statement. If you receive the query to execute itself as an input then you should also get the parameters and its values also as input. Something like below</p>

<pre><code>public &lt;returnType&gt; executeQuery(String queryStr, Map&lt;String,Object&gt; params) {
     //Code to create connecitno and statment from queryStr.
     //Bind deptno to a value
     for(int i=0;i&lt;params.size(),i++) {
       //Get entry set from map  
       statment.setParameter(entryset.getKey(),entryset.getValue());
     }

     result = statment.execute(query);
     //return or work on the result      
}
</code></pre>
"
"20635552","<p>Get the query dynamically from the report.</p>

<p>From this query we need to split querystring to get number of bind variables and placing those bind variables in a HashMap.HashMap is like </p>

<pre><code>            {DeptName =1, Job =1, DeptNo =1}
</code></pre>

<p>From this hashmap,need to replace the query bind variable with <code>?</code>.For this we need to do like</p>

<pre><code>   bindkey = entry1.getKey().toString();
    String bindkeyreplace ="":"".concat(bindkey).trim();
    String bindkeyreplacestring = ""?"";
    query = query.replace(bindkeyreplace, bindkeyreplacestring);
</code></pre>

<p>Then we will get dynamic query coming from the report with <code>?</code> instead of <code>:bindvariable</code></p>

<pre><code>        PreparedStatement prestmt = dbConnection.prepareStatement(query);
        for (int i = 0; i &lt; bindParamMap.size(); i++) {
             prestmt.setInt(i + 1, 0);//Setting default value to check the query is running successfully or not
        }
        result = prestmt.execute();
</code></pre>

<p>If in case, we don't know how many bind variables we get then this approach is running successfully for me.</p>
"
"20646342","<p>Array types actually are classes! As stored in memory, they enclose their basic class information (including the class information of their containing element if they aren't an array of natives), the number of elements they hold, and following that the actual array data. <code>length</code> in an array object is a <code>final</code> field rather than a method, because arrays never hold a different number of elements.</p>

<p>For other kinds of structures, like <code>Vector</code>, the number of elements in the object can change from moment to moment, so <code>length()</code> must be a method. Likewise with <code>String</code>: even though the <code>String</code> class is immutable, it inherits the <code>length()</code> method from <code>CharSequence</code>; some kinds of <code>CharSequence</code> can be variable in their length, so it is again implemented as a method.</p>
"
"12898305","<p>following is code:</p>

<pre><code>void setup() {

  int[] x = new int[100];
  int i=0;
  int sum=0;

  for(i=0; i&lt;100; i++) {
    if (i%2==0) {
      sum += i;
            if(sum&lt;1768){

                 num +=1; 
            }
    }
  }
}
</code></pre>
"
"20691671","<p>There are way to do this on the JVM, but to do something like this in Java would require writing a lot of boiler plate code.  In Scala, you can use Manifests to get around type erasure, and can instantiate generic arrays without casting.</p>

<p>An example:</p>

<pre class=""lang-scala prettyprint-override""><code>class Container[T : Manifest]() { 
  def createArray(size:Int) = Array.ofDim[T](size) 
}

scala&gt; val f = new Container[String]
f: Container[String] = Container@12f3aa66

scala&gt; f.createArray(5)
res7: Array[String] = Array(null, null, null, null, null)
</code></pre>

<p>Scala code compiles to the same bytecode class files as Java (implying that this should be possible in Java if you jumped through enough hoops and maybe wrote your own manifests).  Scala classes can be imported into Java projects... though I'm not sure how hard it is to instantiate a class like this from Java.</p>

<p>If you often find yourself wanting to be able to handle more complicated type situations, have a look at Scala, you might like it.</p>
"
"20694360","<p>I guess the following solution has O(n) complexity, let me know if someone differs. </p>

<p>import java.util.HashMap;
import java.util.Scanner;</p>

<p>public class Anagrams {</p>

<pre><code>static boolean isAnagram(String word1, String word2)
{
    if(word1.length() != word2.length())
    {
        return false;
    }
    int flag=0;
    HashMap&lt;Character,Integer&gt; table = new HashMap&lt;Character,Integer&gt;();
    for(int i=0; i&lt; word1.length();i++)
    {
        table.put(word1.charAt(i),1);
    }

    for(int i=0; i&lt; word2.length();i++)
    {
        if(table.containsKey(word2.charAt(i)))
        {
            continue;
        }
        else
        {
            flag=1;
            break;
        }   
    }

    if(flag==0)
        return true;
    else
        return false;



}

public static void main(String[] args) {
    System.out.println(""Enter your string"");
    Scanner sc= new Scanner(System.in);
    String word1= sc.nextLine();
    String word2=sc.nextLine();

     boolean result = isAnagram(word1,word2);
     if(result==true)
     System.out.println(""The words are Anagrams"");
     else
         System.out.println(""The words are not Anagrams"");   

}
</code></pre>

<p>}</p>
"
"20729928","<p>You problem is <code>notifyDataSetChanged();</code> it interrupt the animation. Try calling it when the animation is finished.</p>
"
"20737605","<pre><code>((Integer)number).toString()
</code></pre>

<p>use this method</p>
"
"20755463","<p>You have to search each string.</p>

<p><strong>UPDATED</strong></p>

<pre><code>List list=new ArrayList();
list.add(""Joe"");
list.add(""Jasha"");
if(person.containsAll(list))
{
   //do something
}
</code></pre>
"
"20767834","<p>I use urllib.urlopen in python. I don't know if there is something like this in java.</p>

<pre><code>import urllib

f = urllib.urlopen(""your url"")
s = f.read()

print s

f.close()
</code></pre>

<p>In s you have the source code of your url. So you can search what you want.</p>
"
"20774398","<p>The code could be modified for improved readability and a standard look:</p>

<pre><code>switch(...)
{
  case 0:
    ...
  case 1:
    ...
  case 2:
    ...
  default:
    // Not reachable
    throw new RuntimeException(""Unexpected value"");
}
</code></pre>

<p>Default label is necessary since the compiler cannot guess that only 0, 1 and 2 are possible.</p>
"
"13896548","<p>The cause of the problem is how you have used the compare operator <code>==</code>. </p>

<p>When you use this operator against two objects, what you test is that variable point to the same <a href=""http://stackoverflow.com/questions/40480/is-java-pass-by-reference"">reference</a>. </p>

<p>To test two objects for value equality, you should use <code>equals()</code> method or <code>compareTo</code> if available. </p>

<p>For String class, invoke of <code>equals</code> is sufficient the check that the store same characters <a href=""http://stackoverflow.com/questions/513832/how-do-i-compare-strings-in-java"">more</a>.  </p>

<p><a href=""http://stackoverflow.com/questions/27581/overriding-equals-and-hashcode-in-java"">What is equals method ?</a></p>

<p>To compare the values of Object 
The problem is how you compare names.</p>
"
"20786544","<p>I would surmise that your busy-wait loop is hogging the CPU so severely it is unable to do anything. The print statement is causing just enough of a thread context switch that it is able to get other work done.</p>

<p>Edit: Okay, I did a little testing. I was able to reproduce OP's problem on the HotSpot Server VM. Using <code>Thread.currentThread().setPriority(Thread.MIN_PRIORITY);</code> did not fix it, so it is not a starvation issue. Setting the variable to <code>volatile</code> as @MartinCourteau, @MarkoTopolnik suggested, did fix it. That makes sense. I couldn't originally reproduce the problem on the HotSpot Client VM; apparently its optimizations are too weak for it to cache the <code>started</code> variable.</p>

<p>(Still, if the Java audio thread had a lower than normal thread priority and it were a single-CPU system, starvation was a plausible hypothesis.)</p>
"
"13922078","<p>In general, float and double will <strong>not</strong> exactly represent a decimal number (except for powers of two and a few other ""sweet spots"").  The number is stored internally in binary.  You can access the internal representation with <code>Double.doubleToRawLongBits</code> or <code>Float.floatToRawIntBits</code>.</p>
"
"20844229","<p>As far as I know, <code>&amp;&amp;</code> i.e. the and-operator has the higher precedence than <code>||</code> i.e. or-operator in most of the languages. I am not aware of any single one having the opposite precedence. </p>
"
"20846514","<blockquote>
  <blockquote>
    <p>is the JFrame before EXIT_ON_CLOSE necessary? Isn't it already specified with using frame.setDefault...?</p>
  </blockquote>
</blockquote>

<p>Yes it is necessary, because the constant <code>EXIT_ON_CLOSE</code> Is in the <code>JFrame</code> class. The only time when you would not need it is when you use a static import or are extending <code>JFrame</code>.</p>

<blockquote>
  <blockquote>
    <p>One last question is are there any particular benefits to using JFrame instead of Frame? Pros &amp; Cons?</p>
  </blockquote>
</blockquote>

<p><code>JFrame</code> is part of the Swing library, Frame is part of the <code>AWT</code> library. Generally, Swing is more efficient and advanced than Awt</p>
"
"13962865","<p>In your if statements, instead of</p>

<pre><code>System.exit(1);
</code></pre>

<p>You should have something</p>

<pre><code>throw new MyException(""Error Text"");
</code></pre>

<p>and then your catch should look like this:</p>

<pre><code>catch(MyException e){
    jLabel6.setText(e.getMessage());
}
</code></pre>

<p>where MyException extends Exception.</p>
"
"20913587","<p>To see if a double is a whole number use</p>

<pre><code>    double d;        
    int whole = (int) d;
    if(whole == d){
        return whole;
    }
    else{
        (your formatting here)
        return formattedDouble;
    }
</code></pre>

<p>You could check if it is recursive by creating:</p>

<pre><code>  String s = d + """";
  for(int i = 1; i &lt; s.length(); i++){
      if(s.charAt(i) == s.charAt(i-1)){
          continue;
      }
      else{
         return false;
      }
  }
</code></pre>
"
"13984308","<p>The situation is similar yet different in both languages, C++ or Java.</p>

<p>When the exception is thrown, it propagates back up the stack, looking for a handler. In C++ or Java, it might never find one and thus unwind all the way back to the start and terminate the program. In Java, there is a concept of checked exceptions which enforce that there will be some kind of handling of the exception (if checked). In C++, there is a concept of exception specification, but it is impractical (ill-designed) and should not be used, so, consider all exceptions as ""unchecked"" in C++.  </p>

<p>Whether the exception ends up terminating the program or being caught somewhere far up-stream of where it was thrown, the unwinding process leading up to that is what matters. If it ends up terminating the program, then, of course, there are no memory leaks as the OS reclaims the memory. What you have to worry about is:</p>

<ul>
<li>Memory leaks during unwinding if the exception is eventually handled somewhere upstream; and,</li>
<li>Other kinds of resources that could leak (e.g., pending database operations, network connections, etc.) because they won't be reclaimed / undone by the OS if the program terminates.</li>
</ul>

<p>As the stack unwinding occurs, in C++, the guarantee is, simply put, that every stack-bound object that was fully constructed (including the data members or base class instance of an object being constructed) will be destroyed immediately (i.e., deterministically) in the exact reverse order in which they were created. So, as long as all resources are tied directly to the construction / destruction of objects (also called ""RAII"") there will be no leaks (of memory or other resource) during the unwinding process since every resource successfully acquired will be freed (unless freeing the resource fails during unwinding, which is something you need to handle with care).</p>

<p>In Java, the ""stack"" unwinding occurs in the same fashion, except that instead of immediately destroying the objects, they are marked as discarded (i.e., to be garbage collected), and eventually destroyed at some indeterminate point in the future. This guarantees no memory leaks, as long as the garbage collector stays alive long enough to do its job, which I'm not sure is guaranteed if the program ends up terminating on an unhandled exception (but it doesn't matter at that point). The main problem in Java are the other resources. These resources must be released in the <code>finally</code> blocks. The <code>finally</code> blocks are guaranteed to be executed during the unwinding, but, of course, they must contain code to release the resource allocated in the corresponding <code>try</code> block. As long as the programmer did his job, resources won't leak.</p>

<p>The fact that the exception is thrown from a constructor really doesn't make much of a difference, and the basic rules are just the same basic rules for not leaking resources when exceptions are thrown:</p>

<ul>
<li>In C++, tie every <em>single</em> resource (memory or otherwise) to a <em>single</em> object, and the language guarantees the rest, no leaks. This is the Resource Acquisition Is Initialization (RAII) idiom.</li>
<li>In Java, make sure the write every <em>single</em> non-memory resource acquisition within its own try-block which has its own finally-block that releases that <em>single</em> resource.</li>
</ul>

<p>In both cases, you must release your resources cleanly (no-throw).</p>
"
"13985831","<p>use this simple java code I created some tymz ago, this was for adding positive numbers as well as negative numbers:</p>

<pre><code>class SumDigit
{
public static void main(String args[])
{
int sum, i,a,d;
a = Integer.parseInt(args[0]);
sum = 0;
for(i=1;i&lt; =10;i++)
{
d = a%10;
a = a/10;
sum=sum + d;
} 
System.out.println(""Sum of Digit :""+sum);
}
}
</code></pre>
"
"21066097","<p>Aside from the obvious double try-catch, you can inspect the stacktrace.</p>

<p>Consider the following example:</p>

<pre><code>public class Main {
    public static void main(String[] args) {
        try {
            maybeThrowAnException1();
            maybeThrowAnException2();
        } catch (FileNotFoundException e) {
            System.out.println(e.getStackTrace()[0].getMethodName());
        }

    }

    private static void maybeThrowAnException1() throws FileNotFoundException{
        if(new Random().nextInt(2) % 2 == 0){
            throw new FileNotFoundException();
        }
    }

    private static void maybeThrowAnException2() throws FileNotFoundException{
        if(new Random().nextInt(2) % 2 == 0){
            throw new FileNotFoundException();
        }
    }
}
</code></pre>

<p>This will sometimes print <code>MaybeThrowAnException1</code>, sometimes <code>MaybeThrowAnException2</code>.
You can change this to <code>e.getStackTrace()[0].getClassName()</code> to see if it returns <code>Scanner</code> or <code>PrintWriter</code> and perform logic based on that result.</p>
"
"21107801","<p>Try to use:</p>

<pre><code>DecimalFormat df = new DecimalFormat(""###.#"");
</code></pre>

<p>while printing numbers</p>
"
"21125904","<pre><code>import static java.lang.System.out;
</code></pre>

<p>Will allow you to simply refer to that code, although is generally considered a bad practice and is only for one-off programs.</p>

<p>Simply saving a reference to System.out will save you that part</p>

<pre><code>PrintStream out = System.out;
out.println( ""hello"" );
</code></pre>

<p>Alternatively write yourself a nice shorthand method</p>

<pre><code>public static void print(String s){
     System.out.println(s);
     }
</code></pre>

<p>You'll have to write overloads for int, double, etc. or alternatively you can use string concatenation</p>

<pre><code>int x = 10;
print(x + """");
</code></pre>

<p>Or did you mean just for your big block of code there? In that case...</p>

<pre><code>public void printBlock(String email, String first_name, int numTests, int cost, int total){
                System.out.println(""** COPY/PASTE THIS DRAFT **"");
                System.out.println(""To: "" + email);
                System.out.println(""Subject: 2014 AP Test Receipt for "" + first_name);
                System.out.println();
                System.out.println(""Hi "" + first_name + "",\n"");
                System.out.println(""Thank you for registering for the 2014 AP Exams!"");
                System.out.println(""According to our records, you ordered "" + numTests + "" tests.\n"");
                System.out.println(""Because you stated that you qualified for a fee waiver, "" +
                        ""each test will cost you $"" + cost + ""."");
                System.out.println(""Your total cost is $"" + cost + "" * "" + numTests +
                       "" = $"" + total + "".\n""); 
                System.out.println(""Please submit your payment to the College Counseling Office ASAP.\nThank you.\n"");
    }
</code></pre>

<p>Now just call</p>

<pre><code>if(thing){
printBlock(""email"",""firstname"",1,10,10);
}
else{
printBlock(""email"",""othername"",2,20,40);
}
</code></pre>

<p>Or whatever.</p>
"
"21175351","<p>You can use the modulo operator <code>%</code>:</p>

<pre><code>if (n % 8 == 0) {
     System.out.println(n);
}
</code></pre>

<p>This means: if the remainder of dividing <code>n</code> by <code>8</code> is equal to <code>0</code>, we should print this number.</p>
"
"21178820","<p>Seems that you are comparing int with an Integer. Java will convert an Integer into an int automatically</p>

<p>So </p>

<pre><code>int a = 2;
Integer b = a;
System.out.println(a == b);
</code></pre>

<p>becomes</p>

<pre><code>int a = 2;
Integer b = new Integer(a);
System.out.println(a == b.valueOf());
</code></pre>

<p>So if you want to use equals, See Rafa El answer. else you can use <code>==</code>.</p>
"
"14142118","<p>The best I have come-up so far is to use some library during testing (suck as PowerMockito) to replace the <code>HashMap</code> with a <code>SortedMap</code> like <code>TreeMap</code>. That way for the tests the order will be fixed. However, this only works if the map isn't built in the same code that generates the string.</p>
"
"21206066","<p>Use Swing Javabuilders, where you can define your GUI in YML (below),  including Text Field validation. </p>

<p>You declare in your gui in a yaml file, here is an example for Person.java, called Person.Yaml:</p>

<pre><code>JFrame(name=frame, title=frame.title, size=packed, defaultCloseOperation=exitOnClose):
        - JButton(name=save, text=button.save, onAction=[$validate,save,done])
        - JButton(name=cancel, text=button.cancel, onAction=[$confirm,cancel])
        - MigLayout: |
              [pref]              [grow,100]     [pref]             [grow,100]
              ""label.firstName""   txtFirstName   ""label.lastName""   txtLastName
              ""label.email""       txtEmail+*
              &gt;save+*=1,cancel=1
    bind:
        - txtFirstName.text: person.firstName
        - txtLastName.text: person.lastName
        - txtEmail.text: person.emailAddress
    validate:
        - txtFirstName.text: {mandatory: true, label: label.firstName}
        - txtLastName.text: {mandatory: true, label: label.lastName}
        - txtEmail.text: {mandatory: true, emailAddress: true, label: label.email}
</code></pre>

<p>The three blocks above are as follows: </p>

<p>The Swing Classes (JFrame, and JButton) as well as the Layout Manager, with <em>embedded</em> JLabels (<code>label.firstName</code> and <code>label.lastName</code>) which are recognised by the 'label' part of their declaration and the JTextFields (<code>txtLastName</code>,<code>txtFirstName</code> and <code>txtEmail</code> ) which are recognised by the txt part of their name.</p>

<p>The Data Binding: This binds <code>JTextArea.text</code> to <code>class.fieldName</code> so that when data is entered into the JTextField it is mapped to the fields.</p>

<p>Validation: Here is where the text is validated. Notice that the <code>JButton</code> with the name Save has in the <code>onAction</code> section has the entry <code>$validate</code> which runs the in-built validate method. This reads the kind of validation in from the validate block:</p>

<pre><code> txtFirstName.text: {mandatory: true, label: label.firstName}
</code></pre>

<p>Which declares the field <em>has to be filled in</em> (<code>mandatory: true</code>) and <code>txtEmail</code> must be filled with a valid email address (<code>emailAddress: true</code>). More validation is outlined below.</p>

<p>Once you've declared the GUI, you just run it like so, from within your java file.</p>

<pre><code>    private BuildResult result;
    .....
    public methodName(){
        .....
    result = SwingJavaBuilder.build(this).setVisible(true);
    }
</code></pre>

<p>This method (<code>build(this)</code>) references a .yml file of the same name (so your gui is in person.yml and is paired with person.java).</p>

<p>There's more validation available in the documentation :</p>

<pre><code>validate:
      - mandatory.text: {label: Mandatory Field, mandatory: true}
      - date.text: {label: Date Field, dateFormat: ""yyyy/mm/dd""}
      - email.text: {label: E-Mail, email: true}
      - minmax.text: {label: Min/Max Length, minLength: 5, maxLength: 10}
      - regex.text: {label: Regex, regex: ""[a-zA-Z0-9]+""}
      - regex2.text: {label: Regex, regex: ""[a-zA-Z0-9]+"", 
               regexMessage: ""''{0}'' must be a number or letter""}
      - long.text: {label: Min/Max Long, minValue: 5, maxValue: 50, mandatory: true}
</code></pre>

<p>So you would want to use the last one <code>long.text</code> with this specification:</p>

<pre><code>myValidNumberField{label: Number less than ten, maxValue: 10, mandatory: true}`
</code></pre>

<p>There's more information on the <a href=""https://github.com/jacek99/javabuilders"" rel=""nofollow"">github</a> page, about setting your GUI up like this. </p>
"
"14146219","<p>Marking a field private and not exposing a <code>setter</code> should be sufficient:  </p>

<pre><code>public class Example{ 

private long id=0;  

   public Example(long id)  
   {  
       this.id=id;
   }    

public long getId()  
{  
     return this.id;
}  
</code></pre>

<p>if this is insufficient and you want someone to be able to modify it X times you can do this:    </p>

<pre><code>public class Example  
{  
    ...  
    private final int MAX_CHANGES = 1;  
    private int changes = 0;    

     public void setId(long id) throws Exception {
        validateExample(); 
        changes++; 
        if ( this.id == 0 ) {
            this.id = id;
        } else {
            throw new Exception(""Can't change id once set"");
        }
    }

    private validateExample  
    {  
        if(MAX_CHANGES==change)  
        {  
             throw new IllegalStateException(""Can no longer update this id"");   
        }  
    }  
}  
</code></pre>

<p>This approach is akin to design by contract, wherein you validate the state of the object after a mutator (something that changes the state of the object) is invoked.</p>
"
"21211236","<p>Why don't you want to override the setters in BuilderFinal? They would just need to downcast the super method:</p>

<pre><code>public static class BuilderFinal extends BuilderC {

    @Override
    public BuilderFinal a(int v) {
        return (BuilderFinal) super.a(v);
    }

    @Override
    public BuilderFinal b(int v) {
        return (BuilderFinal) super.b(v);
    }

    public Foo build() {
        return new Foo(
                a(),
                b(),
                c());
    }
}
</code></pre>
"
"14146745","<p>I think the singleton pattern might be something you should look into.  Google around a bit to check if this pattern meets your design goals.</p>

<p>Below is some sudo code on how to make a singleton in Java using enum.  I think this is based off Joshua Bloch's design outlined in Effective Java, either way it's a book worth picking up if you don't have it yet.</p>

<pre><code>public enum JavaObject {
    INSTANCE;

    public void doSomething(){
        System.out.println(""Hello World!"");
    }
}
</code></pre>

<p>Usage:</p>

<pre><code>JavaObject.INSTANCE.doSomething();
</code></pre>
"
"14189250","<p>You could try using a 2D array of results. If the result is already populated, then don't perform the comparison again. This also has the benefit of storing the results for later use.</p>

<p>So for an int result you would be looking at something like this: <code>Integer[][] results = new Integer[map.entrySet().size()][map.entrySet().size()];</code>This initialises the array to nulls and allows you to check for existing results before comparison. One important thing to note here is that each comparison result should be stored in the array twice, with the exception of comparisons to itself. e.g. comparison between index 1 and index 2 should be stored in <code>results[1][2]</code> and <code>result[2][1]</code>.</p>

<p>Hope this helps.</p>
"
"21310347","<p>You can google for the namespace (use <code>""http://www.w3.org/1999/XSL/Transform""</code>, i.e. keep the quotes to Google knows you're looking for the whole thing). That should give you some useful results.</p>

<p>The reason why you see so many namespaces here is that XSLT made the mistake to use XML as the file format to define the transformations. XML has no scope (like Java or other real programming languages). Instead, they use namespaces to say ""this <code>name</code> element means ..."".</p>

<p>So if you produce XML and you want <code>&lt;output&gt;</code> in the result, you need a way to tell your XSLT tool that this isn't the same as <code>&lt;xsl:output&gt;</code>.</p>

<p>This leaks into everything which in turn yields such long lists of namespaces, especially when you run into one of the many shortcomings of XSLT (like it would take 5 lines of Java or 500 lines of XSLT -> write a Java plugin).</p>

<p>That also means it's not clear from the namespace declaration alone what it means. It might trigger a plugin, it might be necessary to add XML output to the stylesheet or it might be a leftover from cut&amp;waste by someone who had no clue what all these odd strings mean.</p>

<p>Good luck.</p>
"
"21380798","<pre><code>if (new Long(s1) &gt; new Long(s2))
    // do your thing
</code></pre>

<p>I see no reason for not creating longs for this.</p>

<p>Here's more info: <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/Long.html#Long%28java.lang.String%29"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/lang/Long.html#Long%28java.lang.String%29</a></p>
"
"21380935","<p>Depending on what you need you can check if both strings contains exactly same value with <code>equals</code> method. But if you want to check which string contains bigger value you should convert them to some numeric type like <code>Long</code> or maybe even <code>BigInteger</code> and use more appropriate method like </p>

<pre><code>String s1 = ""1390785186301"";
String s2 = ""1390785191301"";
System.out.println(Long.compare(Long.parseLong(s1), Long.parseLong(s2)));
System.out.println(new BigInteger(s1).compareTo(new BigInteger(s2)));
</code></pre>

<p>output</p>

<pre><code>-1
-1
</code></pre>

<p>Results are </p>

<ul>
<li><code>-1</code> when <code>s1 &lt; s2</code>, </li>
<li><code>0</code> when <code>s1 = s2</code>, </li>
<li><code>1</code> when <code>s1 &gt; s2</code></li>
</ul>
"
"21405627","<p>you can use <code>addAll()</code> method in which is available in <code>java.util</code> package.</p>
"
"21506122","<p>Try this </p>

<pre><code>   @Test()
    public void cdIntoNonExistantFolder() {
        try{
        cdTool.changeDirectory(""nonexistant"");
        assertThat(cdTool.getStatusCode(), not(equalTo(0)));
        } catch (IllegalArgumentException) {

        }    
    } 
</code></pre>

<p>you will have to throw this exception from the tested method.</p>
"
"21508082","<p>Don't use for each, use the good old</p>

<pre><code>for(int i=0; i&lt;collection.size();i++)
</code></pre>
"
"14412441","<p>Code written in any programming language needs to be converted to Assembly Language. When this happens, every code statement written in High Level language gets translated to instruction / set of instructions in Middle Level equivalent i.e. 
JAVA code will get translated to Machine Specific instructions in Assembly Language. </p>

<p>Here addition operation in following statement, </p>

<pre><code>int a = a + 10;
</code></pre>

<p>May get converted to </p>

<p>ADD A 1010;</p>

<p>And when we try to access a variables value, it may get converted to READ instruction. </p>

<p>So, when you try to use '>' in a variable, </p>

<pre><code>char operator= '&gt;';
int val1=10;
int val2=24;
if(val2 operator val1){

/* some code*/

}
</code></pre>

<p>The if statement, </p>

<pre><code>if(val2 operator val1) 
</code></pre>

<p>will convert to an invalid instruction. 
Instead of generating an equivalent for comparison of two values, it will READ 'operator' variable. </p>

<p>This will obviously, lead to wrong interpretation. </p>

<p>Hence, doing such thing is not allowed. </p>

<p>Every compiler(java , gcc etc ) may behave differently but the target is same. If you read Complier / Compilation / Execution more, you will know more.
These are some links: </p>

<p><a href=""http://www.coderanch.com/t/559258/java/java/java-codes-converted-assembly-JVM"" rel=""nofollow"">http://www.coderanch.com/t/559258/java/java/java-codes-converted-assembly-JVM</a></p>

<p><a href=""http://stackoverflow.com/questions/845355/do-programming-language-compilers-first-translate-to-assembly-or-directly-to-mac"">Do programming language compilers first translate to assembly or directly to machine code?</a></p>

<p><em>Steps for Compilation of A C program.</em></p>

<p><a href=""http://www.herongyang.com/Computer-History/C-Program-Compilation-and-Execution-Process.html"" rel=""nofollow"">http://www.herongyang.com/Computer-History/C-Program-Compilation-and-Execution-Process.html</a></p>
"
"14431279","<p>If you have created object from Test class and you trying to access that <code>id</code> 
like this:</p>

<pre><code>int test;
test=TestObject.id;
</code></pre>

<p>You will get error because <code>id</code> is private so you must say</p>

<pre><code>test=TestObject.getid();
</code></pre>

<p>Now <code>getid()</code> will return for us the private <code>id</code> we can call it because its public method</p>
"
"14437466","<p>My suggestion is:</p>

<pre><code>Enumeration jsonEnumerator = someJSONObject.keys();

while(jsonEnumerator.hasMoreElements()) {
    String key = (String) jsonEnumerator.nextElement();
    someOtherJson.put(someJSONObject.getJSONObject(key), key);
}
</code></pre>

<p>String instantiation will cause to memory leak in J2ME because J2ME uses a poor Garbage Collection method to reduce the resource usage.</p>

<p>When you are trying to develop a J2ME application, be careful about memory and CPU usages.</p>
"
"14464560","<p>Not sure what Eclipse is doing for you, but most of the code above does not come close to compiling....</p>

<p>I made the appropriate changes to get it to compile as much as possible and here is what I get:</p>

<pre><code>public class Foo
{
  public String getFoo() { return """"; }  // must have a body
}
public interface Bar // no ()
{
  public void setBar(String bar);
}
public class FooBar&lt;T&gt;
{
  public static &lt;T extends Foo &amp; Bar&gt; T getFooBar()
  {
    return null;
  }
}
public class FB
{
  private FooBar&lt;Object&gt; fb = new FooBar&lt;Object&gt;();

  public static void main(String args[])
  {
    new FB();
  }

  public FB()
  {
    System.out.println(fb.getFooBar());
  }
}

FB.java:12: type parameters of &lt;T&gt;T cannot be determined; no unique maximal instance exists for type variable T with upper bounds java.lang.Object,Foo,Bar
    System.out.println(fb.getFooBar());
                                   ^
1 error
</code></pre>
"
"14505187","<p>As suggested above,when objects are equal, their hashcode should also be the same.
You could make a simple fix to your hashcode computation like below.</p>

<pre><code> public int hashCode() {

int hash = 7; hash = 59 * hash + this.x; hash = 59 * hash + this.y;
boolean faraway=farAway(this.x, other.x, this.y, other.y,5);
hash=59*hash+(faraway?1:0); //include faraway also as part of hashcode computation

 return hash;
</code></pre>

<p>}</p>
"
"21717934","<p>You have an infinite loop.</p>

<pre><code>while(done=false) {
System.out.println(""it worked!"");
}
</code></pre>

<p>This crashes the program. Just simply change while(done=false) to ""else if (!done)"".</p>
"
"21798331","<p>As pointed out this isn´t normaly be done recursive. So this solutions is not nice, but it works:</p>

<pre><code>public class StringReverseOnCharArray {

    public static void main(String[] args) {
        reverseRecursively(new char[] { 'a', 'b', 'c' });
    }

    private static void reverseRecursively(char[] myCharArr) {
        if (myCharArr.length &gt; 0) {
            System.out.println(myCharArr[myCharArr.length - 1]);
            char[] temp = new char[myCharArr.length - 1];
            for (int i = 0; i &lt; temp.length; i++) {
                temp[i] = myCharArr[i];
            }

            reverseRecursively(temp);
        }
    }
}
</code></pre>
"
"14610124","<p>This line is wrong:</p>

<pre><code>binaryStream.toString();
</code></pre>

<p><code>InputStream</code> does not override <code>toString()</code>, thus uses <code>Object.toString()</code>, which is defined like <a href=""http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/Object.html#toString%28%29"" rel=""nofollow"">this</a>. This explains why you're getting that <code>String</code>.</p>

<p><a href=""http://stackoverflow.com/questions/309424/read-convert-an-inputstream-to-a-string"">This other question</a> shows you how to correctly convert from <code>InputStream</code> to <code>String</code>.</p>

<p>This said you should <strong>not</strong> convert binary data (like Base64-encoded image) to string (see NullUserException's comments below).</p>
"
"21856737","<p>Do you need to store the binary string in a variable? </p>

<p>If not, you could just print it out directly:</p>

<p><code>System.out.println(Integer.toBinaryString(x));</code></p>
"
"14670671","<p>It's very easy to do... just create a new thread and write code to clear text on label, and make that thread to sleep for 5sec and then start it. </p>

<pre><code>import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JLabel;

public class LabelThread {
    private JLabel textLabel;

    public LabelThread() {
        try {
            JFrame frame  = new JFrame(""Label"");
            frame.setSize(500, 500);

            textLabel = new JLabel(""Hiiii.... Kill me"");
            frame.setContentPane(textLabel);

            frame.setVisible(true);

            MyThread thread = new MyThread();
            MyThread.sleep(5000);
            thread.start();
        } catch (InterruptedException ex) {

        }
    }
    class MyThread extends Thread{

        @Override
        public void run() {
            System.out.print(""Running thread"");
            textLabel.setText("""");
        }

}
public static void main(String args[]){
    LabelThread labelThread = new LabelThread();
}
}
</code></pre>
"
"14686058","<pre><code>public static void main(String[] args) {
    Double x = new Double(""39.33"");
    Double y = new Double(""39.0"");

   printDouble(x);
   printDouble(y);

}

public static void printDouble(Double dbl){
    System.out.println(dbl.toString().replaceAll(""[0]*$"", """").replaceAll("".$"", """"));
}
</code></pre>
"
"14702754","<p>add following</p>

<pre><code>setenv JAVA_HOME /System/Library/Frameworks/JavaVM.framework/Home
</code></pre>

<p>in your  ~/.login file:</p>
"
"21928708","<pre><code> Hi Autolycus,
             I think you have to parse  responseData as JSONArray like below

            **JSONArray jsonHospitals = new JSONArray(responseData);**

          for(int i = 0; i&lt; jsonHospitals.length(); i++){
                    JSONObject obj = jsonHospitals.getJSONObject(i);
                    JSONObject hospital_obj = obj.getJSONObject(""Hospital"");
                    String hospital_name =  hospital_obj.getString(""hospital_name"");
                    Log.v(TAG, hospital_name);
                }

       Hope it will work for you :)
</code></pre>
"
"21946678","<p>The dictionary technic is more flexible but not shorter (like every thing in java). Here is a complete example.</p>

<pre class=""lang-java prettyprint-override""><code>package example;

import java.util.TreeMap;

public class Dictionary {

    static final TreeMap&lt;Character,Character&gt; myDict = new TreeMap();

    static Character choose(TreeMap&lt;Character,Character&gt; dict, 
                            Character x, Character def) {
        Character result = dict.get(x);
        if (result==null) result = def;
        return result;
    }

    public static void main(String[] args) {
        myDict.put('a','b');
        myDict.put('b','a');
        myDict.put('r','t');
        System.out.println(choose(myDict,'a','z'));
        System.out.println(choose(myDict,'b','z'));
        System.out.println(choose(myDict,'r','z'));
        System.out.println(choose(myDict,'X','z'));
    }
}
</code></pre>
"
"22002978","<p>1) pop all the values from the stack onto the queue.</p>

<p>2) for every pair of values in the queue, push the pair back onto the stack in reverse order.</p>

<p>Using the comments below, we note that pushing all the elements onto the queue and back to the list will reverse the order. </p>

<p>Then, we can push the values onto the list once more and note that the list will now be in the correct order and apply 2.</p>

<pre><code>Stack bottom 1,2,3,4,5,6 top
Queue front 6,5,4,3,2,1 end
Stack bottom 6,5,4,3,2,1 top
Queue front 1,2,3,4,5,6 end
</code></pre>

<p>Now apply 2)</p>

<pre><code>Stack bottom 2,1,4,3,6,5 top
</code></pre>
"
"14818642","<p>Add:</p>

<pre><code>&lt;dependency&gt;
  &lt;groupId&gt;log4j&lt;/groupId&gt;
  &lt;artifactId&gt;log4j&lt;/artifactId&gt;
  &lt;version&gt;${log4j.version}&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p>To the <code>dependencyManagement</code> section of the parent POM (just as you did with JUnit).  Any children that require log4j may specify a dependency:</p>

<pre><code>&lt;dependency&gt;
  &lt;groupId&gt;log4j&lt;/groupId&gt;
  &lt;artifactId&gt;log4j&lt;/artifactId&gt;
&lt;/dependency&gt;
</code></pre>

<p>without the version, and it will work, because the version will be pulled from the parent.</p>
"
"22021553","<p>You will need to create a new enumeration from the vector, because you already used the one you have for iteration. You cannot see the element <code>3</code> in the first loop simply because it wasn't added yet. </p>

<pre><code>    Enumeration&lt;Integer&gt; enumeration = vector.elements();
    while (enumeration.hasMoreElements()) {
        Integer integer = (Integer) enumeration.nextElement();
        System.out.print(integer);//why it is printing 123 instead of 12(reason ????)
    }
    vector.add(3);
    enumeration = vector.elements();
    while (enumeration.hasMoreElements()) {
</code></pre>
"
"22037205","<p>You need to implment getter for that array in <code>ProcessInvoice</code> class.</p>

<pre><code>public class ProcessInvoice {

    private Invoice[] invoices;

    ........

    public Invoice[] getInvoices() {
        return invoices;

    }
}
</code></pre>

<p>And in your <code>Invoice</code> class;</p>

<pre><code>public class Invoice {


    private InvoiceItem[] invoiceItems;
    private double totalInvoice;
    private ProcessInvoice processInvoice;

    ......

    void getInvoices() {
        processInvoice = new ProcessInvoice();
        processInvoice.runProcess();
        processInvoice.getInvoices();

    }


}
</code></pre>
"
"22052216","<pre><code>/(?&lt;=sat).*?(prop\d (true|false))/m
</code></pre>

<p><strong>Match group 1</strong> is what you want. See <a href=""http://rubular.com/r/VCFCqStIEa"" rel=""nofollow"">example</a>.</p>

<p><strong>BUT</strong>, I would really recommend split the string first. It's much easier.</p>
"
"14966297","<p>Nothing is visible, thus getGraphics() returns null. Try:</p>

<pre><code>    centerPanel = new JPanel();
    JFrame frame = new JFrame();
    frame.add(centerPanel);
    frame.setVisible(true);
    centerPanel.setVisible(true);
</code></pre>
"
"22118670","<p>The divide by 2 won't work entirely. It will only work if you have an odd number of integers.</p>

<p>For instance:</p>

<p>Give me an integer that would represent the length of an array: 5</p>

<p>Enter 5 value(s)</p>

<p>Value #0: 
1</p>

<p>Value #1: 
2</p>

<p>Value #2: 
3</p>

<p>Value #3: 
4</p>

<p>Value #4: 
5</p>

<p>Your current array: 1 | 2 | 3 | 4 | 5 | </p>

<p>Your array reversed: 5 | 4 | 3 | 2 | 1 | BUILD SUCCESSFUL (total time: 11 seconds)</p>

<p><strong>Now, if you were to put in an even number integers, let's say 6, this is what would happen:</strong></p>

<p>Give me an integer that would represent the length of an array: 6</p>

<p>Enter 6 value(s)</p>

<p>Value #0: 
1</p>

<p>Value #1: 
2</p>

<p>Value #2: 
3</p>

<p>Value #3: 
4</p>

<p>Value #4: 
5</p>

<p>Value #5: 
6</p>

<p>Your current array: 1 | 2 | <strong>3</strong> | <strong>4</strong> | 5 | 6 | </p>

<p>Your array reversed: 6 | 5 | <strong>3</strong> | <strong>4</strong> | 2 | 1 | BUILD SUCCESSFUL (total time: 5 seconds)</p>

<p><strong>Source code:</strong></p>

<p>/*
 Write a program that prompts the user for an integer that would represent the length of an array, then asks the user to enter that many values.
 Store these values in an array and print the array.
 Then reverse the array elements so that the first element becomes the last element, the second element becomes the second to last element, and so on, with the old last element now first.
 Do not just reverse the order in which they are printed; actually change the way they are stored in the array.
 Do not create a second array; just rearrange the elements within the array you have.
 (Hint: Swap elements that need to change places.)
 When the elements have been reversed, print the array again.
 */</p>

<p>package reversinganarray;</p>

<p>import java.util.Scanner;</p>

<p>public class ReversinganArray {</p>

<pre><code>public static void main(String[] args) {
    int i = 0;
    Scanner input = new Scanner(System.in);
    System.out.print(""Give me an integer that would represent the length of an array: "");
    int integer = input.nextInt();
    int[] test = new int[integer];
    System.out.println(""Enter "" + integer + "" "" + ""value(s)"");
    while (i &lt; integer) {
        System.out.println(""Value #"" + i + "": "");
        test[i] = input.nextInt();
        i++;
    }
    System.out.print(""Your current array: "");
    i = 0;
    while (i &lt; integer) {
        System.out.print(test[i] + "" | "");
        i++;
    }
    i = 0;
    while (i &lt;= integer / 2) {
        int temp = test[i]; //a = b
        test[i] = test[(integer - i - 1)]; //b = c
        test[(integer - i - 1)] = temp;// c = a
        i++;
    }
    System.out.println("""");
    System.out.print(""Your array reversed: "");
    i = 0;
    while (i &lt;= integer - 1) {
        System.out.print(test[i] + "" | "");
        i++;
    }
}
</code></pre>

<p>}</p>

<p>I happen to be trying to figure this problem out myself...</p>
"
"22131005","<p>you can do it either with a GUI style . </p>

<pre><code>import javax.swing.JOptionPane;
String Input=JOptionPane.showInputDialog(""Title"",""Message"");
</code></pre>
"
"15028333","<pre><code>    int k = 4;
        for (int i = 1 ; i &lt;= 5 ; i++){
            System.out.println(); 
            for(int j = 1 ; j &lt;= 5 ; j++){
               if(j&lt;=k){
                  System.out.print(""*""); 
               }else{
                  System.out.print(i);
                  k--;
               }
            }
        }
</code></pre>
"
"15028474","<p>You should understand what i,j variable represent.Find the law，you will easy to tackle this problem.</p>

<pre><code>for(int i=1;i&lt;=5;i++){
    for(int j=1;j&lt;=5-i;j++){
        System.out.print(""*"");
    }
    for (int j=5-i+1;j&lt;=5;j++){
        System.out.print(j);
    }
    System.out.println();
}
</code></pre>
"
"15028625","<pre><code>       int k = 4;

        for (int i = 1 ; i &lt;= 5 ; i++){
            System.out.println(); 
            for(int j = 0 ; j &lt;= 4 ; j++){
               if(j&lt;k){
                  System.out.print(""*""); 
               }else{
                  System.out.print(i);
                  if(j==4){
                      k--;
                  }
               }

            }
        }
</code></pre>
"
"15035931","<p>You must use the FileWriter instead of the PrintStream.</p>

<pre><code>BufferedWriter bw = new BufferedWriter(new FileWriter(new File(
                                        ""C:/new.txt""), true));

StringBuffer sb = new StringBuffer();

for(int i =0;i&lt;=Name.length;i++){
    sb.append(""Student "" + Name[i] + "" scored "" + Scores[i]
    + "" with average of "" + average[i] + ""\n""); 
}

bw.write(sb.toString());
bw.close();
</code></pre>
"
"22196578","<blockquote>
  <p>But this raises two questions:</p>
  
  <ol>
  <li>Aren't there other ways for a stack overflow to occur, not only through recursion? </li>
  <li>Does the StackOverflowError happen before the JVM actually overflows the stack or after?</li>
  </ol>
</blockquote>

<ol>
<li><p>It can also occur when we are Allocating size greater than stack's limit (for eg. <code>int x[10000000];</code>).</p></li>
<li><p>Answer to second is </p></li>
</ol>

<p>Each thread has its own stack that holds a frame for each method executing on that thread. So the currently executing method is at the top of the stack. A new frame is created and added (pushed) to the top of stack for every method invocation. The frame is removed (popped) when the method returns normally or if an uncaught exception is thrown during the method invocation. The stack is not directly manipulated, except to push and pop frame objects, and therefore the frame objects may be allocated in the Heap and the memory does not need to be contiguous.</p>

<p>So by considering stack in a Thread we can conclude.</p>

<p>A stack can be a dynamic or fixed size. If a thread requires a larger stack than allowed a <code>StackOverflowError</code> is thrown. If a thread requires a new frame and there isn’t enough memory to allocate it then an <code>OutOfMemoryError</code> is thrown.</p>

<p>you can get description for JVM <a href=""http://blog.jamesdbloom.com/JVMInternals.html"" rel=""nofollow"">here</a></p>
"
"15074595","<p>Seems to be very awkward for such a simple task. </p>

<p>Firstly, </p>

<p>Your loops are much too complicated. Try something like this. </p>

<pre><code>public static String lettersOnly(String word) 
{
    int length = word.length();
    StringBuilder end = new StringBuilder(length);
    char x;

    for (int i = (length - 1); i &gt;= 0; i--) {
        x = word.charAt(i);
        if (Character.isLetter(x)) {
            end.append(x);
        }
    }
    return end.toString();
</code></pre>

<p>This is a much more simplistic way of checking if they are anagrams.</p>

<p>You could also create a separate method for all of the printing which would be much easier.</p>

<p>And lastly, just use </p>

<pre><code>    String ltrsOnlyOne = lettersOnly(wordOne);
    String ltrsOnlyTwo = lettersOnly(wordTwo);
</code></pre>

<p>for creating the strings. </p>
"
"15074603","<p>This maps String keys to ArrayList values.  So if you want an ArrayList at key ""foo"", then:</p>

<pre><code>firmMSAMap.put(""foo"", new ArrayList&lt;String&gt;());
</code></pre>
"
"22199962","<p>If my memory refreshes and as Jesper pointed out, I also encountered that same issue NoSuchMethodFoundException under that same scenario (having still old class references that have not been cleaned).</p>

<p>I just copied your code snippets with 2 different packages directly in to my netbean, compiled and runned C2. It did print the BOOM! message.</p>

<p>In my case using :</p>

<pre><code>public static void main(String args[]){
}
</code></pre>

<p>does not make a difference when I compiled and runned the code.</p>

<pre><code>public static void main(String params[]){
}
</code></pre>

<p>It makes sense since the main class should have the correct method signature of main. </p>

<p>Here args or params, should not make a huge difference, I believe; as what we have inside the method is simply a reference for the inner body of the method that it uses. </p>

<p>Still definitely it is good practice to follow the standard signature for main.</p>

<p>I would recommend to clean the project and copy the contents from scratch in a new project and build it again, sometimes netbeans can go crazy.</p>
"
"22234625","<p><code>Integer</code> (and <code>Double</code>, <code>Byte</code>, <code>Float</code>, <code>Long</code>, etc.) are the wrapper classes of the primitive data types.</p>

<p>You can't have one method using <code>int</code> and another using <code>Integer</code> since Java 5 because of autoboxing, which will convert any <code>int</code> variable to its <code>Integer</code> counterpart (and any <code>Integer</code> to <code>int</code>, raising a <code>NullPointerException</code> if the object is <code>null</code>).</p>
"
"15100885","<p>you can use:</p>

<pre><code>stringToPrint = time.getMonth()+"" ""+time.getDate()+"" ""+time.getYear();
</code></pre>

<p>for more info:
<a href=""http://docs.oracle.com/javase/1.4.2/docs/api/java/util/Date.html"" rel=""nofollow"">http://docs.oracle.com/javase/1.4.2/docs/api/java/util/Date.html</a></p>
"
"22303098","<pre><code>for(int i = 0; i &lt;= 6; i++){
    for(int j = 0; j &lt;= 9; j++)
</code></pre>
"
"22323625","<p>To reverse the number the logic should be as below. Use % and / operator to find the individual digit.   </p>

<pre><code>if (userNumber &gt;= 100 &amp;&amp; userNumber &lt;= 999)
{
System.out.println(""User number is: "" + userNumber);
int unitdigit = userNumber%10;
userNumber = userNumber/10;
int tenthdigit = userNumber%10;
int lastdigit = userNumber/10;
reversedNum = (unitdigit*100) + (tenthdigit*10) + lastdigit;
System.out.println(""reversed numnber ""+reversedNum);
}
</code></pre>
"
"15226020","<p>The pipe character is the equivalent to the logical or in a regex. If you really want to use the pipe character as separator, you need to escape it with a <code>\</code> as in</p>

<p><code>String[] values= input.split(""\|"");</code></p>
"
"15253486","<p>In order to do multiplication you need to use the <code>*</code>, ie</p>

<pre><code> while(mex * (Math.pow(1.07, t)) &lt;= usa * (Math.pow(1.02, t)))
</code></pre>
"
"22453346","<p>Every class has a default constructor(if you do not provide one) you can do :</p>

<pre><code>Class1 c1 = new Class1();
</code></pre>

<p>then </p>

<pre><code>Class2 c2 = new Class2(c1);
</code></pre>
"
"15277535","<p>The jar was compiled to be <code>1.6</code>  compliant.  That is why you get this error.  Two resolutions:<br>
1) Use Java 1.6  </p>

<p>OR  </p>

<p>2)  Recompile the jar to be compliant for your environment <code>1.7</code></p>
"
"22576231","<blockquote>
  <p>is there a way to accomplish this behaviour with serial standard if statements?</p>
</blockquote>

<pre><code>if(A){ System.out.println(""a""); }
if(not A and B){ System.out.println(""else B""); }
if(not A and not B and C){ System.out.println(""else C""); }
</code></pre>
"
"15330517","<p>Poisson Random Generator</p>

<p>Lets say we start with an expected value 'v' of the random numbers. Then to say that a sequence of non negative integers satisfies a Poisson Distribution with expected value v means that over subsequences, the mean(average) of the value will appear 'v'.
Poisson Distribution is part of statistics and the details can be found on wikipedia.
But here the main advantage of using this function are:
1. Only integer values are generated.
2. The mean of those integers will be equal to the value we initially provided.</p>

<p>It is helpful in applications where fractional values don't make sense. Like number of planes arriving on an airport in 1min is 2.5(doesn't make sense) but it implies that in 2 mins 5 plans arrive.</p>

<pre><code>int poissonRandom(double expectedValue) {
  int n = 0; //counter of iteration
  double limit; 
  double x;  //pseudo random number
  limit = exp(-expectedValue);
  x = rand() / INT_MAX; 
  while (x &gt; limit) {
    n++;
    x *= rand() / INT_MAX;
  }
  return n;
}
</code></pre>

<p>The line</p>

<pre><code>rand() / INT_MAX
</code></pre>

<p>should generate a random number between 0 and 1. So we can use time of the system.
Seconds / 60 will serve the purpose.
Which function we should use is totally application dependent.</p>
"
"22668072","<p>Here is what I would do:</p>

<pre><code>for(String operator : OPERATORS)
{
    if(Pattern.compile(""[\\s\\w]"" + operator + ""[\\s\\w]"").matcher(line).find())
    {
        System.out.println(operator + "" found in "" + line);
    }
}
</code></pre>

<p>It should work correctly in terms of not finding the <code>&lt;</code> operator in <code>&lt;=</code>.</p>

<p>Full code:</p>

<pre><code>import java.util.regex.Pattern;

public class Test
{
    public static void main(String[] args)
    {
        String[] OPERATORS = { ""&lt;"", ""&lt;=""};
        String line = ""a &lt;= b &lt; c "";

        for(String operator : OPERATORS)
        {
            if(Pattern.compile(""[\\s\\w]"" + operator + ""[\\s\\w]"").matcher(line).find())
            {
                System.out.println(operator + "" found in "" + line);
            }
        }
    }
}
</code></pre>
"
"22698708","<p>certainly when you expect to be able to programmatically handle an exception - ie it's easy to create separate catch statements for different exception types, ie:</p>

<pre><code>try{    
  buyWidgets();
}
catch(AuthenticationException ex)
{
  promptForLogin();
}
catch(InsufficientFundsException ex)
{
  promptToRefillAccount();
}
//let other types of exceptions to propagate up the call stack
</code></pre>

<p><strong>On whether the above constitutes inappropriate use of exception for flow control</strong> </p>

<p>While exceptions are more CPU-expensive than if-else statements (mainly due to cost of constructing a stack trace), cost is relative and should be assessed in the context of particular use case. Not every piece of code needs to be web-scale fast and some people find reading and testing conditionals more cumbersome.   For example pretty much all transaction managers implement commit-rollback-retry idioms using exceptions. (Try writing a transaction retry aspect without catching an exception)</p>

<p>Separately, one should adhere to separation of concerns principle: not every piece of code needs to deal with every possible condition. Whether not being logged in while buying widgets is an exceptional case really depends on the app and particular place in the app code base. For example, you could have a Service with operations for logged-in users. It makes no sense for methods in that service to deal with authentication - instead these methods would expect code earlier in the call chain to ensure user is authenticated, and thus simply throw exceptions if that is not so. Thus, for those methods being not logged in <em>IS</em> an exceptional case. </p>
"
"22789525","<p>You can try this. I have prepared the demo for your requirement</p>

<pre><code>  public static void main(String args[]) {
      String str = ""\""ABC DEF\"""";
      System.out.println(str);
      String str1 =  str.replaceAll(""\"""", """");
      System.out.println(str1);
  }
</code></pre>

<p>After reading just replace the double quotes with empty string</p>
"
"15390312","<p>Better approach is to sort the array first.</p>

<pre><code>Arrays.sort(array);
Arrays.binarySearch(array, value);
</code></pre>

<p>To scan through an unsorted array takes linear time ""O(n)"". You can try this if you don't want to sort the array:</p>

<pre><code>public int find(int[] array, int value) {
        int index = -1;
        for (int i=0; i&lt;array.length; i++) {
            if(array[i] == value) { index = i; }
        }
        return index;            
    }
</code></pre>
"
"22816425","<p>Here is some good information on Upcasting and Down casting. <a href=""http://forum.codecall.net/topic/50451-upcasting-downcasting/"" rel=""nofollow"">http://forum.codecall.net/topic/50451-upcasting-downcasting/</a></p>

<p>Because every Class inherits from Object you can always Upcast to Object and Downcast to some other Type <code>(B)(Object)a</code>.  Not that this is a good idea but it is valid. If you had actually instantiated A you would get a runtime exception <code>java.lang.ClassCastException</code> the same as if you instantiated and instance of <code>I i = new I(){}</code>    </p>

<pre><code>interface I {
}
class A {
}
class B {
}
class Test {
    public static void main(String args[]) {
        A a = null;
        B b = (B)(Object)a;

        I i = null;
        B b1 = (B)i;
    }
}
</code></pre>
"
"22856168","<p>Why not doing it straight forward?</p>

<pre><code>public static void main(String[] args) {
    String str = ""abcdef"";
    for (int idx = 0; idx &lt; str.length(); idx++) {
        System.out.printf(""Expected %d, found %d\n"", idx, indexOf(str.charAt(idx), str, 0));
    }
    System.out.printf(""Expected -1, found %d\n"", indexOf(str.charAt(0), null, 0));
}

public static int indexOf(char ch, String str, int index) {
    if (str == null || index &gt;= str.length()) return -1;
    return str.charAt(index) == ch ? index : indexOf(ch, str, ++index);
}
</code></pre>

<p>OUTPUT:</p>

<pre><code>Expected 0, found 0
Expected 1, found 1
Expected 2, found 2
Expected 3, found 3
Expected 4, found 4
Expected 5, found 5
Expected -1, found -1
</code></pre>
"
"22856299","<p>Well if we must use recursion then try this:</p>

<pre><code>class RecursiveFirstIndexOf {

public static void main(String[] args) {
    System.out.println(indexOf('p', ""apple"", 0));
}

static int indexOf(char c, String str, int currentIdx) {

    if (str == null || str.trim().isEmpty()) {
        return -1;
    }

    return str.charAt(0) == c ? currentIdx : indexOf(c, str.substring(1), ++currentIdx);

}}
</code></pre>
"
"22856455","<p>first of all : <b>Recursion</b> has two pillars, <b>Base Case</b> and <b>General Case</b>.</p>

<p><b>Base Case</b> (the termination point) is the one where <b>Recursion</b> terminates and <b>General Case</b> as the name implies is where the program keeps executing until it finds  <b>Base Case</b> </p>

<p>you may try this example, where <code>count</code> is a global <code>static</code> variable</p>

<pre><code>public static int indexOf(char ch, String str)
{
  // Returns the index of the of the character ch
  if (str == null || str.Equals(""""))     //Base Case
  {
     if (count != 0)
     {
        if(str.Length == 0)
           return -1;  
        return count;
     }
     else
        return -1;          
  }
  else if (ch == str.CharAt(0))          //Base Case  
     return 1 + count; 
  count++;
  return indexOf(ch, str.Substring(1));  //General Case
}
</code></pre>
"
"15438533","<p>I couldn't get logging to work, but I was able to determine how to get the ContentType which is what I needed.  I had to add this to my class...</p>

<pre><code>@Context
UriInfo uriInfo;

@PostConstruct
public void myfunc() {
    if (uriInfo == null) { //breakpoint on this line, so I can see what uriInfo is

    }
}
</code></pre>
"
"22880948","<p>You need to initialize ZERO, ONE and TEN.</p>

<p>I think you wanted to do something like this:</p>

<pre><code>public static final BigInteger ZERO = BigInteger.ZERO;
public static final BigInteger ONE = BigInteger.ONE;
public static final BigInteger TEN = BigInteger.TEN;
</code></pre>

<p>You don't need to declare them as constants though, you can just them.</p>
"
"22896718","<p>if b is supposed to be an int you could try </p>

<pre><code>if (a==1 &amp;&amp; b instanceof int)
</code></pre>
"
"15464355","<p>One way to do this (I assume its a long procedure, easy one though), if you know the database and get all the tables and retrieve info from those tables. Since, we are talking about sqlite DBs, I assume it will be small. </p>

<pre><code>SELECT * FROM dbname.sqlite_master WHERE type='table';
</code></pre>
"
"15490086","<p>the object 's defualt toString method is return object's id in the memory.
byte buf[] is an object.</p>

<p>you can print using this.</p>

<pre><code>File sendFile = new File(fileName);
FileInputStream fileIn = new FileInputStream(sendFile);
byte buf[] = new byte[1024];

while(fileIn.read(buf) &gt; 0) {
    System.out.println(Arrays.toString(buf));
}
</code></pre>

<p>or</p>

<pre><code> File sendFile = new File(fileName);
FileInputStream fileIn = new FileInputStream(sendFile);
byte buf[] = new byte[1024];
int len=0;
while((len=fileIn.read(buf)) &gt; 0) {
    for(int i=0;i&lt;len;i++){
        System.out.print(buf[i]);
    }
    System.out.println();
}
</code></pre>
"
"23015449","<p>Duplicate of <a href=""http://stackoverflow.com/questions/1341455/when-is-obj-instanceof-object-false-in-java"">When is “obj instanceof Object” false in Java?</a></p>

<p>If <code>Object a=null;</code> then <code>a instanceof Object</code> returns <code>false</code></p>
"
"23054044","<p>Try this,</p>

<p>you need to initialize <code>numArabic</code> to some value first.</p>

<pre><code>public static void main(String[] args) {
    int numArabic = 0;
    boolean validEntry;

    try {
        System.out.println(""Enter an integer number between 1 and 3999!"");
        Scanner scan = new Scanner(System.in);
        numArabic = scan.nextInt();
        validEntry = true;
    }

    catch (InputMismatchException e) {
        System.out.println(""Entered value is not an integer!"");
    }


    if ((numArabic &lt; 1) || (numArabic &gt; 3999)) {

    } else {

    }

}
</code></pre>
"
"23054312","<p>The Program what you entered is free from syntax errors and logical errors.But for asking only one time to enter the integer value just rewrite the code as following.We are attaching second sop function in catch block.So if the input is mismatch it will ask for again re-enter.
    public static void main(String[] args) {</p>

<pre><code>    int numArabic; 
    boolean validEntry;

    try {
            System.out.println(""Enter an integer number between 1 and 3999!"");
            Scanner scan = new Scanner(System.in); 
            numArabic = scan.nextInt();
            validEntry = true;
        } catch (InputMismatchException e) {
            System.out.println(""Entered value is not an integer!"");


System.out.println(""Enter an integer number between 1 and 3999!"");
        Scanner scan = new Scanner(System.in); 
        numArabic = scan.nextInt();
        }
</code></pre>
"
"15573392","<p>Like Eng.Fouad suggests, you should still use a Date object. That way you still get access to all the utility that exists for Date objects. Just ignore the date part of it whenever you present it.</p>

<pre><code>Date date = new Date();
DateFormat df = new SimpleDateFormat(""hh:mm"");
String timeOfDay = df.format(date); // ex: ""18:00""
</code></pre>

<p>Or to create a specific time</p>

<pre><code>Calendar cal = Calendar.getInstance();
cal.set(Calendar.HOUR_OF_DAY, 18);
cal.set(Calendar.MINUTE, 00);
DateFormat df = new SimpleDateFormat(""hh:mm"");
String timeOfDay = df.format(cal.getTime()); // ""18:00""
</code></pre>
"
"23129408","<p>You can also use <code>org.apache.commons.lang.StringUtils#repeat</code> for this.</p>

<p>For example repeat for 5 times:</p>

<blockquote>
  <p>String result = StringUtils.repeat(""repeat this string"", "", "", 5);</p>
</blockquote>

<p>The version without the second argument (the separator "", "") is also available.</p>
"
"23164862","<pre><code>hand.addAll(hand);
</code></pre>

<p>See here for more info on addAll:
<a href=""http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html#addAll%28java.util.Collection%29"" rel=""nofollow"">http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html#addAll%28java.util.Collection%29</a></p>
"
"23191585","<p>Your loop should be</p>

<pre><code>for(int i = 0; i &lt; 7; i++)
{
   for(int j = 0; j &lt; 10; j++)
   {

       //your code
   }
}
</code></pre>
"
"15606651","<p>In switch statement if you don't <code>break</code> the subsequent case is executed. To give you simple example</p>

<pre><code>    int value = 2;
    switch(value) {
    case 1: 
        System.out.println(""one"");
        break;
    case 2: 
        System.out.println(""two"");
    case 3: 
        System.out.println(""three"");
        break;
    }
</code></pre>

<p>Will output</p>

<pre><code>two
three
</code></pre>

<p>Because <code>break</code> wansn't executed on case 2</p>
"
"23241510","<pre><code> s = s.replace(""{customerName}"", ""John Doe"");
 s = s.replace(""{accountName}"", ""jdoe"");
</code></pre>
"
"15636643","<p>List is an interface in java!</p>

<p>you can give references of instances like ArrayList, linket list, vector and stack to a variable with List datatype</p>

<p>so you can use one of the following,</p>

<pre><code>a = new ArrayList&lt;Integer&gt;();
a = new LinkedList&lt;Integer&gt;();
a = new Vector()&lt;Integer&gt;;
a = new Stack()&lt;Integer&gt;;
</code></pre>
"
"15639727","<p>You get all the integers like this:</p>

<pre><code>String data = ""254980"";
List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
for (int i = 0; i &lt; data.length(); i++) {
    list.add(new Integer(data.substring(i,i+1)));
}
</code></pre>

<p>Test:</p>

<pre><code>for (Integer integer : list) {
    System.out.print(integer);
}
</code></pre>

<p>prints</p>

<pre><code>2 
5 
4 
9 
8 
0
</code></pre>
"
"15643880","<p>You can use @JsonSerialize and @JsonDeSerialize annotations over any property. javadoc is at </p>

<pre><code> http://jackson.codehaus.org/1.2.1/javadoc/org/codehaus/jackson/map/annotate/JsonSerialize.html
</code></pre>

<p>I would personally use the serialization/deserialization technique rather than conversion at client side as you probably end up doing it at multiple places. </p>
"
"23350650","<p>You need iterate through all the elements of Array List and then need to check using <code>contains()</code> method</p>

<pre><code>for (String str : array){
            if(str.contains(mystring)){
                System.out.println(str + "" Conatins"" + mystring);
            }
        }
</code></pre>
"
"15699371","<pre><code>String[] arr = commaPattern.split(str);
</code></pre>

<p>should be</p>

<pre><code>String[] arr = str.split(commaPattern);
</code></pre>
"
"23441016","<p>try in this way</p>

<pre><code> @Override
        public void onClick(View arg0) {

            Intent intent = new Intent(this,Seccond.class);
                startActivity(intent);

        }
</code></pre>
"
"23471664","<p>you have missed to assign string value in query</p>

<pre><code>resultSet = statement.executeQuery
        (""SELECT name, price FROM menu WHERE category='"" + cat + ""');
                                              put + symbol here^
</code></pre>

<p><strong>OR</strong></p>

<p>Use  <a href=""http://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"" rel=""nofollow"">PreparedSatement</a> like</p>

<pre><code>PreparedStatement menuQuery = con.prepareStatement
      (""SELECT name, price FROM menu WHERE category=?"");
      menuQuery.setString(1,cat);
</code></pre>
"
"15760922","<pre><code>String str = ""ObjectOne""+""ObjectTwo"";
</code></pre>

<p>3 objects will be created as</p>

<p>1- ""ObjectOne""</p>

<p>2- ""ObjectTwo""</p>

<p>3- ""ObjectOneObjectTwo""</p>

<p>use</p>

<pre><code>StringBuffer tmp = new StringBuffer(""ObjectOne"");
tmp.append(""ObjectTwo"");
str = tmp.toString();
</code></pre>
"
"23543242","<p>You're passing arguments a and b to addEm, but those variables aren't initialized. I'm expecting you wanted to pass x and y instead.</p>

<pre><code>class Nine 
{
  public static void Nine(String[] args) 
  {
    int x,y,z;
    y=3;
    x=7;
    z=addEm(x, y);
    System.out.println(""answer= "" +x);
  }
  public static addEm (double a, double b)
  {
    int c;
    c=a+b;
  }
}
</code></pre>
"
"23543299","<p>Your code will not work because your <code>addEm</code> method does not have any return type. In addition, the method you wrote takes Double params but while using you are trying to pass int to it. You also do not have any main method. I am assuming you misspelled or misunderstood the main method so below is the code which should work</p>

<pre><code>class Nine 
{
  public static void Main(String[] args) 
  {
    int x,y,z;
    y=3;
    x=7;
    z=addEm(x, y);
    System.out.println(""answer= ""  + x);
  }
  public static int addEm (int a, int b)
  {
    int c;
    c=a+b;
    return c;
  }
}
</code></pre>
"
"23554904","<pre><code>public static void main(String[] args) {
    // TODO Auto-generated method stub
    int j=2;
    boolean isNotPrime=false;

    System.out.println(""Enter the n:"");
    Scanner reader= new Scanner(System.in);
    int n= reader.nextInt();

    while (j&lt;=n/2){
        if(n % j ==0){
            isNotPrime=true;
            break;
        }
        j++;
    }


    if (isNotPrime){
        System.out.println(""Number""+n+""is not prime"");
    }
    else
    {
        System.out.println(""Number""+n+""is prime"");
    }

}
</code></pre>

<p>}</p>
"
"23623185","<pre><code>    min=100000
    max=999999
    ans=rand()%(max-min)+min
</code></pre>
"
"15787645","<p>I will try explaining it by using your Example 2 and changing it a little bit.</p>

<p>Suppose class <code>C1</code> were like this</p>

<pre><code>public class C1 {
    static class I2 implements I1 {
        public int xxx() {
            return 1;
        }

        public int hello(){
            return 1;
        }
    }
    public I2 x = new I2();
}
</code></pre>

<p>I have just added another public method hello() to the class I2.</p>

<p>In </p>

<pre><code>package i2;:

import i1.C1;
import i1.I1;
public class C2 {
    public static void main(String[] args) {
        C1 c1 = new C1();

        c1.x.hello(); // Will not compile.
        c1.x.toString(); //Will not compile.             

        Object mObject=(Object)c1.x;
        mObject.toString(); //Will compile.
    }
}
</code></pre>

<p>Now, to answer your question of why the restriction.
The restriction allows the programmer to prevent access to the public methods of class <code>I2</code>. Since the access specifier of <code>I2</code> is the default access specifier, none of its methods should be available outside the package, hence the restriction.
If the restriction were not there we would have been able to access the method <code>hello()</code> from <code>C2</code> (which is in a different package) even though <code>I2</code> has the default access specifier.</p>

<p>Casting <code>c1.x</code> to <code>Object</code> works because now the compiler treats it as an object of class <code>Object</code>. Hence we can access its <code>toString()</code> method. Hence, <code>mObject.toString()</code> works whereas
<code>c1.x.toString()</code> doesn't becuase class <code>I2</code> is not accessible from class <code>C2</code>.</p>
"
"15830148","<p>Nothing wrong in this. this keyword refers the current object and it is used to differentiate the local variable and instance variable. The value of local variable can be assigned into instance variable likewise, the vice verse also possible. That means we can assign the value of instance variable into a local variable.</p>

<p>refer the chapter <strong>4.12.3 Kinds of Variables</strong> from <a href=""http://docs.oracle.com/javase/specs/jls/se7/jls7.pdf"" rel=""nofollow"">http://docs.oracle.com/javase/specs/jls/se7/jls7.pdf</a> (page 80). The example also given here. </p>

<pre><code>      **Example 4.12.3-1. Different Kinds of Variables**
      class Point { 
      static int numPoints; // numPoints is a class variable 
      int x, y; // x and y are instance variables 
      int[] w = new int[10]; // w[0] is an array component 
      int setX(int x) { // x is a method parameter 
        int oldx = this.x; // oldx is a local variable 
        this.x = x; 
        return oldx; 
      } 
    }
</code></pre>
"
"15854030","<pre><code>public static void removeEvenLength(ArrayList &lt;String&gt; stringList){
        for(int i=0;i&lt;stringList.size();i++){
            String word=stringList.get(i);
            System.out.println(word+"" ""+word.length()+"" ""+word.length()%2);
            if(word.length()%2==0){//even
                System.out.println(""Rmoving ""+word);
                stringList.remove(word);
                removeEvenLength(stringList);//Recursive call
            }
        }
    }
</code></pre>

<p>Use recursive call to function.</p>
"
"15857592","<p>Don't attempt to optimize this beyond using <code>String.format</code> or <code>StringBuilder.append</code> instead of String concatenation with + (especially in loops).</p>
"
"23932211","<p>You should got with second approach.
Make a Utility with static methods, which close the resources with NULL checks.</p>

<pre><code>public class DBUtils{
public static void closeConnection(Connection  con){
    if(con != null){
           // close the connection
        }
    }
}
</code></pre>
"
"23932385","<p>I generally use a structure that is quite similar to your second example...</p>

<pre><code>public void performInsertIF(String insertSQL) {
Connection connection = null;
PreparedStatement insertStmt = null;
try {
    connection = dataSource.getConnection();
    insertStmt = connection.prepareStatement(insertSQL);
    // bind value to prepare statements
    insertStmt.executeUpdate();
}
catch (SQLException e) {
    // TODO: handle exception
}
finally {

    try {
        insertStmt.close();
    }
    catch(Exception ignore) {
    }

    try {
        connection.close();
    }
    catch(Exception ignore) {
    }
}
</code></pre>

<p>}</p>

<p>However, if you are really wanting to print the stacktrace for SQLExceptions in the finally block, I would personally go with this variation as I think it looks a bit tidier/cleaner...</p>

<pre><code>public void performInsertIF(String insertSQL) {
Connection connection = null;
PreparedStatement insertStmt = null;
try {
    connection = dataSource.getConnection();
    insertStmt = connection.prepareStatement(insertSQL);
    // bind value to prepare statements
    insertStmt.executeUpdate();
}
catch (SQLException e) {
    // TODO: handle exception
}
finally {

    try {
        insertStmt.close();
    }
    catch(NullPointerException ignore) {
    }
    catch (SQLException e) {
        e.printStackTrace();
    }

    try {
        connection.close();
    }
    catch(NullPointerException ignore) {
    }
    catch (SQLException e) {
        e.printStackTrace();
    }
}
</code></pre>

<p>}</p>
"
"23968981","<p>I faced same problem like you...</p>

<p>I got the solution using <code>SimpleDateFormat</code> </p>

<pre><code>SimpleDateFormat sourceFormat = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"");
sourceFormat.setTimeZone(TimeZone.getTimeZone(""UTC""));
Date parsed = format.parse(""2011-03-01 15:10:37""); // =&gt; Date is in UTC now

TimeZone tz = TimeZone.getTimeZone(""America/Chicago"");
SimpleDateFormat destFormat = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"");
destFormat.setTimeZone(tz);

String result = destFormat.format(parsed);
</code></pre>

<p>this may help you.. </p>
"
"15899552","<p>best way to transfer data are the DTO objects.</p>

<p>these objects only contains the instance variables (with setters and getters) as the data which you want to transfer!</p>

<p>there should be no behaviours in this class</p>

<p>for example if you want to pass a Employee data , do as follows</p>

<pre><code>class EmployeeBean
{
private String name;
private String age;

public void setName(String n)
{
name=n;
}

public String getName()
{
return name;
}


public void setAge(int n)
{
age=n;
}

public int getAge()
{
return age;
}

}
</code></pre>

<p>you can now create the EmployeeBean class, populate data in its instance variables and then pass this object as parameter to the method in the other class where it can be formatted</p>
"
"24090365","<p><code>^([A-Za-z_]+)_(\\d+)_([A-Za-z]+)\\.jpg$</code></p>
"
"24097058","<p>hy,</p>

<p>change for</p>

<pre><code> &lt;html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:h=""http://java.sun.com/jsf/html""
      xmlns:p=""http://primefaces.org/ui""&gt;
    &lt;h:head&gt;

    &lt;/h:head&gt;

   &lt;h:body&gt;
    &lt;h:form&gt; 
  &lt;p:growl id=""growl"" showDetail=""true"" sticky=""true"" autoUpdate=""true""/&gt;  

    &lt;p:panel id=""panelID"" header=""Growl""&gt;  
        &lt;h:panelGrid columns=""2"" cellpadding=""5""&gt;  
            &lt;h:outputLabel for=""msg"" value=""Message:"" /&gt;   
            &lt;p:inputText id=""msg"" value=""#{pageView.message}"" required=""true"" /&gt;  
        &lt;/h:panelGrid&gt;  
      &lt;p:commandButton value=""Save"" action=""#{pageView.saveMessage}"" update=""growl""/&gt;  
    &lt;/p:panel&gt; 

   &lt;/h:form&gt;  
    &lt;/h:body&gt;
&lt;/html&gt;
</code></pre>

<p>and replace</p>

<pre><code>@ManagedBean
</code></pre>

<p>with</p>

<pre><code>@ManagedBean(name=""pageView"")
</code></pre>
"
"24098412","<p>Do you have a good reason to use JSF 2.0 instead of 2.2? You should use CDI instead of JSF managed beans, which is more or less deprecated. So, use</p>

<pre><code>@Named
@ViewScoped
public class GrowlView implements Serializable
</code></pre>

<p>Be sure the ViewScoped annotation is from javax.faces.view. And the beginning of the xhtml should use the new namespace:</p>

<pre><code>&lt;html xmlns=""http://www.w3.org/1999/xhtml""
  xmlns:h=""http://xmlns.jcp.org/jsf/html""
  xmlns:p=""http://primefaces.org/ui""&gt;
</code></pre>
"
"15955578","<p>Try using regular expressions in Java. The regex to retrieve only n words is: <code>(.*?\s){n}</code>.</p>

<p>Try using the code:</p>

<pre><code>String inputStr= ""hello, this\nis a long sentence"";
Pattern pattern = Pattern.compile(""(.*?[\\s]){3}"", Pattern.DOTALL); 
Matcher matcher = pattern.matcher(inputStr);
matcher.find(); 
String result = matcher.group(); 
System.out.println(result);
</code></pre>

<p>To know more about packages: </p>

<ul>
<li><a href=""http://docs.oracle.com/javase/1.5.0/docs/api/java/util/regex/Matcher.html"" rel=""nofollow"">http://docs.oracle.com/javase/1.5.0/docs/api/java/util/regex/Matcher.html</a></li>
<li><a href=""http://docs.oracle.com/javase/1.4.2/docs/api/java/util/regex/Pattern.html#DOTALL"" rel=""nofollow"">http://docs.oracle.com/javase/1.4.2/docs/api/java/util/regex/Pattern.html#DOTALL</a></li>
</ul>
"
"15963067","<p>Below code should be fine:<P>
<code>List&lt;<code>?</code>> list;</code>   or<P>
<code>List&lt;<code>?</code> extends Object> list;</code><P>
For usage of question mark（?） in java, you can refer to <a href=""http://en.wikipedia.org/wiki/Wildcard_%28Java%29"" rel=""nofollow"">Wildcard (Java)</a>.</p>
"
"24162505","<p>Replace with </p>

<pre><code>if (userName != null &amp;&amp; userName.equals(""aj"")){

}
</code></pre>

<p>It's possible that <code>userName</code> is <code>null</code>. You need to test for that prior to calling a method.</p>
"
"24187611","<p>best thing for you is to import gson library to your project from :<a href=""https://code.google.com/p/google-gson/"" rel=""nofollow"">https://code.google.com/p/google-gson/</a></p>

<p>Then create a class with the following :</p>

<pre><code>public class A {
String _id;
String description;
HashMap&lt;String,Integer&gt; choices;
String title;
String type;
}
</code></pre>

<p>Then when you get the response do the following </p>

<pre><code> try {
                                   A item = gson.fromJson(response, A.class);
                                } catch (JsonSyntaxException e) ;
</code></pre>

<p>Where reponse is the string</p>
"
"16004323","<p>You are setting an object to <code>chaine2</code>,</p>

<pre><code>chaine2 = new String();
</code></pre>

<p>but you overwrite it at the next line, so the previously created empty String is not used for anything.</p>

<pre><code>chaine2 = chaine.toLowerCase();
</code></pre>

<p>The compiler finds it odd, since the first line is useless, and warns you in case it is a logic error (although it is a correct program and will compile and run correctly).</p>
"
"24327723","<p>I'd say don't overcomplicate this. It can be simple as create an array of <code>int</code> that will contain possible colors, and set them to each item using <code>Random</code> class.</p>

<pre><code>// This goes inside hosting fragment or activity
listview.setOnItemClickListner( new OnItemClickListener() {
      @Override
      public void onItemClick(AdapterView parent, View view, int position, long id) {
           if(view.isSelected()){
               view.setSelected(false);
               // also maybe change bg color back to normal?
           }

           else {
                // This one for always a different color
                view.setBackgroundColor(adapter.getColor());

                // This is for foreground color change instead of background
                FrameLayout frameLayout = (FrameLayout) view.findViewById(R.id.my_frame_layout);

                final Drawable drawable = new ColorDrawable( /*  your getColor() function  */ );
                frameLayout.setForeground(drawable);

                // This one for alwyas the same color for the row at position given by {@param position}
                view.setBackgroundColor(adapter.getColor(position));
                view.setSelected(true);
           }
      }
});



// All this goes inside your custom listview Adapter
int[] colors = {
      R.colors.red,
      R.colors.blue,
      ...
}

Random random = new Random();

// If each time the selection will bring a different color, use this implementation
public int getColor() {
    return colors[random.nextInt(colors.length)]; 
}

// If each row should have different color, but always the same color for a row then use this one instead
SparseIntArray spa = new SparseIntArray();
public int getColor(int position) {
     if(spa.get(position) == 0) {
         // the color hasnt been created for that row yet
         spa.put(position, colors[random.nextInt(colors.length)];
     }

     return spa.get(position);     
}
</code></pre>

<p>**Edit: ** now, if what you want is a foreground selection, then your row should have a <code>FrameLayout</code> container, and you should change it's 'android:foreground' property:</p>

<pre><code>final Drawable drawable = new ColorDrawable( /*  your getColor() function  */ );
frameLayout.setForeground(drawable);
</code></pre>
"
"24420968","<p>The easiest way to iterare is using for. In a LinkedHashMap it would be like this:</p>

<pre><code>   private static LinkedHashMap&lt;Integer, String&gt; dataBase = new LinkedHashMap&lt;Integer, String&gt;();

   for(Integer key : dataBase.keySet()) {
         String ret = dataBase.get(key);
    }
</code></pre>

<p><a href=""http://tutorials.jenkov.com/java-collections/map.html"" rel=""nofollow"">Source</a></p>
"
"24627261","<pre><code>public static int sumOfMultiples(int i, int j, int limit){
    int s = --limit / i, t = limit / j, u = limit / (i * j);
    return (i*(s*(s+1)/2)) + (j*(t*(t+1)/2)) - ((i*j)*(u*(u+1)/2));
}
</code></pre>

<p>Test</p>

<pre><code>actual = Prob1.sumOfMultiples(3, 5, 1000);
assertEquals(233168, actual);
</code></pre>
"
"24689927","<p>You cannot override <code>getClass()</code>.</p>

<p>The <code>getClass()</code> method returns a <code>Class</code> object, which has methods you can use to get information about the class, such as its name (<code>getSimpleName()</code>), its superclass (<code>getSuperclass()</code>), and the interfaces it implements (<code>getInterfaces()</code>). For example, the following method gets and displays the class name of an object:</p>

<pre><code>void printClassName(Object obj)
{  
 System.out.println(""The object's"" + "" class is "" + obj.getClass().getSimpleName());
}
</code></pre>

<p>The <code>Class</code> class, in the <code>java.lang</code> package, has a large number of methods (more than 50). For example, you can test to see if the class is an annotation (<code>isAnnotation()</code>), an interface (<code>isInterface()</code>), or an enumeration (<code>isEnum()</code>). You can see what the object's fields are (<code>getFields()</code>) or what its methods are (<code>getMethods()</code>), and so on.</p>
"
"25202353","<p>Try IT</p>

<pre><code>CREATE TABLE IF NOT EXISTS TABLE_NAME(COL_NAME DATATYPE);
</code></pre>
"
"16164126","<p>If you are willing to use jquery and css there are very simple solutions.</p>

<p>Using jquery ass the below to your document ready function</p>

<pre><code>$(""tr:odd"").addClass(""odd"");
</code></pre>

<p>add then in you css of course define the 'odd' class.</p>

<p>See
<a href=""http://css-tricks.com/snippets/jquery/jquery-zebra-stripe-a-table/"" rel=""nofollow"">http://css-tricks.com/snippets/jquery/jquery-zebra-stripe-a-table/</a></p>
"
"25906478","<pre><code>Restart Hadoop
Go to /app/hadoop/tmp/dfs/name/current
Open VERSION (i.e. by vim VERSION)
Record namespaceID
Go to /app/hadoop/tmp/dfs/data/current
Open VERSION (i.e. by vim VERSION)
Replace the namespaceID with thve namespaceID you recorded in step 4.
</code></pre>

<p>to do this above steps,
i dont have any files in the data folder /tmp/data</p>
"
"25940566","<p>@Override</p>

<pre><code>   protected void onCreate(Bundle savedInstanceState) {

          super.onCreate(savedInstanceState);

          setContentView(R.layout.activity_main);

          Thread th = new Thread(new Runnable() {            /*create a new thread */

                              @Override

                              public void run() { /*

                                                                  * The purpose of this thread is to

                                                                  * navigate from one class to another

                                                                  * after some time

                                                                  */

                                     try {

                                            Thread.sleep(5000);

                                     } catch (InterruptedException e) {

                                            /*

                                             * We are creating this new thread because we don’t

                                             * want our main thread to stop working for that

                                             * time as our android stop working and some time

                                             * application will crashes

                                             */

                                            e.printStackTrace();

                                     }

                                     finally {

                                            Intent i = new Intent(MainActivity.this,

                                                          Splash_Class.class);

                                            startActivity(i);

                                            finish();

                                     }

                              }

                       });

          th.start(); // start the thread

   }
</code></pre>

<p><a href=""http://www.codehubb.com/android_splash_screen"" rel=""nofollow"">http://www.codehubb.com/android_splash_screen</a></p>
"
"16182531","<p>Easiest way is to use <a href=""http://dev.mysql.com/downloads/connector/j/5.0.html"" rel=""nofollow"">JDBC</a> all you need to do then is send queries to the server and interpret the results. A simple way to connect is below.  </p>

<pre><code>import java.sql.*;
Connection conn;
private void connect()
{
    try
    {
        Class.forName(""com.mysql.jdbc.Driver"").newInstance();
        conn = DriverManager.getConnection(""jdbc:mysql://serverURL"",""user"",""pass);
        System.out.println(""Connection Established"");
    }
    catch (Exception ex) 
    {
        System.err.println(""Unable to load the MySQL driver."");
        ex.printStackTrace();
    }
</code></pre>
"
"25952152","<p>You can do it in OpenCV as follows:</p>

<pre><code>File f4 = new File(""aa.png"");
Mat mat = Highgui.imread(f4.getAbsolutePath());
</code></pre>
"
"26154005","<p>Cancel Listener or Dismiss listener in DialogFragment can achieve by onDismiss</p>

<pre><code>            DialogFragment  newFragment = new DatePickerFragment();
            newFragment.show(getFragmentManager(), ""datePicker"");
            newFragment.onDismiss(new DialogInterface(){

                @Override
                public void cancel() {
                    // TODO Auto-generated method stub

                }

                @Override
                public void dismiss() {
                    // TODO Auto-generated method stub

                }

            });
</code></pre>
"
"16205094","<pre><code>@Override
protected void service(HttpServletRequest arg0, HttpServletResponse arg1)
        throws ServletException, IOException {
    // TODO Auto-generated method stub
    super.service(arg0, arg1);
}

@Override
public void service(ServletRequest arg0, ServletResponse arg1)
        throws ServletException, IOException {
    // TODO Auto-generated method stub
    super.service(arg0, arg1);
}
</code></pre>

<p>You can compare the similarities and differences between these two methods.
But these two methods are all subclasses of method parameters are different</p>

<h2>Or you can try to use the doPOST, doGET method.</h2>

<p>Can't speak English really good pain... Hehe I need to use translation tools to answer your question</p>
"
"26250260","<p>You can try:</p>

<pre><code>jar tvf jarfile.jar 
</code></pre>

<p>This will be helpful only if your jar is executable i.e. in manifest you have defined some class as main class</p>
"
"16222498","<p>When you do <code>scan.nextLine()</code> it moves the scanner to the line after the one you currently read in. So if you continue to do <code>scan.next()</code> the scanner will start from the end of your current line (in this case <code>line</code>) and reads what's after it. </p>

<p><a href=""http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Scanner.html#nextLine%28%29"" rel=""nofollow"">See here</a> it says:</p>

<p>""Advances this scanner past the current line and <strong>returns the input that was skipped</strong>""</p>

<p>What you can to is just call <code>split()</code> or <code>substring()</code> on <code>line</code> and extract the information you need.</p>
"
"16233696","<p>put null check on String ""s"" also as you are returning null you need to put null check in calling method...can you put the code which calls this mehod..</p>

<pre><code>static Boolean parseBoolean(String s)
{
   if(s == null || s.equals(""""))
      return null;    
   if (""1"".equals(s)) return true;
   if (""0"".equals(s)) return false;
    return null;
}
</code></pre>
"
"26659191","<p>simply don't close in</p>

<p>remove <code>in.close()</code> from your code.</p>
"
"26727868","<p>Try setting the encoding on your StreamResult specifically:</p>

<pre><code>StreamResult result = new StreamResult(new OutputStreamWriter(out, ""UTF-8""));
</code></pre>

<p>This way, it should only be able to write out in UTF-8.</p>
"
"26859879","<pre><code>Set&lt;String&gt; windows = driver.getWindowHandles();
Iterator&lt;String&gt; itr = windows.iterator();

//patName will provide you parent window
String patName = itr.next();

//chldName will provide you child window
String chldName = itr.next();

//Switch to child window
driver.switchto().window(chldName);

//Do normal selenium code for performing action in child window

//To come back to parent window
driver.switchto().window(patName);
</code></pre>
"
"27209015","<pre><code>ClassLoader loader = Thread.currentThread().getContextClassLoader();
InputStream is = loader.getResourceAsStream(""test.csv"");
</code></pre>

<p>If you use context ClassLoader to find a resource then definitely it will cost application performance.   </p>
"
"16289241","<p>Supposing the if-statement never returns true, will the method return anything? No, it won't, so you need to include a return statement that will execute in the event the if-statement never runs.</p>

<pre><code>  public int countOdds (int[] values) {
  int countOdd =0;
  for (int i=0; i&lt;values.length; i++) {
    if (values[i] %2 != 0) {
      countOdd++;
    }
  }
  return countOdd;
}
</code></pre>
"
"16296464","<p>Try using it like this. (Modified your second approach)</p>

<pre><code>public  &lt;T&gt; List&lt;T&gt; getDataList() throws SQLException {
          List&lt;String&gt; l = new ArrayList&lt;String&gt;();
          l.add(""Test"");
           return (List&lt;T&gt;)l;
        }
</code></pre>
"
"28386078","<p>package com.practice.ThreadPackage;</p>

<p>class ThreadParent extends Thread {</p>

<pre><code>StringBuffer data;

public void run() {
    synchronized (this.data) {

        System.out.println(this.getName());

        for (int i = 0; i &lt; 10; i++) {

            System.out.print(this.data.toString());
        }

        System.out.println();
        this.data.setCharAt(0, ((char) (this.data.charAt(0) + 1)));
    }
}

ThreadParent(StringBuffer obj) {
    this.data = obj;
}
</code></pre>

<p>}</p>

<p>public class ThreadClass {
    public static void main(String args[]) {</p>

<pre><code>    StringBuffer str = new StringBuffer(""A"");
    ThreadParent obj = new ThreadParent(str);
    ThreadParent obj1 = new ThreadParent(str);
    ThreadParent obj2 = new ThreadParent(str);
    obj.setName(""Thread1"");
    obj1.setName(""Thread2"");
    obj2.setName(""Thread3"");
    obj.start();
    obj1.start();
    obj2.start();

}
</code></pre>

<p>}</p>
"
"16410148","<p>You can do this using a simple delegation.  </p>

<pre><code>class NonUIThread { 
     private NonUIThreadDelegate delegate; //NonUIThreadDelegate can be an interface or an object that has access to your UI thread like an Activity

     public void setDelegate(NonUIThreadDelegate delegate) {
        this.delegate = delegate;
     }

     private void doSomthing() { 
        //do something and at the end:
        delegate.someMethodThatUpdatesThatComponent();
     } 
 }
</code></pre>

<hr>

<pre><code>class TheUIThread implements NonUIThreadDelegate /*assuming you've decided to make NonUIThreadDelegate an interface*/ { // the ""delegator""
    /*
    your code
    */

    private void initiateNonUIThread() {
        NonUIThread nonUIThread;
        /*do whatever needed*/
        nonUIThread.setDelegate(this);
        nonUIThread.start();
    }

    public void someMethodThatUpdatesThatComponent() { //will be called by the non ui thread
        //update the UI
    }   
 }
</code></pre>

<p>It's explained a little better (of course using AsincTask) in here: <a href=""http://myexperienceproject.blogspot.com.au/2012/07/delegation-pattern.html"" rel=""nofollow"">Simple Delegation Pattern in Android </a> </p>
"
"16418177","<p>If you didn't install java and did copy paste it then set the <strong>JAVA_HOME</strong></p>

<pre><code>C:\Program Files\Java\jdk1.6.0_24\bin
</code></pre>

<p>and add it to the <strong>path</strong> variable as well</p>
"
"16430627","<pre><code>LinkedList&lt;Sample&gt; h = (LinkedList&lt;Sample&gt;) history;
for(int i=0; i &lt; h.size(); i+=step) {
    h.get(i).memory ...
}
</code></pre>

<p>I just realized this approach, haven't tried it yet.</p>

<p>As <strong>nullptr</strong> pointed out, the condition for above code is that the <code>Queue</code> is implemented as a <code>LinkedList</code>. (which is my case: <code>Queue&lt;Sample&gt; history = new LinkedList&lt;Sample&gt;();</code>)</p>
"
"29121406","<p>This code will output numbers 1..10. Read javadoc for Stream.limit for more information</p>

<pre><code>IntStream
    .iterate(1, n -&gt; n + 1)
    .limit(10)
    .forEach(System.out::println);
</code></pre>
"
"29191305","<p>You can format your output in Java as described in below code snippet.</p>

<pre><code>public class TestFormat {

    public static void main(String[] args) {
      long n = 461012;
      System.out.format(""%d%n"", n);      //  --&gt;  ""461012""
      System.out.format(""%08d%n"", n);    //  --&gt;  ""00461012""
      System.out.format(""%+8d%n"", n);    //  --&gt;  "" +461012""
      System.out.format(""%,8d%n"", n);    // --&gt;  "" 461,012""
      System.out.format(""%+,8d%n%n"", n); //  --&gt;  ""+461,012""
   }
}
</code></pre>

<p>You can read more <a href=""https://docs.oracle.com/javase/tutorial/java/data/numberformat.html"" rel=""nofollow"">here.</a></p>
"
"16527894","<pre><code>int[] x = new int[5];

Object a=(Object)x;

int[] y= (int[])a;
</code></pre>
"
"30097356","<p>public final String path =""your path""</p>

<pre><code>        PrintWriter pw = new PrintWriter(new FileWriter(path),true);/*automatically append the line you want to save and if false it will overwrite the data */
</code></pre>

<p>pw.write(""what ever you want"")</p>

<pre><code>        pw.close();
</code></pre>
"
"30162169","<p><code>#include&lt;stdio.h&gt;</code> means copy the contents of stdio.h in this file, 
while <code>import java.util.ArrayList</code> means if you cann't find a class in this file look into above mentioned import location. Java imports do not increase size of your file.</p>
"
"16584942","<p>There's a pretty simple way of doing it. If i get it correct you put everyfile in database (some of info about it) and then remove to create a new output. You can Lock() on it,
Before reading file u check</p>

<pre><code>  for(File file : fileList.getFiles())
    try{
      (getting file + process it)
       }
</code></pre>

<p>and in process </p>

<pre><code>     file.lock();
     try {
         ...
     } finally {
         file.unlock();
     }
</code></pre>

<p>Here is some information about <a href=""http://docs.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/locks/Lock.html"" rel=""nofollow"">Lock</a>.</p>
"
"16627961","<p>Dog, I have a strong feeling you are leaving out some details that are crucial to the solution.  This often happens on SO because</p>

<ul>
<li>people need to leave out a lot of details to get the question to a reasonable size and scope,</li>
<li>people do not fully understand the problem and the solution (which is why they are asking for help) so they cannot be sure which details are important and which are not, and</li>
<li>the reason the person cannot solve the problem on their own is because they do not understand the importance of this detail, which is the same reason they left it out. </li>
</ul>

<p>I've said in another answer what I would do about ArtistSet.  But keeping the above in mind I will give you another solution to a slightly different problem. Lets say I had code from a bad vendor:</p>



<pre class=""lang-java prettyprint-override""><code>package com.bad;

public interface IAlpha {
    public String getName();
    // Sort Alphabetically by Name
    public int compareTo(IAlpha other);
}
</code></pre>

<p>This is bad because you should declare a function returning a <code>Comparator&lt;IAlpha&gt;</code> to implement the sorting strategy, but whatever. Now I get code from a worse company:</p>

<pre class=""lang-java prettyprint-override""><code>package com.worse;
import com.bad.IAlpha;

// an Alpha ordered by name length
public interface ISybil extends IAlpha, Comparable&lt;IAlpha&gt; {}
</code></pre>

<p>This is worse, because it is totally wrong, in that it overrides behavior incompatibly.  An <code>ISybil</code> orders itself by name length, but an IAlpha orders itself alphabetically, except an <code>ISybil</code> <strong><em>is an</em></strong> <code>IAlpha</code>. They were mislead by the anti-pattern of IAlpha when they could and should have done something like:</p>

<pre class=""lang-java prettyprint-override""><code>public interface ISybil extends IAlpha {
  public Comparator&lt;IAlpha&gt; getLengthComparator();
}
</code></pre>

<p><strong>However</strong>, this situation is still much better than ArtistSet because here the expected behavior is documented.  There is no confusion about what <code>ISybil.compareTo()</code> should do.  So I would create classes as follows.  A Sybil class that implements compareTo() as com.worse expects and delegates everything else:</p>

<pre class=""lang-java prettyprint-override""><code>package com.hack;

import com.bad.IAlpha;
import com.worse.ISybil;

public class Sybil implements ISybil {

    private final Alpha delegate;

    public Sybil(Alpha delegate) { this.delegate = delegate; }
    public Alpha getAlpha() {   return delegate; }
    public String getName() { return delegate.getName(); }
    public int compareTo(IAlpha other) {
        return delegate.getName().length() - other.getName().length();
    }

}
</code></pre>

<p>and an Alpha class that works exactly like com.bad said it should:</p>

<pre class=""lang-java prettyprint-override""><code>package com.hack;
import com.bad.IAlpha;

public class Alpha implements IAlpha {
    private String name;
    private final Sybil sybil;
    public Alpha(String name) { 
        this.name = name;
        this.sybil = new Sybil(this);
    }

    // Sort Alphabetically
    public int compareTo(IAlpha other) {
        return name.compareTo(other.getName());
    }

    public String getName() { return name; }
    public Sybil getSybil() { return sybil; }
}
</code></pre>

<p>Note that I included type conversion methods: Alpha.getSybil() and Sybil.getAlpha().  This is so I could create my own wrappers around any com.worse vendor's methods that take or return Sybils so I can avoid polluting my code or any other vendor's code with com.worse's breakage.  So if com.worse had:</p>

<pre class=""lang-java prettyprint-override""><code>public ISybil breakage(ISybil broken);
</code></pre>

<p>I could write a function</p>

<pre class=""lang-java prettyprint-override""><code>public Alpha safeDelegateBreakage(Alpha alpha) {
  return breakage(alpha.getSybil).getAlpha();
}
</code></pre>

<p>and be done with it, except I would still complain vociferously to com.worse and politely to com.bad. </p>
"
"16656442","<pre><code>int a[] = {2,1,2,3,4};

int b[] = {0};

for(int i = 0; i &lt; a.size; i++)
{

    if(a[i] == a[i+1])
    {
         //duplicate found
         //copy it to second array
        b[i] = a[i];
    }
}
</code></pre>
"
"16670817","<pre><code>for (int x = 0; x &lt; 6; x = x+1)
</code></pre>
"
"16763205","<p>You can use XML to represent each entry of your to-do list and then marshal and unmarshal them using JAXB.<br>
Something like:  </p>

<pre><code>&lt;task-list&gt;
   &lt;task remind=""true""&gt;
      .. more tags ..
   &lt;/task&gt;
  ... more &lt;task&gt; ...
&lt;/tasklist&gt;
</code></pre>
"
"16763269","<p>The best way to do this is use an <code>SQLite</code> Database.</p>
"
"16804923","<p>Make <code>ratio</code> final and it will be thread safe.</p>
"
"16813110","<p>Using <a href=""http://txt2re.com/"" rel=""nofollow"">this</a> website:</p>

<pre><code>// URL that generated this code:
// http://txt2re.com/index-java.php3?s=PT1M13S&amp;6&amp;3&amp;18&amp;20&amp;-19&amp;-21 

import java.util.regex.*;

class Main
{
  public static void main(String[] args)
  {
    String txt=""PT1M13S"";

    String re1=""(P)"";   // Any Single Character 1
    String re2=""(T)"";   // Any Single Character 2
    String re3=""(\\d+)"";    // Integer Number 1
    String re4=""(M)"";   // Any Single Character 3
    String re5=""(\\d+)"";    // Integer Number 2
    String re6=""(S)"";   // Any Single Character 4

    Pattern p = Pattern.compile(re1+re2+re3+re4+re5+re6,Pattern.CASE_INSENSITIVE | Pattern.DOTALL);
    Matcher m = p.matcher(txt);
    if (m.find())
    {
        String c1=m.group(1);
        String c2=m.group(2);
        String minutes=m.group(3); // Minutes are here
        String c3=m.group(4);
        String seconds=m.group(5); // Seconds are here
        String c4=m.group(6);
        System.out.print(""(""+c1.toString()+"")""+""(""+c2.toString()+"")""+""(""+minutes.toString()+"")""+""(""+c3.toString()+"")""+""(""+seconds.toString()+"")""+""(""+c4.toString()+"")""+""\n"");

        int totalSeconds = Integer.parseInt(minutes) * 60 + Integer.parseInt(seconds);
    }
  }
}
</code></pre>
"
"16817053","<p>The question <a href=""http://stackoverflow.com/questions/2201925/converting-iso8601-compliant-string-to-java-util-date"">Converting ISO8601-compliant String to java.util.Date</a> contains another solution:</p>

<blockquote>
  <p>The easier solution is possibly to use the data type converter in
  JAXB, since JAXB must be able to parse ISO8601 date string according
  to the XML Schema specification.
  <code>javax.xml.bind.DatatypeConverter.parseDateTime(""2010-01-01T12:00:00Z"")</code>
  will give you a <code>Calendar</code> object and you can simply use <code>getTime()</code> on it, if you need a <code>Date</code> object.</p>
</blockquote>
"
"16975496","<p>You can run the java file in the cmd command window. </p>

<p>make sure you have install the java environment.</p>

<pre><code>java -version
</code></pre>

<p>output:
    java version ""1.7.0_07""
    Java(TM) SE Runtime Environment (build 1.7.0_07-b11)
    Java HotSpot(TM) 64-Bit Server VM (build 23.3-b01, mixed mode)</p>

<pre><code>cd javafilepath

java yourjavafilename.java
</code></pre>
"
"17196663","<pre><code>public boolean onCreateOptionsMenu(Menu menu) {
    MenuInflater inflater = getMenuInflater();
    inflater.inflate(R.menu.activity_main, menu);
    return true;
}
</code></pre>

<p>Make sure you have the main.xml file in the res\menu folder</p>

<p>Remove ""import android.R;""</p>
"
"17270725","<p>What you get is the notification of 'Rows insetrted' (for INSERT statement). We use this method to know whether our DML query is succesful or not. The following is the way to get the Auto generated ID using [prepareStatement(yourSQL, Statement.RETURN_GENERATED_KEYS)]. Pls note that this method only return you a RowID ref. To get the actual val, pls refer to Method 2.</p>

<p>(Method 1)</p>

<pre><code>Try{
String yourSQL=""insert into Table1(Id,Col2,Col3) values(SEQ.nextval,?,?)"";
myPrepStatement = &lt;Connection&gt;.prepareStatement(yourSQL, Statement.RETURN_GENERATED_KEYS);
myPrepStatement.setInt(1, 123); 
myPrepStatement.setInt(2, 123); 

myPrepStatement.executeUpdate();
ResultSet rs = getGeneratedKeys;
if(rs.next()) {
  java.sql.RowId rid=rs.getRowId(1); 
  //what you get is only a RowId ref, try make use of it anyway U could think of
  System.out.println(rid);
}
} catch (SQLException e) {
}
</code></pre>

<p>(Method 2)</p>

<pre><code>Try{
String yourSQL=""insert into Table1(Id,Col2,Col3) values(SEQ.nextval,?,?)"";
//IMPORTANT: here's where other threads don tell U, you need to list ALL cols 
//mentioned in your query in the array
myPrepStatement = &lt;Connection&gt;.prepareStatement(yourSQL, new String[]{""Id"",""Col2"",""Col3""});
myPrepStatement.setInt(1, 123); 
myPrepStatement.setInt(2, 123); 
myPrepStatement.executeUpdate();
ResultSet rs = getGeneratedKeys;
if(rs.next()) {
//In this exp, the autoKey val is in 1st col
  int id=rs.getLong(1);
  //now this's a real value of col Id
  System.out.println(id);
}
} catch (SQLException e) {
}
</code></pre>

<p>Basically, try not used Method1 if you just want the value of SEQ.Nextval, b'cse it just return the RowID ref that you may cracked your head finding way to make use of it, which also don fit all data type you tried casting it to! This may works fine (return actual val) in MySQL, DB2 but not in Oracle.</p>

<p>IMPORTANT: 
Turn off your SQL Developer, Toad or any client which use the same login session to do INSERT when you're debugging. It MAY not affect you every time (debugging call) ... until you find your apps freeze without exception for some time. Yes ... halt without exception!</p>
"
"17408610","<p><code>ConstraintValidator</code> should help you.</p>

<ul>
<li><a href=""http://docs.jboss.org/hibernate/validator/4.0.1/reference/en/html/validator-customconstraints.html"" rel=""nofollow"">More About</a></li>
<li><a href=""http://emrpms.blogspot.in/search/label/Hibernate%20Validator?max-results=150"" rel=""nofollow"">And Example</a></li>
</ul>
"
"17446787","<p>Normally webapplications are hosted under webapps directory, but its also possible to configure an external directory as a webapplication host directory in tomcat. You can simply set your eclipse workspace project output directory as an application base. This can be done either by using Tomcat's manager application to deploy an application from an external directory or by simply editing server.xml (which is under conf directory) to define your application like below: </p>

<pre><code>....

&lt;Context docBase=""D:\your\eclipse\workspace\project\WebContent"" path=""/projectbaseurl""   reloadable=""true""/&gt;

&lt;/Host&gt;
&lt;/Engine&gt;
&lt;/Service&gt;
&lt;/Server&gt;
</code></pre>
"
"17505987","<p>A way of doing this is by creating an array of integers, and then sorting it and grabbing the first element.</p>

<p>Something like:</p>

<pre><code>int[] input = new int[]{in.nextInt(), in.nextInt(), in.nextInt()};
Arrays.sort(input);
int min = input[0];
</code></pre>

<p>Also seeing as you have made a function for it, you could turn that one into the following, instead of my above approach:</p>

<pre><code>public static int smallest(int... numbers) {
    if (numbers.length == 0) {
        throw new IllegalArgumentException(""numbers: numbers.length == 0"");
    }
    Arrays.sort(numbers);
    return numbers[0];
}
</code></pre>

<p>In this example you are using varargs, meaning that you can put in as many ints as you want. The varargs argument is essentially an array once it gets into your function, so then you can just work with it like any array. Be sure to do a check on the number of items in the array though, as varargs can also be 0.</p>

<p>You can call the code the same way as the old one:</p>

<p><code>int smallest = smallest(5, 10, 15);</code> will return <code>5</code>.</p>
"
"17527044","<p>Even, if you create</p>

<pre><code>Integer a = new Integer(1000);
Integer b = new Integer(1000);
</code></pre>

<p>a==b - false</p>

<p>but for </p>

<pre><code>Integer a = new Integer(1);
Integer b = new Integer(1);
</code></pre>

<p>a==b - is true</p>

<p>In java there is a cache of small integers: -127 to 128. All other integers are newly created objects and they can not be equals.</p>
"
"17530027","<p>If you are using Maven then</p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;commons-lang&lt;/groupId&gt;
    &lt;artifactId&gt;commons-lang&lt;/artifactId&gt;
    &lt;version&gt;2.3&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
"
"17606345","<p>In most cases you'll find the common practice is to have the variable come first because the operator <em>==</em> means assignment and here you are assigning the value <em>5</em> so it only makes sense to have the variable come first. </p>

<p>Your if statement should then look like this: </p>

<pre><code>    if ( 5 == x ) {
        std::cout &lt;&lt; ""X == 5, true."" &lt;&lt; std::endl;
    }
</code></pre>
"
"17751043","<p>The columns are defined by starting at zero. Make sure that the first column you try and edit is </p>

<pre><code>sheet.autoCoulmnWidth(0);
</code></pre>

<p>Get rid of the for loop and define each column individually. </p>
"
"17769694","<p>Add the following bean definition in your beans definition file. My bean definition has beans prefix.</p>

<pre><code>&lt;beans:bean name=""handlerAdapter""
    class=""org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter""&gt;
    &lt;beans:property name=""messageConverters""&gt;
        &lt;util:list&gt;
            &lt;beans:bean
                class=""org.springframework.http.converter.StringHttpMessageConverter"" /&gt;
        &lt;/util:list&gt;
    &lt;/beans:property&gt;
&lt;/beans:bean&gt;
</code></pre>
"
"18011039","<p><code>volatile</code> variables have no effect in this case because the variable is an <code>int</code>. <code>long</code> and <code>double</code> variables are affected by <code>volatile</code>, they are loaded and stored in one operation that can't be interrupted rather than two, one for each word. So the <code>volatile</code> variables have no effect.</p>

<p>What is happening that produces the unusual output is that the <code>i</code> is not shared among your threads. If you look, there is a separate <code>i</code> for each thread, although there is a static <code>i</code> in the main class. FYI, the <code>i</code> in the main class is left unnoticed by the threads, who don't notice it at all. If you'd like it to work, one simple modification will suffice: make the <code>i</code> variable in the thread static. Not in the main class, in the thread.</p>
"
"18108662","<p>A solution, maybe not the best one :</p>

<pre><code>String str = """";
int index = 0;

while(dst[index] != null) {
    str.append(dst[index]);
}
</code></pre>
"
"18204424","<p>There is one way to solve the return subclass problem using generics:</p>

<pre><code>// base class

public class Base&lt;T extends Base&gt; {

  private T myself;

  public Base(T myself, Class&lt;T&gt; cls) {
    this.myself = myself;
  }

  public T withSomething() {
    return myself;
  }
}

// subclass

public class SomeSubCls extends Base&lt;SomeSubCls&gt; {

  public SomeSubCls() {
    super(this, SomeSubCls.class);
  }
}
</code></pre>

<p>Using this pattern <code>new SomeSubCls().withSomething()</code> will return the object as an instance of the subclass, rather than the parent. </p>

<p>Used by <a href=""https://github.com/alexruiz/fest-assert-2.x"" rel=""nofollow"">fest assertions</a> for instance, check <a href=""https://github.com/alexruiz/fest-assert-2.x/blob/master/src/main/java/org/fest/assertions/core/NumberAssert.java"" rel=""nofollow"">this</a></p>
"
"18261216","<p>There is a race condition between the time Runtime.exec kicks off a <strong>new thread</strong> to start a Process and when you tell that process to destroy itself.</p>

<p>I'm on a linux machine so I will use the UNIXProcess.class file to illustrate.</p>

<p><code>Runtime.exec(...)</code> will create  a new <code>ProcessBuilder</code> and start it which on a unix machine creates a new <code>UNIXProcess</code> instance.  In the constructor of <code>UNIXProcess</code> there is this block of code which actually executes the process in a background (forked) thread:</p>

<pre><code>java.security.AccessController.doPrivileged(
            new java.security.PrivilegedAction() {
    public Object run() {
    Thread t = new Thread(""process reaper"") {
        public void run() {
                    try {
                        pid = forkAndExec(prog,
                      argBlock, argc,
                      envBlock, envc,
                      dir,
                      redirectErrorStream,
                      stdin_fd, stdout_fd, stderr_fd);
                    } catch (IOException e) {
                        gate.setException(e); /*remember to rethrow later*/
                        gate.exit();
                        return;
                    }
                    java.security.AccessController.doPrivileged(
                    new java.security.PrivilegedAction() {
                        public Object run() {
                        stdin_stream = new BufferedOutputStream(new
                                                FileOutputStream(stdin_fd));
                        stdout_stream = new BufferedInputStream(new
                                                FileInputStream(stdout_fd));
                        stderr_stream = new FileInputStream(stderr_fd);
                        return null;
                    }
                    });
                    gate.exit(); /* exit from constructor */
        int res = waitForProcessExit(pid);
        synchronized (UNIXProcess.this) {
            hasExited = true;
            exitcode = res;
            UNIXProcess.this.notifyAll();
        }
        }
    };
            t.setDaemon(true);
            t.start();
    return null;
    }
});
</code></pre>

<p>Notice that the background thread sets the field <code>pid</code> which is the UNIX process id.  This will be used by <code>destroy()</code> to tell the OS which process to kill.</p>

<p>Because there is no way to make sure that this background thread has run when <code>destroy()</code> is called, we may try to kill the process before it has run OR we may try to kill the process before pid field has been set;  pid is uninitialized and therefore is 0.  So I think calling destroy too early will do the equivalent of a <code>kill -9 0</code></p>

<p>There is even a comment in the UNIXProcess <code>destroy()</code> that alludes to this but only considers calling destroy after the process has already finished, not before it has started:</p>

<pre><code>// There is a risk that pid will be recycled, causing us to
// kill the wrong process!  So we only terminate processes
// that appear to still be running.  Even with this check,
// there is an unavoidable race condition here, but the window
// is very small, and OSes try hard to not recycle pids too
// soon, so this is quite safe.
</code></pre>

<p>The pid field is not even marked as volatile so we may not even see the most recent value all the time.</p>
"
"18271291","<p>You should sort by invoking another method</p>

<pre><code>Arrays.sort(sortedIDXs, new Comparator&lt;String&gt;() {
 public int compare(String idx1,String idx2) {
    //Your method of sorting here
    //return 1 if string idx1 should be before, 0 if equal and -1 in opposite 
 }
</code></pre>
"
"18355689","<p>The operator, ==, tests to see if two object reference variables refer to the exact same instance of an object.</p>

<p>The method, .equals(), tests to see if the two objects being compared to each other are equivalent -- but they need not be the exact same instance of the same object.</p>

<pre><code>Student Liam = new Student(1111, name, marks);
Student Ben = new Student(1111, name, marks);
</code></pre>

<p>In the above code, Liam  == Ben  is false because, although they both have the value 1111, name, marks, they are two different objects.</p>

<p>Also, in the above code, Liam .equals(Ben) is true because although they are two different objects, they are equivalent in the fact that they represent the same value.</p>
"
"18355699","<p>Java will consider <code>Equals</code> if two references point to same object.</p>

<p>To compare strings, you can use the method <code>equalsIgnoreCase()</code> from String class.</p>
"
"18371864","<p>so you are returning x.
Where is x being set?  It is not in this code.</p>

<p>Maybe you are wanting something like:</p>

<pre><code>x = (a*(x^2))+(b*x)+c;
</code></pre>
"
"18415453","<pre><code>public class ArrayPrinting&lt;E&gt; {

    public  void printArray(E[] a){
        for(E x : a){
            System.out.print(x+"", "");
        }
        System.out.println();
    }

    public static void main(String[] args) {
          String[] a = {""A"",""B"",""C"",""D"",""E""};
          new ArrayPrinting().printArray(a);
    }
}
</code></pre>
"
"18426236","<p>Here you can set height of your Scrollview like this -:</p>

<pre><code>&lt;ScrollView 
 android:id=""@+id/scrollView1""
 android:layout_width=""match_parent""
 android:layout_height=""200dp""
 android:layout_alignParentBottom=""true"" &gt;

           &lt;LinearLayout
            android:id=""@+id/maincontainer""
            android:layout_width=""match_parent""
            android:layout_height=""wrap_content""
            android:orientation=""vertical""&gt;

           &lt;/LinearLayout&gt;
&lt;/ScrollView&gt;
</code></pre>
"
"18438513","<p>An abstract class cannot instantiated.</p>

<p>You must create an extension class extends an abstract class and so istantiated this new class.</p>

<pre><code>public abstract class AbstractClassCreationTest {

    public void hello(){
        System.out.println(""I'm the abstract class' instance!"");
    }
}

public class MyExtClass extends AbstractClassCreationTest() {
}

public static void main(String[] args) {
    MyExtClass acct = new MyExtClass(){};
    acct.hello();
}
</code></pre>

<p>I post <a href=""http://docs.oracle.com/javase/tutorial/java/IandI/abstract.html"" rel=""nofollow"">this</a>. Can be useful for you. Have a nice day</p>
"
"18528861","<p>For strings:</p>

<pre><code>String a=""one""
String b=""two""

a = a + b;
b = a.replace(b, """");
a = a.replace(b,"""");
</code></pre>
"
"18677076","<p>Both strings would use the same memory. However, when you change str, str2 would not change and vice versa. This is because strings in Java are stored in a string pool. Take into consideration the following code:</p>



<pre><code>String str1 = ""hello"";
String str2 = ""hello"";
</code></pre>

<p>Both of these strings would point to the same place in memory in the string pool. When you ""create"" a string, it checks if the string already exists in the string pool, and if it does, points to that string. This has many implications. For example, consider:</p>

<pre><code>String str1 = ""hello"";
String str2 = ""hello"";
str2 = str2 + "" world"";
</code></pre>

<p>In this case, ""hello"" would be added to the string pool and str1 would point to it. str2 would check that ""hello"" exists, see that it does, and then point to it as well. The last line would create an entire new string ""hello world"" in the string pool and then str2 would point to it.</p>
"
"18753958","<pre><code>System.out.println(++j);
</code></pre>

<p>instead of</p>

<pre><code>System.out.println(j += j++); 
</code></pre>
"
"18763798","<p>The following line</p>

<pre><code>DumObj one = new DumObj();
</code></pre>

<p>creates one object of the <code>DumObj</code> type.</p>

<p>When you pass the <code>one</code> <strike>object</strike> reference as a parameter, it is always <strong>passed by value</strong>. That means the methods that receive the reference to the object (<code>updateId</code>, <code>setToNull</code>) can change its state (<code>setId</code>). The changes are visible outside the scope of the method because in fact the methods modify directly the underlying object.</p>

<p>You can consider the parameter inside the method is just an <em>alias</em> that refers the same object.
So,</p>

<pre><code>two = null;
</code></pre>

<p>only sets the local parameter reference (<em>alias</em>) to null.</p>
"
"18787372","<p>You can get this with Regex too, if that is the hammer you have in your hands:</p>

<pre><code>String fileName = null;
Pattern pattern = Pattern.compile(""(^|.*/)([^/]*)$"");
Matcher m = pattern.getMatcher(filenameWithPath);
if(matcher.matches()) {

        fileName = matcher.group(2);
}
</code></pre>

<p><strong>But don't be tempted to do this.</strong> This is less readable, and probably even slower than the other methods.</p>
"
"18794736","<p>By default, most app servers will make the URL to your servlet something like <code>&lt;context&gt;/&lt;servlet_path&gt;/&lt;rest_of_mapping&gt;</code>, where <code>&lt;context&gt;</code> is usually the WAR name.  In your example code, you don't have any mapping on the Controller at all, and ""/"" on the method, but you somehow expect <code>/gitsystem</code> to make it to your handler?  It doesn't work that way.  Not to mention, your sample request doesn't have any Context portion, unless they WAR you are deploying is called gitsystem.war.</p>

<p>First, you should have SOMETHING on your Controller.  Second, you should have something on your handler as well.  Although you can modify the Context portion to not be the WAR name, you cannot get rid of the Context altogether, at least not that I know of.  After the app server matches the Context, it will match the servlet.  In your case, you mapped that to '/', which is fine.  After that, the DispatchServlet takes care of the rest.  At this point, the DispatchServlet is just matching the request to a Controller using its <code>@RequestMapping</code>, then to the handler using it's <code>@RequestMapping</code>.  In your case, you ommited the first, and made the second nothing.  I just don't think that will work.</p>
"
"18915178","<pre><code>import java.util.regex.*;

String myString = ""I Need 5000 points"";
Pattern pattern = Pattern.compile(""\\d+"");
Matcher matcher = pattern.matcher(myString);
if(matcher.find())            
    System.out.println(matcher.group(0));
</code></pre>
"
"18974058","<p>You can check like this.</p>

<pre><code> if(res.equals(""true"")
 {
     Log.i(""Yes"",""1"");
 }
 else
 {
     Log.i(""No"",""0"");
 }
</code></pre>
"
"18995088","<p>For the sake of keeping the data structures originally used-- this is how I would propose solving this issue.</p>

<p>Testing params:</p>

<pre><code>ArrayList&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();

list.add(12);
list.add(12345);
list.add(999999999);

System.out.println(getMaxSequence(list));
</code></pre>

<p>Now, I simply compare all the values to indx 0, but totally not necessary :) </p>

<pre><code>public static int getMaxSequence(ArrayList&lt;Integer&gt; list) {

    int indx = 0;
    int currmax = 0;
    currmax = list.get(indx).toString().length();
    while (indx &lt; list.size()) {

        if (currmax &lt;= list.get(indx).toString().length()) {
            currmax = list.get(indx).toString().length();
        } else
            return currmax;

        // list.remove(indx);
        indx++;

    }

    return currmax;

}
</code></pre>
"
"19016542","<p>From ""this is fun"" only ""is"" is replaced. Before and after second ""is"" are 2 "" "" spaces.
Maybe you want:</p>

<pre><code>String str = ""this is fun"";
String str1 = str.replaceAll(""is "", """").trim();
System.out.println(str1);
</code></pre>

<p>Or </p>

<pre><code>String str = ""this is fun"";
String str1 = str.replaceAll("" is"", """").trim();
System.out.println(str1);
</code></pre>

<p>Depends on which output you expect.</p>
"
"19042259","<p>I added a code to set fraction digits to remain same as in <code>decimal1</code></p>

<pre><code> public static void main(String[] args) {
        try {
            DecimalFormat df = new DecimalFormat();
            String decimal1 = ""54.60""; // Decimal is input as a string with a specific number of significant digits.
            //
            int index = decimal1.indexOf(""."");
            int prec = -1;
            if (index != -1) {
                prec = decimal1.substring(index, decimal1.length()).length();
            }
            if (prec&gt;0) {
                df.setMaximumFractionDigits(prec);
                df.setMinimumFractionDigits(prec-1);
            }
            //
            double d = df.parse(decimal1).doubleValue();
            d = d * -1; // Multiply the decimal by -1 (this is why we parsed it, so we could do a calculatin).
            System.out.println(df.format(d)); // I need to print this with the same # of significant digits.
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }
</code></pre>
"
"19044087","<p>If it's a static method.No.</p>

<p>You cannot use <code>this</code>  in a static context,since main is <code>static</code> method.</p>

<p>If it is not a static method,</p>

<pre><code>String name = this.getClass().getPackage().getName();
</code></pre>
"
"19044245","<p>Double space is possible with <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/String.html#replaceAll%28java.lang.String,%20java.lang.String%29"" rel=""nofollow"">replaceAll()</a></p>

<pre><code>input.replaceAll("" "", ""  "");
</code></pre>
"
"19044269","<p>Yes the <code>replaceAll("" "",""  "")</code> method is the best way.</p>

<p>Didn't you read some documentation?</p>
"
"19047206","<pre><code>public static int powersOf2(int k){
    int x=1;
    for (i=0; i &lt; k; i++){
        x*=2;
    }
    return x;   
}
</code></pre>
"
"19103077","<p>Don't use #readLine as the conditional in your while loop. Instead wrap your inputStream in a scanner and use #hasNextLine()</p>

<pre><code>    Scanner in = new Scanner(p.getInputStream());
    while (in.hasNextLine()) {
        System.out.println(in.nextLine());
    }
</code></pre>
"
"19115782","<p>Use notifications and <code>Object#wait()</code> / <code>Object#notifyAll()</code>
i.e. Multithreaded, the producer notifies the consumer.</p>
"
"19118215","<p>No need for recursion ;)</p>

<p><code>return y / x;</code></p>
"
"19227292","<p>Try this:</p>

<pre><code>public class Storage extends Application
</code></pre>

<p>Application is a class used to share data from Activities</p>
"
"19238123","<p>Perhaps the problem is coming up because you have ""col"" in quotes. Try replacing this:</p>

<pre><code>escapePath+=""[""+row+"",""+""col""+""]"";
</code></pre>

<p>with this:</p>

<pre><code>escapePath+=""[""+row+"",""+col+""]"";
</code></pre>
"
"19288588","<p>Good option would be to <strong>exclude the Percentage codec</strong>, if it is not really needed. </p>

<p>To do that, one needs to write <strong><em>own customized encoder implementation</em></strong> that extends ESAPI provided <code>org.owasp.esapi.reference.DefaultEncoder</code> and register that to <code>ESAPI.properties</code> like </p>

<pre><code>ESAPI.Encoder=path.to.ESAPIDefaultEncoderImpl
</code></pre>

<p>See below the implementation example.</p>

<pre><code>package path.to;

import java.util.ArrayList;
import java.util.List;

public class ESAPIDefaultEncoderImpl extends org.owasp.esapi.reference.DefaultEncoder
{
private static List&lt;String&gt; codecs;
private static ESAPIDefaultEncoderImpl singletonInstance ;

static
{
    codecs = new ArrayList&lt;String&gt;();
    codecs.add(""HTMLEntityCodec "");
    codecs.add(""JavaScriptCodec"");
    singletonInstance = new ESAPIDefaultEncoderImpl();
}

public static ESAPIDefaultEncoderImpl getInstance()
      {
        return singletonInstance;
      }
      private ESAPIDefaultEncoderImpl()
      {
         super(codecs);
      }
}
</code></pre>

<p>In this customized encoder, one <strong>should not register</strong> the <strong><em>Percentage Codec</em></strong>, but only the ones which are really needed. (To see all ESAPI codecs, visit ESAPI documentation).</p>
"
"19301711","<p>The long compareTo command might help. The compareTo method returns an integer value to give you an answer as to whether the longs are equal, greater than, or less than each other.</p>

<pre><code>Long l1 = new Long(63255);
 Long l2 = new Long(71678);
 int returnVal =  l1.compareTo(l2);

 if(returnVal &gt; 0) {
    System.out.println(""l1 is greater than l2"");
 }
 else if(returnVal &lt; 0) {
    System.out.println(""l1 is less than l2"");
 }
 else {
    System.out.println(""l1 is equal to l2"");
 }
</code></pre>
"
"19309975","<p>Yes you can move your <code>Trainables</code> , <code>Set&lt;Trainables&gt; completed</code> and <code>trainingComplete(Trainables t)</code> to the class Trainer.</p>

<p>This way you no need to write these code each DogTrainer, HorseTrainer .. and so on...</p>

<pre><code> abstract class Trainer&lt;T extends Animal&gt;{
     public enum Trainables implements TrainingActions&lt;Animal&gt;{
            BARK, BITE, ROLLOVER, FETCH;
     }
      public Set&lt;Trainables&gt; completed = new HashSet&lt;Trainables&gt;();
      public void trainingComplete(Trainables t){completed.add(t);}
}
</code></pre>

<p>Otherwise make trainingComplete(Trainables t) abstract and you need to implement in each Trainer implementaion clasees. </p>

<pre><code>abstract class Trainer&lt;T extends Animal&gt;{
     public enum Trainables implements TrainingActions&lt;Animal&gt;{
            BARK, BITE, ROLLOVER, FETCH;
     }
      public Set&lt;Trainables&gt; completed = new HashSet&lt;Trainables&gt;();
      abstract public void trainingComplete(Trainables t);
}
</code></pre>

<p>Now your DogTrainer and HorseTrainer are implementing <code>trainingComplete(Trainables t)</code></p>

<pre><code> public class DogTrainer extends Trainer&lt;Dog&gt;{      
     public void trainingComplete(Trainables t){
          completed.add(t);
     }
 }

 public class HorseTrainer extends Trainer&lt;Horse&gt;{     
     public void trainingComplete(Trainables t){
           completed.add(t);
     }
 }
</code></pre>
"
"19314476","<p>You can try the code below to find out the position.</p>

<pre><code>function strallpos($haystack,$needle,$offset = 0){
$result = array();
for($i = $offset; $i&lt;strlen($haystack); $i++){
    $pos = strpos($haystack,$needle,$i);
    if($pos !== FALSE){
        $offset =  $pos;
        if($offset &gt;= $i){
            $i = $offset;
            $result[] = $offset;
        }
    }
}
return $result;
}
$haystack = ""you are awesome honey"";

$needle = ""o"";

print_r(strallpos($haystack,$needle));
</code></pre>
"
"19336395","<p>From the documentation :</p>

<pre><code>public String[] split(String regex)

Splits this string around matches of the given regular expression.

This method works as if by invoking the two-argument split method with the given expression and a limit argument of zero. Trailing empty strings are therefore not included in the resulting array.
</code></pre>
"
"19336418","<pre><code>str.split(/*regex*/);
</code></pre>

<p>removes the <strong><em>delimiter/regex provided to split() from the provided string</em></strong> and returns an String array. That's why you are not seeing <code>:</code> in the returned string array from <code>split()</code></p>

<p><a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/String.html#split%28java.lang.String%29"" rel=""nofollow""><strong>Link to DOCS</strong></a></p>
"
"19384052","<p>There is a difference between == and equals</p>

<pre><code>String a = ""abc"";
String b = ""abc"";

a == b -&gt; false
a.equals(b) -&gt; true
</code></pre>

<p>The difference is:</p>

<p><code>'=='</code> compares the reference of the String, where it is stored.</p>

<p><code>equals</code> compares the containing of the string.</p>
"
"19498622","<p>The <code>number_of_lines</code> is the number of lines inside the expected output (which is 6 in this case).  The <code>number_of_characters</code> is the number of characters each line should have (which is 22 in this case).</p>

<p>We know that there is a pattern.  The left side has <code>\</code>, the middle has <code>!</code>, and the right side has <code>/</code>.  This means we need <strong>one outer loop</strong> to loop through the lines and <strong>three inner loops</strong> for each of these sections.</p>

<p>How do we get know how many of each characters we need?  </p>

<p>The first line has    0 <code>\</code>, 22 <code>!</code>, and 0 <code>/</code> </p>

<p>The second line has   2 <code>\</code>, 18 <code>!</code>, and 2 <code>/</code></p>

<p>The third line has    4 <code>\</code>, 14 <code>!</code>, and 4 <code>/</code></p>

<p>The fourth line has   6 <code>\</code>, 10 <code>!</code>, and 6 <code>/</code></p>

<p>The fifth line has    6 <code>\</code>, 10 <code>!</code>, and 6 <code>/</code></p>

<p>The sixth line has    8 <code>\</code>, 6 <code>!</code>, and 8 <code>/</code></p>

<p>The seventh line has 10 <code>\</code>, 2 <code>!</code>, and 10 <code>/</code></p>

<p>There is a pattern.  Each line has the <code>\</code> and <code>/</code> count increment by 2 and the <code>!</code> count decrement by 4.  </p>

<p>Number of <code>\</code> equals two times the current line number (assuming the first line number is 0).  Same goes with <code>/</code>.  The number of <code>!</code> is the total number of characters expected per line minus four times the current line number (assuming the first line number is 0).</p>

<pre><code>public void printCoolStuff(int number_of_lines, int number_of_characters){

    for(int i = 0; i &lt; number_of_lines; i ++){

        String left= """";
        for(int j = 0; j &lt; (2*i); j++){
            left= left+ ""\""
        }

        String middle = """";
        for(int j = 0; j &lt; (number_of_characters - 4*i); j++){
            middle = middle + ""!""
        }

        String right= """";
        for(int j = 0; j &lt; (2*i); j++){
            right = right + ""/""
        }

        System.out.println(left+middle+right);
    }
}
</code></pre>
"
"19525465","<p>Here are the answers for you questions:</p>

<p><strong>1) Could I read somehow 01-Sep-13 as string: ""01-Sep-13"";</strong></p>

<p>Yes you can. You need to set the Cell type to String before reading it. Something like this:</p>

<pre><code>.
.
.
int fcell = row.getFirstCellNum();// first cell number of excel
int lcell = row.getLastCellNum(); //last cell number of excel
while (rows.hasNext()) {
row = (XSSFRow) rows.next();//increment the row iterator
for (int i = fcell; i &lt; lcell; i++) {
    row.getCell(i).setCellType(org.apache.poi.ss.usermodel.Cell.CELL_TYPE_STRING);
    .
    .
    ..//processing
    .
    .
    }
}
</code></pre>

<p><strong>2.)Could I convert Date value to string in case I have different date patterns (ddMMyyyy) and (dd-MMM-yy);</strong></p>

<p>Since the first answer is already giving you the String value.
Still to convert a String value to date you can use SimpleDateFormat as @rgettman and @Keerthi suggested</p>

<p>Hope this will help...:)</p>
"
"19558204","<p>Ideal way of doing the same is using Reflection. This way you dont need to call explicily on each variable and if any variable is deleted or added you are not tightly coupled to the same.</p>

<p>Using reflection , loop on all the available variables and invoke isBlank from a try catch block. </p>

<pre><code>private static boolean isBlank(String value) {
      boolean flag = value.equalsIgnoreCase(""""); 
      if(flag){
        throw new Exception(e);
     }
retrun flag;

}
</code></pre>
"
"19602370","<p>You can add a second catch statement to catch java.io.FileNotFoundException</p>

<pre><code>catch (FileNotFoundException e) {
    // Failed
}
</code></pre>
"
"19613020","<p>You could try something like :</p>

<pre><code>""[-\\ ]+""
</code></pre>

<p>Example :</p>

<pre><code>String str = ""12-34  - 56--7 89"";
String[] arraySplit = str.split(""[-\\ ]+"");
for (String s : arraySplit){
    System.out.println(s);
}
</code></pre>

<p>The result :</p>

<pre><code>12
34
56
7
89
</code></pre>
"
"19684623","<p>Rather than mucking around with letter indexes, you could use regex:</p>

<pre><code>if (word.matches(""(.).*\\1|."") {
</code></pre>

<p>The first part of the regex uses a back-reference to the captured first letter to assert that the first and last letters are the same.<br>
The ""|."" (meaning ""or a single character"") is to handle the edge case of a single letter word.</p>
"
"19718590","<p>The recommended way to pass runtime parameters or user specific setting is through the jnlp argument</p>

<pre><code>&lt;application-desc main-class="".....""&gt;
   &lt;argument&gt;user.home&lt;/argument&gt;
   ..............
</code></pre>
"
"19756703","<p>You originally set the <code>area</code> to be 0. You created a method to change that, but never called it. So call it. Change this:</p>

<pre><code>public String toString() {
    return ""The radius of the circle is: "" + radius + "", and the area is: "" + area;
}
</code></pre>

<p>to this:</p>

<pre><code>public String toString() {
    setArea(area); // change the value of the area
    return ""The radius of the circle is: "" + radius + "", and the area is: "" + area;
}
</code></pre>
"
"19840944","<p>Put your bars into an array (Bar[]).  Keep your moduleMarks in the array that they originally came in.  Then you can use a loop or set of nested loops:</p>

<pre><code> for(int i = 0; i &lt; modArray.size; ++i) {
      modArray[i].makeVisible();
      modArray[i].moveVertical(200-moduleMarks[i]);
      modArray[i].changeSize(15, moduleMarks[i]);
      modArray[i].moveHorizontal(35*i);

      //etc.
 }
</code></pre>
"
"19869385","<p>I believe you are just looking for an average:</p>

<pre><code>i = (array[0] + array[2] + array[4])/3;
j = (array[1] + array[3] + array[5])/3;
</code></pre>
"
"19869440","<p>You can use an array of 3 Points.  A <a href=""http://docs.oracle.com/javase/7/docs/api/java/awt/Point.html"" rel=""nofollow"">Point</a> is a Java class that holds an x and y value.</p>

<p>Your 3 Points shaded red in the illustration would be:</p>

<pre><code>0, 1
0, 0
1, 0
</code></pre>

<p>Another L shaped set of points would be:</p>

<pre><code>2, 2
3, 2
3, 1
</code></pre>
"
"19885837","<p>I will describe a method that returns the value at a provided index location, given an array of ints.</p>

<pre><code>public static int getAtPosition(int nextPosition, int... elements) {
    return elements[nextPosition];
}
</code></pre>

<p>In essence, whatever value I use for <code>nextPosition</code> is used to index into the array.</p>

<p>Consider next, you're seeding your <code>nextPosition</code> by using <code>arr[0]</code> to start, which, if coupled with the method call, results in a next position value of <code>1</code>.</p>

<p>You also correctly observe that it oscillates, which makes this an invalid chain.</p>

<p>Now, the trick here is selecting a data structure to store the elements we've seen, and to prevent us from triggering duplication once more.  Let's use a <code>Set&lt;Integer&gt;</code> to accomplish this, since we can <code>add</code> relatively cheaply, and the interface for <code>Set</code> mandates that it returns <code>true</code> if and only if this element was not added to the set prior.</p>

<pre><code>public static boolean invalidChain(Set&lt;Integer&gt; values, int index) {
    return !values.add(index);
}
</code></pre>

<p>An explanation:</p>

<ul>
<li>Given a set of ints, I add the index position that I've just seen.</li>
<li>If the index position was successfully added, I return false - because, a successful <code>add()</code> implies that the value was never placed into the set.</li>
<li>If the index position was not successfully added, I return true - for the opposite reason for the above.</li>
</ul>

<p>Given all of this, you now have to author a loop that leverages the boolean <code>invalidChain</code>, and the int <code>getAtPosition</code>.  Hint:  <code>invalidChain</code> is the <em>only</em> condition you should check within the loop.</p>
"
"19941710","<pre><code>public static void drawCross(int num){
    if(num % 2 != 0){
        for(int line = 0;line &lt; num;line++){
            for(int col = 0;col &lt; num;col++){
                if(line == num / 2 || col == num / 2) System.out.print(""*"");
                else System.out.print("" "");
            }
            System.out.println("""");
        }
    }
}
</code></pre>
"
"19969895","<p>try this</p>

<pre><code> public static void main(String args[])
  {

       Scanner kb = new Scanner(System.in);
       int salary = 0;
       double federaltax =0;
       double netsalary=0;
       double totaltax = 0;
       double statetax=0;
       int over_100000=0;
       int between50_100000=0;
       int between25_50000=0;
       int below25000=0;
       String stop="""";
       int count=0;
       do
       {
           System.out.println(""Please Input your salary"");
           salary = kb.nextInt();
                            if(salary &gt;= 100000) 
                            {
                                 statetax= salary * .05;
                                 federaltax = salary * .20; 
                                 netsalary = statetax + federaltax;

                            }
                            else
                            {
                                 statetax= salary * .05;
                                 federaltax = salary * .15; 
                                 netsalary = statetax + federaltax;                  

                            }
                            if(salary &gt;= 100000) 
                            {
                             over_100000 =  over_100000 + 1;
                            }
                            else if(salary &gt;= 50000 &amp;&amp; salary &lt;=100000) 
                            {
                             between50_100000 =  between50_100000 + 1;
                            }
                            else if(salary &gt;= 25000 &amp;&amp; salary &lt;=50000) 
                            {
                             between25_50000 =  between25_50000 + 1;
                            }
                            else
                            {
                              below25000 = below25000 + 1;
                            }


           System.out.println(""Federal tax :"" + federaltax);
           System.out.println(""netsalary :"" + netsalary);
           System.out.println(""statetax :"" + statetax);
           System.out.println(""salary :"" + salary);
           System.out.println(""Over 100000: "" + over_100000);
           System.out.println(""Between 50000 and 100000: "" + between50_100000);
           System.out.println(""Between 25000 and 50000: "" +  between25_50000);
           System.out.println(""Below 25000:"" +  below25000);

           System.out.println(""Do you want to continue?""); 
           stop = kb.nextLine();

      }while(stop.equals(""yes""));

   }  
</code></pre>
"
"20004603","<p>This is what you are doing:</p>

<pre><code>(double)totalCost = (double)totalCost + (Item)order.get(count);
</code></pre>

<p>You can't add <code>double</code> to an object.
<br />
Cast <strong>or</strong> Convert the object to <code>double</code> or <code>int</code> and it'll work.</p>
"
"20008764","<p>This should do it:</p>

<pre><code>Double.valueOf(string);
</code></pre>
"
"20032011","<p>It is called bitwise or operator. For example,</p>

<pre><code>5     = 0000 0101
2     = 0000 0010
5 | 2 = 0000 0111
      = 14
</code></pre>

<p>So, this concept is used when a same option can use multiple values.</p>

<p>As an example, consider a variable flags equal to one.</p>

<pre><code>int flags = 1;
</code></pre>

<p>Now, if a flag value of 4 is added to it with bitwise or,</p>

<pre><code>flags |= 4;  // 0
</code></pre>

<p>You can determine whether 4 was applied on flags with the bitwise and.</p>

<pre><code>if (flags &amp; 4 == 4)  // returns true
</code></pre>

<p>If that flag has been applied on the flags, bitwise and returns flag. In this way we can use bitwise and &amp; bitwise or.</p>

<p>Hope this helps.</p>
"
"20120012","<p>If <code>System.out.println</code> find Object reference than it always print <code>toString()</code> method. Here the <code>List</code> store differents Object reference with different <code>toString</code> implementations.</p>

<pre><code> ArrayList&lt;Object&gt; a = new ArrayList&lt;Object&gt;();
    a.add(new Socket());
</code></pre>

<p>For example, The <code>Socket</code> class <code>toString</code> is overrided as</p>

<pre><code>public String toString() {
    try {
        if (isConnected())
            return ""Socket[addr="" + getImpl().getInetAddress() +
                "",port="" + getImpl().getPort() +
                "",localport="" + getImpl().getLocalPort() + ""]"";
    } catch (SocketException e) {
    }
    return ""Socket[unconnected]"";
  }
</code></pre>

<p>So, you will see the output of <code>new Socket()</code> as <code>Socket[unconnected]</code></p>
"
"20126423","<pre><code>public class Anagrams {

//Write aprogram to check if two words are anagrams
public static void main(String[] args) {
    Anagrams an=new Anagrams();
    System.out.println(an.isAnagrams(""tree"", ""eetr""));

}

public boolean isAnagrams(String word1,String word2)
{
    boolean anagrams=false;
    char []arr1=word1.toCharArray();
    char []arr2=word2.toCharArray();

    //They should be the same length
    int sum1=0;
    int sum2=0;
    for(int i=0;i&lt;arr1.length;i++)
    {
        sum1+=(int)arr1[i];
        sum2+=(int)arr2[i];
    }

    if(sum1==sum2)
    {
        anagrams=true;
    }

    return anagrams;
}
</code></pre>

<p>}</p>

<pre><code>Output:-
true
</code></pre>
"
"20142080","<p>Actually, you have declared the first <code>i</code> before the <code>for</code> loop and then again you are declaring <code>i</code> inside the <code>for</code> loop.</p>

<p>Just don't declare <code>i</code> twice.</p>
"
"20166639","<p><em>Previous answer deleted</em>  </p>

<p>I have rectified the mistake in my previous answer to come up with a solution. I added a new method to the subclass called <code>getSpecificName()</code> which accepts an <code>int</code>argument to decide which <code>getName()</code> is to be called and thus gives you the proper value.  </p>

<p>The code is available here: <a href=""http://ideone.com/ioF06I"" rel=""nofollow"">http://ideone.com/ioF06I</a>  </p>

<pre><code>/* package whatever; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

class IdeoneBase{

    public String getName(){
        return ""P"";
    }   
}

/* Name of the class has to be ""Main"" only if the class is public. */
class Ideone extends IdeoneBase
{
    @Override
    public  String getName(){
        return ""K""; 
    }

    String getSpecificName(int x){
        if(x == 1){
            return super.getName();
        }
        return getName();
    }

    public static void main (String[] args) throws java.lang.Exception
    {
        IdeoneBase piece  = new Ideone();
        if(piece instanceof Ideone){
            Ideone p = (Ideone) piece; // without this downward cast, you cannot call getSpecificName(). You can only call that is common between the two.
            System.out.println(p.getSpecificName(1));
            System.out.println(p.getSpecificName(999));
        }
    }
}
</code></pre>
"
"20184289","<p>Try calling finish() on button click in second activity to return to the main activity.</p>

<pre><code>public void onClick(View v) {
 finish();
}
</code></pre>
"
"20189078","<p>You should look into the .replaceAll method.</p>

<p>First of all you should make your String str for instance:</p>

<pre><code>    String str = new String(""1234$no"");
    str.replaceAll(""[^A-Za-z0-9]"", """");
    return str;
</code></pre>

<p>Basically this will replace everything NOT in the given sequences with """" </p>

<p>Best of luck</p>
"
"20215728","<p>At this moment, the java plugin is not compatible with the android plugin that you have to import for the buildscript.</p>

<p>You can still use Jacoco by using ant.java inside the build file </p>

<pre><code>ant {
    java { ....}}
</code></pre>
"
"20232811","<p>Well, we want to keep the heading, which prints from 1 to 10. What we want to change is the row to only use 10. So rather than having a 10 x 10 table, we will have a 1 x 10 table.</p>

<pre><code>public class TimesTable {

  public static void main(String[] args) {

    int lowerValue = 1;
    int upperValue = 10;

    for (int headingIndex = lowerValue; headingIndex &lt;= upperValue; headingIndex++) {
      System.out.print(""\t"" + headingIndex);
    }
    System.out.print('\n');

    for (int inner = lowerValue; inner &lt;= upperValue; inner++) {
      System.out.print(inner);
      // Set outer to 10.
      for (int outer = 10; outer &lt;= upperValue; outer++) {
        System.out.print(""\t""+(inner*outer));
      }
      System.out.print('\n');
    }
  }

}
</code></pre>

<p>So changing outer to 10, you'll only use 10 for the inner loop. Hence, while the outer loop goes from 1 to 10, the inner loop stays at 10.</p>

<p>1 x 10, 2 x 10, etc.</p>
"
"20285181","<p>Application code should not pass a cached connection handle from one instance of a data access client to another client instance. Transferring the connection handle between client instances creates the problematic contingency of one instance using a connection handle that is referenced by another.
For example, when the application code of a client instance that receives a transferred handle closes the handle and the client instance that retains the original reference to the handle tries to reclaim it, the application server issues an exception.
shown some exceptions expected in this case.
Exception description: An exception was detected cleaning up the ManagedConnection for a destroy operation. Refer to the error reported by the database software to help determine the cause of the error.
Exception</p>

<pre><code>0000004d WSRdbManagedC W   DSRA0180W: Exception detected during 
ManagedConnection.destroy().  The exception is:  
com.ibm.ws.exception.WsException: DSRA0080E: An exception was received by 
 the Data Store Adapter Invalid operation: Connection is closed. ERRORCODE=- 
4470, SQLSTATE=08003. With SQL State: 08003 SQL Code : -4470
</code></pre>

<p>Read <a href=""http://www.ibm.com/developerworks/websphere/techjournal/1205_ramachandra/1205_ramachandra.html"" rel=""nofollow"">this</a> for more unertstanding</p>
"
"20321198","<pre><code>long x = Long.parseLong(""9876543210123456"");

System.out.println(""Integer: "" + x);
</code></pre>

<p>or else ple use follow line</p>

<pre><code>BigInteger bint = new BigInteger(""9999999999999999"", 16);
</code></pre>

<p>Please try this..Can't avle to convert the more than 13 digits string to int..so,you should convert to long</p>
"
"20331308","<pre><code>SimpleDateFormat sdf = new SimpleDateFormat(""mm/dd/yyyy"");
</code></pre>
"
"20500746","<p>See <a href=""http://en.wikipedia.org/wiki/Recursion_%28computer_science%29"" rel=""nofollow"">Recursion</a> is a method call in which same method calls itself.<br>
So as in your code:</p>

<pre><code> public static void f(int x)
    {
        if (x &gt; 0)
        {
            System.out.println(x);
            f(x-1);    //at this point it will call itself as f(2)
            System.out.println(x);
            f(x-1);
        }
        System.out.println(""bert"");
    }
</code></pre>

<p>It will keep on calling itself until the if condition is true. The very main thing you need to understand is the <strong>Stack situation</strong> of method calls whether it is recursive or not.</p>
"
"20500766","<pre><code>private String returnType(int t, String[] s) &lt;- return type recursion example
{
    String arrayed = s[t];
    if (t == 0) // &lt;--if 0
        return "" "" + arrayed;
    else
        return arrayed + returnType(t - 1, s); &lt;--if != 0 return value and then call itself again with the value -1.
}
</code></pre>

<p>It returns arrayed when it reaches 0. This goes through String[] s, and puts all the strings together side by side into one string</p>
"
"20607031","<p>Try this one </p>

<pre><code>TreeMap&lt;String, Integer&gt; Word = new TreeMap&lt;String,Integer&gt;();

while (scanner.hasNext()) {
    String NewWord = scanner.next().toLowerCase();

    if (Word.containsKey(NewWord)) {
        Word.put(NewWord,Word.get(NewWord)+1);
    } else {
        Word.put(NewWord,1);
    }

}
</code></pre>
"
"20607095","<p>Try this out:</p>

<pre><code>        TreeMap&lt;String, Integer&gt; map = new TreeMap&lt;String, Integer&gt;();
        Scanner scanner = null;
        while (scanner.hasNext()) {
            String NewWord = scanner.next().toLowerCase();

            if (map.containsKey(NewWord)) {
                Integer count = map.get(NewWord);
                // Add the element back along with incremented count
                map.put(NewWord, count++); 
            } else {
                map.put(NewWord,1); // Add a new entry
            }

        }
</code></pre>
"
"20611909","<p>It sounds like what you really want is a <code>Set&lt;Set&lt;String&gt;&gt;</code></p>

<pre><code>Set&lt;Set&lt;String&gt;&gt; pairs = ...
try(BufferedReader br = ... ) {
    for(String line; (line = br.readLine()) != null;) 
        pairs.add(new HashSet&lt;String&gt;(Arrays.asList(line.split("" "")));
}
</code></pre>

<p>This creates a collection of pairs without duplicates regardless of the order of the words.</p>
"
"20615054","<p>This algorithm appears to generate an acceptable solution according to your constraints:</p>

<pre><code>private static class Algorithm implements ItineraryAlgorithm {
    public List&lt;Integer&gt; processItinerary(String[] towns) {

        List&lt;Integer&gt; sequence = new ArrayList&lt;&gt;(towns.length*(towns.length+1));

        for(int idx1 = 0; idx &lt; towns.length; idx1++){
            result.add(idx1);
            for(int idx2 = idx1+1; idx2 &lt; towns.length; idx2++){
                sequence.add(idx2);
                sequence.add(idx1);
            }
        }

        List&lt;Integer&gt; segments = new ArrayList&lt;&gt;(result.length*2-2);
        for(int i: sequence){
            segments.add(i);
            segments.add(i);
        }
        segments.remove(0);
        segments.remove(segments.length-1);

        return segments;
    }
}
</code></pre>
"
"20667667","<pre><code>if(emailInput == emailconfInput){
</code></pre>

<p>if yout change to that you shouldnt have a problem... oh and i wouldnt suggest ignoring case on password check.</p>
"
"20709779","<p>The question here is not about the class implementation itself, but about if the manipulation of the class you describe is thread-safe or not, so the class implementation doesn't really matter.</p>

<p>I can think of 2 possible ways of Thread2 accessing the <code>MyClass</code> instance.</p>

<ol>
<li>Both Thread1 and Thread2 are run independently. In this case it's not thread-safe because Thread2 can call put/get/printMap/etc before the constructor running in Thread1 has finished, resulting in a NPE. The <code>MyClass</code> instance accessed by Thread2 can be null depending on how Thread2 accesses it. If it's a shared instance, when Thread2 accesses it, it can be null if <code>MyClass</code> constructor has not finished executing in Thread1.</li>
<li>Thread1 creates the instance and passes this instance to Thread2. In this case it is thread-safe, but this is actually irrelevant because there's no multi-thread access to this instance because Thread2 has to wait for the instance to be passed.</li>
</ol>

<p>So in the situation you describe, the answer actually depends not on the class implementation but in how its instance is shared. And in worst-case scenario (way 1) it is not thread-safe.</p>
"
"20738599","<p>You need manually cast result to T, like</p>

<pre><code>    public &lt;T extends Parent&gt; T copy() {

       return (T) new Child();
    }
</code></pre>
"
"20738614","<p>i think in generics you have to mention the class names not the instances of the class..</p>

<p>here t is a instance of child class may be. so your above code should be </p>

<p>`public  T copy() {</p>

<pre><code>       return new Child();
}`
</code></pre>

<p>i wonder why you want to extend it in generics?</p>
"
"20744093","<p>Use </p>

<pre><code>&lt;context:component-scan base-package=""de.dijon.test.*""
        annotation-config=""true"" use-default-filters=""true"" /&gt;
</code></pre>

<p>in application-context.xml file</p>
"
"20756232","<p>try following code</p>

<pre><code> if(arraryTemplist.size()&gt;0){
      adapter = new ListViewAdapter(ListOfContacts.this, arrayTemplist);
                    listview.setAdapter(adapter);
  }else{

     adapter = new ListViewAdapter(ListOfContacts.this, arraylist);
                    listview.setAdapter(adapter);
}
</code></pre>
"
"20865843","<p>You can try this:</p>

<pre><code>    List&lt;Integer&gt; lst = Arrays.asList(new Integer[] { 0, 0, 0, 0 });

    int temp = Integer.parseInt(lst.toString().replaceAll("", "", """").replaceAll(""\\["", """").replaceAll(""]"", """").trim());
    if(temp == 0) {
        System.out.println(""All zeros"");
    }
</code></pre>
"
"20872143","<p>Add checked exception to <code>throws</code> spec it frees the user from throwing unchecked exceptions in the future. However, the user is not obligated to follow <code>throws</code> declaration in the spec when producing the implementation. On the other hand if you keep your specification <em>as short as possible</em>, then you obey the user to add <code>throws</code> declaration to the methods if the user won't or can't handle the <code>Exception</code>. This is two way approach either you use first way which is less restrictive or use a second that is more strict.  </p>
"
"20953699","<pre><code>int x = 0;
        while (x &lt;10){
        System.out.println(x);
            x++;
        }
</code></pre>

<p>Will work</p>

<p>EDIT: i think the others comments are rights too, the do/while loop will force one execution of the code</p>
"
"20953862","<pre><code>var x = 0;
do {
    if (x % 2 != 0) System.out.println(x);
    x++;
} while (x &lt; 10);
</code></pre>
"
"20982187","<p>You can't write one single prototype to accept both because <code>List&lt;B&gt;</code> is not a subclass of <code>List&lt;A&gt;</code>. See: <a href=""http://stackoverflow.com/questions/2745265/is-listdog-a-subclass-of-listanimal-why-arent-javas-generics-implicitly-p"">Is List&lt;Dog&gt; a subclass of List&lt;Animal&gt;? Why aren&#39;t Java&#39;s generics implicitly polymorphic?</a>
However you can write two prototypes to accept each:</p>

<pre><code>class c {
    public void f(List&lt;? extends A&gt; list);
    public void f(List&lt;A&gt; list);
}
</code></pre>
"
"21012355","<p>Hello Hi could you try Implementing onResume() and calling 
this block of code from there</p>

<pre><code>    FragmentManager manager = getFragmentManager();
    FragmentTransaction transaction = manager.beginTransaction();

    transaction.add(R.id.LIST_LAYOUT,frag,""LIST"");
    transaction.commit();
</code></pre>

<p>also override onsaveinstancestate()</p>
"
"21041391","<p>you can use while loop i think i don't know too much about server connection but if you can pass boolean or specific string from the and inside the service class of your app create a while true like this:</p>

<pre><code>while(true){

  if(ServerString.contentEquals("""") || boolean == true{
     //coding

     }
     try{
        Tread.sleep(60)}
    catch(Exception e){e.printStackTrace }

   }
</code></pre>

<p>the fastest way of learning a service in here video <a href=""http://www.youtube.com/watch?v=GAOH7XTW7BU"" rel=""nofollow"">made by a girl</a></p>
"
"21066260","<p>I assume you're asking about the general case - how do I create an instance of whichever class was passed into such a method.  Clearly, if you just mean ""how do I create an <code>Integer</code>"", then it's nothing to do with that method.</p>

<p>From the <a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/Class.html#newInstance%28%29"" rel=""nofollow"">Javadoc for Class</a></p>

<pre><code>public T newInstance()
          throws InstantiationException,
                 IllegalAccessException
</code></pre>

<blockquote>
  <p>Creates a new instance of the class represented by this Class object. The class is instantiated as if by a new expression with an empty argument list. The class is initialized if it has not already been initialized.</p>
</blockquote>

<p>Obviously, this won't work for <code>Integer</code>, as there is no constructor for <code>Integer</code> with an empty parameter list.</p>
"
"21066262","<p>If you use it in reflect method, I think you should use</p>

<pre><code>Integer.TYPE
</code></pre>
"
"21128317","<p>Here you go:</p>

<pre><code>public class DoublyLinkedList {
private class Node {
    String value;
    Node next,prev;

    public Node(String val, Node n, Node p) {
        value = val;
        next = n;
        prev=p;
    }

    Node(String val) {
        this(val, null, null);
    }
}
private Node first;
private Node last;

public DoublyLinkedList() {
    first = null;
    last = null;
}
public boolean isEmpty(){
    return first==null;
}
public int size(){
    int count=0;
    Node p=first;
    while(p!=null){
        count++;
        p=p.next;
    }
    return count;
}
public void add(String e) {

    if(isEmpty()){
        last=new Node(e);
        first=last;
    }
    else{
        last.next=new Node(e, null, last);
        last=last.next;
    }
}
public void add(int index, String e){
    if(index&lt;0||index&gt;size()){
        String message=String.valueOf(index);
        throw new IndexOutOfBoundsException(message);
    }
    if(index==0){
        Node p=first;
        first=new Node(e,p,null);
        if(p!=null)
            p.prev=first;
        if(last==null)
            last=first;
        return;
    }
    Node pred=first;
    for(int k=1; k&lt;=index-1;k++){
        pred=pred.next;
    }
    Node succ=pred.next;
    Node middle=new Node(e,succ,pred);
    pred.next=middle;
    if(succ==null)
        last=middle;
    else
        succ.prev=middle;
}
public String toString(){
    StringBuilder strBuilder=new StringBuilder();
    Node p=first;
    while(p!=null){
        strBuilder.append(p.value+""\n"");
        p=p.next;
    }
    return strBuilder.toString();
}
public String remove(int index){
    if(index&lt;0||index&gt;=size()){
        String message=String.valueOf(index);
        throw new IndexOutOfBoundsException(message);
    }
    Node target=first;
    for(int k=1; k&lt;=index;k++){
        target=target.next;
    }
    String element=target.value;
    Node pred=target.prev;
    Node succ=target.next;
    if(pred==null)
        first=succ;
    else
        pred.next=succ;
    if(succ==null)
        last=pred;
    else
        succ.prev=pred;
    return element;
}
public boolean remove(String element){
    if(isEmpty())
        return false;
    Node target=first;
    while(target!=null&amp;&amp;!element.equals(target.value))
        target=target.next;
    if(target==null)
        return false;
    Node pred=target.prev;
    Node succ=target.next;
    if(pred==null)
        first=succ;
    else
        pred.next=succ;
    if(succ==null)
        last=pred;
    else
        succ.prev=pred;
    return true;
}
public static void main(String[] args){
    DoublyLinkedList list1=new DoublyLinkedList();
    String[] array={""a"",""c"",""e"",""f""};
    for(int i=0; i&lt;array.length; i++){
        list1.add(array[i]);
    }
    list1.add(1,""b"");
    list1.add(3,""d"");
    System.out.println(list1);

}


}
</code></pre>
"
"21260723","<p><code>initLoader</code> will reuse the the same parameters if the loader already exists. It returns immediately if old data is already loaded, even if you call it with new parameters. The loader should ideally automatically notify the activity of new data. If the screen rotated, <code>initLoader</code> would be called again and the old data would be immediately displayed.</p>

<p><code>restartLoader</code> is for when you want to force a reload and change the parameters as well. If you were to make a login screen using loaders, you would call only <code>restartLoader</code> each time the button was clicked. (The button may be clicked multiple times due to incorrect credentials etc.). You would only ever call <code>initLoader</code> when restoring the activity's saved instance state in the event the screen was rotated while a login was in progress.</p>
"
"21281658","<p>Just to add to the answers above, make sure the <code>log4j.properties</code> file is stored in the src folder. Otherwise it wont be picked up, and the default will be called. </p>
"
"21289506","<p>AES-GCM is available in TLS v1.2. See <a href=""http://www.ietf.org/rfc/rfc5246.txt"" rel=""nofollow"">The Transport Layer Security (TLS) Protocol Version 1.2</a>, section 6.2.3.3. TLSv1.1 did not add any cipher suites, and TLSv1.0 never had AES-GCM or the elliptic curve gear. (The elliptic curve stuff showed up in TLSv1.2 also).</p>

<p>As far as I know, Java 7 does not support the protocol. From <a href=""http://download.java.net/jdk8/docs/technotes/guides/security/jsse/JSSERefGuide.html"" rel=""nofollow"">Java Secure Socket Extension (JSSE) Reference Guide</a> (under JDK8 docs):</p>

<blockquote>
  <p>The JSSE API is capable of supporting SSL versions 2.0 and 3.0 and TLS
  version 1.0. These security protocols encapsulate a normal
  bidirectional stream socket, and the JSSE API adds transparent support
  for authentication, encryption, and integrity protection. The JSSE
  implementation shipped with the JDK supports SSL 3.0 and TLS 1.0. It
  does not implement SSL 2.0.</p>
</blockquote>

<p>Its interesting that the <code>TLS_ECDHE_ECDSA_*</code> cipher suites are showing up in your dump since they are TLSv1.2 ciphers.</p>
"
"21335478","<p>You can try</p>

<pre><code>    for(Character c : s.toCharArray()){
        if(c.toString().toUpperCase().equals(c.toString())){
            System.out.println(""Upper case"");
        }
        else {
            System.out.println(""Lower case"");
        }
    }
</code></pre>

<p>So we convert String to character array, iterate over it and in each iteration we compare itself with it's the upper case to check what case is used.</p>

<p>and for finding number you can do something like below</p>

<pre><code>    for(Character c : s.toCharArray()){

        try{
            Integer.parseInt(c.toString());
            System.out.println(""Integer Identified"");
        }catch (NumberFormatException ex){
            System.out.println(""Not an integer"");
        }
    }
</code></pre>

<p>For number simply parse String using <code>Integer.parseInt()</code>. If it is able to successfully parse then it is a number or if exception is thrown then it is not a number.</p>
"
"21335550","<p>Since you haven't specified any plans for further processing the String, you can use something like this to find uppercase and digits:</p>

<pre><code>public class Extraction {

  public static void main(String[] args) {
    String test = ""This is a test containing S and 10"";
    for (char c : test.toCharArray()) {
        if (Character.isDigit(c)) {
            System.out.println(""Digit: "" + c);
        }
        else if (Character.isUpperCase(c)) {
            System.out.println(""Uppercase letter: "" + c);
        }
    }
  }
}
</code></pre>
"
"21344017","<p>This worked very well:</p>

<pre><code>import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JRadioButton;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import java.awt.*;

public class ConvertMatrix extends JFrame implements ActionListener{
    JLabel rows = new JLabel (""Numri i rreshtave""+'\n'); 
    JTextField inrows = new JTextField (5);
    JLabel columns = new JLabel (""Numri i kolonave eshte"");
    JTextField incolumns = new JTextField (5);
    JLabel matrix = new JLabel(""Matrica ka formen"");
    JTextField inmatrix = new JTextField(30);
    JButton mat = new JButton(""Afisho matricen"");
    JTextArea matric = new JTextArea(10,21);

    int x;
    int y; 
    double[][] matrica;

    public ConvertMatrix (){ 
        super (""Matrica e konvertuar"");
        setSize(300, 250);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setVisible(true);
        Container content = getContentPane();
        content.setLayout(new FlowLayout ());
        content.setBackground(Color.pink);
        content.add(rows);
        rows.setForeground(Color.blue);
        content.add(inrows);
        content.add(columns);
        columns.setForeground(Color.red);
        content.add(incolumns);
        content.add(matrix);
        content.add(inmatrix);
        matrix.setForeground(Color.gray );
        content.add(mat);

        content.add(matric);

        mat.addActionListener(this);   

        setContentPane(content);
    }

    public  void mbushMatricen(int x, int y){
       matrica = new double[x][y];
       for (int i =0; i&lt;x; i++){
       for (int j=0; j&lt;y; j++){
           matrica[i][j]=((double) Math.random()*10);       
       }
    }
}

public void actionPerformed(ActionEvent event){
    String rresht = inrows.getText();
    int rreshtii = Integer.parseInt(rresht);//kthimi i stringut ne integer
    String shtyll = incolumns.getText();
    int shtylle = Integer.parseInt(shtyll);
    mbushMatricen(rreshtii,shtylle);
    String matricaString = """";
        for(int i=0; i&lt;rreshtii; i++){
            for( int j=0; j&lt;shtylle; j++){
                matricaString += matrica[i][j] + ""  "";
            }
        matricaString += ""\n"";
        }
    matric.setText(matricaString);
}

    public static void main(String []args){
        ConvertMatrix m = new ConvertMatrix();
    }
}
</code></pre>
"
"21396969","<p>Activity will be received data from updateDetail() method in Fragment</p>

<pre><code>//// Activity 
public class RssfeedActivity extends Activity implements MyListFragment.OnItemSelectedListener {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_rssfeed);
        Button btn = (Button) findViewById(R.id.btn);
        btn.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                Log.d(""Annv - Fragment"", ""onClick here"");
            }
        });
    }

    // if the wizard generated an onCreateOptionsMenu you can delete
    // it, not needed for this tutorial

    @Override
    public void onRssItemSelected(String link) {
        //        DetailFragment fragment = (DetailFragment) getFragmentManager()
        //                .findFragmentById(R.id.detailFragment);
        //        if (fragment != null &amp;&amp; fragment.isInLayout()) {
        //          fragment.setText(link);
        //        } 
        //        Intent start = new Intent(this, RssfeedSecondActivity.class);
        //        startActivity(start);
        DetailFragment fragment = (DetailFragment) getFragmentManager()
                .findFragmentById(R.id.detailFragment);
        if (fragment != null &amp;&amp; fragment.isInLayout()) {
            fragment.setText(link);
        }
    }

}
</code></pre>



<pre><code>/// Fragment
public class MyListFragment extends Fragment {

    private OnItemSelectedListener listener;
    private OnItemStartActivityListener listenerStartAct;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
            Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_rsslist_overview,
                container, false);
        Button button = (Button) view.findViewById(R.id.button1);
        Log.d(""Annv - Fragment"", ""run on "" + getActivity().toString());
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                updateDetail();
            }
        });
        return view;
    }

    public interface OnItemSelectedListener {
        public void onRssItemSelected(String link);
    }

    public interface OnItemStartActivityListener {
        public void onRssStartActivity(String link);
    }

    @Override
    public void onAttach(Activity activity) {
        super.onAttach(activity);
        if (activity instanceof OnItemSelectedListener) {
            Log.d(""Annv - Fragment"", ""activity "" + activity.getLocalClassName());
            listener = (OnItemSelectedListener) activity;
        } else if (activity instanceof OnItemStartActivityListener) {
            Log.d(""Annv - Fragment"", ""activity "" + activity.getLocalClassName());
            listenerStartAct = (OnItemStartActivityListener) activity;
        } else {
            throw new ClassCastException(activity.toString()
                    + "" must implemenet MyListFragment.OnItemSelectedListener"");
        }
    }

    // May also be triggered from the Activity
    public void updateDetail() {
        // create fake data
        //        String newTime = String.valueOf(System.currentTimeMillis());
        //        // Send data to Activity
        //        listenerStartAct.onRssItemSelected(newTime);
        if (getActivity() instanceof OnItemSelectedListener) {
            listener.onRssItemSelected(""start start"");
        } else {
            String newTime = String.valueOf(System.currentTimeMillis());
            listenerStartAct.onRssStartActivity(newTime);
        }

    }

}
</code></pre>
"
"21448583","<p>Please try the following date formatter:</p>

<pre><code>import java.text.*;
SimpleDateFormat tmp = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"")
System.out.println(tmp.format(date));
</code></pre>
"
"21620685","<p>You can use <code>ClassName.this.finalize();</code></p>
"
"21634840","<p>Basically, Claudiu is right: CPU are very fast indeed.</p>

<p>But there is also another factor to consider: Actually <code>wait(1)</code> is <strong><em>always</em></strong> needed in non-blocking threads to allow other threads to continue. Because if there is no wait at all, the OS can't allocate resources to any other thread and they will starvate. On the other side, <code>wait(1)</code> <em>could</em> in reality cause a much longer wait depending how the OS allocates the resources. But that's up to the OS.</p>

<p>When programming, there are always 2 factors to consider:</p>

<p><em>1. the amount of cache/RAM, and</em></p>

<p><em>2. the time needed for a thread/process.</em></p>

<p>Therefore it's all about the <strong>amount of resources used PER TIME: MB/s</strong> (or in general: Bytes/s). You can't only make the right decisions based on the allocated resources as many programmers intend to do. It's even possible be that above non-blocking floop uses a lot less resources than a blocking one, because there is no synchronisation overhead. So never forget the time dimension.</p>

<p><em>Conclusion:</em> Faster, non-blocking programs (can) use less resources.</p>
"
"21705574","<p>The compiler needs to know the return value will match type T and it can't.
It will match if you pass Command as parameter but it may not if you pass Command since T will be defined to that other type.</p>

<p>You can cast it at runtime and it will throw ClassCastException if the object you are returning does not match T.</p>

<pre><code>public &lt;T extends Result&gt; T execute(Command&lt;T&gt; command, Class&lt;T&gt; type)
{

     return type.cast( new LoginResult() );
}
</code></pre>

<p>You would call it this way:</p>

<pre><code>Command&lt;LoginResult&gt; login = new Command&lt;&gt;();
LoginResult result = execute( login, LoginResult.class );
</code></pre>

<p>Note the redundant information here but it is needed since generics are lost in compilation.</p>
"
"21747695","<p>if string order does not matter for you, you can also use the TreeSet.. check the below code.. simple and sweet.</p>

<pre><code>import java.util.Arrays;
import java.util.List;
import java.util.TreeSet;

public class MyArrayDuplicates { 
    public static void main(String a[]){
        String[] strArr = {""one"",""two"",""three"",""four"",""four"",""five""};
        //convert string array to list
        List&lt;String&gt; tmpList = Arrays.asList(strArr);
        //create a treeset with the list, which eliminates duplicates
        TreeSet&lt;String&gt; unique = new TreeSet&lt;String&gt;(tmpList);
        System.out.println(unique);
        System.out.println();
        Iterator&lt;Integer&gt; iterator = unique.iterator();

       // Displaying the Tree set data
       while (iterator.hasNext()) {
           System.out.print(iterator.next() + "" "");
       }
    }
}
</code></pre>

<p>it will print as - </p>

<pre><code>[five, four, one, three, two]

five
four
one
three
two
</code></pre>
"
"21803932","<pre><code>if (opt==somve_integer_value_or_constraints){
///your code
}
</code></pre>
"
"21826243","<p>One way is to create POJO for your <code>today</code>, <code>week</code>, <code>month</code> and <code>result</code>. <code>result</code> class will include list of the all other three that is <code>today</code>, <code>week</code> and <code>month</code>.<br>
Create one master POJO that contain your <code>result</code> class object say <code>MyJson</code>.Now you can directly parse this JSON into your class and from the getter method you have list of <code>today</code>,<code>week</code> and <code>month</code> array.<br>
To parse you JSON string into class object :  </p>

<pre><code>ObjectMapper mapper = new ObjectMapper();
MyJson resultObj = mapper.readValue(str, MyJson.class);  
//get List of week  
List&lt;Week&gt; week =  resultObj.getResult().getWeek();    
</code></pre>

<p>Your POJO classes look like :<br>
<strong>MyJson.java</strong>  </p>

<pre><code>public class MyJson   
{
     private Result result;  
     //getter and setter method  
}  
</code></pre>

<p><strong>Result.java</strong>  </p>

<pre><code>public class Result   
{
    private List&lt;Today&gt; today;
    private List&lt;Month&gt; month;
    private List&lt;Week&gt; week;    
    //getter and setter method
}  
</code></pre>

<p><strong>Today.java</strong>    </p>

<pre><code>public class Today   
{
  private String date;  
  //other parameters and it's getter and setter method.  
}  
</code></pre>

<p><strong>Week.java</strong>  </p>

<pre><code>public class Week   
{
    private long ride_id;
    private double trip_average_speed;  
    //other parameters and it's getter and setter method.    
}   
</code></pre>

<p><strong>Month.java</strong>  </p>

<pre><code>public class Month   
{
   private String monthName;    
  //other parameters and it's getter and setter method.      
}  
</code></pre>
"
"21869812","<p>I suggest to use StringBuilder objects</p>

<pre><code>public void swap(StringBuilder name1, StringBuilder name2)
{
        StringBuilder temp = name1;
        name1 = name2;
        name2 = temp;
}
</code></pre>
"
"21912106","<p>I would suggest to use the regular expression.</p>

<pre><code>String value = ""string12asd"";
String intValue = value.replaceAll(""[^0-9]"", """");
String stringValue = value.replaceAll(""[0-9]"","""");
System.out.println(""int are: ""+intValue+"" \n string are: ""+stringValue);
</code></pre>

<p>Look at <a href=""http://www.regular-expressions.info/tutorial.html"" rel=""nofollow"">http://www.regular-expressions.info/tutorial.html</a> for more detail about regular expression.</p>
"
"21962188","<p>You appear to have been asked to return the index of the largest integer in the ArrayList.</p>

<p>So you will want to implement a method liek</p>

<pre><code>package com.snippet;
import java.util.ArrayList;
public class Largest {

public Largest() {
}

public int getIndexOfLargest(ArrayList&lt;Integer&gt; list) {
    int index;

    if (list == null) {
        index = -1;
    } else {
        index = 0;
        for (int i = 1; i &lt; list.size(); i++) {
            if (list.get(i) &gt; list.get(index)) {
                index = i;
            }
        }
    }
    return index;
}
</code></pre>

<p>}</p>
"
"21964086","<p>Try this</p>

<pre><code>#include&lt;cstdio&gt;
#include&lt;cstdlib&gt;

int gameBoard(){  // if you return something int type. yous should catch it in main

}


int main(){
    gameBoard();
    return 0;  // Must have if you use int main();
}
</code></pre>

<p>The method in c++ is called functions, and the structure / calling method is quite simiiar to java, you may want to look <code>namespace</code>, <code>class</code> of c++ as well.</p>
"
"21977514","<p>A simpler way to find even and odd values is to divide number by 2 and check the remainder:</p>

<pre><code>if(x % 2 == 0) // remainder is 0 when divided by 2
{
//even num
}
else
{
//odd num
}
</code></pre>
"
"22139493","<p><strong>INCORRECT. PLEASE DISREGARD</strong></p>

<p>You need to convert the string to an array.</p>

<pre><code>    s.ToCharArray();
</code></pre>

<p><strong>Note:</strong> this is c# code, I don't know if it is similar to java.</p>
"
"22172250","<p>Change your oncreate method like this</p>

<pre><code>protected void onCreate(Bundle savedInstanceState) {
  super.onCreate(savedInstanceState);
  setContentView(R.layout.activity_main);
  Button button = findViewById(R.id.button1);
  button.setOnClickLostener(new OnClickListener() {

        @Override
        public void onClick(View v) {
            // Call Activity you want to go to
            // or setContentView(&lt;Other layout to change&gt;) This needs to refresh all views use at your own risk
        }
    });
}
</code></pre>

<p>Add code to call new activity in onclick method</p>
"
"22216601","<p>Try this</p>

<pre><code>import java.util.Scanner;
</code></pre>

<p>public class MainClass {</p>

<pre><code>public static void main(String[] args) {


    Scanner scan = new Scanner(System.in);
    System.out.println(""Enter x1 for point A"");
    double x1 = scan.nextDouble();
    System.out.println(""Enter y1 for point A"");
    double y1 = scan.nextDouble();
    System.out.println(""Enter x2 for point A"");
    double x2 = scan.nextDouble();
    System.out.println(""Enter y2 for point A"");
    double y2 = scan.nextDouble();
    System.out.println(""Enter x3 for point A"");
    double x3 = scan.nextDouble();
    System.out.println(""Enter y3 for point A"");
    double y3 = scan.nextDouble();
    System.out.println(""Set up a Triangle with coordinates "" +""(""+x1+"",""+y1+"")""+ "",""+ ""(""+x2+"",""+y2+"")"" +"",""+ ""(""+x3+"",""+y3+"")"");

    Triangle triangle1 = new Triangle(x1,x2,y1,y2,x3,y3);
    System.out.println(""Length of side c "" + triangle1.getLengthC());

}
</code></pre>

<p>}</p>

<p>and </p>

<pre><code>import java.math.*;
import java.util.Scanner;

public class Triangle
{
private double A, B, C, D, h;
public double x1, x2, x3, y1, y2, y3;
public double lengthA, lengthB, lengthC;
private double angleA, angleB, angleC;
private double calcPerimeter, calcArea, getHeight;

//Create new Triangle
public Triangle(double x1,double x2,double y1,double y2,double x3, double y3){
    this.x1=x1;
    this.y1=y1;
    this.x2=x2;
    this.y2=y2;
    this.x3=x3;
    this.y3=y3;
}

//to get length of a (AB) use A = (x1, y1) &amp; B = (x2,y2)
public double getLengthC(){
double distance = Math.sqrt((Math.pow((x1-x2),2))+(Math.pow((y1-y2),2)));
System.out.println(distance);
return distance;
}
}
</code></pre>
"
"22222559","<p>Apache POI interprets your numerial cell values as double, in order to avoid this, try to set the cell type. Maybe this will help you:</p>

<p><code>for (int i = 1; i &lt;= iRowCount; i++) {
        Row resultRow = xssfResultSheet.getRow(i);
        resultRow.getCell(i).setCellType(Cell.CELL_TYPE_STRING);
        System.out.println(Integer.parseInt(resultRow.getCell(0).toString()));
    }</code></p>
"
"22253233","<p>Not really, no.  There is not a better way of expressing this.  ""With this I don't have check for null anywhere"" - well, it's too bad that checking nulls is a requirement.  I'm not sure why you have to check if null is equal to itself or if null is equal to the names of a Person, or why people have null instead of names.  That all seems like nonsense to me but you probably have a good reason.</p>

<p>You can't avoid repeating the accessors for firstName and lastName with less code than you've already written.  If you put the method on the Person class itself you should at least be able to avoid the ""get"" and ""()"" by using the private fields directly.  Here is some code that is no better than the code in your question:</p>

<pre><code>public static boolean areBothNullOrBothNonNullAndNamesEqual(Person a, Person b) {
  if (a == null || b == null) {
    return a == b;
  }
  return Objects.equals(a.firstName, b.firstName)
      &amp;&amp; Objects.equals(a.lastName, b.lastName);
}
</code></pre>
"
"22275308","<p>Sorting a 15GB file is not a usual task for a java program. I would recommend to delegate that task to a system tool (some kind of .exe tool or <code>sort</code> if you are using a unix system).</p>

<p>If you have to do it with java, than I would recommend to use a <code>RandomAccessFile</code>. You can use the <code>RandomAccessFile</code>'s pointer to move text passages around, without having to read the complete file into your memory.</p>

<p>For comparing Strings I would recommend to use String.compareTo().</p>
"
"22398465","<p>I created a custom adapter for my listview but still its not getting correct.</p>

<p>this is mycode</p>

<p>listview.setOnItemClickListener(new AdapterView.OnItemClickListener() {</p>

<pre><code>          @Override
          public void onItemClick(AdapterView&lt;?&gt; parent, View view,
              int position, long id) {
              final String item = (String) parent.getItemAtPosition(position); 
              view.setSelected(true);
              mSelectedItems = position;
                adapter.notifyDataSetChanged();
          }
          });


}

public class ListAdapter extends ArrayAdapter {

    Context mContext;

    public ListAdapter(Context mcontext, int resource, ArrayList item) {
        super(mcontext, resource, item);
        this.mContext=mContext;
    }


    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        View v = super.getView(position, convertView, parent);

        if (v == null) {
            LayoutInflater vi = (LayoutInflater)mContext
                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            v = vi.inflate(android.R.layout.simple_list_item_1, parent);


            if (position == mSelectedItems) {
                v.setBackgroundColor(Color.GREEN);
            }

        }
        return v;

    }
</code></pre>

<p>i really don't know whats wrong in this.please give assistance</p>

<p>it will be very handy if you can the correct code :D</p>
"
"22419416","<p>I think what you should have is something like that.</p>

<pre><code>public class Person
//Breed method here

public class Walker extends Person
//Walk method here

public class Talker extends Person
//Talk method here

public class Swimmer extends Person
//Swim, talk &amp; walk method here
</code></pre>

<p>But what you should really do is thinking about separation of concerns. Is there enough common points between each of these objects to use inheritance? Maybe not. </p>
"
"22419483","<pre><code>class person{
 //breed function
 }
 class walker extends person{
 //walk function
 }
 class talker extends person{
 //talk function
 }
class swimmer extends talker{     
//swim function
//walk function
}
</code></pre>
"
"22452147","<p>Remember to escape regex-specific characters such as <code>*+?</code> to <code>\\*\\+\\?</code>. Otherwise these will be used to determine the length of the matching sample. I.e. <code>?</code> means <code>occurs zero or one times</code>, <code>+</code> means <code>one or more times</code>, <code>*</code> means <code>any times (zero, one or more)</code>. </p>
"
"22514377","<p>In your for loop you increment counter by one </p>

<p>if you need only the odd numbers you should change </p>

<pre><code>for (counter = 1; counter &lt; maxNum; counter++)
</code></pre>

<p>to </p>

<pre><code>for (counter = 1; counter &lt;= maxNum; counter+=2)
</code></pre>

<p>and </p>

<pre><code>sum = counter + maxNum;                                 
</code></pre>

<p>to </p>

<pre><code>sum += counter;
</code></pre>
"
"22572327","<p>The issue is that <code>Files.lines()</code> and <code>List.stream()</code> use different implementations of <code>Spliterator</code>. A <code>Spliterator</code> is responsible for deciding how work is partitioned between cores in the parallel stream pipeline. The Spliterator for Files.lines() doesn't know the total number of lines (ie, it is unsized), and doesn't know how to evenly partition the work. Instead, it uses a rather brain-dead heuristic. It partitions the stream into sections that double with each split (until it hits some large limit). This is the reason you get 50% efficiency.</p>

<p>The <code>Spliterator</code> uses for <code>List.stream()</code> knows the total number of lines, and splits them evenly.</p>

<p><strong>Conclusion</strong>: Streams are garbage. Don't even bother learning them. Hopefully a third-party library will emerge that makes better use of the new lambda syntax.</p>
"
"22574211","<p>In Vector add, get, remove methods are synchronized. For Example </p>

<pre><code>719     public synchronized E get(int index) {
720         if (index &gt;= elementCount)
721             throw new ArrayIndexOutOfBoundsException(index);
722 
723         return elementData(index);
724     }
</code></pre>

<p>Every operation is synchronized which ensure the atomic operation on instance. Two or more Thread are trying to work on single Vector object, at a single point of time only one thread can get the access of instance lock which make this <code>thread-safe</code>.</p>
"
"22624029","<p>Although there are better ways to do this, the following fixes your code with minimal changes:</p>

<pre><code>String number;
Boolean binaryfail;
number Keyboard.nextline();

while (true)
{
    binaryfail = (number.length() != 8); // set ""fail"" flag to true if length is wrong

    for(int i = 0; i &lt; number.length() &amp;&amp; !binaryfail; i++) // loop - exit if fail
    {
        if (number.charAt(i) != 48 &amp;&amp; number.charAt(i) != 49) // &lt;&lt;&lt; note &amp;&amp; not ||
        {
            binaryfail = true; // this causes the for loop to stop
        }
    }

    if (binaryfail == true)
    {
        System.out.println(""The number you entered is not a binary number or 8 digits"");
        number=Keyboard.nextline();  // so try again...
    }
    else break; // got here: so no failure - must have found a good number
}

System.out.println(""Congratulations - "" + number + "" is an eight digit binary number"");
</code></pre>

<p>Note - I updated this from my original post; this now works...</p>
"
"22636425","<p>You have forgot to set the orientation of the <code>LinearLayout</code>.
Try adding this to the xml within <code>&lt;LinearLayout &gt;</code>:</p>

<pre><code>android:orientation=""vertical""
</code></pre>
"
"22670718","<p>Quick solution could be like</p>

<pre><code>testMethod(string ip){
    if(ip.length()==1){
        ip=ip.toUppercase();
    }
    For(int i=0;i&lt;ip.length()-1;i++){
        System.out.print(ip.charAt(i)+""""+ip.charAt(i));
    }
    if(ip.length()&gt;1){
        System. out. println();
        testMethod(ip.substring(1));
    }
}
</code></pre>

<p>Haven't tested it...  But should work fairly</p>
"
"22680324","<p>I dint work on Vaadin yet But I looked into the document. I found that the <code>Link</code> class internally extends <code>AbstractComponent</code> class which has many functions which you can override. like it has <code>addListener</code> function where you need to pass the <code>Component</code> listener as a parameter and can detect the click event and do whatever you want to. </p>

<p>For reference check <a href=""https://vaadin.com/api/7.1.11/com/vaadin/ui/Link.html"" rel=""nofollow""><strong>this</strong></a> </p>

<p>and <a href=""https://vaadin.com/api/7.1.11/com/vaadin/ui/AbstractComponent.html"" rel=""nofollow""><strong>this too</strong></a></p>

<p>Hope this will help :)</p>
"
"22714887","<p>Did you call <code>super.onCreate(savedInstanceState);</code> first ?</p>

<p>Then you have to call <code>setContentView(R.layout.yourlayout);</code>.</p>

<p>Why <code>bytesAvailable</code> is set to 3 and not 0 ?</p>

<p>Why <code>bytesAvailable = mmInStream.available();</code> is call twice ? Only one is enough !</p>

<p>Then are <code>mmInStream</code> and <code>text</code> ( !important! <code>text = (TextView) findViewById(R.id.thetextviewid);</code>) initialised somewhere ?</p>

<p>If all of these things are done, everything should be ok.</p>

<p>EDIT: at the end you <strong>have</strong> to call <code>text.postInvalidate();</code></p>
"
"22732091","<p>Try putting entire code in try-catch block and catch <strong>NullPointerException</strong> and write </p>

<p>e.printStackTrace(); </p>

<p>eg:</p>

<p>try{</p>

<pre><code>//your block of code
</code></pre>

<p>}catch(NullPointerException e){</p>

<pre><code>e.printStackTrace();
</code></pre>

<p>}</p>

<p>It would display the line number of the error code</p>
"
"22741217","<p>I am having a similar problem with my application. the nearest I have come is to set all components that reside on top to either component.setOpaque(false), or component.setBackground(new Color(255,255,255,0)). you could also try panel.setVisible(false) for the unused panels. 
its hard to offer up code with out the entire program but give this a whirl:</p>

<pre><code>Menu.setBackground(new Color(255,255,255,0);
</code></pre>
"
"22815176","<p>The best and secure way to create an array is the next one:</p>

<pre><code>List&lt;Object&gt; myList = new ArrayList&lt;Object&gt;(0);
</code></pre>

<p>So can can regenerate by this way the array each time you want. You don't need to set to null. By this way, the array is destroyed and regenerated in memory.</p>

<p>You can read more info in Oracle Java <a href=""http://docs.oracle.com/javase/8/docs/api/java/util/ArrayList.html"" rel=""nofollow"">documentation</a>:</p>
"
"22912353","<p>this is the problem with strictmode.. you can use this  </p>

<pre><code>StrictMode.ThreadPolicy policy = new StrictMode.
                ThreadPolicy.Builder().permitAll().build();
        StrictMode.setThreadPolicy(policy);
</code></pre>
"
"22937133","<p>A method can return a value or not.</p>

<pre><code>public void doSomthing(String text) {
   print text;
}
</code></pre>

<p>This don't return any value but executes and returns.</p>

<pre><code>public String doSomthing(String text) {
   return text;
}
</code></pre>

<p>This method returns the text.</p>

<p>You can't input a void.</p>
"
"23016926","<p>You don't required for your situation.</p>

<ol>
<li>if you are accessing the sharable data then you need to wrap by sych block.</li>
</ol>

<p>In your case, you are accessing the instance variable which is only accessible / visible to only one thread since you are in constructor.  You will call constructor , you are allocating the memory and end of method call returning unique pointer  to calling method so the pointer/instance is unique for the Thread.</p>

<p>Once the pointer received. if the pointer /object variable shared in multiple threads like this.</p>

<pre><code>Object obj = new Object();
Thread t1 = new Thread(new x(obj)); 
Thread t2 = new Thread(new x(obj));

Class x implements runnable{
 Object obj;
 x (Object obj){
   this.obj = obj;
 }

run() {
 // do some operation on Obj  -
}
}
</code></pre>

<p>}</p>

<p>in this case obj is shared across multiple threads , so your instance variable <code>x</code> subject for race condition. So you have make sure to wrap in other methods. </p>

<p>Thats why vector constructor is not having sycn block but other method does.</p>

<p>Assume you have one static variable in this class . then it is required to wrap by sync block since it is accessible to any one. </p>
"
"23038273","<p>in general code like:</p>

<pre><code>car1 = ""blue"";
car2 = ""red"";
car3 = ""green"";
</code></pre>

<p>is 99% of the time better expressed as an array</p>

<pre><code>cars = [""blue"", ""red"", ""green""]
</code></pre>

<p>In Java arrays are of fixed length when you initialize them, so you could just make a big one or you could use an ArrayList as an above commenter mentioned which is a list-structure that allows for one by one additions.</p>
"
"23120635","<p>You are seeing correct behavior. The java.util.Date object has both a date portion and a time portion. The object has no time zone yet its <code>toString</code> method confusingly applies the JVM's default time zone when generating the string.</p>

<p>The java.util.Date and .Calendar classes bundled with Java are notoriously troublesome. Avoid them. Use a decent date-time library. For Java, that means either <a href=""http://www.joda.org/joda-time/"" rel=""nofollow"">Joda-Time</a> or the new java.time package in Java 8 (inspired by Joda-Time, defined by JSR 310).</p>

<p>Joda-Time offers a LocalDate class if you are certain you do not need time or time zone. Caution: Naïve programmers often think they have no need for time or time zone but later regret that decision.</p>

<p>Example code using Joda-Time 2.3.</p>

<pre><code>String startInput = ""02/20/2012"";
String stopInput = ""03/20/2012"";
DateTimeFormatter formatter = DateTimeFormat.forPattern( ""MM/dd/yyyy"" );

LocalDate start = formatter.parseLocalDate( startInput );
LocalDate stop = formatter.parseLocalDate( stopInput );
boolean isStopAfterStart = stop.isAfter( start );
</code></pre>

<p>Dump to console…</p>

<pre><code>System.out.println( ""start: "" + start );
System.out.println( ""stop: "" + stop );
System.out.println( ""isStopAfterStart: "" + isStopAfterStart );
</code></pre>

<p>When run…</p>

<pre class=""lang-none prettyprint-override""><code>start: 2012-02-20
stop: 2012-03-20
isStopAfterStart: true
</code></pre>
"
"23125980","<p>You should this method <a href=""http://www.tutorialspoint.com/java/util/collections_min_comparator.htm"" rel=""nofollow"">http://www.tutorialspoint.com/java/util/collections_min_comparator.htm</a> and provide a comparator :</p>

<pre><code>import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;

public abstract class Shape {
    public abstract double getVolume();

    public Shape min(Collection&lt;? extends Shape&gt; col) {
        return Collections.min(col, new Comparator&lt;Shape&gt; () {
            public int compare(Shape l, Shape r) {
                return ((Double) l.getVolume()).compareTo(r.getVolume());
            }
        });
    }
}
</code></pre>
"
"23130746","<p>In both cases you seem to be attempting to create an anonymous class that implements the interface. But you need <code>{}</code> for doing that. Otherwise, it is not legal. Please note that you cannot instantiate an <code>interface</code></p>
"
"23144660","<p>Here's a short-ish way to do it. But hey, I don't know the specifics of what you're building and whether this works for you.</p>

<pre><code>try {
    String firstDomain = book.getBookImages().getDomains().getDefaults().getDomain().get(0);
    // operate on firstDomain
} catch (NullPointerException e) {
    throw new IncompleteBookException(""The book was incompletely attributed."");
} catch (IndexOutOfBoundsException e) {
    throw new IncompleteBookException(""The book was incompletely attributed."");
}
</code></pre>

<p>I've heard that people are concerned with the performance of something like this, because the VM will have to fill in a stack trace for the <code>NullPointerException</code>. In this case, you'll already be doing a comparable operation for the <code>IncompleteBookException</code> anyway.</p>
"
"23161615","<p>Actually, don't put the <code>com.fasterxml.jackson</code> dependencies  but just the <code>org.codehaus.jackson</code> dependencies.</p>

<p>The correct ObjectMapper is  <code>org.codehaus.jackson.map.ObjectMapper</code></p>
"
"23238107","<p>What about <code>June 2009</code> as you can not say its a date you need to make it a <code>date</code> by adding a day in this <code>month-year</code> format. Ex.. add first day of month here and make it <code>1 June 2009</code> then parse it in desired format.</p>

<pre><code>import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

   public class Test {

      public static void main(String[] args) throws IOException, ParseException 
      { 
          String dateStr = ""28 June 2009"";
          SimpleDateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd hh:mm:ss"");
          System.out.println(sdf.format(new Date(dateStr)));
      }
   }
</code></pre>
"
"23283689","<pre><code>char[][] temp = 2dArray[i-1][j];
</code></pre>

<p>Your IDE doesn't like you (120%) when you put a char/int/... (per first response) into a two dimension char array.</p>
"
"23283767","<pre><code>for(int i=0;i&lt;2dArray.length-2;i++){
    for(int j=0;j&lt;2dArray[i].length-1;j++){
            if(2dArray[i][j]&gt;2dArray[i+1][j]){
                int temp=2dArray[i][j];
                2dArray[i][j]=2dArray[i+1][j];
                2dArray[i+1][j]=temp;
            }
    }
}
</code></pre>
"
"23379577","<p>use <strong>contains method</strong><br/></p>

<pre><code>boolean isPresent(String word, String sentence)
{
return sentence.contains(word);   
}
</code></pre>

<p>EDIT:
    if you want to search for a pariticular word then you can add space befaore and after the word string<br/>
    word = "" "" + word + "" "";</p>
"
"23457959","<p>Consider calling <code>pack()</code> method</p>

<p>Below is the complete code I experimented with:</p>

<pre><code>import java.awt.FlowLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;

public class Test {

    public static void main(String[] args) {
        final JFrame frame = new JFrame();
        frame.setLayout(new FlowLayout());

        final JCheckBox chckbxNewCheckBox_1 = new JCheckBox(""New Folder"");
        final JPanel panel_3 = new JPanel();
        frame.add(panel_3);

        panel_3.add(chckbxNewCheckBox_1);

        final JTextField textField_3 = new JTextField();
        panel_3.add(textField_3);

        textField_3.setColumns(20);
        textField_3.setVisible(false); //if a comment it in.. it never becomes visible

        chckbxNewCheckBox_1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent arg0) {
                if (chckbxNewCheckBox_1.isSelected()) {
                    textField_3.setVisible(true);
                } else
                    textField_3.setVisible(false);

                frame.pack();
            }
        });

        frame.pack();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
    }

}
</code></pre>
"
"23468419","<p>At the compile time the compiler searches the class <code>One</code> for the method <code>doThing(Two t)</code> but since there isn't a method with that signature it starts widening its search and finds <code>doThing(One o)</code>. Then it holds the binary file with the descriptor <code>one parameter whose type is One : void</code>. At runtime since the object invoking the method is of type <code>Two</code>, in class <code>Two</code> it looks for the method that matches the descriptor and doesn't search for the method <code>doThing</code> that accepts an object of <code>Two</code> as it considers the descriptor in the binary file it links the call to the method <code>doThing(One o)</code>.</p>

<p>the java specs was of great help explaining this. <a href=""http://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.12.2"" rel=""nofollow""><strong>here</strong></a> is the link</p>
"
"23494693","<p>Set the maximum height through the LinearLayout property <code>layout_height</code></p>

<p>and set the background property to <code>@color/transparent</code></p>

<pre><code>                &lt;LinearLayout
                android:orientation=""horizontal""
                android:layout_width=""fill_parent""
                android:layout_height=""150dp""
                android:background=""@color/transparent""
                android:gravity=""center""
                &gt;

                &lt;ScrollView
                    android:layout_width=""wrap_content""
                    android:layout_height=""wrap_content""
                    /&gt;
            &lt;/LinearLayout&gt;
</code></pre>

<p>hope it helps</p>
"
"23508310","<pre><code>public final class JarResource
{
private String jarFileName;
private Map&lt;String, Long&gt; hashSizes = new HashMap&lt;String, Long&gt;();
private Map&lt;String, Object&gt; hashJarContents = new HashMap&lt;String, Object&gt;();

public JarResource(String jarFileName) throws Exception
{
    this.jarFileName = jarFileName;
    ZipFile zipFile = new ZipFile(this.jarFileName);

    Enumeration&lt;ZipEntry&gt; e = (Enumeration&lt;ZipEntry&gt;) zipFile.entries();
    while (e.hasMoreElements())
    {
        ZipEntry zipEntry = e.nextElement();
        if(!zipEntry.isDirectory())
        {
            hashSizes.put(getSimpleName(zipEntry.getName()), zipEntry.getSize());
        }
    }
    zipFile.close();

    // extract resources and put them into the hashMap.
    FileInputStream fis = new FileInputStream(jarFileName);
    BufferedInputStream bis = new BufferedInputStream(fis);
    ZipInputStream zis = new ZipInputStream(bis);
    ZipEntry ze = null;

    while ((ze = zis.getNextEntry()) != null)
    {
        if (ze.isDirectory())
        {
            continue;
        }
        else
        {
            long size = (int) ze.getSize();
            // -1 means unknown size.
            if (size == -1)
            {
                size = hashSizes.get(ze.getName());
            }

            byte[] b = new byte[(int) size];
            int rb = 0;
            int chunk = 0;
            while (((int) size - rb) &gt; 0)
            {
                chunk = zis.read(b, rb, (int) size - rb);
                if (chunk == -1)
                {
                    break;
                }
                rb += chunk;
            }

            hashJarContents.put(ze.getName(), b);
        }
    }
    zis.close();
}

public byte[] getResource(String name)
{
    return (byte[]) hashJarContents.get(name);
}

private String getSimpleName(String entryName)
{
    // Remove "".jar"" extension
    int index = entryName.indexOf(""/"");
    String fileNameWithoutExt = entryName.substring(index, entryName.length());

    return fileNameWithoutExt;
}
}
</code></pre>

<p>Then use this class to load your resource:</p>

<pre><code>public static void main(String[] args) throws Exception
{
    JarResource jr = new JarResource(""/home/mjiang/Downloads/solr-4.8.0/dist/solr-cell-4.8.0-test.jar"");
    byte[] resource = jr.getResource(""/META-INF/NOTICE.txt"");

    InputStream input = new ByteInputStream(resource, resource.length);

    BufferedReader dis = new BufferedReader(new InputStreamReader(input));

    String line = """";
    while((line = dis.readLine()) != null)
    {
        System.out.println(line);
    }

    dis.close();
}
</code></pre>
"
"23513705","<p><strong>In Java</strong>, where there is no operator overloading, there is no difference between <code>(p!=q)</code> and <code>!(p==q)</code>. <strong>In Java all operators are strictly defined. They follow the mathematical logic rules to the letter.</strong></p>

<p>However, in languages with operator overloading, like <code>C++</code>, these may not be equivalent, since the operators <code>!</code> and <code>!=</code> may be defined to do something which does not follow the rules of mathematical logic. </p>

<p>These would be translated to:</p>

<pre><code>(p!=q)  :   p.operator!=(q)
!(p==q) : ! p.operator==(q)
</code></pre>

<p>Notice the <code>!</code> operator is applied to a bool variable, not an object.</p>
"
"23522927","<p>The simple way, is to use org.apache.commons.io.FileUtils</p>

<pre><code>FileUtils.readLines(new File(""path""));
</code></pre>
"
"23602357","<pre><code>public static boolean isAnagram(String str1, String str2) {
    if( str1.length() != str2.length() ) return false;
    int str1Tot = 0;
    int str2Tot = 0;
    for( int i = 0 ; i &lt; str1.length() ; i++) {
        str1Tot += str1.codePointAt(i);
        str2Tot += str2.codePointAt(i);
    }
    if( str1Tot == str2Tot ) return true;
    else return false;      
}
</code></pre>
"
"23644816","<p>Since you're using an else clause, you don't have to check against 33 twice:</p>

<pre><code>if (i &lt;= 33) {
    variable = x;
} else if (i &lt;= 66) {
    variable = y;
} else {
    variable = z;
}
</code></pre>
"
"23667295","<p>You could make an array with length 0:</p>

<pre><code>public void getData(int[] array1, int[] array2)  {
   array1 = new int[5];
   array2 = new int[5];
}
public void main(String[] args)  {
   int[] array1 = new int[0];
   int[] array2 = new int[0];
getData(array1, array2); 
}
// fill array1 and array2 with data
</code></pre>
"
"23799783","<pre><code>public class Arraytest1 {

    public static void main(String[] args) {
        int i, j, k = 0;
        int test[][] = new int[4][5];
        for (i = 0; i &lt; 4; i++) {
            for (j = 0; j &lt; 5; j++) {
                test[i][j] = k;
                k++;
           }
        }
        for (i = 0; i &lt; 4; i++) {
            for (j = 0; j &lt; 5; j++) {
                System.out.print(test[i][j] + "" "");
                System.out.println();
            }
        }
    }

}
</code></pre>

<p>you can resolve this problem</p>
"
"23822661","<p>There's a regular expressions for finding space, now just replace it </p>

<pre><code>/\s+/
</code></pre>
"
"23844069","<p>The value of english.lenght is always 10. As in this example:</p>

<pre><code>int[] english = new int [10];
</code></pre>

<p>It doesn't matter what data the english array holds, its lenght is always 10.
In order to do the proper calculation use the data, not the lenght of the array.</p>
"
"23993893","<p>Your have to wrap your values in the SQL Statement with single quotes like this:</p>

<pre><code>enter sql = ""insert into employee values('"" + id + ""','"" +  fName + ""'...)""
</code></pre>
"
"23993952","<p>for insert (for all DML ) you have to use <a href=""http://docs.oracle.com/javase/7/docs/api/java/sql/Statement.html#executeUpdate%28java.lang.String%29"" rel=""nofollow""><code>executeUpdate()</code></a> method .</p>
"
"23994000","<p>you forgot the single quote mark for varchar columns. Use it like this </p>

<pre><code>sql = ""insert into employee values("" + id + "",'"" +  fName + ""','"" +  lName + ""',"" +  age + "")"";
</code></pre>
"
"24115246","<ul>
<li><p><strong><code>int</code> is a primitive type.</strong><br><br>
Way of declaration: <code>int a = 5;</code></p></li>
<li><p><strong><code>Integer</code> is a wrapper class</strong> (it extends Object).<br><br>
Way of declaration: <code>Integer a = new Integer(5);</code></p></li>
</ul>

<hr>

<p>When you write</p>

<pre><code>Integer a = 5;
</code></pre>

<p>compiler automatically converts it to</p>

<pre><code>Integer a = new Integer(5);
</code></pre>

<p><strong>This feature is called Autoboxing</strong> <em>(since Java 5.0)</em></p>

<hr>

<ul>
<li><code>int</code> can not be casted to <code>Object</code> as it is not a referenced data type (object) at all.</li>
<li>But it can be casted to other primitive types.</li>
<li>On the other hand, <code>Integer</code> can be casted to <code>Object</code>.</li>
</ul>

<hr>

<p>When you write</p>

<pre><code>Object ans = (Integer) a;
</code></pre>

<p>compiler does autoboxing and then casts it.</p>

<pre><code>Object ans = (int) a;
</code></pre>

<p>gives a compiler error because the cast to <code>int</code> is successful, but it can not be assigned to an <code>Object</code> reference.</p>

<p>Hope this helps.<br>
Good luck.</p>
"
"24186731","<p>deviceID[i] just gets the i'th element in deviceID and does nothing with it.</p>

<p>deviceID = deviceID[i] is trying to assign an int to an object declared as a list, hence your error.</p>

<p>What you want to do is:  </p>

<pre><code>    List&lt;int&gt; deviceID = new List&lt;int&gt;()
    for(int i = 292; i &lt;= 305; i++)
    {
        deviceID.add(i);
    }
</code></pre>

<p>This should give you a list with only the numbers 292-305 in it</p>
"
"24285937","<p>Meanwhile I found this page about Wildcard-Capture: <a href=""http://docs.oracle.com/javase/tutorial/java/generics/capture.html"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/java/generics/capture.html</a></p>

<p>As I understand it the problem is that the compile generates different types</p>

<ul>
<li>for the local variable: <code>Pair&lt;String,List&lt;? extends TestType&gt;&gt;</code></li>
<li>and the return value: <code>Pair&lt;String,List&lt;capture#3-of ? extends TestType&gt;&gt;</code>.</li>
</ul>

<p>The ""fix"" for this Problem while keeping the original method signature is to parametrize the calling method with <code>&lt;T extends TestType&gt;</code>. For the example it looks like this:</p>

<pre><code>public class Test {

    static class TestType {}

    static class Pair&lt;A,B&gt;{}

    public static &lt;T extends TestType&gt; void main( String [] args ) throws Exception {

        Collection&lt;T&gt; val = null;

        List&lt;T&gt; single = testSingle( val ); // OK

        Pair&lt;String,List&lt;T&gt;&gt; pair = testPair( val ); // OK

    }

    static &lt;T extends TestType&gt; List&lt;T&gt; testSingle( Collection&lt;T&gt; val ){
        return null;
    }

    static &lt;T extends TestType&gt; Pair&lt;String,List&lt;T&gt;&gt; testPair( Collection&lt;T&gt; val ){
        return null;
    }

}
</code></pre>

<p><em>(this is my first time to write main like this :)</em></p>

<p>This <em>forces</em> the compiler to use the exacly same type for the variable and the method's return type.</p>

<p>I still feel that the generics are somehow 'buggy' and unpredictable in this regard.</p>
"
"24301933","<pre><code>java.lang.ArrayIndexOutOfBoundsException: 0 if your result set goes beyond 25 itteration.
</code></pre>

<p><strong>How to convert <code>array</code> to <code>ArrayList</code> ?</strong></p>

<pre><code>Arrays.asList(myArray)
</code></pre>

<p>in your case you can have a <code>list</code> and in the <code>resulset</code> itteration you can add them to the list like</p>

<pre><code>List&lt;String&gt; emails = new ArrayList&lt;String&gt;();
while(...){
emails.add(rs.getString(""EmailAddress""));
}
</code></pre>
"
"24305902","<pre><code>public class job
{
    private static int jobID;
    private String name;
    private boolean isFilled;

    public Job(String title){
        name = title;
        isFilled = false;

        synchronized {
            jobID = jobID + 1;
        } 
}
</code></pre>
"
"24335890","<p>I would use the <code>synchronized</code> feature</p>

<pre><code>Class A 
{
    // make the variables private so that they cannot be access directly from outside of the class
    private ArrayList&lt;SomeTypeB&gt; typeBList;
    private ArrayList&lt;SomeTypeC&gt; typeCList;

    // more member variables

    //Getters and setters for typeBList;
    public synchronized void updateTypeBList(Object obj){
        // do something with typeBList
    }

    //Getters and setters for typeCList;
    public synchronized void updateTypeCList(Object obj){
        // do something with typeCList
    }
}
</code></pre>

<p>By doing so, the typeBList and typeCList will not be updated at the same time</p>

<p>More info about Java <a href=""http://docs.oracle.com/javase/tutorial/essential/concurrency/syncmeth.html"" rel=""nofollow"">Synchronized Methods</a></p>
"
"24343182","<p><code>(age&lt;5)</code> returns boolean but the case statement accepts int.</p>

<p>try something like:</p>

<pre><code>switch(age){

                  case 4:
                      System.out.println(""Are you learning how to tie your shoes?"");

                  case 5:
                      System.out.println(""You know how to tie your shoes!"");

                  case 6:
                      System.out.println(""YOU BETTER KNOW HOW TO TIE YOUR SHOES!"");
           }
</code></pre>

<p>or</p>

<pre><code>          if(age&lt;5)
              System.out.println(""Are you learning how to tie your shoes?"");

          if(age==5)
              System.out.println(""You know how to tie your shoes!"");

          if(age&gt;5)
              System.out.println(""YOU BETTER KNOW HOW TO TIE YOUR SHOES!"");
</code></pre>

<p>Hope it helps</p>
"
"24422089","<pre><code>public static void getWord(String str1, ArrayList&lt;String&gt; list)
{
    for(int i = 0; i &lt; list.size(); i++)
    {
        if(str1.toLowerCase().contains(list.get(i)))
        {
            System.out.println(list.get(i));
        }
    }

}
</code></pre>
"
"24430804","<p>Since you have two different textviews, and if you will always show values to these textviews in the same order then start from the first textview and add:</p>

<pre><code>cuisine_name.setText(cuisine + "", "");
price_category.setText(priceCategory + "", "");
anotherTextview.setText(somethingHere);
</code></pre>

<p>(and here on the last one simply dont put a comma)</p>

<p>Now if you have 1 textview to show all values then insert manually a comma inbetween the values: </p>

<pre><code>aTextView.setText(cuisine + "", "" + priceCategory + "", "" + somethingHere);
</code></pre>
"
"24436528","<p>You cannot put method code inside a method code but tbraun89 to solve your problem: you shall build total 5 methods inside this class but outside main method. 4 methods to draw parts of the flower and then one method name it drawMyFlower(…) with as many parameters you want to use inside all those four methods so you can pass them in all those 4 methods to draw your flower from that single method.</p>

<p><code>public static void main (String[] args){</code>
 <code>drawMyFlower(turtle,t1,x,y,z) }</code></p>

<p>Remember all those 5 methods shall be static since we can not call non-static method from a static method in Java. </p>
"
"24478372","<p>You can also try the following</p>

<p><code>WEB-INF</code> flolder in generally where runtime libraries and class go. Create <code>view</code> folder inside <code>Webcontent</code> folder and provide path as</p>

<pre><code>&lt;property name=""prefix"" value=""/view/""/&gt;
</code></pre>

<p><code>Wecontent</code> is your root folder for all the resources you want to expose. Reason was doing above is that as Webcontent is the root folder to expose web resources directories inside it can be specified relative to this. So Any resource <code>abc</code> under folder <code>xyz</code> can be accessed using <code>/abc/xyz</code>.</p>
"
"24478548","<p>2 possible things:</p>

<p>Did you try putting the request mapping at the method level instead of at the Controller level?</p>

<pre><code>@Controller
public class AController {

    @RequestMapping(value = ""/"", method = RequestMethod.GET)
    public String welcome() {
        return ""index"";
    }
}
</code></pre>

<p>Try adding the below to your grun-servlet.xml:</p>

<pre><code>&lt;context:annotation-config /&gt;
&lt;context:component-scan base-package=""com.xxx.yyy"" /&gt;
</code></pre>

<p>where ""com.xxx.yyy"" is the base package to which your AController belongs to.</p>
"
"24491128","<p>You're much better off returning just a plain old List, or better yet, a Collection, like this:</p>

<pre><code>// after: method returns a Collection reference
private Collection getList()
{
  Collection list = new LinkedList();
  list.add(""Hello"");
  list.add(""world"");
  return list;
}
</code></pre>
"
"24564640","<p>When you do this:</p>

<pre><code>x = x++;
</code></pre>

<p>It actually is translated to ""Assign 'x' to 'x' and then increment 'x' by one"".</p>

<p>Whereas in this case:</p>

<pre><code>x = ++x;
</code></pre>

<p>It gets translated to ""Increment 'x' by one, then assign it to 'x'"".</p>
"
"24679464","<p>I would probably have 2 methods, one to return a <code>Collection</code> and one to return the collection as a <code>Stream</code>.</p>

<pre><code>class Team
{
    private List&lt;Player&gt; players = new ArrayList&lt;&gt;();

// ...

    public List&lt;Player&gt; getPlayers()
    {
        return Collections.unmodifiableList(players);
    }

    public Stream&lt;Player&gt; getPlayerStream()
    {
        return players.stream();
    }

}
</code></pre>

<p>This is the best of both worlds.  The client can choose if they want the List or the Stream and they don't have to do the extra object creation of making an immutable copy of the list just to get a Stream.</p>

<p>This also only adds 1 more method to your API so you don't have too many methods</p>
"
"24722411","<p>Welcome to the Java World!</p>

<p>In your program you are making a small mistake by calling the equals on a Scanner object.
Also remember to close the close-able scanner resource once you are done with it.</p>

<p>Please refer the code below.</p>

<pre><code>import java.util.Scanner;
</code></pre>

<p>public class Password {</p>

<pre><code>private static final String Fish = ""Fish"";

public static void main(String args[]) {
    Scanner scan = new Scanner(System.in);

    System.out.println(""What is the password? "");

    if (scan.nextLine().equals(Fish)) {
        System.out.println(""You pass!"");
    }
    else {
        System.out.println(""You're wrong!"");
    }

}
</code></pre>

<p>}</p>
"
"24735181","<p><code>Integer</code> is an object.  <code>int</code> is not an object, it is a primitive.  The object <code>Integer</code> wraps the primitive <code>int</code>.  The <code>put(Object, Object)</code> method requires two objects, not a primitive and an object.</p>
"
"24737837","<p>According to my tests, this seems to be working fine.</p>

<pre><code>public class Demo
{
    public void function()
    {
        Concurrency c = new Concurrency(this);
        Thread t1 = new Thread(c);
        t1.setName(""t1"");
        Thread t2 = new Thread(c);
        t2.setName(""t2"");
        Thread t3 = new Thread(c);
        t3.setName(""t3"");
        Thread t4 = new Thread(c);
        t4.setName(""t4"");

        t1.start();
        t2.start();
        t3.start();
        t4.start();
    }

    public static void main(String[] args)
    {
        Demo demo = new Demo(); //made instance of Demo class
        demo.function();
    }

    static class Concurrency implements Runnable
    {
        private String value = new String(""I"");
        static volatile Integer s = 2; //made integer 'volatile'

        private Demo demo;

        public Concurrency(Demo demo)
        {
            this.demo = demo; //gets the variable of Demo
        }

        @Override
        public void run()
        {
            function();
        }

        public void function()
        {
            synchronized (demo) //use obtained Demo instance as sync object
            {
                s = s * 5;
                System.out.println(""Current thread is "" + Thread.currentThread() + s);
                // s.notify(); //I think this needs a wait() call in the same monitor first to work
            }
        }
    }
}
</code></pre>

<p>While the order is not determined, the output is in this fashion:</p>

<pre><code>Current thread is Thread[t2,5,main]10
Current thread is Thread[t3,5,main]50
Current thread is Thread[t1,5,main]250
Current thread is Thread[t4,5,main]1250
</code></pre>
"
"24777765","<p>Change content type to </p>

<pre><code>response.setContentType(""application/pdf"");
</code></pre>
"
"24781371","<p>This should work... (haven't compiled so not 100% sure).  I know it isn't &lt; 5 lines but it should work correctly.  Can try to shorten it after that.</p>

<pre><code>for(int i=0; i &lt; s1.length(); i++)
{
    if(s2.length()-1 &lt; i)
      return -1;
    if(s1.charAt(i) &gt; s2.charAt(i))
      return -1;
    if(s1.charAt(i) &lt; s2.charAt(i))
      return 1;
}
if(s2.length() &gt; s1.length())
  return 1;
return 0;
</code></pre>
"
"24795834","<p>Simply make your while loop as:</p>

<pre><code>} while ( choice!=0 );(The Wrong one)
</code></pre>

<p>Correction:</p>

<pre><code>} while(choice!=0 &amp;&amp; choice&lt;=5)
</code></pre>
"
"24831290","<p>Well your organization of your code needs a little bit of work. </p>

<p>First I would take this whole block of code outside file read in <code>while</code> loop.</p>

<pre><code>for (int i=0; i &lt; wordsInLine.length(); i++)
{
   char c = word.charAt(i);
   int j = (int) c;
   total += c;
 }
</code></pre>

<p>Why? Lets split what you are doing into two steps. Read in all the <code>words</code> into the <code>word</code> list. After doing this you will find where your core root of the problem is. You aren't reading the words from your <code>word</code> list at all.</p>

<p><strong>Further code cleanup</strong></p>

<pre><code>for(int i=0, isize = wordsInLine.length; i &lt; isize; i++){
</code></pre>

<p>This line is a little bit bloated. You don't need isize at all you are essentially doing denoting it for no reason. (Well actually caching the length does improve efficiency, another talk for another day). Cleaning up.</p>

<pre><code>for(int i=0, ; i &lt; wordsInLine.length; i++){
</code></pre>

<p>Then fixing the entire project</p>

<pre><code>//import list of words 
BufferedReader File = new BufferedReader(new FileReader(LOC)); 

//Create a temporary ArrayList to store data
ArrayList&lt;String&gt; words = new ArrayList&lt;String&gt;();

//Find number of lines in txt file
String line;
String delimiter = ""\t"";
// adds all the words into the list.
while ((line = File.readLine()) != null)
{
    String[] wordsInLine = line.split(delimiter);
    for(int i=0, ; i &lt; wordsInLine.length; i++){
       // compute alg and store the value some how to the word.
        words.add(wordsInLine[i])
    }
}

// notice outside the while loop.
// .size() is used for lists and .length is used for arrays.
for(int i = 0; i &lt; words.size(); i++){
   // compare
}
</code></pre>
"
"24850005","<p>You can use something like this:</p>

<pre><code>private int[] indexRange(Number idx_max, Number size) {
   // your code goes here.
}
</code></pre>

<p>Primitives double, float, int correspond to <code>Double</code>, <code>Float</code> and <code>Integer</code> wrapper classes respectively. And these classes extend from <code>Number</code> class. So your primitive parameters will first be auto-boxed, then they will be processed as Number instances.</p>
"
"24969412","<p>When we go to the interview they asking the this logical type of question. i to met the same problem. but i couldn't able to success the interview because this type of questions. Later i found the result of my own after i search in in the internet. Friends who are all want to do this.. </p>

<p>follow this operation. i will give this full of free.</p>

<h1>I will enter the equation as string Like.</h1>

<p>a*b*c+d/m-x.</p>

<p>get this equation as string object. and use following functions.#</p>

<pre><code>public void calc() throws IOException
{
    String equation,store,get;

    StringBuilder sb= new StringBuilder();
    DataInputStream dis= new DataInputStream(System.in);
    System.out.println(""Enter the equation"");
    equation= dis.readLine();
    equation=""%""+equation+""%"";
    byte[] buf= equation.getBytes();
    for(int i=0;i&lt;equation.length();i++)
    {
        if(buf[i]&gt;=97&amp;&amp;buf[i]&lt;=122)
        {
            System.out.println(""Enter the value for ""+(char)buf[i]);
            get=dis.readLine();
            sb.append(get);
        }
        else
            sb.append((char)buf[i]);
    }
    store= sb.toString();

    char[] buf1= new char[25];

    for(int i=0;i&lt;store.length();i++)
    {
        buf1[i]=store.charAt(i);          
    }
    for(int i=0;i&lt;buf1.length;i++)
    {
        no.append(buf1[i]);
    }
    System.out.println(no.toString());
    int m,n=0;
    for(int i=0;i&lt;no.length()-1;i++)
    {
        if('/'==no.charAt(i))
        {
            leftCount=rightCount=0;
            m=findLeftValue(i-1) / findRightValue(i+1);
            no.replace(i-leftCount, i+rightCount+1, String.valueOf(m));
            i=0;  
        }          
   }


    for(int i=0;i&lt;no.length()-1;i++)
    {
        if('*'==no.charAt(i))
        {
            leftCount=rightCount=0;
            m=findLeftValue(i-1) * findRightValue(i+1);
            no.replace(i-leftCount, i+rightCount+1, String.valueOf(m));
            i=0;  
        }          
   }
    for(int i=0;i&lt;no.length()-1;i++)
    {
        if('+'==no.charAt(i))
        {
            leftCount=rightCount=0;
            m=findLeftValue(i-1) + findRightValue(i+1);
            no.replace(i-leftCount, i+rightCount+1, String.valueOf(m));
            i=0;  
        }          
   } 
     for(int i=0;i&lt;no.length()-1;i++)
    {
        if('-'==no.charAt(i))
        {
            leftCount=rightCount=0;
            m=findLeftValue(i-1) - findRightValue(i+1);
            no.replace(i-leftCount, i+rightCount+1, String.valueOf(m));
            i=0;                 
        }          
   }
    for(int i=0;i&lt;no.length();i++)
    {
        if('%'==no.charAt(i))
        {
            no.deleteCharAt(i);
            i=0;
        }
    }
    System.out.println(no.toString());



}
public int findLeftValue(int i)
{
    StringBuilder sb= new StringBuilder();
    int x=0;
    while(no.charAt(i)!='*'&amp;&amp;no.charAt(i)!='+'&amp;&amp;no.charAt(i)!='-'&amp;&amp;no.charAt(i)!='/' &amp;&amp;no.charAt(i)!='%')
    {
          leftCount++;
          sb.insert(0, no.charAt(i));
          i--;
    }          
     x=Integer.parseInt(sb.toString());
    return x;
}
 public int findRightValue(int i)
{
    StringBuilder sb= new StringBuilder();
    int x;            
    while(no.charAt(i)!='*'&amp;&amp;no.charAt(i)!='+'&amp;&amp;no.charAt(i)!='-'&amp;&amp;no.charAt(i)!='/' &amp;&amp;no.charAt(i)!='%')
    {        
        rightCount++;
        sb.append(no.charAt(i));            
        i++;
    }     
    x=Integer.parseInt(sb.toString());
    return x;
}          
</code></pre>

<p>here may be unused variable may be there.please find and remove it.
 I didn't set any preferences to the calculation. just i made up with the flow. if you change the flow the answer will be different. so, Keep in mind. and you can do the same for different operators also. 
 And One more thing is that, Please verify the equation before proceeding the function. because, it will not check whether the equation is correct or wrong.(a+*d++c). it is not correct equation. 
The equation should be correct format.. Like a+b*c-d/x.</p>

<p>Enjoy ..Break the interview and get your correct job..</p>
"
"25550930","<p>Java has a class called <code>java.util.concurrent.Future</code> which is equivalent to the C# <code>Task</code> class.</p>

<p>You can set off work on a <code>java.util.concurrent.Executor</code> object. There are many implementations but <code>ForkJoinTask.fork()</code> is worth a look if you hit thread limits as soon as you try this.</p>

<p>You will be given a <code>Future</code> when you start work. Your method will carry on running. When you need the result from your Future you call <code>get()</code> and it will block until the result is ready. This is similar to using the <code>await</code> keyword in C#.</p>
"
"25859611","<p><code>&lt;EditText android:id=""@+id/edit_message"" &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;
    android:layout_width=""0dp""
    android:layout_height=""wrap_content""
    android:layout_weight=""1""
    android:hint=""@string/edit_message""/&gt;</code></p>
"
"25908376","<pre><code>public List&lt;String&gt; trimmer(List&lt;String&gt; x) {
    Log.e("""", Integer.toString(x.size()));
    for (int i = 0; i &lt; x.size(); i++) {
        String s = x.get(i).toString(); 
        String a = s.substring(6);
        Log.e(""after trim is?"", a);
        x.remove(i);
        x.add(i, a);
    }
    // check if the element got added back
    Log.e(""Trimmer function"", x.get(1));

    return x;
}
</code></pre>

<p>This will help you hopefully! </p>
"
"25990010","<p>class can't be compiled for the program:-</p>

<pre><code>public class WhileTester {

  public static void main(String[] args) {
    System.out.println(""First 10 numbers in the sequence 1, 2, 0, 3, -1, 4, -2 ..."");
    int i = 0;
    while (i &lt;= 6) {
      int a = 1;
      int num = i;
      if (i % 2 == 0) {
        num = -i;
      } else {
        num = i;
      }
      a = a + num;
      System.out.print(a+ "", "");
      i++;
</code></pre>

<p>it is a wrong information</p>
"
"26609937","<p>Please find the solution below,</p>

<p>The value of this variable will never be cached thread-locally: all reads and writes will go straight to ""main memory"". The volatile force the thread to update the original variable for each time. </p>

<pre><code>public class VolatileDemo {

    private static volatile int MY_INT = 0;

    public static void main(String[] args) {

        ChangeMaker changeMaker = new ChangeMaker();
        changeMaker.start();

        ChangeListener changeListener = new ChangeListener();
        changeListener.start();

    }

    static class ChangeMaker extends Thread {

        @Override
        public void run() {
            while (MY_INT &lt; 5){
                System.out.println(""Incrementing MY_INT ""+ ++MY_INT);
                try{
                    Thread.sleep(1000);
                }catch(InterruptedException exception) {
                    exception.printStackTrace();
                }
            }
        }
    }

    static class ChangeListener extends Thread {

        int local_value = MY_INT;

        @Override
        public void run() {
            while ( MY_INT &lt; 5){
                if( local_value!= MY_INT){
                    System.out.println(""Got Change for MY_INT ""+ MY_INT);
                    local_value = MY_INT;
                }
            }
        }
    }

}
</code></pre>

<p>Please refer this link <a href=""http://java.dzone.com/articles/java-volatile-keyword-0"" rel=""nofollow"">http://java.dzone.com/articles/java-volatile-keyword-0</a> to get more clarity in it.</p>
"
"26901266","<p>why making life hard-</p>

<pre><code>String parameters = StringUtils.join(arraylistParameter.iterator(),"","");  
PreparedStatement pstmt =conn.prepareStatement(""select * from employee 
                         where id in (""+ parameters+)"");
</code></pre>
"
"27265050","<p>I was also getting similar kind of exception like:</p>

<pre><code>Dec 03, 2014 11:52:04 AM org.apache.catalina.core.ContainerBase startInternal
SEVERE: A child container failed during start
java.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[/CustomerSeedSubmissionsTmp]]
    at java.util.concurrent.FutureTask.report(FutureTask.java:122)
    at java.util.concurrent.FutureTask.get(FutureTask.java:192)
    at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:1123)
    at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:816)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1575)
    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1565)
    at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    at java.lang.Thread.run(Thread.java:744)
Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[/CustomerSeedSubmissionsTmp]]
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)
    ... 6 more
Caused by: java.lang.NoClassDefFoundError: Lorg/apache/log4j/Logger;
    at java.lang.Class.getDeclaredFields0(Native Method)
    at java.lang.Class.privateGetDeclaredFields(Class.java:2570)
    at java.lang.Class.getDeclaredFields(Class.java:1903)
    at org.apache.catalina.util.Introspection.getDeclaredFields(Introspection.java:106)
    at org.apache.catalina.startup.WebAnnotationSet.loadFieldsAnnotation(WebAnnotationSet.java:270)
    at org.apache.catalina.startup.WebAnnotationSet.loadApplicationServletAnnotations(WebAnnotationSet.java:139)
    at org.apache.catalina.startup.WebAnnotationSet.loadApplicationAnnotations(WebAnnotationSet.java:65)
    at org.apache.catalina.startup.ContextConfig.applicationAnnotationsConfig(ContextConfig.java:415)
    at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:892)
    at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:386)
    at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:117)
    at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)
    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5380)
    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
    ... 6 more
Caused by: java.lang.ClassNotFoundException: org.apache.log4j.Logger
    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1720)
    at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1571)
    ... 20 more
Dec 03, 2014 11:52:04 AM org.apache.catalina.core.ContainerBase startInternal
</code></pre>

<p>But as suggested by @David, I added log4j-1.2.15.jar jar in WEB-INF/lib, and it started working. </p>
"
"27465325","<p>I think this is more efficient way</p>

<pre><code>public Result toResult() {
   MyPojo result = new MyPojo();
   JsonNode node = objectMapper.valueToTree(result);
   return ok(node);
}
</code></pre>
"
"28081621","<pre><code>itemLayoutView.setOnClickListener(new View.setOnClickListener() {
    @Override
    public boolean onLongClick(View v) {
        Toast.makeText(v.getContext(), ""on item click"", Toast.LENGTH_SHORT).show();

        return true;
    }
});
</code></pre>

<p>Implement this inside ViewHolder constructor.</p>
"
"28351754","<p>THIS CODE CALCULATES MODE, MEDIAN, AND MEAN. IT IS TESTED AND IT DOES WORK. It is a complete program from start to finish and will compile.</p>

<pre><code>import java.util.Arrays;
import java.util.Random;
import java.math.*;
/**
 *
 * @author Mason
 */
public class MODE{

    public static void main(String args[])
    {
        System.out.print(""Enter the quantity of random numbers  ===&gt;&gt;  "");
        int listSize = Expo.enterInt();
        System.out.println();
        ArrayStats intStats = new ArrayStats(listSize);
        intStats.randomize();
        intStats.computeMean();
        intStats.computeMedian();
        intStats.computeMode();
        intStats.displayStats();
        System.out.println();
    }
}


class ArrayStats
{

    private int list[];
    private int size;
    private double mean;        
    private double median;      
    private int mode;           

    public ArrayStats(int s)//initializes class object
    {
        size = s;
        list = new int[size];
    }

    public void randomize()
    {
        //This will provide same numbers every time... If you want to randomize this, you can
        Random rand = new Random(555);
        for (int k = 0; k &lt; size; k++)
            list[k] = rand.nextInt(11) + 10;  
    }

    public void computeMean()
    {
               double accumulator=0;
               for (int index=0;index&lt;size;index++)
               accumulator+= list[index];

               mean = accumulator/size;
    }

        public void computeMedian()
{
        Arrays.sort(list);
                if((size%2!=0))
                    median = list[((size-1)/2)];
                else if(size!=1&amp;&amp;size%2==0)
                {
                    double a =(size)/2-0.5;
                    int a2 =  (int)Math.ceil(a);
                    double b =(size)/2-0.5;
                    int b2 = (int)Math.floor(b);
                    median = (double)(list[a2]+list[b2])/2;
                }
                else if (size ==1)
                    median = list[0];
        }

    public void computeMode()
    {
 int popularity1 = 0;
  int popularity2 = 0;
  int array_item; //Array contains integer value. Make it String if array contains string value.
  for(int i =0;i&lt;list.length;i++){
      array_item = list[i];
      for(int j =0;j&lt;list.length;j++){
          if(array_item == list[j])
             popularity1 ++;
      }
      if(popularity1 &gt;= popularity2){
          mode = array_item;
          popularity2 = popularity1;
      }


      popularity1 = 0;
  }}

    public void displayStats()
    {
        System.out.println(Arrays.toString(list));
        System.out.println();
        System.out.println(""Mean: "" + mean);
        System.out.println(""Median: "" + median);
        System.out.println(""Mode: "" + mode);
        System.out.println();
    }

}
</code></pre>
"
"28469414","<pre><code>for(int i=0;i&lt;array1.length;i++)
        {
        for(int j=0;j&lt;array2.length;j++)
            {
                if(!array1[i].equals(array2[j]))
                    {

                    if( array2.length==j+1)
                    {
                    array3[k]=array1[i];
                        k++;

                }

                }
                else{
                    break;
                }

            }
        }
</code></pre>
"
"28724148","<p>The solution is:</p>

<pre><code>File f = new File(""image.png"");
Image ix = new Image(f.toURI().toString());
stage.getIcons().add(ix);
</code></pre>
"
"28828847","<pre><code>BufferedReader br = new BufferedReader(new FileReader(new File(filename)));

String line;

StringBuilder sb = new StringBuilder();

while((line = br.readLine())!= null){

    sb.append(line.trim());
}
</code></pre>
"
"29416749","<p>I had a similar problem when the mapping file wouldn´t load correctly. The answer to this problem seems to be that we need to use the correct import statements in our Model classes. </p>

<p>Changing the import to <code>import javax.persistence.Entity</code> instead of using the one from hibernate package ( ie <code>org.hibernate.annotations.Entity</code>), fixed the issue in my case.</p>

<p>This issue is a real pain , and I spent more than 1/2 day looking at all corners, when a simple import fixed the issue. </p>

<p>Hope this helps.</p>
"
"29469313","<p>If the project is not built by maven and is a simple eclipse dynamic web project, try doing this</p>

<p>If exists, delete the .snap file located in the directory <code>&lt;workspace-directory&gt;\.metadata\.plugins\org.eclipse.core.resources</code></p>

<p>After deleting this file, you could start Eclipse with no problem.</p>

<p>If not, delete <code>tmp0</code> (name may vary to tmp) folder in the following directory <code>&lt;workspace-directory&gt;\.metadata\.plugins\org.eclipse.wst.server.core</code></p>

<p>If there is any problem on deleting this folder then restart your eclipse then again delete that folder.</p>
"
"29511973","<pre><code>public class demo
{
    private demo()
    {

    }
    public static demo getObject()
    {
        return new demo();
    }

    public void add()
    {

    }
}
class Program
{
    static void Main(string[] args)
    {
        demo d1 = demo.getObject();
        d1.add();
    }
}
</code></pre>
"
"29795647","<p>public boolean onQueryTextSubmit(String s) {
        //Search stuff...</p>

<pre><code>    searchView.setIconified();
    searchView.clearFocus();
    searchView.onActionViewCollapsed();
    return true;
}
</code></pre>
"
"29873926","<pre><code>package JavaPractice;

public class CountNumberOfWords {
public static void main(String[] args) {
    String str = ""My name is srikanth. srikanth is working on a java program. "" + 
            ""srikanth dont know how many errors atr there. so, "" +
            ""srikanth is going to find it."";
    String Iwant = ""srikanth"";
    int wordIndex = 0;
    int count =0;
    for (int start = 0; start &lt; str.length(); start++) {
      if (Character.isWhitespace(str.charAt(start))) wordIndex++;
      if (str.substring(start).startsWith(Iwant)) {
        System.out.println(""Index of the String Iwant ""+wordIndex);
        count++;
      }
    }
    System.out.println(""Number of times srikanth in str is=""+count);

}
}
</code></pre>

<p>Output:</p>

<pre>
Index of the String Iwant 3
Index of the String Iwant 4
Index of the String Iwant 11
Index of the String Iwant 20
Number of times srikanth in str is=4
</pre>
"
"29965899","<p>there is need for Pen identifier.
Create it like </p>

<pre><code>Pen pk
</code></pre>

<p>then follow @blazy answer.</p>
"
"30322753","<pre><code>public class PrintPrime {

    public static void main(String args[]) {
        for (int i = 2; i &lt; 1000; i++) {
            primes(i, Math.ceil(Math.sqrt(i)));

        }
    }

    public static int primes(int x, double i) {
        if (i == 1)
            System.out.println(x);
        if (x % i == 0)
            return 0;
        else
            return primes(x, i - 1);
    }

}
</code></pre>
"
"15015392","<p>May I suggest a different approach. I don't have JAVA 7 due to MACOSX restriction yet so if there is syntax error , please guide me through. Comments Welcome </p>

<p>This is based on the question I had asked on Stacoverflow error : <a href=""http://stackoverflow.com/questions/10836055/switch-statement-in-java-7"">Switch Statement in Java 7</a></p>

<pre><code> The Java compiler generates generally more efficient bytecode from switch statements that   
 use ""String objects"" than from chained if-then-else statements.
</code></pre>

<p>So , --> Switch Statement would be more efficient than if-else block. The performance with try-catch is debatable</p>

<pre><code>   String str = getMyString(); // only one call

   try {
    switch (str) {
      default:   break;
    }

    } catch(NullpointerException e){

      str="""";//Null means Str is null
    }
</code></pre>
"
"15021090","<p>You can use <a href=""http://en.wikipedia.org/wiki/Null_Object_pattern"" rel=""nofollow"">NullObject</a> dessign pattern, but thwroing an exception IMHO is the best choice.</p>

<p>To keep in DRY, you should put that throw in <code>findbyIdInitialized</code>. </p>
"
"15090639","<p>You can try this </p>

<pre><code>String yourdate = ""02/26/2013"";
Date toDate = new SimpleDateFormat(""MM/dd/yyyy"").parse(yourdate);
long toDateAsTimestamp = toDate.getTime();
long currentTimestamp = System.currentTimeMillis();
long getRidOfTime = 1000 * 60 * 60 * 24;
long toDateAsTimestampWithoutTime = toDateAsTimestamp / getRidOfTime;
long currentTimestampWithoutTime = currentTimestamp / getRidOfTime;

if (toDateAsTimestampWithoutTime &lt;= currentTimestampWithoutTime) {
    System.out.println(""Display error."");
} else {
    System.out.println(""All ok"");
}
</code></pre>
"
"15105921","<p>The ++ operator does not exist in Python. Instead you could do:</p>

<pre><code>j += 1
if j == 9:
    return True
</code></pre>
"
"15112622","<p>You could call <a href=""http://docs.oracle.com/javase/6/docs/api/java/net/URLConnection.html#connect%28%29"" rel=""nofollow""><code>.connect()</code></a> to actually ""Open[s] a communications link"".</p>
"
"15115184","<p>I think you can probably do that with reflection, a simpler solution is doing string comparison on the key and invoke the appropriate method:</p>

<pre><code> String key = entry.getKey();
 if (""name"".equalsIgnoreCase(key))
   //key
 else
   // company
</code></pre>
"
"15161835","<p>This might be best implemented with an if statement like so: </p>

<pre><code>if(args.length == 0) {
     System.out.println(""Expected 1 argument specifying the sub class to use."");
     return;
}

BaseClass b;
if(args[0].equalsIgnoreCase(""SUBCLASS1"")) {
     b = new Subclass1();
} else if(args[0].equalsIgnoreCase(""SUBCLASS2"")) {
     b = new Subclass2();
} else {
     b = new Default();
}

//do stuff...
</code></pre>

<p><b>EDIT</b></p>

<p>The reason I prefer this implementation is that the user doesn't need to know the package or class that the subclass belongs to, only the inputs that are expected. However, if you are not concerned about this, then the other methods may be more suited for your purpose.</p>
"
"15238027","<p>I am not clear about the question. If you need to eliminate duplicates a simple way depending on the size of the input array would be to construct a <code>java.util.Set</code> and iterate through it.</p>
"
"15266172","<p><code>""PTEBasitLTDMasoodPRIVATE"".replaceAll(""PTE|LTD|PRIVATE|LIMITED"","""");</code></p>

<p>will result in </p>

<blockquote>
  <p>BasitMasood</p>
</blockquote>
"
"15286964","<p>This will result in an error if you try to serialize <code>A</code>. Because <code>B</code> is not Serializable. It is code smell.</p>
"
"15291394","<p>Just use the proper constructor:</p>

<pre><code>Date d = new Date(11111111L);
Time t = new Time(22222222L);

DateTime jd = new DateTime(d.getTime());
DateTime jt = new DateTime(t.getTime());

System.out.println(jd); // 1970-01-01T04:05:11.111+01:00
System.out.println(jt); // 1970-01-01T07:10:22.222+01:00
</code></pre>
"
"15294870","<p>you are getting these android/sqlite exception</p>

<p><code>
SQLiteException: no such table: highscores: , while compiling: SELECT _id, imeosobe, skor FROM highscores
</code></p>

<p><code>
android.database.sqlite.SQLiteException: table highscorestable has no column named score: , while compiling: INSERT INTO highscorestable(score, name) VALUES(?, ?);
</code></p>

<p>i would double check you table and column definitions and also how you are constructing you insert into statement</p>
"
"15302098","<p>You need to create the main method that would test the functionality of your class.</p>

<pre><code>public static void main(String args[])
{
    //To do
}
</code></pre>

<p>In your main method you need to for example construct a Card object (assuming you have the Card class).</p>

<pre><code>Card card = new Card();
</code></pre>

<p>Then you also need to construct a Deck object, which you would use to call methods of the Deck class in order to for example add cards to the Deck</p>

<pre><code>Deck deck = new Deck();
</code></pre>

<p>Use the deck object to call the add method to add the card to the Deck</p>

<pre><code>deck.add(card);
</code></pre>

<p>So now your main method should look something like this:</p>

<pre><code>public static void main(String args[])
{
   Card card = new Card();
   Deck deck = new Deck();
   deck.add(card);
}
</code></pre>

<p>Also in your Deck class, I'd recommend using <code>List&lt;Card&gt; deck = new ArrayList&lt;Card&gt;();</code>
rather than <code>ArrayList&lt;Card&gt; deck = new ArrayList&lt;Card&gt;();</code>.</p>

<p>Hope this gives you a starting point.</p>
"
"15302183","<p>I think I didn't understand what you want, but I will give my suggestion here any way.</p>

<p>Where is Card class?</p>

<p>Add this method in your Deck class, compile your code and execute.</p>

<blockquote>
<pre><code>public static void main(String[] args) {
    Deck deck = new Deck();
    // Call your methods here and do what do you want...
}
</code></pre>
</blockquote>
"
"15304564","<p><code>&amp;</code> is bitwise AND</p>

<p><code>&amp;&amp;</code> is logical AND. </p>

<p><code>true &amp;&amp; true = true</code>.. </p>

<p><code>&amp;</code> works on numbers, <code>&amp;&amp;</code> works on boolean expressions. </p>

<p><code>0xFE &amp; 0xFF</code> results in <code>0xFE</code>.</p>
"
"15304569","<pre><code>var &amp;= expr
</code></pre>

<p>is equivalent to</p>

<pre><code>var = var &amp; expr
</code></pre>

<p>In other words it does a <em>bitwise</em> or</p>

<pre><code>var = var &amp;&amp; expr
</code></pre>

<p>does a logical or of var and expr</p>
"
"15447916","<pre><code>    File[] f= new File[6];

     f[1]= new File(""p1.png"");

     f[2]= new File(""p2.png"");

     f[3]= new File(""p3.png"");

     f[4]= new File(""p4.png"");

     f[5]=new file(""p5.png"");

     for(int i=1;i&lt;5;i++)  
    {   
     compare(f[i],f[i+1]);
    }

    public void compare(File f1,File f2)
    {
     BufferedImage image = ImageIO.read(f1);
     BufferedImage image = ImageIO.read(f2);
 // compare as you like

}
</code></pre>
"
"15463970","<p>Try this :</p>

<pre><code>for (int i = 1; i &lt;= 7; i++) {
for (int j = 1; j &lt; i; j++) 
{
    System.out.print(""  "");
}
for (int j = 1; j &lt;= 7-i; j++) 
{
System.out.print(j + "" "");
}
System.out.println();  
</code></pre>

<p>}</p>
"
"15565886","<p>The following code snippet retrieves information about the file type</p>

<pre><code>final File file = new File(""file.txt"");
System.out.println(""File type is: "" + new MimetypesFileTypeMap().getContentType(file));
</code></pre>

<p>Hopefully, it may help you</p>
"
"15597796","<p>Use instanceof </p>

<pre><code>if(someCard instanceof JokerCard) {
  /* Some logic here*/
}
else if(someCard instanceOf ScoreCard) {
  int score = ((ScoreCard) someCard).getScore();
  /* some more logic here */
}
</code></pre>
"
"15636731","<p>I'll confine my answers to C++ templates vs. Java generics.</p>

<ol>
<li>C++ templates (class templates and functions templates) are mechanisms for
implementing compile-time polymorphism, but AFAIK Java generics are run-time
mechanisms.</li>
<li>using C++ templates, you can do generic programming and it's actually
is totally separate programming style/paradigm, but Java generics are OO
style per se. see below:</li>
<li><p>C++ templates are based on Duck typing, but Java generics are based on
Type Erasure. In C++, <code>vector&lt;int&gt;</code>, <code>vector&lt;Shape *&gt;</code>, <code>vector&lt;double&gt;</code> and
<code>vector&lt;vector&lt;Matrix&gt;&gt;</code> are 4 distinct types, but in Java <code>Cell&lt;int&gt;</code>, <code>Cell&lt;Integer&gt;</code>
<code>Cell&lt;double&gt;</code> and <code>Cell&lt;Matrix&gt;</code> are same type. More precisely, during code generation
compiler erases the type at first place.
You can check it by following code from the following paper:
Vladimir Batov. Java Generics and C++ Templates. C/C++ Users Journal, July 2004.</p>

<pre><code>public class Cell&lt;E&gt;
{
   private E elem;
   public Cell(E elem)
   { 
      this.elem = elem;
   }
   public E GetElement()
   { 
      return elem;
   }
   public void SetElement(E elem)
   { 
      this.elem = elem;
   } 
}

boolean test()
{ 
  Cell&lt;Integer&gt; IntCell(10); 
  Cell&lt;String&gt; StrCell(“Hello”);
  return IntCell.getClass() ==
         StrCell.getClass(); // returns true
}
</code></pre></li>
</ol>

<p>In short, Java pretends to be generic, while C++ actually is.</p>
"
"15707027","<p>This is possible, but you will have to introduce to thread. </p>

<p>You application should have two threads <code>main</code> and <code>worker</code>. </p>

<p>The <code>main</code> thread, is your whole program. That during his work start the <code>worker</code>. Worker do the computation, after first part he can set a value that <code>main</code> thread can read and display. </p>
"
"15730293","<p>My interpretation of the <a href=""http://docs.oracle.com/javase/tutorial/essential/concurrency/locksync.html"" rel=""nofollow"">tutorial</a> <code>synchronized(Foo.class) {...}</code> will lock only the static members of the class.  But to be sure you'll need to write a test.</p>

<pre><code>public class SyncTest {
    public static SyncTest instance;
    public static String valueA;
    public String valueB;

    public static void main(String[] args) {
        instance = new SyncTest();

        (new Thread(new Task1())).start();
        (new Thread(new Task2())).start();
        try {
            Thread.sleep(10000);
            synchronized(SyncTest.class) {
                System.out.println(""Value A: "" + valueA);
            }
            synchronized(instance) {
                System.out.println(""Value B: "" + instance.valueB);
            }
        } catch (InterruptedException interrupt) { }
    }
}

class Task1 implements Runnable {
    public void run() {
        try {
            synchronized(SyncTest.class) {
                System.out.println(""Task 1 Sleeping "");
                Thread.sleep(500);
                SyncTest.valueA = ""One"";
                System.out.println(""T1 A: "" + SyncTest.valueA);
            }

            synchronized(SyncTest.instance) {
                Thread.sleep(1000);
                SyncTest.instance.valueB = ""Two"";
                System.out.println(""T1 B: "" + SyncTest.instance.valueB);
            }
        } catch (InterruptedException interrupt) { }
        System.out.println(""Task 1 Finished "");
    }
}

class Task2 implements Runnable {
    public void run() {
        System.out.println(""Task 2 Started"");
        try {
            Thread.sleep(1000);
            synchronized(SyncTest.class) {
                SyncTest.instance.valueB = ""Four"";
                System.out.println(""T2 B: "" + SyncTest.instance.valueB);

                Thread.sleep(5000);

                SyncTest.valueA = ""Three"";
                System.out.println(""T2 A: "" + SyncTest.valueA);
            }
        } catch (InterruptedException interrupt) { }
        System.out.println(""Task 2 Finished"");
    }
}
</code></pre>

<p>Which gives the output:</p>

<pre><code>Task 1 Sleeping 
Task 2 Started
T1 A: One
T2 B: Four
T1 B: Two
Task 1 Finished 
T2 A: Three
Task 2 Finished
Value A: Three
Value B: Two
</code></pre>

<p>As task 2 update <code>valueB</code> while task 1 is holding instance lock I think this shows that a static lock does not lock all instances of the class.  </p>
"
"15840630","<p>I'm not sure what you're exactly trying to do, but you have two <code>else</code> statements.</p>

<p>Remove the inner <code>if</code> statements, and you're left with this shell:</p>

<pre><code>if(if(tabId.equalsIgnoreCase(""android"")){

} else {

} else {

}
</code></pre>

<p>You can only have one <code>else</code> condition. Here, you have two.</p>
"
"15855514","<p>The rectangle is drawn once, however every time the JFrames repaint() method is called it erases it and draws the basic Components. To add custom drawing in JFrames you have to override the paint method. Here I improved your code slightly to get you started down that path. As you can see you want to draw the box in the Paint method. I made a Container element that does your drawing and removed the background color, adding it to the paint method as well.</p>

<p>try this</p>

<pre><code>import javax.swing.*;
import java.awt.*;

public class JavaApplication10 {
    private final static int FRAME_HEIGHT = 600;
    private final static int FRAME_WIDTH = 600;
    public static void main(String[] args){
        JFrame win = new JFrame();
        win.setContentPane(new MyBoxContainer());
        win.setSize(FRAME_WIDTH, FRAME_HEIGHT);
        win.setVisible(true);
    }

    private static class MyBoxContainer extends Container {
        @Override
        public void paint(Graphics g) {
            super.paint(g);
            g.setColor(Color.MAGENTA);
            g.fillRect(0, 0, getWidth(), getHeight());
            g.setColor(Color.BLACK);
            g.fillRect(80, 350, 400, 250);
        }
    }
}
</code></pre>
"
"15910511","<p>You are missing the index when your are looking for </p>

<pre><code> wordList.toString().charAt(1)
</code></pre>

<p>should be
     wordList[i].toString().charAt(1)</p>
"
"15940006","<p>To reverse it:</p>

<pre><code>for (int i = 0; i &lt; values.length; i++)
    reverseNums[values.length - i - 1] = values[i];
</code></pre>
"
"15947421","<pre><code>String response = ""prd|50126057|12bars|5"";
String[] words = response.split(""|"");
Toast.makeText(mActivity, words[0]+""::""+words[1]+""::""+words[2]+""::""+words[3],Toast.LENGTH_SHORT).show();
</code></pre>

<p>The above code is working nothing wrong in that. Just check messageReceived is being called or not.</p>
"
"15970690","<p>You easily achieve it by package <code>java.util.Calendar</code> </p>

<p>Try the following code</p>

<pre><code>       import java.util.Calendar; //Import package

        String month_order[]={""Select..."",""Jan"",""Feb"",""Mar"",""Apr"",""May"",""Jun"",""Jul"",""Aug"",""Sep"",""Oct"",""Nov"",""Dec""};
        Calendar cal = Calendar.getInstance();
        int month = cal.get(Calendar.MONTH) + 1;
        int dom = cal.get(Calendar.DAY_OF_MONTH);
        int doy=cal.get(Calendar.YEAR);
        System.out.println(""Current date: ""+month_order[month]);
        System.out.println(""Current Month:  ""+dom);
        System.out.println(""Current year: ""+doy);
</code></pre>
"
"15975908","<p>I think you are looking to load the List with ANY SUPER Class of Integer.
Object is the only class that Super of Integer. </p>

<p>Number is an Object hence it is legal to write <code>new ArrayList&lt;Number&gt;()</code>;</p>

<p>But when you try to get from numbersList, It could only be an Object.
Because Object is the only Super class of Integer.</p>

<p>Let me know if you have any doubt, or if you think I need to correct my understanding.</p>

<p>Regards,
Venod</p>
"
"15995662","<pre><code>Bird getMyBird(Integer aniInteger) {
        Bird b = new Bird();
        //Do somthig with bird object...

        return b;
        //get your modifeid bird object
    }

    Bird myBird = animalList.get(animalIndex);

    myBird.move();
</code></pre>
"
"16107945","<p>Solution: Only devices without permanent hardware keys have the navigation bar hence you can check for the API version and use hasPermanentMenuKey() to find hardware keys</p>

<pre><code> boolean hasMenuKey = ViewConfiguration.get(context).hasPermanentMenuKey();
</code></pre>
"
"16121888","<p>The first thing you need is learn about String Regex, maybe here: <a href=""http://docs.oracle.com/javase/tutorial/essential/regex/"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/essential/regex/</a>.
Try out the next simply code.</p>

<pre><code>public class StringMatcher {

    public static void main(String[] args) {
        String[] words = new String[]{""abcd"", ""abcde"", ""abcdef"", ""abfg"", ""abdc""};
        String filter = ""abc"";

        for (String word : words) {
            if (word.matches(filter + ""(.*)"")) {
                System.out.println(""This pass the filter: "" + word);
            }
        }
    }
}
</code></pre>
"
"16203723","<p>It looks like you have some basic misconceptions about how to best structure your classes.</p>

<p>Typically, a class looks like this:</p>

<pre><code>public class MyClass {
    public MyClass() {
        // constructor code
    }

    public static void main( String[] args ) {
        MyClass myClass = new MyClass();
        myClass.doStuff();
    }

    public void doStuff() {
        // do stuff
    }
}
</code></pre>

<p>What you have is a mishmash of inner classes that are going to be a pain to work with and are  not how you want to start this adventure.</p>
"
"16218005","<p>No, because Java sees the <code>1</code> as an Integer. You will need to convert your number as a String first with <code>Integer.toString(n)</code></p>
"
"16218040","<p>Try this</p>

<pre><code>List.add(Integer.toString(1));
</code></pre>

<p>You also can try this</p>

<pre><code>List list = new ArrayList&lt;Object&gt;() ;
</code></pre>

<p>If there is no need that the arraylist must be a Arraylist of String</p>
"
"16252270","<pre><code>public static void main(String arg[])
{
    List&lt;Double&gt; testList=new ArrayList();

   /*Adding The values to the List*/

    testList.add(0.5);
    testList.add(0.2);
    testList.add(0.9);
    testList.add(0.1);
    testList.add(0.1);
    testList.add(0.1);
    testList.add(0.54);
    testList.add(0.71);
    testList.add(0.71);
    testList.add(0.71);
    testList.add(0.92);
    testList.add(0.12);
    testList.add(0.65);
    testList.add(0.34);
    testList.add(0.62);

    /*Declare a new List for storing sorted Results*/

    List&lt;Double&gt; finalList=new ArrayList();


    while(!testList.isEmpty()) //perform operation until all elements are moved to new List
    {
        double rank=0;
        int i=0;
            for(double d: testList)
            {
                if(d&gt;=rank)
                {
                    rank=d;
                }

            }
            finalList.add(rank);

            testList.remove(testList.indexOf(rank));

     }
    for(double d : finalList) {
        System.out.println(d);
    }

}
</code></pre>
"
"16252575","<p>This is less code; it is not ""efficient"" in CPU use or memory use, but makes the code shorter to write and read.  I assume dice rolls are random regardless of their order.</p>

<pre><code>package example;

public class PlayerCharacter
{

  int strength, dexterity, constitution, intelligence, wisdom, charisma;
  int[] strRolls, dexRolls, conRolls, intRolls, wisRolls, charRolls;

  private int getScore(Dice d, int[] storage)
  {
    for (int i=0; i&lt;storage.length; i++)
    {
      storage[i] = d.getNewRoll();
    }
    int result = 0;
    for (int i=0; i&lt;storage.length; i++) { result += storage[i]; }

  }

  public void generateAbilityScoresMethod1()
  {

    strRolls = new int[3];
    dexRolls = new int[3];
    conRolls = new int[3];
    intRolls = new int[3];
    wisRolls = new int[3];
    charRolls = new int[3];

    for (int i = 0; i &lt; 3; i++)
    {
      strength      = getScore(dice.Dice.D6, strRolls);
      dexterity     = getScore(dice.Dice.D6, dexRolls);
      constitution  = getScore(dice.Dice.D6, conRolls);
      intelligence  = getScore(dice.Dice.D6, intRolls);
      wisdom        = getScore(dice.Dice.D6, wisRolls);
      charisma      = getScore(dice.Dice.D6, charRolls);

    }

  }

  public int getStrength()
  {
    return strength;
  }

  private void printArrayRolls(String label, int[] rolls)
  {
    for (int i=0; i &lt; rolls.length; i++)
    {
      System.out.println(label + "": roll "" + rolls[i]);
    }
  }

  public void printStrRolls()
  {
    printArrayRolls(""Str"", strRolls);
  }

  public int getDexterity()
  {
    return dexterity;
  }

  public void printDexRolls()
  {
    printArrayRolls(""Dex"", dexRolls);
  }

  public int getConsitution()
  {
    return constitution;
  }

  public void printConRolls()
  {
    printArrayRolls(""Con"", conRolls);
  }

  public int getIntelligence()
  {
    return intelligence;
  }

  public void printIntRolls()
  {
    printArrayRolls(""Int"", intRolls);
  }

  public int getWisdom()
  {
    return wisdom;
  }

  public void printWisRolls()
  {
    printArrayRolls(""Wis"", wisRolls);
  }

  public int getCharisma()
  {
    return charisma;
  }

  public void printCharRolls()
  {
    printArrayRolls(""Char"", charRolls);
  }

  public void printAbilities()
  {
    System.out.println(""Str = "" + getStrength());
    System.out.println(""Dex = "" + getDexterity());
    System.out.println(""Con = "" + getConsitution());
    System.out.println(""Int = "" + getIntelligence());
    System.out.println(""Wis = "" + getWisdom());
    System.out.println(""Char = "" + getCharisma());
  }

}
</code></pre>
"
"16378415","<p>similar to durron597's answer, you can try this if your input is bounded by char (between 0 and 65535 ) </p>

<pre><code>public int hashCode(){
   return row * 100000 + col;
}
</code></pre>
"
"16491916","<p>Why are you creating a new class called ArrayList? Surely you want to do something like:</p>

<pre><code>ArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;();
list.add(""Value A"");
list.add(""Value B"");
list.add(""Value C"");
</code></pre>

<p>?</p>
"
"16492004","<p>ArrayLists have to be initialized differently to standard arrays.</p>

<p>What you want is something like this:</p>

<pre><code>ArrayList&lt;Object&gt; list = new ArrayList&lt;Object&gt;();
list.add(Object o);
</code></pre>

<p>Remember that nearly everything in Java is an <code>Object</code>.</p>

<p>So you can do:</p>

<pre><code>ArrayList&lt;String&gt;...
ArrayList&lt;Integer&gt;...
</code></pre>

<p>But the most powerful feature of ArrayLists, and the reason I use them, is when you start making your own classes - for instance, in game development, a common class people make is a Sprite -- you could create an ArrayList of all sprites, such as below:</p>

<pre><code>public class Sprite {}....
ArrayList&lt;Sprite&gt; spriteList = new ArrayList&lt;Sprite&gt;();
</code></pre>
"
"16494329","<p>ublic class ArrayList {</p>

<pre><code>public static void main(String[] args) {
    ArrayList list = new ArrayList();
    list.add(""Value A"");
    list.add(""Value B"");
    list.add(""Value C"");
}
</code></pre>

<p>}</p>

<p>your className is ArrayList   try to change the name and import ArrayList Class package</p>
"
"16557763","<p>You could use a variable of type <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/ThreadLocal.html"" rel=""nofollow""><code>ThreadLocal</code></a>.</p>

<blockquote>
  <p><code>ThreadLocal</code> can be considered as a scope of access, like a <em>request scope</em> or <em>session scope</em>. It's a thread scope. You can set any object in <code>ThreadLocal</code> and this object will be <em>global</em> and <em>local</em> to the specific thread which is accessing this object. <em>Global</em> and <em>local</em>? Let me explain:</p>
  
  <ul>
  <li>Values stored in <code>ThreadLocal</code> are <em>global</em> to the thread, meaning that they can be accessed from anywhere inside that thread. If a thread calls methods from several classes, then all the methods can see the <code>ThreadLocal</code> variable set by other methods (because they are executing in same thread). The value need not be passed explicitly. It's like how you use global variables.</li>
  <li>Values stored in <em>ThreadLocal</em> are local to the thread, meaning that each thread will have it's own <code>ThreadLocal</code> variable. One thread can not access/modify other thread's <code>ThreadLocal</code> variables.</li>
  </ul>
</blockquote>

<p><a href=""http://veerasundar.com/blog/2010/11/java-thread-local-how-to-use-and-code-sample/"" rel=""nofollow""><em>Java Thread Local – How to use and code sample</em></a></p>

<p>e.g. You can have something like that:</p>

<pre><code>public class APIUtility {

    private static ThreadLocal&lt;Engine&gt; ENGINE_LOCAL = new ThreadLocal&lt;Engine&gt;();

    public static void setEngine(Engine engine) {
        ENGINE_LOCAL.set(engine);
    }

    public static Engine getEngine() {
        ENGINE_LOCAL.get();
    }

}

class NameValidator {

    public void foo() {
        Object obj = APIUtility.getEngine().getSomething();
    } 

}
</code></pre>

<p>See also:</p>

<ul>
<li><a href=""http://en.wikipedia.org/wiki/Thread-local_storage"" rel=""nofollow"">Thread-local storage - Wikipedia, the free encyclopedia</a></li>
<li><a href=""http://java.dzone.com/articles/java-thread-local-%E2%80%93-how-use"" rel=""nofollow"">Java Thread Local – How to Use and Code Sample | Javalobby</a></li>
</ul>
"
"16582229","<p>You could use a regex as an argument to <code>split</code>, like this:</p>

<pre><code>""32x23"".split(""[xX]"");
</code></pre>

<p>Or you could use a <code>StringTokenizer</code> that lets you set its set of delimiters, like this:</p>

<pre><code>StringTokenizer st = new StringTokenizer(""32x23"",""xX"");
//                                          ^^    ^^
//                                       string delimiter
</code></pre>

<p>This has the advantage that if you want to build the list of delimiters programatically, for example for each lowercase letter in the delimiter list add its uppercase corespondent, you can do this and then pass the result to the <code>StringTokenizer</code>.</p>
"
"16650543","<p>You need to either instantiate a <code>ProDat</code> object in your main method and call <code>produceFile()</code> on that or make the <code>produceFile()</code> method static.</p>
"
"16658792","<p><code>instanceof</code> seems appropriate here, but if you really don't want to use it, you could try something ugly:</p>

<pre><code>for (Coffee c : coffees) {
    try {
        CoffeeMix blend = (CoffeeMix) c;
        //whatever you want to do with CoffeeMix objects
    } catch (ClassCastException cce) {
        //whatever you want to do with Coffee objects
    }
}
</code></pre>

<p>This seems like a situation in which the cure is worse than the disease, but so long as <code>CoffeeMix</code> objects have some fields or properties which are unavailable to <code>Coffee</code> objects, the exception should be thrown, and you will have accomplished your class-wise sorting without having used <code>instanceof</code> <em>at great cost to proper technique</em>.</p>
"
"16865981","<p>I would use a try-catch</p>

<pre><code>  try {
    value1 = userDict.get(""key1"").toString();
  } catch (Exception e) {
    value1 = 0;
  }
</code></pre>
"
"16950303","<pre><code> int int1    = 3;
 int int2    = 4;
 boolean res = ( (int1 * int2) &gt;= 0) ? true : false;

 System.out.println(res);
</code></pre>
"
"16965306","<p>The best solution I could think of 
1. is create a getter and setter </p>

<pre><code> public void setName(String name) {
       this.name = name;
    }

    public String getName() {
       return name;
    }
</code></pre>

<p><a href=""http://docs.oracle.com/javaee/6/tutorial/doc/gjbbp.html"" rel=""nofollow"">http://docs.oracle.com/javaee/6/tutorial/doc/gjbbp.html</a></p>

<p>2.create a wrapper method to do the comparsion prior to calling the individual method.</p>

<p>Hope this helps you.</p>
"
"17025910","<pre><code>for(int j = 0; j &lt; listB.size(); j++){
   if (!listA.contains(listB.get(j))
       additionalDataInListB.add(listB.get(j))
}
</code></pre>

<p>Just repeat that with opposite values to fill up the additionalDataInListA object.  This should do the trick :)</p>

<p>EDIT: This will only work if these are the same object.  That may not be the case.  If this is not the case, you should compare one of the traits probably emp_id to see if those are the same.  If they are not the same, add the different one to the new list.</p>
"
"17093706","<p>If you have two overloaded methods:</p>

<pre><code>showIt(String firstname, String lastname);

showIt(String names ...);
</code></pre>

<p>When you call <code>invoke</code>, java must know which method you are calling. Pass two parameters call the first one, Pass a string array call the second one.</p>
"
"17144514","<p>make changes in your code as follows</p>

<pre><code>package com.donemanuel.DSDK;

import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;


public class LogKit {
 PrintWriter logd ;
void openLog() throws IOException{

Date ltm = new Date( );
SimpleDateFormat lt = new SimpleDateFormat (""'['dd.MM hh:mm:ss a']: '"");
final String logtm = lt.format(ltm);
logd = new PrintWriter(""res/LOGTIME_""+logtm, ""UTF-8"");

String prefix = ""[Logger]:"";

logd.println(prefix + ""DSDK Logger opened!""); 

logd.println(""----------xXx----------"");
logd.flush();

}
void custommessage(String logmsg)  throws IOException{
logd.println(logmsg); //I want to print custom messages with my API, but log is declared in another void so thats the problem.
//If i would declare logd (printwriter) outside a void it would give me an error!
}
}
</code></pre>
"
"17149299","<p>It is true.</p>

<p>Since you didn't explicitly specify <code>C#i</code> visibility, this means it has <code>default</code> visibility, which means <strong>only</strong> package visibility. It is different from <code>protected</code> in the way that such fields (or methods or classes or whatever) are not inherited, thus <code>default</code> visibility is more restrictive than <code>protected</code>.</p>

<p>So doing <code>this.i</code> in <code>D</code> is valid as long as <code>C</code> and <code>D</code> are in the same package. Otherwise, even if <code>D extends C</code>, <code>C#i</code> is not visible because it has <code>default</code> visibility (which is not inherited).</p>

<p>See the <a href=""http://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html"" rel=""nofollow"">documentation</a> for all visibility modifiers and how they work.</p>
"
"17243996","<p>First of all , should not use absolute path, who knows when you deploy it in some other place , the path is going to hold true always ? You can use a relative path as shown.</p>

<pre><code>String contextPath = request.getContextPath();
</code></pre>

<p>It will give your webapp directory,then you can give the path as </p>

<pre><code>contextPath+=""config\\myfile.csv""
</code></pre>

<p>Also use <code>System.getProperty(""file.separator"");</code> instead of slashes for platform independence.</p>
"
"17317242","<pre><code>   @Override
    public void onAttachedToWindow() {
        super.onAttachedToWindow();
        this.getWindow().setType(WindowManager.LayoutParams.TYPE_KEYGUARD);           
    }


 @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {     

        if(keyCode == KeyEvent.KEYCODE_HOME)
        {
           android.os.Process.killProcess(android.os.Process.myPid());
        }
    });
</code></pre>
"
"17393042","<p>check the Following Code, </p>

<pre><code>public static void main(String ar[])
{

    List&lt;String&gt; title = new ArrayList&lt;String&gt;();
        title.add(""title 1"");
        title.add(""title 2"");
        title.add(""title 3"");
    List&lt;String&gt; desc = new ArrayList&lt;String&gt;();
        desc.add(""desc 1"");
        desc.add(""desc 2"");
        desc.add(""desc 3"");
    List&lt;String&gt; price = new ArrayList&lt;String&gt;();
        price.add(""price 1"");
        price.add(""price 2"");
        price.add(""price 3"");
    List&lt;String&gt; usageArray = new ArrayList&lt;String&gt;();
        usageArray.add(""usage 1"");
        usageArray.add(""NONE"");
        usageArray.add(""usage 1"");


    int index = -1;
    for (String string : usageArray) {

        if(string.equalsIgnoreCase(""NONE""))
        {
            index = usageArray.indexOf(string);
                    usageArray.remove(string);
                    price.remove(index);
                    desc.remove(index);
                    title.remove(index);

        }

    }





}
</code></pre>
"
"17397023","<p><a href=""http://docs.oracle.com/javase/tutorial/essential/concurrency/deadlock.html"" rel=""nofollow"">Here</a> explained precisely. Since 1st object is trying to call something on 2nd object, 2nd object is waiting since it came to synchronized block, so 1st call on bowBack() will never end, and both call be stuck there. Read the article. 1st time I haven't noticed that u were calling <code>bower.getName()</code> from the opposite object. <code>bower.getName()</code> call is causing the deadlock </p>
"
"17428430","<p>In in the interface Socket there is getRemoteSocketAddress(). It returns a SocketAddress, and if the implementation of SocketAddress is InetSocketAddress, try to call getHostString(). <br> </p>

<pre><code>SocketAddress address =yourSocket.getRemoteSocketAddress().
String address=((InetSocketAddress)address).getHostString();
</code></pre>

<p>Hope it helps.</p>
"
"17444271","<p>If you are using mysql then database is equivalent to schema.
so it is straight forward</p>

<pre><code>select * 
from p.Test natural join q.Test;
</code></pre>
"
"17472348","<p>I'd say it's simply because when you add the <code>Throws</code>, you're basically handling the error, so the compiler goes ""oh, well, he probably knows what he's doing then"". It still gives a runtime error, after all.</p>
"
"17489495","<p>Try</p>

<pre><code>public void myMethod(Object... params){
    // method body
}
</code></pre>

<p>and then</p>

<pre><code>myMethod(param1,param2,param3);
</code></pre>

<p>or</p>

<p>myMethod(param1,param2, param3, param4)</p>

<p>The three dots means that you are passing a variable number of parameters. Check this link  <a href=""http://java.sun.com/docs/books/tutorial/java/javaOO/arguments.html#varargs"" rel=""nofollow"">http://java.sun.com/docs/books/tutorial/java/javaOO/arguments.html#varargs</a></p>
"
"17526004","<p>The simplest method that I can think of it's:</p>

<pre><code>public static &lt;T&gt; void reverse( LinkedList&lt;T&gt; list )
{
    if (list.size() &lt;= 1) {
        return;
    }
    T first = list.removeFirst();
    reverse( list);
    list.addLast( first );
}
</code></pre>
"
"17683344","<p>you can either do it on the server side or on the client side.  For example, if you are using php on the server side you can do something like this</p>

<pre><code>&lt;option value=&lt;?='07'?&gt;&gt;July&lt;/option&gt;
</code></pre>

<p>with ruby on rails you can do </p>

<pre><code>&lt;option value &lt;%='07'%&gt;&gt;July&lt;/option&gt;
</code></pre>

<p>If you want to do it on the client side you will need to use javascript and assign an id value for each of the options, the id value must be unique for each element throughout the html page.  Once you have the id value you can use javascript to do something like this</p>

<pre><code>&lt;option id=""july"" value=""""&gt;july&lt;/option&gt;
&lt;script&gt;
element = document.getElementById(july).value=""july"";
&lt;/script&gt;
</code></pre>
"
"17700697","<p>you can try this:</p>

<pre><code> Intent intent2 = new Intent(getApplicationContext(), MainActivity.class);
        intent2.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
        intent2.putExtra(""EXIT"", true);
        startActivity(intent2);
</code></pre>

<p><strong>And into your MainActivity:</strong></p>

<p>Write this in onCreate()</p>

<pre><code>if (getIntent().getBooleanExtra(""EXIT"", false)) {
            finish();
        }
</code></pre>

<p>Try this. It will send you to the <strong>HomeScreen</strong>.</p>
"
"17817157","<p>Please try this</p>

<pre><code>public static boolean isPrime(int number) {
    for(int i = 2; i * i &lt;= number; i++) {
        if (i % number == 0) {
            return false;
        } else {
            return true;
        }
    }
    return true;
}
</code></pre>
"
"17840859","<p>I'm pretty sure you can completely delete the   &lt;stuff&gt;   , which will generate a warning and you can use an, @ suppress warnings. If you really want it to be generic, but to use any of its elements you will have to do type casting. For instance, I made a simple bubble sort function and it uses a generic type when sorting the list, which is actually an array of Comparable in this case. If you wish to use an item, do something like: System.out.println((Double)arrayOfDoubles[0] + (Double)arrayOfDoubles[1]); because I stuffed Double(s) into Comparable(s) which is polymorphism since all Double(s) inherit from Comparable to allow easy sorting through Collections.sort()</p>

<pre><code>        //INDENT TO DISPLAY CODE ON STACK-OVERFLOW
@SuppressWarnings(""unchecked"")
public static void simpleBubbleSort_ascending(@SuppressWarnings(""rawtypes"") Comparable[] arrayOfDoubles)
{
//VARS
    //looping
    int end      =      arrayOfDoubles.length - 1;//the last index in our loops
    int iterationsMax = arrayOfDoubles.length - 1;

    //swapping
    @SuppressWarnings(""rawtypes"")
    Comparable tempSwap = 0.0;//a temporary double used in the swap process
    int elementP1 = 1;//element + 1,   an index for comparing and swapping


//CODE
    //do up to 'iterationsMax' many iterations
    for (int iteration = 0; iteration &lt; iterationsMax; iteration++)
    {
        //go through each element and compare it to the next element
        for (int element = 0; element &lt; end; element++)
        {
            elementP1 = element + 1;

            //if the elements need to be swapped, swap them
            if (arrayOfDoubles[element].compareTo(arrayOfDoubles[elementP1])==1)
            {
                //swap
                tempSwap = arrayOfDoubles[element];
                arrayOfDoubles[element] = arrayOfDoubles[elementP1];
                arrayOfDoubles[elementP1] = tempSwap;
            }
        }
    }
}//END public static void simpleBubbleSort_ascending(double[] arrayOfDoubles)
</code></pre>
"
"18030788","<p>The default implementation(had it not been overridden) would print the object as something like</p>

<pre><code>Integer i = 95;
System.out.println(i.getClass().getName() + ""@"" + Integer.toHexString(i.hashCode()));
//java.lang.Integer@5f
</code></pre>

<p>In case of an integer, the <code>hashCode</code> value is the same as the underlying value.</p>
"
"18097942","<pre><code>public static List&lt;Number&gt; union(List&lt;? extends Number&gt; a, List&lt;? extends Number&gt; b) {

    List&lt;Number&gt; es = new ArrayList&lt;Number&gt;();
    for (Number e : a) {
        es.add(e);
    }
    for (Number e : b) {
        es.add(e);
    }
    return es;
}
</code></pre>
"
"18098042","<p>Try this:</p>

<pre><code>public static &lt;E&gt; List&lt;? extends E&gt; union(List&lt;? extends E&gt; a, List&lt;? extends E&gt; b) {
    HashSet&lt;E&gt; set = new HashSet&lt;E&gt;();
    set.addAll(a);
    set.addAll(b);
    return new ArrayList&lt;E&gt;(set);
}
</code></pre>

<p>This in a Union it needs to hold the common elements of both list occurring one and the uncommon elements too. <code>HashSet</code> holds the unique elements.</p>

<p>Test:</p>

<pre><code>public static void main(String... a) {
    List&lt;Integer&gt; l1 = new ArrayList&lt;Integer&gt;();
    l1.add(Integer.valueOf(0));

    List&lt;Long&gt; l2 = new ArrayList&lt;Long&gt;();
    l2.add(Long.valueOf(1));

    List&lt;? extends Number&gt; l3 = union(l1,l2);
    System.out.println(l3);
}
</code></pre>
"
"18163226","<p>replace:</p>

<pre><code> String sql = ""UPDATE name FROM test SET name=eee WHERE id=1"";
</code></pre>

<p>on</p>

<pre><code> String sql = ""UPDATE name FROM test SET name='eee' WHERE id=1"";
</code></pre>
"
"18207757","<pre><code>&lt;script&gt;
    word = ""{\'\i}"";
    a = word.replace(""{"","" """");
    a = a.replace(""}"", """");
    a = a.replace(""'"", """");

&lt;/script&gt;
</code></pre>

<p>Just create another rule with the character you want to replace. 
Not a very good solution but its the most ""clean"".</p>
"
"18271840","<p>Put getters and setters to your class.Or make fields public.(i don't suggest the second)</p>

<pre><code>class GoobyPls {

    public int getCHealth() {
        return CHealth;
    }
    public void setCHealth(int cHealth) {
        CHealth = cHealth;
    }
    public int getMHealth() {
        return MHealth;
    }
    public void setMHealth(int mHealth) {
        MHealth = mHealth;
    }
    public int getCAgility() {
        return CAgility;
    }
    public void setCAgility(int cAgility) {
        CAgility = cAgility;
    }
    public int getMAgility() {
        return MAgility;
    }
    public void setMAgility(int mAgility) {
        MAgility = mAgility;
    }
    public int getCDefence() {
        return CDefence;
    }
    public void setCDefence(int cDefence) {
        CDefence = cDefence;
    }
    public int getMDefence() {
        return MDefence;
    }
    public void setMDefence(int mDefence) {
        MDefence = mDefence;
    }
    private int CHealth = 20;
    private int MHealth = 20;
    private int CAgility = 10;
    private int MAgility = 10;
    private int CDefence = 5;
    private int MDefence = 5;
}  
</code></pre>

<p>Then you can access like this:</p>

<pre><code>class Stats {
public static void foo() {
GoobyPls gbp=new GoobyPls();
    string Health =  gbp.getCHealth + ""/"" + MHealth ;
    string Agility = gbp.getCAgility + ""/"" + MAgility;
    string Defence = gbp.getCDefence + ""/"" + MDefence;
}
</code></pre>
"
"18283659","<p><em>Turning my comment into an answer:</em></p>

<p>One possible solution:</p>

<pre><code>boolean flag = true;
while(flag)
{   
    System.out.print("" Value: "");
    current = input.nextInt();
    int newtotal = current + total;
    total = newtotal; 
    System.out.println(""The total so far is: "" + total);
    if(current == 0)
        flag = false;
}
</code></pre>

<p>Another possible solution:</p>

<pre><code>while(true)
{
    System.out.print("" Value: "");
    current = input.nextInt();
    int newtotal = current + total;
    total = newtotal; 
    System.out.println(""The total so far is: "" + total);
    if(current == 0)
        break;
}
</code></pre>
"
"18283693","<p>What about the next:</p>

<pre><code>Scanner input = new Scanner(System.in);

System.out.print(""Type in a bunch of values and I'll ad them up. "");
System.out.println( ""I'll stop when you type a zero."" );

int total = 0;
for (int current = -1; current != 0;) {
    System.out.print("" Value: "");
    current = input.nextInt();
    total += current; 
    System.out.println(""The total so far is: "" + total);
}

System.out.println( ""Final total: "" + total);
</code></pre>
"
"18288976","<p>You could do this:</p>

<pre><code>public class Item {

public Item(int id, string name, float price, int amount, int ArrayID) {
if (ArrayID == 1) { 
ID1 = id;
name1 = name;
price1 = price;
amount1 = amount;
}
if (ArrayID == 2) { 
ID2 = id;
name2 = name;
price2 = price;
amount2 = amount;
}
if (ArrayID == 3) { 
ID3 = id;
name3 = name;
price3 = price;
amount3 = amount;
}
if (ArrayID == 4) { 
ID4 = id;
name4 = name;
price4 = price;
amount4 = amount;
}

}

//ArrayID #1
public static int ID1;
public static String name1;
public static float price1;
public static int amount1;

//ArrayID #2
public static int ID2;
public static String name2;
public static float price2;
public static int amount2;

//ArrayID #3
public static int ID3;
public static String name3;
public static float price3;
public static int amount3;

//ArrayID #4
public static int ID4;
public static String name4;
public static float price4;
public static int amount4;


public static int[] id = ID1, ID2 ID3, ID4;
//so forth...
}
</code></pre>
"
"18412730","<p>Object oriented programming saves you having to do long if statements. Calculate the number of arguments once, and create an instance of the specific class for that scenario. Then you can call any method on that instance and it will act in a 'do whatever' manner for that situation.</p>

<p>(forgive my rusty Java...)</p>

<pre><code>public interface Arguments{

   void foo();
}

public class OneArgument implements Arguments{


   public void foo(){
      // do whatever
   }
}

public class TwoArguments implements Arguments{


   public void foo(){
      // do whatever
   }
}

public class ThreeArguments implements Arguments{


   public void foo(){
      // do whatever
   }
} 
</code></pre>

<p>Then you could have a factory method:</p>

<pre><code>public static Arguments create(String[] args){

   if(args.length == 1) return new OneArgument();
   else if(args.length == 2) return new TwoArguments();
   else if(args.length == 3) return new ThreeArguments();
   else throw new Exception();

} 
</code></pre>

<p>Better thought out architecture will most likely yield better performance in the long run.  </p>
"
"18453688","<p>This is very simple and does not require 'matcher/pattern' regex. Try This:</p>

<pre><code>HashMap&lt;String, String&gt; x = new HashMap&lt;String, String&gt;();

String line = ""LOCALHOST = https://192.168.56.1"";

String[] items = line.split(""="");

x.add(items[0], items[1]);
</code></pre>
"
"18547614","<p>You can use this also <code>\b(?:(?&lt;="")[^""]*(?="")|\w+)\b</code>. This will find all the strings which surrounded with <code>Double qoutes</code> (""example""). </p>

<p>Sample Code:</p>

<blockquote>
  <p>String line=""\""Hello\"" World"" <br>
  Pattern pattern = Pattern.compile(""\b(?:(?&lt;=\"")[^\""]*(?=\"")|\w+)\b""); <br>
  Matcher matcher = pattern.matcher(line); <br>
  while(matcher.find()) { <br>
   //replace the string with you string <br>
  } <br></p>
</blockquote>

<p>The output will be
Actual line: ""Hello"" World
Answer : ABC World</p>
"
"18569610","<p>Try this,</p>

<pre><code>    String inputValue = ""00669253"";
    String multipleValue=""87654321"";

    int result = 0;
    for (int i = 0; i &lt; inputValue.length(); i++)
            {
                result += Integer.parseInt(Character.toString(inputValue.charAt(i))) * 
                Integer.parseInt(Character.toString(multipleValue.charAt(i)));
            }
</code></pre>
"
"18592778","<p>Try this </p>

<pre><code>if(map.containsKey(key)){
            map.remove(map.get(key));
        }
</code></pre>
"
"18608005","<p>If you know that your node will store only Number you could restrict it. </p>

<pre><code>public class Node&lt;T extends Number&gt; {

    private final T value;

    public Node(T val) {
        this.value = val;
    }

    public T evaluate() {
         return value;
    };

    public Class&lt;? extends Number&gt; type() { 
      return value.getClass();
    }       

}
</code></pre>
"
"18657139","<p>Try this</p>

<pre><code>new CountDownTimer(365*24*60*60, 3000) {

 public void onTick(long millisUntilFinished) {
     String timeStamp = new SimpleDateFormat(
                        ""yyyy.MM.dd HH:mm:ss"").format(Calendar
                        .getInstance().getTime());
                System.out.println(""TimeStamp: "" + timeStamp);
                // Read And Write Register Sample
                port = Integer.parseInt(gConstants.port);
                String refe = ""0"";// HEX Address
                ref = Integer.parseInt(refe, 16);// Hex to int
                count = 10; // the number Address to read
                SlaveAddr = 1;
                astr = gConstants.ip; // Modbus Device

                InetAddress addr;
                try {
                    addr = InetAddress.getByName(astr);
                    con = new TCPMasterConnection(addr); // the
                    // connection
                } catch (UnknownHostException e2) {
                    // TODO Auto-generated catch block
                    e2.printStackTrace();
                }

                // 1.Prepare the request
                /************************************/
                Rreq = new ReadMultipleRegistersRequest(ref, count);
                Rres = new ReadMultipleRegistersResponse();

                Rreq.setUnitID(SlaveAddr); // set Slave Address
                Rres.setUnitID(SlaveAddr); // set Slave Address

                // 2. Open the connection
                con.setPort(port);
                try {
                    con.connect();
                    System.out.println(""Kapcsolódva!"");
                } catch (Exception e1) {
                    // TODO Auto-generated catch block
                    e1.printStackTrace();
                }
                con.setTimeout(2500);
                // 3. Start Transaction
                trans = new ModbusTCPTransaction(con);
                trans.setRetries(5);
                trans.setReconnecting(true);
                trans.setRequest(Rreq);

                try {
                    trans.execute();
                } catch (ModbusIOException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                } catch (ModbusSlaveException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                } catch (ModbusException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
                /* Print Response */
                Rres = (ReadMultipleRegistersResponse) trans
                        .getResponse();

                System.out.println(""Connected to=  "" + astr
                        + con.isConnected() + "" / Start Register ""
                        + Integer.toHexString(ref));

                count = 10;
                for (int k = 0; k &lt; count; k++) {
                    System.out.println(""The value READ: ""
                            + Rres.getRegisterValue(k) + "" ""
                            + Rres.getUnitID());
                    ki_adat = ki_adat + Rres.getRegisterValue(k) + ""\n"";


                    // Adatbázisba írás
                    ContentValues modbusData = new ContentValues();
                    modbusData.put(""Value"", Rres.getRegisterValue(k)); // tábla
                                                                        // +
                                                                        // érték
                    modbusData.put(""timeStamp"", timeStamp);
                    try {
                        gConstants.db.beginTransaction();
                        gConstants.db
                                .insert(""Modbus"", null, modbusData);
                        gConstants.db.setTransactionSuccessful();
                    } finally {
                        gConstants.db.endTransaction();
                    }

                }
                kiir.setText(ki_adat);
                ki_adat = """";
 }

 public void onFinish() {}
}.start();
</code></pre>
"
"18804739","<p>I think following is what you are trying to achieve. Please see the comments which are marked with &lt;======= : </p>

<pre><code>    ... 
    //boolean volumeTwo = true; // &lt;======= Manoj - COMMENT THIS LINE  
    double volumeTwo = 1.0; // &lt;=========== Manoj - any non-zero for that matter
    ... 

    ... 
    while(volumeTwo != 0.0){
    ... 
              //math
      volume = .33333 * pie * radius * radius * hieght;
      System.out.printf (""Volume =       "" + volume);
      volumeTwo = volume; // &lt;=============== Manoj - update volumeTwo with calculated volume 
                          // &lt;===============       - when volumeTwo becomes 0.0 loop quits 
</code></pre>
"
"18913297","<p>You are having currentWeek count. Then currentWeek -1 will give the previous week.</p>

<pre><code>int previousWeekNum = 0;
calender.add(Calendar.WEEK_OF_YEAR, -1);
previousWeekNum = calender.get(Calendar.WEEK_OF_YEAR);
</code></pre>
"
"19020346","<p>Your current program returns organisms on a given day. If you want organisms from 1 to nth day then you can use a for loop as below :</p>

<pre><code>double[] organismsArr = new double[days];
for(int i=1;i&lt;=days;i++)
organisms[i-1] = showPopulation(i, days, organisms + organisms*(dailyIncrease/100), dailyIncrease);
</code></pre>
"
"19041394","<pre><code>int position = 3; Array starts from 0. 4th index points the fifth value.

int position = 3;
if(ar.length &gt; position)
  {
     ar[position] = 6;
  }
</code></pre>
"
"19060653","<p>Are you sure with this?</p>

<pre><code>    Cylinder[] volume = new Cylinder[3]; 

    for (int counter = 0; counter &lt; 6; counter++)
    {
        double radius = Double.parseDouble(JOptionPane
                .showInputDialog(""Enter the radius""));
        double height = Double.parseDouble(JOptionPane
                .showInputDialog(""Enter the height""));
        volume[counter++] = new Cylinder(radius, height); 
        //counter will count up to 5 (Array out of Bounds exception for sure..)
        //also: why are you incrementing counter by yourself?
    }
</code></pre>
"
"19093280","<pre><code>for (Map.Entry&lt;Integer, Point3d&gt; entry : coOrdinates.entrySet()) {
    Point3d point = entry.getValue());
}
</code></pre>
"
"19107681","<p>Use a private instance variable for your ArrayList so your program will keep track of it once your method has terminated.</p>

<p>You can declare it like this: </p>

<pre><code>private ArrayList nameOfYourList;
</code></pre>
"
"19139097","<p>You've to pass context to that AsyncTask.</p>

<p>Then, on postExecute, cast context to your Activity.</p>

<p>Example:</p>

<pre><code>((MyActivity)context).doSomethingWithResults(resultOfAsyncTask);
</code></pre>

<p>Edit:</p>

<p>Your Activity:</p>

<pre><code>public class MyActivity extends Activity {
    @Override
    public void onCreate(Bundle savedInstanceState){
        super.onCreate(savedInstanceState);
        new MyAsyncTask(this).execute();
    }

    public void sayHello(String name){
        Log.d(""log"",""hello ""+name+""!!!"");
    }
}   
</code></pre>

<p>Your asynctask:</p>

<pre><code>class MyAsyncTask extends AsyncTask&lt;String,String,String&gt;{
    Context context;
    public AutoPassarImatges(Context cont) {
        super();
                    this.context = cont;
        // TODO Auto-generated constructor stub
    }

    @Override
    protected String doInBackground(String... params) {
        [.......]

        return null;
    }

    @Override
    protected void onPostExecute(String result) {
        ((MyActivity)context).sayHello(result);
    }



}
</code></pre>
"
"19147985","<p>Add a loop:</p>

<pre><code>int inputNum = //whatever ;
int counter = 1;
boolean po3 = false;
while(counter&lt;inputNum || po3==true){
 if((counter*counter*counter)==inputNum){
  po3 = true;
 } else {
  counter++;
 }
}
</code></pre>
"
"19151762","<p>//we can use column width for sheet</p>

<pre><code>Ex: sheet.setColumnWidth(0, 2000);
</code></pre>
"
"19177043","<p>Create another <code>Map</code> that holds the relationship key->intermediateKey. The intermediate key may be a GUID or something else that is automatically generated and guaranteed to be unique.</p>

<pre><code>  Map&lt;String, GUID&gt; first = new HashMap&lt;String, GUID&gt;();
  first.put(key1, guid1);
  first.put(key2, guid1);

  Map&lt;GUID, ValueType&gt; second = new HashMap&lt;GUID, ValueType&gt;();
  second.put(guid1, value1);
</code></pre>

<p>Alternatively (although I find it far more complicated, and less flexible), you could play with the keys. If <code>key1.equals(key2)</code> (and, consequently, <code>key2.equals(key1)</code> &amp;&amp; (key1.hashCode() == key2.hashCode<code>) then</code>Map.get(key1)<code>will return the same value than</code>Map.get(key2)`.</p>
"
"19310718","<p>Add <code>-1</code> </p>

<p><code>add(int field,int amount)</code>
Adds or subtracts the specified amount of time to the given calendar field, based on the calendar's rules. For example, to subtract 1 hours from the current time of the calendar, you can achieve it by calling:</p>

<pre><code>Calendar cal = Calendar.getInstance();
cal.add(Calendar.HOUR, -1);
</code></pre>
"
"19327324","<p>As I understand, EJP proposed to regenerate your input files using <code>writeUnshared</code> technique instead of <code>writeObject</code> to make object available for GC during reading. If it's about regenerating original content, then may be you could switch to some other serializer like <a href=""https://code.google.com/p/kryo/wiki/V1Benchmarks"" rel=""nofollow"">Kryo</a>? </p>

<blockquote>
  <p>Java's built-in serialization is slow, inefficient, and has many well-known problems (see Effective Java, by Josh Bloch pp. 213).</p>
</blockquote>

<p>Their promised serialized object size is 5x smaller than standard Java's, so memory consumption should be at least 5x smaller, I think.</p>

<p><strong>EDIT</strong></p>

<p>Better wording: 5x-7x heavier serialized objects most probably mean that <code>ObjectInputStream</code> is a memory eater, e.g. uses too much for the job, though frees that memory in the end.</p>
"
"19340450","<p>well if you need to guarantee a Happens-Before, i think you can create a Synchronized block, holding the Object you want to lock, then in this block, do what you want it to be done before using this object, then invoke your stuff from the Object, then release</p>

<p>for instance </p>

<pre><code>public void doSomething(){
    synchronized(myObject){
        doAnotherThing();
        myObject.doStuff();
    }
}
</code></pre>

<p>i didnt try the ConcurrentMap before by the way ... and by the way, please clarify your example because i think i didnt get you right !!</p>
"
"19379088","<pre><code>   String result="""";
   result=(x%3 == 0 &amp;&amp; x%5 == 0 ? ""ab"" : x%5 == 0 ? ""a"" : x%3 == 0 ? ""b"" : ""not divisible to any number"" );
   System.out.println(result);
</code></pre>
"
"19522449","<p>You can refer this link they are providing the sample example on equals method</p>

<pre><code>http://geeklabs.co.in/corejava/EqualsOprtr.html
</code></pre>
"
"19578741","<p>We need to examinate two things:</p>

<ol>
<li>What does the wildcard mean in the signature <code>void doStuff(Foo&lt;? super Bar&gt; foo)</code></li>
<li>What does the wildcard mean inside the method body</li>
</ol>

<p>Java has <strong>only one very simple rule</strong> to decide the subtype relation between <code>Foo&lt;A&gt;</code> and <code>Foo&lt;B&gt;</code>: <strong>none is a subtype of the other</strong>. We say that generic types are invariant, and even if there's a rationale because the Java designers made it this way, from your point of view it's an arbitrary decision.</p>

<p>It's the angle brackets that confuse us, poor developers: we have no problem in accepting that <code>FooBar</code> and <code>FooQoo</code> are not related in any way; but for some reason we need to believe that <code>Foo&lt;Qoo&gt;</code> and <code>Foo&lt;Bar&gt;</code> are. No, that's not the case.</p>

<blockquote>
  <p>No matter how A and B relate to each other, <code>X&lt;A&gt;</code> and <code>X&lt;B&gt;</code> are not
  related.</p>
  
  <p>No matter how A and B relate to each other, <code>X&lt;A&gt;</code> and <code>X&lt;B&gt;</code>
  are not related.</p>
  
  <p>No matter how A and B relate to each other, <code>X&lt;A&gt;</code>
  and <code>X&lt;B&gt;</code> are not related.</p>
</blockquote>

<p>Once you are convinced of the above, please observe this snippet:</p>

<pre><code>List&lt;Double&gt; doubles = ...;
List&lt;Integer&gt; integers = ...;

Number firstDouble = doubles.get(0);
Number firstInteger = integers.get(0);
</code></pre>

<p>Calling <code>get(0)</code> on both lists gives us a Number-compatible object. We may want to put the call to <code>get()</code> in a method like <code>getFirstOfList(list)</code> but we just learned that such a method can't exist, because it would accept two totally unrelated types.</p>

<p>This is where <strong>wildcards</strong> come into play! We observe that calling <code>get()</code> on a <code>List&lt;Number&gt;</code>, a <code>List&lt;Integer&gt;</code>, a <code>List&lt;Double&gt;</code> (and so on) return a <em>Number-compatible</em> object (ie <code>Number</code> or a subtype of it), so there must be a way to express this at the language level. The Java designers gave us the wildcard, which works like this: when you declare</p>

<pre><code>public void doStuff(List&lt;? extends Number&gt; arg);
</code></pre>

<p>it has the same effect as declaring the following <strong>infinite</strong> list:</p>

<pre><code>public void doStuff(List&lt;Number&gt; arg);
public void doStuff(List&lt;Integer&gt; arg);
public void doStuff(List&lt;Double&gt; arg);
public void doStuff(List&lt;Float&gt; arg);
public void doStuff(List&lt;BigDecimal&gt; arg);
...
</code></pre>

<p>Without the device of the wildcard you'd have to write one method for each supported list type (which btw is illegal in Java, but that's another story).</p>

<p>The wildcard I used in my example has an <em>upper</em> bound, identified by the <code>extends</code> keyword. The snippet you pasted, instead, adopts a <em>lower</em> bounded wildcard in the method signature (<code>super</code>). Actually it may contain some errors because for example:</p>

<ol>
<li>you can't pass a <code>List&lt;Integer&gt;</code> to <code>doStuff()</code></li>
<li>you can only get an <code>Object</code> from <code>list.get(index)</code></li>
</ol>

<p>so I will just tell you that the signature</p>

<pre><code>void doStuff(List&lt;? super Number&gt; arg);
</code></pre>

<p>stands for the <strong>finite</strong> list:</p>

<pre><code>void doStuff(List&lt;Number&gt; arg);
void doStuff(List&lt;Object&gt; arg);
</code></pre>

<p>and you can put any <code>Number</code> you like in a <code>List&lt;? super Number&gt;</code> but you'll only <code>get()</code> <code>Object</code>'s from it.</p>
"
"19585017","<p>This is not the best way to solve this problem, but it will do it:</p>

<pre><code>int deltaX = 0;
while(deltaX = 0) {
      deltaX = -5 + v.nextInt(10);
}
System.out.println(deltaX);
</code></pre>
"
"19634192","<pre><code>String text;
text = ""3.14159265358979323846264338327950288419716939937510582097494459230781640628"";
int index = 0; 
while (index&lt;text.length()) {
    String string = text.substring(index, Math.min(index+10,text.length()));

    //function to process 10 digits. if true break
    if(processDigits(string))
         break;

    index+=10;
}
</code></pre>
"
"19641445","<p>Here is updated code in which i have removed logic of flag.This is shorter and easier to understand.</p>

<pre><code>public static int sumOfOddDigits(long number){
    int sum = 0;
    String newString = new StringBuilder(String.valueOf(number)).reverse().toString();
    number = Long.parseLong(newString);

    while (number != 0){
        sum = (int) (sum + number % 10);
        number = number / 100;
    }
    return sum;
}
</code></pre>
"
"19688407","<p>You may need <code>repaint</code> and <code>invalidate</code>.</p>

<p>try </p>

<pre><code>signInProgressBar.invalidate();
signInProgressBar.repaint();
</code></pre>

<p>and why you set always 5 for <code>signInProgressBar.setValue</code></p>
"
"19804878","<p>try this </p>

<pre><code>int pay = 80;
int bonus = 65;
System.out.println(pay+"" ""+ bonus+"" ""+bonus+"" ""+pay);
</code></pre>

<p>Try to study basics of java</p>
"
"19859171","<p>Try this out :</p>

<pre><code>SimpleDateFormat formatDate = new SimpleDateFormat(""yyyy-MM-dd"");
String formattedDate = formatDate.format(new Date()); // Sample date to be formatted
System.out.println(formattedDate); // Watch the output
</code></pre>
"
"19900619","<p>You can use Base64 encoding. This encoding is more suitable and portable for save binary data into string.</p>

<p>Base64 api in java :</p>

<pre><code>sun.misc.BASE64Encoder;
sun.misc.BASE64Decoder;
</code></pre>
"
"19976831","<p>Go to setting -> about device -> status -> my phone number  if my phone number is unknown u won't get mobile number.. because  some of the mobile network won't give mobile number..</p>

<p>if my mobile number has number u can get mobile through following code</p>

<pre><code>TelephonyManager tManager = (TelephonyManager)getSystemService(Context.TELEPHONY_SERVICE);
    phoneNumber = tManager.getLine1Number();
</code></pre>
"
"20005854","<pre><code>    private int indexOf(int searchingNum)
    {
         for (int index = 0; index &lt; count; index++){
           if (numberArray[index] == searchingNum)
          return index;
    }
    else return -1;

  }
</code></pre>

<p>change the ""FOR"" brace</p>
"
"20027719","<p><code>R2D2</code> is of type String while the single quotes around a character (as in <code>'a'</code>) makes it a character literal. Strings cannot be assigned, or compared to a, character. That's the reason.</p>

<p>There are two kinds of problems in the code.</p>

<pre><code>1. `R2D2= lineOne.charAt(i); // a character being assigned to a String variable`
</code></pre>

<p>Solution: <code>R2D2 = Character.toString(lineOne.charAt(i));</code></p>

<pre><code>2. `if (R2D2== 'a'|| R2D2=='A')` //strings being compared with char literals.
</code></pre>

<p>Solution:  <code>if (R2D2.equals(""a"")|| R2D2.equals(""A""))</code></p>

<p>FYI, To improved the maintenance you can also do.</p>

<pre><code>if(R2D2.equalsIgnoreCase('a'))
</code></pre>
"
"20043099","<p>Roughly speaking, recursion and iteration perform the
same kinds of tasks: ! Solve a complicated task one piece at a time, and
combine the results. </p>

<p><strong>Emphasis of iteration</strong>: ! keep repeating until a task is “done”
e.g., loop counter reaches limit,linked list reaches null pointer,instream.eof() becomes true  </p>

<p><strong>Emphasis of recursion:</strong> ! Solve a large problem by breaking it up into smaller
and smaller pieces until you can solve it; combine the results.</p>

<p>Please see code examples for better understanding:</p>

<p>//--------------- iterative version ---------------------    </p>

<pre><code>static int FibonacciIterative(int n)
{
    if (n == 0) return 0;
    if (n == 1) return 1;

    int prevPrev = 0;
    int prev = 1;
    int result = 0;

    for (int i = 2; i &lt;= n; i++)
    {
        result = prev + prevPrev;
        prevPrev = prev;
        prev = result;
    }
    return result;
}
</code></pre>

<p>//--------------- naive recursive version --------------------- </p>

<pre><code>static int FibonacciRecursive(int n)
{
    if (n == 0) return 0;
    if (n == 1) return 1;

    return FibonacciRecursive(n - 1) + FibonacciRecursive(n - 2);
}
</code></pre>
"
"20082665","<p>You need to stop dealing cards when there's no more cards to deal.</p>

<pre><code>public String dealCard(int i){

    cardsRemaining--;

    if(cardsRemaining &gt;= 0) {
        return deckOfCardsArray[i].dealCard();
    }
}
</code></pre>
"
"20175180","<p>Manipulating a String using <code>.substring</code> in Java</p>

<p><a href=""http://www.gleegrid.com/all_in_one/language/substring"" rel=""nofollow"">www.gleegrid.com/all_in_one/language/substring</a></p>
"
"20340655","<p>You have to initialize the variable so that it is actually pointing to something it can use</p>

<p>ie;</p>

<pre><code>int x = new int;
x = 69;
</code></pre>
"
"20342311","<p>Refer this link
<a href=""http://www.javapractices.com/topic/TopicAction.do?Id=62"" rel=""nofollow"">http://www.javapractices.com/topic/TopicAction.do?Id=62</a></p>

<p>you can refer this program and make use i suppose, give 1 as START and 100 as END, generate and then proceed... 
    import java.util.Random;</p>

<pre><code>/** Generate random integers in a certain range. */
public final class RandomRange {

public static final void main(String... aArgs){
log(""Generating random integers in the range 1..10."");

int START = 1;
int END = 10;
Random random = new Random();
for (int idx = 1; idx &lt;= 10; ++idx){
  showRandomInteger(START, END, random);
}

log(""Done."");
}

private static void showRandomInteger(int aStart, int aEnd, Random aRandom){
if (aStart &gt; aEnd) {
  throw new IllegalArgumentException(""Start cannot exceed End."");
}
//get the range, casting to long to avoid overflow problems
long range = (long)aEnd - (long)aStart + 1;
// compute a fraction of the range, 0 &lt;= frac &lt; range
long fraction = (long)(range * aRandom.nextDouble());
int randomNumber =  (int)(fraction + aStart);    
log(""Generated : "" + randomNumber);
}

private static void log(String aMessage){
System.out.println(aMessage);
}
} 
</code></pre>
"
"20372202","<p>this maybe work</p>

<pre><code>    String s=""20*12"";
    String opReg=""\\D"";
    Pattern opp=Pattern.compile(opReg);
    Matcher m = opp.matcher(s);
    int output=0;
    if(m.find()){
        String op=m.group();
        String[] vars=s.split(opReg);
        int var1=Integer.valueOf(vars[0]),
                var2=Integer.valueOf(vars[1]);
        System.out.println(op);
        switch(op.charAt(0)){
        case '*':
            output=var1*var2;
            break;
        case '/':
            output=var1/var2;
            break;
        case '+':
            output=var1+var2;
            break;
        case '-':
            output=var1-var2;
            break;
        }
    }
    System.out.println(output);
</code></pre>
"
"20376762","<p>Change this:</p>

<pre><code>while (first.isAlive() &amp; second.isAlive())
</code></pre>

<p>to this</p>

<pre><code>while (first.isAlive() &amp;&amp; second.isAlive())
</code></pre>
"
"20470363","<p>Run a <code>for</code> loop that runs from 0 to <code>length-1</code> of your stream</p>

<pre><code>for(int i = 0 ; i &lt; stream.length-1 ; i++)
{
    Pair pair = new Pair(stream[i], stream[i+1]);
    // then add your pair to an array
}
</code></pre>
"
"20491008","<pre><code>String url = ""file:///android_asset/""+pos+"".html"";
web.loadUrl(url);
</code></pre>
"
"20511543","<pre><code>    boolean b = false;
    for (int i = 0; i &lt; array2.length; i++) 
    {

        for (int a = 0; a &lt; array1.length; a++)
        {

            if (array2[i].equals(array1[a]))
            {
                b = true;
                break;
            }
            else
            {
                b = false;

            }
        }
        if(b)
            return b;
    }
}  
</code></pre>
"
"20580011","<p>try this </p>

<p>use in activity </p>

<pre><code>    nameValuePairs2 = new  ArrayList&lt;NameValuePair&gt;();
 nameValuePairs2.add(new BasicNameValuePair(""username"",username));
nameValuePairs2.add(new BasicNameValuePair(""password"",password));
     try{
             HttpClient httpclient = new DefaultHttpClient();
             HttpPost httppost = new HttpPost(mainurl+""registration.php"");
             httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs2));
             HttpResponse response = httpclient.execute(httppost);
             String the_string_response = convertResponseToString(response);
         //    Toast.makeText(getApplicationContext(), ""Response "" + the_string_response, Toast.LENGTH_LONG).show();
         }catch(Exception e){
             //  Toast.makeText(getApplicationContext(), ""ERROR "" + e.getMessage(), Toast.LENGTH_LONG).show();
            //   System.out.println(""Error in http connection ""+e.toString());
         } 
</code></pre>

<p>and in php file </p>

<pre><code>$sql=""insert into login (username,password)values('"".$_REQUEST['username'].""','"".$_REQUEST['password'].""')"";
 $r=mysql_query($sql);
 if(!$r)echo ""Error in query: Record not submitted"";
else echo ""data submitted successfully"";
 mysql_close();
</code></pre>
"
"20597553","<p>You have to override the <code>toString</code> method in the Students class.</p>

<p>e.g.:</p>

<pre><code>@Override 
public String toString() {

StringBuilder result = new StringBuilder();

result.append(something);
.....
return result.toString();
}
</code></pre>
"
"20640217","<p>Here this works but maybe I didnt understand your question</p>

<pre><code>    String email1 = new String(""william.burroughs@gmail.com"");
    String email2 = new String(""williamburroughs@gmail.com"");

     Pattern emailFinder = Pattern.compile(""gmail.com"");
     Matcher emailmatcher = emailFinder.matcher(email1);
     Matcher emailmatcher1 = emailFinder.matcher(email2);
     if (emailmatcher.find() &amp;&amp; emailmatcher1.find()) {

            email1 = email1.replaceAll(""."","""");
            email2 = email2.replaceAll(""."","""");

            if(email1.equals(email2)){
                System.out.println(""The values match"");
            }

     }
</code></pre>
"
"20651233","<pre><code>    for(iterate array){
    try{
         Thread.sleep(10000);
    catch(InterruptedException ie){
   }
}
</code></pre>
"
"20662711","<p>Try this:</p>

<pre><code>try
  {
  FileInputStream in = new FileInputStream(""BOTsettings.txt"");
  BufferedReader br = new BufferedReader(new InputStreamReader(in));
  String strLine;

  while((strLine = br.readLine())!= null)
  {
   System.out.println(strLine);
  }

  }catch(Exception e){
   System.out.println(e);
  }
</code></pre>

<p>And then just store strLine in an array or something like this.</p>
"
"20739037","<p>If we declare a variable as <code>final</code>  , we can't change its value. </p>

<p>Remove the <code>final</code> keyword , then you can change its value. </p>
"
"20753761","<pre><code>    Map&lt;String, ?&gt; value = null;  // initialize 
    Map&lt;String, Object&gt; val = (Map&lt;String, Object&gt;) value; //cast
</code></pre>
"
"20873096","<p>String can take a char array as a constructor. </p>

<pre><code>String s = new String(k);
</code></pre>
"
"20895210","<p>try to initialize the string ""s"" to a null value, since you have declared a variable ""s"" but it has not been initialized. Hence it can't pass the reference of that variable while used as parameter.</p>

<pre><code>String s = null;
</code></pre>

<p>Hope this helps</p>
"
"20895484","<p>You declare local variable <code>s</code> in method <code>create</code>, so that you need to initialized it before you use it. Remember that java does not have default value for local variable.
Init <code>String s = """"</code> or whatever value than your code will run normally.</p>
"
"20922488","<p>I agree with JoniK. This can be done in a single line like this.</p>

<pre><code>if(hashM.values().containsAll(arrayL)) {// put your code here that will be returned}
</code></pre>
"
"21037502","<p>Any Static member can be accessed by Directly class name as <strong>TestClass1.a</strong> no need of instance for it </p>

<pre><code>  System.out.println(TestClass1 .a);
</code></pre>

<p>output:
10</p>
"
"21082751","<p>In the main class make sure you have set:</p>

<pre><code>public static JTextArea textArea;
</code></pre>

<p>and then you can do:</p>

<pre><code>MainClass.textArea.setText("""");
</code></pre>

<p>Hope this helps!</p>
"
"21090248","<p>Try this </p>

<pre><code>CREATE TABLE IF NOT EXISTS Lid (
        lid_id          INT(2)      NOT NULL,
        naam            VARCHAR(45) NOT NULL,
        email           VARCHAR(45) NOT NULL,
        tel_nummer      VARCHAR(45) NOT NULL,
        score           INT(2)      NOT NULL,
        expertise       VARCHAR(45) NOT NULL,
        team_id         INT(2)      NOT NULL,
primary key (lid_id));

CREATE TABLE IF NOT EXISTS Team (
        team_id     INT(2)          NOT NULL,
        naam        VARCHAR(45) NOT NULL,
        score       INT(2)          NOT NULL,
        captain     INT(2)          NOT NULL,
        expertise   VARCHAR(45) NOT NULL,
primary key (team_id),
foreign key (captain) references Lid(lid_id));

ALTER TABLE Lid ADD foreign key (team_id) references Team(team_id);
</code></pre>
"
"21133074","<p>protected void setStartUpWorldValues() {</p>

<pre><code>    earth.setPlanetColonies(1);  //Set planet colonies to 1
    earth.setPlanetMilitary(1); // set planet military to 1 
    earth.setColonyImmigration(1000); // set planet population to 1000 
    earth.setBaseProtection(100);   // set Planet armed force to 100
    earth.turnForceFieldOn();  // Turn on the planet force field

 setStartUpScreenText() ;
    TextView planetNameValue = (TextView)findViewById(R.id.dataView1);
    planetNameValue.setText(earth.planetName);
    TextView planetMassValue = (TextView)findViewById(R.id.dataView2);
    planetMassValue.setText(String.valueOf(earth.planetMass));
    TextView planetGravityValue = (TextView)findViewById(R.id.dataView3);
    planetGravityValue.setText(String.valueOf(earth.planetGravity));
    TextView planetColoniesValue = (TextView)findViewById(R.id.dataView4);
    planetColoniesValue.setText(String.valueOf(earth.planetColonies));
    TextView planetPopulationValue = (TextView)findViewById(R.id.dataView5);
    planetPopulationValue.setText(String.valueOf(earth.planetPopulation));
    TextView planetMilitaryValue = (TextView)findViewById(R.id.dataView6);
    planetMilitaryValue.setText(String.valueOf(earth.planetMilitary));
    TextView planetBasesValue = (TextView)findViewById(R.id.dataView7);
    planetBasesValue.setText(String.valueOf(earth.planetBases));
    TextView planetForceFieldValue = (TextView)findViewById(R.id.dataView8);
    planetForceFieldValue.setText(String.valueOf(earth.planetProtection));      
}
private void setStartUpScreenText() {
    // TODO Auto-generated method stub

}
</code></pre>
"
"21194558","<p>Try this:</p>

<pre><code>System.out.println(""&gt;_"");
playerCommand = input.nextLine();
loop: while (playerCommand) {
    switch (playerCommand) {
    case ""go north"":
    case ""n"":
        alleywayGoNorth();
        break loop;
    case ""go south"":
    case ""s"":
        alleywayGoSouth();
        break loop;
    case ""open door"":
    case ""o door"":
        alleywayOpenDoorLocked();
        break loop;
    default:
        System.out.println(""That command is not valid at the moment."");
        break;
    }
    playerCommand = input.nextLine();
} 
</code></pre>

<p>Disclaimer: I did not run this code, you'll have to test it yourself.</p>
"
"21212549","<p>I don't get your question.I think you wanna give an option to the user to giv input from the console application.</p>

<pre><code>package MyExamples;

import java.util.Scanner;

public class GetInputFromUser {
    public static void main(String srgs[])
    {
    int a,b,c;

        Scanner input=new Scanner(System.in);
    System.out.println(""Enter first value ="");
    a=input.nextInt();
    System.out.println(""Enter second value ="");
    b=input.nextInt();

    c=a+b;

    System.out.println(""Output is ""+c);


    }
}
</code></pre>
"
"21320268","<p>To get a random number in a range, it is best to do the following instructions.</p>

<pre><code> Random rnd = new Random();
 range = (int) (rnd.nextDouble() * (max-min)+ min);
</code></pre>
"
"21339650","<p>I'm a newbie. <strong>SO I MIGHT BE WRONG</strong>! But your code MAY or MAY NOT work. Is that the run of a Runnable or thread? Note this: </p>

<pre><code>MyClass implements Runnable {

 public void run() {
 ....synchronized(this)..
 }

}

Thread t1 = new Thread(new MyClass());
Thread t2 = new Thread(new MyClass());
</code></pre>

<p>Many of us do it like that(I did it, do it:), and yey! Each thread will obtain a lock on different obj, and you can end up with unexpected results, unless the OS uses some mechanism to sync writes to the same file (I don't know). If it does, then your synchonized is useless(useless anyway in my example), if it doesn't you're pretty.... Also as a note, there may be another process using this output.txt of which we have no idea...complicated stuff, at least for me</p>

<p>My opinion is that synchronized is useful if you have <strong>one</strong> instance of the class which <strong>SHARES</strong>, <strong>MUTABLE</strong>, <strong>STATE</strong>. (Let's forget about synchronized and static for now)</p>

<p>Does MyClass have state? No. Is it shared? NO, not in my example. Will it work? Not like this. Probably like this?</p>

<pre><code>MyClass mc = new MyClass()
Thread t1 = new Thread(mc);
Thread t2 = new Thread(mc);
</code></pre>

<p>PS: I forgot to call start on every thread.</p>
"
"21379050","<p>You can just use </p>

<pre><code>import NewClass;

public ClassName
{
   public static void main(String args[])
   {
      //Your code
      NewClass.setDepth(DoubleValue)
     //Continue code
   }
}
</code></pre>

<p><code>import NewClass;</code> is very important and it makes all the methods accessible in the other class</p>
"
"21461355","<p>This is the utility class I created for this purpose. It has runtime and non-runtime versions, and also provides for verifying the tail end of the retrieved source.</p>

<pre><code>   import  java.io.BufferedInputStream;
   import  java.io.IOException;
   import  java.io.InputStream;
   import  java.net.MalformedURLException;
   import  java.io.EOFException;
   import  java.net.URL;

/**
   &lt;P&gt;Append the source-code from a web-page into a &lt;CODE&gt;java.lang.Appendable&lt;/CODE&gt;.&lt;/P&gt;

   &lt;P&gt;Demo: {@code java AppendWebPageSource}&lt;/P&gt;
 **/
public class AppendWebPageSource  {
   public static final void main(String[] igno_red)  {
      String sHtml = AppendWebPageSource.get(""http://usatoday.com"", null);
      System.out.println(sHtml);   

      //Alternative:
      AppendWebPageSource.append(System.out, ""http://usatoday.com"", null);
   }
   /**
      &lt;P&gt;Get the source-code from a web page, with runtime-errors only.&lt;/P&gt;

      @return  {@link #append(Appendable, String, String) append}{@code ((new StringBuilder()), s_httpUrl, s_endingString)}
    **/
   public static final String get(String s_httpUrl, String s_endingString)  {
      return  append((new StringBuilder()), s_httpUrl, s_endingString).toString();
   }
   /**
      &lt;P&gt;Append the source-code from a web page, with runtime-errors only.&lt;/P&gt;

      @return  {@link #appendX(Appendable, String, String) appendX}{@code (ap_bl, s_httpUrl, s_endingString)}
      @exception  RuntimeException  Whose {@link getCause()} contains the original {@link java.io.IOException} or {@code java.net.MalformedURLException}.
    **/
   public static final Appendable append(Appendable ap_bl, String s_httpUrl, String s_endingString)  {
      try  {
         return  appendX(ap_bl, s_httpUrl, s_endingString);
      }  catch(IOException iox)  {
         throw  new RuntimeException(iox);
      }
   }
   /**
      &lt;P&gt;Append the source-code from a web-page into a &lt;CODE&gt;java.lang.Appendable&lt;/CODE&gt;.&lt;/P&gt;

      &lt;P&gt;&lt;I&gt;I got this from {@code &lt;A HREF=""http://www.davidreilly.com/java/java_network_programming/""&gt;http://www.davidreilly.com/java/java_network_programming/&lt;/A&gt;}, item 2.3.&lt;/I&gt;&lt;/P&gt;

      @param  ap_bl  May not be {@code null}.
      @param  s_httpUrl  May not be {@code null}, and must be a valid url.
      @param  s_endingString  If non-{@code null}, the web-page's source-code must end with this. May not be empty.
      @see  #get(Appendable, String, String)
      @see  #append(Appendable, String, String)
    **/
   public static final Appendable appendX(Appendable ap_bl, String s_httpUrl, String s_endingString)  throws MalformedURLException, IOException  {
      if(s_httpUrl == null  ||  s_httpUrl.length() == 0)  {
         throw  new IllegalArgumentException(""s_httpUrl (\"""" + s_httpUrl + ""\"") is null or empty."");
      }
      if(s_endingString != null  &amp;&amp;  s_endingString.length() == 0)  {
         throw  new IllegalArgumentException(""s_endingString is non-null and empty."");
      }

      // Create an URL instance
      URL url = new URL(s_httpUrl);

      // Get an input stream for reading
      InputStream is = url.openStream();

      // Create a buffered input stream for efficency
      BufferedInputStream bis = new BufferedInputStream(is);

      int ixEndStr = 0;

      // Repeat until end of file
      while(true)  {
         int iChar = bis.read();

         // Check for EOF
         if (iChar == -1)  {
            break;
         }

         char c = (char)iChar;

         try  {
            ap_bl.append(c);
         }  catch(NullPointerException npx)  {
            throw  new NullPointerException(""ap_bl"");
         }

         if(s_endingString != null)  {
            //There is an ending string;
            char[] ac = s_endingString.toCharArray();

            if(c == ac[ixEndStr])  {
               //The character just retrieved is equal to the
               //next character in the ending string.

               if(ixEndStr == (ac.length - 1))  {
                  //The entire string has been found. Done.
                  return ap_bl;
               }

               ixEndStr++;
            }  else  {
               ixEndStr = 0;
            }
         }
      }

      if(s_endingString != null)  {
         //Should have exited at the ""return"" above.
         throw  new EOFException(""s_endingString "" + (new String(s_endingString)) + "" (is non-null, and was not found at the end of the web-page's source-code."");
      }
      return  ap_bl;
   }
}
</code></pre>
"
"21483779","<p>While the compiler may not allow you to pass a function pointer, it should allow you to pass blocks.</p>

<p>In Objective-C; a block as the following syntax:</p>

<pre><code>void (^action)(NSString *s) = ^(NSString *s){ NSLog(s); }
</code></pre>

<p>You can then pass your ""action"" block around as a parameter, and call it whenever required:</p>

<pre><code>action(@""Hello World"");
</code></pre>

<p>Blocks are available in all recent variations of C, Wikipedia has a nice article on the subject at <a href=""http://en.wikipedia.org/wiki/Blocks_(C_language_extension)"" rel=""nofollow"">http://en.wikipedia.org/wiki/Blocks_(C_language_extension)</a>.</p>
"
"21521644","<p>there are number of ways..as of now</p>

<p>1.String.valueOf(intVarable)</p>

<p>2.Integer.toString(intVarable)</p>

<pre><code>public class ConvertIntToString {
  public static void main(String[] args) {

    int aInt = 1;

    String aString = Integer.toString(aInt);

  }
}
</code></pre>
"
"21664801","<pre><code>Runtime rm = Runtime.getRuntime();
rm.exec(""C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"");
</code></pre>

<p>It works fine</p>
"
"21673664","<pre><code> BigDecimal lat =  new BigDecimal(0.0077);
 lat=lat.setScale(4,RoundingMode.HALF_EVEN);
 System.out.println(lat);
</code></pre>
"
"21754145","<p><code>employeeNameToAgeMap.get(employeeName);</code> returns an <code>Integer</code>. If that <code>Integer</code> is null, the auto-unboxing to <code>int</code> necessary to return an <code>int</code> from your method throws a NPE.</p>

<p>So you should write something like:</p>

<pre><code>Integer result = employeeNameToAgeMap.get(employeeName);
return result == null ? -1 : result;
</code></pre>

<p>Alternatively, you could throw an exception, say a <code>EmployeeNotFoundException</code>.</p>

<p>Or you could also return an 'Integer`, document that the returned value may be null, and let the client handle the null case.</p>
"
"21830576","<p>I use the following code to get the date and time of my country;</p>

<pre><code>String TIME_SERVER = ""time-a.nist.gov"";   
NTPUDPClient timeClient = new NTPUDPClient();
InetAddress inetAddress = InetAddress.getByName(TIME_SERVER);
TimeInfo timeInfo = timeClient.getTime(inetAddress);
long returnTime = timeInfo.getMessage().getTransmitTimeStamp().getTime();
Date time = new Date(returnTime);
</code></pre>

<p>Maybe it helps you, if it doesn't, just put a comment and i will delete my answer. </p>
"
"21831760","<p>You might have a look at <code>BatchGetItem</code> operation or the <code>batchLoad()</code> method of the <code>DynamoDBMapper</code>.  Although a little different than a query in that it's not a query with an <code>OR</code> condition on the hash key, it will allow you to accomplish (generally) the same thing.  Here is the <a href=""http://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_BatchGetItem.html"" rel=""nofollow"">language agnostic documentation</a> and here is the <a href=""http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/index.html?com/amazonaws/services/dynamodb/AmazonDynamoDB.html"" rel=""nofollow"">Javadoc</a>.</p>
"
"21846052","<p>Try removing all the unnecessary spaces in your URL by calling <code>trim()</code>. 
Please refer the below question as well</p>

<p><a href=""http://stackoverflow.com/questions/2593214/android-howto-parse-url-string-with-spaces-to-uri-object?rq=1"">Android: howto parse URL String with spaces to URI object?</a></p>
"
"21941086","<p>Add another while loop around your current while loop to check if you should repeat the process:</p>

<pre><code> int n = 123456;
    int sum = 0;
    while (n &gt; 9 ) {
                 sum=0;
        while (n &gt; 0) {
            int rem;
            rem = n % 10;
            sum = sum + rem;
            n = n / 10;
        }
        n = sum;
    }

    System.out.println(sum);
</code></pre>
"
"21954935","<pre><code>public class Test {
public static int x = 0;

public static void main(String[] args) throws InterruptedException{

    Runnable r1 = new Runnable() {
        public void run() {
            while(true){
            x = x + 1;
            System.out.println(""increment x"");
            try {
                Thread.sleep(5000);
            } catch (InterruptedException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
            }
        }
    };

    Runnable r2 = new Runnable() {
        public void run() {
            while(true){
            System.out.println(""x is ""+x);
            }
        }
    };
        Thread t1 = new Thread(r1);
        Thread t2 = new Thread(r2);
        t1.start();
        t2.start();
</code></pre>

<p>//          Thread.sleep(5000);</p>

<pre><code>}
</code></pre>

<p>}</p>

<p>something like this.. but keep in mind points made above</p>
"
"22047321","<p>you can user very well localSessionFactory as there is no harm and can use sessionfactory like this<br>
              @Autowired
              private SessionFactory sessionFactory;</p>

<pre><code>            @Override
            public void createSection(Section section) {
            sessionFactory.getCurrentSession().save(section);
            }              

            @Override
          public void deleteSection(Section section) {
             sessionFactory.getCurrentSession().delete(section);

             }

           @Override
           public Section findBySectionID(int id) {
            Query query = sessionFactory.getCurrentSession().createQuery(""from Section                   
          where id = "" + id);

            return (Section) query.list().get(0);

        }
</code></pre>

<p>And hibernate.cfg.xml.this is the xml to tell which and where are my model objects[java<br>
   model database mapping objects]</p>

<pre><code>                 &lt;?xml version='1.0' encoding='utf-8'?&gt;
     &lt;!DOCTYPE hibernate-configuration PUBLIC ""-//Hibernate/Hibernate                
                   Configuration DTD//EN""
            ""http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd""&gt;


   &lt;hibernate-configuration&gt;
&lt;session-factory&gt;
    &lt;mapping class=""something.packake.model.modelcalssName1"" /&gt;
    &lt;mapping class=""something.packake.model.modelcalssName2"" /&gt;
&lt;/session-factory&gt;


        &lt;/hibernate-configuration&gt;
</code></pre>
"
"22080734","<p>Why do you want to use a complicated regex? You can check the String with <code>String#indexOf(int, int)</code> three times in a row - Regex are able to match expressions by using NFA and if you don't have non-determinism there's seldom use for regex in my opinion.</p>
"
"22096140","<p>the if condition should be like this:</p>

<pre><code> if ( item != null &amp;&amp; item.getId() == id){
    return item;
 }
</code></pre>
"
"22151685","<p>When you use a programming language, you are restricted to that language's definition.  In this case, the Java <code>switch</code> statement </p>

<blockquote>
  <p>works with the byte, short, char, and int primitive data types</p>
</blockquote>

<p>according to the Java language <a href=""http://docs.oracle.com/javase/tutorial/java/nutsandbolts/switch.html"" rel=""nofollow"">specification</a>.</p>
"
"22317025","<p>The easiest way to do this would be to convert the number to a string and then to split the string based on the '.' separator. Then split the first array element with """". The length of this array would give you your answer.</p>

<pre><code>// number = some_number.some_more_numbers;
String value = number + """"; // convert to string
String[] parts = value.split(""."");
String[] numbers = parts[0].split("""");
int length = numbers.length; // Gives number of individual numbers before decimal point
</code></pre>

<p>I hope this helps.</p>
"
"22353279","<pre><code>Map&lt;String, Integer&gt; map = new HashMap&lt;String, Integer&gt;();
for (Map.Entry&lt;String, Integer&gt; entry : map.entrySet()) {
    // do your sorting
}
// fetch the first entry here
entry.getKey();
</code></pre>
"
"22399198","<p>You can use split() method. Here is an example :</p>

<pre><code>String string = ""your string"";
String[] parts = string.split("" C"");

 for(int i=0; i&lt;parts.length; i++) {
   String[] word = parts[i].split("" "");

    if( i &gt; 0 ) {
          // ignore the rest words because don't starting with C
      System.out.println(""C"" + word[0]); 
    }
else {    // Check 1st excplicitly
          for(int j=0; j&lt;word.length; j++) {

        if ( word[j].startsWith(""c"") || word[j].startsWith(""C""))
              System.out.println(word[j]); 
            }   
        }

     }
</code></pre>

<p>where ""C"" is you letter. Just then loop around the array. For parts[0] you have to check if it starts with ""C"". It was my mistake to start looping from i=1. The correct is from 0.</p>
"
"22428214","<p>I think <code>n= 10^9</code> points towards some logic , not just trying all possible cases and all permutations.<br>
Here is what i got :  </p>

<pre><code>1 -&gt; 0  
2 -&gt; 1  
3 -&gt; 1  
4 -&gt; 2  
5 -&gt; 3  
6 -&gt; 2  
7 -&gt; 3  
8 -&gt; 3  
9 -&gt; 2  
10 -&gt;3  
11 -&gt;4  
12 -&gt;3  
13 -&gt;4  
14 -&gt;4  
15 -&gt;3  
16 -&gt;4  
17 -&gt;5  
18 -&gt;3  
19 -&gt;4  
20 -&gt;4  
21 -&gt;4  
</code></pre>

<p>So i think fornula is :  </p>

<pre><code>    while(n!=1)
    {
     if(n%3==0)
       ans += 1  and  n/=3 
      else if (n%2==0)
       ans += 1  and  n/=2
      else n--  , ans+=1
    }  
</code></pre>

<p><em>GIVES ANSWER FOR N = 1000000000 in 0.06 seconds .</em> <a href=""http://ideone.com/0pfKoz"" rel=""nofollow"">http://ideone.com/0pfKoz</a></p>

<p>//
<strong>PREVIOUS INCORRECT LOGIC :</strong> (fails for n=30 easily as pointed by @Dukeling)</p>

<pre><code>while(n!=1)
{
 if(n%2==0 &amp;&amp; n%3==0)
   ans += p1 + p2   and  n=1  {where n = 2^p1 * 3^p2 }
  else if (n%2!=0 &amp;&amp; n%3 !=0)
   n--
  else if (n%2==0 &amp;&amp; n%3 !=0)
   ans+=1  and n/=2 
  else if (n%2!=0 &amp;&amp; n%3 ==0)
   ans+=1  and n/=3 
}   
</code></pre>

<p><strong>Please clarify if you have got the answer to this question , and try to see if my logic works .</strong></p>
"
"22626453","<p>If Data is a parent no need to explicitly typecast it.</p>

<pre><code>List&lt;List&lt;Data&gt;&gt;&gt; data = somemethod();

List&lt;List&lt;ChildData&gt;&gt;&gt; somemethod(){};
</code></pre>
"
"22646752","<p>Use a DecimalFormat object. </p>

<pre><code>float f = 9.999f;

DecimalFormat df = new DecimalFormat(""00.00"");

System.out.println(df.format(f));
</code></pre>

<p>It will print 10.00.
Do not use BigDecimal, it is slower than DecimalFormat.</p>

<p>9.999f is the value that you want to round. But you can also use a double value : </p>

<pre><code>double bill = Double.parseDouble(originalBill.getText().toString());
billWithTip = bill * 1.10;
DecimalFormat df = new DecimalFormat(""#.##"");
// the #.## means that you want 2 decimals places
billString = df.format(billWithTip);
</code></pre>
"
"22648353","<p>Because you divided by <code>null</code>, of course. What were you expecting to happen?</p>
"
"22661448","<p>In your for loop, you are incrementing start variable by 5 after every iteration. The condition defined in the for loop, will check before every iteration that the index deos not overshoot the total size of the list. But inside the for loop, you are again incrementing the start variable by 5 and accessing the list using this variable, which could be beyond the size of the list causing an out of bounds exception.</p>

<p>for eg. size of list is 17 and you are in the second iteration, so you enter the for loop with the start having a value of 15. But inside the for loop, you increment the variable again by 5, making it to 20. If you try accessing the 20th element of the list, it will definitely throw an out of bound exception.</p>

<p><strong>EDIT:</strong></p>

<pre><code>for (int start = 0; start &lt; test.size(); start += 5) {
    if((start+5)&lt;=index.size()){
       List&lt;String&gt; group = test.subList(start, start+5);
       System.out.println(group);
       //System.out.println(output);
       System.out.println(""split"");
    }else{
       break;
    }        
}
</code></pre>
"
"22725474","<p>You need to change</p>

<pre><code>int pi = 3.14;
</code></pre>

<p>to</p>

<pre><code>double pi = 3.14; 
</code></pre>

<p>Also, static method is in wrong place.</p>
"
"22725767","<p>Most likely You are doing it wrong.</p>

<p>Java 8 Optional is not meant to be used in this manner. It is usually only reserved for terminal stream operations that may or may not return a value, like find for example.</p>

<p>In your case it might be better to first try to find a cheap way to filter out those items that are resolvable and then get the first item as an optional and resolve it as a last operation. Better yet - instead of filtering, find the first resolvable item and resolve it.</p>

<pre><code>things.filter(Thing::isResolvable)
      .findFirst()
      .flatMap(this::resolve)
      .get();
</code></pre>

<p>Rule of thumb is that you should strive to reduce number of items in the stream before you transform them to something else. YMMV of course.</p>
"
"22809970","<pre><code>if(name!=null ){
   if(!name.isEmpty()){
       //body
   }
}
</code></pre>
"
"22862467","<p>int count=0;</p>

<p>private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         </p>

<pre><code>    for(int i=0; i&lt;1; i++){count++;}
    count=count;
    System.out.println(count);
    if(count==1){
      System.out.println(""open"");
      jButton1.setText(""open"");
     }
    if(count==2){
      System.out.println(""close"");
      jButton1.setText(""close"");
    count=0;
    }
</code></pre>

<p>}</p>
"
"22870996","<pre><code>public class Test extends JFrame {

private JButton field[];

public JButton[] getField() {
    return field;
}

public void test(int n) {
    JPanel panel = new JPanel();
    panel.setLayout(new GridLayout(0, 1));
    field = new JButton[n];
    for (int i = 0; i &lt; field.length; i++) {
        field[i] = new JButton("""" + i + """");
        field[i].addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                System.out.println(""clicked button"");
            }
        });
        panel.add(field[i]);
    }
    add(panel);
}

public static void main(String[] args) {
    Test test = new Test();
    test.setSize(300, 300);
    test.setVisible(true);
    test.setLocationRelativeTo(null);
    test.test(5);
}
</code></pre>

<p>}</p>
"
"22932074","<p>Does it need to be Regex? Off the top of my head you could split any incomming string into the characters, convert to a number and then check if b = a + 1 || b = a - 1 (setting some flag at the start to figure out if you are incrementing or decrementing.</p>

<hr>

<p><strong>EDIT:</strong></p>

<p>The post <a href=""http://stackoverflow.com/questions/10294626/regex-to-check-for-4-consecutive-numbers"">here</a> might help you out.</p>

<p>This is the regex it suggests:</p>

<p><code>/(^|(.)(?!\2))(\d)\3{3}(?!\3)/</code> (N.B. This is only for 4 characters)</p>
"
"23064793","<p>Use this instead:</p>

<pre><code>call.add(Calendar.DAY_OF_MONTH, -1)
</code></pre>
"
"23191321","<p>do something like below.</p>

<pre><code>for(int i=0;i&lt;val.size();i++){
    if(val.get(i).contains(""abcd"") || val.get(i).contains(""ABCD"")){
      // do some thing here
    }
}
</code></pre>
"
"23276778","<p>You need a flag and synchronization:</p>

<pre><code>private boolean mReconnectNeeded;

public synchronized void reconnectIfNeeded() {
    if (mReconnectNeeded) {
        mReconnectNeeded = false;
        // reconnect; if it fails, set the flag again
    }
}

public synchronized void setReconnectNeeded() {
    mReconnectNeeded = true;
}
</code></pre>
"
"23290366","<p>As for your <code>MyPanel</code> it looks like you didn't set the size so atm it is not visible.<br>
And for your <code>jFrame</code> since you override paint, why not try setting <code>g.setBackground(Color.BLACK);</code>.</p>
"
"23292457","<p>As @<a href=""https://stackoverflow.com/a/23292304/2591612"">ZouZou</a> states, <code>Arrays.asList(temp)</code> returns a <code>List&lt;int[]&gt;</code>. You may be doing this because of the confusion brought on by this <a href=""https://stackoverflow.com/a/13789151/2591612"">answer</a> (which wrong by the way). This <a href=""https://stackoverflow.com/a/12020425/2591612"">answer</a> shows a way you can do it using binary searching:</p>

<pre><code>public boolean contains(final int[] array, final int key) 
{  
     Arrays.sort(array);  
     return Arrays.binarySearch(array, key) &gt;= 0;  
}  
</code></pre>

<p>This modifies the passed-in array. You would have the option to copy the array and work on the original array i.e. <code>int[] sorted = array.clone();</code> But this is just an example of short code. The runtime is <code>O(NlogN)</code>. </p>

<p>Per the Java documentation, binarySearch will return one of the following (I highlighted the important points):</p>

<p>the index of the search key, if it is contained in the list; otherwise, <strong>(-(insertion point) - 1)</strong>. The <strong>insertion point</strong> is defined as the point at which the key would be inserted into the list: <strong>the index of the first element greater than the key, or list.size() if all elements in the list are less than the specified key</strong>. Note that this guarantees that the return value will be >= 0 if and only if the key is found.</p>
"
"23306063","<p>This is my solution. It uses 3 loops but is constant time and gets 100/100 on codibility.</p>

<pre><code>class FrogLeap
{
    internal int solution(int X, int[] A)
    {
        int result = -1;
        long max = -1;
        var B = new int[X + 1];

        //initialize all entries in B array with -1
        for (int i = 0; i &lt;= X; i++)
        {
            B[i] = -1;
        }

        //Go through A and update B with the location where that value appeared
        for (int i = 0; i &lt; A.Length; i++)
        {
           if( B[A[i]] ==-1)//only update if still -1
            B[A[i]] = i;
        }

        //start from 1 because 0 is not valid
        for (int i = 1; i &lt;= X; i++)
        {
            if (B[i] == -1)
                return -1;
            //The maxValue here is the earliest time we can jump over
            if (max &lt; B[i])
                max = B[i];
        }

        result = (int)max;
        return result;
    }
}
</code></pre>
"
"23322784","<pre><code>public class abc{
public void acceptValidInput() {

    System.out.print(""Enter a number greater than 10: "");
    Scanner sc = new Scanner(System.in);
    int i = sc.nextInt();

    // Adding this will make an exception to be thrown:


    if (i &lt;= 10) {
        acceptValidInput();
    }
}

  public static void main(String[] args) {
     while(true){
      abc a=new abc();
   a.acceptValidInput();
   System.out.println(""Your input is valid"");
     }
  }}
</code></pre>

<p>try this.</p>
"
"23491940","<p>This problem is mostly because of firewall better use proxy.<br>
In your <code>settings.xml</code> (.m2\repository\settings.xml), add corresponding <code>proxy</code> settings to tell Maven to go through the proxy to download the artifacts</p>

<pre><code>&lt;settings&gt;
    .......
    &lt;proxies&gt;
        &lt;proxy&gt;
            &lt;active&gt;true&lt;/active&gt;
            &lt;protocol&gt;http&lt;/protocol&gt;
            &lt;host&gt;your_proxy_host&lt;/host&gt;
            &lt;port&gt;your_proxy_port&lt;/port&gt;
            &lt;!-- Its optional  if you need user name and password to connect proxy remove comment.
            &lt;username&gt;proxyuser&lt;/username&gt;
            &lt;password&gt;somepassword&lt;/password&gt;
            &lt;nonProxyHosts&gt;*.yourdomain.com|*.yourOtherDomain.com&lt;/nonProxyHosts&gt;
            --&gt;
        &lt;/proxy&gt;
    &lt;/proxies&gt;
&lt;/settings&gt;
</code></pre>
"
"23509273","<p>Try the following Regex for Alpha Numeric...</p>

<pre><code>foo.matches(""\\w.*"")
</code></pre>

<p>Or </p>

<pre><code>foo.matches(""\\w+"");
</code></pre>
"
"23515867","<p>After considering your <code>String</code> It made me to add one thing</p>

<pre><code>    String s2= ""10 = On Battery "";  
    String s[]=s2.split(""="");
    int i=Integer.parseInt(s[0].trim());&lt;-----------
use trim() otherwise you will have ""10 "" with whitespace
                                      ^
</code></pre>

<p>But......</p>

<blockquote>
  <p>I have to split the numeric value 10 and words ""On Battery""(<strong>Including
  the space in between them</strong>)</p>
</blockquote>

<pre><code>String a=s2.split(""="")[0];//""10 ""
String b=s2.split(""="")[1];//"" On Battery ""
</code></pre>
"
"23520721","<p>First of all,you can control the empty <em>TextFields</em> using the <strong><em>trim</em></strong> method. This control must be used before you assign textField value to the arraylist.</p>

<p>Before control textField value is empty or not,then assign to the arraylist.</p>

<pre><code> String controlledText = eid.getText().trim();//read contents of text area into 'TextField'
      if(!controlledText.equals("""")){

      //doSometing();

      }
</code></pre>
"
"23522020","<p>Change to this:</p>

<pre><code>value += a[i] * b [i];
// value = value + value;
</code></pre>

<p>Also initialize <code>value</code> to <code>0</code> before using it.
Also remove the <code>sum</code> variable.</p>
"
"23522180","<p>+1 for Jason P.  But if you MUST load full file paths...</p>

<p>Instead of:</p>

<pre><code>&lt;script type=""text/javascript"" src=""C:\Users\Maxime\Documents\NetBeansProjects\SiteWebERDF\web\calendar\lib\jquery.min.js
&lt;/script&gt;
</code></pre>

<p>Use this (presuming you are on Windows:</p>

<pre><code>&lt;script type=""text/javascript"" src=""file:///C:/Users/Maxime/Documents/NetBeansProjects/SiteWebERDF/web/calendar/lib/jquery.min.js""&gt;
&lt;/script&gt;
</code></pre>
"
"23529091","<p>Doing a </p>

<pre><code>int porcentage = Integer.parseInt(findECor2().getSelectedItem().toString().replaceAll(""%"", """"));
</code></pre>

<p>should work. However, the error you pasted indicates the variable sPorcentage was not defined.</p>

<p>Try defining it like in </p>

<pre><code>        String sPorcentage = ""80%"";
        int porcentage = Integer.parseInt(sPorcentage.replaceAll(""%"", """"));
        System.out.println(porcentage);
</code></pre>
"
"23553483","<p>i++ will evaluate the i first so that why you get 0 after the operation finish and stack the value its will increment after.</p>

<p>so if you do this</p>

<pre><code>int i = 0;
System.out.println(i++); = 0
System.out.println(i++); = 1
</code></pre>
"
"23658658","<p>The problem lies within this part:</p>

<pre><code>for(int i = 0; i &lt; list.size(); i++) {
    for(int c = 0; c &lt; list2.size(); c++) {
        if(!list.get(i).equals(list2.get(c))) {
            writer.println(list.get(i));
        }
    }
 }
</code></pre>

<p>You visit each element of the second list for each element of the first.
Instead it should be:</p>

<pre><code>for(int i = 0; i &lt; list.size(); i++) {
    boolean found = false;
    for(int c = 0; c &lt; list2.size(); c++) {
        if(list.get(i).equals(list2.get(c))) {
            found = true;
            break;
        }
    }

    if(!found) {
        writer.println(list.get(i));
    }
 }
</code></pre>

<p>Edit: It also depends on what you want to achieve, this prints out every element in the first list that is not in the second list but not the other way around. </p>
"
"23658666","<p>Use <code>.equalsIgnoreCase(""String"");</code></p>
"
"23661892","<p><code>HashMap</code> doesn't guarantee a specific order of the items stored inside. It's unordered.</p>

<p>Use <code>LinkedHashMap</code> instead. It stores the items in the order, in which they were inserted.</p>

<p>Read the Java Docs for more Infos:</p>

<p><a href=""http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html</a>
<a href=""http://docs.oracle.com/javase/6/docs/api/java/util/LinkedHashMap.html"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/util/LinkedHashMap.html</a></p>
"
"23670365","<p>Use</p>

<p><code>android:windowSoftInputMode=""stateHidden""</code></p>

<p>for <code>&lt;activity&gt;</code> in <code>Android_Manifest.xml</code></p>
"
"23757812","<pre><code>for(int column = 1; column &lt;= 9; column++) {
     for(int row = 1; row &lt;= 9; row++) {
      if(column &lt;= row) { 
          System.out.print(row);
      } else {
        System.out.print("" "");
      }
     }
     System.out.println(); // println will create a newline

}
</code></pre>
"
"23854054","<p>in .jsp page add </p>

<pre><code>var actionurl =${actionOneMethodURL};
</code></pre>

<p>in example.js   on ajax call</p>

<pre><code>$.ajax({

            type: ""POST"",
            url : actionurl,
            data:   JSON.stringify(json),
            dataType: ""json"",
            success: function(response){
                // we have the response
                if(response.status == ""SUCCESS""){
                    $('#info').html(""Success........!Request has been added......... "");

                }else{
                    $('#info').html(""Sorry, there is some thing wrong with the data provided."");
                }
            },
            error: function(e){
                alert('Error: ' + e);
            }
        });
</code></pre>
"
"23973121","<pre><code>public class RandomPriorityQueue {

    private TreeMap&lt;Integer, List&lt;WeightedElement&gt;&gt; tree = new TreeMap();
    private Random random = new Random();

    public void add(WeightedElement e) {
        int priority = random.nextInt(e.getWeight());
        if (tree.containsKey(priority)) {
            List&lt;WeightedElement&gt; list = new LinkedList();
            list.add(e);
            tree.put(priority, list);
        } else {
            List&lt;WeightedElement&gt; list = tree.get(priority);
            list.add(random.nextInt(list.size()), e);
        }
    }

    public WeightedElement poll() {
        Map.Entry&lt;Integer, List&lt;WeightedElement&gt;&gt; entry = tree.lastEntry();
        if (entry == null){
            return null;
        }
        List&lt;WeightedElement&gt; list = entry.getValue();
        if (list.size() == 1){
            tree.remove(entry.getKey());
        }
        return list.remove(0);
    }
}
</code></pre>

<p>Of course we would have betterperformence if we would rewrite TreeMap so it allow us to add duplication keys, we would have better performance.</p>
"
"24063489","<p><strong>EDIT</strong></p>

<p>As I am like a blind man sometimes, I did not see that you did not initialize your variables.
So, here is an explanation considering this initialization:</p>

<p><em>case 1</em></p>

<pre><code>Child ch = new Child();
Parent p=(Parent ) ch;
</code></pre>

<p><em>case 2</em></p>

<pre><code>Parent p = new Parent();
Child  ch=(Child  ) p;  
</code></pre>

<p><strong>END EDIT</strong></p>

<p>You can cast <code>Child</code> as a <code>Parent</code> since <code>Child</code> is also a <code>Parent</code> thanks to inheritance.</p>

<p>You can not cast <code>Parent</code> as a <code>Child</code> since <code>Parent</code> is instanciate as a <code>Parent</code> and so is NOT a <code>Child</code>.</p>

<p><strong>I take an example:</strong></p>

<p>I have a pen. This is also a tool used to write.</p>

<p>But if I take a standard tool (let's say it has a handle and a function), I can not consider it as a pen, because it can't write.</p>

<p><strong>Let's go further</strong></p>

<p>Now, I have a bi-color pen!!! So great, I love that!</p>

<p>It's a Pen and it's a Tool, so I can consider it as a Bicolor-Pen, as a Pen and as a Tool!</p>

<p>If I take a normal Pen, it does not have bi-color! It's just a Pen and also a Tool.</p>

<p><strong>And a code example</strong></p>

<pre><code>public class Human {
    protected String chromosome;

    private int legs, arms = 2;
    private int head = 1;

}

public class Man extends Human {

     private boolean drinkBeer = true;       

     public Man() {
        chromosome = ""XY"";
     }
}

public class Woman extends Human {
    private boolean loveHandbags = true;

    public Woman() {
        chromosome = ""XX"";
    }

}
</code></pre>

<p>A Man is also an human since he has 2 legs, 2 arms and 1 head. A woman too.
But, if I have an human and I don't know his specialized kind, I can not say what is its determinating chromosome (or if he loves beers or handbags).</p>

<p>I hope my explanation has help you to understand and I apologize to the ladies :).</p>

<p><strong>Edit</strong></p>

<p>I am not speaking about the fact that it compiles or not (it will compile). But you will have a <code>ClassCastException</code> at the runtime: <a href=""https://ideone.com/kolTwa"" rel=""nofollow"">https://ideone.com/kolTwa</a></p>
"
"24063991","<p>Yes one can cast Child as  Parent, so following will work</p>

<pre><code>Child ch = new Child();
Parent p=(Parent) ch;  
System.out.println(""Working!!"");
</code></pre>

<p>While this will not work:</p>

<pre><code>Parent p= new Parent();
Child ch = (Parent)p;  
System.out.println(""won't work!!"");
</code></pre>

<p>//get incompatible types error.</p>

<p>Mind it in your code you havn't initialized any object that is never used new operator so you will get 'p/ch never initialized error'.</p>
"
"24064259","<p>There are two type of casting up and down but Java allow only ""UPCASTING"" you can also ""DOWNCAST"" in JAVA but it can throw run time exception. It will throw a run time exception in your case as  well. </p>

<p>""UPCASTING"": It means That when you have child class you can Casting it to Parent Class, so this is legal casting.</p>

<p>""DownCasting"" It means That You want casting a Parent class  to Child class. It is Dangerous in Java. If object can be cast to target type then it works otherwise it throws an run time exception . </p>

<p>In case of DOWNCASTING  Program  can throw a Runtime Exception (a java.lang.ClassCastException).</p>

<p>Why Casting a Parent to Child is Dangerous :-  </p>

<p>When we use (cast)OBJ1 it try to cast that obj1 to target type. For example </p>

<pre><code>Child c = (Child)p1. 
</code></pre>

<p>It will try to cast p1 to Child type. p1 can either have child class reference or Parent class reference..</p>

<pre><code>p1 = new Parent() // It would not work and throw an exception (java.lang.ClassCastException) see explanation below
</code></pre>

<p>OR </p>

<pre><code>p1 = new Child()   // It will work.
</code></pre>

<p>Here is a simple reason Casting an object to some specific type allow us to treat it as object of that type. So if we cast child to parent then we can treat it as a object of parent and can call any parent method.  However the call of method goes to the actual type in this case function of child class will be executed while we already cast object to Parent. </p>

<p>Child class will have all the methods and instance variable available which are defined in Parent class. So if you cast a child object to parent class and call any method of parent class it will work perfectly(However it will call child class method).</p>

<p>In other case there would be some additional methods/instance variables defined in child class. So when you cast parent object to child class and try to call such a method (extra method defined in child class) it would not find in parent object and create problem.</p>
"
"24098042","<pre><code>    ArrayList&lt;Integer&gt; intList = new ArrayList&lt;Integer&gt;();

    int Maximum=10;
    int Minimum=1;
    int r;
    int[] intArray = new int[6];


    for(int i=0; i&lt;intArray.length; i++){

        r = (int)( Minimum+ (Math.random()* (Maximum-Minimum+1)) );

        if(!intList.contains(r)){
            intList.add(r);
            intArray[i]=r;
            System.out.println(r);
        }
        else{
            System.out.println(r+ ""is a duplicate generated earlier, not putting in array again"");
            i--;
        }

    }
</code></pre>
"
"24132456","<p>Your <code>ThreadB</code> does not have a reference to the <code>ThreadA</code> instance - you never initialize it. You must pass the <code>ThreadA</code> instance to the <code>ThreadB</code> instances, or if the main code has visibility of the field, you can set it directly.</p>

<p>Also, as per the javadocs:</p>

<ul>
<li><a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#notify%28%29"" rel=""nofollow""><code>notify()</code></a> notifies <em>one</em> randomly chosen waiter</li>
<li><a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#notifyAll%28%29"" rel=""nofollow""><code>notifyAll()</code></a> notifies <em>all</em> waiters</li>
</ul>

<p>It seems you should be calling <code>notifyAll()</code>.</p>
"
"24134013","<p><code>notify</code> is a method on Object which is generally the same on all objects.  You could use a plain <code>Object</code> or a <code>String</code> or <code>List</code> or <code>byte[]</code> and it would do the same thing.  Note: if you are going to use notify, you generally use wait()  instead of sleep() so the notify does something.</p>
"
"24189546","<p>Per <a href=""http://stackoverflow.com/questions/21219777/the-running-time-for-arrays-sort-method-in-java"">this thread</a>, the sorting runtime will be <code>O(n*log n)</code> since <code>Arrays.sort()</code> uses a modified version of quicksort, whether the array is already sorted or not.</p>
"
"24198645","<pre><code>public static void main(String[] args) {
    double d = 22 / 7; // same as double d = (int)22 / (int) 7 
    System.out.println(d);  // so prints 3.0
    double dd = 22.0/7;  // same as double dd = (double)22 / (int) 7 
    System.out.println(dd);//prints 3.14xxxx
}
</code></pre>
"
"24210330","<p>You forgot the brackets <code>{ }</code> if you write them, it will work.</p>
"
"24277083","<blockquote>
  <p>Why this thing is written in Android documentation that Primitive data: string?</p>
</blockquote>

<p>Actually primitive types can be a wrapper classes which can be used to saved data in the <code>Shared Preferences</code>. <code>String</code> actually wraps the <code>char[]</code></p>

<blockquote>
  <p>Does this primitive word used here, mean something else than the primitive data type?</p>
</blockquote>

<p>Nope. You can use wrapper classes which can be a primitive type</p>
"
"24279199","<p>You are having <code>public void update(SomeClass c)</code> method in your code and this method is an <code>instance method</code> in which you are passing the object as parameter.</p>

<p><code>synchronized(c)</code> in your code is doing nothing. Let me show you with some example,</p>

<p>So if you will make different objects of this class and then try to make them different threads like,</p>

<pre><code>   class A extends Thread{
          public void update(SomeClass c){}
          public void run(){
               update(c)
          }
          public static void main(String args[]){

               A t1 = new A();
               A t2 = new A();

               t1.start();
               t2.start();

          }
   }
</code></pre>

<p>Then both of these t1 &amp; t2 will have their own copies of update method and the reference variable <code>c</code> which you are making synchronized will also be different for both  the threads. t1 calls its own update() method and t2 calls its own update() method. So synchronization won't work.</p>

<p>Synchronization will work when you have something common for both the threads.</p>

<p>Something like,</p>

<pre><code>   class A extends Thread{

          static SomeClass c;

          public void update(){
                synchronized(c){

                }
          }
          public void run(){
               update(c)
          }
          public static void main(String args[]){

               A t1 = new A();
               A t2 = new A();

               t1.start();
               t2.start();

          }
   }
</code></pre>

<p>This way the actual concept of synchronization will be applied.</p>
"
"24330095","<p>How about this custom <code>Comparator</code>,</p>

<pre><code>public class StringNumSuffixComparator implements Comparator&lt;String&gt;{

    @Override
    public int compare(String o1, String o2) {
        String str1 = o1;
        String str2 = o2;
        Integer num1 = Integer.parseInt(str1.replaceAll(""\\D+"",""""));
        Integer num2 = Integer.parseInt(str2.replaceAll(""\\D+"",""""));        
        return num2.compareTo(num1);
    }
}
</code></pre>

<p>To sort them with <code>Collections.sort()</code>,</p>

<pre><code>Collections.sort(items, new StringNumSuffixComparator());
</code></pre>
"
"24344111","<p>A simple logic error:</p>

<pre><code> sort [i]= names[j];          
</code></pre>

<p>must be rewritten as</p>

<pre><code> sort [i]= names[i];          
</code></pre>

<p>Clearly, storing the result into another array is redundant, because the algorithm sorts the original array. To keep this as it was: copy and sort the copy.</p>
"
"24411086","<p>String is an object and it does not have operators like <code>&lt;=</code> and <code>&gt;=</code>.</p>

<p>You can compare two strings using <code>equals()</code> and <code>equalsIgnoreCase()</code> methods or else you can check references of string using <code>==</code>.</p>

<p>In your case since you are comparing two strings, you will not be able to determine if one string is greater than other unless you convert it to Java Date object or to Double object or else you can also use <code>compareTo()</code> method.</p>
"
"24412815","<p>Try using recursion, just call your function from inside your function.</p>

<p>EDIT:</p>

<p>Ok, obviously I should have expanded on my answer then...</p>

<pre><code>private String functionName(String condition) {

    if (check your condition here) {
        return;
        // or do whatever you have to do  
    }

    // call your function again
    functionName();
}
</code></pre>
"
"24452656","<p>You can take a look at the <a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/Math.html#round%28double%29"" rel=""nofollow"">Math.round(double a)</a> method</p>

<pre><code>System.out.println(Math.round(12.51));//Yields 13
System.out.println(Math.round(12.49));//Yields 12
System.out.println(Math.round(12.50));//Yields 13
</code></pre>

<p>from <a href=""http://stackoverflow.com/questions/12190845/round-off-in-java?answertab=active#tab-top"">Round off in JAVA</a></p>
"
"24526716","<pre><code>    StringBuilder sb = new StringBuilder();
    int done = 0;
    while( done &lt; s.length() ){
        int todo = done + 20 &lt; s.length() ? 20 : s.length() - done;
        sb.append( s.substring( done, done + todo ) ).append( '\n' );
        done += todo;
    }
    String result = sb.toString();
</code></pre>

<p>This also appends a newline at the end, but you can modify it easily to avoid that.</p>
"
"24590828","<p>use this code:</p>

<pre><code>import java.util.Scanner;
class q2_5{
public static void main(String args[]){

Scanner input = new Scanner(System.in);
int s=0;//seconds
int m=0;//minutes
int h=0;//hour
int s_input=0;
System.out.println(""how many seconds?"");
s_input=input.nextInt();
s=s_input%60;
if(s &gt;= 60){

m=s_input/60;
}if(m&gt;=60){

h=m/60;
m=m%60;
}
System.out.println(s + ""s = "" + h + "" h "" + m + "" m "" + s + ""s "");
 }
}
</code></pre>
"
"24704640","<p>Your code is inefficient. Here is a better approach. We make an effective brute force over the 2^N possible bracket permutations with heavy pruning(we quit the recursion immediately if there is no possible valid solution for the current parameters).
Here's the code in C++:</p>

<pre><code>#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
using namespace std;
string result;
vector&lt;string&gt; solutions;
int N = 10;
void generateBrackets(int pos, int balance)
{
    if(balance &gt; N-pos) return;
    if(pos == N)
    {
        //we have a valid solution
        //generate substring from 0 to N-1
        //and push it to the vector
        string currentSolution;
        for(int i = 0; i &lt; N; ++i)
        {
            currentSolution.push_back(result[i]);
        }
        solutions.push_back(currentSolution);
        return;
    }
    result[pos] = '(';
    generateBrackets(pos+1, balance+1);
    if(balance &gt; 0)
    {
        result[pos] = ')';
        generateBrackets(pos+1, balance-1);
    }
}
int main()
{
    result.assign(N, 'a');
    generateBrackets(0, 0);
    cout&lt;&lt;""Printing solutions:\n"";
    for(int i = 0; i &lt; solutions.size(); ++i)
    {
        cout&lt;&lt;solutions[i]&lt;&lt;endl;
    }
    return 0;
}
</code></pre>

<p>Some clarifications: pos marks the current position in the bracket solution we are generating. If we reach position N (that means the solution is valid) we have a valid solution in the <code>string result</code> variable and we simple push it in the vector with the valid solutions. Now for what we use balance you may ask. We make the observation that in order a bracket permutation to be valid, at any time at any given position the count of the '(' from the start must be greater than the count of the ')'s and with balance we measure their difference, so me put a ')' at a given position only if the balance > 0. </p>
"
"24781066","<p>Sure, as you have noted they can be used interchangeably for decimal values, but there are a few differences:</p>

<p><a href=""http://docs.oracle.com/javase/8/docs/api/java/lang/Long.html#parseLong-java.lang.String-int-"" rel=""nofollow"">Long.parseLong(s, radix)</a> has an overridden implementation that also allows you to specify a radix, e.g. <code>16</code> for hexadecimal values. In contrast, the <a href=""http://docs.oracle.com/javase/8/docs/api/java/lang/Long.html#decode-java.lang.String-"" rel=""nofollow"">Long.decode(s)</a> allows you to specify a decodable string.</p>

<p>Compare:</p>

<pre><code>long first = Long.parseLong(""10"", 16);
Long second = Long.decode(""0x10"");
</code></pre>

<p>Here both <code>first</code> and <code>second</code> will have the decimal value of <code>16</code>. However, as noted in the comment, <code>parseLong()</code> returns a primitive <code>long</code> value, whereas <code>decode()</code> returns a <code>Long</code> object.</p>
"
"24918885","<h1>Generate String With Offset But No Date and No Time</h1>

<p>Your question is inaccurate. A java.util.Date has no time zone (assumes to always be in UTC). The JVM's time zone is applied in the object' <code>toString</code> method and in other formatting code that generates a String representation. Therein lies your solution: use a date-time formatter that generates a String containing only the offset from UTC without the date or the time-of-day portions.</p>

<h1>Avoid <code>java.util.Date</code> &amp; <code>.Calendar</code></h1>

<p>Avoid using the bundled java.util.Date and .Calendar classes as they are notoriously troublesome. Instead use either Joda-Time or the new java.time package. Both support time zones as part of a date-time object.</p>

<h1>Joda-Time</h1>

<p>Here is how to generate a String representation of a DateTime in Joda-Time 2.3.</p>

<pre><code>DateTime dateTime = new DateTime( DateTimeZone.forID( ""Asia/Kolkata"" ) );
DateTimeFormatter formatter = DateTimeFormat.forPattern( ""ZZ"" );
String offset = formatter.print( dateTime );  // generates: +05:30
</code></pre>

<p>In Joda-Time 2.3 you can ask a <a href=""http://www.joda.org/joda-time/apidocs/org/joda/time/DateTime.html"" rel=""nofollow"">DateTime</a> object for its assigned time zone as an object. You may then interrogate the <a href=""http://www.joda.org/joda-time/apidocs/org/joda/time/DateTimeZone.html"" rel=""nofollow"">DateTimeZone</a> object.</p>

<pre><code>DateTime dateTime = new DateTime( DateTimeZone.forID( ""Asia/Kolkata"" ) );
DateTimeZone timeZone = dateTime.getZone();
String id = timeZone.getID();
</code></pre>
"
"24934039","<p>To solve your error display issue,</p>

<p><code>submit = false</code>  should be <code>submit == false</code></p>

<p><code>=</code>  is for assignment </p>

<p><code>==</code> is for comparison</p>

<p>Also, initialize your variable to avoid null pointer exception:</p>

<p><code>boolean submit = false;</code></p>
"
"24954636","<p>i think u need not use two text views take one text view and use SpannableStringBuilder.</p>

<pre><code>SpannableStringBuilder builder = new SpannableStringBuilder();

        SpannableString redSpannable = new SpannableString(""here first string"");
        redSpannable.setSpan(new ForegroundColorSpan(Color.parseColor(""#ff0000"")), 0, ""here first string"".length(), 0);
        builder.append(redSpannable);
        builder.append("" "");

        String white =  upperCase.toUpperCase();
        SpannableString whiteSpannable = new SpannableString(""here second string"");
        whiteSpannable.setSpan(new ForegroundColorSpan(Color.parseColor(""#00ff00"")), 0, ""here second string"".length(), 0);
        builder.append(whiteSpannable);
TextView02.setText(builder, BufferType.SPANNABLE);
</code></pre>
"
"25046380","<p>Why don't you use <code>Arrays.sort()</code> and return the first element of the array?</p>

<pre><code>//Snippet
void minInArray(){
    int[] arr = new int[]{55,42,11,20,584,63,21,27,84,96,32,30};
    int[] cArr = Arrays.copyOf(arr, arr.length);

    Arrays.sort(cArr);
    int idx = Arrays.asList(arr).indexOf(cArr[0]);
    String s = new StringBuilder(""The min value is: "")
               .append(cArr[0])
               .append("" located at index: "")
               .append(idx)
               .toString();
    System.out.println(s);
}
</code></pre>
"
"25069370","<p>try this simple sample </p>

<pre><code>String msg =editText.getText().toString();
</code></pre>

<p><code>int intMsg = Integer.parseInt(msg);</code></p>

<p><code>int result = intMsg*10;</code> </p>
"
"25125428","<pre><code>for(int i = 0; i &lt; 4; i++){
   for(int j = 9; j &gt;= 1; j--)         
    for(int k = j; k &gt; 0; k--) 
        System.out.print(j);            
   System.out.println();     
 }   
</code></pre>
"
"25168153","<p>Concurrency (the <code>Thread</code> class and such) is an added feature in v1.0 of <a href=""http://en.wikipedia.org/wiki/Java_%28programming_language%29"" rel=""nofollow"">Java</a>. <code>i++</code> was added in the beta before that, and as such is it still more than likely in its (more or less) original implementation.</p>

<p>It is up to the programmer to synchronize variables. Check out <a href=""http://docs.oracle.com/javase/tutorial/essential/concurrency/"" rel=""nofollow"">Oracle's tutorial on this</a>.</p>

<p>Edit: To clarify, i++ is a well defined procedure that predates Java, and as such the designers of Java decided to keep the original functionality of that procedure.</p>

<p>The ++ operator was defined in B (1969) which predates java and threading by just a tad.</p>
"
"25280909","<p>You define those attributes in both of your classes so you override them in the subclass. Moreover, your Employee constructor is not the way it should. You should call the adapted super-constructor as your first statement. </p>

<pre><code>public class Person {

    protected int       id;
    protected String    name;
    protected String    surname;

    public Person(int id, String name, String surname) {
        this.id      = id;
        this.name    = name;
        this.surname = surname;
    }
}

public class Employee extends Person implements Serializable {
    private String  username;
    private String  password;
    private String  date;
    private int     hpw;
    private int     recordSold;
    private float   hourPay;

    public Employee(String username, String name, String surname, String pswd, int id,
            int hpw, String date, int rSold, float hPay) {
        super(id,name,surname);
        this.username   = username;
        this.password   = pswd;
        this.hpw        = hpw;
        this.date       = date;
        this.recordSold = rSold;
        this.hourPay    = hPay;
    }
}
</code></pre>

<p>In your constructors, I consider a best practice to give the same name to your parameters as the name of your attributes to initialize and differenciate them thanks to <code>this</code>. Some people also use the same names except that they add a <code>_</code> at the beginning of all the members of the class. In any case, don't use such meaningless names as ""s"", ""n"" etc when the variables they represent have a special meaning (surname, name). Keep those names for example for local variables without any particular semantic (n would be an integer, s would be a String...).</p>
"
"25280929","<p>You haven't initialized those variables, that's why it is returning default value for those variables. In java following are default values for variables.</p>

<pre><code>int -&gt; 0
String -&gt; null (because  String is Object in Java)
</code></pre>
"
"25281102","<p>In your example, you don't need tu use <code>super</code> to access the attributes defined in the super class since you are using package visibility for them (and both seems to be in the same package).</p>

<p>However, this is NOT the proper way to write Java code.</p>

<p>You should define a visibility for your attributes. In most case, it is recommended to use <code>private</code> visibility and to define getter and setter methods to access them:</p>

<pre><code>public class Person {
    private int id;
    private String name;
    private String surname;

    public Person() {}

    public Person(int id, String name, String surname) {
        this.id = id;
        this.name = name;
        this.surname = surname;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    // And so on...
}
</code></pre>

<p>In sub-classes, you just have to call <code>getId()</code> or <code>setId(...)</code> to access the Id attribute. No need to call <code>super.getId()</code>. Since <code>Employee</code> extends <code>Person</code>, it has access to all of its public, protected (and package if they are in the same package) attributes and method.</p>

<p>This means that in your current code, you can simply write <code>name = n</code> instead of <code>super.name = n</code>.</p>

<pre><code>public class Employee extends Person implements Serializable {
    private String username;
    private String password;
    private String date;
    private int hpw;
    private int recordSold;
    private float hourPay;

    public Employee() {}

    public Employee(String username, String name, String surname, String password, int id, int hpw, String date, int rSold, float hPay) {
        super(id, name, surname);
        this.username = username;
        this.password = password;
        this.hpw = hpw;
        this.date = date;
        this.recordSold = rSold;
        this.hourPay = hPay;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    // And so on...
}
</code></pre>

<p>Now to use these classes, you can write code like:</p>

<pre><code>Employee e = new Employee(""user3149152"", ""Ulrich"", ""Ser"", ""passwd"", 1234, 0, ""2014/08/13"", 0, 0);
System.out.println(""Employee "" + e.getName() + ' ' + e.getSurname() + "" has for id "" + e.getId() + '.'); 
</code></pre>

<p>For reference, this code works even with your current code.
It prints:</p>

<pre><code>Employee Ulrich Ser has for id 1234.
</code></pre>
"
"25303551","<p>public class Point implements Comparable</p>

<p>{
...</p>

<p>...
@Override</p>

<p>public int compareTo(Pointarg0) 
{</p>

<pre><code>    ....
</code></pre>

<p>}   </p>

<p>...
}</p>

<p>...</p>
"
"25305411","<p>Try this code </p>

<pre><code>          private TextView txtCount, textViewTimer;

  private Button btnCount, btnRestart;

   int count = 0;

   boolean[] timerProcessing = { false };

  boolean[] timerStarts = { false };

   private MyCount timer;


      @Override




     protected void onCreate(Bundle savedInstanceState) {

super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);

txtCount = (TextView) findViewById(R.id.textView1);
txtCount.setText(String.valueOf(count));
btnCount = (Button) findViewById(R.id.button1);
btnRestart = (Button) findViewById(R.id.button2);

textViewTimer = (TextView) findViewById(R.id.textView2);

timer = new MyCount(10000, 1);

btnCount.setOnClickListener(new View.OnClickListener() {
    public void onClick(View arg0) {
        // start timer once when button first click
        if (!timerStarts[0]) {
            timer.start();
            timerStarts[0] = true;
            timerProcessing[0] = true;
        }

        if (timerProcessing[0]) {
            count++;
            txtCount.setText(String.valueOf(count));
        }
    }
});
btnRestart.setOnClickListener(new View.OnClickListener() {
    @Override
    public void onClick(View view) {
        timerProcessing[0] = true;
        count = 0;
        txtCount.setText(String.valueOf(count));
        timer.cancel();
        timer.start();
    }
});


   }




         public class MyCount extends CountDownTimer {

public MyCount(long millisInFuture, long countDownInterval) {

    super(millisInFuture, countDownInterval);

}

@Override
public void onFinish() {
    textViewTimer.setText(""0:000"");
    timerProcessing[0] = false;
}

@Override
public void onTick(long millisUntilFinished) {
    textViewTimer.setText("""" + millisUntilFinished / 1000 + "":""
            + millisUntilFinished % 1000);

}
</code></pre>

<p>}</p>
"
"25306005","<p>Use this code in your Activity and i hope you will find your answer...</p>

<p>public class MainActivity extends Activity {</p>

<pre><code>CountDownTimer countDownTimer;
TextView tvTimer;
  long startTime = 1 * 1000;
  long interval = 1 * 100;
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    tvTimer=(TextView)findViewById(R.id.tvTimer);
    countDownTimer = new MyCountDownTimer(startTime, interval);
    findViewById(R.id.button1).setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View v) {
            // TODO Auto-generated method stub
            countDownTimer.start();
        }
    });
}
public class MyCountDownTimer extends CountDownTimer 
{
    int  count=10;
    public MyCountDownTimer(long startTime, long interval) 
    {
        super(startTime, interval);
    }

    @Override
    public void onFinish() {
        tvTimer.setText(""Time's Up...!"");

    }

    @Override
    public void onTick(long millisUntilFinished) {
        int interval=(int)millisUntilFinished/100;
             tvTimer.setText(""0""+interval);
    }
}
</code></pre>

<p>}</p>
"
"25309632","<p>This merely meets you req: <code>alt+/</code>, just a replacement for <code>ctrl+space</code></p>

<p>Currently there is no direct way to do that in eclipse. But i found these are helpful. <a href=""http://eclipse.dzone.com/news/effective-eclipse-shortcut-key"" rel=""nofollow"">here</a></p>

<p>This post resembles your's <a href=""http://stackoverflow.com/questions/6912169/eclipse-enable-autocomplete-content-assist"">look at it</a>. Similar one <a href=""http://stackoverflow.com/questions/6202223/auto-code-completion-on-eclipse"">here</a></p>
"
"25328629","<p>You will (probably) also want to make such a class thread-safe.  Try:</p>

<pre><code>public abstract class WindowFlag {
    private static boolean flag;

    public static synchronized boolean getFlag() {
        return flag;
    }

    public static synchronized void setFlag(boolean flag) {
        this.flag = flag;
    }
}
</code></pre>
"
"25442172","<p>OK I got a codeable example that's pretty easy.</p>

<pre><code>public class TestingThingsOut {

public static void main(String [] args) {
    HashMap&lt;Integer, String&gt; myMap = new HashMap&lt;Integer, String&gt;();

    myMap.put(123, ""hello"");
    myMap.put(234, ""Bye"");
    myMap.put(789, ""asdf"");

    System.out.println(myMap); // it says:
                                  {789=asdf, 234=Bye, 123=hello}

    System.out.println(myMap.size()); // it says: ""3""

    for (Entry&lt;Integer, String&gt; entry : myMap.entrySet()) {
        if (entry.getValue().contains(""hello"")) {
            myMap.remove(entry);
        }
    }

    System.out.println(myMap); // it says:
                                  {789=asdf, 234=Bye, 123=hello}

    System.out.println(myMap.size()); // it says: ""3"" again
}
</code></pre>

<p>}</p>
"
"25465625","<p>First of all after initialising the BufferedReader class with ""br"" as its object, you need to write the following line</p>

<pre><code>String str=br.readLine();
System.out.println(str);
</code></pre>

<p>Next you have to create a file Input.txt and place it in the same folder as that of your java file.</p>

<p>Next in the command prompt, write</p>

<pre><code>javac Projectfile.java
Press Enter
java -cp . Projectfile &lt; Input.txt
</code></pre>

<p>In this way it'll be done. Happy Coding Journey!!!</p>
"
"25494474","<p>Right, many alternatives listed, the easiest and cleanest would be just using the enhanced for statement as below, the Expression is of some type that is iterable. </p>

<pre><code>for ( FormalParameter : Expression ) Statement
</code></pre>

<p>For example, to iterate through, List ids, we can simply so, </p>

<pre><code>for (String str : ids) {
    //do something 
}
</code></pre>
"
"25502057","<p>Try this <a href=""http://www.regexplanet.com/advanced/java/index.html"" rel=""nofollow"">regex</a>:</p>

<pre><code>([0-9]*[^0-9\s]+[0-9]*\s*)
</code></pre>

<p>Here all strings that have(or have not) digit at begining <code>[0-9]*</code> that is followed by one or more non-digit character <code>[^0-9\s]+</code> and then have (or have not) a digit and space <code>[0-9]*\s*</code> are found.
It will find all characters but numbers. It works for all kind of characters - also special characters.</p>

<p>Using it this way would result in what you need:</p>

<pre><code>String myString = ""12 text var2 14 8v 1"";
myString = myString.replaceAll(""([0-9]*[^0-9\\s]+[0-9]*\\s*)"", """");
System.out.println(myString);
</code></pre>

<p>Output:</p>

<pre><code>12 14 1
</code></pre>
"
"25536858","<p>You can so it simply by using regex on the string:</p>

<pre><code>String f = formatter.format(time).replaceAll(""\\.[^.]*"", """");
</code></pre>

<p>This deletes (by replacing with blank) the last dot and everything after.</p>
"
"25679919","<p>For skipping first line(which normally contains header of the columns) take a variable and  increase this variable in while loop at first place, and continue;</p>

<pre><code>int lineNumber = 0;

and then in while loop 

while ((line = br.readLine()) != null) {
                        if(lineNumber == 0) {
                            lineNumber++;
                            continue;
                        }
                        lineNumber++;

                       //do waterver u have to do with the tokens in this line(second line)

            }
</code></pre>
"
"25688178","<p><code>p</code> is not instance at all. it is just reference of type <code>ParentClass</code> that is pointing to object of <code>ChildClass</code> on heap memory.</p>

<p><code>Objects</code> live on heap while references can be on stack memory or in other objects on heap. think <code>reference</code> as pointers in c/c++ with some additional functionality. </p>

<p>Your example is of inheritance where reference of type <code>ParentClass</code> can point to <code>ChildClass</code> object. </p>
"
"25779446","<p>This method is to find all prime Numbers less than 100</p>

<pre><code>// This is the dividend
int m;    
// Whether can't divisible
boolean band;    

//  From 100 all digital lookup
for (int i=2;i&lt;100;i++){ 
        // Divisor increasing from 2
    m=2;
    // If not divisible, here defined as cannot be divided exactly by first, if we can find a divisor aliquot, the current number is not a prime 
    band=true;
    // From 2 to the current number one by one
    while(band &amp;&amp; m &lt;i){    
            // Remainder of 0, explain aliquot, band = false, jump out the while
        if(i%m==0){
            band=false;
        }else{
        // Remainder is not 0, i cannot be divided exactly by m, continue to verify the m + 1
            m++;
        }
    }
    // From 2 to i-1 cannot be divisible, that i was a prime number
    if(band){
        System.out.println(""The number ""+i+"" is prime"");
    }
}
</code></pre>
"
"25816588","<p>I think it works, please tell me if you see any case not well handled.</p>

<pre><code>public static void main(String[] args) {
    int N     = 100211020;
    int digit = 0;

    int m;
    for (m = 9 ; m &gt; 0 &amp;&amp; m == digit; m--);

    String sres;
    String s   = N + """";
    int length = s.length();
    int i      = s.indexOf(digit + """");

    if (i &lt; 0)
        sres = s;
    else {
        StringBuilder sb = new StringBuilder();
        if (digit != 0) {
            for (int j=0 ; j&lt;i ; j++) sb.append(s.charAt(j));
            sb.append(digit - 1);
            for (int j=i + 1 ; j&lt;length ; j++) sb.append(m);
        } else {
            if (s.charAt(0) != '1')
                sb.append(mod10(s.charAt(0) - '0' - 1));
            for (int j=1 ; j&lt;length ; j++) sb.append(9);            
        }
        sres = sb.toString();
    }
    System.out.println(sres);
}

public static int mod10(int n) {
    int res = n % 10;
    return res &lt; 0 ? res + 10 : res;
}
</code></pre>

<p><strong>EDIT :</strong></p>

<p>I finally decided to use strings to handle the case of <code>digit = 0</code>, which was quite complicated with my first approach.</p>
"
"25826557","<p>If you want to check if a number is odd, you can do it this way:</p>

<pre><code>int answer = thenumber % 2;
</code></pre>

<p>'thenumber' is the integer to check if it is even.
Then 'answer' would be 0 if the number was even.</p>

<p>And if you want to loop through the array and do it:</p>

<pre><code>for (int i = 0; i &lt; numbers1.length(); i++)
{
if (numbers1[i] % 2 == 0) {
//EVEN
numbers1[i] = 0;
}
else if (numbers1[i] % 2 == 1) {
//ODD
numbers1[i] = 1;
}
}
</code></pre>

<p>And, even more compact:</p>

<pre><code>for (int i = 0; i &lt; numbers1.length(); i++)
{
numbers1[i] %= 2;
}
</code></pre>

<p><strong>Edit:</strong> I forgot that it was an array you had! I was thinking about ArrayList! Fixed.</p>
"
"25872360","<p>Use can format your code as :</p>

<pre><code>try {
  int i = Integer.parseInt(yourString);
  mc.pushNUmber(i);
} catch (NumberFormatException e){

}
</code></pre>
"
"25873015","<p>Can this help?</p>

<pre><code> if(Character.isDigit(evt.getKeyChar())){
   // put something here

 }
 else if(!(Character.isDigit(evt.getKeyChar())){
   //.......     
    }
</code></pre>
"
"25909976","<p>Yes <strong>Dynamic Web Module 3.0</strong> requires <strong>Java 1.6 or newer version</strong>
You can check your java version by  using the command:</p>

<pre><code> java -version
</code></pre>
"
"25936908","<p>what about simple answer </p>

<p>getthe size of the array legth.</p>

<pre><code>ArrayList arry = new ArrayList()&lt;String&gt;;
if(arry!=null) {
int last = arry.legth() -1  ;
//no loop proudly
arr[last];  
return last ;
}
</code></pre>
"
"25937194","<p>You cannot use '&amp;' in the generic part when declaring a variable. It only works when declaring a generic class. When declaring a variable/field that uses a generic class, always provide concrete classes/interfaces for the generic parameters.
e.g., <code>QuestionManager&lt;Question&gt;</code></p>
"
"26004686","<p>This should do it</p>

<pre><code>class Main {
    public static void main(String[] args){
        int someInt = 36;

        String binary = Integer.toBinaryString(someInt);

        String binaryZeroes = binary.replaceAll(""1"", """");
        String binaryOnes = binary.replaceAll(""0"", """");

        System.out.println(""number of zeroes: "" + binaryZeroes.length());
        System.out.println(""number of ones: "" + binaryOnes.length());
    }
}
</code></pre>
"
"26015967","<p>code is missing a closing bracket.<br>
if you want the colon to be detected in all case, put the closing bracket after the first println, as in</p>

<pre><code>    if (element.startsWith(""if"") == true
            &amp;&amp; (element.contains(""goto"") == true)) {
        System.out.print(""If and Goto detected"");
    }
    if (element.contains("":"") == true) {
        System.out.print(""There's a Colon"");
    }
</code></pre>

<p>otherwise, to get the colon only when in the if</p>

<pre><code>    if (element.startsWith(""if"") == true
            &amp;&amp; (element.contains(""goto"") == true)) {
        System.out.print(""If and Goto detected"");
        if (element.contains("":"") == true) {
           System.out.print(""There's a Colon"");
        }
    }
</code></pre>
"
"26052105","<p>Just use property of Imageview</p>

<pre><code>        android:scaleType=""fitXY""
</code></pre>

<p>that means </p>

<pre><code>&lt;ImageView
    android:scaleType=""fitXY""
    android:id=""@+id/LandingBack""
    android:layout_width=""fill_parent""
    android:layout_height=""wrap_content""
    android:src=""@drawable/background""
    android:adjustViewBounds=""true""
    android:layout_gravity=""center""
    android:layout_centerVertical=""true""
    android:layout_centerHorizontal=""true"" /&gt;
</code></pre>

<p>in Imageview and you are done.Happy Coding</p>
"
"26173992","<p><code>'air'</code> is using single quotes. Single quotes denote a <strong>character</strong> constant. What you're looking for is <code>""air""</code>, a <strong>String</strong> constant.</p>

<p>You seem to be a new programmer. I made some improvements to your program, and I'll show you them here:</p>

<pre><code>import java.util.Scanner;
import javax.swing.JOptionPane;
import java.text.DecimalFormat;

/*
Medium Speed
Air 1100 feet per second
Water 4900 feet per second
Steel 16,400 feet per second

Write a program that asks the user to enter ""air"", ""water"", or ""steel"", and the distance that a sound wave will
travel in the medium. The program should then display the amount of time it will take.
You can calculate the amount of time it takes sound to travel in air with the following formula:

Time = Distance / 1100
You can calculate the amount of time it takes sound to travel in water with the following formula:

Time = Distance / 4900
You can calculate the amount of time it takes sound to travel in steel with the following formula:

Time = Distance / 16400
*/

public class SpeedOfSound {
        public static void main(String[] args) {

        char timeTraveled; //what is this even doing here?

        Scanner scanner = new Scanner(System.in);

        double time = (distance/ 1100);
        double time2 = (distance/ 4900);
        double time3 = (distance/ 16400);
        DecimalFormat formatter = new DecimalFormat(""#0.00"");

                System.out.println(""Enter air, water, or steel: "");
                String material = scanner.nextLine();
                System.out.print(""Enter distance: "");
                double distance = scanner.nextDouble();

                switch (material) {
                    case ""air"":
                        System.out.printf(""The total time traveled is "" + formatter.format(time) + ""."");
                        break;

                    case ""water"":
                        System.out.printf(""The total time traveled is "" + formatter.format(time2) + ""."");
                        break;

                    case ""steel"":
                        System.out.printf(""The total time traveled is "" + formatter.format(time3) + ""seconds."");
                        timeTraveled = material.charAt(0); //what is this even doing here?
                    break;
                }
                scanner.close();
    } // main()
}  // class SpeedOfSound
</code></pre>

<ul>
<li>Made the spacing and indenting more consistent</li>
<li>Renamed your Scanner object. ""keyboard"" is not an appropriate name for a Scanner object, since scanner works with not only keyboard input, but also string and file input.</li>
<li>I combined the <em>declaration</em> of your ""time"" variables and the <em>definition</em></li>
</ul>

<p>E.g.</p>

<pre><code>double time; //a declaration of ""time""
time = (distance/ 1100); //a definition of ""time""
//becomes:
double time = (distance/ 1100); //a declaration AND definition of ""time""
</code></pre>

<ul>
<li>changed <code>'air'</code> to <code>""air""</code>"", also, changed the switch case variable to ""material"" (which used to be called ""input"", and is the string that holds the user's input), rather than it using timeTraveled (some miscellaneous character?)</li>
</ul>

<p>Since your program is only going to be displaying one time of the three possibilities, why calculate all 3? I suggest you rework your algorithm as follows:
Ask the user for the material and distance they want. Set a variable ""speed"" equal to 1100, 4900, or 16400 depending on the user's choice of air, water or steel. Then, calculate time as distance / speed.</p>

<p>This saves you from repeating 3 identical <code>System.out.println()</code> statements, saves you from having 3 time variables (when you only need 1), </p>
"
"26303531","<h1>Bad solution</h1>

<p>If anyone is interested, here is how I had solved my problem. But this is <strong>a workaround</strong>, that doesn't explain why the first snippet didn't work:</p>

<pre><code>import java.util.Iterator;
import java.util.ArrayList;

public class Test {
  public Test() {
    ArrayList&lt;ArrayList&lt;Test&gt;&gt; arr = new ArrayList();
    Iterable&lt;Iterable&lt;Test&gt;&gt; casted = (Iterable&lt;Iterable&lt;Test&gt;&gt;)(Iterable&lt;?&gt;)arr;
  }
}
</code></pre>

<p>This is an unsafe operation. In this case, no harm will be made because Iterable are read-only, but this method allows you to cast an <code>ArrayList&lt;ArrayList&gt;</code> to an <code>ArrayList&lt;LinkedList&gt;</code> for instance, and thus it can break <code>arr</code>.</p>

<h1>Good solution</h1>

<p>There is no good solution to cast an <code>ArrayList&lt;ArrayList&gt;</code> to an <code>Iterable&lt;Iterable&gt;</code>, for the reason explained above. But you can safely (and implicitly) cast an <code>ArrayList&lt;ArrayList&gt;</code> to an <code>Iterable&lt;? extends Iterable&gt;</code>, and work on your variables of type <code>Iterable&lt;? extends Iterable&gt;</code> as you would have on an <code>Iterable&lt;Iterable&gt;</code>. </p>

<p>And you can implicitly an <code>Iterable&lt;Iterable&gt;</code> is an <code>Iterable&lt;? extends Iterable&gt;</code>.</p>
"
"26346907","<pre><code>byte[] source = new byte[1024];

Random rand = new Random();
rand.nextBytes(source);
</code></pre>
"
"26400933","<pre><code>for (char letter = 'a'; letter &lt;= 'z'; letter++)
{
    System.out.println(letter);
}
</code></pre>
"
"26446773","<pre><code>String formattedInput = (String.valueOf(input)).replace(""."", """");
</code></pre>
"
"26446786","<p>Convert the double to String, if it is not.  <br/>
Then use <code>String.replace('.', '');</code>  <br/>
Then Convert back to int or long, if necessary.  <br/></p>
"
"26446792","<p>You can do this with String replacement functions.  </p>

<pre><code>public static BigDecimal noDecimal(BigDecimal b) {
    return new BigDecimal(b.toPlainString().replace(""."", """"));
}
</code></pre>

<p>If you already have a String rather than a BigDecimal, this can be simplified to this:</p>

<pre><code>public static BigDecimal noDecimal(String s) {
    return new BigDecimal(s.replace(""."", """"));
}
</code></pre>
"
"26509925","<p>I tried your code at <a href=""http://www.compileonline.com/compile_java_online.php"" rel=""nofollow"">http://www.compileonline.com/compile_java_online.php</a> and ended with this sample. </p>

<pre><code>public class HelloWorld{

 public static void main(String []args){
    String test = ""Hello #Wor@l@d"";
    int hasHashTag = 0;
    int hasAt = 0;
    for (int i = 0; i &lt; test.length(); i++) {
        if (test.charAt(i) == '#') hasHashTag++;
        if (test.charAt(i) == '@') hasAt++;
    }
    System.out.println(hasHashTag);
    System.out.println(hasAt);
 }
</code></pre>

<p>}</p>
"
"26581542","<p>By nomenclature class name should start with capital letter and try changing as  </p>

<pre><code>form action=""/username"" method=""GET""&gt; &lt;br/&gt;
</code></pre>

<p>User : <br/>
Pass : 
<br/>  </p>

<p>in login.jsp and see if this works</p>
"
"26637257","<p>You should have a look at the <a href=""http://asm.ow2.org/"" rel=""nofollow"">ASM library</a>.</p>

<p>With the library you can access the bytecode like this:</p>

<pre><code>ClassReader cr = new ClassReader(""java.lang.Runnable"");
ClassNode cn = new ClassNode();
cr.accept(cn, 0);
</code></pre>

<p>Then you can access the information object based by using the getters of the <code>ClassNode</code>.
An event based analysis using visitors is also possible.</p>

<p>Note that you can instantiate the <code>ClassReader</code> with an input stream or a byte array instead of the class name as well.</p>
"
"26674114","<p>The easiest solution would be a 2-dimensional array.</p>

<p>The user numbers and the item numbers would have to be consecutive starting with zero.</p>

<pre><code>int numberOfUsers = getUserCount();
int numberOfItems = getItemCount();
Rating[] ratings = new Rating[numberOfUsers * numberOfItems];

public Rating getRating(userNum, itemNum) {
   return ratings[userNum + itemNum * numberOfUsers];
}
</code></pre>

<p>Edit concerning the comments:</p>

<p>If the matrix is spares, you could treat space for time by using a Map instead of an array:</p>

<pre><code>int numberOfUsers = getUserCount() + 1000; // to provide for additional users 
int numberOfItems = getItemCount() + 1000;
HashMap&lt;Integer,Rating&gt; ratings = new HashMap&lt;Integer,Rating&gt;();

public Rating getRating(int userNum, int itemNum) {
   return ratings.get(userNum + itemNum * numberOfUsers);
}
</code></pre>
"
"26776290","<p>You can use gson library : <a href=""https://code.google.com/p/google-gson/"" rel=""nofollow"">https://code.google.com/p/google-gson/</a></p>

<pre><code>Gson gson = new Gson();
String output = gson.toJson(object);
</code></pre>
"
"26776415","<p>Try this : </p>

<pre><code>JsonArray jArray = //Your Json Array;
JSONObject jObj = new JSONObject();
jObj.put(""test"", jArray);
String requiredString = jObj.optString(""test"");
</code></pre>
"
"26799633","<p>you have to write declaration (with argument if any)of function in main Function
like <code>slop(int, int,int );</code></p>

<p>and after main method and inside the class you have to define your slop method </p>

<p>Hope it will help 
thanks    </p>
"
"26938878","<p>What about this approach?</p>

<pre><code>public static String[] removeDuplicate(String[] words){
    // remember which word is a duplicate
    boolean[] isDuplicate = new boolean[words.length];
    // and count them
    int countDuplicate = 0;
    for (int i = 0; i &lt; words.length ; i++){
        // only check ""forward"" because ""backwards checked"" duplicates have been marked yet
        for(int j = i + 1; j &lt; words.length ; j++){
            if (words[i].equals(words[j])) {
                isDuplicate[j] = true;
                countDuplicate++;
            }
        }
    }
    // collect non-duplicate strings
    String[] tmp = new String[words.length - countDuplicate];
    int j = 0;
    for (int i = 0; i &lt; isDuplicate.length; i++) {
        if (isDuplicate[i] == false) {
            tmp[j] = words[i];
            j++;
        }
    }
    // and return them
    return tmp;
}
</code></pre>
"
"26942533","<p>You can use a loop (preferably do-while loop) to put a frame on hold until the other frame closes or hides. Make sure to break the loop or increment the variable used for the loop by specific amount when the other frame is disposed or hidden. This way you can keep your <code>StartingJFrame</code> class to remain as a subclass of <code>JFrame</code>.</p>

<pre><code>    do {
        if (changeLog.isVisible()) {
        } else {
            changeLog.dispose();
            break;
        }
    } while (hold &lt; 1);
</code></pre>

<p>or</p>

<pre><code>    do {
        if (changeLog.isActive()) {
        } else {
            break;
        }
    } while (hold &lt; 1);
</code></pre>

<p>The first one would require the previous frame to be hidden (<code>JFrame.HIDE_ON_EXIT</code> or <code>Window.setVisible(false)</code>) before the codes can be run. The last one would require the previous frame to be ""disposed"" (<code>JFrame.DISPOSE_ON_EXIT</code> or <code>(subclass of JFrame).dispose()</code>. Add any of those codes on <code>StartingJFrame</code>, though, since you created a <code>NewParamJFrame</code> in that class and have the corresponding field(s) set to <code>private</code>.</p>
"
"27030273","<p>From debugging your application it looks like using 2 for input will result in n = 1 somewhere along execution, it will fall into a lengthy recursion. However, eventually we will get this pattern</p>

<pre><code>n = 86;
r = 85;
t = 6;
nt = 7;
</code></pre>

<p>Afterwards we will get </p>

<pre><code>n = 100;
r = 85;
t = 5;
nt = 7
</code></pre>

<p>Which will result in the sum of 100 to be 1, making 2 happy. I'm not sure why this happens, but from debugging this is the result I am getting</p>

<p>Here is the string leading up to 100, keep in mind this is using your code, and since you didn't provide a <code>sumSquareDigits(int n)</code> function I made my own.</p>

<p><code>2 3 4 16 17 50 25 26 40 16 37 38 73 58 89 145 146 53 34 25 29 85 86 100 1</code></p>
"
"27053512","<p>No. Reason: <strong>compile time optimization.</strong></p>

<p>As you code:</p>

<pre><code>public int foo(){
  int x;

  //Write code which does not use/initialize x
}
</code></pre>

<p>Most Java compilers will be able to figure out that x plays no role in the code execution thus they remove it entirely thanks to compilation optimization.</p>

<p>Even if you use:</p>

<pre><code>  int x = 999;
</code></pre>

<p>x shouldn't be included - some dumb compilers may include it but this might change in the future.</p>

<p>However, </p>

<pre><code>  int x = methodA();
</code></pre>

<p>Will definitely have x included.</p>

<p><strong>Modern compilers will eliminate a lot of inefficiency in the code, so you can focus on your problems.</strong></p>
"
"27082047","<p>++x is called preincrement while x++ is called postincrement. </p>

<pre><code>int x = 3;
x = ++x;
</code></pre>

<p>exemple</p>

<pre><code>int x = 5, y = 5;

System.out.println(++x); // outputs 6
System.out.println(x); // outputs 6

System.out.println(y++); // outputs 5
System.out.println(y); // outputs 6
</code></pre>
"
"27105932","<p>This would work:</p>

<pre><code>List&lt;T&gt; enums = Arrays.asList(Arrays.copyOfRange(MyEnum.values(), 1, MyEnum.values().length - 1));
</code></pre>

<p>Or java 8:</p>

<pre><code>Arrays.stream(MyEnum.values()).collect(Collectors.toList()).subList(1, MyEnum.values() - 1);
</code></pre>

<p>Hmmm... not much better .</p>
"
"27118092","<p>You want to use <code>break</code></p>

<pre><code> if(z &lt;= 0){
            System.out.println(""..............................................."");
            System.out.println("" You can only type positive numbers            "");
            System.out.println(""...............................................""); 
            System.out.println(""\n"");
            break;
        }
</code></pre>

<p><code>continue</code> just hops to the top of the <code>if</code> and keeps at it, same thing.</p>
"
"27286400","<p>try casting like below</p>

<pre><code>WrappedConnectionJDK6 wc = (WrappedConnectionJDK6) connection;
connection = wc.getUnderlyingConnection();
</code></pre>
"
"27706303","<p>It will work if you use:</p>

<pre><code>model.put(""myImage"", Base64.encodeBase64(MyImage));
</code></pre>

<p>instead of using:</p>

<pre><code>model.put(""myImage"", Base64.encode(MyImage));
</code></pre>
"
"27865109","<pre><code>public void frankTest() {
    int pageId= -1;

    List&lt;Book&gt; users= null;
    try {
        //Does Not Compile:  Object page=DatabaseConnection.getSpringConnection().queryForObject(""SELECT * FROM bookmark_page"", (rw, n) -&gt; new Portal(rw.getInt(""id""), """", users.parallelStream().filter(uu -&gt; uu.getVbid() == rw.getString(""user_id"")).findFirst().get(), rw.getString(""name"")));

        //Compiles:
        Object page= DatabaseConnection.getSpringConnection().queryForObject(""SELECT * FROM bookmark_page"", (rw, n) -&gt; { 
            try {
                final Book bk= users.stream().filter(bp -&gt; { 
                    String name= null;
                    try {
                        name = rw.getString(""name"");
                    } catch (Exception e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                    }
                    return bp.getTitle().equals(name); 
                }).limit(1).collect(Collectors.toList()).get(0);
            } catch (Exception e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
            return new Portal(rw.getInt(""id""), """", users.get(0), rw.getString(""name"")); 
        } );
    } catch (Exception e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
}
</code></pre>
"
"28245583","<p>If you're very new to Java, and just trying to learn how to use <code>PrintWriter</code>, here is some bare-bones code:</p>

<pre><code>import java.io.*;

public class SimpleFile {
    public static void main (String[] args) throws IOException {
        PrintWriter writeMe = new PrintWriter(""newFIle.txt"");
        writeMe.println(""Just writing some text to print to your file "");
        writeMe.close();
    }
}
</code></pre>
"
"28391449","<pre><code>public static void stutter(ArrayList&lt;String&gt; list, int k) {
    if (k &lt;= 0) {
        list.clear();
    }
    for (int i = list.size() - 1; i &gt;= 0; i--) {
        for (int r = 1; r &lt; k; r++) {
            list.add(i + 1, list.get(i));
        }
    }
}
</code></pre>
"
"28677723","<p>Put all the code in try block then catch exception in a catch block</p>

<pre><code>try
{
    // code
}
catch(ClassNotFoundException e1)
{
    e1.getmessage();
}
</code></pre>
"
"28882057","<p>You could try to build a custom comparator. Here is an example how that should  look. This is for comparing BigDecimals.</p>

<pre><code>class YourComparator implements Comparator&lt;InstructorTreeNode&gt; {
@Override
public int compare(final  InstructorTreeNode 01, final InstructorTreeNode o2) {
    return o2.getYourCompVal().compareTo(o1.getYourCompVal());
}
</code></pre>

<p>}</p>

<pre><code> public List&lt;InstructorTreeNode&gt; getChildNodes() {
 Collections.sort(childNodes, new YourComparator());
 return childNodes;}
</code></pre>
"
"29354699","<pre><code>import java.util.Scanner;

public class Average {
    public static void main(String[] args) {
        int total = 0;
        double number_sum = 0, number_entered = 0, avg = 0;
        Scanner reader = new Scanner(System.in);
        System.out
                .print(""Program calculates the average of inputted grades. \nFinish with a negative integer.\n\n"");
        do {
            System.out.print(""Input a grade (4-10): "");
            number_entered = reader.nextDouble();
            if (number_entered &lt;= 10 &amp;&amp; number_entered &gt;= 4) {
                number_sum = number_sum + number_entered;
                total++;
            }
            if (number_entered == 0 || number_entered &lt; 4
                    || number_entered &gt; 10) {

                System.out.print(""Invalid grade!"");
                System.out.print(""\nInput a grade (4-10): "");
                number_entered = reader.nextDouble();
            }
            if (number_entered &lt; 0) {
                if (total == 0) {
                    System.out.print(""You did not input any grades."");
                } else {
                    avg = number_sum / total;
                    System.out.print(total + "" grades inputted.\n"");
                    System.out.print(""Average of the grades: "" + avg);
                }
            }
        } while (number_entered &gt; 0);
    }
}
</code></pre>
"
"29888210","<p>Add a shutdown hook on your application that will kill jmx.</p>

<pre><code>// kill process with port 9999    
fuser -k 9999/tcp
</code></pre>
"
"30008713","<pre><code>import java.util.ArrayList;
import java.util.Collections;

public class comboGenerator {

    public static void main(String[] args) {


    ArrayList&lt;Integer&gt; $combo = new ArrayList&lt;Integer&gt;();               // init. array list combo for randomization


        while ($combo.size() &lt; 6) {  
            int rand = (int) (Math.random()*49+1);                  // make new random number 1-49
            if (!$combo.contains(rand)){                            // check if we have that number in array list,{
            $combo.add(rand);                                       // if there is no such number then add it to array list
            Collections.sort($combo);                               // sort the array list small &gt;&gt; large
            }
        }

    System.out.println(""Random combination "" + $combo);

}   
}
</code></pre>
"
"30050173","<p>As per one of your comments, you need to parse this:</p>

<pre><code>....,'data(gn),data(gn),subdata='datavalue',data(gn),,',.....
</code></pre>

<p>Only the CSV parser in <a href=""http://www.univocity.com/pages/parsers-tutorial"" rel=""nofollow"">uniVocity-parsers</a> can parse that. Your input has unescaped quotes inside a quoted value. This will break any other CSV parsing library for Java (feel free to try).</p>

<p>What you have is similar to this:</p>

<pre><code>something,""text with ""unescaped quotes"" here"",something else
</code></pre>

<p>You want this as the output:</p>

<pre><code>something
text with ""escaped quotes"" here
something else
</code></pre>

<p>You just need to throw your input into uniVocity-parsers' CSV parser</p>

<pre><code>CsvParserSettings parserSettings =  new CsvParserSettings();
parserSettings.setParseUnescapedQuotes(true); //this is enabled by default

CsvParser parser = new CsvParser(parserSettings);
List&lt;String[]&gt; allRows = parser.parseAll(getReader(""/examples/bean_test.csv""));
</code></pre>

<p>More details about this feature <a href=""http://www.univocity.com/blogs/news/15989312-univocity-parsers-1-3-0-is-here-with-some-useful-new-features"" rel=""nofollow"">here</a>.</p>
"
"26299079","<p>try to raise perm space, add following parameters to vm start-up</p>

<p><strong>-XX:PermSize=256m -XX:MaxPermSize=256m</strong></p>

<p>also add <strong>-XX:MaxPermSize=256m</strong> <code>to Tomcat in Eclipse: Server &gt; Open Launch Configuration &gt; Arguments</code></p>

<p>Reference link is here : <a href=""http://www.mkyong.com/eclipse/eclipse-java-lang-outofmemoryerror-java-heap-space/"" rel=""nofollow"">Out of memory</a></p>
"
"23272000","<p>What you're doing is reading too many lines when checking for only one. It goes like this:</p>

<h2>Problem</h2>

<p>If the array on ""lines"" looks like this:</p>

<pre><code>[""This is line 1""]
</code></pre>

<p>Then <code>read.hasNextLine()</code> will return <code>true</code>. Then you enter your <code>while</code> loop. You run the first line which is:</p>

<pre><code>String name = read.nextLine();
</code></pre>

<p>You retrieved one element from the above array, now it looks like this:</p>

<pre><code>[]
</code></pre>

<p>Then you continue through your <code>while</code> loop:</p>

<pre><code>String telno = read.nextLine();
</code></pre>

<p>Then the <code>nextLine()</code> method looks for a element in the array to give you, doesn't find any, and throws an exception.</p>
"
"23505839","<p>Another approach would be to create a Command class and have a public inner class for each command/function. This way you don't need to create separate .java files for each command, and you individually make use of each command via Command.FirstCommand etc.</p>

<p>As for trying to not use a switch-case to determine what command you need to call, take a look at my example code below:</p>

<pre><code>public class Command {
    class InnerCommand implements InnerInterface {
        // implement execute command
    }

    class AnotherInnerCOmmand implements InnerInterface {
        // implement execute command
    }

    interface InnerInterface {
        void executeCommand();
    }
}
</code></pre>

<p>You can use a <code>HashMap&lt;String, InnerInterface&gt;</code> to map String commands to a specific command that you want to run based on the input, make sure to populate the HashMap somewhere else (maybe in your Command class). Then instead of using a switch-case you only need to do:</p>

<pre><code>public static void doCommand(String commandString) {
    HashMap&lt;String, InnerInterface&gt; commandsMap = new HashMap&lt;String, Command.InnerInterface&gt;();
    InnerInterface commandInterface = commandsMap.get(commandString);
}
</code></pre>

<p>Then it's just a matter of calling <code>commandInterface.executeCommand();</code></p>
"
"26436801","<p>You can do this using Java Threads.</p>

<ol>
<li><p>Schedule a servlet to load on server startup. See How can I set a servlet to load on startup of the container, rather than on the first request?</p></li>
<li><p>In this servlet's init() method, spawn a thread.</p></li>
<li>In this thread's run() method, calculate the number of milliseconds to wait until the task should be performed. Then call Thread.sleep(msec). Then do the task, and loop (infinitely).
The java.util.Timer class can help a lot.</li>
</ol>

<p>Use the schedule() method of the java.util.Timer class:</p>

<pre><code>long now = System.currentTimeMillis();
Date whenToRun = new Date(now+millisecondsInFuture);
Timer timer = new Timer();
TimerTask task = new TimerTask() {
  public void run() {
// job code here
  }
};
 timer.schedule(task, whenToRun);
</code></pre>

<p>Or use the scheduleAtFixedRate() method of the java.util.Timer class:</p>

<pre><code>int initialDelay = 30000; // start after 30 seconds
int period = 5000;        // repeat every 5 seconds
Timer timer = new Timer();
TimerTask task = new TimerTask() {
 public void run() {
// job code here
  }
};
 timer.scheduleAtFixedRate(task, initialDelay, period);
</code></pre>
"
"25533516","<p>Para aquel que le interese
buil.xml</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;project name=""less.compile"" default=""css.concatenate"" basedir="".""&gt;
&lt;!-- compile LESS --&gt;
&lt;target name=""css.concatenate""&gt;
    &lt;concat destfile=""${basedir}/WebContent/cons/index.less""&gt;
        &lt;fileset dir=""${basedir}/WebContent/less/import""&gt;
            &lt;include name=""*.less""/&gt;
        &lt;/fileset&gt;
    &lt;/concat&gt;
    &lt;echo&gt;cons is done!&lt;/echo&gt;
&lt;/target&gt;

 &lt;target name=""css.lessc""&gt;
        &lt;java classname=""CpLess"" fork=""true""&gt;
            &lt;arg value=""${basedir}/WebContent/cons""/&gt;&lt;!-- output folder --&gt;
            &lt;arg value=""${basedir}/WebContent/less""/&gt;&lt;!-- output folder --&gt;
            &lt;classpath&gt;
                &lt;pathelement location=""${basedir}/WebContent/WEB-INF/lib/commons-     logging.jar""/&gt;
                &lt;pathelement location=""${basedir}/WebContent/WEB-INF/lib/js.jar""/&gt;
                &lt;pathelement location=""${basedir}/WebContent/WEB-INF/lib/lesscss-engine-1.3.3.jar""/&gt;
                &lt;pathelement location=""${basedir}/WebContent/WEB-INF/lib/yuicompressor-2.4.7.jar""/&gt;
                &lt;pathelement location=""${basedir}/WebContent/WEB-INF/lib/zkjszips.jar""/&gt;
                &lt;pathelement location=""${basedir}/WebContent/WEB-INF/lib/zkless.jar""/&gt;
                &lt;pathelement location=""${basedir}/WebContent/WEB-INF/lib/zul.jar""/&gt;&lt;!-- only needed if using _zkmixins.less --&gt;
            &lt;/classpath&gt;
        &lt;/java&gt;
    &lt;/target&gt;

&lt;target name=""lessc""&gt;
    &lt;java classname=""CpLess"" fork=""true""&gt;
        &lt;arg value=""C:/WKSLuna000/PruebasZul/WebContent/lesssrc""/&gt;&lt;!-- output folder --&gt;
        &lt;arg value=""C:/WKSLuna000/PruebasZul/WebContent/lessbuild""/&gt;&lt;!-- output folder --&gt;
        &lt;classpath&gt;
            &lt;pathelement location=""${basedir}/WebContent/WEB-INF/lib/commons-logging.jar""/&gt;
            &lt;pathelement location=""${basedir}/WebContent/WEB-INF/lib/js.jar""/&gt;
            &lt;pathelement location=""${basedir}/WebContent/WEB-INF/lib/lesscss-engine-1.3.3.jar""/&gt;
            &lt;pathelement location=""${basedir}/WebContent/WEB-INF/lib/yuicompressor-2.4.7.jar""/&gt;
            &lt;pathelement location=""${basedir}/WebContent/WEB-INF/lib/zkjszips.jar""/&gt;
            &lt;pathelement location=""${basedir}/WebContent/WEB-INF/lib/zkless.jar""/&gt;
            &lt;pathelement location=""${basedir}/WebContent/WEB-INF/lib/zul.jar""/&gt;&lt;!-- only needed if using _zkmixins.less --&gt;
        &lt;/classpath&gt;
    &lt;/java&gt;
&lt;/target&gt;
&lt;/project&gt;


En la carpeta cons/
                  /zk/
                      _header.less
                      _zkminis.less
                      _skvariables.less
En la carpeta less/
                  /import/
                         0index.less
                         button.less
                         ....
                         /zk/
                             _header.less
                            _zkminis.less
                            _skvariables.less

Archivo 0index.less:
@import ""../bootstrap/less/variables.less"";
@import ""../bootstrap/less/mixins.less"";
@import ""zk/_header.less"";
</code></pre>
"
"25800870","<p>Every application have their on session and sessionId on application server. management of session in java is depends that how to manage it. Generally session stored in cookies.  <code>HttpSessionAttributeListener</code> you can use object of that class to receive events.</p>

<p>we can develop a bean with name session or any your want and implements the HttpSession interface to get pattern methods.</p>

<p>that bean will contains all the information which you want to store in session.</p>
"
"14934069","<p><code>;</code> is endof String. if you give <code>;</code> at end of If condition, then the body doesn't executed..</p>

<p>so remove it and check your code..</p>

<pre><code>if(dInt &lt;= 0)
   Toast.makeText(getApplicationContext(), ""Game Over"",Toast.LENGTH_SHORT).show();
   Intent intent = new Intent();
   ......
</code></pre>
"
"15144214","<p>If performance is that important, then you probably don't want to waste the time to cast to and from <code>double</code>s every time you calculate something.</p>

<p>As I understand it, on older hardware floats were faster than doubles, thus you needed a Math library for floats. Now, ""<em>on modern hardware doubles are just as fast as float</em>"", thus you should use the default <code>Math</code> with doubles.</p>

<p>If it is important for your application that the values are floats (e.g., because of memory consumption), you should continue using FloatMath, because <code>float foo = (float) Math.sin(bar);</code> will become annoying if you use it a lot.</p>
"
"25809876","<pre><code>public static void printArray(String id)
    {
    System.out.println(""Array "" + id + "": content of Array"" + id);
    }
</code></pre>

<p>will do the work.</p>

<p>In the toString method ""array"" is a variable, and it is not declared before, because of this you get the error message.</p>

<p>Edit:</p>

<pre><code>public static void printArray(String id){
    if(id.equals(""A"")){
        // print the content of array A
    } else if(id.equals(""B"")){
        // print the content of array B
    } else if(id.equals(""C"")){
        // print the content of array C
    } else {
        System.out.println(""I don't know that array"");
    }
}
</code></pre>

<p>Is that what you want?</p>
"
"25809933","<p>Two ways to go here i think: If it's very unlikely this task will change, a simple regex can solve it for you and a one line code. If the problem becomes structured, or your app works with a lot of xml, you probably want to parse it and operate dynamically.</p>

<p>a simple regex could be: </p>

<pre><code>"".*&lt;[sS]ensdata&gt;(.*)&lt;/[sS]ensdata&gt;.*"", group 1 ( ""$1"" ) will be your value.
</code></pre>
"
"14937821","<p>Generally jdk1.4 ""for - loop"":</p>

<pre><code>for(datatype intialization;condition;increment/Decrement) {  

}
</code></pre>

<p>Jdk1.5 ""For-loop""/Enhanced For Loop:</p>

<pre><code>for (String element : array) {
    System.out.println(""Element: "" + element);
}
</code></pre>
"
"15009880","<p>As the first answer, the form would be:</p>

<pre><code>List&lt;Integer&gt; auxList = originalList.subList(0, 3);
for(int i =0; i &lt; 3; i++) {originalList.remove(i);}
originalList.addAll(auxList);
</code></pre>
"
"25204121","<p>Use the Seconds class</p>

<pre><code>DateTime now = DateTime.now();
DateTime dateTime = now.plusMinutes(10);
Seconds seconds = Seconds.secondsBetween(now, dateTime);
System.out.println(seconds.getSeconds());
</code></pre>

<p>EDIT:</p>

<p>Int type ranges from –2,147,483,648 to 2,147,483,647. Your value give you something like
3,565,987,200. So this method will not work for you</p>

<p>Workaround:</p>

<pre><code>Date d1 = ...;
Date d2 = ...;
long seconds = (d2.getTime()-d1.getTime())/1000;
</code></pre>
"
"15485391","<p>The right way of doing the blocking request in play 2.1 is</p>

<pre><code>WSRequestHolder wsreqHolder = WS.url(""&lt;SOME URL WHICH TAKES PARAMETER&gt;"");
wsreqHolder.setQueryParameter(""id"", ""100"");
F.Promise&lt;WS.Response&gt; promiseOfResult = wsreqHolder.get();

WS.Response response = promiseOfResult.get(); //block here

String jsonData =  response.getBody();
return ok(""Client:""+jsonData);
</code></pre>

<p>I have tried it. It works</p>
"
"24948238","<p>You need to use URLConnection to achieve this:</p>

<p>HTTP GET:</p>

<pre><code>URLConnection connection = new URL(url + ""?"" + query).openConnection();
connection.setRequestProperty(""Accept-Charset"", charset);
InputStream response = connection.getInputStream();
</code></pre>

<p>Target URL's doGet() method will be called and the parameters will be available by HttpServletRequest#getParameter().</p>

<p>HTTP POST:</p>

<pre><code>URLConnection connection = new URL(url).openConnection();
connection.setDoOutput(true); // Triggers POST.
connection.setRequestProperty(""Accept-Charset"", charset);
connection.setRequestProperty(""Content-Type"", ""application/x-www-form-urlencoded;charset="" + charset);

try (OutputStream output = connection.getOutputStream()) {
    output.write(query.getBytes(charset));
}

InputStream response = connection.getInputStream();
</code></pre>

<p>Target URL's doGet() method will be called and the parameters will be available by HttpServletRequest#getParameter().</p>
"
"24948262","<p>Take a look</p>

<pre><code>    List&lt;String&gt; pathParam = null;
    if(null!=request.getPathInfo() &amp;&amp; !request.getPathInfo().trim().isEmpty()){

        String paths[] = this.getPathInfo().replaceAll(""\\/$|^\\/"", """").split(""/"");
        pathParam = new ArrayList&lt;&gt;(Arrays.asList(paths));
     }

    // assume your servlet url  is ""/login/*"" 

   // called url in browser /login/param1/param2/param3

    String param1 = pathParam.get(0);
    String param2 = pathParam.get(1);
    String param3= pathParam.get(2);
</code></pre>
"
"16247615","<p>use:</p>

<pre><code>splashtimer.stop();
</code></pre>

<p>and you should set the thread be a global object.</p>
"
"15994511","<p>Compile: gcc prime.c
Run (for the range 1-200): ./a.out 1 200</p>

<pre><code>#include&lt;stdio.h&gt;
#include&lt;math.h&gt;
int isPrime(int n){
    if(n==1) return 0;
    int i=2;
    while(i&lt;=sqrt(n))
        if(n%i++==0)
            return 0;
    return 1;
}
int main(int argc, char *argv[]){
    int a,b,count;
    if(argc&lt;3)
        return 0;
    a=atoi(argv[1]);
    b=atoi(argv[2]);
    count=1;
    for(;a&lt;=b;a++){
        if(isPrime(a)) printf(""%d "",a);
        else printf(""- "");
        if(count++==10){
            printf(""| %d\n"",a);
            count=1;
        }
    }
    return 0;
}
</code></pre>
"
"25922816","<p>Well, here's my shot at it. Worked for me:</p>

<pre><code>public class MakeItConcurrent {

    private static final ExecutorService threadPool = Executors.newFixedThreadPool(4);
    private static final AtomicInteger outputCount = new AtomicInteger();
    private static final ThreadLocal&lt;SecureRandom&gt; threadToStringBuilder = new ThreadLocal&lt;SecureRandom&gt;();

    public static String task() {
        SecureRandom rand = threadToStringBuilder.get();
        if (rand == null) {
            threadToStringBuilder.set(new SecureRandom());
            rand = threadToStringBuilder.get();
        }
        return rand.nextDouble() &gt; 0.5 ? ""output"" : null;
    }

    public static void doManyTasks() {
        int currOutputCount;
        while ( ( currOutputCount = outputCount.get() ) &lt; 100) {
            String output = task();
            if (output != null) {
                // outputCount.compareAndSet(currOutputCount, currOutputCount + 1); use this if you want exactly 100 outputs
                outputCount.set(currOutputCount + 1);
                System.out.println(output);
            }
        }
        threadPool.shutdownNow();
    }

    public static void main(String[] args) throws InterruptedException {
        Runnable runnable = new Runnable() {            
            @Override public void run() {
                doManyTasks();
            }
        };
        threadPool.submit(runnable);
        threadPool.submit(runnable);
        threadPool.submit(runnable);
        threadPool.submit(runnable);
        while ( ! threadPool.isShutdown() ) {
            Thread.sleep(100);
        }
        System.out.println(outputCount);
    }
}
</code></pre>
"
"16257231","<p>Well in order to make them square, you have 2 options: 1. Make the button hold an icon image of just a square image of a transparent image. 2. you could set the button dimensions on your own. I am not sure how to set the dimensions, but that is a an option you could choose. You can just create a JToolBar that is set on the BorderLayout.SOUTH end of the window whenever you add, and whatever buttons are added onto that, will be right next to each other. To add the buttons do this:</p>

<pre><code>    JButton button1 = new JButton(""+"");
    JButton button2 = new JButton(""-"");
    JToolBar toolbar = new JToolBar();

    &lt;JPanel,JFrame,Whatever&gt;.add(toolbar, BorderLayout.SOUTH);

    toolbar.add(button1);
    toolbar.add(button2);
</code></pre>

<p>This will add the toolbar onto the JFrame, JPanel, or whatever you're adding it onto, and it will set it to the bottom of the screen as you see above.</p>

<p>Hope this helps!</p>
"
"16055757","<p>If you feel your Strings can occupy lots of memory then dont make them static or declare them using String literal. As both of these will get stored in permgen space and will almost mever be garbage collected [there is chance but slim, statics may never be garbage collected is you have not created your own classloader].
So create String using new operator so that will be created in heap and can be easily garbage collected i.e.</p>

<pre><code>String str = new String(""long string"");
</code></pre>

<p>EDIT:</p>

<p>How strings are stored: <a href=""http://www.ntu.edu.sg/home/ehchua/programming/java/J3d_String.html"" rel=""nofollow"">http://www.ntu.edu.sg/home/ehchua/programming/java/J3d_String.html</a></p>

<p>EDIT:</p>

<p>There has been a long discussion below regarding how new String works. Argument presented is that new String will create 2 objects one in heap and one in pool. THIS IS WRONG, it is not true by default and you can force java to do it by calling intern method. In order to back my argument following is the javadoc from Strin class for intern method:</p>

<blockquote>
  <p>intern</p>
  
  <p>public String intern() Returns a canonical representation for the
  string object. A pool of strings, initially empty, is maintained
  privately by the class String.</p>
  
  <p>When the intern method is invoked, if the pool already contains a
  string equal to this String object as determined by the equals(Object)
  method, then the string from the pool is returned. Otherwise, this
  String object is added to the pool and a reference to this String
  object is returned.</p>
  
  <p>It follows that for any two strings s and t, s.intern() == t.intern()
  is true if and only if s.equals(t) is true.</p>
  
  <p>All literal strings and string-valued constant expressions are
  interned. String literals are defined in §3.10.5 of the Java Language
  Specification</p>
</blockquote>

<p>As can be seen by above doc that if new String always created an object in pool then intern method will be completely useless!! Also logically it doesn't makes any sense.</p>

<p>EDIT:</p>

<p>Also read the answer for this post : <a href=""http://stackoverflow.com/questions/12037288/string-pool-creating-two-string-objects-for-same-string-in-java"">String pool creating two string objects for same String in Java</a></p>
"
"25922831","<pre><code>import java.security.SecureRandom;
import java.util.concurrent.atomic.AtomicInteger;

public class MultiThreadedTask implements Runnable {

    private SecureRandom secureRandom;
    private AtomicInteger outputCount;

    public MultiThreadedTask(SecureRandom secureRandom, AtomicInteger outputCount) {
        this.secureRandom = secureRandom;
        this.outputCount = outputCount;
    }

    @Override
    public void run() {
        while (outputCount.get() &lt; 100) {
            String output = task();
            if (output != null &amp;&amp; outputCount.get() &lt; 100) {
                System.out.println(Thread.currentThread().getName() + "" -- ""+ outputCount.incrementAndGet());
            }
        }
    }

    public String task() {
        return secureRandom.nextDouble() &gt; 0.5 ? ""output"" : null;
    }

}

import java.security.SecureRandom;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.atomic.AtomicInteger;

public class TestMain {

    private SecureRandom secureRandom = new SecureRandom();
    private AtomicInteger outputCount = new AtomicInteger();

    public static void main(String[] args) {
        new TestMain().test();
    }

    public void test() {
        ExecutorService executor = Executors.newFixedThreadPool(4);
        for(int i =0; i &lt; 4; i++) {
            executor.execute(new MultiThreadedTask(secureRandom, outputCount));
        }
        executor.shutdown();
    }
}
</code></pre>
"
"25204132","<p>Have a look at <a href=""http://joda-time.sourceforge.net/apidocs/org/joda/time/Seconds.html#secondsBetween(org.joda.time.ReadableInstant"" rel=""nofollow"">http://joda-time.sourceforge.net/apidocs/org/joda/time/Seconds.html#secondsBetween(org.joda.time.ReadableInstant</a>, org.joda.time.ReadableInstant)</p>

<p>long secondsBetween = (Seconds.secondsBetween(new LocalDate(""1901-01-01""), new LocalDate()).getSeconds());</p>

<p>I think LocalDate()).getSeconds() is wrong, because you want to get the seconds between from two ReadableInstant. Try Seconds.secondsBetween with 2 LocalDates</p>

<p>Look here: <a href=""http://www.leveluplunch.com/java/examples/number-of-seconds-between-two-dates/"" rel=""nofollow"">http://www.leveluplunch.com/java/examples/number-of-seconds-between-two-dates/</a></p>

<pre><code>  // start day is 1 day in the past
DateTime startDate = new DateTime().minusDays(1);
DateTime endDate = new DateTime();

Seconds seconds = Seconds.secondsBetween(startDate, endDate);

int secondsInDay = seconds.getSeconds();
</code></pre>
"
"24986983","<p>I suggest You to change those <code>if</code> statements into one simple <code>for</code> loop with simple <code>int[]</code> vector. This solution is much more elegant and flexible. Additionally, You initialized and not used anywhere <code>int maxValue = max3(a, b, c);</code> in Your code.</p>

<pre><code>public class Demo {
    public static void main(String args[]) {
        int[] numbers = new int[] {2, 3, 4};

        System.out.println(maxValue(numbers));
    }

    public static int maxValue(int[] n) {
        int max = n[0];
        for (int i = 1; i &lt; n.length; i++) {
            if (n[i] &gt; max) {
                max = n[i];
            }
        }
        return max;
    }
}
</code></pre>

<p>But let's bow for a moment on the problem of methods implementation in Java.</p>

<p>At the begining of Your journey through the vastness of the Java realm You should get familiar with two types of methods: 1) <strong>void methods</strong>, and 2) <strong>return methods</strong>. The first ones are responsible for doing something without returning any value. We can for example use them for setting values of the fields of our application, initializing GUI, or other operations. The use of the <strong>void method</strong> can look like this:</p>

<pre><code>/* method declaration */
void setValue(int value) {
    someField = value;
}

/* method invocation */
setValue(5);
</code></pre>

<p>After invocation of <code>setValue(5)</code> the value of the <code>someField</code> object will be <code>5</code>. However, you have to remember about type compatibility, so in this case <code>someField</code> can not be e.g of <code>String</code> type.</p>

<p>Second method type mentioned above, i.e <strong>return method</strong> is very useful, when you expect the method to give You an output, e.g in result of some operations conducted on the data You've given to Your method. But of course it's not necessary, to provide for the <strong>return method</strong> an input. Anyway, the use of <strong>return method</strong> can look like this:</p>

<pre><code>/* method returns text You've given to it */
String getText(String text) {
    return text;
}

/* method returns result of addition of three given int's */
int calculate(int a, int b, int c) {
    return a + b + c;
}

/* method return a random number */
int createRandomNumber() {
    Random random = new Random();
    return random.nextInt();
}
</code></pre>

<p>You can easily see, that there is plenty of space for improvisation. Basicaly and in summary, <strong>void methods</strong> can work with given objects, for example can set values and conduct other operations, but thay don't return any STRAIGHT results You can work with. <strong>Return methods</strong>, from the other hand, provide You physical results, which You can use in further operations, or even in other methods, for example:</p>

<pre><code>import java.util.Random;

public class Demo {

    private static int someValue;

    public static void main(String args[]) {

        setValue(calculate(
        createRandomNumber(), 
        createRandomNumber(), 
        createRandomNumber()));

        System.out.println(someValue);
    }

    public static void setValue(int value) {
        someValue = value;
    }

    public static int calculate(int a, int b, int c) {
        return a + b + c;
    }

    public static int createRandomNumber() {
        Random random = new Random();
        return random.nextInt();
    }
}
</code></pre>
"
"25003939","<p>I think you can do it in two steps:
First, you check it's a List.</p>

<pre><code>if (o instanceof List)
</code></pre>

<p>Then, you check that one (each?) member of the list has the given type.</p>

<pre><code>for (Object obj : (List) o) {
    if (obj instanceof cls) {
        doSomething();
    }
}
</code></pre>
"
"28285212","<blockquote>
  <p>""The method add(String) is undefined for the type ListView""</p>
</blockquote>

<p>Because you are calling <code>add</code> method on ListView instead of Adapter.</p>

<blockquote>
  <p>How to add a new row item to list view</p>
</blockquote>

<p>To add/delete item from ListView use <code>ArrayList</code> as data-source instead of <code>Array</code> because if you use <code>Array</code> and call adapter <code>add</code> method then you will get <code>UnsupportedOperationException</code>.</p>

<p>So make following change in <code>AddActivityCustomList</code> Adapter :</p>

<p><strong>1.</strong> Use <code>ArrayList&lt;String&gt;</code> instead of <code>String[]</code> Array.</p>

<p><strong>2.</strong> Add new item to adapter as:</p>

<pre><code>AddActivityCustomList adapter=listView.getAdapter();
adapter.add(add_act_title.getText().toString());
adapter.notifyDataSetChanged();
</code></pre>
"
"25968102","<pre><code>if (android.os.Build.VERSION.SDK_INT &gt; 9) {
                            StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder()
                                    .permitAll().build();

                            StrictMode.setThreadPolicy(policy);
                        }
                        try {
                            URL diachi = new URL(""http://example.com"");
                            HttpURLConnection huc = (HttpURLConnection) diachi.openConnection();
                            huc.setRequestMethod(""HEAD"");
                            int responseCode = huc.getResponseCode();

                            if (responseCode != 404) {
                                //URL Exist

                            } else {
                                //URL not Exist
                            }
                        } catch (MalformedURLException e) {
                            e.printStackTrace();
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
</code></pre>
"
"25010708","<p>You can do one thing, you can fix your app to be run only in the vertical mode by adding this to your Manifest.xml file:</p>

<pre><code>android:screenOrientation=""portrait""
</code></pre>
"
"16090467","<p>You Just Need to Fetch the Values First &amp; then Put the Query :)</p>

<p>String uname = userTextBox.getText();<br>
String pwd = passTextBox.getText();    </p>

<pre><code>try          
    {     

    Class.forName(""sun.jdbc.odbc.JdbcOdbcDriver"");    

    Connection con = DriverManager.getConnection(""jdbc:odbc:ADB"");    

    Statement statement = con.createStatement();     

    statement.executeUpdate(""insert into Login "" + ""values  ('""+uname+""','""+pwd+""')"");     
     }
   catch(Exception e)        
    {      
       System.out.println(e);      
    }    
</code></pre>
"
"16299211","<p>You can try this solution, which finds an array inside a larger array:</p>

<pre><code>public static int findArray(Integer[] array, Integer[] subArray)
{
    if (Collections.indexOfSubList(Arrays.asList(array), Arrays.asList(subArray)) != null)
    {
        importsPreparedStatement = true;
    {
}
</code></pre>

<p>Just make <code>subArray[] = {""java,""sql"",PreparedStatement""};</code></p>
"
"16047245","<p>You want to use generics:</p>

<pre><code>public class Store implements Serializable{
  Hashtable&lt;Key, Item&gt; store = new Hashtable&lt;Key,Item&gt;();
}
</code></pre>

<p>This ensures that only <code>Item</code> objects (and properly subclasses objects) can be placed in your <code>Hashtable</code>, which means you have to do less checking in any place where you use this hashtable.</p>

<p><code>Key</code> can be anything you're using to reference your item; it might be <code>Integer</code> instead, or a <code>String</code> or some other object.</p>

<p>This prevents the following from happening:</p>

<pre><code>public class Item {
  public String blah;
  ...
  public void printThisString() {
    System.out.println(blah);
  }
  ...
}

...

Hashtable store = new Hashtable();
Item item = new Item();
item.blah = ""Hello world!"";
store.put(""FirstKey"",item);
store.put(""SecondKey"",""Hello world!"");
...
store.get(""FirstKey"").printThisString();//Works fine!
store.get(""SecondKey"").printThisString();//Fails because String does not have a printThisString method.
</code></pre>

<p>This forces someone inserting into the hashtable to think about what they're doing:</p>

<pre><code>Hashtable&lt;String, Item&gt; store = new Hashtable&lt;String,Item&gt;();
Item item = new Item();
item.blah = ""Hello world!"";
store.put(""MyKey"",item);
store.put(""SecondKey"",""Three tears for all the souls!"");//Will not compile because a String isn't an Item
...
store.get(""MyKey"").printThisString();//We can therefore be sure what is returned is an Item
</code></pre>

<p><strong>CODE UPDATE</strong></p>

<p>To address your code update:</p>

<pre><code>Store&lt;String, Item&gt; store = new Store&lt;String, Item&gt;();

Item item1 = new Item();
item1.setProductName(""Paper Towel Roll"");
item1.setBarCode(""111222333444"");
item1.setQuantity(1);

store.put(""111222333444"", item1);//note that since it's quoted the key is a String
</code></pre>
"
"16121464","<p>I guess you can do this.</p>

<pre><code>ArrayList&lt;ArrayList&lt;String&gt;&gt; m = new ArrayList&lt;ArrayList&lt;String&gt;&gt;();

m.get(0).add(""A"");    m.get(0).add(""B"");    m.get(0).add(""C"");
m.get(1).add(""D"");    m.get(1).add(""E"");    m.get(1).add(""F"");
m.get(2).add(""G"");    m.get(2).add(""H"");    m.get(2).add(""I"");
</code></pre>
"
"16325217","<pre><code>if (x &gt; y) {
  //x is greater than y
}
</code></pre>
"
"25050748","<p>The following example leads to a deadlock because the MyProgressListener tries to acquire the Downloader lock while it's already acquired.</p>

<pre><code>class MyProgressListener extends ProgressListener {
    private Downloader myDownloader;

    public MyProgressListener(Downloader downloader) {
        myDownloader = downloader;
    }

    public void onProgress(int n) {
        // starts and waits for a thread that accesses myDownloader
    }
}

Downloader downloader = new Downloader(...);
downloader.addListener(new MyListener(downloader));
downloader.run();
</code></pre>
"
"16075991","<p>Add another loop in your code.
Try this:</p>

<pre><code>public void printSquare(int min, int max) {
        for (int i = min; i &lt;= max; i++) {
            int j = i;
            for (j = i; j &lt;= max; j++) {
                System.out.print(j);
            }
            for (int k = j - i, l = min; k &lt; max; k++, l++) {
                System.out.print(l);
            }

            System.out.println();
        }
}
</code></pre>
"
"25326242","<p>Change your line to </p>

<pre><code>int rollnumber;
nigh = 1; // added
do {  
 try {       
     System.out.println(""how many times"");
     String response = scanner.nextLine(); // changed

     rollnumber = scanner.nextInt();     
     nigh=2;
    if(if(""q"".equalsIgnoreCase(response)){){  // changed
       System.exit(0);
     } else {
             rollnumber = scanner.nextInt();     
             nigh=2;
     }
  }
 catch (Exception e){
    System.out.println(""invalid. re-enter"");
    scanner.nextLine();    
   }     
 }while (nigh==1);
</code></pre>
"
"16330993","<p>Just use a project build system to track your dependencies (that is what they are good for).</p>

<p>I would you suggest to use <code>gradle</code> (preferable IMHO but check which one fits better on your context) or <code>maven</code>, both can handle subprojects pretty well and can generate the eclipse configuration for you.</p>
"
"25062721","<p><strong>You need to be very careful when using STL. Raw pointers may give better performances.</strong></p>

<p>Except if I missed something, on my machine (Corei5 under Windows), code compiled with -Ofast give those performances:</p>

<p>Over ten runs:</p>

<ul>
<li>NetVipeC's fastest code (with find_if algorithm) best run was 1722ms </li>
<li>Loki's code best run was 1756ms</li>
<li>With no STL container, the code below best run was 1568ms</li>
</ul>

<p>Strange thing is that the average speed of the no-STL version is slower, but sometimes, it gets faster than all others.</p>

<p>Here it is (removed STL, added inlines, early returns everywhere and avoided variable declaration in placerDame's loop). This is the fastest C++ code proposed on this page!</p>

<pre><code>#include &lt;algorithm&gt;
#include &lt;iostream&gt;
#include &lt;chrono&gt;
#include &lt;iomanip&gt;

using namespace std;

typedef std::pair&lt;int, int&gt; Point;

#define LARGEUR_GRILLE 22
Point* positions;
size_t index = 0;

inline bool verifierNonPrise( Point const&amp; emplacement ) 
{
    for ( size_t p = 0; p != index; ++p )
    {
        Point&amp; pos = positions[p];
        if ( pos.first != emplacement.first)
        {
            if ( pos.second == emplacement.second ) 
            {
                return false;
            }
            if ( abs(pos.second - emplacement.second) ==
                 abs(pos.first - emplacement.first) ) 
            {
                return false;
            }
        }
    }

    return true;
}

inline bool placerDame(int i) 
{
    for (int j = 1; j &lt;= LARGEUR_GRILLE; j++) 
    {
        positions[index].first = i;
        positions[index].second = j;
        if (verifierNonPrise(positions[index++]) &amp;&amp; (i == LARGEUR_GRILLE || placerDame(i + 1))) 
        {
            return true;
        }
        else 
        {
            --index;
        }
    }

    return false;
}

int main()
{
    std::chrono::system_clock::time_point begin_time =
        std::chrono::system_clock::now();

    positions = new Point[LARGEUR_GRILLE];
    placerDame(1);

    for ( size_t p = 0; p != index; ++p ) 
    {
        cout &lt;&lt; ""("" &lt;&lt; positions[p].first &lt;&lt; ""; "" &lt;&lt; positions[p].second &lt;&lt; "")"" &lt;&lt; endl;
    }

    std::chrono::system_clock::time_point end_time =
        std::chrono::system_clock::now();
    long long elapsed_milliseconds =
        std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(
            end_time - begin_time).count();
    std::cout &lt;&lt; ""Duration (milliseconds): "" &lt;&lt; elapsed_milliseconds
              &lt;&lt; std::endl;

    delete [] positions;

    return 0;
}
</code></pre>

<p>Sorry, I have no Java environment to compare...I never used Java and don't want to start today ;-) But I would be really surprised if this optimized code is slower than Java....</p>

<p>If C++ is slower, you need to first make sure it is fully optimized. Fully optimized C++ code will (most likely) be faster than Java.</p>
"
"25345966","<p>If you use ++ operator as prefix like: ++var; then, the value of operand is increased by 1 then, only it is returned but, if you use ++ as postfix like: var++; then, the value of operand is returned first then, only it is increased by 1.</p>

<p>For example,</p>

<pre><code>class Example
{
    public static void main(String[] args)
    {
        int var = 1;    
        System.out.println(var++);
        System.out.println(""\n"" + ++var);    
    }
}
</code></pre>

<p>the following program prints</p>

<pre><code>1
3
</code></pre>

<p>In the prefix form, the increment or decrement takes place before the value is used in expression evaluation, so the value of the expression is different from the value of the operand. In the postfix form, the increment or decrement takes place after the value is used in expression evaluation, so the value of the expression is the same as the value of the operand.</p>
"
"16100119","<p>Start with @achintya-jha's answer. When you split a String, it will give you an array (or something that acts like it) so you can iterate throught the pair of key/value  and then you do the second split which is supposed to give you another array of size 2; you then use the first element as the key and the second as the value.</p>

<p>EDIT:</p>

<p>I dind't found useful link for what I meant (see the comments on the question) in JAVA, (there is plenty of them for C/C++ though) so I wrote it:</p>

<pre><code>Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();
String str = ""KEY1=Value1, KE_Y2=[V@LUE2A, Value2B]], Key3=, KEY4=V-AL.UE4, KEY5={Value5}"";     


final String openBrackets =  ""({[&lt;"";
final String closeBrackets = "")}]&gt;"";

String buffer = """";
int state = 0;
int i = 0;      
Stack&lt;Integer&gt; stack = new Stack&lt;Integer&gt;(); //For the brackets

String key = """";


while(  i &lt; str.length() ) {

    char c = str.charAt(i);


    //Skip any whitespace
    if( "" \t\n\r"".indexOf(c) &gt; -1 ) {
        ++i;
        continue;
    }


    switch(state) {

    //Reading Key
    case 0:
        if( c != '=' ) {
            buffer += c;
        } else {
            //Go read a value.
            key = buffer;
            state = 1;
            buffer = """";
        }
        ++i;
        break;

    //Reading value
    case 1:

        //Opening bracket
        int pos = openBrackets.indexOf(c);
        if( pos != -1 ) {
            stack.push(pos);
            ++i;
            break;
        }

        //Closing bracket
        pos = closeBrackets.indexOf(c);
        if( pos != -1 ) {

            if( stack.size() == 0 ) {
                throw new RuntimeException(""Syntax error: Unmatched closing bracket '"" + c + ""'"" );
            }

            int pos2 = stack.pop();
            if( pos != pos2 ) {
                throw new RuntimeException(""Syntax error: Unmatched closing bracket, expected a '""
                        + closeBrackets.charAt(pos2) + ""' got '"" + c );             
            }
            ++i;
            break;
        }

        //Handling separators 
        if( c == ',' ) {
            if( stack.size() == 0 ) {
                //Put the pair in the map.
                map.put(key, buffer);

                //Go read a new Key.
                state = 0;
                buffer = """";
                ++i;
                break;
            }                       
        }

        //else
            buffer += c;
            ++i;


        } //switch
} //while
</code></pre>
"
"16361486","<p>Not sure if you are just asking about formatting the output in a line or you want some logic change:</p>

<p>For formatting the output in a line here is the updated code:</p>

<pre><code>       public class Factorial {
       public static void main(String args[]) {
            int n, c, fact = 1;  

            for ( c = 1 ; c &lt;= 5 ; c++ ) {
                fact = fact*c;
                System.out.print(fact);
                System.out.print("" "");
            }
        }
}
</code></pre>
"
"16187093","<p>you can do it programatically as</p>

<pre><code>Button[] buttons; 
for(int i=0; i&lt;4; i++) {
{
 String buttonID = ""button"" + (i+1);

 int resID = getResources().getIdentifier(buttonID, ""id"", getPackageName());
 buttons[i] = ((Button) findViewById(resID));
 int height,width;   //get the width of your layout and set to these variables
 width/=2;
 buttons.setWidth(width);

}
</code></pre>
"
"16104953","<p>Since you don't know which item are redundant you need to loop over your array. I suggest that you use temporary List uniqueItemsList to add the items during your loop.
The list will grow as needed.</p>

<p>Then you can get a array with code like this (replace String with your type) :</p>

<pre><code>String uniqueItems[] = new String[uniqueItemsList.size()]; 
uniqueItems = uniqueItemsList.toArray(uniqueItems);
</code></pre>
"
"26150861","<pre><code>int[] test = {1, 4, 2, 10, 5};
Arrays.sort(test);
System.out.println(""Smallest:"" + test[0] + ""  Largest:"" + test[4]);
</code></pre>

<p>Store in array then sort the array.</p>
"
"28398038","<p>Okay, so I got it right after I posted this. Thanks for helping anyways, though! I just changed the range of my <code>substring</code> to read one character, not all the ones after it as well.</p>

<p>I still did not fix the issue with my long code, but hey, it works.</p>

<pre><code>import java.util.Scanner;

public class stringprogram {
    public static void stringinputmethod()
    {
        Scanner scan = new Scanner(System.in);
        System.out.println(""Enter a String"");
        String strs = scan.nextLine();

        int numa = 0;
        int numb = 0;
        int numc = 0;
        int numd = 0;
        int nume = 0;
        int numf = 0;
        int numg = 0;
        int numh = 0;
        int numi = 0;
        int numj = 0;
        int numk = 0;
        int numl = 0;
        int numm = 0;
        int numn = 0;
        int numo = 0;
        int nump = 0;
        int numq = 0;
        int numr = 0;
        int nums = 0;
        int numt = 0;
        int numu = 0;
        int numv = 0;
        int numw = 0;
        int numx = 0;
        int numy = 0;
        int numz = 0;

        String randaf;

        for(int i=0; i&lt;=strs.length()-1;i++)
        {
            randaf = strs.substring(i, i+1);

            if(randaf.equals(""a""))
            {
                numa = numa + 1;
            }
            else if(randaf.equals(""b""))
            {
                numb = numb + 1;
            }
            else if(randaf.equals(""c""))
            {
                numc = numc + 1;
            }
            else if(randaf.equals(""d""))
            {
                numd = numd + 1;
            }
            else if(randaf.equals(""e""))
            {
                nume = nume + 1;
            }
            else if(randaf.equals(""f""))
            {
                numf = numf + 1;
            }
            else if(randaf.equals(""g""))
            {
                numg = numg + 1;
            }
            else if(randaf.equals(""h""))
            {
                numh = numh + 1;
            }
            else if(randaf.equals(""i""))
            {
                numi = numi + 1;
            }
            else if(randaf.equals(""j""))
            {
                numj = numj + 1;
            }
            else if(randaf.equals(""k""))
            {
                numk = numk + 1;
            }
            else if(randaf.equals(""l""))
            {
                numl = numl + 1;
            }
            else if(randaf.equals(""m""))
            {
                numm = numm + 1;
            }
            else if(randaf.equals(""n""))
            {
                numn = numn + 1;
            }
            else if(randaf.equals(""o""))
            {
                numo = numo + 1;
            }
            else if(randaf.equals(""p""))
            {
                nump = nump + 1;
            }
            else if(randaf.equals(""q""))
            {
                numq = numq + 1;
            }
            else if(randaf.equals(""r""))
            {
                numr = numr + 1;
            }
            else if(randaf.equals(""s""))
            {
                nums = nums + 1;
            }
            else if(randaf.equals(""t""))
            {
                numt = numt + 1;
            }
            else if(randaf.equals(""u""))
            {
                numu = numu + 1;
            }
            else if(randaf.equals(""v""))
            {
                numv = numv + 1;
            }
            else if(randaf.equals(""w""))
            {
                numw = numw + 1;
            }
            else if(randaf.equals(""x""))
            {
                numx = numx + 1;
            }
            else if(randaf.equals(""y""))
            {
                numy = numy + 1;
            }
            else if(randaf.equals(""z""))
            {
                numz = numz + 1;
            }
        }
        System.out.println(""a: ""+numa +""\nb: ""+ numb +""\nc: ""+ numc +""\nd: ""+ numd +""\ne: ""+ nume +""\nf: ""+ numf +""\ng: ""+ numg +""\nh: ""+ numh +""\ni: ""+ numi +""\nj: ""+ numj +""\nk: ""+ numk +""\nl: ""+ numl +""\nm: ""+ numm +""\nn: ""+ numn +""\no: ""+ numo +""\np: ""+ nump +""\nq: ""+ numq +""\nr: ""+ numr +""\ns: ""+ nums +""\nt: ""+ numt +""\nu: ""+ numu +""\nv: ""+ numv +""\nw: ""+ numw +""\nx: ""+ numx +""\ny: ""+ numy +""\nz: ""+ numz);
    }

    public static void main(String[] args)
    {
        stringinputmethod();
    }
}
</code></pre>
"
"25396343","<p>Your problem is that your start index gets reset each time the function is called. Try this code</p>

<pre><code>class Recursion {
//recursion should stop after 9 attempts
static int stopindex = 9;

public static void main(String[] args) {
    //a=number of ""O""s and b=number of ""X""s
    int a = 9;
    int b = 1;
    int startindex = 1;
    recursion(a, b, startindex);

}
public static void recursion(int a, int b, int startIndex) {

    //start of recursion at index 1


    //stop condition of recursion
    if (startIndex &gt; stopindex)
        return;

    //printing of pattern
    for (int i = a; i &gt; 0; i--) {
        System.out.print(""O"");
    }
    for (int j = 0; j &lt; b; j++) {
        System.out.print(""X"");
    }
    System.out.println();

    --a;
    ++b;
    ++startIndex;
    recursion(a, b, startIndex);
}
}
</code></pre>

<p>Output</p>

<pre><code>OOOOOOOOOX
OOOOOOOOXX
OOOOOOOXXX
OOOOOOXXXX
OOOOOXXXXX
OOOOXXXXXX
OOOXXXXXXX
OOXXXXXXXX
OXXXXXXXXX
</code></pre>
"
"16183039","<p>The best solution for your class is going to be:</p>

<pre><code>import java.util.*;
public class Questionaire{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        System.out.print(""Do you love java? &gt; "");
        String output=sc.nextLine();
        while(true){ // Keep doing this forever
            if(output.equalsIgnoreCase(""yes"") || output.equalsIgnoreCase(""no"")){ // If the user enters yes or enters no
                System.out.println(""Thank you!""); //Print thank you
                break; // Exit
            } else {
                System.out.println(""Try again""); //Print try again
                output = sc.nextLine(); // Get new user input.
            }
        }
        sc.close();

    }
}
</code></pre>
"
"26150934","<p>Put the numbers into an array or a collection, initialise a variable that will store your min or max (with an <code>Integer.MAX_VALUE</code> or <code>Integer.MIN_VALUE</code>, respectively), then iterate the array/collection, each time comparing current element with the variable's value and updating the variable when necessary.</p>

<hr>

<p>EDIT: one-liner for this solution as requested in the comments.</p>

<pre><code>int max = Collections.max(Arrays.asList(number1, number2, number3, number4, number5));
</code></pre>

<p>Same for <code>min</code>.</p>
"
"16196952","<p>Like this</p>

<pre><code>StringBuilder sb = new StringBuilder(charSequence.length());
sb.append(charSequence);
BigDecimal bigDecimal = new BigDecimal(sb.toString());
</code></pre>

<p>This protects you in case there's a problem with the charSequence concrete class implementation of toString().  CharSequence is an interface that could be backed by a user written concrete class.</p>
"
"25143156","<p>What about:</p>

<pre><code>""your string"".toCharArray().length
</code></pre>
"
"26166772","<p>I am pretty sure you need to look up your persistence context and assign the entitymanager from that.</p>

<pre><code>@Dependent
@Stateful
public class ReportService {
    @PersistenceContext(name = ""persistence/AbcPU"", unitName = ""AbcPU"")

    public abstract EntityManager getEntityManager() {
       EntityManager em = null;
       try {
          Context envCtx = InitialContext.doLookup(""java:comp/env"");
          em = (EntityManager) envCtx.lookup(""persistence/AbcPU"");
       } catch (NamingException ne) {
          //Handle Exception
       }
       return em;
    }

    public void saveDog() {
        System.out.println(""BBBBB Start ReportService.saveDog();"");
        Doggy doggy = new Doggy();
        doggy.setDogName(""Wuffi"");
        try {
            System.out.println(""BBBBB Persist Success ReportService.saveDog();"");
            getEntityManager().persist(doggy);
        } catch (Exception ex) {
            System.out.println(""BBBBB Persist Fail ReportService.saveDog();"");
            System.err.println(""Error with em.persist(doggy): "" + ex.getMessage());
        }
        System.out.println(""BBBBB Stop ReportService.saveDog();"");
    }
}
</code></pre>
"
"16398135","<p>Extend <code>Runnable</code> with your own implementation:</p>

<pre><code>public class StoppableRunnable extends Runnable {

}
</code></pre>

<p>Code your class so that you can stop the execution of the <code>Runnable</code>, you will find a good example of how to do this here <a href=""http://stackoverflow.com/questions/10961714/how-to-properly-stop-the-thread-in-java"">How to properly stop the Thread in Java</a>. Make sure you look at the <strong>first two answers</strong>.</p>

<p>In your equivalent of the <code>terminate()</code> function, do all your cleanup</p>
"
"28462022","<p>You would want to extract the string, put it all into a list, and loop through</p>

<pre><code>String[] old = myTextView.getText().split("" "");
String add="""";
for(String s:old)
    add+=""""+s.charAt(0);
myTextView.setText(add);
</code></pre>
"
"16207007","<pre><code>final String HAY = ""_0_"";
String str = ""ABC\\DEF"".replace(""\\"", HAY);
System.out.println(Arrays.asList(str.split(HAY)));
</code></pre>
"
"28471526","<p>since you Declaring a Map you should Specify all types it helps a lot and should be always Correct so it should be like T should be a type and not Generic since you declare it so java wants to know the type in the newer Versions of java you dont need to declare the second &lt;> generics so i dont know the second type of your inner map so i used Object</p>

<pre><code>public static Map&lt;IFoo,Map&lt;String,Object&gt;valueChache=new Hashmap&lt;&gt;();
</code></pre>

<p>Both should be Correct</p>

<pre><code>public static Map&lt;IFoo,Map&lt;String,Object&gt;valueChache=new Hashmap&lt;IFoo,Map&lt;String,Object&gt;();
</code></pre>
"
"16145484","<pre><code>for(int j=0; j&lt;children.getLength();j++) {
   if (children.item(j) instanceof Element == false)
       continue;

   NamedNodeMap n = children.item(j).getAttributes();
   passwordTagAttr=(Attr) n.getNamedItem(""name"");
   passwordTagAttr=(Attr) n.getNamedItem(""uri"");
   passwordTag=stopTagAttr.getValue();  
   passwordList.add(passwordTag);                   
}
</code></pre>
"
"16429566","<p><code>[0-9]</code> will match a single digit</p>

<p><code>[0-9]?</code> will match 0 or 1 digits</p>

<p><code>[0-9]*</code> will match 0 or many digits</p>

<p><code>[0-9]+</code> will match 1 or many digits</p>

<p>you can also replace <code>[0-9]</code> with <code>\d</code> for a digit</p>
"
"25478465","<p>If I change the class <code>Cougar</code> to</p>

<pre><code>public class Cougar extends Feline {
    public String type = ""c ""; // &lt;-- shadow Feline's type.
    public void hh() {
        super.hh();
        // this.type = ""c "";
        System.out.print(""CCCCC "" + this.type + super.type);
    }
}
</code></pre>

<p>Then I get the output you seem to expect of</p>

<pre><code>FFFFF CCCCC c f 
</code></pre>

<p>Instead of the output your code produces (which was)</p>

<pre><code>FFFFF CCCCC c c 
</code></pre>

<p>This is not the OO way to do things, because <code>Cougar</code> <a href=""http://en.wikipedia.org/wiki/Is-a"" rel=""nofollow""><strong>is-a</strong></a> <code>Feline</code>. The behaviour you see (of the value changing in the super class) is because of that relationship. Finally, to keep the values distinct you would need to shadow the <code>Feline</code> type as above.</p>
"
"16238309","<pre><code>return ""AA: "" + rows;   its calling toString method on Row object 
</code></pre>

<p>actually you have to append the  each column val</p>

<p>try</p>

<pre><code>return ""AA: "" +col1 + "" "" + col2 + "" "" + col3;  //typo edited
</code></pre>
"
"25478489","<p>I can't understand you real meaning of doing this.
If you really want to diff the type, you should declare the type in Cougar:</p>

<pre><code>public class Cougar extends Feline {
    public String type = ""c "";

    ...
}
</code></pre>
"
"16439999","<p>You can use this .!!</p>

<pre><code>String formatDate = new SimpleDateFormat(""yyyy-MM-dd"").format( yourDate);
</code></pre>
"
"16455905","<p>you can use the below command. Let me know if it is working.</p>

<pre><code>driver.findElement(By.id(""id of the dropdown"")).sendkeys(""part of visible text"");
driver.findElement(By.id(""id of the dropdown"")).sendKeys(Keys.ENTER);
</code></pre>
"
"26266498","<p>The compiler isn't smart enough to work out that you've covered every possible value of <code>secondNumber</code>, by way of your <code>while</code> loop (which ensures that <code>secondNumber</code> must be between 0 and 9).  </p>

<p>You need to give <code>secondNumberString</code> a default value such as <code>null</code> or <code>""""</code> before the big <code>switch/case</code> to prevent this happening, or alternatively in the <code>default</code> case.</p>
"
"28556168","<p>Make a <code>TreeMap&lt;Integer, List&lt;ObjectTypeFromA&gt;&gt;</code> where the map key is the values in B, and the map values are the values in A (using a list to allow for duplicate keys).  It will be sorted in the order of B by definition.</p>

<pre><code>public static void main(String[] args) {
  String[] strings = { ""string1"", ""string2"", ""string3"", ""string4"" };
  int[] ints = { 40, 32, 32, 34 };
  System.out.println(Arrays.toString(getSortedStringArray(strings, ints)));
}

public static String[] getSortedStringArray(String[] strings, int[] order) {
  Map&lt;Integer, List&lt;String&gt;&gt; map = new TreeMap&lt;&gt;();
  for (int i = 0; i &lt; strings.length; i++) {
    if (!map.containsKey(order[i])) {
      map.put(order[i], new LinkedList&lt;String&gt;());
    }
    map.get(order[i]).add(strings[i]);
  }
  String[] ret = new String[strings.length];
  int i = 0;
  for (Map.Entry&lt;Integer, List&lt;String&gt;&gt; mapEntry : map.entrySet()) {
    for (String s : mapEntry.getValue()) {
      ret[i++] = s;
    }
  }
  return ret;
}
</code></pre>
"
"16272232","<p>You can do that from web config file. A sample is here</p>

<pre><code> &lt;sessionState 
        mode=""InProc"" 
        stateConnectionString=""tcpip=127.0.0.1:42424"" 
        stateNetworkTimeout=""10"" 
        sqlConnectionString=""data source=127.0.0.1;Integrated Security=SSPI"" 
        sqlCommandTimeout=""30"" 
        customProvider="""" 
        cookieless=""UseCookies"" 
        cookieName=""ASP.NET_SessionId"" 
        timeout=""10"" 
        allowCustomSqlDatabase=""false"" 
        regenerateExpiredSessionId=""true"" 
        partitionResolverType="""" 
        useHostingIdentity=""true""&gt;
        &lt;providers&gt;
         &lt;clear /&gt;
        &lt;/providers&gt;
   &lt;/sessionState&gt;
</code></pre>

<p>The timeout property will specify the timeout period.</p>
"
"16285732","<p>The ? non-greedy flag can only be used after a + or *, in your context, it is a 0-or-1 match.</p>

<p>You want </p>

<pre><code>System.out.println(""city,state,country"".replaceAll(""(.*?,)"", """"));
</code></pre>
"
"25283178","<p>I often use a scenario like the following:</p>

<pre><code>@Test
public void testGoForAWalkWhenSpeedIsToPowerfulShouldThrowTerribleWindException throws TerribleWindException {
    WalkService ws = new WalkService(100);
    try {
        goForAWalk();
        fail();
    catch(TerribleWindException twe) {
    }
}
</code></pre>
"
"25283201","<p>No you can catch specific exception by using the following template </p>

<pre><code>@Test(expected= TerribleWindException.class)
</code></pre>
"
"16293018","<p>Variable arguments are treated as arrays in java. So instead of passing an int value, pass it like an array . For eg.</p>

<pre><code>int[] i ={5};
call(i);
</code></pre>
"
"16189028","<p>A common anti-pattern is using type checking, for example with <code>instanceof</code>, instead of polymorphism. Here's a simple example.</p>

<pre><code>public class Shape {
    public void draw() {
        if (this instanceof Square) {
            // Draw a square
        } else if (this instanceof Circle) {
            // Draw a circle
        }
    }
}

public class Square extends Shape {
    // ...
}

public class Circle extends Shape {
    // ...
}
</code></pre>

<p>Note that in the <code>draw()</code> method in class <code>Shape</code>, we determine what to draw by looking at the type of the current object, and then executing the appropriate code. This has several disadvantages: class <code>Shape</code> needs to know about all of its subclasses, and if you want to add a new shape, you'll have to modify class <code>Shape</code> too. It's much better to use polymorphism, by overriding the <code>draw()</code> method in the subclasses:</p>

<pre><code>public abstract class Shape {
    public abstract void draw();
}

public class Square extends Shape {
    public void draw() {
        // Draw a square
    }
}

public class Circle extends Shape {
    public void draw() {
        // Draw a circle
    }
}
</code></pre>

<p>This way, class <code>Shape</code> does not need to know about all of its subclasses, you don't need to modify <code>Shape</code> to add a new shape and all logic that belongs to a particular shape is in the place where it belongs (the class for that shape).</p>
"
"28608329","<p>You're getting <code>NullPointerException</code>, because your <code>Region</code> class does not find <code>getRegion()</code> method which is inside your <code>MainActivity</code>.</p>

<p>Provide the activity to the constructor of <code>Region</code> class.</p>
"
"25304652","<p><code>Set</code> is just an interface. Ordering will depend on implementation. For example <code>TreeSet</code> is an ordered implementation of <code>Set</code>.</p>
"
"28629075","<pre><code>import java.util.NoSuchElementException;
import org.openqa.selenium.*;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.annotations.Test;
import org.testng.asserts.SoftAssert;
public class dropdown {
     private static WebDriver driver = new FirefoxDriver() ;
     String Path =""C:\\Users\\VGupta\\Desktop\\testcases\\auto.xlsx"";
     @Test
     public void test() throws Exception
    {
            driver.get(""http://www.test.com/"");
          //Dimension size   = ('900','500');
          driver.manage().window().setSize(new Dimension(1000,1000));
         try{
         driver.findElement(By.id(""foo"")).click();

          } catch(NoSuchElementException e)
          {
              System.out.println(e.getStackTrace());
          }
}
</code></pre>
"
"16330356","<p>This is simple Inheritance. First is a super class of Second and Second is a super class of Third. Basically when you create an object of class Third it will inherit all the (non-private) properties from parent classes that is both class First and Second.</p>

<pre><code>First -&gt; Second -&gt; Third 
</code></pre>

<p><strong>The Super keyword</strong> - In the given example you are overriding (implementing a super class method in the subclas) the method name() of super class First in the subclass second.Using the keyword super.name() lets you call the name() method of the super class.</p>

<p>And the most important thing I would want you to remember is</p>

<blockquote>
  <p><strong>The java compiler calls a method based on the Reference type and not
  the object type</strong></p>
</blockquote>

<p>when you say </p>

<pre><code>varSecond.whoRules();
</code></pre>

<p>In this case the object reference belongs to class Second </p>

<pre><code>System.out.print(super.name() + "" rules"");//calls the name() in class First
System.out.println(""but"" + name()+""is even better"");//calls the name() in class Second
</code></pre>

<p>but when you say</p>

<pre><code>varThird.whoRules();
</code></pre>

<p>In this case the object reference belongs to class Third</p>

<pre><code>System.out.print(super.name() + "" rules"");//calls the name() in class First
System.out.println(""but"" + name()+""is even better"");//calls the name() in class Third
</code></pre>

<p>Simply because the name() method is defined in class Third. If you had not defined the name() method in class Third it would have called the super class method .</p>

<p>and answering your other question there is no hard limit on the depth of inheritance but normally you don't see 10 super classes in a hierarchy in a good design.  </p>
"
"16336989","<p>The <a href=""http://docs.oracle.com/javaee/6/api/javax/ws/rs/core/UriBuilder.html"" rel=""nofollow""><code>UriBuilder</code></a> does exactly what you need: </p>

<pre><code>UriBuilder.fromPath(""http://localhost:8080/api/upload/form/{uploadType}/{uploadName}"").build(""foo"", ""bar"");
</code></pre>

<p>Results in:</p>

<pre><code>http://localhost:8080/api/upload/form/foo/bar
</code></pre>
"
"16229117","<pre><code>public static void main(String[] args) {

  for(i=0;i &lt;= 10; i++) {
      int s = i*3;
     System.out.println(i + ""-&gt; "" + (s+1) + "","" + (s+2) + "","" + (s+3)):
  }
} 
</code></pre>
"
"28663822","<p>When I search for the views by their id's, i find them. But when I use the variables that store the textviews, they can't be recognized and i'm constantly told that they are no where to be found. My button don't give me probles. Only the textviews keeps saying ""Cannot resolve symbol""</p>

<pre><code>@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    Button button1, button2, button3;
    button1 = ((Button) findViewById(R.id.button1));
    button2 = ((Button) findViewById(R.id.button2));
    button3 = ((Button) findViewById(R.id.button3));
    button1.setOnClickListener(this);
    button2.setOnClickListener(this);
    button3.setOnClickListener(this);
    TextView textview1, textview2, textview3, questionView, questionView2, questionNumber;

    textview1 = ((TextView) findViewById(R.id.textView1));
    textview2 = ((TextView) findViewById(R.id.textView2));
    textview3 = ((TextView) findViewById(R.id.textView3));
    questionView = ((TextView) findViewById(R.id.questionView));
    questionView2 = ((TextView) findViewById(R.id.questionView2));
    questionNumber = (TextView) findViewById(R.id.questionNumber);
}

   @Override

        public void onClick( View v) {
            switch (v.getId()) {
                case R.id.button1:



                    if(questionIndex &lt; questions.length -1
                            )

                        if (questionIndex != 5){
                            textview2.setText("""");
                        } if (questionIndex == 5){
                    textview2.setText(halfQues8);
                }
</code></pre>

<p>// make sure the index is in bounds</p>

<pre><code>                    questionIndex++ ; // increment the index


                    questionValue ++;



                    questionView.setText(Questions[questionIndex]); // set the text to the next question

    /*
     * set the text to the next answer options
     */
                    textview1.setText(answerButtA[questionIndex]);
                    textview2.setText(answerButtB[questionIndex]);
                    textview3.setText(answerButtC[questionIndex]);
                    questionNumber.setText(""Question "" + questionValueS + ""."");

            }

            else{

                questionView.setText(""Complete"");
                questionNumber.setText("""");
                questionView2.setText("""");

                textview1.setText("""");
                textview2.setText("""");
                textview3.setText("""");
                Results.setText(""Click here for results"");
            }






            break;
                case R.id.button2:
                    //DO something
                    break;
                case R.id.button3:
                    //DO something
                    break;
            }
</code></pre>
"
"16229143","<p>Change your code like this.</p>

<pre><code>int death = 1;
for (int i = 1; i &lt;= 10; i++) {
System.out.print(i + ""    "");
for (int j = 0; j &lt; 3; j++) {
    System.out.print(death++ +"" "");

    //current += j;
    }
    //death += current;
    System.out.println("""");
}
</code></pre>
"
"16229180","<p>Use a simple counter:</p>

<pre><code>int j = 0;
for (int i = 0; i &lt; 10; i++)
    System.out.println(i + ""    "" + ++j + "" "" + ++j + "" "" + ++j + "" "");
</code></pre>
"
"16229181","<p>Got exact solution for it ...</p>

<pre><code>class Alok{
   public static void main(String[] args){
       int i = 0,j=0;
         for(i=0;i&lt;10;i++){
        System.out.print(""""+i+""-&gt;"");
        for(j=(i*3)+1;j&lt;(i*3)+4;j++){
            System.out.print(""""+j+"" "");
        }System.out.println();
         }
    }
}
</code></pre>
"
"16337740","<p>Probably your request doesnt matches the URL pattern. Try like this :</p>

<pre><code>&lt;url-pattern&gt;/exampleServlet/*&lt;/url-pattern&gt;
</code></pre>
"
"16365781","<p>You'd have to declare the method as static:</p>

<pre><code>public class A {
    public static void doSomething() {
        // code
    }
}
</code></pre>

<p>This allows you to do <code>A.doSomething()</code> and also prevents <code>doSomething()</code> from looking at any instance methods or fields (because how would you know which <code>A</code> instance to use?), which shouldn't be a problem if it doesn't reference them anyway.</p>

<p>See <a href=""http://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html"" rel=""nofollow"">The Java Tutorial's Article on Instance and Class Methods</a> for details.</p>
"
"16390946","<p>You are not storing the returned int value of fibonacci();</p>

<pre><code>int currentSum=0;
for(int i = 0; i &lt;= 25; i++){
currentSum+=fibonacci(i);
println(currentSum);
</code></pre>

<p>}</p>

<p>and why do you have another variable n in your fibonacci(int n) ?
Please make sure first your fibonacci method is working. (The infinite while loop, etc.)</p>

<pre><code>public static void main (String args[]){
   for(int i = 0; i&lt;25; i++) {
       System.out.println(fibonacci(i));  
   }

}

static int fibonacci(int n){
   if(n==0) {
       return 0;
   }
   int a = 0; 
   int b = 1;

   for(int i = 0; i &lt; n; i++){
       int temp = b;
       b += a;
       a = temp;
   }

   return(b);
 }
</code></pre>
"
"26469503","<p>You can create you textview global in you MainActivity Class and then you will be able to update the text. Do something like this.</p>

<pre><code>     public class MainActivity extends Activity {

 TextView tv;

@Override
protected void onCreate(Bundle savedInstanceState) {
    // TODO Auto-generated method stub
    super.onCreate(savedInstanceState);
     setContentView(R.layout.main);
    tv = (TextView) findViewById(R.id.result);
     PrayerTime pr = new PrayerTime();
        pr.execute();
}

public class PrayerTime extends AsyncTask&lt;String, String, String&gt;{

    @Override
    protected String doInBackground(String... params) {
        // TODO Auto-generated method stub

        //Do your work and return the result here
        return result; //result is your returned
    }


    @Override
    protected void onPostExecute(String result) {
        // TODO Auto-generated method stub
        super.onPostExecute(result);

        tv.setText(result);

    }


  }
}
</code></pre>
"
"25722857","<p>Yes, you can remove them, just call the method without storing the result, replace:</p>

<pre><code>double x = Math.sqrt(index);
</code></pre>

<p>by</p>

<pre><code>Math.sqrt(index);
</code></pre>
"
"28808766","<p>Yo can check whether first character in a string is  a letter if yes then do </p>

<pre><code>Integer.parseInt(s1.substring(1))
</code></pre>

<p>Means parse from second character</p>
"
"25462543","<p>You need to compare characters (converted to numbers) one by one (or group by group) from right to left. Use methods like <code>charAt(int)</code> or <code>substring(int, int)</code> respectively.</p>
"
"25468800","<p>You should use <code>long</code> instead of <code>Long</code>. Note that <code>Long</code> is a class and so you must use <code>equals()</code> to compare instances of it. On the other hand, if you use <code>long</code> instead, you can compare with <code>==</code> because these are primitives.</p>
"
"26481475","<p>Just to be clear, you want to show up 36.25 if the input string is 000000003625. Here is the code that you may want to use.</p>

<pre><code>String val = ""000000003625"";
Float i = Float.parseFloat(val);
System.out.println(i / 100);
</code></pre>
"
"25474362","<p>How about this</p>

<pre><code>int ocount = input.replaceAll(""[*]X"", ""O"").replaceAll(""XO"", """").split (""O"").length - 1;
</code></pre>

<p>To debug you code, I suggest using you debugger to step through what it is doing.</p>
"
"16413164","<p>You need to return it as an array and initialize it first. </p>

<p>Perhaps this sample static code would give you bit understanding to help you through, please ask if you have further question </p>

<pre><code> static int[] sumOddandEven(int array[]) {
        int temp[] = null;
        Scanner scan = new Scanner(System.in);


        System.out.println(""Enter the first number: "");
        int u1 = scan.nextInt();
        temp[0] = u1;
        System.out.println(""Enter the first number: "");
        int u2 = scan.nextInt();
        temp[1] = u2;
        System.out.println(""Enter the first number: "");
        int u3 = scan.nextInt();
        temp[2] = u3;
        System.out.println(""Enter the first number: "");
        int u4 = scan.nextInt();
        temp[3] = u4;
        System.out.println(""Enter the first number: "");
        int u5 = scan.nextInt();
        temp[4] = u5;
        return temp;

    }
</code></pre>
"
"25474709","<p>Here is my code</p>

<pre><code>public static void main(String[] args) throws IOException {
    String output = new String();
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String line = br.readLine();
    int N = Integer.parseInt(line);
    for (int i = 0; i &lt; N; i++) {
        String strArr[] = br.readLine().split(""\\*"");
        int enemy=0;
        for(String str:strArr){
            if(str.contains(""X"")){
                continue;
            }
            if(count('X',str)==0){
                enemy=enemy+str.length();
            }
        }
        output=output+enemy+""\n"";
    }
    System.out.println(output);
}

private static int count(char c,String str){
    int count=0;
    char charArr[] = str.toCharArray();
    for(char c2:charArr){
        if(c==c2){
            count++;
        }
    }
    return count;
}
</code></pre>
"
"16628090","<p>One way you could do it is have a file with the username and pass directly under it. Then uses the Scanner class and when you create it, make the file the parameter for the Scanner. Then use the methods hasNext(); and nextLine to verify the username and password;</p>

<pre><code>String user;
String pass;

Scanner scan = new Scanner(new File(""File.txt""));

while(scan.hasNext){ //While the file still has more lines remaining
     if(scan.nextLine() == user){
          if(scan.nextLine == pass){
                   lblDisplay.setText(""Credentials Accepted."");
          }
          else{
               lblDisplay.setText(""Please try again."");
          }
     }
}
</code></pre>
"
"28826699","<p>There is nothing wrong with your code except you should give the full path.</p>

<p>try this : <code>File folder=new File(""C:\\inputs"");</code></p>

<p>instead of this line : <code>File folder=new File(""inputs"");</code></p>
"
"25481814","<pre><code>byte[] array = String.getBytes(""UTF-8"");
</code></pre>
"
"28826728","<p>You have not given the full path for the folder.
Also note to use <strong>forward slash</strong>.</p>

<pre><code>try{
        File folder=new File(""C:/xxxx/xxxx/xxxx/inputs"");
        File[] listOfFiles=folder.listFiles();
        for(File file:listOfFiles){
            if(file.delete())
                System.out.println(""File deleted"");
            else
                System.out.println(""File not deleted"");
        }
}
catch(Exception e)
{
    System.out.println(e.printStackTrace());
}
</code></pre>

<p>Always use <strong>try-catch</strong> for code that contains methods which throws Exceptions.</p>
"
"16416066","<p>Your regex should look like this:</p>

<pre><code>&lt;span class=""test""&gt;example([0-9]*)&lt;/span&gt;
</code></pre>

<p>Then you can compile a pattern with <code>p = Pattern.compile( regex )</code> and obtain a matcher with <code>m = p.matcher( str )</code>.</p>

<p>By invoking <code>m.find()</code>, the matcher will find the next occurrence of the pattern. <code>m.group( 1 )</code> will give the  number behind <em>example</em>.</p>

<p>To get the second occurrence, invoke <code>m.find()</code> two times and call <code>m.group( 1 )</code>.</p>
"
"26504872","<p><code>Java</code> not intelligent as <code>Developer</code>.  So correct implementation of <code>compareTo()</code> is in developer hand. No point of validating <code>compareTo()</code> is coded correctly or not. </p>

<p><code>Java</code> can force you to override <code>compareTo()</code> but not to write it correct. </p>

<p>What ever you write inside <code>compareTo()</code> method will take in to account when you use <code>Collections.sort()</code></p>
"
"25786722","<p>And the following works:</p>

<pre><code>public class C extends B {

    public static void main(String[] args) {
        C c2 = new C();
        System.out.println(D.class.isInstance(c2));
    }
}
</code></pre>
"
"25808273","<pre><code>public novel(String title, String writer)
{
    super(""novel"");
    this.title = title;
    this.writer = writer;
}
</code></pre>

<p>The <code>super(""novel"");</code> calls the <code>literature</code> class's contructor with one parameter.</p>

<p>The <code>this.writer = ""Unknow"";</code> sets the novel object's writer attribute to ""Unknow"", because this constructor don't get the writer parameter, only the title.</p>

<p>Maybe you can write this, instead of the code above:</p>

<pre><code>public novel(String title)
    {
        this(title, ""Unknow""); // calls the constructor with two parameters
    }
</code></pre>

<p>Edit: Thanks for the help, i just copy-pasted it, and i forget to delete the super() call.</p>
"
"25819974","<p>Is this ok?</p>

<pre><code>class Test
{
    public static void main(String args[])
    {
        java.util.Scanner in = new java.util.Scanner(System.in);
        String x = in.nextLine();
        System.out.println(""\n The type of the variable is : ""+x.getClass());
    }
}
</code></pre>

<p>Output:</p>

<pre><code>subham@subham-SVE15125CNB:~/Desktop$ javac Test.java 
subham@subham-SVE15125CNB:~/Desktop$ java Test
hello

 The type of the variable is : java.lang.String
</code></pre>
"
"25820057","<p>But Zechariax wanted an answer with out using try catch</p>

<p>You can achieve this using NumberForamtter and ParsePosition.
Check out this solution</p>

<pre><code>import java.text.NumberFormat;
import java.text.ParsePosition;


    public class TypeChecker {
        public static void main(String[] args) {
        String temp = ""a""; // ""1""
        NumberFormat numberFormatter = NumberFormat.getInstance();
        ParsePosition parsePosition = new ParsePosition(0);
        numberFormatter.parse(temp, parsePosition);
        if(temp.length() == parsePosition.getIndex()) {
            System.out.println(""It is a number"");
        } else {
            System.out.println(""It is a not number"");
        }
    }
}
</code></pre>
"
"26583085","<p><code>2147483647</code> is the maximum value <code>parseInt()</code> can parse without giving an exception. <code>1000000000000</code> > <code>2147483647</code>(=<code>Integer.MAX_VALUE</code>, Max value of <code>int</code>).<code>1000000000000</code> is no longer be an <code>int</code> value(can't represent as an <code>int</code> without <a href=""http://en.wikipedia.org/wiki/Integer_overflow"" rel=""nofollow"">integer overflow</a>). So <code>partInt()</code> will give you <code>NumberFormatException</code></p>

<p>You can use <code>Long.parseLong()</code> for larger values like here.</p>

<p>Eg:</p>

<pre><code>Long.parseLong(""1000000000000"")
</code></pre>
"
"28933188","<p>your code is good but you just forgot to add 1/3 to  here ;</p>

<pre><code>    return (f(i - 1, j) + f(i - 1, j - 1) + f(i, j - 1));
</code></pre>

<p>so it should be like this ; </p>

<pre><code>    return (f(i - 1, j)*0.33 + f(i - 1, j - 1) + f(i, j - 1));
</code></pre>

<p>or 
        return (f(i - 1, j)*(1/3) + f(i - 1, j - 1) + f(i, j - 1));</p>
"
"25571867","<p>try this code:    </p>

<pre><code>String id = filedda.getText();
        String pass= filedda1.getText();
        try {
            File inputFile = new File(""E:/yoo.txt"");
            File tempfile = new File(""E:/mytempfile.txt"");

            BufferedReader reader = new BufferedReader(new FileReader(inputFile));
            BufferedWriter writer = new BufferedWriter(new FileWriter(tempfile));

            String CurrentLine;

            while((CurrentLine = reader.readLine())!=null){
                if(CurrentLine.contains(id+pass)){
                    CurrentLine= CurrentLine.replace(id+pass, """");

                }

            }
                writer.write(CurrentLine);
                reader.close();
                writer.close();


                inputFile.delete();
                tempfile.renameTo(inputFile);
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
</code></pre>
"
"26587786","<p>maybe you want something like this?</p>

<pre><code>public class test2 {

    class c {
    }

    public test2() {
        c obj = new c();
        System.out.println(isIns(obj));
    }

    public boolean isIns(Object o) {
        return (o instanceof c);
    }

    public static void main(String argv[]) {
        new test2();
    }
}
</code></pre>

<p>EDIT: Removed senceless Class parameters.</p>
"
"28956508","<p>It only assign the text you entered in the <code>Password_Text</code> field which may be <code>EditText</code> to the <code>String</code> variable password if the variable password is empty.</p>
"
"26594360","<pre><code>public enum OrderType {

    One(mActivity.getString(R.string.One)), Two(mActivity.getString(R.string.Two));

    private String name;

    private OrderType(String name) {
        this.name = name;
    }

    public String toString() {
        return name;
    }

    public static String getEnumByString(String code) {
        for (OrderType e : OrderType.values()) {
            if (code.equals(e.name)) {
                return e.name();
            }
        }
        return null;
    }
}
</code></pre>

<p>also Here is the <a href=""http://www.androidanalyse.com/android-spinner-externalize-user-strings-mapped-to-system-enum/"" rel=""nofollow"">link</a>, which I think is best way solve the porblem. This developing for API level 11 currently, however this code should run on higher versions. After a quick review in API 16 I did not see an existing core Android solution to this problem, if you know of one please post below and share.</p>
"
"16722200","<p>You can use java reflection.</p>

<p><a href=""http://docs.oracle.com/javase/tutorial/reflect/member/fieldTypes.html"" rel=""nofollow"">Reflection for field</a></p>

<pre><code>       Class&lt;?&gt; c = Class.forName(""YOUR_CLASS_NAME"");
       Field f = c.getField(""FOO"");
       System.out.println(f.getInt());
</code></pre>
"
"25598857","<p>That's maybe because you're using <code>java.util.Date</code> instead of <code>java.sql.Date</code>. Try changing your import to <code>java.sql.Date</code> and see if it works out.</p>
"
"16522340","<p>Use android:nohistory=true in manifest for Activities.</p>

<pre><code>        &lt;activity
        android:name="".A""
        android:label=""@string/app_name""
        android:noHistory=""true"" &gt;
</code></pre>
"
"16528843","<p>you can not put String place of Integer ..
you can use this code.</p>

<pre><code>class Test
{
    public void test1(String[] foo) 
   {
        for (String i : foo) {
            System.out.println(i);
        }
    }

    public static void main(String[] a)
    {
        String x[] ={""b1"",""b2"",""b3"",""b4""};

        Test t1 =  new Test();

        t1.test1 (x);

    }

}
</code></pre>
"
"29053530","<p>Use instanceof to differentiate between different object types in the class hierarchy</p>

<pre><code>import java.util.ArrayList;
import java.util.List;

public class Inheritance {
    public static void main(String[] args) {
        //create a list to hold all animals
        List&lt;Animal&gt; animals = new ArrayList&lt;Animal&gt;();

        //add animals
        animals.add(new Animal());
        animals.add(new Dog());
        animals.add(new Cat());

        for (Animal a:animals) {

            //Use instanceof to determine type of object

            if(a instanceof Dog){
                Dog dog = (Dog)a;
                dog.displayDog();
            }else if (a instanceof Cat) {
                Cat cat = (Cat)a;
                cat.displayCat();
            }else{
                a.display();
            }
        }


    }

}

class Animal{
    public void display(){
        System.out.println(""This is a Animal"");
    }
}

class Dog extends Animal{
    public void displayDog(){
        System.out.println(""This is a Dog"");
    }
}

class Cat extends Animal{
    public void displayCat(){
        System.out.println(""This is a Cat"");
    }
}
</code></pre>
"
"26674920","<p>Assuming your objects <a href=""http://stackoverflow.com/questions/27581/what-issues-should-be-considered-when-overriding-equals-and-hashcode-in-java"">implement hashCode() and equals() correctly</a> then just use a set:</p>

<pre><code>Set&lt;Record&gt; allItems = new HashSet&lt;&gt;();
allItems.addAll(arrayList1);
allItems.addAll(arrayList2);
// .. allItems contains a unique set of items from the two lists.
// Convert back to an ArrayList with List&lt;Item&gt; newList = new ArrayList&lt;&gt;(allItems);
// if you like.
</code></pre>
"
"26679060","<p>I think the solution you are looking for is </p>

<pre><code>Tile[] map = new Tile[12]();//declare a tile array that can hold 12 Tile Reference



//Assign those 12 references to the Objects  


for(int i=0;i&lt;4;i++)
{
map[i]=bt;
}

for(int i=4;i&lt;8;i++)
{
map[i]=gt;
}

for(int i=8;i&lt;10;i++)
{
map[i]=bt;
}
for(int i=10;i&lt;12;i++)
{
map[i]=ft;
}
</code></pre>
"
"26684441","<p>why don't you use something like this</p>

<pre><code>import java.util.Scanner;

Scanner keyboard = new Scanner(System.in);
System.out.println(""Enter command: "");
String cmd = keyboard.nextLine();
if (cmd == ""help""){
help();
}
</code></pre>
"
"16537144","<p>If your text does not change, you can use:</p>

<pre><code>$('.ui-button-text').click(function() {
    if($(this).text() == 'Create Employee') {
        // Your code here
    }
});
</code></pre>

<p><strong><a href=""http://jsfiddle.net/V2wVv/"" rel=""nofollow"">Demo</a></strong></p>
"
"25780662","<pre><code>test = test.replace(""\\'"", "" "");
</code></pre>

<p>or </p>

<pre><code>test = test.replace(""\'"", "" "");
</code></pre>
"
"25780671","<pre><code>test = test.replaceAll(""'"",""\s"");
</code></pre>
"
"16812043","<p>Readers are usually slow, you should try Stream readers which are fast. And make sure that FIlE opening process is not taking time. If File is opened and stream objects are created and then measure time, then you can figure out exactly it is due to File opening issue or reading the file issue. Make sure that system io load is not high at the time of this operation, otherwise you measurement will go bad.</p>

<pre><code> BufferedInputStream reader=new BufferedInputStream(new FileInputStream(""/home/shantanu/Documents/sample.txt""));
 byte[] line=new byte[1024];
 while(reader.read(line)&gt;0) {
 System.out.println(new String(line));
 }
</code></pre>
"
"16869014","<p>Groovy (almost Java):</p>

<pre><code>def letters = ['a', 'e', 'f', 'f', 'g', 'i', 'r', 'q']
def dictionary = ['abacus', 'deltoid', 'gaff', 'giraffe', 'microphone', 'reef', 'qar']
println dictionary
    .findAll{ it.toList().intersect(letters).size() == it.size() }
    .sort{ -it.size() }.head()
</code></pre>

<p>The choice of collection type to hold the dictionary is irrelevant to the algorithm. If you're supposed to implement a trie, that's one thing. Otherwise, just create one from an appropriate library to hold the data. Neither Java nor Groovy has one in its standard library that I'm aware of.</p>
"
"26092860","<p>The reason you throws the exception , which breaks the loop;</p>

<p>Change you code , and add the throws clause after the loop like this...</p>

<pre><code>   /**      after you code...  **/
    boolean notfound=true;
    for (Integer currentKey : MONTHS.keySet()) {
        String monthString;
        System.out.println(""test.main()""+currentKey+month);
        if (currentKey.equals(month)){
         monthString = MONTHS.get(currentKey);
         notfound=false;


    }

}
    if(notfound)            
        throw new Exception();
</code></pre>
"
"16689778","<p>You can't convert a </p>

<pre><code>List&lt;List&lt;String&gt;&gt;
</code></pre>

<p>to a String[][] by using the out of the box toArray functionality. This would only work if you had:</p>

<pre><code>List&lt;String[]&gt;. 
</code></pre>
"
"25831343","<p>for <code>java.util.Map</code> the key value must be unique, I suggest you implement your own map, something like this:</p>

<pre><code>class MyMap implements Map&lt;Object, ArrayList&lt;Object&gt;&gt; {
}
</code></pre>

<p>and then add a method for putting one element like this:</p>

<pre><code>public putOneElement(Object key, Object value) {
this.get(key).put(value);
}
</code></pre>
"
"16870445","<p>Disclaimer: this is not a trie solution, but I still think it's an idea worth exploring.</p>

<p>Create some sort of hash function that only accounts for letters in a word and not their order (no collisions should be possible except in the case of permutations).  For example, <code>ABCD</code> and <code>DCBA</code> both generate the same hash (but <code>ABCDD</code> does not).  Generate such a hash table containing every word in the dictionary, using chaining to link collisions (on the other hand, unless you have a strict requirement to find ""all"" longest words and not just one, you can just drop collisions, which are just permutations, and forgo the whole chaining).</p>

<p>Now, if your search set is 4 characters long, for example <code>A, B, C, D</code>,  then as a näive search you check the following hashes to see if they are already contained in the dictionary:</p>

<pre><code>hash(A), hash(B), hash(C), hash(D) // 1-combinations
hash(AB), hash(AC), hash(AD), hash(BC), hash(BD), hash(CD) // 2-combinations
hash(ABC), hash(ABD), hash(ACD), hash(BCD) // 3-combinations
hash(ABCD) // 4-combinations
</code></pre>

<p>If you search the hashes in that order, the last match you find will be the longest one.</p>

<p>This ends up having a run time which is dependent on the length of the search set rather than the length of the dictionary.  If <code>M</code> is the number of characters in the search set, then the number of hash lookups is the sum <code>M choose 1 + M choose 2 + M choose 3 + ... + M choose M</code> which is also the size of the powerset of the search set, so it's <code>O(2^M)</code>.  At first glance this sounds really bad since it's exponential, but to put things in perspective, if your search set is size 10 there will only be around 1000 lookups, which is probably a lot smaller than your dictionary size in a practical real world scenario.  At M = 15 we get 32000 lookups, and really, how many English words are there that are longer than 15 characters?</p>

<p>There are two (alternate) ways I can think of to optimize it though:</p>

<p>1) Search for longer matches first e.g. M-combinations then (M-1)-combinations, etc.  As soon as you find a match, you can stop!  Chances are you will only cover a small fraction of your search space, probably at worst half.</p>

<p>2) Search for shorter matches first (1-combos, 2-combos, etc).  Say you come up with a miss at level 2 (for example, no string in your dictionary is composed only of <code>A</code> and <code>B</code>).  Use an auxiliary data structure (a bitmap perhaps) that allows you to check if any word in the dictionary is even <strong>partially</strong> composed of <code>A</code> and <code>B</code> (in contrast to your primary hash table which checks for <strong>complete</strong> composition).  If you get a miss on the secondary bitmap also, then you know that you can skip all higher level combinations including <code>A</code> and <code>B</code> (i.e. you can skip <code>hash(ABC)</code>, <code>hash(ABD)</code>, and <code>hash(ABCD)</code> because no words contain both <code>A</code> and <code>B</code>).  This leverages the <em>Apriori</em> principle and would drastically reduce the search space as M grows and misses become more frequent.  EDIT: I realize that the details I abstract away relating to the ""auxiliary data structure"" are significant.  As I think more about this idea, I realize it is leaning toward a complete dictionary scan as a subprocedure, which defeats the point of this entire approach.  Still, it seems there should be a way to use the <em>Apriori</em> principle here.</p>
"
"26836002","<p>Isn't what you have a bit too redundant? How about this instead?</p>

<pre><code>public static synchronized Singleton getInstance()
    {
        if (mySingleton == null)
            mySingleton = new Singleton();

        return mySingleton;
    }
</code></pre>

<p>or...</p>

<pre><code>public static synchronized Singleton getInstance()
    {
        return mySingleton==null?mySingleton=new Singleton():mySingleton;
    }
</code></pre>

<p>compliments to Mr. Polywhirl</p>
"
"16876770","<p>As you said it's bad practice but if you really want to do it as you described you could do it like so (works for Java):</p>

<pre><code>//in Audi class
String methodToGetAudiName();

//in BMW class
String methodToGetBMWName();

if (carInstance instanceof Audi)
stringToStoreName = ((Audi)carInstance).methodToGetAudiName();
else if (carInstance instanceof BMW)
stringToStoreName = ((BMW)carInstance).methodToGetBMWName();
</code></pre>
"
"16882002","<p>I tried to code this problem in C++  ..where i created my own hash key and go through all the combination with the given characters.</p>

<p>Going through all the combination from these input characters from the largest length to 1</p>

<p>Here is my solution</p>

<pre><code>#include ""iostream""
#include &lt;string&gt;

using namespace std;

int hash_f(string s){
        int key=0;
        for(unsigned int i=0;i&lt;s.size();i++){
           key += s[i];
        }
        return key;
}

class collection{

int key[100];
string str[10000];

public: 
collection(){
    str[hash_f( ""abacus"")] = ""abacus""; 
    str[hash_f( ""deltoid"")] = ""deltoid""; 
    str[hash_f( ""gaff"")] = ""gaff""; 
    str[hash_f( ""giraffe"")] = ""giraffe""; 
    str[hash_f( ""microphone"")] = ""microphone""; 
    str[hash_f( ""reef"")] = ""reef""; 
    str[hash_f( ""qar"")] = ""qar""; 
}

string  find(int _key){
    return str[_key];
}
};

string sub_str(string s,int* indexes,int n ){
    char c[20];
    int i=0;
    for(;i&lt;n;i++){
        c[i] = s[indexes[i]];
    }
    c[i] = 0;
    return string(c);
}

string* combination_m_n(string str , int m,int n , int&amp; num){

    string* result = new string[100];
    int index = 0;

    int * indexes = (int*)malloc(sizeof(int)*n);

    for(int i=0;i&lt;n;i++){
        indexes[i] = i; 
    }

    while(1){
            result[index++] = sub_str(str , indexes,n);
            bool reset = true;
            for(int i=n-1;i&gt;0;i--)
            {
                if( ((i==n-1)&amp;&amp;indexes[i]&lt;m-1) ||  (indexes[i]&lt;indexes[i+1]-1))
                {
                    indexes[i]++;
                    for(int j=i+1;j&lt;n;j++) 
                        indexes[j] = indexes[j-1] + 1;
                    reset = false;
                    break;
                }
            }
            if(reset){
                indexes[0]++;
                if(indexes[0] + n &gt; m) 
                    break;
                for(int i=1;i&lt;n;i++)
                    indexes[i] = indexes[0]+i;
            }
    }
    num = index;
    return result;
}


int main(int argc, char* argv[])
{
    string str = ""aeffgirq"";
    string* r;
    int num;

    collection c;
    for(int i=8;i&gt;0;i--){
        r = combination_m_n(str, str.size(),i ,num);
        for(int i=0;i&lt;num;i++){
            int key = hash_f(r[i]);
             string temp = c.find(key);
            if(  temp != """" ){
                  cout &lt;&lt; temp ;
            }
        }
    }
}
</code></pre>
"
"26137602","<p>I think you'd better try the <code>ClientConfiguration.setSocketTimeout(int)</code>. If the socket is asynchronously closed, I think it's because of the timeout. According to the amazon document:</p>

<pre><code>public void setSocketTimeout(int socketTimeout)

Sets the amount of time to wait (in milliseconds) for data to be transfered 
over an established, open connection before the connection times out and is closed. 
A value of 0 means infinity, and isn't recommended.
</code></pre>

<p>So, according to the document, if the connection times out, I think it is automatically closed.</p>

<p>link: <a href=""http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/ClientConfiguration.html#setSocketTimeout(int)"" rel=""nofollow"">http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/ClientConfiguration.html#setSocketTimeout(int)</a></p>
"
"26140483","<p>You can use memory writing the data compressed to a</p>

<pre><code>ByteArrayOutputStream baos = new ByteArrayOutputStream
... new GZIPOutputStream(baos));

byte[] bytes = baos.toByteArray(); // &lt; 100 MB?

ByteArrayInputStream ....
</code></pre>

<p>And then later wrap the input stream in a GZIPInputStream.</p>

<p>Still a minor slow down, but should be ideal for XML.</p>
"
"16884514","<p>I think the above answers missed the key point. We have a space with 27 dimensions, the first one is the length and the others the coordinates of each letter. In that space we have points, which are words. The first coordinate of a word is his length. The other coordinates are, for each letter-dimension is the number of occurrences of that letter in that word. For example the words <em>abacus</em>, <em>deltoid</em>, <em>gaff</em>, <em>giraffe</em>, <em>microphone</em>, <em>reef</em>,  <em>qar</em>, <em>abcdefghijklmnopqrstuvwxyz</em> have coordinates</p>

<pre><code>[3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[6, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0]
[7, 0, 0, 0, 2, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[4, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[7, 1, 0, 0, 0, 1, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[10, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[4, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
[26, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
</code></pre>

<p>The good structure for a set with coordinates is a <a href=""https://en.wikipedia.org/wiki/R-tree"" rel=""nofollow"">R-tree</a> or a <a href=""http://en.wikipedia.org/wiki/R%2a_tree"" rel=""nofollow"">R*-Tree</a>. Given your collection [x0, x1, ..., x26], you have to ask all the words that contains at most xi letter, for each letter. Your search is in O(log N), where N is the number of words in your dictionary. However you don't want to look at the biggest word in all the words that match your query. This is why the first dimension is important. </p>

<p>You know that the length of the biggest word is between 0 and X, where X=sum(x_i, i=1..26). You can search iteratively from X to 1, but you can also do a <a href=""http://en.wikipedia.org/wiki/Binary_search_algorithm"" rel=""nofollow"">binary search algorithm</a> for the length of the query. You use the first dimension of your array as the query. You start from a=X to b=X/2. If their is at least a match, you search from a to (a+b)/2, else you search from b to b-(a-b)/2=(3b-a)/2. You do that until you have b-a=1. You now have the biggest length and all the matches with this length.</p>

<p>This algorithm is asymptotically much more efficient than the algorithms above. The time complexity is in O(ln(N)×ln(X)). The implementation depend on the R-tree library you use.</p>
"
"16726642","<pre><code>if(i % j == 0)
</code></pre>

<p>if I'm doing my math right, this should do the trick ;)</p>
"
"25907170","<p>Try this:</p>

<pre><code>public class PrimeSum {

 public static void main(String args[]) {

    private double Num= 0.0;
    private double sum = 0.0;

    for(int i=0;i&lt;1001;i++) {
        Num = i;
        if(i % 3 == 0.0) {
            sum += i;
            if(i % 5 == 0.0) {
                if(i % 3 != 0.0) {
                   sum += i;
                }
            }
        }
    }

    System.out.println(""The total is ""+ sum);
 }
}
</code></pre>
"
"25907173","<p>Here is the modified code :</p>

<pre><code>public class PrimeSum {
  public static void main(String args[]) {

        double Num = 0.0;
        double sum = 0.0;
        {

            for (int i = 0; i &lt; 1001; i++) {
                Num = i;
                if (i % 3 == 0.0) {
                    sum += i;
                    if (i % 5 == 0.0) {
                        if (i % 3 != 0.0) {
                            sum += i;
                        }
                    }
                }

            }

            System.out.println(""The total is "" + sum);
        }

    }
}
</code></pre>
"
"16658078","<p>The code in the example won't even compile. </p>

<pre><code>newPhrase.charAt(i) += phrase2.charAt(i);
</code></pre>

<p>That's a bad assignment. It's the same as writing</p>

<pre><code>newPhrase.charAt(i) = newPhrase.charAt(i) + phrase2.charAt(i);
</code></pre>

<p>but the expression on the left side of the '=' isn't something to which you can properly assign a value.</p>
"
"16774169","<p>You can not get exactly what you want.</p>

<p><code>str</code> is defined as <code>string</code> and you want it to be an <code>array</code>.</p>

<p>You need to use another variable to get results. Use <code>str.split("":|;"")</code> function and store result in <code>String[] result</code></p>

<pre><code>String[] result = str.split("":|;"");
</code></pre>
"
"26185595","<p>Only by using some ""hacks"". You can do this like this:</p>

<pre><code>public static void p1(Integer curInt) {
          Field field = curInt.getClass().getDeclaredField(""value""); // Integer stores the real value in private field ""value""
          field.setAccessible(true);
          field.set(curInt, 2);

}
</code></pre>
"
"16777515","<p>You can use <code>DateFormat</code>(java.text.*) to parse the date:</p>

<pre><code>DateFormat df = new SimpleDateFormat(""EEE MMM dd kk:mm:ss z yyyy"", Locale.ENGLISH);
Date d = df.parse(""Mon May 27 11:46:15 IST 2013"")
</code></pre>

<p>You will have to change the locale to match your own (with this you will get 10:46:15). Then you can use the same code you have to convert it to a timestamp.</p>
"
"16787373","<pre><code>public static void main(String... s) throws Exception {
        Pattern VALID_PATTERN = Pattern.compile(""([A-Za-z])+|[0-9]*"");
    List&lt;String&gt; chunks = new ArrayList&lt;String&gt;();
    Matcher matcher = VALID_PATTERN.matcher(""ab1458"");
    while (matcher.find()) {
        chunks.add( matcher.group() );
    }
}
</code></pre>
"
"26229938","<p>Use <code>split</code> method as </p>

<pre><code>String []result1 = s.split(""&amp;"");
String result2 = tempResult[1];
String []result3 = result2.split(""s_"");
</code></pre>

<p>Now to get your desire number you just need to do</p>

<pre><code>String finalResult = result3[1];
</code></pre>

<p><strong>INPUT :</strong></p>

<pre><code>String s = ""chapterId=c_1&amp;sectionId=s_24666&amp;isHL=1&amp;cssFileName=haynes"";
</code></pre>

<p><strong>OUPUT :</strong></p>

<pre><code>24666
</code></pre>
"
"26266087","<p>Try using</p>

<pre><code>int[] unDupe = new int[100];
</code></pre>

<p>You can replace the 100 with however many things you need in the array.</p>
"
"25967333","<p>When there aren't any curly braces around around code after a for statement in Java, the very next line is the only line processed as part of the for statement.  In this case, the for is like a function that calls the next line of code, which is a for statement that then calls the next line of code.  So the first for calls the second for which evaluates to see if the two sides are the same, and if they aren't then it kicks back up to the second for which continues incrementing itself until it finishes and then it returns to the first for, which increments, and calls the second for... and so on.  That code seems like it's partially broken, though, since it would have to have all numbers in numeric order, and it doesn't check anything in the middle.</p>

<p>For instance:<br>
<code>{1, 2, 3, 1} //evaluates to true because 1-1=0, although it should be false</code><br>
<code>{6, 2, 2, 3} //evaluates to true because 6-3-2=0, although it should be false</code><br>
<code>{2, 3, 4, 6} //evaluates to true because 2+3-6=0, although it should be false</code><br></p>
"
"27008156","<p>you can use regex to check your date string format, like this:</p>

<pre><code>public static void main(String[] args) {
    String date = ""2014/11/01"";
    Pattern pattern = Pattern.compile(""\\d{4}/\\d{2}/\\d{2}"");
    Matcher matcher = pattern.matcher(date);
    if (matcher.matches()) {
        System.out.printf(""the date string match format:%s"", ""yyyy/mm/dd"");
    }
}
</code></pre>
"
"26276616","<p>Main concept of Java generics: if ChildClass extends ParentClass it DOES NOT mean YourApi&lt;ChildClass> extends YourApi&lt;ParentClass>. E.g.:</p>

<pre><code>NumberTransform&lt;String, ? extends Number&gt; intTransform = new IntegerTransform&lt;String, Integer&gt;(); // work with Integer numbers only
NumberTransform&lt;String, ? extends Number&gt; longTransform = new LongTransform&lt;String, Long&gt;();      // work with Long numbers only

longTransform.toA((Integer) 1); // you are trying to make this and got compilation error.
</code></pre>

<p>To help compiler replace your t initialization:</p>

<pre><code>Transform&lt;? extends BaseA, B&gt; t = (Transform&lt;? extends BaseA, B&gt;) _map.get(b.getClass());
</code></pre>
"
"16914821","<p>The first thing to note is that you can completely ignore the letter order.</p>

<p><strong>Have a trie (well, sort of a trie) as follows:</strong></p>

<ul>
<li>From the root, have 26 children (maximum), one for each letter.</li>
<li>From each non-root node have children equal to the number of letters greater or equal to the node's letter.</li>
<li>Have each node store all words that can be made using (exactly) the letters in the path from the root.</li>
</ul>

<p><strong>Build the trie like this:</strong></p>

<p>For each word, sort the letters of this word and insert the sorted letters into the trie (by creating a path of these letters from the root), creating all required nodes as you go. And store the word at the final node.</p>

<p><strong>How to do a look-up:</strong></p>

<p>For a given set of letters, lookup all subsets of letter (most of which hopefully won't exist) and output the words at each node encountered.</p>

<p><strong>Complexity:</strong></p>

<p><code>O(k!)</code>, where <code>k</code> is the number of supplied letters. Eek! But luckely the less words there are in the trie, the less of the paths will exist and the less time this will take. And <code>k</code> is <strong>the number of supplied letters</strong> (which should be relatively small), not the number of words in the trie.</p>

<p>Actually it may be more along the lines of <code>O(min(k!,n))</code>, which looks a lot better. Note that if you're given enough letters, you'll have to look up all words, thus you have to do <code>O(n)</code> work in the worst case, so, in terms of the worst case complexity, you can't do much better.</p>

<p><strong>Example:</strong></p>

<p>Input:</p>

<pre><code>aba
b
ad
da
la
ma
</code></pre>

<p>Sorted:</p>

<pre><code>aab
b
ad
ad
al
am
</code></pre>

<p>Trie: (just showing non-null children)</p>

<pre><code>     root
     /  \
    a    b
 /-/|\-\
a b d l m
|
b
</code></pre>

<p>Lookup of <code>adb</code>:</p>

<ul>
<li>From the root...</li>
<li>Go to child <code>a</code>
<ul>
<li>Go to child <code>b</code>
<ul>
<li>No children, return</li>
</ul></li>
<li>Go to child <code>d</code>
<ul>
<li>Output words at node - <code>ad</code> and <code>da</code></li>
<li>No children, return</li>
</ul></li>
<li>All letters processed, return</li>
</ul></li>
<li>Go to child <code>b</code>
<ul>
<li>Output words at node - <code>b</code></li>
<li>Not looking for <code>a</code> child, as only children >= <code>b</code> exists</li>
<li>No <code>d</code> child, return</li>
</ul></li>
<li>No <code>d</code> child, stop</li>
</ul>
"
"25999087","<pre><code>public boolean findIfAllItemsMatch(String[] searchItems, String text) {
    boolean allItemsMatch = true;
    for (String item_ : searchItems) {
        if(!text.contains(item_)) {  
              allItemsMatch = false;
              break;
         }
    }
    return allItemsMatch;
}
</code></pre>
"
"26299168","<pre><code>list1.containsAll(list2) &amp;&amp; list2.containsAll(list1)
</code></pre>
"
"16730886","<p>Create a class which have variables you want to read from json string.And Gson will handle the rest.</p>

<p><a href=""https://code.google.com/p/google-gson/"" rel=""nofollow"">https://code.google.com/p/google-gson/</a></p>

<p>Example usage:</p>

<pre><code>//convert the json string back to object
DataObject obj = gson.fromJson(br, DataObject.class);
</code></pre>
"
"26313212","<p>Leading slash to denote the root of the classpath. Try this : <code>System.out.println(getClass().getResource(""/lena1.png"").getPath());</code></p>
"
"26313220","<p>use this </p>

<pre><code>String s = (getClass().getResource(""lena1.png"").getPath()).substring(1);
System.out.println(s);
</code></pre>
"
"26031104","<p>According to your question, you get the data later.</p>

<pre><code>private ArrayList&lt;String&gt; arrayList = new ArrayList&lt;String&gt;();
private ArrayAdapter resultAdapter;

// Inside onCreate() or any other method.
//Currently List is empty
resultAdapter = new ArrayAdapter&lt;String&gt;(this, android.R.layout. simple_list_item_1, arrayList)
result.setAdapter( resultAdapter );
</code></pre>

<p>//More Code...</p>

<p>//Let say you have data now in your arraylist after some scenario, a service call maybe
//After adding data in your arraylist, simply call notifydatasechanged</p>

<pre><code>resultAdapter.notifyDataSetChanged();
</code></pre>
"
"16851464","<p>Try this,       </p>

<pre><code>Multipart multipart = new MimeMultipart();
  multipart.addBodyPart(""some text"");

  // Part two is attachment
  messageBodyPart = new MimeBodyPart();

  String filePath = ""your file path"";
 File f1 = new File(filePath);  
DataSource source = new FileDataSource(filePath);
  messageBodyPart.setDataHandler(new DataHandler(source));
 messageBodyPart.setFileName(f1.getName());
  multipart.addBodyPart(messageBodyPart);
  // Put parts in message
  m.setContent(multipart);
  //String msg=""Hello Prabhakar"";
  //m.setContent(msg,""text/html"");
  transport.sendMessage(m,m.getAllRecipients());
  transport.close();
</code></pre>
"
"16860609","<p>String declared in Java code are automatically <strong>interned</strong>. </p>

<p>So the result is the same as you would call <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/String.html#intern%28%29"" rel=""nofollow"">String.intern()</a> manually.</p>

<pre><code>    String a = ""aa"";
    String b = new String(a);
    System.out.println(""aa"" == ""aa"");
    System.out.println(a == b);
    System.out.println(a.equals(b));
    System.out.println(a.intern() == b.intern());
</code></pre>

<p>output:</p>

<blockquote>
  <p>true </p>
  
  <p>false </p>
  
  <p>true </p>
  
  <p>true</p>
</blockquote>
"
"26354751","<pre><code>int num = 0;
float total = 0f;
Scanner sc = new Scanner(System.in);
System.out.print(""Please enter a number: "");
num = sc.nextInt();

for(int num1 = 0; num1 &lt;= num; num1++)
   {
        System.out.print(""Please enter a number: "");
        total += sc.nextInt();
   }

System.out.println(""Average : ""+(total/num));
</code></pre>
"
"16944011","<p>Get rid of the initial int choice, and try this:</p>

<pre><code>int choice = scan2.nextInt();
</code></pre>

<p>Shouldn't really make a difference, but it could help.</p>
"
"16854771","<p>try this...</p>

<pre><code>SimpleDateFormat dateFormat = new SimpleDateFormat(""YYYY-MM-dd"");   
Date date =  dateFormat.parse(rs.getDate(2).toString());
</code></pre>
"
"16895952","<p>The possible problem with your code is you are not flushing the output data. So that it might not get written to the output file. </p>

<p>Try the below code.</p>

<pre><code>public static void main(String[] args) {

    String s = ""Hello world!"";
    int i = 143141141;
    try
    {
        //create new file with an ObjectOutputStream
        FileOutputStream out = new FileOutputStream(""test.txt"");
        ObjectOutputStream oout = new ObjectOutputStream(out);

        //write something in a file
        oout.writeObject(s);
        oout.flush();
        oout.writeObject(i);
        oout.flush();        
        //close the stream
        out.close();
        oout.close();

        //create an ObjectInputStream for the file we created before
        ObjectInputStream ois = new ObjectInputStream(new FileInputStream(""test.txt""));
        //read and print what we wrote before
        System.out.println("""" + (String) ois.readObject());
        System.out.println("""" + ois.readObject());
        ois.close();
    }
    catch(Exception ex)
    {
        ex.printStackTrace();
    }
}
</code></pre>

<p>And also if you want to read your written objects into the file then you can't because they are written as serialized objects. For textual operation with files you can consider BufferedReader or PrintWriter. see the following code.</p>

<pre><code>public class WriteToFileExample {
    public static void main(String[] args) {
        try {

            String content = ""This is the content to write into file"";

            File file = new File(""c:\\desktop\\filename.txt"");

            // if file doesnt exists, then create it
            if (!file.exists()) {
                file.createNewFile();
            }

            FileWriter fw = new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(content);
            bw.close();

            System.out.println(""Done"");

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
</code></pre>

<p>After this you can open your text file and can see the written content in the human readable form and it is good practice to not to give ""txt"" formats when you are writing objects to the file. It's misleading. </p>

<p>Hope this helps.</p>
"
"26400565","<p>A simple ""fix"" would be</p>

<pre><code>String toPrint = """";
if(lastName.length() &gt; 0 &amp;&amp; firstName.length() &gt; 0){
   toPrint = lastName + "", "" - firstName;
}else if(!lastName.length() &gt; 0 &amp;&amp; firstName.length() &gt; 0){
   toPrint = firstName;
}else if(lastName.length() &gt; 0 &amp;&amp; !firstName.length() &gt; 0){
   toPrint = lastName;
}
System.out.println(toPrint)
</code></pre>
"
"16941378","<p>You can try to use <code>List&lt;ArrayList&lt;MyObject&gt;&gt;</code>.</p>

<p>Therefore you can add as many <code>ArrayList</code> as you want.</p>
"
"27227638","<p>May be you need to use, if else condition to break the loop..</p>

<pre><code>    for (int i =0; i&lt;iGrades.length;i++)
    {
        if (iGrades[i]==-1)
        {
            break;

        }
        else{
            iGrades[i]=kb.nextInt();
        }
    }
</code></pre>

<p>This loop accepts 10 elements , and it the user enters only -1 it will break.</p>

<pre><code>public static int countArrayElements(int[] array)
{
    int iCount = 0;
    for (int i = 0; i &lt; array.length; i++)
    {
        if (array[i] != -1)
        {
        iCount ++;
        }
    }
    System.out.print (""\nThere are "" + (iCount+1) + ""numbers in the array."");
    return iCount;
}
</code></pre>

<p>Here printing of (iCount+1) is to count -1 also.</p>
"
"16853024","<p>Compiler is giving warning because you are using <strong>for</strong> loop. It might happen that condition(for some dynamic value) in for loop fails for the first time itself and flow will not go in the for loop and that's why compiler is forcing you to write a return statement after for loop.</p>

<p>Also as @Peter Lawrey said, you cannot return multiple values from a function. So you can use the given by Peter Lawrey </p>

<pre><code>StringBuilder sb = new StringBuilder();
     for (int i=1; i&lt;10; i++)
         sb.append(i + ""..........."" + i*i + ""\n"");
     return sb.toString();
</code></pre>

<p>or you can replace your for loop with <strong>do..while</strong> where flow will go in the loop for sure, although I don't think that's a solution but I am giving this to show why compiler is forcing return statement after for loop.</p>

<pre><code>int i = 1;
do{
    return ((i) + ""..........."" + (i) * (i));
    ++i;
}while(i&lt;10);
</code></pre>
"
"27227728","<p>Instead of two methods, it can be possible in  single method as i did using <code>ArrayList</code></p>

<pre><code>public static int inputGrades()
{
    Scanner scanner = new Scanner (System.in);

    int GRADE_SIZE = 10;

    List&lt;Integer&gt; iGrades = new ArrayList&lt;&gt;();

    System.out.print(""\nInput test scores, enter -1 when you're finished.\n"");

    for (int idx = 0; idx &lt; GRADE_SIZE; idx++)
    {
        int inputNum = scanner.nextInt();
        iGrades.add(inputNum);

        if(inputNum == -1){
            break;
        }
    }

    return iGrades.size();   
}
</code></pre>

<p><strong>Main</strong></p>

<pre><code>public static void main(String[] args) {    
System.out.println(""Grade Size :: ""+inputGrades());
}
</code></pre>
"
"26150959","<p>this will work</p>

<pre><code>   public class Student
    {
         String name;
          int age;
         long roll;

        public Student(String name, int age, long roll) {
            this.name = name;
            this.age = age;
            this.roll = roll;
        }


        public void show()
        {
            System.out.println(""name : ""+name+"" age : ""+age+"" roll : ""+roll);
        }

     public static void main(String[] args) {
        Student ob=new Student(""ishtiaque"",10,107060);
        ob.show();
    }
  }
</code></pre>
"
"17013969","<p>The String is not an object, it is a class. It is needed just like any other class if you're wanting to create an object off it. An example, if you did:</p>

<pre><code>int i;
</code></pre>

<p>you would eventually have to initialize and set a value for i. Just like with String. You cannot have an object holding NULL (no specific spot allocated in memory), that will tell the program there is no such memory inside that object. That is why you get null being printed out. If you do """", it is blank, BUT, it is also initialized because the object has a spot in the memory system for the """" to be placed, and eventually searched and accessed later. I have had a bit of struggle with this throughout my Java programming, but I eventually learned that if I have my Strings, int(s), and etc initialized (set a value to the object for memory reference later) then nothing would cause a problem</p>
"
"26479783","<p>Suppose your method in activity is named getTitle();</p>

<p>From adapter call it like context.getTitle();</p>

<p>where context would be one you pass to the constructor of adapter  </p>

<pre><code>private final Context context;

public DataPagerAdapter( Context context )
{
    this.context = context;
}
</code></pre>
"
"27239457","<p>This is an alternative approach to <code>Java.util.Collections</code>, which uses the <code>Java.util.Random</code> class.</p>

<pre><code>/* package whatever; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be ""Main"" only if the class is public. */
class Ideone
{

    final static int RAND_CAP = 9;

    public static void main (String[] args) throws java.lang.Exception
    {
        ArrayList&lt;Integer&gt; usedNumbers = new ArrayList&lt;Integer&gt;();
        Random rand = new Random(System.currentTimeMillis());
        while (usedNumbers.size() &lt; RAND_CAP) {
            int randNum = Math.abs(rand.nextInt() % RAND_CAP) + 1;
            if (!usedNumbers.contains(randNum)) {
                usedNumbers.add(randNum);
                System.out.println(randNum);
            }
        }
    }
}
</code></pre>

<p><a href=""http://ideone.com/IarN81"" rel=""nofollow"">run code here</a></p>
"
"16958191","<p>You just need to create a drawable resource (see an example below), and add it to the layout you created for your ListItem.</p>

<p>The drawable (in your res\drawable folder - name it whatever - listgrad.xml for ex) could look like:</p>

<pre><code>&lt;shape xmlns:android=""http://schemas.android.com/apk/res/android""
android:shape=""rectangle""&gt;
&lt;gradient
  android:startColor=""@color/gradient_start""
  android:endColor=""@color/gradient_end""
  android:angle=""-270"" /&gt; 
&lt;/shape&gt;
</code></pre>

<p>The you would add it to the layout for your list item (the layout.xml file you define for this) like this code snippet:</p>

<pre><code>&lt;TextView
    android:id=""@+id/ranking_order""
    android:layout_width=""wrap_content""
    android:layout_height=""wrap_content""
    android:background=""@drawable/list_grad""
    /&gt;
</code></pre>

<p>...</p>
"
"26479789","<p>Use <a href=""http://developer.android.com/reference/android/content/SharedPreferences.html"" rel=""nofollow"">Shared Preferences</a>. This is the recommended way to do it in Android.</p>

<pre><code>@SharedPref
public interface ExamplePrefs {

    // The name will have default value of ""Anonymous""
    @DefaultString(""Anonymous"")
    String name();

    // The field age will have default value 42
    @DefaultInt(42)
    int age();

    // The field address will have default value of ""MyAddress""
    @DefaultString(""MyAddress"")
    String name();

    // The field lastUpdated will have default value 0
    long lastUpdated();

}
</code></pre>

<p>For your use case just create a class SectionsPagerPref as follows :</p>

<pre><code>@SharedPref
public interface SectionsPagerPref {
    @DefaultInt(0)
    int getCount();
}
</code></pre>
"
"27254623","<p>See this broken double-checked locking</p>

<pre><code>class X {
    private static X x;
    private final int n = 1;

    public static X getX() {
        if (x == null) {
            x = new X();
        }
        return x;
    }
}
</code></pre>

<p><code>final</code> does not guarantee that <code>x</code> points to an initialized instance of <code>X</code>. JVM is allowed to first create and publish an instance of <code>X</code> and then assign 1 to <code>n</code>.</p>
"
"26213576","<p>Your code works</p>

<pre><code>Enter the key number to search for in the array: 
7
found 7 at row 1 column 2
Process finished with exit code 0
</code></pre>

<p>have a look of Collections Framework</p>
"
"26236642","<p>You can use the method </p>

<pre><code>line.isEmpty()
</code></pre>

<p>to handle that case</p>
"
"17000490","<p>You could achieve this by having the threads acquire a common lock in order to be allowed to print anything.</p>

<p>The ""lock"" could be some singleton like:</p>

<pre><code>public class Lock {

private static Lock instance;
private static boolean inUse = false;

public static Lock getInstance() {
    if(instance == null) {
        instance = new Lock();
    }
    return instance;
}

public boolean acquireLock() {
    boolean rv = false;
    if(inUse == false) {
        inUse = true;
        rv = true;
    }
    return rv;
}

public void releaseLock() {
    inUse = false;
}

}
</code></pre>

<p>Whenever a thread wants to print it has to call <code>acquireLock()</code> and if it returns true, then it can print. If it returns false, then it has to wait until it returns true. Immediately after printing the thread calls <code>releaseLock()</code> so that the Lock is freed. </p>

<p>I didn't test this code, so use it at your own risk. I just typed it up really quick as it was the idea I was thinking of. </p>

<p>You can read more about locks and their use in synchronization here: <a href=""http://en.wikipedia.org/wiki/Lock_(computer_science)"" rel=""nofollow"">http://en.wikipedia.org/wiki/Lock_(computer_science)</a></p>
"
"26265269","<p>Wrap your line 31 in a try/catch block like so:</p>

<pre><code>try
{
    // Whatever your line 31 is
}
catch(java.io.IOException)
{
    // Your error handling code
}
</code></pre>

<p>Certain methods are specified to throw certain Exceptions (errors) when something goes wrong. Those exceptions must be caught and handled by a try/catch block in order to isolate the Exception and keep it from cascading throughout your code. See the <a href=""http://docs.oracle.com/javase/tutorial/essential/exceptions/"" rel=""nofollow"">Java Tutorial</a> for more information.</p>
"
"27330413","<p>This error is due to <code>java.lang.ClassCastException: com.xx.activities.MainActivity$AdFragment cannot be cast to android.app.Fragment</code> Change your fragment_ad.xml to be</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;

&lt;RelativeLayout xmlns:android=""http://schemas.android.com/apk/res/android""
xmlns:ads=""http://schemas.android.com/apk/res-auto""
android:layout_width=""match_parent""
android:layout_height=""match_parent""&gt;

&lt;!--ads:adUnitId sets the ad unit ID, which is defined in values/strings.xml --&gt;
&lt;com.google.android.gms.ads.AdView
    android:id=""@+id/adView""
    android:layout_width=""match_parent""
    android:layout_height=""wrap_content""
    android:layout_centerHorizontal=""true""
    ads:adSize=""BANNER""
    ads:adUnitId=""@string/banner_ad_unit_id"" /&gt;

&lt;/RelativeLayout&gt;
</code></pre>

<p>And please see the full project source code. <a href=""https://github.com/googleads/googleads-mobile-android-examples/tree/master/admob/BannerExample/app"" rel=""nofollow"">googleads-mobile-android-examples</a></p>

<p>I can't add new comment Please post your layouts with it's names and your AndroidManifest.xml</p>
"
"17051811","<p>You can use java matcher to transform brackets. I did the one for you below:</p>

<pre><code>         String input = ""this is a [cent[cent] and [cent]cent] string"";
         Pattern p = Pattern.compile(""\\[((?:[^\\[\\]]++|\\[[^\\[\\]]*+\\])*+)\\]"");
         Matcher m = p.matcher(input);
</code></pre>
"
"27354550","<pre><code>Map.Entry&lt;String, String&gt; entry = hm.entrySet().iterator().next();
String result = entry.getKey() + "" = "" + entry.getValue()
</code></pre>
"
"26619126","<p>I'm afraid your method is not very nice :-(</p>

<p>More seriously, you only use it as a static function, you declare it to return an int and you have no return statement. You pass 2 (input) parameters factor and x that are not used in the method.</p>

<p>If you want it to be a simple utility method without side effect nor usage of state attribute of an object, you could at least do : </p>

<pre><code>public static int factorial (int number) // only one parameter
{
    int factor = 1; //the result - must be initialized to 1 since you use it later
    if (number &lt; 1 || number &gt; 10) {
        System.out.println(""Invalid!! the number has to be between 1 and 10"");
        factor = -1;
    }
    else 
    {
        for(int x=1; x&lt;=number; x++ ) // x can be declared in the loop
        {
            factor = factor*x;
        }
    }
    return factor;
}
</code></pre>

<p>and use it that way :</p>

<pre><code>    System.out.println(""Enter a number to find the factorial of it: "");
    number= sc.nextInt();
    int factor = factorial(number);
    System.out.println(""The factorial of  ""+number+"" is = "" +factor); // print in the main
</code></pre>

<p>If you want to use it as a method that modifies the object you could try that :</p>

<pre><code>public class Part3
    {
    private int factor;

    public static void main (String args []) 
    {
        Scanner sc = new Scanner(System.in);
        int number;
        Part3 part3 = new Part3(); // create an object
        System.out.println(""Enter a number to find the factorial of it: "");
        number= sc.nextInt();
        part3.factorial(number)
        System.out.println(""The factorial of  ""+number+"" is = "" +part3.factor);
    }
    public void factorial (int number)
    {
        factor = 1; // already exists in the object
        if (number &lt; 1 || number &gt; 10) {
            System.out.println(""Invalid!! the number has to be between 1 and 10"");
            factor = -1;
        }
        else 
        {
            for(int x=1; x&lt;=number; x++ ) // x can be declared in the loop
            {
                factor = factor*x;
            }
        }
    }
}
</code></pre>
"
"17144144","<p>What if you try:</p>

<pre><code>File file = new File(""c:/newfile.txt"");
    String content = ""This is the text content"";

    try (FileOutputStream fop = new FileOutputStream(file)) {

        // if file doesn't exists, then create it
        if (!file.exists()) {
            file.createNewFile();
        }

        // get the content in bytes
        byte[] contentInBytes = content.getBytes();

        fop.write(contentInBytes);
        fop.flush();
        fop.close();

        System.out.println(""Done"");

    } catch (IOException e) {
        e.printStackTrace();
    }
</code></pre>

<p>Based on this tutorial: <a href=""http://www.mkyong.com/java/how-to-write-to-file-in-java-fileoutputstream-example/"" rel=""nofollow"">http://www.mkyong.com/java/how-to-write-to-file-in-java-fileoutputstream-example/</a></p>
"
"17037336","<pre><code>public class MyProg {

    public static void main(String[] args) {
        String str = ""100"";
        int num = Integer.parseInt(str);
        System.out.println(num * 2);
    }
}

--output:--
200
</code></pre>
"
"26641257","<p>You are mistaking on several points : </p>

<ul>
<li>your construction of the list is too verbose</li>
<li>your test <code>next == null</code> should be <code>next.hasNext()</code> but I renamed it to <code>it</code></li>
<li>you always return 0 whatever happens and never use the result of the recursive call</li>
</ul>

<p>Here is a working solution :</p>

<pre><code>public class ListCount {
    public static LinkedList&lt;String&gt;    ll  = new LinkedList&lt;String&gt;();

    public static void main(String[] args) {
        String s = ""Hi I am a programmer and I am currently working on an assignment that is based on "" +
                ""linkedlists for java"";
        ll = new LinkedList&lt;String&gt;(Arrays.asList(s.split(""\\s+"")));
        System.out.println(countsize(0));
        System.out.println(ll.size());
    }

    public static int countsize(int somevalue) {
        Iterator&lt;String&gt; it = ll.listIterator(somevalue);
        return it.hasNext() ? countsize(somevalue + 1) + 1 : 0;
    }
}
</code></pre>
"
"17167560","<pre><code>@Override
public String toString()
{
    //java
    return ResourceBundle.getBundle().getString(id); 
    //android?
    App.getContext().getString(id);

}
</code></pre>
"
"27395487","<p>I'd suggest to consider something simpler as <code>NavigableMap</code> is a pretty rich interface and you may end up spending a lot of time on features you may not need. Even a plain <code>Map</code> has tons of methods and <code>AbstractMap</code> hardly helps as it provides only very rudimentary implementations (either inefficient or throwing <code>UnsupportedOperationException</code>).</p>

<p>If you could use <code>List</code> (with <code>sublist</code> for ""navigation""), you'd save yourself a lot of work. Anyway, look at <a href=""http://code.google.com/p/guava-libraries/source/browse/guava-testlib"" rel=""nofollow"">guava-testlib</a> for a good testsuite.</p>

<p>If you really need a <code>NavigableMap</code>, I'm afraid, you're out of luck. I guess, there's no suitable base class as it's impossible to write something useful often enough.</p>

<blockquote>
  <p>For instance, it seems like firstEntry of a sub/tail map could just call ceilingEntry(minKey) or higherEntry(minKey), depending on whether minKey is inclusive. </p>
</blockquote>

<p>Yes, but this is a rather simple case. And there may be a faster way for <code>firstEntry</code> for a given implementation.</p>
"
"26421263","<p>You can simply divide by 10, since u only want two decimal point. then * 100 , round it then divide it :)</p>

<pre><code>double d=123.23;
d=d/10;
double out=  (double) Math.round(d*100) / 100;
System.out.println(out);
</code></pre>
"
"17103952","<pre><code>String ele = b.get(0);
ele = ele.replace(""{"", """");
ele = ele.replace(""}"", """");
StringTokenizer tokens = new StringTokenizer(ele, "","");
while(tokens.hasMoreTokens()) {

    int val = Integer.parseInt(tokens.nextToken());
}
</code></pre>
"
"26694999","<p>Try using for-loops and if-else. Since you are looking for yes/no type values, I just used <code>boolean</code> type in my example</p>

<pre><code>boolean[][] arr = new boolean[10][10];
for(int i = 0; i &lt; arr.length; i++) {
    for(int j = 0; j &lt; arr[i].length; j++) {
        if(i &lt; 6 &amp;&amp; j &lt; 8) 
            arr[i][j] = true;
        else
            arr[i][j] = false;
    }
}
</code></pre>
"
"17234673","<p>Since the OP specifically asked for the case where the variable is static, I'm going to add yet another answer. </p>

<pre><code>public class Test {
    static List&lt;String&gt; availableFormsList = new ArrayList&lt;String&gt;();

    /**
     * @param args
     * @throws IOException 
     */     
    public static void main(String[] args) throws IOException { 
        availableFormsList .add(""a"");
        System.out.println(""Size: ""+availableFormsList.size());
        availableFormsList.remove(""a"");
        System.out.println(""Size: ""+availableFormsList.size());
    }
}
</code></pre>

<p>And this doesn't throw any error. </p>

<p>EDIT: By now it's clear that OP missed out an important detail, namely, that he's using Arrays.asList() to generate the List.</p>
"
"26506053","<p>do it like this and it should work:</p>

<p><code>return age.toString();</code></p>
"
"17163719","<pre><code>&lt;?xml version=""1.0"" ?&gt; 
</code></pre>

<p></p>

<pre><code>&lt;path id=""compile.classpath""&gt;
    &lt;fileset dir=""WebContent/WEB-INF/lib""&gt;
        &lt;include name=""*.jar""/&gt;
    &lt;/fileset&gt;
&lt;/path&gt;

&lt;target name=""init""&gt;
    &lt;mkdir dir=""build/classes""/&gt;
    &lt;mkdir dir=""dist"" /&gt;
&lt;/target&gt;

&lt;target name=""compile"" depends=""init"" &gt;
    &lt;javac destdir=""build/classes"" debug=""true"" srcdir=""src""&gt;
        &lt;classpath refid=""compile.classpath""/&gt;
    &lt;/javac&gt;
&lt;/target&gt;

&lt;target name=""war"" depends=""compile""&gt;
    &lt;war destfile=""/APP/jboss-5.1.0.GA/server/all/deploy/DispatchActionEx.war"" webxml=""WebContent/WEB-INF/web.xml""&gt;         
        &lt;fileset dir=""WebContent""/&gt;
        &lt;lib dir=""WebContent/WEB-INF/lib""/&gt;         
        &lt;classes dir=""build/classes""/&gt;
    &lt;/war&gt;
&lt;/target&gt;

&lt;target name=""clean""&gt;       
&lt;/target&gt;
</code></pre>

<p></p>

<ol>
<li>Just write an build.xml file(i have give an example),</li>
<li>change ""project name"" and ""war destfile"" which will be "".../apache-tomcat/webapps/projectname.war""</li>
<li>put it in your project folder</li>
<li>open it in eclipse.</li>
<li>right click on it>>run as>>ant build</li>
<li>check whether the war file is created in the webapps folder in apache-tomcat</li>
</ol>
"
"26521117","<p>You are struck because your program has no exit condition.Look it goes into the loop maxProfit(1), but has no option of exiting from the loop. </p>

<p>Update:
Once your program gets into this loop there is no way for it to come out.. </p>

<pre><code>public void maxProfit(int i) {

    if (i == n - 1) {
        if (low != -1 &amp;&amp; a[i - 1] &lt;= a[i])
            profit += a[i] - low;
        System.out.println(""i"");
        return;
    }
    if (a[i - 1] &lt; a[i] &amp;&amp; low == -1) {
        low = a[i - 1];
        System.out.println(""i"");
    }
    if (a[i - 1] &gt; a[i] &amp;&amp; low != -1) {
        profit += a[i - 1] - low;
        low = -1;
        System.out.println(""i"");
    }
    //System.out.print(i+"","");

    maxProfit(i + 1);
 }
</code></pre>
"
"17164079","<p>Your code will work fine. I think your input string having some space after the number.
please try with this</p>

<pre><code>String[]splittedRawText=rawText.trim().split("","");
</code></pre>
"
"26738249","<p>You can test that the exception is launched with this:</p>

<pre><code>@Test(expected = ValidationException.class)
public void testGreaterEqual() throws ValidationException {
    Validate.greaterEqual(new Float(-5), 0f, ""error7"");
}
</code></pre>
"
"26558353","<p>You are in a Fragment so I think you should invoke startActivity() method using:</p>

<pre><code>getActivity().startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""http://infinitycodeservices.com"")));
</code></pre>
"
"17197312","<p>It depends what you need, as @andrzeg said.</p>

<p>One additional thing.  Do you want a.equals(d) to be true, but d.equals(a) to be false?  when coding you will probably be using <code>instanceof</code> which may or may not be what you want.</p>
"
"17282061","<pre><code>public class Conversion {
public static void main(String[] args) {
    Integer i = 234;

    Float b = i.floatValue();

    System.out.println(b);

}}
</code></pre>
"
"17282107","<p>You could rewrite your class to work like you want:</p>

<pre><code>public class Conversion {

     public Float intToFloat(Integer i) {
          return (Float) i.floatValue();
     }

}
</code></pre>
"
"17286899","<pre><code>for (int i = 1; i &lt; 9; i++){
    for (int j = 1; j &lt; 9; j++){
        if (i % 2 == j % 2){
            color = white
        } else {
            color = black
        }
        id = (i-1)*8+j
    }//end inner for
}//end outer for
</code></pre>

<p>Go through all of the tiles, and if they're both even or both odd (i.e. (1,1), (1,3)... and (2,2) (2,4) (2,6)... and (3,1) (3,3) (3,5) ... etc) then make it one color, otherwise use the other color</p>

<p>Example:</p>

<pre><code>B W B W B W
W B W B W B
B W B W B W
W B W B W B
B W B W B W
W B W B W B
</code></pre>

<p>You check out the indices where the colors are all black here and you will see that at all of these, the X and Y are either both odd or both even. </p>

<p>Also, not sure what exactly your <code>id = (i-1)*8+j</code> line is supposed to be doing</p>
"
"27552090","<p>Your code throws an <code>IndexOutOfBoundsException</code> when i=0 and j=4.</p>

<p>This is because your arrays are not the same length as each other.</p>
"
"17287290","<p>one-liner</p>

<pre><code>int dim = 10;
for (int i = 0; i &lt; dim * dim; i++) System.out.print((i % dim == 0 ? ""\n"" : """") + ((i / dim) % 2 == 0 ? i % 2 == 0 ? 'B' : 'W' : i % 2 == 0 ? 'W' : 'B') + "" "");
</code></pre>

<p>output</p>

<pre><code>B W B W B W B W B W 
W B W B W B W B W B 
B W B W B W B W B W 
W B W B W B W B W B 
B W B W B W B W B W 
W B W B W B W B W B 
B W B W B W B W B W 
W B W B W B W B W B 
B W B W B W B W B W 
W B W B W B W B W B
</code></pre>
"
"27555868","<p>Any time you want you break a loop, <code>break;</code> will help you!</p>

<pre><code>for(int i = 0; i &lt; 20; i++) {
    if(i == 10) break;
}
</code></pre>

<p>That'll break the loop once i hits 10.</p>
"
"26577022","<p>I would recommend putting tabs in between the columns. The only problem with using tabs would be that the lengths of the strings can vary, so the number of tabs you use might change.</p>

<p>However, the nice thing is that you know the longest string is 'Queen of Diamonds' and you can adjust accordingly with that. My guess is two or three tab spaces will be enough, but you can play with it.</p>

<p>In other words, your code would look something like this:</p>

<pre><code>// loop to deal card
for(row = 0; row &lt;7; row++){
   for(col = 0; col &lt; 3; col++){
    play[row][col] = deck[card];
    System.out.print(play[row][col].toString() + ""\t\t\t""); // Change here.
    card++;
}

System.out.println();
</code></pre>
"
"17229384","<p>It will be <code>NullPointerException</code> , because <strong>int cannot be assigned null</strong> </p>

<p>however , this code will always return null , because here you stated the <strong>condition always</strong> as <code>true</code> , so true part of ternary statement , that is <code>null</code> will get returned.</p>

<p>but this works</p>

<pre><code>public class Test 
 {

        Integer temp()
        {
           return(true ? null : 0);  
        }


     public static void main(String[] args)
     {
         Test m=new Test();
         System.out.println(m.temp());
      }

 }
</code></pre>

<p>Because <code>Integer can hold null value ,  primitive int cannot.</code></p>
"
"17309023","<p>Here's my version of the solution:</p>

<pre><code>import java.util.ArrayList;

public class Main {

public static void main(String[] args) {

    ArrayList&lt;Integer&gt; randomNumbers = new ArrayList&lt;Integer&gt;();
    ArrayList&lt;Integer&gt; expandingPlace = new ArrayList&lt;Integer&gt;();
    ArrayList&lt;Integer&gt; sequenceOfDuplicates = new ArrayList&lt;Integer&gt;();

    for (int i = 0; i &lt; 100; i++) {
        randomNumbers.add((int) (Math.random() * 10));
        expandingPlace.add(randomNumbers.get(i));
    }

    System.out.println(randomNumbers); // Original list.

    for (int i = 0; i &lt; randomNumbers.size(); i++) {
        if (expandingPlace.get(i) == expandingPlace.get(i + 1)) {
            expandingPlace.add(0);
            sequenceOfDuplicates.add(expandingPlace.get(i)); 
            sequenceOfDuplicates.add(expandingPlace.get(i + 1));
        }
    }

    System.out.println(sequenceOfDuplicates); // What was in duplicate there.

}

}
</code></pre>

<p>It adds numbers from 0 to 9 to a list, and it adds to another list what is in ""duplicate"" (a number followed by the same number). You can use your big list instead of my randomNumbers ArrayList.</p>
"
"26842283","<p>In your code, you only call</p>

<pre><code> list.add(...);
</code></pre>

<p>once.</p>

<p>You need a (while/for) loop to get the intended results.</p>
"
"26584744","<p>make sure go with below code once, as first one is for timestamp creation and then go with get method for retrieving the date <a href=""http://www.omgtop5.com/category/android/"" rel=""nofollow"">android</a>  time from oracle database.</p>

<p>......................</p>

<pre><code>java.util.Date android = new java.util.Date();
      long t = android.getTime();
      java.sql.Date sqlDate = new java.sql.Date(t);
      java.sql.Time sqlTime = new java.sql.Time(t);
      java.sql.Timestamp sqlTimestamp = new java.sql.Timestamp(t);
</code></pre>

<p>......................</p>

<pre><code>pstmt.getDate(2, sqlDate);
      pstmt.getTime(3, sqlTime);
      pstmt.getTimestamp(4, sqlTimestamp);
      pstmt.executeUpdate();
</code></pre>
"
"26883344","<p>It is supposed that elements in the array are sorted in non-decreasing order.<br>
My O(N) solution in JavaScript:</p>

<pre><code>function solution(A, B) {
    var scale = 1000000;
    var N = A.length;
    var count=0;
    var left = 0;
    var right = N-1;
    var C_left = 0;

    while(left&lt;right){
    //to avoid rounding errors, use multiplication
        C_left = A[left]*scale+B[left];
        if(C_left&gt;=scale){

            if(C_left*(A[right]*scale+B[right])&gt;=(C_left+(A[right]*scale+B[right]))*scale){
                // if C[left],C[right] is ok, that means that all elements C[left++],C[right] to satisfy condition
                count+=right-left;
                right--;
            }else{
                left++;
            }
        }else{
            left++;
        }
    }
    //condition from codility.com test
    if(count&gt;1000000000)
        return 1000000000;
    else{
        return count;
    }
}
</code></pre>
"
"27611282","<p>The point is that you want to be able to set the value of <code>i</code>.</p>

<p><code>int</code>s are in Java implemented as primitive data, they are passed-by-value. This means that the following code doesn't set <code>a</code>:</p>

<pre><code>public void Foo () {
    int a = 5;
    System.out.println(a);//prints 5
    setA(a);
    System.out.println(a);//prints 5
}

public void setA (int a) {
    a = 3;
}
</code></pre>

<p>Java copies the <em>value</em> of the variable on the stack and the copy is modified leaving the original <code>a</code> untouched.</p>

<p>By using a <code>Wrapper</code>, you store the <code>int</code> in an object. Since <code>object</code>s are passed-by-value from a ""variable perspective"", or passed-by-reference from the objects perspective, you refer to an <code>object</code> that contains an <code>int</code>. In other words, <code>aw</code> referers to the same instance. Because you <strong>copied</strong> the <strong>reference</strong> an not the <strong>object</strong>. Changes made by the <em>callee</em> are thus reflected in the view of the <em>caller</em>.</p>

<pre><code>public void Foo () {
    IntWrapper aw = new IntWrapper();
    aw.value = 5;
    System.out.println(aw.value);//prints 5
    setA(aw);
    System.out.println(aw.value);//prints 3
}

public void setA (IntWrapper aw) {
    aw.value = 3;
}
</code></pre>

<p>This is a useful hack in Java when you want to return multiple values or modify a variable of the <em>caller</em>.</p>

<p><strong>C#</strong> alternatively provides the <code>ref</code> keyword, that enable call-by-reference for primitive values.</p>
"
"26599753","<p>Your code will be:</p>

<pre><code>int indexOfNoDup(string aChar, int startPosition){
  int posInString; // character position in static String ""string""
  int lenString;   // length of static String ""string""
  int pos;         // temporal

  for (posInString=startPosition, posInString&lt;lenString; posInString)
    {
       if (aChar == string[posInStrings])
         {
           if ((posInString+1&lt;lenString) &amp;&amp; (aChar == String[posInStrings+1])) { // followed by same  character
               if(posInString+2&lt;lenString){
                 return -1; // no more characters after successive charecters.
               } else {
                 for (pos = posInString+2; (pos &lt; lenString) &amp;&amp; (aChar == string[pos]); pos++)
                   ; // skip successive characers.
                 posInString = pos; // character at posInString is other character or end of string.
               }
             } else {  // found isolated character!
               return posInStrings;
             }
         }
    }
}
</code></pre>
"
"17343961","<p>You can try this</p>

<pre><code>Collections.sort(list, new Comparator() {
            @Override
            public int compare(String s1, String s2) {

                // ascending order
                 return id1.compareTo(id2);

                // descending order
                //return id2.compareTo(id1);
            }
        });
</code></pre>

<p>For a collection of objects </p>

<pre><code>/*
  Here myItems is an arraylist MyItem added randomly 
  MyItem got a property int id 
  This method provide me myItems in ascending order of id's
*/
Collections.sort(myItems, new Comparator&lt;MyItem&gt;() {

            @Override
            public int compare(MyItem lhs, MyItem rhs) {
                // TODO Auto-generated method stub

                int lhsId = lhs.getId();
                int rhsId = rhs.getId();

                return lhsId&gt;rhsId ? 1 : -1;
            }
        }); 
</code></pre>

<p>And of course you can refer <a href=""http://javatechig.com/java/how-to-sort-an-arraylist-in-java/"" rel=""nofollow"">this</a> </p>
"
"26897888","<p>This is possibly the second-most trivial question I have ever seen.</p>

<pre><code>public BigInteger doubleIt(BigInteger num)
{
    return num.multiply(BigInteger.valueOf(2));
}

public BigDecimal doubleIt(BigDecimal num)
{
    return num.multiply(BigDecimal.valueOf(2));
}

public double doubleIt(double num)
{
    return num*2.0;
}

public long doubleIt(long num)
{
    return num*2;
}
</code></pre>

<p>Most trivial question is <a href=""http://stackoverflow.com/questions/7869911/java-math-function-to-convert-positive-int-to-negative-and-negative-to-positive/7869935#7869935"">here</a>.</p>
"
"17276828","<p>Reusing your code: (Assuming the user already exists)</p>

<pre><code>public boolean isUserBanned(String username)
    {//TODO check if user is banned already
        try 
        {
            pstmnt = conn.prepareStatement(""select username WHERE username = ? and banned = 1"");
            pstmnt.setString(1, username);
            Resultset rs = pstmnt.executeQuery();
            //logger.info(""Banned User : "" + username);
            return rs.next();
        } catch ( SQLException e ) { e.getMessage(); }
        return false;
    }
</code></pre>
"
"27626852","<p>This line: </p>

<pre><code>center.add(new JLabel(""Antwoord Vraag""+ (i +1) +"": ""+antwoord.get(i),SwingConstants.LEFT)); 
</code></pre>

<p>is in a for loop for creating more JLabels</p>

<pre><code>    for(int i = 0; i&lt;maxCounter; i++)
    {

        // Goede Antwoorden toevoegen aan de center
       center.add(new JLabel(""Antwoord Vraag""+ (i +1) +"": ""+antwoord.get(i),SwingConstants.LEFT));                      
    } 
</code></pre>

<p>Because this is not working in the for loop:</p>

<pre><code>    JLabel label[i] = new JLabel(""Antwoord Vraag""+ (i +1) +"": ""+antwoord.get(i),SwingConstants.LEFT);
</code></pre>

<p>Is there a sollution to change the color</p>

<p>I have solved the problem.
Before i start the loop i creat a array:</p>

<pre><code>JLabel[] labels = new JLabel[maxCounter];
</code></pre>

<p>Then in the forloop:</p>

<pre><code>           labels[i] = new JLabel(""Antwoord Vraag""+ (i +1) +"": ""+antwoord.get(i),SwingConstants.LEFT);
           // verander de kleur van de labels
           labels[i].setForeground(rood);
           center.add(labels[i]);
</code></pre>
"
"26920755","<p>Try this plugin configuration. Adjust packageName and don't forget to clean.</p>

<pre><code>&lt;plugin&gt;
    &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;
    &lt;artifactId&gt;jaxb2-maven-plugin&lt;/artifactId&gt;
    &lt;version&gt;1.6&lt;/version&gt;
    &lt;executions&gt;
      &lt;execution&gt;
        &lt;id&gt;xjc&lt;/id&gt;
        &lt;goals&gt;
          &lt;goal&gt;xjc&lt;/goal&gt;
        &lt;/goals&gt;
      &lt;/execution&gt;
    &lt;/executions&gt;
    &lt;configuration&gt;
      &lt;packageName&gt;com.test.route&lt;/packageName&gt;
    &lt;/configuration&gt;
  &lt;/plugin&gt;
</code></pre>
"
"26653086","<p>If you insist on using a String array you will need to use the <code>toString</code> function of the <code>Integer</code> class.</p>

<p>E.g.</p>

<pre><code>Integer.toString(42);
</code></pre>

<p>However, this will cause pain when trying to perform Math operations on them later.</p>
"
"17290640","<p>column attribute  are used to link intermediate <code>address</code>.That is set.</p>
"
"26964928","<p>If you use the full path to your java.exe, you dont need to set up any PATH and JAVA_HOME:</p>

<pre><code>c:\&gt; cd \work
c:\work&gt; c:\java\bin\java.exe -cp classes\ your.Main
</code></pre>

<p>If your book does not use the normal JDK installers it really is supposed to explain that. (However it is normal behaviour for any executable).</p>

<p>(The above example asumes you compile into <code>c:\work\classes\your\Main.class</code> and your JDK is installed (installer does the unpack) in <code>C:\java</code> (typically you would use default locations like <code>C:\Program Files\Java\jdk1.8.0\bin\java.exe</code>).</p>
"
"26680622","<pre><code>package chapter1;

import java.util.Scanner;

public class Exercise3 {

    public static void main (String[] args){
    Scanner scan = new Scanner (System.in);
    System.out.print (""Enter a number that consist of 5 digits: "");
    int num =scan.nextInt();

    int digit1 =num / 10000;
    int digit2 =(( num % 10000) / 1000 );  // the modulus answer of num/10000 is divided by 1000
    int digit3 =( ( num % 1000) / 100 );
    int digit4 = ( ( num% 100 ) / 10 );
    int digit5 = ( num % 10);

    System.out.print (digit1+""\t"");
    System.out.print(digit2+""\t"");
    System.out.print(digit3+""\t"");
    System.out.print(digit4+""\t"");
    System.out.println(digit5+""\t"");
    }


}
</code></pre>
"
"17296448","<p>I believe the answer is that in the first case you specify the generic type: <code>new Test&lt;B&gt;(...)</code>. Notice the <code>&lt;B&gt;</code>. However in the second case you do not specify the generic type: <code>test(a, A.class)</code> therefore you allow the compiler to see if it can determine a generic type that works. In the case of <code>test(b, A.class)</code>, <code>&lt;A&gt;</code> works because <code>b</code> is an instance of <code>A</code>.</p>

<p>Try something like: <code>myInstance.&lt;B&gt;test(b, A.class)</code></p>
"
"26999038","<pre><code>public static Boolean isPrime(int num){ //method signature. returns Boolean, true if number isPrime, false if not
if(num==2){ //for case num=2, function returns true. detailed explanation underneath
  return(true);
}
for(int i=2;i&lt;=(int)Math.sqrt(num)+1;i++){ //loops through 2 to sqrt(num). All you need to check- efficient
  if(num%i==0){ //if a divisor is found, its not prime. returns false
    return(false);
  }
}
return(true); //if all cases don't divide num, it is prime.
</code></pre>

<p>}</p>

<hr>

<pre><code>    // Returns true iff n is prime.  First checks if n is even, handling the
// cases of n=2 (prime) or n is even &gt; 2 (not prime).  Then checks if any
// odd #'s between 3 and sqrt(n), inclusive, are divisors of n, returning
// false if any are.
public static boolean isPrime(int n) {
    if (n &lt; 2) return false;
    if (n % 2 == 0)
        // n is an even, so return true iff n is exactly 2
        return (n == 2);
    for (int i=3; i*i&lt;=n; i+=2)
        if (n % i == 0)
            // i divides evenly into n, so n is not prime
            return false;
    return true;
}
</code></pre>
"
"17316358","<p>Here first get the size of existing list and then add to the current position</p>

<pre><code> public static void add(int position, LinkedList&lt;String&gt; list) {
      System.err.println(list.size());
      list.add(list.size(), ""aaa"");
      System.out.println(list.get(1));

     }
</code></pre>
"
"27719362","<p>It seems to me that what you need is a reference to the <code>class</code> of your object. With that you can access the name of your class simply by invoking the <code>class.getSimpleName()</code> method.</p>

<p>For example:</p>

<pre><code>ClassA a = new ClassA();
ClassB b = new ClassB();
System.out.println(b.getClass.getSimpleName());
System.out.println(b.getClass.getSimpleName());
</code></pre>

<p>This technique, in contrast to yours, doesn't require you to manually update the <code>s</code> field should you ever change the class name after a refactoring.</p>

<p>For more info on the class object see this: <a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/Class.html"" rel=""nofollow"">http://docs.oracle.com/javase/7/docs/api/java/lang/Class.html</a></p>
"
"26718018","<pre><code>public static void main(String[] args) {

    DateFormat dateFormat = new SimpleDateFormat(""yyyy/MM/dd HH:mm:ss"");
    //get current date time with Date()
    Date date = new Date();
    System.out.println(dateFormat.format(date));

    //get current date time with Calendar()
    Calendar cal = Calendar.getInstance();
    System.out.println(dateFormat.format(cal.getTime()));

}
</code></pre>
"
"26734376","<p>Java code without using any built-in function</p>

<pre><code>    String s1 = ""test"";
    String s2 = ""tastaegasghets"";
    char ch[] = new char[s1.length()];
    char ch1[] = new char[s2.length()];
    int k = 0;
    for (int i = 0; i &lt; s1.length(); i++) {
        ch[i] = s1.charAt(i);

        for (int j = 0; j &lt; s2.length(); j++) {
            ch1[j] = s2.charAt(j);
            if (ch[i] == ch1[j]) {
                k++;
                break;

            }
        }

    }
    if (k == s1.length()) {
        System.out.println(""true"");
    } else {
        System.out.println(""false"");
    }
</code></pre>
"
"27039342","<p>Try this code</p>

<pre><code>public class Test2 {

    public static void main(String args[]){
        String test = ""1   2      4   5"";
        String[] testArray = test.split(""\\t"");

        for(int i=0;i&lt;testArray.length;i++){
            System.out.println(testArray[i]);
        }
    }
</code></pre>
"
"27047300","<p>First, to get all the lines in the text file, try using a while loop. As you are reading in from one file, output to the second file. Split each line based on the conditional.</p>

<pre><code>String inLine = in.nextLine();
String[] parts = inLine.split(""--@"");
String toWrite = parts[0] + "" "" + parts[1];
outLine.write(toWrite);
</code></pre>

<p>Should be easy enough to figure out.</p>
"
"17478490","<p>Here is Another way you can do this.
UPDATED: Without Loops </p>

<pre><code>              Scanner keyboard = new Scanner(System.in);    
      System.out.println(""Enter a line of text. No punctuaton please"");
      String sentence = keyboard.nextLine();
      System.out.println(sentence);
      int spacePosition = sentence.indexOf("" "");
      String firstString = sentence.substring(0, spacePosition).trim();
      String restOfSentence = sentence.substring(spacePosition, sentence.length()).trim();
      String firstChar = restOfSentence.substring(0, 1);
      firstChar = firstChar.toUpperCase();
      restOfSentence = firstChar + restOfSentence.substring(1, restOfSentence.length());
      System.out.println(restOfSentence + "" "" + firstString);
      keyboard.close();
</code></pre>
"
"27050049","<p>I'm not sure if this is what you want, but you could read the entire line in as a String, and then use the method <code>String.split(String regex)</code> which will return an array of Strings.  These Strings will be the numbers between the @.  You could then iterate through the array and print out each number on a line, or analyze the data however you want.</p>

<p>For example:</p>

<pre><code>package test;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

public class Test {
    public static void main(String[] args) throws FileNotFoundException, IOException {
        System.setProperty(""line.separator"", ""@"");

        File testFile = new File(""./Mypath/myfile"");
        Scanner fileScanner = new Scanner(testFile);
        String myString = fileScanner.nextLine();
        String[] data = myString.split(""@"");

        // Process data
    }
}
</code></pre>

<p>If you need to convert the numbers to integers, use <code>Integer.parseInt(String)</code></p>

<p>Hope I helped!</p>
"
"17342578","<p>It is because field initialisers are moved into the constructor by the compiler (unless static) and so you would need be explicit in your constructor like this:</p>

<pre><code>class C 
{
    int i = 5;
    byte[] s;

    public C()
    {
        s = new byte[i];
    }
}
</code></pre>
"
"17483277","<p>That's because a byte can only store 8 bits of information, which is 2^8 = 256 values, 128 negative, zero, and 127 positive, and it wraps around. Use <code>int</code> instead if you need to go up to 256, otherwise count from -127 to 128 with your byte if memory use is important.</p>
"
"26801830","<pre><code>    public static String printStrings(String a,int b) {
    String s = """";
    for(int i = 1; i &lt;= b; i++) {
        s=s+a+"" "";    

    }
    return s;
   }

public static void main(String[] args) {
System.out.println(printStrings(""abc"",5));
}
</code></pre>
"
"17498482","<p>You can try two functions below to finish your transform jobs:</p>

<pre><code>    public static byte[] toBytes(String s) {
    try {
      return s.getBytes(""UTF-8"");
    } catch (UnsupportedEncodingException e) {
      System.out.println(""UTF-8 not supported?"", e);
      return null;
    }
    } 

      public static String toString(final byte [] b, int off, int len) {
          if (b == null) {
             return null;
          }
          if (len == 0) {
             return """";
          }
          try {
            return new String(b, off, len, ""UTF8"");
          } catch (UnsupportedEncodingException e) {
          System.out.println(""UTF-8 not supported?"", e);
          return null;
          }
      }
</code></pre>
"
"17342848","<p>According to this comment:</p>

<blockquote>
  <p>I want to print the values in the ArrayList a starting from 10 until
  20...and 10 can be anywhere in the list and not the beginning</p>
</blockquote>

<p>interpreted such that the arraylist contains 10 somewhere and possibly 20 somewhere further down the list and all numbers between the first 10 and the first 20 should be printed:</p>

<pre><code>j = 0;
while (j &lt; a.size() &amp;&amp; a.get(j) != 10) j++;
if (j &lt; a.size()) do {
    print (a.get(j)); j++;
} while (j &lt; a.size() &amp;&amp; a.get(j) != 20);
</code></pre>
"
"17342926","<p>According to your statement</p>

<p><code>I want to print the values in the ArrayList a starting from 10 until 20...and 10 can be anywhere in the list and not the beginning</code></p>

<p>You can use following code:</p>

<pre><code>for(int j=0; j&lt;a.size(); j++){
   int number = Integer.parseInt(a.get(j).toString());
   if(number&gt;=10 &amp;&amp; number&lt;=20){
     System.out.println(number);
   }
}
</code></pre>
"
"26832945","<p>you must use the onClickListener() method for Button object. 
Your code like this structure;</p>

<pre><code>buttonname = (Button)findViewById(R.id.buttonname);

    buttonname.setOnClickListener(new View.OnClickListener() {
                 public void onClick(View v) {
                     // Perform action on click
                 }
});
</code></pre>

<p>I recommend to your visit <a href=""http://developer.android.com/reference/android/widget/Button.html"" rel=""nofollow"">Button | Android Dev</a> page for Button.</p>
"
"27746456","<p>Look at java.util.PropertyResourceBundle. It is a convenience class for reading a property file and you can obtain a <code>Set&lt;String&gt;</code> of the keys. This should help to compare the contents of several resource files.</p>

<p>But I think that a better approach is to maintain the n languages in a single file, e.g., using XML and to generate the resource files from a single source.</p>

<pre><code>&lt;entry&gt;
   &lt;key&gt;somekey&lt;/key&gt;
   &lt;value lang=""en""&gt;good bye&lt;/value&gt;
   &lt;value lang=""es""&gt;hasta luego&lt;/value&gt;
&lt;/entry&gt;
</code></pre>
"
"27753496","<p>Private members of Source cannot be accessed from Destination object even if you are passing a Source object to Destination. </p>

<p>You need to add string fieldA, fieldB to Destination to </p>

<pre><code>string fieldA, fieldB;
public Destination(Source src)
{
   fieldA = src.fieldA;
   fieldB = src.fieldB;
}
</code></pre>
"
"26845548","<p>**Based on your code, Try this:****</p>

<pre><code>           `if(a == 1 &amp;&amp; b != 1 &amp;&amp; c != 1){
                System.out.println(""CourseE is available"");
            }
            else if(a !=1 &amp;&amp; b == 1 &amp;&amp; c != 1){
                System.out.println(""CourseF is available"");
            }
            else if(a !=1 &amp;&amp; b != 1 &amp;&amp; c == 1){
                System.out.println(""CourseG is available"");
            }
            else if(a == 1 &amp;&amp; b == 1 &amp;&amp; c !=1){
                System.out.println(""CourseF and CourseE are available"");
            }
            else if(a ==1 &amp;&amp; b == 1 &amp;&amp; c == 1){
                System.out.println(""CourseE, CourseF, CourseG are available"");
            }
            else{
                System.out.println(""no available Course"");
            }`
</code></pre>

<p><strong>(You have to cover up the other cases following the same logic)</strong></p>
"
"17389693","<p>In your while loop, the argument invalidDay is never updated. You could create a method for invalid day. Here:</p>

<pre><code>public boolean invalidDay(int day) {
    return (isLeapYear &amp;&amp; month == 2 &amp;&amp; (day &lt; 1 || day &gt; 29)) ||
                (!isLeapYear &amp;&amp; month == 2 &amp;&amp; (day &lt; 1 || day &gt; 28)) ||
                ((month == 4 || month == 6 || month == 9 || month == 11) &amp;&amp; (day &lt; 1 || day &gt; 30)) ||
                ((month == 1 || month == 3 || month == 5 || month == 7 || month == 8 ||
                month == 10 || month ==12) &amp;&amp; (day &lt; 1 || day &gt; 30));
}
</code></pre>

<p>And now, in your while loop, use:</p>

<pre><code>while(invalidDay(n));
</code></pre>

<p>Where n is the day.</p>
"
"17368146","<p>Everyone else has fixed your loop.</p>

<p>To answer the question in the title, the easiest way to break out of a complex loop is to put the complex loop in a method, and use the return statement.</p>

<p>Using your code as an example,</p>

<pre><code>public void someMethod(List&lt;Object&gt; a) {
    for (int j = 0; j &lt; a.size(); j++) {
        if (a.get(j).equals(10)) {
            System.out.println(a.get(j));
        } else {
            do {
                System.out.println(a.get(j));
            } while (a.get(j).equals(20));
            return;
        }
    }
}
</code></pre>
"
"27118385","<p>You only init an array , but you have not constructed the member in State[] array.<br>
You need to call constructor to construct the State class before you use it.
Try to change your code like this:</p>

<pre><code>public State[] neighborStates(String config, int modeFlag){
    State[] neighborStates=new State[7];
    int i=0;
    for (Operation o : Operation.values()){
        neighborStates[i] = new State(move(config,o.name().charAt(0)),
                                      someRealCost, //what's the value of this parameter?
                                      getHeuristicCost(config, modeFlag),
                                      modeFlag
                                      );
        ....
        i++;
    }
}
</code></pre>
"
"27779893","<p>You should use <code>fos.write((i+""\t""+(i*i)).getBytes());</code></p>
"
"17404922","<p>I do not understand that why you create object of your class because they are not importand here and don't play any role in your question .</p>

<p>i wan to clear it for you with an example . consider that <code>MyClass</code> as <code>Car</code> class and consider <code>MyClass2</code> as <code>bus</code> class (consider you are programming for a car company!!) and also consider that <code>public static void myMethod()</code> as <code>NumberOfProduced</code> now if you want to understand the number of car that the company produced you should use <code>Car.NumberOfProduced()</code> (also with additional code in it .) but if you want to understand the number of bus production you use <code>Bus.NumberOfProduced()</code>. and i again mention that object don't have any effect on the result (except if you want to count number of created object.)
i hope it be useful for you .</p>
"
"17584623","<p>It seems you are using old quick-json parser version. Use the latest version for parsing</p>

<p>quick-json-1.0.2.3.jar</p>

<p>I could see that the json is coming as follows,</p>

<pre><code>// [
{
""id"": ""99624""
,""t"" : ""CSCO""
,""e"" : ""NASDAQ""
,""l"" : ""25.41""
,""l_cur"" : ""25.41""
,""s"": ""2""
,""ltt"":""3:59PM EDT""
,""lt"" : ""Jul 10, 3:59PM EDT""
,""c"" : ""+0.25""
,""cp"" : ""1.01""
,""ccol"" : ""chg""
,""el"": ""25.55""
,""el_cur"": ""25.55""
,""elt"" : ""Jul 10, 7:07PM EDT""
,""ec"" : ""+0.14""
,""ecp"" : ""0.55""
,""eccol"" : ""chg""
,""div"" : ""0.17""
,""yld"" : ""2.68""
}
]
</code></pre>

<p>This is not valid JSON,  it should not be preceded by <code>//</code></p>

<pre><code>// [
</code></pre>

<p>remove <code>//</code> and just use from <code>[</code> till end of the json string</p>

<p>i was able to parse successfully the below json string without <code>//</code></p>

<pre><code>[
{
""id"": ""99624""
,""t"" : ""CSCO""
,""e"" : ""NASDAQ""
,""l"" : ""25.41""
,""l_cur"" : ""25.41""
,""s"": ""2""
,""ltt"":""3:59PM EDT""
,""lt"" : ""Jul 10, 3:59PM EDT""
,""c"" : ""+0.25""
,""cp"" : ""1.01""
,""ccol"" : ""chg""
,""el"": ""25.55""
,""el_cur"": ""25.55""
,""elt"" : ""Jul 10, 7:07PM EDT""
,""ec"" : ""+0.14""
,""ecp"" : ""0.55""
,""eccol"" : ""chg""
,""div"" : ""0.17""
,""yld"" : ""2.68""
}
]
</code></pre>

<p>Below is the output i've got with version <strong>quick-json-1.0.2.3.jar</strong></p>

<pre><code>{root=[{e=NASDAQ, c=+0.25, div=0.17, l=25.41, lt=Jul 10, 3:59PM EDT, ec=+0.14, ltt=3:59PM EDT, elt=Jul 10, 7:07PM EDT, id=99624, yld=2.68, el_cur=25.55, t=CSCO, cp=1.01, s=2, el=25.55, l_cur=25.41, eccol=chg, ccol=chg, ecp=0.55}]}
</code></pre>
"
"17615013","<p>I changed the</p>

<pre><code>$.ajax({
""dataType"": 'json',
</code></pre>

<p>to 
      $.ajax({
     ""dataType"": 'text',</p>

<p>now it is working..</p>

<p>Thanks.. </p>
"
"27122238","<p>If you want to simply wait for few seconds, (just to enable users to understand what is happening) then it can be easily achieved by halting the java thread. </p>

<p>There are so many ways of adding a forced wait. </p>

<p>This is by using simple java (nothing to do with Selenium)</p>

<pre><code>Thread.sleep(&lt;&lt;timeInMilliSeconds&gt;&gt;);
</code></pre>

<p>Hope this works for you. </p>
"
"27020050","<p>You can try this</p>

<pre><code> public static void main(String[] args){
     SimpleDateFormat sdf = new SimpleDateFormat(""dd/MM/yyyy"");
     Date now = new Date();
     long dayInMillis = 1000*60*60*24;
     long nowInMillis = System.currentTimeMillis();
     for(long tmp = dayInMillis;tmp&lt;=dayInMillis*60;tmp +=dayInMillis){
        now.setTime(nowInMillis+tmp);
        System.out.println("" date: ""+sdf.format(now));
     }
 }
</code></pre>
"
"27130825","<pre><code>public class MyClass {

    public static void main(String[] args) {
        int number = 1;
        showSomething(number
    }

    public void showSomething(int number){
        System.out.println(""This is my method ""+number+"" created by me."");
    }
}
</code></pre>
"
"27030373","<p>How about</p>

<pre><code>int num = Integer.parseInt(localizacao);
return (num/100 &lt;= 1) &amp;&amp; (num%100/10 &lt;= 4) &amp;&amp; (num%10 &lt;= 3);
</code></pre>

<p>You can use <code>TryParse</code> instead of <code>parseInt</code> if you want to handle the exception.</p>
"
"17411620","<p>I don't have any fundamental changes, but I think that code could be simplified a bit:</p>

<pre><code>ArrayList&lt;Something&gt; local = new ArrayList&lt;Something&gt;(256);

for (int spin=0; spin&lt;10; ++spin)
{
  try {
    local.addAll(data_list);
    break;
  }
  catch (java.util.ConcurrentModificationException ce) {}
}
</code></pre>
"
"17434799","<pre><code>if(myString.substring(7,8).equals(""/"")) 
</code></pre>

<p>or </p>

<pre><code>if(myString.charAt(7)=='/')
</code></pre>

<p>or </p>

<pre><code>if(myString.indexOf(""/""))==7)  can be use
</code></pre>
"
"27174654","<p>Class names should start with a capital letter in Java: <code>walkthrough</code> -> <code>Walkthrough</code></p>
"
"27127397","<p>Use a getter method. </p>

<pre><code>  public class help  {
        public static final String bar = ""blah"";            
        public String getBar(){
              return this.bar;
        }         
    }
</code></pre>

<p>And then use it on your code.</p>

<pre><code>import secondFile.help;

public class TicketAdminTestSuite extends something {
       Help help = new Help();
       void printStuff(){
            System.out.println(help.getBar());
       }    
}
</code></pre>
"
"27195671","<p>You could use a try-catch block inside the while loop, and if you catch an exception just keep going to the next iteration. It is not the best solution but for you case it should work.</p>

<pre><code>String line;
BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
try {
    while((line = read.readLine()) != null) {
        try {
            n = Integer.parseInt(line);
            //other stuff with n
        } catch (NumberFormatException e) {
              continue; // do nothing, and move on to the next line
        }
    }
}
 catch (IOException e) {} 
</code></pre>
"
"27898281","<p>This is 2015. <a href=""http://java7fs.wikia.com/wiki/Using_the_java.nio.file_API"" rel=""nofollow"">Use <code>java.nio.file</code></a>!</p>

<pre><code>final Path srcFile = Paths.get(""Book_data.txt"").toAbsolutePath();
final Path dstFile = srcFile.resolveSibling(""Book_data_copy.txt"");

try (
    final BufferedReader reader = Files.newBufferedReader(srcFile, StandardCharsets.UTF_8);
    final BufferedWriter writer = Files.newBufferedWriter(dstFile, StandardCharsets.UTF_8,
        StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING);
    final PrintWriter pw = new PrintWriter(writer);
) {
    // work with reader and pw
}

if (flag1 == 1)
    Files.move(dstFile, srcFile, StandardCopyOption.REPLACE_EXISTING,
        StandardCopyOption.ATOMIC_MOVE);
</code></pre>

<p>If you did that from the start, not only would your resources have been closed safely (your code doesn't do that) but you would have gotten a meaningful exception as well (you are trying to rename twice; you would have had a <code>NoSuchFileException</code> on the second rename).</p>

<p><a href=""http://java7fs.wikia.com/wiki/Why_File_sucks"" rel=""nofollow"">Relying on <code>File</code> is an error</a>, and it has always been.</p>
"
"27169497","<pre><code>    String [] str = new String[]{""1some"", ""2some"", ""20some"", ""21some"", ""3some"", ""some""};
    List&lt;String&gt; list = Arrays.asList(str);

    Collections.sort(list, String.CASE_INSENSITIVE_ORDER);
    System.out.println(list);
</code></pre>
"
"17540980","<pre><code>    ClassLoader cl = ClassLoader.getSystemClassLoader();

    URL[] urls = ((URLClassLoader)cl).getURLs();

    for(URL url: urls){
        System.out.println(url.getFile());
    }
</code></pre>
"
"17541075","<p>Strings are always <code>immutabble</code>. So you should store this classpath in one variable.
 Just store classpath in one string variable like:</p>

<pre><code> String classpath = System.getProperty(""java.class.path"");
 System.out.println(classpath);
</code></pre>
"
"27908294","<p>The Oracle documentation about Enum says (first line):</p>

<blockquote>
  <p>An enum type is a special data type that enables for a variable to be a set of predefined constants. <em>The variable must be equal to one of the values that have been predefined</em> for it. Common examples include compass directions (values of NORTH, SOUTH, EAST, and WEST) and the days of the week.</p>
</blockquote>

<p>If this is true then, yes, your <code>enum1.name() == enum2.name()</code> is guaranteed to be true if the names are the same.</p>

<p>Also, in the method <code>name()</code> javadoc:</p>

<blockquote>
  <p>public final String name() 
   
  Returns the name of this enum constant, exactly as declared in its enum declaration. Most programmers should use the toString() method in preference to this one, as the toString method may return a more user-friendly name. This method is designed primarily for use in specialized situations where correctness depends on getting the exact name, which <em>will not vary</em> from release to release.
   
   
     Returns: the name of this enum constant</p>
</blockquote>

<p>For example, if you had two enums, <code>Days</code> and <code>MyDays</code>, where SUNDAY is a common value, == between the enum object values, SUNDAY will return true as you are comparing two strings - see the working example in <a href=""http://ideone.com/U1Bmcw"" rel=""nofollow"">http://ideone.com/U1Bmcw</a>.</p>

<pre><code>/* Name of the class has to be ""Main"" only if the class is public. */
class Ideone
{
    public static enum Day{SUNDAY, MONDAY, TUESDAY};
    public static enum MyDays{SUNDAY};

    public static void main (String[] args) throws java.lang.Exception
    {
        MyDays m = Ideone.MyDays.SUNDAY;
        Day d = Ideone.Day.SUNDAY;

        System.out.println(d.name() == m.name());
    }
}
</code></pre>
"
"27270068","<p>Add an attribute in the file thread and a public getter for it. When that thread finishes, change isFinished's value to true;</p>

<pre><code>private boolean finished = false;
public isFinished(){...}
</code></pre>

<p>In your main thread, just sleep it and resume it to check if file thread has finished:</p>

<pre><code>public static void main(String[] args) throws IOException {
    ...
    fileThread.start();
    ...
    while(!fileThread.isFinished()){
        try{
            Thread.sleep(1000);//1 second or whatever you want
        }catch(Exception e){}
    }
    //Do something
    ....
}
</code></pre>
"
"17736624","<p>As Rafael Osipov said in the comments, you definitely <em>can</em> access <code>mSomeVar</code>, an instance variable of the enclosing class, from the anonymous class. So your question doesn't make sense.</p>
"
"27275367","<p>Try this:</p>

<pre><code>inputString = inputString.replaceAll(""\t"", ""    "")
</code></pre>
"
"17547868","<p>Use the event beforeunload with jquery on your page.</p>

<p>The beforeunload event fires whenever the user leaves your page for any reason.</p>

<p>For example, it will be fired if the user submits a form, clicks a link, closes the window (or tab), or goes to a new page using the address bar, search box, or a bookmark.</p>

<p>You could exclude form submissions and hyperlinks (except from other frames) with the following code:</p>

<pre><code>var inFormOrLink = false;
        $(document).on('click','a', function() { inFormOrLink = true; });
        $(document).bind('submit','form', function() { inFormOrLink = true; });

        $(window).on('beforeunload',document, function(eventObject) {
            var returnValue = undefined;
            if (inFormOrLink == false) {
                //do your action

            }

        }); 
</code></pre>

<p><strong>EDIT:</strong> Answer found here: <a href=""http://stackoverflow.com/questions/1631959/browser-window-close-event#1632004"">Browser window close event</a></p>
"
"27276045","<p>You can use the replaceFirst(String regex, String replacement) function of the string class.</p>

<p>Look at
<a href=""http://javarevisited.blogspot.fr/2011/12/java-string-replace-example-tutorial.html"" rel=""nofollow"">http://javarevisited.blogspot.fr/2011/12/java-string-replace-example-tutorial.html</a></p>

<p>So in first argument you have to use a regex for finding digit such as :</p>

<ul>
<li>""[0-9]"" will find a single digit </li>
<li><p>""[0-9]+"" will find one or more digit</p>

<pre><code>String testString = ""-SD12431;ABC333"";
ArrayList&lt;String&gt; remplaceBy= new ArrayList&lt;String&gt;();
remplaceBy.add(""first"");
remplaceBy.add(""second"");
remplaceBy.add(""third"");

String newString = testString;
String oldString ="""";
int i =0;
while(!newString.equals(oldString))
{
oldString = new String(newString);
newString = newString.replaceFirst(""[0-9]+"",remplaceBy.get(i));
i++;
System.out.println(""N1:""+newString);
System.out.println(""O1:""+oldString); 
}
System.out.println(""New String""+newString);
</code></pre></li>
</ul>
"
"17768414","<pre><code>Robot robot = new Robot();

BufferedImage screenShot = robot.createScreenCapture( guiObject.getBounds() );

ImageIO.write(screenShot, ""JPG"", new File(""myScreenShot.jpg""));
</code></pre>

<p>Where guiObject is the component you want and getBounds() returns a Rectangle.</p>

<p>EDIT: </p>

<p>getBounds() must return the on screen coords.  Or you do a little math to make it so.</p>
"
"17802409","<p>This should work if there are only words in your list, beginning with a lower case.</p>

<pre><code>public static Map&lt;String, List&lt;String&gt;&gt; arrayToList(String[] words) {
        Map&lt;String, List&lt;String&gt;&gt; map = new HashMap&lt;String, List&lt;String&gt;&gt;();
        for (int n = 97; n &lt;= 122; n++) {
            ArrayList&lt;String&gt; wordList = new ArrayList&lt;String&gt;();
            for (int i = 0; i &lt; words.length; i++) {
                if (words[i].charAt(0) == n) {
                    wordList.add(words[i]);
                    map.put("""" + words[i].charAt(0), wordList);
                }
            }
        }
        return map;
    }
</code></pre>
"
"27965756","<p>This is a shorter way to do what you want:</p>

<pre><code>private static final char[] COLORS = {'A', 'B', 'C', 'D', 'E', 'F'};


public static void main(String args[]) throws IOException {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

    String input;
    boolean inputOk;

    do {
        inputOk = true;

        // read the input
        System.out.print(""Enter your guess: "");
        input = br.readLine().toUpperCase();

        // do the check
        for (int i = 0; i &lt; input.length() &amp;&amp; inputOk; i++) {
            for (int j = 0; j &lt; COLORS.length; j++) {
                if (input.charAt(i) == COLORS[j])
                    break;
                if (j == COLORS.length - 1)
                    inputOk = false;
            }
        }

        // input isn't ok
        if (!inputOk)
            System.out.println(""Found incorrect input! Please only use 'A', 'B', 'C', 'D', 'E', or 'F'."");
    } while (!inputOk);
}
</code></pre>
"
"27277973","<pre><code>private boolean isLargest(int a, ArrayList&lt;Integer&gt; list)
{
   ArrayList&lt;Integer&gt; sortedList = Collections.sort(list);
   if(a &gt; sortedList.get(0))
      return true;
   return false;
}
</code></pre>

<p>It is not efficient, but this approach leaves the ordering in the original list in-tact.</p>
"
"17527626","<p>Think about it this way:
if you remove below from your code, do you think your class is of any use:</p>

<pre><code>public double add1(double n)
    {
        return number = number +  n;
    }
</code></pre>

<p>As you are doing calculation, but the result of the calculation is never known to the caller of the API:<code>public void add(double n)</code></p>
"
"27290020","<p>Look at your imports. check if this line exists:</p>

<pre><code>import android.R;
</code></pre>

<p>If present, remove it, so that your project will resolve R not with the default Android Resources class, and import R with your package name</p>
"
"27280554","<p>Example given by Jase Pellerin is a good example of dead lock but it has one mistake (Sorry Jase Pellerin , i am sure you did it unintetionally) . Here, both methods are trying to get hold of <code>Lock1</code> first and then <code>Lock2</code>. I think it should be other way around.</p>

<pre><code>Thread1{

synchronized (Lock1) {

synchronized (Lock2) {}

}
}

Thread2{

 synchronized (Lock2) {

 synchronized (Lock1) {}

 }
 }
</code></pre>
"
"28002043","<pre><code>    Scanner scan = new Scanner(System.in);
    try {
         float yourNumber = Float.parseFloat(scan.next()); 
    }
    catch (NumberFormatException e){
         System.out.println (""not a float"");
    }
</code></pre>
"
"27296207","<p>Since <code>Manager</code> inherits from <code>Employee</code>, it has all the members as well. So, <code>Manager</code> has an <code>emp</code> member. The <code>emp</code> member is initialized with a new <code>Employee</code>,  which itself has an <code>emp</code> member. So recursion starts, finally resulting in a StackOverflowError.</p>

<p>Inheritance is a key concept of object oriented programming. Classes describe objects. Subclasses have all properties, methods, fields etc. that the base class also has. </p>
"
"27304605","<pre><code>public static final int findSmallestDistance(final int[] pArray) {
    int lMinimumDistance = Integer.MAX_VALUE;
    for(int i = 1; i &lt; pArray.length; i++) {
        int lDifference = pArray[i] - pArray[i - 1];
        if(lDifference &lt; lMinimumDistance) {
            lMinimumDistance = lDifference;
        }
    }
    return lMinimumDistance;
}
</code></pre>
"
"17839635","<p>Why not get rid of SingletonHolder use factory pattern. You will have to decide what to do, when try to call getInstance twice, but with different 'stuff'.</p>

<pre><code>public class Singleton {

    private static Singleton singleton
    private final Object stuff;

    private Singleton(Object stuff) {
        this.stuff = stuff;
    }

    public static synchronized Singleton getInstance(Object stuff) {
         if (singleton == null) {
             singleton = new Singleton(stuff);
             return singleton;
         }

         return singleton; // or throw error because trying to re-init
   }
}
</code></pre>
"
"17819873","<p>What you are doing wrong is that you are creating the <code>ArrayList</code> with a capacity of 5, but it does not yet have 5 objects in it. Thus, the <code>addText</code> method does nothing. Here's a version that works:</p>

<pre><code>public void addText(){
    for(int i = 0; i &lt; 4; i++){
        string.add(new Text()); 
    }
}
</code></pre>

<p>Note that <code>string.size() - 1</code> has been changed to <code>4</code>, becuase <code>string.size()</code> is 0, and you want to add 4 elements to the list. Also, your <code>iterate</code> method could use a little refactoring:</p>

<pre><code>public void iterate(){
    for(Text text : string){
        string.get(i).printA();
    }
}
</code></pre>

<p>Instead of a simple loop, an enhanced <code>for</code> is used instead. This is no more than a typing shortcut, but it improves efficiency for <code>LinkedList</code>s.</p>
"
"28007688","<p>I ended up just applying the necessary edits to the copy of <code>bodies</code> passed into each body, and it worked fine. (though I am unsure if this is proper/safe)  </p>
"
"17601409","<p>You can also use <code>@SuppressWarnings</code> <strong>annotations</strong> to be more selective about which warnings you want to suppress.</p>
"
"17832397","<pre><code>TextView tv =(TextView)findViewById(R.id.id of textview in xml);

 tv.setPadding(15, 0, 0, 0);
//tv.setPadding(left, top, right, bottom);
 tv.setText( ""Work"");
 tv.setTextSize(17);
 tv.setTextColor(Color.parseColor(""#000000""));
</code></pre>

<p>You can do this in java code.</p>
"
"27319479","<p>I wonder if you are not trying to reinvent the wheel. <strong>Some database management systems offer services/features that are designed for this kind of tasks.</strong></p>

<p>E.g. <a href=""https://docs.oracle.com/cd/B10501_01/text.920/a96517/cdefault.htm"" rel=""nofollow"">Oracle Text</a> </p>

<p><strong>EDIT:</strong></p>

<p><strong>Hold on!</strong> You are going to compare the titles of songs and you are <em>NOT</em> using a database? That's interesting. Why didn't you add it in your original question. Because over 90% of industrial applications use some kind of database. And it really does not matter which branch you are in: manufacturing, medical, distribution, entertainment, financial, ...</p>

<p>And even if you don't use a database yet, you should consider using one. These days there are all kind of dbms. They come in all flavors: relational, object oriented ; binary or xml ; embedded or stand-alone ; multifile or singlefile. To be honest, if you don't use a database it's hard to take you serious.</p>

<p>But <strong>if</strong> you are using an Oracle database to store your songs. Then <code>Oracle Text</code> is the best answer to solve your problem.</p>

<p>And if you use a database, then it makes perfect sense to let the dbms perform the calculations for you. This will almost always be faster than extracting the data first.</p>

<p><strong>Why Oracle Text (for example) is superior to self-implemented algorithms:</strong> Oracle has a notion of ""themes"", for example it knows that the word ""politics"" is related to ""elections"". To do this it uses a knowledge base. <strong>(Just read the documentation, and you will be surprised)</strong>. You would spend years to develop it from scratch.</p>
"
"27319883","<p>A potential work around is to have an index of the smallest one. Off the top of my head untested it would be</p>

<pre><code>int smallest = 0;

for(int i = 0; i &lt; uInput.size(); i++) {
    if (uInput.get(i) &lt; smallest) {
        smallest = uInput.get(i);
    }
}
</code></pre>

<p>This method also works well if you need to find the largest number as you just reverse the logic.</p>

<p>edit: Didn't even realize sorry. Setting the smallest to start as 0 will only work if you are finding the largest number, my mistake. The better solution is to do what mureinik elsewhere in this thread and set</p>

<pre><code>int smallest = uInput.get(0);
</code></pre>
"
"17851071","<p>So what you want is listing the files/subdirectories within a directory?
You can use:</p>

<pre><code>File dir = new File(""c:/java/newfolder/"");
File[] files = dir.listFiles();
</code></pre>

<p>listFiles() gives you the Files in a directory or null it it's not a directory.</p>

<p>Then you can do:</p>

<pre><code>for (File file: files){
     if (file.listFiles != null){
          //It's a subdirectory
          File [] subdirFiles = file.listfiles;
     }
}
</code></pre>
"
"17852359","<p>I'm not familiar with the <code>Path</code> API, so take the following with a grain of salt.</p>

<p>You're registering one directory for monitoring, and will receive notifications whenever one of its direct descendants is modified / created / deleted.</p>

<p>The first thing you need to do is register all of its subdirectories for watching:</p>

<pre><code>// Used to filter out non-directory files.
// This might need to filter '.' and '..' out, not sure whether they're returned.
public class DirectoryFilter implements FileFilter {
    public boolean accept(File file) {
        return file.isDirectory();
    }
}


// Add this at the end of your testForDirectoryChange method
for(File dir: myDir.toFile().listFiles(new DirectoryFilter())) {
    testForDirectoryChange(dir.toPath());
}
</code></pre>

<p>This will recursively explore your file structure and register every directory for watching.
Note that if your directory tree is too deep, recursion might not be an acceptable solution and you might need to 'iterify' it.</p>

<p>The second thing you need to do is, whenever you receive a directory creation event, not forget to register the new directory for monitoring.</p>

<p>That's how I'd do it anyway, but not having a valid Java 1.7 installation at hand, I can't test it. Do let me know if it works!</p>
"
"28074004","<p>your call to ""add(Element)"" returns true on success or false on failure.  It's a boolean function.  Instead, use:</p>

<pre><code>addToMe(new ArrayList&lt;String&gt;(new String[]{""Test Element""}));
</code></pre>
"
"28074027","<p>You are passing a <code>boolean</code> into your function, because that is what <code>List.add()</code> returns. You can see the Java documentation for <code>List.add()</code> here:</p>

<p><a href=""http://docs.oracle.com/javase/7/docs/api/java/util/List.html#add(E)"" rel=""nofollow"">http://docs.oracle.com/javase/7/docs/api/java/util/List.html#add(E)</a></p>
"
"17857435","<p>You could use the getter-method of your superclass to get the source property
i.e.</p>

<pre><code>super.firePropertyChange(new JoyStickPropertyChangeEvent(super.getSource, propertyName, oldValue, newValue); 
</code></pre>

<p>This should do the trick. As explanation you have to call the firePropertyChange method of the super class explicit. This is done with the keyword super.</p>

<p>Hope this helps</p>

<p>Cheers</p>
"
"27397055","<pre><code>String s = ""DSD SDFS PNL  02   E"";
s = s.replaceAll(""PNL\\s*02\\s*E"", ""PNL02E"");
System.out.println(s);
</code></pre>
"
"28095004","<p>Something like this is little bit efficient :</p>

<pre><code>private int totalTax(ArrayList&lt;Shop&gt; list1, ArrayList&lt;House&gt; list2) {

 int total = 0;
 int miSize = Math.min(list1.size(), list2.size());

 for (int a = 0; a &lt; minSize; a++)
    total += list1.get(a).shopTax() + list2.get(a).houseTax();


 if(list1.size() &gt; minSize)
    for (int a = minSize; a &lt; list1.size(); a++)
        total += list1.get(a).shopTax();
 else
    for (int a = minSize; a &lt; list2.size(); a++)
        total += list2.get(a).shopTax();


 return total;
}
</code></pre>
"
"27348404","<p>The default way to insert in a linkedList:</p>

<pre><code>LinkedList&lt;Integer&gt; myList = new LinkedList&lt;&gt;();

myList.add(238);
myList.add(7);
..        
Collections.sort(myList);
</code></pre>

<p><a href=""http://docs.oracle.com/javase/7/docs/api/java/util/LinkedList.html"" rel=""nofollow"">http://docs.oracle.com/javase/7/docs/api/java/util/LinkedList.html</a></p>

<p>for a different way to sort use the interface Comparable</p>
"
"27411765","<p>Maps don't work like this.</p>

<p>In a map, every value has a unique key. You can use the key to look up the value.</p>

<p>You use the keys ""username"" and ""userpassword"" for every value you add. This means there can only be 1 username and 1 password in your map.</p>

<p>You should associate the username with the password in your Map, like this:</p>

<pre><code>usersMap.put(registerUser.getText(), registerPassword.getPassword());
</code></pre>

<p>And when you want to test if login credentials are valid, you use</p>

<pre><code>String pass = usersMap.get(loginUser.getText());
if(pass == loginPassword.getPassword()) {
    // login code here
}
</code></pre>
"
"17707672","<p>I know in PHP you'd be able to run the explode() (<a href=""http://www.php.net/manual/en/function.explode.php"" rel=""nofollow"">http://www.php.net/manual/en/function.explode.php</a>) function. You'd choose which character you want to explode at. For instance, you could explode at ""http://""</p>

<p>So running the code via PHP would look like:</p>

<pre><code>$string  = ""Some text, bla-bla http://www.easypolls.net/poll.html?p=51e5a300e4b084575d8568bb#.UeWjBcCzaaA.twitter"";
$pieces = explode(""http://"", $string);
echo $pieces[0]; // Would print ""Some text, bla-bla""
echo $pieces[1]; // Would print ""www.easypolls.net/poll.html?p=51e5a300e4b084575d8568bb#.UeWjBcCzaaA.twitter""
</code></pre>
"
"17941793","<p>You should use <code>setTextColor(Color.any color);</code></p>

<pre><code>TextView txt = (TextView) view.findViewById(R.id.text1);
txt.setTextColor(Color.yellow);
</code></pre>
"
"28163725","<p>Try</p>

<pre><code>Test[] t = new Test[20];
</code></pre>

<p>When you set t to null it tries to access an array that isn't there.</p>
"
"28163749","<p>In java, datatypes can be primitive or reference. Reference types are either Class or Interface type or Array type.
When you want to create an Array of objects, first you need to declare and instantiate the array Object itself and then instantiate the required objects of the class and assign them to the array object.</p>

<pre><code> ArrayDataType[] ArrayName=new ArrayDataType[Dimensions];
    for(int i=0;i&lt;Dimensions;i++){
    Arrayname[i]=new ObjectDataType();  
    \\ where the ObjectDatatype can be either ArrayDataType or SubType
    }
</code></pre>
"
"27393566","<pre><code>    String str1=new String(""nitesh"");
    String str2=new String(""nitesh"");
    String str3=""nitesh"";
    String str4=str3;
    String str5=str2;

    System.out.println(str1.hashCode());
    System.out.println(str2.hashCode());
    System.out.println(str3.hashCode());
    System.out.println(str4.hashCode());
    System.out.println(str5.hashCode());

 if (str1 == str2)
        System.out.println(""str1 == str2"");

    if (str2== str3)
        System.out.println(""str2 == str3"");

    if (str3== str4)
        System.out.println(""str3 == str4"");

    if (str4== str5)
        System.out.println(""str4 == str5"");
</code></pre>

<p>== test suggest that the str3 == str4, so 3 objects should be created that is for str1, str 2 and str3</p>
"
"27393675","<p>Actually 2 objects. <code>str1</code> and  <code>str2</code> hold object references. While <code>str3</code>, <code>str4</code> and <code>str5</code> do not hold string objects but are string literals.  </p>

<p>In your example,<code>str1</code> and <code>str2</code> point to different objects in the <code>Java String Pool</code>.  These strings, if mutated, will still point to same memory locations where they pointed before getting mutated.<br>
Though these string object cannot be mutated directly by using the <code>=</code> operator, as strings in java are <b>immutable</b>, but stringbuffer objects can be made using the string object and then that string buffer object can be mutated with the help of methods in <code>java.lang.StringBuffer</code> class.  </p>

<p>But if <code>str3</code>, <code>str4</code> and/or <code>str5</code> are mutated, ie. if you do this somewhere later in the code:   </p>

<pre><code>str3=""narendra modi"";
</code></pre>

<p>A new memory location will be reserved in the <code>java heap</code> and not the <code>java string pool</code>, with the string ""narendra modi"" stored in it and <code>str3</code> will point to it. While <code>str4</code> and <code>str5</code> will still be pointing to location where the string ""nitesh"" is stored.  </p>

<p>Citation added: string buffers CAN be mutated...</p>

<p><a href=""https://icl.googleusercontent.com/?lite_url=https://docs.oracle.com/javase/7/docs/api/java/lang/StringBuffer.html&amp;ei=25w3utEc&amp;lc=en-IN"" rel=""nofollow"">https://icl.googleusercontent.com/?lite_url=https://docs.oracle.com/javase/7/docs/api/java/lang/StringBuffer.html&amp;ei=25w3utEc&amp;lc=en-IN</a></p>
"
"28168280","<p>First you should import the other java file:</p>

<pre><code>import PackagesAndMethods.MyMethods;
</code></pre>

<p>in your <code>TestMethod.java</code> file below package declaration so that compiler can find it.</p>

<p>Second (or first it depends) are you sure that the package declaration is correct and consistent with your folder system. In your case this simply means is your project root folder the same as the parent folder of <code>PackagesAndMethods</code>?</p>
"
"17671040","<p>If you want to get the selected language of your device. This might help u</p>

<p><code>Locale.getDefault().getDisplayLanguage();</code></p>

<p>You might also do:</p>

<p><code>Locale.getDefault().toString()</code> which gives a string that fully identifies the locale, e.g. ""en_US"".  </p>
"
"28168291","<p>variable MyMethods is not declared, you should create an instance of class MyMethods as <code>MyMethods myMethods = new MyMethods();</code> and use <code>myMethods.Total();</code>
(remember, instances should be lower case, classes uppercase, methods lowercase</p>
"
"28179434","<p>So I combined both your comments and got it to work correctly. Here is the code that works.</p>

<pre><code>public class Main {

public static void main(String[] args) {

    JFrame frame = new JFrame(""Pong"");
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.setLayout(new GridLayout(1,2));
    Insets inset = frame.getInsets();


    Test test2 = new Test(200-(inset.right + inset.left), 200 -(inset.top + inset.bottom), 200, 50);
    frame.setContentPane(test2);
    frame.pack();

    frame.setVisible(true);

}
}

public class Test extends JPanel implements ActionListener, MouseListener{

int y = 0, width, height, dy=0, maxHeight;
int BOTTOM;
Timer timer;
Dimension size;
Insets inset;

public Test(int width, int height, int BOTTOM, int SPEED){
    size = new Dimension(width, height);
    setBackground(Color.BLUE);
    setPreferredSize(size);
    inset = this.getInsets();
    this.width = width-(inset.right+inset.left);
    maxHeight = height;
    this.BOTTOM = BOTTOM - (inset.bottom+inset.top);

    addMouseListener(this);

    timer = new Timer(1000/SPEED, this);
    timer.start();

   }
public void move(){

    if(y&gt;=maxHeight){
        dy = -1;
    }
    if(y&lt;=0)
    {
        dy = 1;
    }
    y+=dy;
    height+=dy;
    //System.out.println(y);
    repaint();

}

public void paintComponent(Graphics g){

    super.paintComponent(g);
    if(y&lt;=maxHeight/2) {
        g.setColor(Color.green);
        g.fillRect(0, BOTTOM - y, width, height);
    }
    if(y&gt;=maxHeight/2 &amp;&amp; y&lt;(maxHeight/10)*9){
        g.setColor(Color.green);
        g.fillRect(0, BOTTOM - (maxHeight / 2), width, maxHeight / 2);
        g.setColor(Color.green);
        g.fillRect(0, BOTTOM - y, width, height-(maxHeight/2));
    }
    if(y&gt;=(maxHeight/10)*9){
        g.setColor(Color.green);
        g.fillRect(0, BOTTOM-(maxHeight/2), width, maxHeight/2);
        g.setColor(Color.green);
        g.fillRect(0, BOTTOM-(9*(maxHeight/10)), width, (4*maxHeight)/10);
        g.setColor(Color.green);
        g.fillRect(0, BOTTOM - y, width, height-(9*(maxHeight)/10));
    }

    g.setColor(Color.white);
        for(int i = 1; i&lt;6; i++)
            g.fillRect(0, BOTTOM - (i*(maxHeight/5)), width, 5);

    }
</code></pre>
"
"17699788","<p>As others have said, SHA-1 is not an encryption algorithm, it's a hashing algorithm. You can calculate the SHA-1 hash of a byte array like this:</p>

<pre><code>MessageDigest md = MessageDigest.getInstance(""SHA-1"");
byte[] output = md.digest(input);
</code></pre>

<p><code>output</code> will be the raw bytes of the SHA-1 hash. You'll need to convert it to HEX or Base64 if you need it to be human readable.</p>

<p>If what you really want is to encrypt (and then decrypt) something, please clarify what encryption algorithm you want.</p>
"
"28191493","<p>In the below scenario what I did is...(dropdwon is in the table)</p>

<ol>
<li>clicked the cell</li>
<li>get all cell values from the table(probably the list will be configured as table or list .. here it is table)</li>
<li>traverse through all the cells.</li>
<li><p>click on the required value based on the cell value.</p>

<pre><code>driver.findElement(By.id(""ms__id3"")).click();
WebElement table = driver.findElement(By.className(""combo-list-table""));
allRows = table.findElements(By.tagName(""tr""));
for (WebElement row : allRows) 
{
cells = row.findElements(By.tagName(""td""));
for (WebElement cell : cells) 
{   
if(cell.getAttribute(""text"").equalsIgnoreCase(""Business""))
{
cell.click();
}
}
}
</code></pre></li>
</ol>

<p>Hope this will help...:)</p>
"
"18016567","<p>You need to include the <code>NestedClassTest$Y</code> class in the classpath.</p>
"
"27523683","<p>Because you are always adding elements at 1,1 and adding same tab 5 times. Instead i think you need:</p>

<pre><code>for(int i=0;i&lt;5;i++){           
    if(i==0) tab[i][i] = Color.white;
    if(i==1) tab[i][i] = Color.blue;
    if(i==2) tab[i][i] = Color.black;
    if(i==3) tab[i][i] = Color.red;
    if(i==4) tab[i][i] = Color.cyan;
    System.out.println(i+"" add ""+tab[i][i]);
}
list.add(tab);  //add just once
</code></pre>

<p>And print like:</p>

<pre><code>for(int i=0;i&lt;5;i++)
    System.out.println(i+"". read ""+list.get(0)[i][i]);//using dynamic index
</code></pre>
"
"28218388","<pre><code>public class Athletes {

private String name;
private String grade;

public Athletes(String name, String grade) {
    this.name = name;
    this.grade = grade;
}

public String getName() {
    return name;
}

public void setName(String name) {
    this.name = name;
}

public String getGrade() {
    return grade;
}

public void setGrade(String grade) {
    this.grade = grade;
}

@Override
public String toString() {
    return ""Athletes [name="" + name + "", grade="" + grade + ""]"";
}

public static void main(String[] args) {
    List&lt;Athletes&gt; lijst = new ArrayList&lt;Athletes&gt;();
    lijst.add(new Athletes(""bbb"", ""Grade1""));
    lijst.add(new Athletes(""ccc"", ""Grade2""));
    lijst.add(new Athletes(""aaa"", ""Grade3""));
    lijst.add(new Athletes(""ddd"", ""Grade4""));
    Collections.sort(lijst, new Comparator&lt;Athletes&gt;() {
        @Override
        public int compare(Athletes o1, Athletes o2) {
            return o1.getName().compareTo(o2.getName());
        }
    });

    for (Athletes athletes : lijst) {
        System.out.println(athletes);
    }
}
</code></pre>

<p>}</p>
"
"27523703","<p>You should read up the basic of java.
First off you are using the same index of the array in the loop instead of iterating. This is how i think you mean to write it.</p>

<pre><code>List&lt;Color[][]&gt; list = new ArrayList&lt;Color[][]&gt;();
for(int i=0;i&lt;5;i++){           
    if(i==0) tab[i][i] = Color.white;
    if(i==1) tab[i][i] = Color.blue;
    if(i==2) tab[i][i] = Color.black;
    if(i==3) tab[i][i] = Color.red;
    if(i==4) tab[i][i] = Color.cyan;
    System.out.println(i+"" add ""+tab[i][i]);
    list.add(tab);  
}
System.out.println(""_"");
for(int i=0;i&lt;5;i++)
    System.out.println(i+"". read ""+list.get(i)[i][i]);
</code></pre>

<p>Also there is no need in this code to use multi dimensional array nor a list of it.</p>
"
"28220014","<p>Ok, since you can use arrays and for loops but not collections:</p>

<pre><code>public class Sorter(){

    private int[] grades = {7, 6, 4, 10, 8};
    private String[] names = {""John"", ""Erik"", ""Bob"", ""Frank"", ""Judy""};

    public static void main(String args[]) {
        new Sorter();
    }

    public Sorter(){
        int[] tempGrades = {0, 0, 0, 0, 0};
        String[] tempNames = {"""", """", """", """", """"};
        for (int x = 0; x &lt; tempGrades.length; x++) {
            if (grades[x] &lt; tempGrades[1]) {
                tempGrades[0] = grades[x];
                tempNames[0] = names[x];
            } else if (grades[x] &lt; tempGrades[2]) {
                tempGrades[0] = tempGrades[1];
                tempGrades[1] = grades[x];
                tempNames[0] = tempNames[1];
                tempNames[1] = names[x];
            } else if (grades[x] &lt; tempGrades[3]) {
                tempGrades[0] = tempGrades[1];
                tempGrades[1] = tempGrades[2];
                tempGrades[2] = grades[x];
                tempNames[0] = tempNames[1];
                tempNames[1] = tempNames[2];
                tempNames[2] = names[x];
            } else if (grades[x] &lt; tempGrades[4]) {
                tempGrades[0] = tempGrades[1];
                tempGrades[1] = tempGrades[2];
                tempGrades[2] = tempGrades[3];
                tempGrades[3] = grades[x];
                tempNames[0] = tempNames[1];
                tempNames[1] = tempNames[2];
                tempNames[2] = tempNames[3];
                tempNames[3] = names[x];
            } else {
                tempGrades[0] = tempGrades[1];
                tempGrades[1] = tempGrades[2];
                tempGrades[2] = tempGrades[3];
                tempGrades[3] = tempGrades[4];
                tempGrades[4] = grades[x];
                tempNames[0] = tempNames[1];
                tempNames[1] = tempNames[2];
                tempNames[2] = tempNames[3];
                tempNames[3] = tempNames[4];
                tempNames[4] = names[x];
            }
        }
        grades = tempGrades;
        names = tempNames;
        for (int x = 0; x &lt; grades.length; x++) {
            System.out.println(tempNames[x] + "" "" + tempGrades[x]);
        }
    } 
}
</code></pre>

<p>just for the future:</p>

<p>you can use an <code>ArrayList&lt;Athlete&gt;</code> where Athlete is a class that accepts <code>(String name, int grade)</code> as constructor paramaters and sorts athletes by grade by implementing its own comparator or you can use a <code>LinkedHashMap&lt;Integer, String&gt;</code> that sorts values by <code>Key&lt;Integer&gt;</code>. </p>

<p>Note: Class names with plural like Athletes are best used for Singleton classes that only implement static methods and variables. Always name classes by function (in this case sorting), AthleteSorter is also viable.</p>
"
"17769293","<p>Here's a simple way: just comment out the code for <code>setValue</code>. You can uncomment it after testing. Since in many cases like this a mechanism is needed to fake failures, it would be a good idea to  build a general mechanism for all such cases. </p>
"
"28220360","<p>You may write your own comparator Class to sort the Athelete on basis of their names</p>

<pre><code>public class AtheleteComparator implements Comparator
{
         @override
         public int compare(Atheletes first,Atheletes second)
       {
            return first.name.compareTo(second.name);
       }
}
</code></pre>

<p>Then simply use</p>

<pre><code>Collections.sort(List&lt;Athelete&gt;list,Your own Comparator's object)
</code></pre>

<p>To find out athelete with highest grade write another comparator which compares <strong>grades</strong> </p>

<p>then use </p>

<pre><code>Collections.sort(arrayList,Comparator); // Sort the arraylist
arrayList.get(arrayList.size() - 1); //gets the last item, largest for an ascending sort
</code></pre>
"
"27511089","<p>In a pure OO language it should be probably always a method like <code>length()</code>. So in a class hierarchy you can override the attribute length.</p>

<p>But Java is not pure OO. And the main reason for fields (.length) vs method (length()) is/was performance issues. </p>

<p>And even Sun/Oracle programmers did some bad class design.</p>
"
"17825796","<p>Try to use brackets in your line, like this:</p>

<pre><code>boolean firstGoodFix = (waitingForLoc &amp;&amp; (newLocation.getAccuracy() &lt; 30) );
</code></pre>

<p>Notice the extra brackets in your comparison. </p>

<p>PS: To those voting down my answer, would you care to comment and explain why are you voting down? I was just trying to help, and this way you just discourage people to help other people...</p>
"
"27543255","<p>Try with this </p>

<pre><code>  JsonArray array = new  JsonArray(value)
</code></pre>

<p>value :- Should have proper jsonarray format. otherwise it will throw a JsonException</p>
"
"27585495","<p><code>Streams</code> don't necessarily have an order, meaning that the last element might not even be defined; the order is given by their source. For example if the stream is created from a <code>HashMap</code>, then there's no order. Moreover, even if a <code>Stream</code> is ordered, it doesn't assure that all the operations acted upon it will be applied on the Stream's element in that order.</p>

<p>Actually, parallel streams perform better if they are not ordered and <code>Stream</code> provides <a href=""http://docs.oracle.com/javase/8/docs/api/java/util/stream/BaseStream.html#unordered--"" rel=""nofollow"">a method</a> returning the same stream but unordered.</p>

<p><a href=""http://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#Ordering"" rel=""nofollow"">http://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html#Ordering</a></p>

<p>Since <code>Stream</code> does not provide a method <code>isOrdered()</code> the only way last element makes sense is to <code>collect</code> the stream into an ordered <code>Collection</code>:</p>

<pre><code>List&lt;T&gt; list = stream.collect(Collections.toList());
int size = list.size();
T last = list.get(size - 1);
</code></pre>

<p>This is also the most efficient in terms of CPU consumption, because it's O(1) instead of O(N). On the other hand it takes more memory. I obtained the following results:</p>

<pre><code>Collect: 81
ForEachOrdered: 434
Reduce: 455


public static void main(String[] args) {
    //let streams get hot
    Stream.of(""1"", ""2"", ""3"").collect(Collectors.toList());
    final Object[] holder = new Object[1];
    Stream.of(""1"", ""2"", ""3"").forEachOrdered(e -&gt; holder[0] = e);
    Stream.of(""1"", ""2"", ""3"").reduce((a, b) -&gt; b);
    //start testing
    t1();
    t2();
    t3();
}

private static void t1() {
    long start = System.nanoTime();
    List&lt;String&gt; list = Stream.of(""1"", ""2"", ""3"").collect(Collectors.toList());
    int lastIndex = list.size() - 1;
    String last = list.get(lastIndex);
    long end = System.nanoTime();
    System.out.println(""Collect: "" + TimeUnit.NANOSECONDS.toMicros(end - start));
}

private static void t2() {
    long start = System.nanoTime();
    final Object[] holder = new Object[1];
    Stream.of(""1"", ""2"", ""3"").forEachOrdered(e -&gt; holder[0] = e);
    String last = (String) holder[0];
    long end = System.nanoTime();
    System.out.println(""ForEachOrdered: "" + TimeUnit.NANOSECONDS.toMicros(end - start));
}

private static void t3() {
    long start = System.nanoTime();
    Optional&lt;String&gt; lastOpt = Stream.of(""1"", ""2"", ""3"").reduce((a, b) -&gt; b);
    String last = lastOpt.get();
    long end = System.nanoTime();
    System.out.println(""Reduce: "" + TimeUnit.NANOSECONDS.toMicros(end - start));
}
</code></pre>

<p>Edit: If you look at how <code>Collectors.toList()</code> is implemented you see it instantiates <code>CollectorImpl</code> which besides other parameters it takes a <code>BinaryOperator</code> that takes 2 <code>Lists</code> and combines them adding all the elements from one to another <code>(left, right) -&gt; { left.addAll(right); return left; }</code>. In order to improve memory consumption and not allocate the whole <code>ArrayList</code> one might provide a different <code>BinaryOperator</code> meaning the collected stream would return a list with just one element, the last one.</p>

<pre><code>(left, right) -&gt; { 
    if (right.size() == 1) {
        left.addAll(right); 
    }
    return left; 
}
</code></pre>

<p>There are two problems with this though: <code>CollectorImpl</code> is not <code>public</code> and I have not tested to see if it's functionally correct.</p>
"
"27601670","<p>What about this?</p>

<p>Use a <code>HashMap</code> with key as the variable (i.e. ""{PERSON_NAME}"") and the value as the corresponding getter of such key (i.e. <code>getPersonName()</code>). Obviously, this getter has to be an <code>Interface</code>.</p>

<p>IMHO this would be a very good way.</p>

<p>What the more experienced people think?</p>
"
"27569637","<p>You need to provide multiple parameterized types, and then do something if they don't match.</p>

<pre><code>public static &lt;T, S&gt; boolean arrayContains(T[] array, S object){
    System.out.println(""array.class: "" + array.getClass().getComponentType().getName());
    System.out.println(""object.class: "" + object.getClass().getName());
    System.out.println(""array.class == object.class: "" + (array.getClass().getComponentType() == object.getClass()));

    // TODO: do something if the types don't match

    return Arrays.asList(array).contains(object);
}
</code></pre>
"
"18078820","<pre><code>why there is a hashcode() method in Java?
</code></pre>

<p>Basically whenever we insert in a unique data structure, the data structure make sure that there is no duplicate object is inserted. How do it do that??
<br>This is done by the contract the objects are implementing, <code>hashcode()</code> that the unique id as SSN of a person. But if you want to retrieve a particular object then guess what should be called after matching SSN, yes you guessed right it is <code>equals()</code>.</p>
"
"27622596","<p>As laid out in other answers there are two reads and two writes. Imagine the following execution (T1 and T2 denote two threads), using annotations that match the JLS statement below:</p>

<ul>
<li>T1: <code>a = 0                //W(r)</code></li>
<li>T2: <code>read temp1 = a       //r_initial</code></li>
<li>T1: <code>a = 1                //w</code></li>
<li>T2: <code>read temp2 = a       //r</code></li>
<li>T2: <code>print temp1+temp2</code></li>
</ul>

<p>In a concurrrent environment this is definitely a possible thread interleaving. Your question is then: would the JVM be allowed to make <code>r</code> observe <code>W(r)</code> and read 0 instead of 1?</p>

<p><a href=""http://docs.oracle.com/javase/specs/jls/se8/html/jls-17.html#jls-17.4.5-500"" rel=""nofollow"">JLS #17.4.5</a> states:</p>

<blockquote>
  <p>A set of actions A is happens-before consistent if for all reads r in A, where W(r) is the write action seen by r, it is not the case that either hb(r, W(r)) or that there exists a write w in A such that w.v = r.v and hb(W(r), w) and hb(w, r).</p>
</blockquote>

<p>The optimisation you propose (<code>temp = a; print (2 * temp);</code>) would violate that requirement. So your optimisation can only work if there is no intervening write between <code>r_initial</code> and <code>r</code>, which can't be guaranteed in a typical multi threaded framework.</p>

<p>As a side comment, note however that there is no guarantee as to how long it will take for the writes to become visible from the reading thread. See for example: <a href=""http://stackoverflow.com/questions/11761552/detailed-semantics-of-volatile-regarding-timeliness-of-visibility"">Detailed semantics of volatile regarding timeliness of visibility</a>.</p>
"
"28221416","<p>I have simplified your code and added comments as necessary.</p>

<pre><code>    // number of Athletes you want
    Athlete[] eAthlete = new Athlete[5];
    // Name of each athlete
    String[] names = { ""ss"", ""aa"", ""bb"", ""cc"", ""xx"" };

    // On each iteration, the name of the Athlete
    // and his/her grade is set,

    Scanner in = new Scanner(System.in);
    for (int i = 0; i &lt; eAthlete.length; i++) {
        eAthlete[i] = new Athlete();
        eAthlete[i].setName(names[i]);
        System.out.println(""Please enter Grade for: ""
                + eAthlete[i].getName());
        eAthlete[i].setGrade(in.nextLine());
    }

    in.close();

    // Print all athletes with their grades,
    System.out.println(""Before Sorting"");
    for (Athlete s : eAthlete) {
        System.out.println(s.getName() + "" "" + s.getGrade());
    }
</code></pre>

<p>At this point, the grades and names are assigned to each athlete,</p>

<p><strong>Output</strong></p>

<pre><code>Before Sorting
ss 123
aa 65465
bb 4654
cc .0231
xx 23123
</code></pre>

<p>Now we need to sort these Athletes based on their names.</p>

<p>We could have designed our own <code>Comparator</code> but since, you are not allowed to use <code>Collections.sort</code>, we would use rather poor approach i.e bubble sorting,</p>

<pre><code> String tempStr;
 for (int t=0; t&lt;eAthlete.length-1; t++)
    {
        for (int i= 0; i &lt; eAthlete.length - t -1; i++)
        {
            if(eAthlete[i+1].getName().compareTo(eAthlete[i].getName())&lt;0)
            {
                tempStr = eAthlete[i].getName();
                eAthlete[i].setName(eAthlete[i+1].getName());
                eAthlete[i+1].setName(tempStr);
            }
        }
    }
</code></pre>

<p>Printing the sorted athletes with their grades,</p>

<pre><code>System.out.println(""After Sorting"");
         for (Athelete s : eAthelete){
             System.out.println(s.getName() + "" "" + s.getGrade());
         }
</code></pre>

<p><strong>Output:</strong></p>

<pre><code>After Sorting

aa 65465
bb 4654
cc .0231
ss 123
xx 23123
</code></pre>

<p>observe the names in above output.</p>

<p>here is your <code>Athlete</code> class,</p>

<pre><code>class Athlete {

    private String name;
    private String grade;


    public void setName(String name) {
        this.name = name;
    }

    public void setGrade(String gr) {
        grade = gr;
    }

    public String getGrade() {
        return grade;
    }

    public String getName() {
        return name;
    }
}
</code></pre>

<p><strong>Here is the complete code,</strong></p>

<pre><code>public class Main {
    public static void main(String[] args) {

        Athlete[] eAthlete = new Athlete[5];
        String[] names = { ""ss"", ""aa"", ""bb"", ""cc"", ""xx"" };

        Scanner in = new Scanner(System.in);
        for (int i = 0; i &lt; eAthlete.length; i++) {
            eAthlete[i] = new Athlete();
            eAthlete[i].setName(names[i]);
            System.out.println(""Please enter Grade for: ""
                    + eAthlete[i].getName());
            eAthlete[i].setGrade(in.nextLine());
        }

        in.close();

        // Print all athletes with their grades,
        System.out.println(""Before Sorting"");
        for (Athlete s : eAthlete) {
            System.out.println(s.getName() + "" "" + s.getGrade());
        }

        String tempStr;

        for (int t = 0; t &lt; eAthlete.length - 1; t++) {
            for (int i = 0; i &lt; eAthlete.length - t - 1; i++) {
                if (eAthlete[i + 1].getName().compareTo(eAthlete[i].getName()) &lt; 0) {
                    tempStr = eAthlete[i].getName();
                    eAthlete[i].setName(eAthlete[i + 1].getName());
                    eAthlete[i + 1].setName(tempStr);
                }
            }
        }

        System.out.println(""After Sorting"");
        for (Athlete s : eAthlete) {
            System.out.println(s.getName() + "" "" + s.getGrade());
        }
    }
}

class Athlete {

    private String name;
    private String grade;

    public void setName(String name) {
        this.name = name;
    }

    public void setGrade(String gr) {
        grade = gr;
    }

    public String getGrade() {
        return grade;
    }

    public String getName() {
        return name;
    }

}
</code></pre>
"
"27598462","<p>Just tested with a simple String split with this regex <code>[""][|][""]</code>. </p>

<p>So you can use your code with this: <code>row  = line.split(""[\""][|][\""]"");</code></p>

<p>Or my test with a simple string split:</p>

<pre><code>public static void main(String[] args) {
    String text = ""\""xxx\""|\""yyy\""|\""zzz\""|\""nnn\""|\""....\"""";
    String regex = ""[\""][|][\""]"";

    String[] textArray= text.split(regex);
    for(String part:textArray){
        System.out.println(part);
    }        
}
</code></pre>

<p>This will output:</p>

<pre><code>""xxx
yyy
zzz
nnn
....""
</code></pre>

<p>So just remove the "" at the beginning and end and you have your splitted string.</p>

<p><a href=""http://regexpal.com/"" rel=""nofollow"">You can also test any regex on regex test websites.</a></p>
"
"27630437","<p>Use <code>array[0] = array[array.length - 1];</code> to access the last item in the <code>Array</code>.</p>
"
"28260529","<pre><code>public abstract class BankAccount implements NamedAccount {

    abstract String getAccountHolderName();

    abstract void setAccountHolderName(final String theNewName);

}
</code></pre>
"
"28284456","<pre><code>public static double average(double monTemp, double tuesTemp, double wedTemp, double thursTemp, double satTemp, double sunTemp, double friTemp)
</code></pre>

<p>Return type is double. So you need return .
Its better to make the method as void.</p>

<pre><code>public static void average(double monTemp, double tuesTemp, double wedTemp, double thursTemp, double satTemp, double sunTemp, double friTemp)
</code></pre>
"
"28284458","<p>You must return a double in you method average : ""public static <strong>double</strong>"" </p>

<pre><code>public static double average(double monTemp, double tuesTemp, double wedTemp, double thursTemp, double satTemp, double sunTemp, double friTemp) {
      double average=monTemp+tuesTemp+wedTemp+thursTemp+friTemp+satTemp+sunTemp;
      finalAverage=(average/7);

      System.out.println("" You have chosen to see the average temperature for the week"");
      System.out.println("" The temperature for the week is "" +finalAverage + ""°C"");

      return average;
}
</code></pre>
"
"27695463","<p>Be careful arrays first index starts with 0 th element.Your solution will be throw a <code>StringIndexOutOfBoundsException</code>.</p>
"
"18149227","<p>Split word into characters</p>

<pre><code>String[] parts = string.split("""");
</code></pre>

<p>print characters, one per line</p>

<pre><code>for(String char : parts){
    System.out.println( char );
}
</code></pre>
"
"27718727","<p>Change: int[] A = null;</p>

<p>Change : <code>int x</code> to <code>int x = 0;</code>. You need to initialize variables in java.</p>
"
"17967558","<p>I had the same problem and solved it like this:</p>

<pre><code>final YourType[] yourArray = ...;
return new Iterable&lt;YourType&gt;() {
  public Iterator&lt;YourType&gt; iterator() {
     return Iterators.forArray(yourArray);   // Iterators is a Google guava utility
  }
}
</code></pre>
"
"18151627","<p>You could do two different things.</p>

<p>The first have the method signature be <code>public List&lt;Object&gt; getPeople()</code>.  This will allow you to do <code>instanceof</code> and figure out which is which.</p>

<p>OR</p>

<p>you could have <code>DataExporterPerson</code> extend <code>Person</code> (or make a new class/interface that both <code>DataExporterPerson</code> and <code>Person</code> extend/implements and use that as the type).</p>
"
"27779253","<h2>You need to Scan the Value from system therefore use Import scanner</h2>

<p>**</p>

<h2>USE this code</h2>

<p>** </p>

<pre><code>Scanner s = new Scanner(System.in);
        int i;
        String a = """";
        int count;

        for (count = 0; count&lt;6; count++)
                {
            System.out.println(""Enter integer: "");

            if(s.hasNextInt()) 
                        {  
                        System.out.println(a + ""is correct integer""); 
                        }
                        else
                        {
                        System.out.println(""invalid input"");
                        }
                } 
</code></pre>
"
"18156092","<p>It looks to me like you're making things more complicated than they need to be.  Instead of calling a method that creates a Random object and returns a new random number, just create a Random object in the method that called your rand(int i) method.  For example, instead of doing this:</p>

<pre><code>public void someMethod()
{
    int randomInt = rand(5);
}
</code></pre>

<p>Do this:</p>

<pre><code>public void someMethodImproved()
{
    Random randObject = new Random();
    int randInt = randObject.nextInt(5);
}
</code></pre>

<p>You can then continue to call randObject.nextInt(5) for as long as you want, and it will continue to give you pseudo-random integers between 0 (inclusive) and 5 (exclusive).</p>
"
"27693185","<p>1700, 1500 are returning as leap years because the if check is not correct .</p>

<p>The correct check is <code>(year % 400 == 0) || ((year % 4 == 0) &amp;&amp; (year % 100 != 0)</code></p>

<p>More information about the algorithm can be found here: <a href=""http://en.wikipedia.org/wiki/Leap_year#Algorithm"" rel=""nofollow"">Leap Year Algorithm</a></p>
"
"27801970","<p>You can use global data</p>

<pre><code>public class GlobalData extends Application{
    JSONObject jsonObj;
}

else{
    ((GlobalData)getApplication).jsonObj = myJsonObj;
    startActivity(new Intent(...));
}
</code></pre>

<p>You also need to declare in manifest in application tag
    android:name="".GlobalData""</p>
"
"28284689","<p>One way to fix your problems:</p>

<pre><code>import java.util.Scanner;

public class Temp {
static Scanner keyboard = new Scanner(System.in);
static int choice;
static double average, finalAverage;

static double monTemp, tuesTemp, wedTemp, thursTemp, friTemp, satTemp, sunTemp;

public static void temp() {

    System.out.println(""You have chosen option 1"");
    System.out.println(""Please enter the temperature for Monday in degrees celsius"");
    monTemp = keyboard.nextDouble();

    System.out.println(""Please enter the temperature for Tuesday in degrees celsius"");
    tuesTemp = keyboard.nextDouble();

    System.out.println(""Please enter the temperature for Wednesday in degrees celsius"");
    wedTemp = keyboard.nextDouble();

    System.out.println(""Please enter the temperature for Thursday in degrees celsius"");
    thursTemp = keyboard.nextDouble();

    System.out.println(""Please enter the temperature for Friday in degrees celsius"");
    friTemp = keyboard.nextDouble();

    System.out.println(""Please enter the temperature for Saturday in degrees celsius"");
    satTemp = keyboard.nextDouble();

    System.out.println(""Please enter the temperature for Sunday in degrees celsius"");
    sunTemp = keyboard.nextDouble();

}// Temp

public static void day() {

    System.out.println(""You have chosen to see the temperature for a specified day"");
    System.out.println(""Please choose a day below"");
    System.out.println("" 1. Monday"");
    System.out.println("" 2. Tuesday"");
    System.out.println("" 3. Wednesday"");
    System.out.println("" 4. Thursday"");
    System.out.println("" 5. Friday"");
    System.out.println("" 6. Saturday"");
    System.out.println("" 7. Sunday "");
    choice = keyboard.nextInt();

    switch (choice) {
    case 1:
        System.out.println("" You have chosen to see the temperature for Monday"");
        System.out.println("" The temperature for Monday is "" + monTemp + ""°C"");
        break;
    case 2:
        System.out.println("" You have chosen to see the temperature for Tuesday"");
        System.out.println("" The temperature for Tuesday "" + tuesTemp + ""°C"");
        break;
    case 3:
        System.out.println("" You have chosen to see the temperature for Wednesday"");
        System.out.println("" The temperature for Wednesday is "" + wedTemp + ""°C"");
        break;
    case 4:
        System.out.println("" You have chosen to see the temperature for Thursday"");
        System.out.println("" The temperature for Thursday is "" + thursTemp + ""°C"");
        break;
    case 5:
        System.out.println("" You have chosen to see the temperature for Friday"");
        System.out.println("" The temperature for Friday is "" + friTemp + ""°C"");
        break;
    case 6:
        System.out.println("" You have chosen to see the temperature for Saturday"");
        System.out.println("" The temperature for Saturday is "" + satTemp + ""°C"");
        break;
    case 7:
        System.out.println("" You have chosen to see the temperature for Sunday"");
        System.out.println("" The temperature for Sunday is "" + sunTemp + ""°C"");
        break;
    default:
        System.out.println(""Oops something went wrong, please try again"");
        break;

    }

}// day

public static void average() {
    average = monTemp + tuesTemp + wedTemp + thursTemp + friTemp + satTemp + sunTemp;
    finalAverage = (average / 7);

    System.out.println("" You have chosen to see the average temperature for the week"");
    System.out.println("" The temperature for the week is "" + finalAverage + ""°C"");

}// Average

public static void menu() {

    System.out.println(""Welcome the temperature program. Please select an option for the menu below b entering the number"");
    System.out.println(""1)Enter temperatures for each day of the week"");
    System.out.println(""2)Display average temperature for specified choice"");
    System.out.println(""3)Display average temperature for the week"");
    System.out.println(""4)Exit"");
    choice = keyboard.nextInt();

    switch (choice) {
    case 1:
        temp();
        menu();
        break;

    case 2:
        day();
        menu();
        break;

    case 3:
        average();
        menu();
        break;
    case 4:
        System.exit(0);
    default:
        System.out.println(""Oops, something went wrong, please try again!"");
        menu();
    }// switch
}// menu

public static void main(String[] args) {
    menu();
}// main
}// class
</code></pre>
"
"17985724","<p>Read this article about <a href=""http://developer.android.com/training/sharing/send.html"" rel=""nofollow"">Sending Content to Other Apps</a></p>

<pre><code>Intent sendIntent = new Intent();

sendIntent.setAction(Intent.ACTION_SEND);

sendIntent.putExtra(Intent.EXTRA_TEXT, ""This is my text to send."");

sendIntent.setType(""text/plain"");

startActivity(Intent.createChooser(sendIntent, getResources().getText(R.string.send_to)));
</code></pre>
"
"28302303","<p><code>@Test(expected=Exception.class)</code></p>
"
"18048636","<p>You should use an <code>ArrayList&lt;? extends Animal&gt;</code> instead of <code>ArrayList&lt;Object&gt;</code>. You would then cast a return value to the appropriate subclass of <code>Animal</code>.</p>
"
"18176690","<p>Wildcard method is also generic - you could call it with some range of types.</p>

<p>The <code>&lt;T&gt;</code> syntax defines a type variable name. If a type variable has any use (e.g. in method implementation or as a constraint for other type), then it makes sense to name it, otherwise you could use <code>?</code>, as anonymous variable. So, looks like just a short-cut.</p>

<p>Moreover, the <code>?</code> syntax is not avoidable when you declare a field:</p>

<pre><code>class NumberContainer
{
 Set&lt;? extends Number&gt; numbers;
}
</code></pre>
"
"18260131","<p>It is much easier to do it in SQL:</p>

<pre><code>select ... where ... LIKE username%
</code></pre>
"
"27845064","<p>You have <code>List&lt;Integer[]&gt; l = new ArrayList&lt;Integer[]&gt;(3);</code></p>

<p>if you want the second element of the first index:</p>

<pre><code>l.get(0)[1].
</code></pre>
"
"27802464","<pre><code>try it
int[] Values = new int[]{ 5, 12, 4, 2, 4 };
    int Size = Values.length;
    Log.i(Integer.toString(Size));
</code></pre>
"
"28356008","<p>Maybe you want something like this?</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>public boolean method1() {
  if (something) {
    return true;
  }
  return false;
  method2();//This will be dead code
}</code></pre>
</div>
</div>
</p>

<p>or like this?</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>public boolean method1() {
 if (something) {
      return true;
}
 else {
   try
     {
    return false; //first return false
       }
   finally
     {
    method2();//then call this
       }
}
}</code></pre>
</div>
</div>
</p>
"
"18079045","<p>First convert it into List of your class:</p>

<pre><code>List&lt;Employee&gt; list = new List&lt;Employee&gt;(arraylist);

var sorted = list.OrderBy(o =&gt; o.id).ToList();
</code></pre>
"
"27840629","<p>I am writing the onclick functionality.</p>

<pre><code>public void onClick(View v)
 {

  int selectedId = radioGroup.getCheckedRadioButtonId();
    if(selectedId !=-1)
     {    
        View radioButton = radioGroup.findViewById(selectedId );
        int radioId = radioGroup.indexOfChild(radioButton);
        RadioButton btn = (RadioButton) radioGroup.getChildAt(radioId);
        String selection = (String) btn.getText();
    Toast.makeText(Radio_Button.this, ""This is: "" + s,Toast.LENGTH_LONG).show();
    }   
 }
</code></pre>

<p>Try this, If you have any problem then please comment.</p>
"
"18295896","<p>use  <code>android:focusable=""false""</code>  for focusing disable</p>

<pre class=""lang-xml prettyprint-override""><code>&lt;EditText
    android:id=""@+id/password""
    android:layout_width=""wrap_content""
    android:layout_height=""wrap_content""
    android:layout_below=""@+id/changePass""
    android:layout_centerHorizontal=""true""
    android:layout_marginTop=""167dp""
    android:ems=""10""
    android:imeOptions=""flagNoExtractUi""
    android:inputType=""textPassword""
    android:maxLength=""30""
 android:focusable=""false"" &gt;

&lt;/EditText&gt;
</code></pre>
"
"18229464","<p>No, you don't need to do that. Because second window is already close, and if you will use method <code>driver.close()</code> it will close your first window and the browser itself(because there is only one tab left in browser window).</p>
"
"18231919","<p>Its depends upon the Window, </p>

<ol>
<li><p>some Window close while click on outside Window content, in that case no need of <code>driver.close()</code> method. </p></li>
<li><p>but for some Window, click on outside the Window content, Window unable to close (i.e. Window gets close after click on close button), in that case need to close such Window using the<code>driver.close()</code> method.</p></li>
</ol>
"
"28425349","<p>We can't inherit the <code>private</code> fields or methods. So in your code Class <code>B</code> is completely unaware of variable <code>foo</code> even though you're accessing from its own class <code>A</code>.</p>
"
"18119912","<p>You can use StringBuilder</p>

<pre><code> StringBuilder sb=new StringBuilder();
 sb.deleteCharAt(sb.indexOf(""[""));
 sb.deleteCharAt(sb.indexOf(""]""));
</code></pre>

<p>For String(This looks like a workaround):</p>

<pre><code> String s=""[SBD]"";
  s=  s.replace(""["","""");
   s= s.replace(""]"","""");
</code></pre>

<p>Please note that if more than one ""["" or ""]"" it will replace all occurences.</p>
"
"18336954","<p><strong>Edited</strong></p>

<p>Now code is corrected.</p>

<pre><code>    public static void main(String[] args) {
       int i; 
       int mynum[] = new int[5];
       int max = Integer.MIN_VALUE;

       for( i=0; i&lt; mynum.length; i++)
       {
          int num = Integer.parseInt(JOptionPane.showInputDialog(null, ""Value""));
          if(num &gt; max) max = num;
       }
       JOptionPane.showMessageDialog(null,""Maximum number is: ""+max);
   }
</code></pre>
"
"18256399","<p>Thanks to every one for your responses. After doing more investigation, below are my observations.</p>

<p>I am rendering my page using Mason(Perl + HTML) not using JSP. So i was not able to specify encoding type in page to force browser to submit UTF-8 encoded string.</p>

<p>Now i am programmatically decoding with ""ISO8859-1""(Latin) and encoding with UTF-8 to get actual string for consumption.</p>

<p>Please let me know of there is a way to specify encoding type in Mason(Perl + HTML) so that it will submit parameters with UTF-8 encoding instead of taking default encoding.</p>

<pre><code>import java.nio.charset.CharsetDecoder;  
import java.nio.charset.Charset;
import java.util.Arrays; 

public class Main {
    public static void main(String[] args) throws Exception {
        byte[] encoding1 = ""ä»¥ä¸‹ä¾¿æ˜¯æœ‰å…³æ­¤é—®é¢˜çš„æ‰€æœ‰ä¿¡æ ¯"".getBytes(""ISO8859-1"");                
        String s = new String(encoding1, ""UTF-8"");
        System.out.println(s);
    }
}
</code></pre>
"
"18149505","<pre><code>private
</code></pre>

<p>This keyword in itself says that the <strong><em>variable or a method or a function</em></strong> associated with it, is no longer available to the class's object. To access it, you need to make a public method in which you will use it.</p>
"
"28459726","<p>If you have already given a constant size of array, avoid using <code>.length</code> and use the constant instead.</p>

<pre><code>for(int x = 0; x &lt; 4; x++){for(int y = 0; y &lt; 4; y++){ ... ... }}
</code></pre>
"
"18346675","<p>Here you go, its a great trick:</p>

<pre><code>import javax.json.*;
</code></pre>
"
"27966445","<p>Dont init your ArrayList like this: <code>list = new ArrayList&lt;Member&gt;();</code>
But like this: <code>list = new ArrayList&lt;&gt;();</code></p>
"
"27966912","<p>Fix it like this:</p>

<pre><code>public class Library
{
    private ArrayList&lt;Member&gt;listOfMembers;
    public Library()
    {
        listOfMembers = new ArrayList&lt;Member&gt;();
    }
    public void storeMember(Member member)
    {
        listOfMembers.add(member);
    }
    public int numberOfMembers()
    {
        return listOfMembers.size();
    }
}
</code></pre>

<p>If you add a Member(String) in an ArrayList (of Member) you are missing the type matching. So change 
public void storeMember(String Member) in public void storeMember(Member member) or if Member want to be a string change <code>ArrayList&lt;String&gt;</code>.
It's a good practice programming to write the variables in this way listOfMembers and not listofmembers just you like you did with the functions.
In the numberOfMembers you must return the size of the arraylist and not the size of the class Member.
Remember to include the class Member.</p>
"
"27964633","<p>Are you sure you need to mock the class object?
Is there a specific reason why you can't just do the following?</p>

<pre><code>public class MyTest {
   public static class TestClass {
       public void doFoo() {}
   }

   @Test
   public void myTest() {
       doStuff(TestClass.class);
   }
}
</code></pre>
"
"18157324","<p>You need to initialise variables outside the loop. Try this:</p>

<pre><code>int chkNum = 0;
int lottMtch = 0;

for (int i = 0; i &lt; 6; i++)
{
    chkNum = myArray[i];
    lottMtch = count(chkNum, rndNum);

}

if (lottMtch &gt; 0)
{
    System.out.println(lottMtch + ""matches found"");
    System.out.print(chkNum);
}
else {
    System.out.print(""no matches found"");
}
</code></pre>
"
"28466350","<p>Isn't this what the default access modifier is for?</p>

<p>Try this :</p>

<pre><code>public class blah{
    static class A {
        int foo;
        void bar(B b) {b.foo=42;}
    }
    static class B extends A {

    }
}
</code></pre>

<p>You cannot access the private member directly from an ancestor, that is what private means. Now why does it work when you cast? And does that mean the documentation is incorrect?</p>

<p>I mentioned to a colleague that the java documentation may be erroneous and he points out that you are actually setting the value of foo from inside class A. So everything is correct. You cannot (because it is private) access foo from an descendant, so you must cast. And you cannot do that outside of the body of A.</p>

<p>I believe this is the correct answer.</p>
"
"18166114","<p>When I try to do what's shown above I get the following compile time error:</p>

<p>The method main cannot be declared static; static methods can only be declared in a static or top level type    </p>

<p>Try this:</p>

<pre><code>public class NoPublicClasses {

class Class1 {
}

class Class2 {
}

public static void main(String[] args) {
    System.out.println(""Hello world"");
}
</code></pre>

<p>}</p>

<p>Or this</p>

<pre><code>public class NoPublicClasses {

class Class1 {
}

static class Class2 {
    public static void main(String[] args) {
        System.out.println(""Hello world"");
    }
}
</code></pre>

<p>}</p>
"
"28476539","<p>I had this issue. I've fixed it by adding .getText() to the element lol</p>

<pre><code>WebElement helpElement = driver.findElement(By.cssSelector(""#footer &gt; div:nth-child(1) &gt; div.small-12.small-text-center.medium-text-center.large-4.columns &gt; ul &gt; li:nth-child(2) &gt; a""))
assertEquals(""Help"", helpEl.getText());
</code></pre>
"
"27990032","<p>Of course it will fail, your class <code>A</code> implements <code>Container&lt;A.Member&gt;</code>, but your class <code>B</code> extends <code>A</code> but also implements <code>Container&lt;B.Member&gt;</code> which is like <code>class B extends A implements Container&lt;A.Member&gt; Container&lt;B.Memeber&gt;</code> , and in terms of the compiler, there is no difference between <code>Container&lt;A.Member&gt;</code> and <code>Container&lt;B.Member&gt;</code> due to type erasure, after compilation, all generics information will be lost, so there is no &lt;……> after type erasure, only their upper bounds and lower bounds exist, your type parameters are unbounded so they will erase to the same type, after erasure, your class <code>B</code> literally looks like this <code>class B extends A implements Container Container</code> which is fundamentally wrong. You can narrow the return type on overrides which is called covariant return type, this will also create a <code>bridge method</code> in the VM to preserve porlymorphism in Generics.</p>
"
"18299788","<p>To swap elements of Java ArrayList use,
static void swap(List list, int firstElement, int secondElement)
method of Collections class. Where firstElement is the index of first
element to be swapped and secondElement is the index of the second element
to be swapped.</p>

<p>If the specified positions are equal, list remains unchanged.</p>

<p>Please note that, this method can throw IndexOutOfBoundsException if
any of the index values is not in range.</p>

<pre><code>Collections.swap(arrayList,0,4);
</code></pre>
"
"28023560","<p>Try using 3 scanner?</p>

<pre><code>Scanner scn = new Scanner(System.in);

int operand1, operand2;
String operator;

operand1 = Integer.parseInt(scn.next());
operator = scn.next();
operand2 = Integer.parseInt(scn.next());
</code></pre>

<p>OP changes his question I left.
I was away just now after I posted this solution. Didn't have time to improve it. Now I give you a <strong>better</strong> and <strong>simple</strong> <strong>solution</strong>:</p>

<p>I supposed you do not expect user to input things like ""12+45*67/20"" right? Assuming there will be two operands.</p>

<p>1) Receive input as 1 whole string</p>

<p>2) Trim all the spaces from the input</p>

<p>3) Split string into tokens of integers</p>

<pre><code>Scanner scn = new Scanner(System.in);   
String[] token = new String[12];        
System.out.print(""Enter equation:"");
String input = scn.nextLine().trim();
String operator = """";
double answer=0, operand1=0, operand2=0;

if (input.indexOf(""+"") != -1){
    token = input.split(""\\+"");
    operator = ""+"";
}
else if (input.indexOf(""-"") != -1){
    token = input.split(""-"");
    operator = ""-"";
}
else if (input.indexOf(""*"") != -1){
    token = input.split(""\\*"");
    operator = ""*"";
}
else if (input.indexOf(""/"") != -1){
    token = input.split(""/"");
    operator = ""/"";
}
else
    System.out.println(""Invalid equation!"");

if(token[0].matches(""[0-9]+"") &amp;&amp; token[1].matches(""[0-9+]""))
{
    operand1 = Double.parseDouble(token[0]);
    operand2 = Double.parseDouble(token[1]);
    switch (operator)
    {
        case ""+"": answer = operand1 + operand2;
                  break;
        case ""-"": answer = operand1 - operand2;
                  break;
        case ""*"": answer = operand1 * operand2;
                  break;
        case ""/"": answer = operand1 / operand2;
                  break;
    }
}
System.out.println(answer);
</code></pre>

<p>Just copy and paste the whole thing to test it, it will work. </p>
"
"28024008","<p>You can do it like this:</p>

<pre><code>    Scanner scn = new Scanner(System.in);
    Integer operand1, operand2;
    char operator;

    System.out.println(""Enter first operand: "");
    operand1 = scn.nextInt();
    System.out.println(""Enter operator: "");
    operator = scn.next().charAt(0);
    System.out.println(""Enter second operand: "");
    operand2 = scn.nextInt();
</code></pre>
"
"28010702","<p>It is better to move that logic into a separate method and use a repetitive structure to call it back if invalid input</p>

<p>e.g.</p>

<pre><code>//your logic
while(isValidClass());
//your other logic


public boolean isValidClass(){
    String playerClass = classInput.nextLine();
    boolean isValid = true;
    if (playerClass.equals(""Swordsman"")){
       out.println(""You chose to be a Swordsman!"");}
    else if (playerClass.equals(""Sorcerer"")){
        out.println(""You chose to be a Sorcerer!"");}
    else if (playerClass.equals(""Elementalist"")){
        out.println(""You chose to be an Elementalist!"");}
    else if (playerClass.equals(""Assassin"")){
        out.println(""You chose to be an Assassin!"");}
    else if (playerClass.equals(""Sharpshooter"")){
        out.println(""You chose to be a Sharpshooter!"");}
    else {
        out.println(""Make sure your spelling is correct."");
        isValid = false;
    }
    return isValid;
}
</code></pre>
"
"28010735","<p>A do-while loop seems to be a great answer to your piece of code. An easy way to control your loop is to define a bool so:</p>

<pre><code>boolean loop=true;
//everything else that goes into your code
//...
//println where you requesto to enter the class name
do{
String playerClass = classInput.nextLine();
if (playerClass.equals(""Swordsman"")){
    out.println(""You chose to be a Swordsman!"");
    loop=false;}

else if (playerClass.equals(""Sorcerer"")){
    out.println(""You chose to be a Sorcerer!"");
    loop=false;}

else if (playerClass.equals(""Elementalist"")){
    out.println(""You chose to be an Elementalist!"");
    loop=false;}

else if (playerClass.equals(""Assassin"")){
    out.println(""You chose to be an Assassin!"");
    loop=false;}

else if (playerClass.equals(""Sharpshooter"")){
    out.println(""You chose to be a Sharpshooter!"");
    loop=false;}

else {
    out.println(""Make sure your spelling is correct."");
    }
    }while(loop);
</code></pre>
"
"28010761","<p>This should do the trick...</p>

<pre><code>boolean incomplete = true;

while (incomplete) {
    // Class selection
    out.println(""\nNow, what class would you like to play?\nSwordsman, Sorcerer, Elementalist, Assassin or Sharpshooter?"");
    String playerClass = classInput.nextLine();
    switch (playerClass) {
        case ""Swordsman"":
            out.println(""You chose to be a Swordsman!"");
            incomplete = false;
            break;
        case ""Sorcerer"":
            out.println(""You chose to be a Sorcerer!"");
            incomplete = false;
            break;
        case ""Elementalist"":
            out.println(""You chose to be an Elementalist!"");
            incomplete = false;
            break;
        case ""Assassin"":
            out.println(""You chose to be an Assassin!"");
            incomplete = false;
            break;
        case ""Sharpshooter"":
            out.println(""You chose to be a Sharpshooter!"");
            incomplete = false;
            break;
        default:
            out.println(""Make sure your spelling is correct."");
    }
}
</code></pre>
"
"28037105","<p>You want  <code>me.getValue().get(""pic"")</code>, <code>me.getValue().get(""name"")</code> and <code>me.getValue().get(""dist"")</code>.</p>

<p>This assumes that you're using generics, that your <code>TreeMap</code> is declared as a <code>Map&lt;Integer, HashMap&lt;String, String&gt;&gt;</code> and that your <code>Map.Entry</code> that you iterate with is declared as a <code>Map.Entry&lt;Integer, HashMap&lt;String, String&gt;&gt;</code>.</p>

<p>Also, you could iterate more easily with a for-each loop.</p>

<pre><code>Map&lt;Integer, HashMap&lt;String, String&gt;&gt; theTreeMap = new TreeMap&lt;&gt;();

// Populate the map here.

for (Map.Entry&lt;Integer, HashMap&lt;String, String&gt;&gt; me : theTreeMap.entrySet()) {
    System.out.println(me.getValue().get(""pic""));
    System.out.println(me.getValue().get(""name""));
    System.out.println(me.getValue().get(""dist""));
}
</code></pre>
"
"18413894","<p>OK, I'm going to post this as an answer since it seems to work for me and I haven't yet seen any pitfalls.</p>

<pre><code>private static class IntegerArrayList extends ArrayList&lt;Integer&gt; {
    IntegerArrayList () { super(); }
    IntegerArrayList (Collection&lt;? extends Integer&gt; c) { super(c); }
    IntegerArrayList (int initialCapacity) { super(initialCapacity); }
}
</code></pre>

<p>Now you can say something like    </p>

<pre><code>IntegerArrayList[][] array = new IntegerArrayList[9][9];
</code></pre>

<p>and elements like array[1][2] will inherit all the ArrayList methods (<code>array[1][2].remove(something)</code> works fine).  I made the class <code>private static</code> thinking you could nest it in some other class if that's the only place you'll use it, but you can make it public if you like.  Also, I copied all three constructors from <code>ArrayList</code>; you could eliminate unneeded ones but I don't see a compelling reason to.</p>

<p>I think the issue is that <code>new ArrayList&lt;Integer&gt;[9][9]</code> is prohibited because it would create an array that wouldn't do type checking (because of ""type erasure"").  But I think adding your own non-generic type that inherits from <code>ArrayList&lt;Integer&gt;</code> restores the type safety.</p>

<p>But I'm not a generic expert, and it wouldn't surprise me if someone more knowledgeable than I spots a problem with this solution.  But it seemed to work fine for me, with no compiler warnings about unchecked type stuff or anything.</p>

<p>(P.S. I'm posting this as a possible general solution to a problem that gets asked a lot.  But in reality, for this particular problem, I might just use a fixed-size array of boolean instead of an ArrayList, like others, or I might even do bit-diddling on integers if speed is a real issue.)</p>
"
"18339107","<p>Use <strong>String.replaceFirst()</strong> instead of String.replaceAll().<br></p>

<pre><code>replaceAll(""ß"", ""ss"")
</code></pre>

<p>This will replace all the occurrences of ""ß"". Hence the output after this statement becomes something like this :</p>

<blockquote>
  <p>Klasse, STRAssE, FUss</p>
</blockquote>

<p>Now <code>replaceAll(""A-Z|ss$"", ""SS"")</code> replaces the last occurrence of ""ss"" with ""SS"", hence your final result looks like this :</p>

<blockquote>
  <p>Klasse, STRAssE, FUSS</p>
</blockquote>

<p>To get your <strong>expected result</strong> try this out : </p>

<pre><code>String replaceUml = str.replaceFirst(""ß"", ""ss"").replaceAll(""ß"", ""SS"");
</code></pre>
"
"28057410","<p><code>read()</code> dives quickly into native code so yes probably need to go native to block at that level. Alternatively you may want to consider logging a stack trace at 
the point in your code before or after <code>read()</code>. </p>

<p>Something like:</p>

<pre><code>log ( ExceptionUtils.getStackTrace(new Exception()) );
</code></pre>

<p>ExceptionUtils doco is here: <a href=""https://commons.apache.org/proper/commons-lang/javadocs/api-3.1/org/apache/commons/lang3/exception/ExceptionUtils.html"" rel=""nofollow"">https://commons.apache.org/proper/commons-lang/javadocs/api-3.1/org/apache/commons/lang3/exception/ExceptionUtils.html</a></p>
"
"28587047","<p>If you work with a maven project, try adding this to your pom.xml</p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;xmldb&lt;/groupId&gt;
    &lt;artifactId&gt;xmldb-api&lt;/artifactId&gt;
    &lt;version&gt;20021118&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p>Be aware that the <a href=""http://mvnrepository.com/artifact/xmldb/xmldb-api"" rel=""nofollow"">release date</a> is 2002.</p>

<p>Otherwise you can query exist-db via XML-RPC</p>
"
"28593326","<p>There are several solutions:</p>

<p>A different way of using your approach might be to use a <code>switch</code> statement.</p>

<pre><code>    for (int i = 0; i &lt; strInput.length(); i++)
    {
      cur = strInput.charAt(i)
      switch (cur){
          case 'あ': ... 
              break;
          case 'a': ...   
              break;
          case 'c': ...    
              break;
          ...
    }
    System.out.println(strChanged);
</code></pre>

<p>Switch statements are often a good alternative to long if/else trains. Read more here: <a href=""http://docs.oracle.com/javase/tutorial/java/nutsandbolts/switch.html"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/java/nutsandbolts/switch.html</a></p>

<p>A more readable solution would be to use the <code>String.replaceAll()</code> method for each case. The drawback to this is the runtime would be slower. A thousand lines is small enough to not make a significant difference, but it is important to keep these limitations in mind. In addition, if you replace 'あ' with 'a' then 'a' with 'aa', you might accidentally get the wrong results. Write tests!</p>
"
"18262109","<p>Its not really good programming practice, but you can create a class with 3 public data members, and have your code look something like this. (Ill call the class ""myclass"")</p>

<pre><code>public a, b, c = null;

//And then your main class would look something like this
if (condition){
  myclass.a=whatever;
}
else if (condition){
  myclass.b=whatever;
}
else if (condition){
  myclass.c=whatever
 }
</code></pre>

<p>Then you would need another control structure that said something along the lines of
if (myclass.datamember!=null) to make sure you have values in the class data members.  Again, this is not good programming practice, but it will work for what you want.</p>
"
"18258935","<p>You are accessing currentPos twice, and providing no guarantee that it is not updated in between those two accesses.</p>

<p>For example:</p>

<ol>
<li>x = 10, y = 11</li>
<li>worker thread evaluates p.x as 10</li>
<li>main thread executes the update, now x = 11 and y = 12</li>
<li>worker thread evaluates p.y as 12</li>
<li>worker thread notices that 10+1 != 12, so prints and exits.</li>
</ol>

<p>You are essentially comparing <em>two different</em> Points.</p>

<p>Note that even making currentPos volatile won't protect you from this, since it's two separate reads by the worker thread.</p>

<p>Add an</p>

<pre><code>boolean IsValid() { return x+1 == y; }
</code></pre>

<p>method to your points class.  This will ensure that only one value of currentPos is used when checking x+1 == y.</p>
"
"18361448","<p>The JLS does specify that the String class must follow the String API. The String API has methods <code>int length()</code> and <code>char[] toCharacterArray()</code> which can only work if the number of chars in the String is less than or equal to <code>Integer.MAX_VALUE</code>, which is <code>2^^31 - 1 = 2147483647</code>. This would take about 4 GB of memory as a character array (2 bytes per char). This is the only hard limit imposed by the language. In practice you we are usually limited by memory.</p>
"
"18424818","<p>Well, that's not really that hard. Simply download MYSQL Connector, add it to your path and then fire a PreparedStatement on it, as in : </p>

<pre><code>Class.forName(""com.mysql.jdbc.Driver"");
Connection connect = DriverManager
      .getConnection(""jdbc:mysql://localhost/dbname?""
          + ""user=myusername&amp;password=mypassword"");
PreparedStatement preparedStatement = connect
      .prepareStatement(""select * from employees"");
 ResultSet resultSet = preparedStatement.executeQuery();

while (resultSet.next()) {
  //display text
}
preparedStatement.close();
connect.close();
</code></pre>

<p>You can then do something like a resultSet.getString() or so to get the value required and them cast them into whatever you want, in case there are too many columns and the Tables are volatile. If they aren't, then you can use getInteger(), getDouble() etc.</p>

<p>Look up more over here: </p>

<p><a href=""http://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html</a>
<a href=""http://docs.oracle.com/javase/6/docs/api/java/sql/ResultSet.html"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/sql/ResultSet.html</a></p>

<p>Now, you can use a hashing strategy to hash i.e. mask your password. You can have this code in another package that you current code links to to obtain the values.</p>

<p><a href=""https://crackstation.net/hashing-security.htm"" rel=""nofollow"">https://crackstation.net/hashing-security.htm</a></p>
"
"28596894","<p>From what it looks like your problem lies here</p>

<pre><code>public double getGas()
{
double mpg;
double distance;
distance = drive;
mpg = gas * milesPerGallon / distance;
return gas;
}
</code></pre>

<p>you are doing a calculation to mpg however you are returning the gas property at the end. </p>

<p>It doesn't actually seem like you are changing the value of gas anywhere except for when you first add it.</p>
"
"28074031","<pre><code>import java.util.Scanner;

public class ArrAvg {

public static void main(String[] args) {

    int a[] = {1,2,3,4,5,6,7,8,9,10};
    int occur = 0;
    double sum = 0;
    double avg = 0;

    for (int i = 0; i &lt; a.length; i++) {

        if (a[i] == 4) {
            occur++;
        }
    }
    for (int i = 0; i &lt; a.length; i++) {

        if (a[i] != 4) {
            sum =  sum + a[i];
        }
    }
    System.out.println(avg = sum / (a.length-occur));

    }

}
</code></pre>
"
"18262058","<p>You could use an object to synchronize the writes and reads. Otherwise, as others said before, a write to currentPos will occur in the middle of the two reads p.x+1 and p.y.</p>

<pre><code>new Thread() {
    void f(Point p) {
        if (p.x+1 != p.y) {
            System.out.println(p.x+"" ""+p.y);
            System.exit(1);
        }
    }
    @Override
    public void run() {
        while (currentPos == null);
        while (true)
            f(currentPos);
    }
}.start();
Object sem = new Object();
while (true) {
    synchronized(sem) {
        currentPos = new Point(currentPos.x+1, currentPos.y+1);
    }
}
</code></pre>
"
"28246383","<p>You may use double brace initialization like so:</p>

<pre><code>Map&lt;String,Object&gt; map = new HashMap&lt;String,Object&gt;() {
 {
    put(""circle"", new Circle());
 }
};
</code></pre>
"
"28100467","<p>make the part u want to replace in separate variable</p>

<pre><code> String a = ""#thispartneedstogo#"";
    String s = ""anythingelsecanremain"";

    s = s+a;
// to replace
    System.out.println(s.replace(""#thispartneedstogo#"");
// to add
    System.out.println(a.concat(s));
</code></pre>
"
"18440567","<p>Without using a loop following code should work:</p>

<pre><code>String s = ""\""111 \"" \"" 222\"" \"" 333\"" \""4"";
// s.replaceAll(""[^\""]+"", """").length() gives count of "" in String
if (s.replaceAll(""[^\""]+"", """").length() % 2 == 1) {
    int i = s.lastIndexOf('""');
    s = s.substring(0, i) + ""\\\"""" + s.substring(i+1);
}
System.out.println(s); // ""111 "" "" 222"" "" 333"" \""4
</code></pre>
"
"28246534","<pre><code>import java.util.HashMap;

abstract class GeometricObject
{   
     HashMap&lt;String, Object&gt; shapes;
     {shapes = new HashMap&lt;String,Object&gt;(){{
         put(""Circle"", new Circle());
         put(""Square"", new Square());
     }};}
}
</code></pre>
"
"28648596","<p>use below as part of choice based exception strategy for your flow<br>
<code>&lt;choice-exception-strategy&gt;
&lt;catch-exception-strategy when=""#[exception.causedBy(java.lang.Exception)]"" doc:name=""Catch Exception Strategy""&gt;
&lt;vm:outbound-endpoint path=""generalErrorHandler"" exchange-pattern=""one-way"" /&gt;
&lt;/catch-exception-strategy&gt;&lt;/choice-exception-strategy&gt;</code></p>
"
"28276650","<p>change this</p>

<pre><code>for(int i = 0; i &lt; lenEncode; i++)
</code></pre>

<p>{...</p>

<p>with this</p>

<pre><code>for(int count = 0; count &lt; lenEncode-1; count+=10)
</code></pre>

<p>{...</p>
"
"28229836","<ol>
<li><p>The variable you use for your <code>switch</code> isn't the same variable you've declared.  Fix the casing on <code>x</code>.</p></li>
<li><p><code>default</code> <em>should</em> be the last option in your <code>switch</code> statement. It's good practice to do it that way, as it's conventionally the last branch that you want to execute.</p></li>
<li><p>You haven't placed a <code>break</code> in any of your <code>case</code> statements.  Simply put - if you do not place a <code>break</code> in your <code>case</code>, the subsequent <code>case</code> gets executed.  You need that abrupt return to help control what gets printed out.</p>

<p>The above exists so that one could do fall-through cases; if you have two values that should go down the same branch, you could express them as thus:</p>

<pre><code>case 2:
case 3:
    System.out.println(""Number is prime and less than 5"");
    break;
</code></pre>

<p>Immediately after any of your case statements, place a <code>break</code> after it.  Otherwise your prints won't look right.</p></li>
</ol>
"
"18349485","<p>If you're only allowed to append, you are probably supposed to be using recursion:</p>

<pre><code>String toBinaryString(int num)
{
    StringBuilder sb = new StringBuilder();
    if (num &gt; 1)
    {
        sb.append(decimalToBinary(num/2));    // or num &gt;&gt; 1
    }
    sb.append((num &amp; 1));
    return sb.toString();
}
</code></pre>

<p>Not the world's most efficient code, but you did specify both <code>StringBuilder</code> and append only. Handling of negative numbers left as an exercise for the reader.</p>
"
"28307778","<pre><code>    public class  Sentence {                                                                   
     private static String[] words = new String[]{""Hello"", ""name"", ""is"", ""Bob""};

     public static String shortest(){                       
      int shortestelement = 0;                    
      String shortest ="""";                        
      for(int i = 0; i&lt;words.length;i++) {         
        if(shortest.length()&lt;=words[i].length())
            shortest=words[i];
      }  

    public static void main(String[] args) {                 
     System.out.println(""Shortest word""+Sentence.shortest());
    }
  }
</code></pre>

<p>Basically you where missing some block endings and you referenced your class incorrectly</p>
"
"18506386","<p><code>super</code> can be used to call your direct parent class .</p>

<p>May be you can design a <code>class B</code> function such that the super would call <code>class A</code> . Now you can use <code>class C</code> to achieve the desired result .</p>
"
"18432332","<p>In case you meant javascript instead of java:</p>

<pre><code>var iframe = document.getElementById(""I1"");
var src = iframe.getAttribute(""src"");
alert(src); //outputs the value of the src attribute
</code></pre>
"
"28249321","<p>Use multiple attribute in the select tag</p>

<pre><code>&lt;form action=""servlet"" method=""post""&gt;
    &lt;select name=""prodnd"" multiple&gt;
        &lt;option value=""Andorra""&gt;Andorra&lt;/option&gt;
        &lt;option value=""Antarctica""&gt;Antarctica&lt;/option&gt;
        &lt;option value=""Bulgaria""&gt;Bulgaria&lt;/option&gt;
    &lt;/select&gt;
    &lt;input type=""submit""&gt;
&lt;/form&gt;
</code></pre>
"
"18432359","<pre><code> src=""(.*?)""
</code></pre>

<p>The regular expression will match <code>src=""report.htm?view=country=us""</code>, but you will find only the part between the <code>""</code> in the first (and only) submatch.</p>

<p>When you only want to match src-attributes when they are in an iframe, do this:</p>

<pre><code>&lt;iframe.*?src=""(.*?)"".*?&gt;
</code></pre>

<p>but there are certain corner-cases where this could fail due to the inherently non-regular nature of HTML. See the top answer to <a href=""http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454"">RegEx match open tags except XHTML self-contained tags</a> for an amusing rant about this problem.</p>
"
"18357045","<p>I'm assuming that you're looking for a Java answer...</p>

<p>This will do what you want in a single line, but it still does looping in the background. As far as I know, there is not a way to cast an array without some degree of looping taking place somewhere</p>

<pre><code>ByteBuffer.wrap(bytes).asDoubleBuffer().array();
</code></pre>
"
"28331325","<p>Your TextView should persist the number that you had before. If you were setting these values in the onResume() method, then they would change every time the activity resumes. If you terminate your activity with a call to finish (while calling B) and then start a new activity A again (from B), then it will show a random number</p>

<p>If you have to do either of the methods I mentioned, you can add the values you want to persist in an intent as an extra, pass this to the second activity and then pass it back like so:</p>

<pre><code>// Start activity B and pass the value you want to save in there
Intent A = new Intent(this, ActivityB.class);
A.putExtra(""value"", number);

// Start activity A from B and pass the value you saved in there
Intent B = new Intent(this, ActivityA.class);
B.putExtra(""value"", getIntent().getExtra(""value"");
</code></pre>

<p>Then retrieve number and set the TextView in your onResume (or onCreate if you are starting a fresh activity. But in this case do a check to see if the intent starting this activity has an extra named value - if yes, then display it else generate a new random number).</p>
"
"18440558","<p>You would need to use iterator explicitly for that to work. Example:</p>

<pre><code> Iterator&lt;String&gt; iter = li.iterator();
   while(iter.hasNext()){
    if(iter.next().equalsIgnoreCase(""some value""))
      iter.remove();
    }
   }
</code></pre>

<p>More info here: <a href=""http://www.coderanch.com/t/233932/threads/java/deal-Concurrent-Modification-Exception"" rel=""nofollow"">http://www.coderanch.com/t/233932/threads/java/deal-Concurrent-Modification-Exception</a> but just google the exception and you will find lots of examples.</p>
"
"18527080","<p>Try,</p>

<pre><code>int retval = Double.compare(nextArea, smallestArea);

if(retval &lt; 0)
{
  System.out.println(""smallestArea is greater than nextArea"");
  smallest = next;
}
</code></pre>
"
"18532857","<p>Following is a sample method to read data from file.<br> Here after reading each line is added in to an arraylist and the arraylist is returned.</p>

<pre><code>public ArrayList&lt;String&gt; fileRead(String fileName){
        File           f;
        String         s;
        FileReader     fr = null;
        BufferedReader br = null;
        ArrayList&lt;String&gt;   sl = new ArrayList&lt;String&gt;();
        try {
            f  = new File(fileName); 
            fr = new FileReader(f);
            br = new BufferedReader(fr);
            while((s=br.readLine())!=null){
                sl.add(s);
            }
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }finally{
                try {
                    if(br!=null)
                        br.close();
                    if(fr!=null)
                        fr.close();
                } catch (IOException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
        }
        return sl;
    }
</code></pre>
"
"28333675","<p>Do you mean something like this???</p>

<h1>Code</h1>

<pre><code> private LinkedList&lt;String&gt; list = new LinkedList&lt;&gt;();

    private void fillList() {
        for (int i = 0; i &lt; 10; i++) {
            list.add(""Hello "" + i);
        }
    }

    private void removeAllRandomly() {

        Random random = new Random();

        while (!list.isEmpty()) {
            int randomPosition = random.nextInt(list.size());
            String s = list.remove(randomPosition);
            System.out.println(String.format(""Item on position: %s (%s) was removed"", randomPosition, s));
        }

    }
</code></pre>

<hr>

<h1>Result</h1>

<pre><code>Item on position: 9 (Hello 9) was removed
Item on position: 1 (Hello 1) was removed
Item on position: 1 (Hello 2) was removed
Item on position: 2 (Hello 4) was removed
Item on position: 5 (Hello 8) was removed
Item on position: 0 (Hello 0) was removed
Item on position: 3 (Hello 7) was removed
Item on position: 1 (Hello 5) was removed
Item on position: 1 (Hello 6) was removed
Item on position: 0 (Hello 3) was removed
</code></pre>
"
"18533357","<p>the key point is you use wrongly the BufferedReader, if you use the FileReader like</p>

<pre><code>new FileReader( filename ) 
</code></pre>

<p>here the filename is the file path like ""./data/myfile.txt"". the ecplise or the compilier will not give a compiling error or warning, however, this is a fatal error that will lead to read nothing from the file if you then use readLine().
the correct way like this:</p>

<pre><code>BufferedReader csv =  new BufferedReader(new FileReader( new File(""filename"") ) )
csv.readLine()
</code></pre>

<p>I tried your file, and find that your file format is wrong. your file format is follow: a 00098529 0 0 every string is separated by space but not tab, so when you use split(""\t"") you get nothing. given your file format, you should use split("" "") or you should change your file format by dividing each string with tab </p>
"
"28377861","<p>I would use the Modulus operator for this use case.</p>

<pre><code>public class SumAndAverageForLoop {

    public void SumAndAverageForLoop() {
        double sum = 0;
        for (double i = 1; i &lt;=100; i++){
            if((i % 7) == 0){
                sum+= i;
            }

        System.out.println (""the average is "" + sum/100);

        System.out.println (""the sum is "" + sum);

    }

}
</code></pre>
"
"18489542","<p>you can try this here you will have Map reference inside Map object</p>

<p>public class GenericTest {</p>

<pre><code>void fun(){
    Map&lt;Integer, Map&lt;Integer, Integer&gt;&gt; mmap = new HashMap&lt;Integer, Map&lt;Integer, Integer&gt;&gt;();

    Map&lt;Integer, Integer&gt; map = new HashMap&lt;Integer, Integer&gt;();

    mmap.put(5,map);
}
</code></pre>

<p>}</p>
"
"28367896","<p>If you need the elements that you are receiving to be ordered, then your method should receive a List and not a Set. But in order to get rid of the warning, you would have to use Set and not LinkedHashSet. It is good practice to use interfaces and not actual classes in your methods. You shouldn't expose actual implementations of an interface.</p>

<p>Also, if all you need is to iterate through the elements of the Set, you could receive an Iterator, and just iterate through it.</p>

<p>EDIT: If you really want to ensure that you only receive a LinkedHashSet, you can do something like this:</p>

<pre><code>public void setFileNames(Set&lt;String&gt; fileNames) {
   if (!(fileNames instanceof LinkedHashSet)) {
      throw new IllegalArgumentException(""I need a LinkedHashSet!"");
   }
}
</code></pre>

<p>EDIT 2: I don't think there is an ideal answer here, but if you do really need above all things receive a LinkedHashSet, I would declare it in the interface and find a way to make Sonar to ignore that specific instance of that warning.</p>
"
"18438115","<pre><code> "" Has Been Enabled!"");
</code></pre>

<p>instead of </p>

<pre><code> ("" Has Been Enabled!"");
</code></pre>
"
"18564488","<p>You can't do that on java, but you can get all items inside the button's container and setting text ""0"" that way.</p>

<p>For example:</p>

<pre><code>public void initializeButtons(Container container) {
    Component[] components = container.getComponents();
    for (Component component : components) {
        //If you're using JButton, if not, change the type. This only asks if the component's
        //type is a button. You could add another clause if the buttons have something else special
        if(!(component instanceof JButton)){ //If the component is not a button we skip it.
            continue;
        }
        ((JButton)component).setText(""0"");
    }
}
</code></pre>

<p>That way you could add other actions to all buttons in the same way.</p>
"
"28842594","<p>You have to use FileWriter with append mode true. Try to use the following code snippet -  </p>

<pre><code>FileWriter fw = new FileWriter(filename,true);  
</code></pre>

<p>Have a look at <a href=""http://docs.oracle.com/javase/7/docs/api/java/io/FileWriter.html#FileWriter%28java.lang.String,%20boolean%29"" rel=""nofollow"">FileWriter</a> javadoc for more details.   </p>

<p>Hope it will help.
Thanks a lot.</p>
"
"28381685","<pre><code>String word;
Scanner myinput = new Scanner(System.in);

System.out.println(""Please enter a word."");
word = myinput.next();
char[] wordc = word.toCharArray();

int vowel = 0;
int consonant = 0;
for(int w = 0;w &gt; word.length();w++;) {
  if(wordc[w] == 'a' || wordc[w] == 'e' || wordc[w] == 'i' || wordc[w] == 'o' || wordc[w] == 'u') {
 vowel++;
  }else{
 // else the Word is Consonant
    consonant++;
}
</code></pre>

<p>Try this: 
There are only two cases right now...
One Word would be vowel or consonant. So the else statement will work here. </p>
"
"28393324","<p>In the loop check it out this way:</p>

<pre><code>boolean isPalin = true;
for ( int i = 0; i &lt; theWord.length( )/2; i++ ) { // loop goes till half since no need to check after that
     if ( !(theWord.charAt(i) == theWord.charAt (theWord.length() - 1 - i)) ) { // will check each letter with each end letter
         isPalin = false;
         break;
     }
}
return isPalin;
</code></pre>

<p>Another things to add - </p>

<p>1 -<strong>firstPointer  secondPointer</strong> are local variables to isPalindrome</p>

<p>2 - When u have decalared theWord as global variable there doent seems a need to pass it. You can use it within the same class.</p>

<p>3 - theWord in main(String[] theWord) would require you to provide input as arguments, it better you go for console input at runtime.</p>

<p>4 - In main you should split each word and pass it to isPalindrome. In your code you are not calling isPalindrome to check anywhere.</p>
"
"28847173","<p>It seems that you need to re-assign to the string builder after appending to it. Try replacing <code>sb.append(s + s2)</code> by <code>sb = sb.append(s + s2)</code></p>
"
"28879231","<p>list returns a string array.</p>

<p>so if you specify a correct file URI then it should work.  </p>

<pre><code>import java.io.*;

public class f1
{
    public static void main(String args[]){
        try
        {
            File f = new File(""test"");
                    System.out.println(f.exists());
                    System.out.println(f.isDirectory());
                    System.out.println(f.isFile());
                    System.out.println(f.list());


                    for (int i = 0; i &lt; f.list().length; i++)
                    {
                        System.out.println(f.list()[i]);
                    }
        }
        catch(Exception e){

        }
    }
}
</code></pre>
"
"28490669","<p>To randomly select a quote:</p>

<pre><code>int randomNum = (int)(Math.random()*(quoteList.size() - 1));
Quote randomQuote = quoteList.get(randomNum);
</code></pre>
"
"28490674","<pre><code>String yourString = quoteList[new Random().nextInt(quoteList.length)];
</code></pre>
"
"18484949","<p>How about encapsulating it in:</p>

<pre><code>public void myMethod()
{
  ... your code...
}
</code></pre>

<p>and then looping:</p>

<pre><code>while (true)
  myMethod();
</code></pre>

<p>That should do it :)</p>
"
"28533481","<p>Replace your for loop with:</p>

<pre><code>System.out.println(letters.toUpperCase());
</code></pre>
"
"28521974","<p>The easy way to do this is with <code>java.beans.Expression.</code> It contains all the same type logic as the compiler. Just execute a string expression of the form <code>""new MyClass""</code> and supply the object array as the parameters. The value of the Expression is the new object. Doing it manually isn quite difficult as you have to take care of primitives and base classes for every parameter.</p>
"
"28531266","<p>Th only rule is that <strong>overloaded methods have to have the same name and different argument types from the JVM perspective</strong>, e.g. you cannot have the following 2 methods:</p>

<pre><code>public int methodA(int... array);
public void methodA(int[] array);
</code></pre>

<p>Does not matter on visibility modifiers or return types.</p>
"
"28958378","<p>simple arraylist example for insertion at specific index.</p>

<p>Following is the declaration for java.util.ArrayList.add() method.</p>

<blockquote>
  <p>public void add(int index, E element)</p>
</blockquote>

<p>Example</p>

<p>The following example shows the usage of java.util.ArrayList.add(index,E) method.</p>

<blockquote>
  <p>package com.tutorialspoint;</p>
  
  <p>import java.util.ArrayList;</p>
  
  <p>public class ArrayListDemo {    public static void main(String[] args)
  {</p>

<pre><code>// create an empty array list with an initial capacity
ArrayList&lt;Integer&gt; arrlist = new ArrayList&lt;Integer&gt;(5);

// use add() method to add elements in the list
arrlist.add(15);
arrlist.add(22);
arrlist.add(30);
arrlist.add(40);

// adding element 25 at third position
arrlist.add(2,25);

// let us print all the elements available in list
for (Integer number : arrlist) {
  System.out.println(""Number = "" + number);
}     } }
</code></pre>
  
  <p>Let us compile and run the above program, this will produce the following result</p>
</blockquote>

<p>Output:-</p>

<blockquote>
  <p>Number = 15 Number = 22 Number = 25 Number = 30 Number = 40</p>
</blockquote>
"
"18628323","<p>read the elements of the array in a loop and then print it inside the loop</p>

<pre><code>&lt;select&gt; 
&lt;%
for(int i=0; i&lt;arr.size(); i++){
&lt;option value=""&lt;%= arr[i]%&gt;""&gt;&lt;%= arr[i]%&gt;&lt;/option&gt;
} 
%&gt;
&lt;/select&gt;
</code></pre>
"
"28593439","<p>If I'm not mistaken, the log N part comes from this part:</p>

<pre><code>for(int i = 0; i &lt; count; i++){
    if(a[i] == rand) isSame = true;
}
</code></pre>

<p>Notice that I changed <code>n</code> for <code>count</code> because you know that you have only <code>count</code> elements in your array on each loop.</p>
"
"28977941","<p>There's no such method in C++ for <code>std::vector</code>. One way to do that, that has very good runtime, unlike other suggested implementations, is to convert the second collection into a <code>std::set</code> or <code>std::unordered_set</code>, and iterate over the first vector, keeping only the elements that do not belong to the set, something along the lines of:</p>

<pre class=""lang-cpp prettyprint-override""><code>template &lt;class T&gt;
void removeAll(std::vector&lt;T&gt;&amp; in, const std::vector&lt;T&gt;&amp; removeWhat) {
    std::set&lt;T&gt; st(removeWhat.begin(), removeWhat.end());
    size_t newSize = 0;
    for (size_t i = 0; i &lt; in.size(); ++ i) {
        if (0 == st.count(in[i])) {
            in[newSize ++] = in[i];
        }
    }
    in.resize(newSize);
}
</code></pre>

<p>But this only works if your <code>T</code> has an operator <code>&lt;</code> overloaded (requirement of <code>std::set</code>). It is for ints, so it will work in your particular case. </p>
"
"18568645","<p>Use a BigDecimal set set the scale to 0</p>

<pre><code>BigDecimal a = new BigDecimal (""2.1"");
a.setScale(0, BigDecimal.ROUND_HALF_EVEN).toString() // =&gt; 2
</code></pre>
"
"28656024","<p>You are doing well. Unfortunately there is no way to create strongly typed method that can deal with both collection and array. </p>

<p>(You can create method that accepts <code>Object</code> and then examine it using <code>instanceof</code>, cast and deal with both collection and arrays but this solution is ugly.)</p>
"
"28622770","<p>Your brackets are not formatted correctly.  You have an extra curly bracket above `public static void CardDeck().</p>

<p>Fixed code:</p>

<pre><code>import java.util.Random;


public class Deck {

    public static void main(String args []){
        // mah lovely arrays ^.^


        CardDeck();

        Random random = new Random();
        for(int q = 0;q&lt;52;q++){
        int rand = random.nextInt(52);

        }
    }

    public static void CardDeck(){

           final String[] deckSuit = new String[52];
            String[] deckKind = new String[52];
               int[] deckValue = new int[52];

            String spade = ""Spades"";
            String diamond = ""Diamonds"";
            String heart = ""Hearts"";
            String club = ""Clubs"";



            // set the respective suits
            for(int q = 0;q&lt;13;q++){
                deckSuit[q] = spade;
            }
            for(int q = 13;q&lt;26;q++){
                deckSuit[q] = diamond;
            }
            for(int q = 26;q&lt;39;q++){
                deckSuit[q] = heart;
            }
            for(int q = 39;q&lt;52;q++){   
                deckSuit[q] = club;
            }
            // set the kind of card
            for(int q = 0;q&lt;52;q+=13){
                deckKind[q] = ""Two"";
                deckKind[q+1] = ""Three"";
                deckKind[q+2] = ""Four"";
                deckKind[q+3] = ""Five"";
                deckKind[q+4] = ""Six"";
                deckKind[q+5] = ""Seven"";
                deckKind[q+6] = ""Eight"";
                deckKind[q+7] = ""Nine"";
                deckKind[q+8] = ""Ten"";
                deckKind[q+9] = ""Jack"";
                deckKind[q+10] = ""Queen"";
                deckKind[q+11] = ""King"";
                deckKind[q+12] = ""Ace"";
            }

            for(int q = 0;q&lt;52;q+=13){
                deckValue[q] = 2;
                deckValue[q+1] = 3;
                deckValue[q+2] = 4;
                deckValue[q+3] = 5;
                deckValue[q+4] = 6;
                deckValue[q+5] = 7;
                deckValue[q+6] = 8;
                deckValue[q+7] = 9;
                deckValue[q+8] = 10;
                deckValue[q+9] = 10;
                deckValue[q+10] = 10;
                deckValue[q+11] = 10;
                deckValue[q+12] = 11;
            }


            //display all the cards
            for(int q = 0;q&lt;52;q++){

                System.out.println(""[""+deckSuit[q]+"", ""+deckKind[q]+"", ""+deckValue[q]+""]"");
                }   

        //declare ye methods here
        }

}
</code></pre>
"
"18584779","<p>Since <code>query.list()</code> returns <code>List</code>, and here you are casting the content of the list to type <code>User</code>, Now, as exception says <code>Object can not be cast to User</code>. Please make sure, are you getting the content in form of user.</p>

<p>You can make a check:</p>

<pre><code> if(query.list() instanceOf User){
        // can cast to user.
 }else{
        // can not cast to User.
 }
</code></pre>
"
"18735302","<p>You are trying to allocate 4byte*100*100*100 ~ 2MB of <strong>consecutive</strong> memory from JVM which is quite huge. Instead try creating object with three float attributes. You can initilize attibutes with whatever value you want.</p>

<pre><code>class Node{
private float u =0;
private float v =0;
private float l =0;
}
</code></pre>
"
"28683828","<p>I'm not sure what you're doing there. Why are you trying to create an object and then assign it to a field? Why save it if it can be overwritten by other call to <code>makeStuff</code>? It seems like you use UseStuff both as an proxy and as a factory to your actual <code>Stuff</code> model object. You better separate the two:</p>

<pre><code>public class StuffFactory {
  public static Stuff createStuff(int value) {
    return new StuffProxy(value);
  }
}

public class StuffProxy extends Stuff {
   // Replacement for useStuff from your original UseStuff class
   @Override 
   public int getX() {
     //Put custom logic here
     return super.getX();
   }
}
</code></pre>

<p>The logic here is that each thread is responsible for creation of their own Stuff objects (using the factory) so concurrent access no longer an issue.</p>
"
"29041665","<p>You can use StringUtils from apache commons lang.</p>

<pre><code>String s=""+9851452;;FERRARI;;"";
Arrays.toString(StringUtils.splitPreserveAllTokens(s, "";""))
</code></pre>
"
"18591660","<p>It looks like <code>Maven Builder</code> is getting invoked from Eclipse, which is inturn populating files again. I guess you can try disabling Maven builder and Maven nature for your project in eclipse to see if it solves problem.</p>

<p>To disable Eclipse Maven builder this go to </p>

<pre><code>Eclipse Project Properties -&gt; Builders -&gt; Maven builder
</code></pre>

<p>Disabling eclipse maven nature
<img src=""http://i.stack.imgur.com/qIPu6.png"" alt=""enter image description here""></p>

<p>All I am saying is problem is due to eclipse-maven integration and not maven</p>
"
"18612911","<p>It should be <code>A objA = new A();</code></p>

<ul>
<li><strong>By doing this, you are invoking the constructor of class <code>A</code> which
creates the object of class <code>A</code> and assigns the reference variable
<code>objA</code> to it</strong>.</li>
<li>Also, <code>objA.setvarA(name);</code>. You missed semicolon here.</li>
<li>change your <code>string</code> to <code>String</code>. java is case sensitive.<code>String</code> is a class.</li>
<li>change <code>this.varA=var.A;</code> to <code>this.varA = varA;</code></li>
<li>Missing semi colon here <code>String name = ""abc""</code>. Change to <code>String name = ""abc"";</code></li>
<li>You have put extra semi colon in setter method. Please correct that.</li>
<li><p>Also, you need to call the method from some init block or constructor or a method</p>

<p><code>B() {
        objA.setvarA(name);
    }</code></p></li>
</ul>
"
"28794404","<p>How about the following algorithm (given in pseudocode)</p>

<pre><code>iterate over elements:
   pick one of the element at random 
   call function again on the remaining elements
   if elements.size == 1 
       return or print
</code></pre>

<p>This should produce a valid permutation at each run. If you want all possible permutations, just accumulate as you iterate, then you should have all permutations. </p>
"
"28794627","<p>Another approach:</p>

<pre><code>static ArrayList&lt;ArrayList&lt;Integer&gt;&gt; getPermutation(ArrayList&lt;Integer&gt; ints) {
    if (ints.size() == 1) {
        ArrayList&lt;ArrayList&lt;Integer&gt;&gt; list = new ArrayList&lt;&gt;();
        list.add(ints);
        return list;
    } else {
        ArrayList&lt;ArrayList&lt;Integer&gt;&gt; list = new ArrayList&lt;&gt;();
        for (Integer i: ints) {
            ArrayList&lt;Integer&gt; subList = new ArrayList&lt;&gt;(ints);
            subList.remove(i);
            ArrayList&lt;ArrayList&lt;Integer&gt;&gt; subListNew = getPermutation(subList);
            for (ArrayList&lt;Integer&gt; _list: subListNew) {
                ArrayList&lt;Integer&gt; local = new ArrayList&lt;&gt;();
                local.add(i);
                local.addAll(_list);
                list.add(local);
            }
        }
        return list;
    }
}
</code></pre>

<p>This method first selects an element, removes it and obtains a sub-list, then produces a permutation of the sub-list until the list size becomes 1.</p>
"
"18717204","<p><code>a</code> and <code>b1</code>, and the return value of <code>getB1</code>, are numbers, and <code>01</code> and <code>1</code> are the same number, namely one. If you want the zero to be preserved, you could change them into strings, but then you cannot do calculations with them anymore.</p>
"
"18784935","<p>It depends. The question is not clear enough to give a yes/no answer in my opinion.</p>

<p>If the application somehow exposes the variable then, naturally, other applications can just ask to get the value. But this is unlikely what the question was supposed to target. But keep it in mind. In interviews, I found it always good to prove that you can think critically and outside of the box.</p>

<p>I guess they wanted to see if you had grasped the concept of static variables and <code>ClassLoader</code>s. A Java application is dynamically linked which means that at runtime, a <code>ClassLoader</code> (which depends on the application) will perform the linking, loading all libraries or delegating the loading. Static variables are referred to by class. If you try to access a static variable, the class' <code>ClassLoader</code> will try to find and load the class. As each application has its own <code>ClassLoader</code>, each application has its own set of variables.</p>

<p>This is not unlike the principle of separation of address space found in older languages. An application runs in a separate address space even if it is hosted by the same machine. Therefore, two applications running alongside each other cannot simply address variables in the other application's address space as it would violate a constraint that is enforced by several watchdogs. But beware, address space can be shared explicitly.</p>
"
"28729724","<p>As other people have mentioned, the compiler is good enough to optimize that very simple example, but if you have more complicated functionality (which is probably what you care about), it might not. For example:</p>

<pre><code>String a = ""Tom"";
String b = ""Brady"";
String c = a;
c += b;
</code></pre>

<p>This would result in 3 strings being created.</p>
"
"28862128","<pre><code>public static void main(String[] arguments) {
    int grade = 69;
    if (grade &gt; 90) {
        System.out.println(""Well done you got a A""); 
    } else if (grade &gt;= 85) { 
        System.out.println(""Well done you got a B"");
    } else if (grade &gt;= 75) {
        System.out.println(""You got a C"");
    } else if (grade &gt;= 65) {
        System.out.println(""You got a D"");
    } else if (grade &gt;= 55) {
        System.out.println(""You got a E"");
    }  else {
        System.out.println(""You got a F"");
    }
</code></pre>
"
"18667402","<p>in case you dont know, several if(){} makes the compiler check them in a reverse order, it checks the last if then the if before it then the one before it then so on</p>

<p>unlike if(){}else if(){}</p>

<p>if else makes the compiler check them in the written order, the first one in the code is the first one checked</p>

<p>any way, this is a some kind of reformatted code </p>

<pre><code>// in your Camb class if possible
//...
private boolean nuker = false;
// more code that changes the nuker variable
public static boolean isNuker(){
    return nuker;
}


// in this class
if(Camb.isNuker()){
        whenToStop++;
        byte byte0 = 3;
        checkWhenToStop(whenToStop)
        checkBytes(byte0)
}else{
    whenToStop = 0;
}

public void checkWhenToStop(int whenToStop){
    if(whenToStop &lt; 60){
        mc.thePlayer.setPosition(posX, posY, posZ-1.5);
    }
    if(whenToStop &gt; 60 &amp;&amp; whenToStop &lt; 65){
        mc.thePlayer.setPosition(posX-1.2, posY, posZ);
    }
    if(whenToStop &gt; 65 &amp;&amp; whenToStop &lt; 124){
        mc.thePlayer.setPosition(posX, posY, posZ+1.5);
    }
    if(whenToStop &gt; 124 &amp;&amp; whenToStop &lt; 129){
        mc.thePlayer.setPosition(posX-1.2, posY, posZ);
    }
    if(whenToStop &gt; 129 &amp;&amp; whenToStop &lt; 188){
        mc.thePlayer.setPosition(posX, posY, posZ-1.5);
    }
    if(whenToStop &gt; 188 &amp;&amp; whenToStop &lt; 193){
        mc.thePlayer.setPosition(posX-1.2, posY, posZ);
    }
    if(whenToStop &gt; 193 &amp;&amp; whenToStop &lt; 252){
        mc.thePlayer.setPosition(posX, posY, posZ+1.5);
    }
    if(whenToStop &gt; 252 &amp;&amp; whenToStop &lt; 257){
        mc.thePlayer.setPosition(posX-1.2, posY, posZ);
    }
    if(whenToStop &gt; 257 &amp;&amp; whenToStop &lt; 316){
        mc.thePlayer.setPosition(posX, posY, posZ-1.5);
    }
    if(whenToStop &gt; 316 &amp;&amp; whenToStop &lt; 321){
        mc.thePlayer.setPosition(posX-1.2, posY, posZ);
    }
    if(whenToStop &gt; 321 &amp;&amp; whenToStop &lt; 376){
        mc.thePlayer.setPosition(posX, posY, posZ+1.5);
    }
}

public void checkBytes(byte byte0){
        for(int k = byte0; k &gt; -byte0; k--){
            for(int i1 = byte0; i1 &gt; -byte0; i1--){
                for(int j1 = byte0; j1 &gt; -byte0; j1--){
                    double d1 = mc.thePlayer.posX + (double)k;
                    double d3 = mc.thePlayer.posY + (double)i1;
                    double d5 = mc.thePlayer.posZ + (double)j1;
                    int k1 = (int)d1;
                    int l1 = (int)d3;
                    int i2 = (int)d5;
                    int j2 = mc.theWorld.getBlockId(k1, l1, i2);
                    Block block = Block.blocksList[j2];
                    if(block != null){
                       ((EntityClientPlayerMP)mc.thePlayer).sendQueue.addToSendQueue(new Packet14BlockDig(0, k1, l1, i2, 1));
                       ((EntityClientPlayerMP)mc.thePlayer).sendQueue.addToSendQueue(new Packet14BlockDig(2, k1, l1, i2, 1));
                    }
                }
            }

        }
}
</code></pre>
"
"28874661","<p>You <strong>must</strong> have to use <code>break</code> and <code>continue</code> with loops.</p>

<p>Example : </p>

<pre><code>Outer:
       for(int i=0;i&lt;5;i++)
       {

       }
</code></pre>

<p>Here is complete example with detail for more reference</p>

<p><a href=""http://www.java-examples.com/java-break-statement-label-example"" rel=""nofollow"">http://www.java-examples.com/java-break-statement-label-example</a></p>
"
"28746741","<hr>

<p>To read a char array in C, you first have to inialize the actual array with a limit of how long it can be. Somthing like this:</p>

<pre><code>char str[20];
scanf(""%s"", &amp;str);
</code></pre>

<p>Note the %s format string telling scanf to capture a string, %d is for integers.</p>
"
"28883247","<p>Java IO is fundamentally not changing:</p>

<ul>
<li><strong>BufferedWriter</strong> buffers the writing capabilities,</li>
<li><strong>FileWriter</strong> allows you to write textual data to a file,</li>
<li><strong>OutputStream</strong> allows you to write binary data.</li>
</ul>

<p>You should use something like:</p>

<pre><code>Writer writer = new BufferedWriter(new FileWriter(file, true)); // true to append data
</code></pre>

<p>Or use NIO.2.</p>
"
"18699501","<p>Are you looking for  <code>Arrays.sort(String)</code>?</p>

<p>This class contains various methods for manipulating arrays (such as sorting and searching). This class also contains a static factory that allows arrays to be viewed as lists.</p>

<p><a href=""http://docs.oracle.com/javase/6/docs/api/java/util/Arrays.html"" rel=""nofollow"">http://docs.oracle.com/javase/6/docs/api/java/util/Arrays.html</a></p>
"
"28931690","<p>Ther is a possible solution for your problem</p>

<pre><code>for(Task theTask: tasksToDo){
       if (theTask instanceof TimingTask){
          TimingTask theTimingTask = (TimingTask)theTask;
          //Your treatments for your theTimingTask objects
       }else{
          //If you need other treatments for only the Task objects and your other different objects
       }
    }
</code></pre>
"
"18855784","<p>Are you sure about your approach? You say:</p>

<pre><code>The thread should loop indefinitely until certain event occurs.
</code></pre>

<p>that's an enormous loss of computational resource, the program is principally bound to get slow &amp; fail. You may want to put the thread in wait() mode and catch InterruptedException to wake it up upon occurrence of your event of interest. If this preliminary understanding of what you are trying to accomplish is true then Id' strongly suggest you to revise your approach. Computing resource is expensive, don't waste it in relentless looping.</p>
"
"28796269","<p>I solved it myself with the following code:</p>

<pre><code>public static void readEnvironment() throws IOException {

    List&lt;Integer&gt; all = new ArrayList&lt;&gt;();
    File file = new File(""test.txt"");
    FileReader fr = new FileReader(file);
    BufferedReader br = new BufferedReader(fr);
    String s = br.readLine();

    while (s != null) {
        String[] data = s.split("";"");
        //We know that the second part in a line is the amount for environment:
        int a = Integer.parseInt(data[2]);
        s = br.readLine();
        all.add(a);
    }
    br.close();

    int sum = 0;
    //Invoke the sum method:
    sum = sum(all, 0);
    System.out.println(""Sum for environment: "" + sum);
}
</code></pre>
"
"28954414","<p>So after Leeor suggestions here is a 100% solution</p>

<pre><code>// you can also use imports, for example:
// import java.util.*;
import java.util.Stack;
// you can use System.out.println for debugging purposes, e.g.
// System.out.println(""this is a debug message"");

class Solution {
   public int solution(String s) {

        if (s.length() % 2 != 0) {
            return 0;
        }

        Character openingBrace = new Character('{');
        Character openingBracket = new Character('[');
        Character openingParen = new Character('(');
        Stack&lt;Character&gt; openingStack = new Stack&lt;Character&gt;();

        for (int i = 0; i &lt; s.length(); i++) {
            char c = s.charAt(i);
            if (c == openingBrace || c == openingBracket || c == openingParen) {
                openingStack.push(c);
            } else  {
                if (openingStack.isEmpty()) {
                    return 0;
                }
                Character openingCharacter = openingStack.pop();
                switch (c) {
                case '}':
                    if (!openingCharacter.equals(openingBrace)) {
                        return 0;
                    }
                    break;
                case ']':
                    if (!openingCharacter.equals(openingBracket)) {
                        return 0;
                    }
                    break;
                case ')':
                    if (!openingCharacter.equals(openingParen)) {
                        return 0;
                    }
                    break;

                default:
                    break;
                }
            } 
        }
        if (!openingStack.isEmpty()) {
            return 0;
        }

        return 1;

    }
}
</code></pre>
"
"18739762","<p>There is error in the program, luku is undefined. I have fixed that, run the following code.</p>

<pre><code>import java.util.Scanner;

public class PotenssienSumma {

    public static void main(String[] args) {
        Scanner lukija = new Scanner(System.in);
        System.out.print(""Give a number: "");
        int number = Integer.parseInt(lukija.nextLine());

        int i = 0;
        int sum=(int)Math.pow(2,i);

        while(i &lt;= number) {
            i++;
            sum++;
        }



        System.out.println(""The sum is "" + sum);

    }
}
</code></pre>
"
"28829831","<p>You can use <code>String.split</code></p>

<pre><code>String[] token= testIn.readLine().split("","");
System.out.println(token[1]);
</code></pre>
"
"28833796","<p>It's because of gravity</p>

<pre><code>android:gravity=""center"" 
</code></pre>

<p>You can change it into </p>

<pre><code> android:gravity=""left"" 
</code></pre>
"
"18720222","<pre><code>import java.util.*;

public class Calculator {

    public static void main(String[] args) 
    {
        String s = """";

        // create a new scanner with the specified String Object
        Scanner scanner = new Scanner(s);

        // call the method
        while (scanner.hasNext()) 
        {
            // check if the scanner's next token is an int
            System.out.println("""" + scanner.hasNextInt());

            // print what is scanned
            System.out.println("""" + scanner.next());
        }

        // close the scanner
        scanner.close();
    }
}
</code></pre>
"
"29025932","<pre><code>public void onBackPressed() {
    // Write your code here

    super.onBackPressed();
}
</code></pre>
"
"29026174","<p>Use <code>src.split(""\\s+"");</code> instead of <code>inputSentence.split(""-"");</code></p>

<p>It splits on every <code>\\s</code> which represents every <strong>non-whitespace character</strong>. Result is <strong>array</strong> if elements that were before, between and after that delimiter.</p>

<p>Below is the complete example which you needs.</p>

<p><strong>Example :</strong></p>

<pre><code>public class StringSplit {
    public static void main(String[] args) 
    {
        String src = ""first second third"";
        String[] stringArray = src.split(""\\s+"");

        System.out.println(stringArray[0]);
        System.out.println(stringArray[1]);
        System.out.println(stringArray[2]);
    }
}
</code></pre>

<p>For More details how split(""\s+"") works refer blow stackoverflow post.</p>

<p><a href=""http://stackoverflow.com/questions/22259733/how-exactly-does-string-split-method-in-java-work-when-regex-is-provided"">How exactly does String.split() method in Java work when regex is provided?</a></p>
"
"18815339","<blockquote>
  <ol>
  <li>Change variable declaration:</li>
  </ol>
</blockquote>

<pre><code>List&lt;float[][]&gt; array = Collections.synchronizedList(new ArrayList&lt;float[][]&gt;());
</code></pre>

<blockquote>
  <ol>
  <li>Inside the runnable:</li>
  </ol>
</blockquote>

<pre><code>Iterator&lt;float[][]&gt; values = array.iterator();
while (values.hasNext()) {
        float[][] result = values.next();
        //calculating.

        //after calculating remove the items.
        values.remove();
}
</code></pre>
"
"28847174","<p>You are calling the constructor correctly, but after for loop ends you are again creating a new instance of Polygon and assigning it to ps. Either create an array of int or ArrayList of Integer, and store each instance of Polygon side length in that just before the for loop ends.</p>

<pre><code>ArrayList&lt;int&gt; psListpsSideLengthList = new ArrayList&lt;int&gt;;
for (int i = 1; i &lt;= numSides; i++) {

    System.out.println(""Enter the length of side "" + i);
    side = sc.nextInt();
     psListpsSideLengthList.add(side);

}
</code></pre>
"
"18735765","<p>try this: <code>System.out.println\(.*?\)</code> </p>

<p><a href=""http://jsfiddle.net/vladkras/HgMCb/"" rel=""nofollow"">fiddle</a> for those who doesn't believe (it's written in JS, not Java, but the same pattern will work everywhere)</p>

<p><strong>EDIT</strong> hey, come on, stop downvoting. This regexp: <code>/System\.out\.println\((?&lt;=\().*(?=\))\)/</code> removes all inside matching brackets: <strong><a href=""http://phpfiddle.org/lite/code/s7v-mt0"" rel=""nofollow"">Fiddle</a></strong></p>
"
"18836995","<p>Dont use == on ""Integers"" you are comparing references.<br>
Either unbox into int or use <code>equals(</code></p>
"
"28911544","<pre><code>public boolean verifyUniqueIntegers(int array []){
    Set&lt;Integer&gt; set = new HashSet&lt;&gt;(array.length);
    for (int i : array)
    {
        if (set.contains(i))
            return false;
        set.add(i);
    }
    return true;
}
</code></pre>

<p>or maybe:</p>

<pre><code>public boolean verifyUniqueIntegers(Integer array []){
    return new HashSet&lt;&gt;(Arrays.asList(array)).size() == array.length;
}
</code></pre>
"
"28939305","<p>Have you tried to accept the connection client yet?
By accept method from serverSocket</p>

<pre><code>boolean isStopped = false;
while(!isStopped){
    Socket clientSocket = serverSocket.accept();
</code></pre>
"
"18795087","<p>because you treat every case separately without <code>else if</code> ,so if condition is you override value of a if the if condition is true ,your else if is related to the last if statement , not for all .</p>

<p>I suggest  to concatenate every result to variable <code>a</code> like this to see which conditions are valid: </p>

<pre><code>if (cx &gt;= p1x &amp;&amp; cx &lt;= p2x)
    a += ""Circle is inside of Rectangle \n"";
if (cx &gt;= p1x &amp;&amp; cx &lt;= p2x)
    a += ""Circle is inside of Rectangle\n"";
if (cx+r &gt;= p1x &amp;&amp; cx+r &lt;= p2x)
    a += ""Circle is inside of Rectangle\n"";
if (cx-r &gt;= p1x &amp;&amp; cx-r &lt;= p2x)
    a += ""Circle is inside of Rectangle\n"";
if (cy &gt;= p1y &amp;&amp; cy &lt;= p2y)
    a += ""Circle is inside of Rectangle\n"";
if (cy &gt;= p1y &amp;&amp; cy &lt;= p2y)
    a += ""Circle is inside of Rectangle\n"";
if (cy+r &gt;= p1y &amp;&amp; cy+r &lt;= p2y)
    a += ""Circle is inside of Rectangle\n"";
if (cy-r &gt;= p1y &amp;&amp; cy-r &lt;= p2y)
    a += ""Circle is inside of Rectangle\n"";
else
    a += ""Circle is outside of Rectangle\n"";
</code></pre>

<p>Or if that's not what you want add else if to all your if statements like this : </p>

<pre><code>if (cx &gt;= p1x &amp;&amp; cx &lt;= p2x)
    a = ""Circle is inside of Rectangle"";
else if (cx &gt;= p1x &amp;&amp; cx &lt;= p2x)
    a = ""Circle is inside of Rectangle"";
else if (cx+r &gt;= p1x &amp;&amp; cx+r &lt;= p2x)
    a = ""Circle is inside of Rectangle"";
else if (cx-r &gt;= p1x &amp;&amp; cx-r &lt;= p2x)
    a = ""Circle is inside of Rectangle"";
else if (cy &gt;= p1y &amp;&amp; cy &lt;= p2y)
    a = ""Circle is inside of Rectangle"";
else if (cy &gt;= p1y &amp;&amp; cy &lt;= p2y)
    a = ""Circle is inside of Rectangle"";
else if (cy+r &gt;= p1y &amp;&amp; cy+r &lt;= p2y)
    a = ""Circle is inside of Rectangle"";
else if (cy-r &gt;= p1y &amp;&amp; cy-r &lt;= p2y)
    a = ""Circle is inside of Rectangle"";
else
    a = ""Circle is outside of Rectangle"";
</code></pre>
"
"18963642","<p>Overload default <code>toString</code> method in <code>Coin</code> class. Then in your own <code>toString</code> method loop over <code>coins</code> array and simply</p>

<pre><code>public String toString {
    private String s = """";
    for(int i =0; i &lt; coins.length; i++)
        s += coins(i) + "", "";

    return s
}
</code></pre>

<p>As suggested, if performance is necessary use <code>StringBuilder</code> instead!</p>
"
"18865114","<p><strong>CLASSPATH</strong> is an environmental variable used by Java Virtual Machine to locate the class files(including main class).</p>

<p>Alternatively you can pass <strong>-cp</strong> or <strong>-class-path</strong> as a argument to JVM to specify the class paths where your main class depends on.</p>

<p>For example,</p>

<pre><code>export CLASSPATH=/opt/javatv:/opt/mhp:/opt/main-class;
java MainClass
</code></pre>

<p>(or)</p>

<pre><code>java -cp /opt/javatv;/opt/mhp;/opt/main-class MainClass;
</code></pre>

<p>(or)</p>

<pre><code>java -class-path /opt/javatv;/opt/mhp;/opt/main-class MainClass;
</code></pre>
"
"18804725","<p>I find my solution.
I set <code>android:text=""0""</code> 
and my problem is gone. :))</p>
"
"28942929","<p>I don't see any array or Map in your implementation. You should use either of them in order to count the number of occurrences of each digit efficiently. </p>

<p>It looks like you chose to have a nested loop (not very efficient) and to iterate over the entire number for each digit you are counting the number of occurrences for. </p>

<p>You have some bugs in that logic as well. I think this should work :</p>

<pre><code>int t_siffer = 0;
int original = tall;
for (int siffer=0; siffer&lt;=9; siffer++) { // iterate over the possible digits - 0 to 9
    System.out.println(""Siffer = "" + siffer);
    siffervekt = 0;
    tall = original;
    for (int x=0; x&lt;lengde; x++) { // count the number of times current digit appears
        int asiffer = (tall%10);
        System.out.println(""Asiffer = "" + asiffer);
        if (asiffer == siffer) {
            siffervekt++;
            System.out.println(siffervekt);
        }
        tall = tall/10; 
    }
    if (siffervekt &gt; t_siffervekt) {
        t_siffervekt = siffervekt;
        t_siffer = siffer;
    }
}
System.out.println (""Digit "" + t_siffer + "" appears "" + t_siffervekt + "" times"");
</code></pre>

<p>This should give you the number of occurrences of the digit that appeared the most times (though it won't give you which digit it was).</p>

<p>Instead of this nested loop, you can use an array of 10 integers to count how many times each digit appears in the number. You can do it in a single iteration.</p>

<p>EDIT : modified the code slightly to keep track of which digit appeared the most times.</p>
"
"28942963","<pre><code>for (int siffer=0; siffer==lengde; siffer++)
</code></pre>

<p>change to:</p>

<pre><code>for (int siffer=0; siffer &lt; lengde; siffer++)
</code></pre>

<p>because <code>siffer</code> is 0 at start and <code>lengde</code> is 7, so your for loop will never execute...</p>
"
"18924635","<p>This is what's wrong with your code.  Fast as possible requires fast coding techniques.  Save the sensor type instead of evaluating it twice.</p>

<pre><code>@Override
    public void onSensorChanged(SensorEvent event) {
        int i = event.sensor.getType();
        if (i == Sensor.TYPE_ACCELEROMETER)
            aValues = (event.values.clone());
        else if (i == Sensor.TYPE_MAGNETIC_FIELD)
            mValues = (event.values.clone());
    }
</code></pre>
"
"18809751","<p>A char is encoded in two bytes. It can have values from 0-65535. These values can be interpreted as Unicode. But it is on you to decide if you need the numbers are the Unicode interpretation of it. You can not find out which way it should be interpreted as it is the programmer how decides what the values stand for.
You want to do something which is not necessary. You can choose yourself for what the <code>char</code> stands for.</p>

<p>Look at <a href=""http://docs.oracle.com/javase/tutorial/i18n/text/charintro.html"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/i18n/text/charintro.html</a></p>

<p>Assuming <code>ch</code> is of type <code>char</code>.
If you want to find out if the Unicode interpretation is actually a Letter you can use this: <code>Character.isLetter(ch)</code></p>

<p>If you want to check if it is a Digit use:
    <code>Character.isDigit(ch)</code> </p>
"
"18953392","<p>Booolean is an object/reference type that wraps a boolean whereas boolean in a primitive type.</p>

<p><strong>Boolean</strong> - You would get more methods which will be useful.</p>

<p><strong>boolean</strong> - Will save you lot of memory. But if you use <code>Boolean.valueOf(value) of new Boolean(value)</code>, that shouldn't be a cause.</p>

<p>Converting between primitives and objects like this is known as boxing/unboxing.</p>

<p>Click on the below links for more info:</p>

<p><a href=""http://javaeye.wordpress.com/2008/06/17/boxing-and-unboxing-conversion/"" rel=""nofollow"">http://javaeye.wordpress.com/2008/06/17/boxing-and-unboxing-conversion/</a></p>

<p><a href=""http://java.sun.com/j2se/1.5.0/docs/guide/language/autoboxing.html"" rel=""nofollow"">http://java.sun.com/j2se/1.5.0/docs/guide/language/autoboxing.html</a></p>

<p><a href=""http://www.javapractices.com/topic/TopicAction.do?Id=197"" rel=""nofollow"">http://www.javapractices.com/topic/TopicAction.do?Id=197</a></p>
"
"19022299","<p>Use </p>

<pre><code> Scanner sc = new Scanner(System.in); 
</code></pre>

<p>instead of Keyboards</p>
"
"29043683","<pre><code> ArrayList&lt;String&gt; listone = new ArrayList&lt;String&gt;() {
        {
            add(""2"");
            add(""1"");
            add(""3"");
            add(""4"");
            add(""4"");
            add(""4"");
            add(""4"");
            add(""4"");
            add(""4"");
        }
    };      

    Set&lt;String&gt; one = new HashSet&lt;String&gt;(listone); 
    List&lt;String&gt; correct = new ArrayList&lt;String&gt;(one); 

    for (int i = 0; i &lt; correct.size(); i++) {
        System.out.println(correct.get(i)); 
    }
</code></pre>
"
"19022316","<p>You Are using <strong>KeyBoard</strong>. What is this I couldn't understand.<br>
Use This Way  </p>

<pre><code>       Scanner keyBoard = new Scanner(System.in);
       System.out.println(""Enter Grade"");
       int grade = keyBoard.nextInt();
       System.out.println(grade);
</code></pre>
"
"29050012","<p>You can input your value as a string, split it normally with the split function and assign each value to its own string. Then convert the string to an integer.</p>

<p>int currencyValue = Integer.parseInt(array[0]);
String currencyType = array[1];</p>

<p>array[] is the array that you split the string into.</p>

<pre><code>String input = user_input.nextLine();
char[] array = input.toCharArray();
for(int i = 0; i &lt; input.length(); i++) {
    if (Character.isLetter(array[i])){
        //use .split based on the output of the if statement
    }
}
</code></pre>
"
"18867045","<p>This is quiet simple</p>

<pre><code>Button button = (Button) findViewById(R.layout.layout_for_button); 
button.setText(""text"");
</code></pre>

<p>In your code above <strong>button is null</strong></p>

<p>Something is wrong with <code>findViewById(R.layout.layout_for_button)</code></p>

<p>May be your calling the <strong>findViewById</strong> from context</p>
"
"18958419","<p>When you pass 2 to the constructor of MathContext, you are apparently restricting some of the intermittent values calculated for division. I don't know whether this is intended by the API... I would guess not. Appears to be a bug.</p>

<p>Nonetheless you have a few options.</p>

<ol>
<li>Change the 2 to a 4 in the constructor of MathContext and everything works.</li>
<li>Remove the setScale and MathContext from your code, simplifying it and making it more accurate. If you're always setting the scale you could be chopping of significant digits depending on the input. Add the precision and rounding mode straight into your division operations.</li>
</ol>

<p>Code Example:</p>

<pre><code> BigDecimal num = new BigDecimal(""1620"");
 BigDecimal divider = new BigDecimal(100);
 BigDecimal result = num.divide(divider, 2, RoundingMode.HALF_EVEN);
</code></pre>

<p>That gives me 16.20.</p>
"
"18949565","<p>This should work</p>

<pre><code>public static void test(BufferedReader r, PrintWriter w) throws IOException {

   String[] s = new String[22];

   String line;
   int n = 0;
   while ((line = r.readLine()) != null) {
       s[n] = line;
        //This will take n to 0 when n is 21 i.e. last array position
       n = (n+1) % 22;
   }
   int last = n;

   //Will print it in the same order in which those lines were read.
   do{
         w.println(s[n]);
         n = (n+1) % 22;
     } while(n != last);
}
</code></pre>
"
"19036524","<p>Off the top of my head: you need to tell Spring about database.properties file, right? How are you doing it? Something like this?</p>

<p><code>&lt;bean id=""propertyConfigurer"" class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""&gt;
  &lt;property name=""location"" value=""classpath:database.properties""/&gt;</code></p>
"
"29053785","<p>You can do it like this:</p>

<pre><code>for(int k = 5;k&gt;0;k--;){
for(int i = 0;i&lt;10;i+=2;)
 System.out.println(k+ """" +i)
}
</code></pre>
"
"19042969","<pre><code>Here is a solution.
</code></pre>

<p>As you will see stackoverflow uses OpenId and there are some Links to useful information at the stackoverflow lo-gin page. For a quick one <a href=""http://tweetsdecoder.com/Download/OpenId/simpleauth.php"" rel=""nofollow"">here is a link</a> to ready-made OpenId Interface you can download this class and customize it to suite your need.  you will need the openid.php. Further information can be found at <a href=""http://openid.net/get-an-openid/what-is-openid/"" rel=""nofollow"">OpenId.net</a>.    Your front end may have the below php code.</p>

<pre><code>&lt;?php

    session_start();
    $_SESSION['email']="""";
    $currentLoc=""http://"".$_SERVER['SERVER_NAME'].$_SERVER['PHP_SELF'];

    require_once 'openid.php';

    $openIdAuth= new SimpleAuth($currentLoc);

    //:::::::::::::Authenticate:::::::::::::::
    $openIdAuth-&gt;identity = 'https://www.google.com/accounts/o8/id';//OpenId provider url
    $openIdAuth-&gt;required = array('contact/email');//add more data to retrieve e.g namePerson/first,namePerson/last
    $openIdAuth-&gt;returnUrl = $currentLoc;//can be change to whatever url you want user to redirect to
    //::::::::::::::::::::::::::::::::::::::::


    //:::::::::::::::::::Validate::::::::::::::::::::::::::::::: 
    if ($openIdAuth-&gt;mode) {

        if ($openIdAuth-&gt;mode == 'cancel') {
            echo ""User has canceled authentication !"";
        } 

        else if($openIdAuth-&gt;validate()) {

            $data = $openIdAuth-&gt;getAttributes();       
           $_SESSION['email']= $data['contact/email']; 
           $logout= '&lt;a href=""?logout""&gt;LoGout&lt;/a&gt;';    

        } 

        else {
            echo ""The user has not logged in"";
        }
    }
    //::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


    if (isset($_REQUEST['logout'])) {
    session_start();
    $_SESSION = array();
     session_destroy(); 
        echo ""&lt;script&gt;window.location.replace("".$currentLoc."");&lt;/script&gt;"";

    }
    ?&gt;

&lt;div id=""body"" style=""margin:80px auto;border:2px solid #00ffcc;width:400px; padding:20px""&gt;
&lt;h1&gt;Welcome To My Secure Page&lt;/h1&gt;
&lt;?php 
//when User Has Not Login do something
if($_SESSION['email']==""""){
?&gt;

&lt;a href=""&lt;?php echo $openIdAuth-&gt;authUrl() ?&gt;""&gt;Login with Google&lt;/a&gt;

&lt;?php 
} 
//If all is fine do something or redirect to another page
else{
?&gt;

&lt;?php echo $_SESSION['email'] .""&lt;br /&gt;   ::::::::::::   "".$logout.""   ::::::::::"";?&gt;


&lt;?php } ?&gt;
&lt;/div&gt;
</code></pre>
"
"18893247","<p>Try this, this will disable the scroll function.</p>

<pre><code>scrollview.setEnabled(false);
</code></pre>
"
"19068569","<p><strong>Lazy Initalizaion</strong></p>

<pre><code> class SingletonClass {

     private static SingletonClass object;
     private SingletonClass () {} 
     public static SingletonClass getInstance(){
        if(object == null){
            object= new SingletonClass (); //Lazy Initalizaion 
        }
        return object;
    }
 }
</code></pre>

<p><strong>Early initialization</strong></p>

<pre><code>  class SingletonClass {

     private static SingletonClass object = new SingletonClass (); //Early initialization
     private SingletonClass () {} 

     public static SingletonClass getInstance(){
        return object;
    }
 }
</code></pre>
"
"30067069","<p>Open ""/Applications/BonitaBPMCommunity-6.5.0/BonitaBPMCommunity.app/Contents/MacOS/BonitaBPMCommunity.ini""</p>

<p>Obtain the location of the JRE / JDK on your system by executing in a terminal:</p>

<pre><code>/usr/libexec/java_home
Add 2 lines after adapting the ...jdk1.8.0... to your system as found out above

-vm
/Library/Java/JavaVirtualMachines/jdk1.8.0_31.jdk/Contents/Home/bin/java
in between the following lines:

-clearPersistedState
-vmargs
</code></pre>
"
"18993970","<p>An empty constructor usually is ""a default""</p>

<pre><code>Person() { 
    // This will cause you to not have any name or age values
}
</code></pre>

<p>So let's assume you want a default Person:</p>

<pre><code>Person() { 
    this(""Steven"",20);
}
</code></pre>

<p>This way you will call the non empty constructor but you will always have the same person</p>
"
"19015810","<p>You should create and use a java.sql.Timestamp, not a java.sql.Date.
By spec, the java.sql.Date has no time element.</p>

<p>To convert LocalDate to Timestamp:</p>

<pre><code>Timestamp timestamp = new Timestamp(localDate.toDateMidnight().getMillis());
</code></pre>

<p>To convert LocalDateTime to Timestamp:</p>

<pre><code>Timestamp timestamp = new Timestamp(localDateTime.toDateTime().getMillis());
</code></pre>
"
"19130890","<p>My testing does not seem to support your findings. It is working as expected!</p>

<p>I wrote the following demo code</p>

<pre><code>public class DemoThread extends Thread {

    Scanner sin = new Scanner(System.in);

    @Override
    public void run() {
        while (sin.hasNextLine()) {
            if(this.isInterrupted()) {
                System.out.println(""Thread is interrupted.. breaking from loop"");
                break;
            }

            String message = sin.nextLine();
            System.out.println(""Message us "" + message);

            // do processing...
        }
    }

    public static void main(String args[]) throws InterruptedException {

        DemoThread thread = new DemoThread();
        thread.start();
        Thread.sleep(5000);
        thread.interrupt();

    }

}
</code></pre>

<p>and the output is</p>

<pre><code>a
Message us a
s
Message us s
asd
Thread is interrupted.. breaking from loop
</code></pre>

<p>So please check again. Also if you are confused with output asd it is the string input from the previous loop iteration at the point of which thread was not interrupted. If you don't want that you can do</p>

<pre><code>if(!this.isInterrupted()) {
    String message = sin.nextLine(); 
}
</code></pre>

<hr>

<pre><code>Why is this happening?
</code></pre>

<p>Lets say in a iteration thread is not interrupted so it enter the while loop(hasNext() passes because of the String read in previous iteration).It check whether thread is interrupted(lets say it is not at this point of time) and goes to next line(scanning new string from stdinput). Now lets say the thread is interrupted. Your program will wait till you enter some string(for which you have to press enter in console). So even if the thread is inetrrupted string will be read and this string will be used to evaluate hasNext() operation(which will evaluate to true) and the context will enter the while loop.Here it will see thread is interrupted and will break. </p>

<p><strong>To avoid this you need to read string inside if(!this.isInterrupted()) statement.Refer to my code above.</strong></p>
"
"19130903","<p>Usually if you want to have a thread running for a indefinite amount of time, but still be able to interrupt it, you'd do it like this:</p>

<pre><code>while (!Thread.currentThread().isInterrupted()) {
  while (scanner.hasNextLine()) {
    ...
  }
}
</code></pre>
"
"19001735","<p>use <code>DetailsActivity.this</code> instead of <code>getApplicationContext()</code>, and declare your <code>JewelInfo</code> activity on the manifest file : <code>&lt;activity android:name="".JewelInfo"" /&gt;</code>.Check <a href=""http://www.android-ios-tutorials.com/android/how-to-switch-between-different-activities-in-android"" rel=""nofollow"">this tutorial</a> about how to switch between activities and pass data between them</p>
"
"19065007","<pre><code>  Button bdone = (Button)findViewById(id of button);
  bdone.setOnClickListener(new OnlickListener)
  {
      @Override
      public void onClick(View view)
      {
          //Code here
      }
  }
</code></pre>
"
"19161288","<p>I suggest you to use the mediator pattern
<a href=""http://en.wikipedia.org/wiki/Mediator_pattern"" rel=""nofollow"">http://en.wikipedia.org/wiki/Mediator_pattern</a></p>

<pre><code>import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

//Colleague interface
interface Command {
    void execute();
}

//Abstract Mediator
interface IMediator {
    public void book();
    public void view();
    public void search();
    public void registerView(BtnView v);
    public void registerSearch(BtnSearch s);
    public void registerBook(BtnBook b);
    public void registerDisplay(LblDisplay d);
}

//Concrete mediator
class Mediator implements IMediator {

    BtnView btnView;
    BtnSearch btnSearch;
    BtnBook btnBook;
    LblDisplay show;

    //....
    public void registerView(BtnView v) {
        btnView = v;
    }

    public void registerSearch(BtnSearch s) {
        btnSearch = s;
    }

    public void registerBook(BtnBook b) {
        btnBook = b;
    }

    public void registerDisplay(LblDisplay d) {
        show = d;
    }

    public void book() {
        btnBook.setEnabled(false);
        btnView.setEnabled(true);
        btnSearch.setEnabled(true);
        show.setText(""booking..."");
    }

    public void view() {
        btnView.setEnabled(false);
        btnSearch.setEnabled(true);
        btnBook.setEnabled(true);
        show.setText(""viewing..."");
    }

    public void search() {
        btnSearch.setEnabled(false);
        btnView.setEnabled(true);
        btnBook.setEnabled(true);
        show.setText(""searching..."");
    }

}

//A concrete colleague
class BtnView extends JButton implements Command {

    IMediator med;

    BtnView(ActionListener al, IMediator m) {
        super(""View"");
        addActionListener(al);
        med = m;
        med.registerView(this);
    }

    public void execute() {
        med.view();
    }

}

//A concrete colleague
class BtnSearch extends JButton implements Command {

    IMediator med;

    BtnSearch(ActionListener al, IMediator m) {
        super(""Search"");
        addActionListener(al);
        med = m;
        med.registerSearch(this);
    }

    public void execute() {
        med.search();
    }

}

//A concrete colleague
class BtnBook extends JButton implements Command {

    IMediator med;

    BtnBook(ActionListener al, IMediator m) {
        super(""Book"");
        addActionListener(al);
        med = m;
        med.registerBook(this);
    }

    public void execute() {
        med.book();
    }

}

class LblDisplay extends JLabel {

    IMediator med;

    LblDisplay(IMediator m) {
        super(""Just start..."");
        med = m;
        med.registerDisplay(this);
        setFont(new Font(""Arial"", Font.BOLD, 24));
    }

}

class MediatorDemo extends JFrame implements ActionListener {

    IMediator med = new Mediator();

    MediatorDemo() {
        JPanel p = new JPanel();
        p.add(new BtnView(this, med));
        p.add(new BtnBook(this, med));
        p.add(new BtnSearch(this, med));
        getContentPane().add(new LblDisplay(med), ""North"");
        getContentPane().add(p, ""South"");
        setSize(400, 200);
        setVisible(true);
    }

    public void actionPerformed(ActionEvent ae) {
        Command comd = (Command) ae.getSource();
        comd.execute();
    }

    public static void main(String[] args) {
        new MediatorDemo();
    }

}
</code></pre>
"
"19088088","<p>It is a common misunderstanding. This kind of ""errors"" are related with floating point data structures: read <a href=""http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html"" rel=""nofollow"">this</a>. You can use a <code>double</code> in this case to get more precision.</p>
"
"19043133","<p><code>java.util.Stack</code> doesn't do a deep copy:</p>

<pre><code>import java.util.Stack;
public class Test {
    String foo;
    public static void main(String[] args) {
        Test test = new Test();
        test.foo = ""bar"";
        Stack&lt;Test&gt; stack = new Stack&lt;Test&gt;();
        stack.push(test);
        Test otherTest = stack.pop();
        otherTest.foo = ""wibble"";
        System.out.println(""Are the same object: ""+(test.foo == otherTest.foo));
    }
}
</code></pre>

<p>Results in:</p>

<pre><code>Are the same object: true
</code></pre>

<p>If it did do a copy then test and otherTest would point to a different object. A typical stack implementation simply returns a reference to the same object that was added onto the stack, not a copy.</p>

<hr>

<p>You probably also want to set the array item to null before returning, otherwise the array will still hold a reference to the object.</p>
"
"19110095","<p><code>BaseObject</code> is an abstract class so it has abstract methods that you have to implement. See The API of <code>BaseObject</code> to see the abstract methods that you have to implement. Your IDE should help you on this problem</p>
"
"19167111","<p>try this, may this will help you.</p>

<pre><code>String refinedData = new String(data);
Pattern p = Pattern.compile(""\\{[^\\}]*\\}"");
Matcher m = p.matcher(data);
while(m.find()){
    String d = data.substring(m.start(), m.end());
    refinedData = refinedData.replace(d, """");
}
</code></pre>
"
"19165475","<pre><code>String name = System.getProperty(""java.vm.name"");
</code></pre>

<p>Or else you need to define what exactly you mean by ""name"".</p>
"
"19116756","<p>First of all for above program you will get ""Incompatible conditional operand types One and   Two"" because One and Two do not have any relationship.</p>

<p>To make above program result as True it should be like,</p>

<pre><code>public class One {
    public static void main(String[] args) {

        One o = new Two();
        if (o instanceof Two) {
            System.out.println(""Yes"");
        } else {
            System.out.println(""No"");
        }
    }
}

class Two extends One {
}
</code></pre>

<p>Here, One is parent and Two is child. Parent referring to child object there fore instance of operator will return true.</p>
"
"19170393","<p>Try <code>/*string with {}*/ string.trim().equalsIgnoreCase(""{}""))</code>, maybe there is some extra spaces or something</p>
"
"19183467","<p>Your while loop iterates over all tokens first i think it is a misplaced <code>}</code>.</p>

<pre><code>    while (strTok.hasMoreTokens()) {
      tok01 = strTok.nextToken();                  
      System.out.println(""     tok01: "" + tok01);
    }
</code></pre>
"
"19136934","<p>Here's a similiar solution which includes arguments in a private 
function (I just happened to have the code lying around from a previous project):</p>

<p>class name: 
    InspectionTree.java</p>

<p>function signature: 
    private String getSamePackagePathAndName(String className, String classPath)</p>

<pre><code>String firstName = ""John"";
String lastName = ""Smith"";

//call the class's constructor to set up the instance, before calling the private function
InspectionTree inspectionTree = new InspectionTree(firstName, lastName);

String privateMethodName =""getSamePackagePathAndName"";        
Class[] privateMethodArgClasses = new Class[] { String.class, String.class };

Method method = 
         inspectionTree.getClass().getDeclaredMethod(privateMethodName, privateArgClasses);

method.setAccessible(true);

String className = ""Person"";
String classPath = ""C:\\workspace"";

Object[] params = new Object[]{className, classPath};        

//note the return type of function 'getSamePackagePathAndName' is a String, so we cast
//the return type here as a string
String answer=  (String)method.invoke(inspectionTree, params);

method.setAccessible(false);
</code></pre>
"
"19148367","<p>From looking at it, </p>

<pre><code>if (choice == 'A')
if (hours &lt;= 10) { 
</code></pre>

<p>The two are not indented, meaning <code>if (hours &lt;= 10) {</code> will run regardless of the outcome of the first statement. So when the user types in <code>B</code>, and then the hours (less than <code>10</code>), the first statement reads <code>false</code>, and the second reads <code>true</code>, therefore running that one.</p>

<p>Try putting <code>{}</code> around all the if statements and try running it again.</p>

<p>I may be incorrect though.</p>
"
"19198338","<p>One way to understand it may be by doing this:</p>

<pre><code>public static void main(String[] args) {
    String s=""hello"";
    tryToMutateString(s);
    System.out.println(s); //Will just print ""hello"" since our s still refers to that
}

public static void tryToMutateString(String given) {
    given += ""mutated""; //Creates a new String, the string that given pointed to earlier won't change
}
</code></pre>
"
"19205200","<p>Try doing a check if it exists first:</p>

<pre><code>File file = new File(""test.txt"");
if (!file.exists()) {
    System.err.println(file.getName() + "" not found. Full path: "" + file.getAbsolutePath());
    /* Handling code, or */
    return;
}
BufferedReader reader = new BufferedReader(new FileReader(file));
/* other code... */
</code></pre>
"
"19205219","<p>Please ensure the file is present and one more suggestion.. You are calling reader.readLine() two times.</p>

<p>your code need to be like this...</p>

<pre><code> File file = new File(""test.txt"");
 if(file.exists()) { 
    BufferedReader reader = new BufferedReader(new FileReader(file));

    String line = null;
    while ((line = reader.readLine())!= null)  
    {
        System.out.println(line);
    }   
   reader.close();  
 }else{
       System.out.println(""File is not present"");
 }
</code></pre>
"
"19208458","<p>The easiest way (<strong>not the correct way</strong>) is to create a global variable accessible to both activities.</p>

<p>Example</p>

<p>Declare variable in one of the activities as public and static like this:</p>

<p>FirstActivity.java</p>

<pre><code>public static String variable = ""value"";
</code></pre>

<p>In the other activity you can access and modify the variable like this:</p>

<p>SecondActivity.java</p>

<pre><code>FirstActivity.variable = ""newValue"";
</code></pre>

<p>Now if you print the variable in any of those activities the value should be ""newValue""</p>

<p>If you want to do this correctly you should consider a Singleton class, SharedPreferences or using Intents. It takes a little bit more of work, but in the end you have a more robust piece of code.</p>
"
"19166475","<p>Well, if you're using JQuery this should be an easy task.</p>

<p>I would just create an invisible div and render this anchor () on it. Afterwards you could simply select the anchor and get it's inner text.</p>

<pre><code>$('body').append('&lt;div id=""invisibleDiv"" style=""display:none;""&gt;&lt;/div&gt;'); //create a new invisible div
$('#invisibleDiv').html(str); //Include yours ""str"" content on the invisible DIV
console.log($('a', '#invisibleDiv').html()); //And this should output the text of any anchor inside that invisible DIV.
</code></pre>

<p>Remember, to do this way you must have JQuery loaded on your page.</p>

<p>EDIT: Use only if you've already have JQuery on your project, since as stated below, something simple as this should not be a reason for the inclusion of this entire library.</p>
"
"19260359","<p>I think you wonna override the super-class method, and to do this, the method on sub-class must have the same signature of super-class method. </p>

<p>You can call these methods in following ways:</p>

<ul>
<li><p>Suppose <code>test1</code> is an instance of <code>classA</code>, <code>teste1.methodA(index)</code> will execute the implementation on super-class.</p></li>
<li><p>Suppose <code>test2</code> is an instance of <code>classB</code>, <code>test2.methodA(index)</code> will execute the sub-class method.</p></li>
<li><p>In <code>classB</code> you can invoque the super class method (if the method is not<code>private</code>), something like :</p>

<pre><code>public class ClassB extends ClassA
{
    ...
    super.methodA(index);
    ...
}
</code></pre></li>
</ul>
"
"19166517","<p>Assuming that you are using java, from the provided code.</p>

<p>I would recommend you to use <a href=""http://jsoup.org/cookbook/extracting-data/attributes-text-html"" rel=""nofollow"">JSoup</a> to extract text inside anchor tag.<br>
Here's a reason why. <a href=""http://stackoverflow.com/questions/590747/using-regular-expressions-to-parse-html-why-not"">Using regular expressions to parse HTML: why not?</a></p>

<pre><code>String html = ""&lt;a href='www.google.com'&gt;Google&lt;/a&gt;"";
Document doc = Jsoup.parse(html);
Element link = doc.select(""a"").first();

String linkHref = link.attr(""href""); // ""www.google.com""
String linkText = link.text(); // ""Google""""

String linkOuterH = link.outerHtml(); 
// ""&lt;a href='www.google.com'&gt;Google&lt;/a&gt;"";
String linkInnerH = link.html(); // ""&lt;b&gt;example&lt;/b&gt;""
</code></pre>
"
"19343654","<p>Try this</p>

<pre><code>int upperBound0 = array.length - 1; // = 1
int upperBound1 = array[0].length - 1; // = 2
</code></pre>

<p>As you commented:</p>

<p>upper bound is maximum index of rows and columns</p>
"
"19186316","<p>With <code>num.get(i)</code> method you are accessing array by its index. Elements of your array are <code>[num[0]=1, num[1]=2, num[2]=3, num[3]=4]</code> . </p>

<p>loop <code>for(int i: num)</code> is accessing elements of <code>num</code> array and store them in a variable <code>i</code>.</p>
"
"19348462","<p>Try this </p>

<pre><code>InputStream input = new URL(""http://www.somewebsite.com/a.txt"").openStream();
</code></pre>
"
"19191187","<p>This is what I ended up doing:</p>

<pre><code>package com.example.client;

import java.util.logging.Logger;

import com.google.gwt.core.client.EntryPoint;
import com.google.gwt.core.shared.GWT;
import com.google.gwt.event.logical.shared.ValueChangeEvent;
import com.google.gwt.event.logical.shared.ValueChangeHandler;
import com.google.gwt.user.client.History;
import com.google.gwt.user.client.ui.RootPanel;

public class Controller implements EntryPoint {
    private static Controller instance;
    private static final Logger log = Logger.getLogger(Controller.class.getName());

    // I have a feeling GWT does not respect private constructors, or else it uses some other voodoo.
    private Controller(){}

    public static Controller getInstance() {
        if (instance == null) instance = new Controller();
        return instance;
    }

    @Override
    public void onModuleLoad() {
        String token = History.getToken();
        log.info(""****************************** token:""+token);
        History.addValueChangeHandler(new ValueChangeHandler&lt;String&gt;() {
            @Override
            public void onValueChange(ValueChangeEvent&lt;String&gt; event) {
                navigate(event.getValue());
            } // onValueChange
        });
        if (token == null || token.length() == 0) History.newItem(Login.TOKEN); // no token
        else navigate(token); // restore app state
    }

    private static void navigate(String token) {
        RootPanel rootPanel = RootPanel.get(""gwtApp"");
        if (rootPanel.getWidgetCount() &gt; 0) rootPanel.remove(0); // clear the page

        if (Login.TOKEN.equals(token)) {
            Login page = Login.getInstance();
            page.onModuleLoad();
        } else if (MainApp.TOKEN.equals(token)) {
            MainApp page = MainApp.getInstance();
            page.onModuleLoad(); // display the page
//          page.setAuthenticated(true);
//          page.setUsername(email);
        }

    }

} // Controller
</code></pre>

<p>In your *.gwt.xml file:</p>

<pre><code>&lt;entry-point class='com.example.client.Controller' /&gt; 
</code></pre>

<p>Now when you want to go to a new page:</p>

<pre><code>History.newItem(Login.TOKEN);
</code></pre>

<p>This seems quite familiar and is probably what I came up with a few years ago.</p>
"
"19292955","<p>If speed was a <strong>major</strong> concern you may find something like this quite fast. It beat all comers in <a href=""http://stackoverflow.com/a/19251545/823393"">this</a> post.</p>

<pre><code>int value(String s) {
  // Start at zero so first * 10 has no effect.
  int v = 0;
  // Work from the end of the string backwards.
  for ( int i = s.length() - 1; i &gt;= 0; i-- ) {
    char c = s.charAt(i);
    // Ignore non-digits.
    if ( Character.isDigit(c)) {
      // Mul curent by 10 and add digit value.
      v = (v * 10) + (c - '0');
    }
  }
  return v;
}
</code></pre>
"
"19237573","<p><code>char[] test = Integer.toString(number).toCharArray();</code></p>
"
"19400452","<p>In your case it makes no difference since the type is abstract but in general <code>Collection&lt;SomeClass&gt;</code> can contain <code>SomeClass</code> and all it's subclasses while <code>Collection&lt;? extends SomeClass&gt;</code> cannot contain <code>SomeClass</code> but only it's subclasses.</p>

<p>You can try it yourself.</p>

<pre><code>List&lt;Number&gt; foo = new ArrayList&lt;&gt;();
foo.add(Integer.valueOf(0));
</code></pre>

<p>works while</p>

<pre><code>List&lt;? extends Number&gt; foo = new ArrayList&lt;&gt;();
foo.add(Integer.valueOf(0));
</code></pre>

<p>doesn't. It shows the error <code>""The method add(capture#1-of ? extends Number) in the type List&lt;capture#1-of ? extends Number&gt; is not applicable for the arguments (Integer)""</code></p>
"
"19347001","<p>do this:</p>

<pre><code>Random rn = new Random();
int i = rn.nextInt() % lista.size();
System.out.println(lista.get(i));
</code></pre>
"
"19260679","<p>did you include the truststore when you execute the client? </p>

<pre><code>java -Djavax.net.ssl.trustStore=${resources}/localhost.truststore \
-Djavax.net.ssl.trustStorePassword=TRUSTSTORE_PASSWORD -jar client.jar com.acme.RunClient
</code></pre>
"
"19425377","<p>If you need double value which has only two digits after dicimal, you can try following:</p>

<pre><code>double d = 1.164444;       
double r = Math.rint(d * 100)/100;
System.out.println(r);
</code></pre>
"
"19332957","<p>You can use <code>toPlainString()</code> instead of <code>floatValue()</code></p>

<pre><code>new BigDecimal(""5.2"").toPlainString()
</code></pre>

<p>Edit:</p>

<pre><code>new BigDecimal(""5.2"").setScale(2).floatValue()
</code></pre>
"
"19397412","<blockquote>
  <p>if (first != null &amp;&amp; second != null &amp;&amp; !first.equals(second)) {</p>
</blockquote>

<p>You don't need to test <code>second != null</code> here. The <code>equals()</code> call does that.</p>

<blockquote>
  <p>} else if (first == null ^ second == null) {</p>
</blockquote>

<p>You should return <code>false</code> in this case, assuming this is an <code>equals()</code> method itself.</p>

<p>If FindBugs doesn't like it with this change I would ignore it, it doesn't know what it's talking about. It's not perfect. Put in an exception rule. </p>
"
"19411583","<p>How about this?</p>

<pre><code>   int numberOfnumbers = 1000;

   List&lt;Integer&gt; numbers = new ArrayList&lt;Integer&gt;();

   for (int i = 0; i &lt; numberOfNumbers; i++) {
       numbers.add(i);
     }

   Collections.shuffle(numbers);
</code></pre>

<p>As many numbers as you want, random and guaranteed not to repeat.  Just take the first 6, or how ever many you need.</p>
"
"19342240","<p>You can't use formatter in print</p>

<p>you can use either</p>

<pre><code>System.out.print(""The User's ID is:""+ userID);
</code></pre>

<p>or if u want to use formatter you can use like</p>

<p><code>System.out.printf(""The User's ID is: %d"",userID)</code>;</p>
"
"19320605","<p>It all comes down to how informative your API error responses are. The more informative the error handling of the API is, the more informative the exception handling can be.  I would believe the exceptions would only be as informative as the errors returned from the API.</p>

<p>Example:</p>

<pre><code>{ ""status"":404,""code"":2001,""message"":""Photo could not be found.""}
</code></pre>

<p>Following your first suggestion, if the Exception contained both the status and the API error code, the developer has a better understanding of what he needs to do and more option when it comes to exception handling.  If the exception also contained the error message that was returned, as well, the developer shouldn't even need to reference the documentation.</p>
"
"19466116","<ol>
<li>Create a random integer value  </li>
<li>Take the remainder of dividing by 4</li>
</ol>

<p>Step 2 is easy. So then, how to do a reasonable of step 1.</p>

<p>One easy way is to use the fine-grained system time as a seed for a hash:</p>

<pre><code>int random = Math.abs(new Long(System.nanotime()).hashCode() % 4);
</code></pre>

<p>The hash code is supposed to be an evenly distributed implementation.</p>
"
"19374986","<p>Due to performance reasons Strings are usually saved in the 'String-Pool'. If you want to make use of this pool in your application call the <code>intern()</code> method. Just using <code>new String()</code> creates a new <code>String</code> object that is not saved in the pool. </p>
"
"19394859","<p>This is the code that works, and I got the hint from <a href=""http://cyberasylum.janithw.com/object-serialization-over-networks-in-java/"" rel=""nofollow"">http://cyberasylum.janithw.com/object-serialization-over-networks-in-java/</a>.  </p>

<pre><code>@Test(timeout = 2000)
public void testStream() throws IOException, ClassNotFoundException, InterruptedException {
    PingerThread pinger = new PingerThread(9092);
    pinger.start();

    String serverAddress = ""localhost"";
    Socket s;
    PrintWriter output;
    BufferedReader input;
    try {
        // Client
        s = new Socket(serverAddress, 9092);
    }
    catch (IOException e)
    {
        // when error, try again
        Thread.sleep(500);
        s = new Socket(serverAddress, 9092);
    }

    // send the object over the network
    Hello h = new Hello();

    ObjectOutputStream out = new ObjectOutputStream(s.getOutputStream());
    out.writeObject(h);
    out.flush();

    ObjectInputStream in = new ObjectInputStream(s.getInputStream());
    System.out.println(""2"");
    Hello h2;
    h2 = (Hello) in.readObject();

    assertTrue(10 == h2.getX());
    assertTrue(20 == h2.getY());
}

private class PingerThread extends Thread {
    public int portNumber;

    public PingerThread(int portNumber) {
        super();
        this.portNumber = portNumber;
    }

    @Override
    public void run() {
        try {
            ServerSocket listener = new ServerSocket(this.portNumber);
            Socket socket = listener.accept();

            ObjectInputStream in = new ObjectInputStream(socket.getInputStream());
            ObjectOutputStream out = new ObjectOutputStream(socket.getOutputStream());

            Hello h;

            while((h = (Hello) in.readObject()) != null) {
                System.out.println(""1"");
                //h = (Hello) in.readObject();
                System.out.println(h.getX());
                System.out.println(h.getY());

                out.writeObject(h);
                out.flush();
            }

            System.out.println(""OUT"");
            socket.close();
            listener.close();

        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }
}
</code></pre>
"
"19389764","<p>For getting two decimal places use (<a href=""http://docs.oracle.com/javase/6/docs/api/java/text/DecimalFormat.html"" rel=""nofollow"">java.text.DecimalFormat:</a>)</p>

<p>You can try this </p>

<pre><code> double roundTwoDecimals(double d) { 
    DecimalFormat twoDForm = new DecimalFormat(""#.##""); 
    return Double.valueOf(twoDForm.format(d));
 }  
</code></pre>

<p>For integer there are other answers in the post.</p>
"
"19490353","<p>Try this,</p>

<pre><code>private static String removeNull(String input)
    {
        String[] splittedValue = input.split("" "");
        StringBuilder stringBuilder = new StringBuilder();
        for (String value : splittedValue)
        {
            if (!value.equalsIgnoreCase(""null""))
            {
                stringBuilder.append(value);
                stringBuilder.append("" "");
            }
        }
        return stringBuilder.toString();
    }
</code></pre>
"
"19435468","<p>You could put yours arrays to <code>java.util.Set</code>, and just to call method <code>contains</code> on each Set. (f.e <code>set.contains(""horse"")</code>); if it contains same string it will return <code>true</code>, otherwise <code>false</code>, then check all results.</p>
"
"19401186","<p>You have to define i and j outside the loop. Otherwise, you can only use them inside the loop:</p>

<pre><code>int i;
int j;

int[] arrayCrit = new int[5];
String[] crits = new String[5];

for (i = 0; i &lt; crits.length; i++) {
  System.out.print(""Criteria: "");
  crits[i] = inpt.readLine();
  for (j = 0; j &lt; arrayCrit.length; j++) {
    System.out.print(""Percentage: "");
    arrayCrit[j] = Integer.parseInt(inpt.readLine());
  }
}
</code></pre>
"
"19435488","<p><code>Arrays.asList(...).contains(...)</code>. This allows you to convert your array to a list, and simply see if the array contains the element without having to iterate through it. If it does, continue checking the other arrays to see if it is a common element across all of them.</p>
"
"19416390","<p>You can't. Simple as that. You can however measure the time it takes to reach onResume again and if the device was tilted by reading the display configuration.</p>

<p>An interval of 3 seconds is somewhat reasonable, also for slower devices.</p>

<p>Here are the relevant parts that we use:</p>

<pre><code>protected void onCreate() {
  ...
  orientation = getResources().getConfiguration().orientation;
}

protected void onResume() {
  ...
  long time = SystemClock.elapsedRealtime() - pauseTime;
  int o = getResources().getConfiguration().orientation;
  Log.d(TAG, ""pauseTime: "" + pauseTime + "" System: "" + SystemClock.elapsedRealtime() + "" elapsed pause time: "" + time + "" orientation now: "" + o + "" orientation then: "" + orientation);
  if (time &lt; 3000 &amp;&amp; o != orientation) {
    // device was turned
  }
  orientation = o;
}

protected void onPause() {
  ...
  pauseTime = SystemClock.elapsedRealtime();
}

protected void onSaveInstanceState(final Bundle outState) {
  ...
  outState.putLong(PAUSE_TIME, pauseTime);
  outState.putInt(ORIENTATION, orientation);
}

protected void onRestoreInstanceState(final Bundle savedInstanceState) {
  ...
  pauseTime = savedInstanceState.getLong(PAUSE_TIME, -1);
  orientation = savedInstanceState.getInt(ORIENTATION, -1);
}
</code></pre>

<p>The above code is running on about 40k devices and reliably works.</p>
"
"19554845","<p>In these lines :</p>

<pre><code>int t = Integer.parseInt(args[44]); //this is the array input for temperature
int v = Integer.parseInt(args[15]); //this is the array input for wind speed
</code></pre>

<p>You say that you run your program with at least 45 parameters!! where on the 15. place is wind speed and on the 44. is temperature.</p>

<p>You probably running program with NO parameters at all or with one.</p>

<p>Note that if you run program with parameters : ""hello world how are you"" the program would have args of size 5 with having <code>hello</code> in <code>args[0]</code>, <code>world</code> in <code>args[1]</code> etc.</p>
"
"19538518","<p>Recomendations</p>

<pre><code>private final String BASE_URL = Properties.getProperty(""base-url"");

private Map propertiesMap; // = new HashMap&lt;String,String&gt;();
</code></pre>

<p>and in the code to build the URL.</p>

<pre><code>public String buildURL(){
    StringBuilder builder = new StringBuilder();
    builder.append(BASE_URL);
    //for each property, append it

    return builder.toString();

}
</code></pre>
"
"19427224","<p>Maybe the order of the items list is not fixed (timing dependent?). Your code</p>

<pre><code>if (image != null) {
    break;
}
</code></pre>

<p>quits the loop instead of trying the next parts. In the comments you state <em>we iterate through the files until we can parse one</em>, which should read</p>

<pre><code>if (image != null) {
    continue;
}
</code></pre>

<p>then.</p>
"
"19459690","<pre><code>import java.io.*;
import java.util.*;

public class Lesson9p1_ThuotteEmily {
    public static void main(String args[]) {
        Scanner kbReader0 = new Scanner(System.in);
        System.out.print(""\n\nPlease enter an integer. An integer is whole number, and it can be either negative or positive. Please enter your number: "");
        long num = kbReader0.nextLong();

        if (num % 2 == 0) // if and else with braces
        {
            System.out.println(""Your integer "" + num + "" is even."");
        } else {
            System.out.println(""Your integer "" + num + "" is odd."");
        }

        Scanner kbReader1 = new Scanner(System.in);
        System.out.print(""\n\nWould you like to know if your number is prime? Please enter yes or no: "");
        String yn = kbReader1.nextLine();

        if (yn.equalsIgnoreCase(""Yes"")) {
            System.out.println(""Okay. Give me a moment."");

            {
                if (num % 2 == 0) {
                    System.out.println(""Your number isn't prime."");
                } else if (num == 2) {
                    System.out.println(""Your number is 2, which is the only even prime number in existence. Cool, right?"");
                } else
                    for (int i = 3; i * i &lt;= num; i += 2) {
                        if (num % i == 0) {
                            System.out.println(""Your number isn't prime."");
                        } else {
                            System.out.println(""Your number is prime!"");
                        }
                    }
            }
        }
        if (yn.equalsIgnoreCase(""No"")) {
            System.out.println(""Okay."");
        }
    }
}
</code></pre>

<p>all corrections included.</p>
"
"19555142","<p>Include <code>&lt;ctime&gt;</code> and use the <code>time</code> function.</p>
"
"19489089","<p>It is better to use this.</p>

<pre><code>boolean doLoop = true;

while(doLoop){

    if(userTerminates()){ //user terminates it?
         doLoop = false;
    }
}

private boolean userTerminates(){
    Scanner scanner = new Scanner(System.in);

    //If you want that user terminates it with 'c' char
    return scanner.nextLine().equals(""c"");
}
</code></pre>
"
"19591074","<pre><code>int maximum = getMaxValue ( arr[arr.length - 1 ], arr, arr.length - 1 );

public static int getMaxValue ( int max, int arr[], int index )
{
    if ( index &lt; 0 )
        return max;
    if ( max &lt; arr[index] )
        max = arr[index];
    return getMaxValue ( max, arr, index - 1 ); 
}
</code></pre>

<p>I felt that using a tracker for current maximum value would be good.</p>
"
"19510554","<p>please try below code</p>

<pre><code>    public static String season(int month, int day) {
if (month &gt; 9 &amp;&amp; month &lt; 12) {
    if (month == 9 &amp;&amp; day &gt;= 16 || month == 12 &amp;&amp; day &lt;= 15 || !(month == 9 || month == 12)) {
        return ""Fall"";
    }
} else if (month &gt; 6 &amp;&amp; month &lt; 9) {
    if (month == 6 &amp;&amp; day &gt;= 16 || month == 9 &amp;&amp; day &lt;= 15 || !(month == 6 || month == 9)) {
        return ""Summer"";
    }
} else if (month &gt; 3 &amp;&amp; month &lt; 6) {
    if (month == 3 &amp;&amp; day &gt;= 16 || month == 6 &amp;&amp; day &lt;= 15 || !(month == 3 || month == 6)) {
        return ""Sprint"";
    }
} else {
    return ""Winter"";
}



 }
</code></pre>
"
"19636074","<p>Like this:</p>

<pre><code>int number;
     do 
      {
         String textinput = JOptionPane.showInputDialog(""give me a number between 0 and 5"");
         number = Integer.parseInt(textinput);
         if ( number &gt; 5 || number  &lt; 0)
         {
             System.out.println(""Please enter number between 0 to 5"");
             return;
         }
          } while (!(number &gt;= 0 &amp;&amp; number &lt;= 5));
}
</code></pre>
"
"19682079","<p>This is question is mostly related to your MySQL configuration.</p>

<p>I bet that the problem is in your jdbc URL configuration. The error says is trying to connect to host linux-96 and you mentioned you have installed your MySQL server in your localhost.</p>

<p>First run MySQL server in your localhost and try to open a client session:</p>

<pre><code>$ sudo service mysqld start
</code></pre>

<p>$ mysql -h localhost -u root -p</p>

<p>You should be able to login (if not search for how to reset MySQL root password)</p>

<p>Create your destination database in MySQL and a user and a password and check you can log in by command line before going ahead.</p>

<p>$ mysql -h localhost -u  -p </p>

<p>Then check you hive-site.xml configuration. You should have something like this:</p>

<p><img src=""http://i.stack.imgur.com/p5lKU.png"" alt=""enter image description here""></p>
"
"19683576","<pre><code>package rounding;
import javax.swing.*;

public class Rounding {


public static void main(String[] args) {

    int num = Integer.parseInt(JOptionPane.showInputDialog(""Enter Optimus Prime""));  
    String answer = ""Optimus Prime""; 
    if (num==1)
    {
        System.out.println(""no"");
    }
    else{



    for (int j = 2; j &lt;= num - 1; j++)
    {
        if (num%j == 0)
        {
            answer = ""Compisate volcano"";
        }


    }


        System.out.println(answer);
    }     
}
}
</code></pre>

<p><a href=""http://www.optimusprimevscompisatevolcanovsno.composite.compisate.compisate.com/"" rel=""nofollow"">enter link description here</a></p>
"
"19690404","<p>Try to replace it by 
<code>sentence = String.replaceAll(""STOP"","""");</code></p>

<p>EDIT: Sorry misunderstanding</p>

<p>Use <strong>StringBuilder</strong> as recommended</p>
"
"19699613","<p>To mock the private method, you need <strong>powermock</strong><br>
The sample code will be like this, but I haven't run it.<br>
</p>

<pre><code>    import org.mockito.Mockito;
    import org.powermock.api.mockito.PowerMockito;
    import org.powermock.modules.junit4.PowerMockRunner;

    @RunWith (PowerMockRunner.class)
    public class MyClassTest  {

        @Test
        public void test_MyClass_methodA_enters_if_condition()  {
            final MyClass myClass = Mockito.mock (MyClass.class);
            CustomObject object1 = new CustomObject(""input1"");
            CustomObject object2 = new CustomObject(""input2"");
            Mockito.when (myClass.methodB(object1, object2)).thenReturn (true);
            Mockito.when (myClass.methodA(object1, object2)).thenCallRealMethod ();

            assertEquals(myClass.methodA(object1, object2), ""Result"");
        }
    }
</code></pre>
"
"19690471","<p>First of all, technically, you can't remove words from a String. In Java, Strings are immutable. What you probably want to do then, is to create a new String exactly like the original except that the word ""STOP"" is removed.</p>

<p><del>You can do this fairly easily by using <code>String.replaceAll</code> (<a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#replaceAll%28java.lang.String,%20java.lang.String%29"" rel=""nofollow"">JavaDoc</a>). In fact, the method could be this short:</del></p>

<pre><code>return sentence.replaceAll(""STOP"", """");
</code></pre>

<p>EDIT: Sorry, I didn't notice that you had constraints on the methods you had to use.</p>

<p>You might want to take a look at StringBuilder. After splitting the String with the delimiter ""STOP"", you are left with an array of Strings that comprise the message with the stops removed. Then you can use <code>StringBuilder.append</code> (<a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/StringBuilder.html#append%28java.lang.String%29"" rel=""nofollow"">JavaDoc</a>) to create a StringBuilder representing the whole message again and then use the StringBuilder's <code>toString()</code> method to return the contents of the StringBuilder as a String.</p>
"
"19691041","<p>Use <code>#ifdef</code> and friends as in C and run the Java sources through the C pre-processor before compiling them.</p>

<p>For gcc the pre-processor is called cpp, for VC it's cl.exe using the option <code>/P</code>.</p>
"
"19615083","<p><code>Math.ceil()</code> will give you the closest lowest value if you want it to be rounded to largest closest values you should use <code>Math.floor()</code></p>
"
"19708758","<p>Sorting first list will no problem to you. If you want to sort as if sportName is same then sort according to medal and if medal name is same then sort according to year then solution is :</p>

<p>Best way:   </p>

<pre><code>public void sortAccordingToAboveRequirement(List&lt;Medal&gt; medals){

 Collections.sort(medals,myComparator);

 }


  static Comparator&lt;Medal&gt; myComparator=new Comparator&lt;Medal&gt;() {
    @Override
        public int compare(Medal medal1, Medal medal2) {
        int value=0;
        value=medal1.getSport().compareTo(medal2.getSport());
        if(value!=0) return value;
        value=medal1.getMedal().compareTo(medal2.getMedal());
        if(value!=0) return value;
        value=medal1.getYear().compareTo(medal2.getYear());
        if(value!=0) return value;
        value=medal1.getGame().compareTo(medal2.getGame());
        if(value!=0) return value;
        value=medal1.getAthlete().compareTo(medal2.Athlete());
        return value;
    }
};
</code></pre>

<p>Use compareToIgnoreCase() if you wish :)</p>
"
"19633879","<p>This is what happens when the below line is executed.</p>

<pre><code>m.initMe(getint());
</code></pre>

<p><code>m</code> which is referring to the object containing <code>10</code> value is used to call the <code>initMe()</code> method. Now post the invocation of <code>initMe()</code>, you make <code>m</code> refer a new object reference in the <code>getint()</code> method.</p>

<p>But since the <code>initMe()</code> was called prior to the new assignment, the <code>this.i</code> returns <code>10</code> instead of <code>20</code>.</p>

<p>After this point, <code>m</code> refers the new object which has the <code>i</code> value as <code>20</code>. If you add another line <code>m.initMe(getint());</code> after the first statement, you'll get <em>20</em> from the second statement execution.</p>

<hr>

<blockquote>
  <p>So It also matters that method invocation order also affected by
  object reference align with runtime type</p>
</blockquote>

<p>Thus, the answer is <em>Yes</em>, the order does matter.</p>
"
"19755898","<pre><code>return ((double)(number1 + number2)) / 2;
</code></pre>
"
"19761150","<p>//method to sort and display info</p>

<pre><code>public static void sortDay()
{
    Boolean swapped = false;
    do
    {
        swapped = false;

        for(int j = 0; j &lt; show.size() - 1; j++) {
            showInfo current = (showInfo)show.get(j);
            showInfo next = (showInfo)show.get(j+1);

            if (current.day.compareTo(next.day) &lt; 0) {
                showInfo temp = new showInfo();
                temp.name = ((showInfo)show.get(j)).name;
                temp.day = ((showInfo)show.get(j)).day;
                temp.time = ((showInfo)show.get(j)).time;

                ((showInfo)show.get(j)).time = ((showInfo)show.get(j + 1)).time;
                ((showInfo)show.get(j)).day = ((showInfo)show.get(j + 1)).day;
                ((showInfo)show.get(j)).name = ((showInfo)show.get(j + 1)).name;

                ((showInfo)show.get(j + 1)).time = temp.time;
                ((showInfo)show.get(j + 1)).day = temp.day;
                ((showInfo)show.get(j + 1)).name = temp.name;

                swapped = true;
            }
        } 
    } while(swapped);

    System.out.println(""Show Information"");
    for (int i = 0; i &lt; show.size(); i++){
        System.out.println(""Name: "" + ((showInfo)show.get(i)).name);
        System.out.println(""Day: "" + ((showInfo)show.get(i)).day);
        System.out.println(""Time: "" + ((showInfo)show.get(i)).time);
    }       
}  
</code></pre>

<p>you can see the algorithm here <a href=""https://en.wikipedia.org/wiki/Bubble_sort"" rel=""nofollow"">https://en.wikipedia.org/wiki/Bubble_sort</a></p>
"
"19787764","<pre><code>import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;

public class Test {
    private static Queue&lt;String&gt; bottom=new LinkedList&lt;String&gt;();
    private static int count=0;

    public static void main(String[] args) throws IOException{
        func(3);
    }

    //function to get count, bottom n lines
    private static void func(int n) throws IOException{
        FileInputStream fstream = new FileInputStream(""abc.txt"");
        BufferedReader br = new BufferedReader(new InputStreamReader(fstream));

        String strLine;

        //Read File Line By Line
        while ((strLine = br.readLine()) != null){
          count++;
          if(count&lt;=n){
              //initialize bottom as top n 
              bottom.add(strLine);
          }else{
              bottom.remove();
              bottom.add(strLine);
               }
        }
        System.out.println(count);
        System.out.println(bottom.toString());
        br.close();    
    }
}
</code></pre>

<p>I have used Queue to get the bottom n lines. For further details you can visit: <a href=""http://blog.everestkc.com.np"" rel=""nofollow"">http://blog.everestkc.com.np</a> </p>
"
"19702549","<p>As you are Iterating the EIQserver collection class, you can not remove element from the same class. Use a different collection for Iteration and remove the element from EIQserver class.</p>

<pre><code> List temp = ListofEIQserverobject;
  for(Clientuser Cu: temp.OnlineusersList){
    ..... your code then 
      EIQserver.OnlineusersList.remove(Cu);
    }
</code></pre>
"
"19728884","<p><code>String</code> is a <code>CharSequence</code> so it should work.</p>

<p>did you try it?</p>
"
"19704984","<p>So from what I understand the string args[0] is a boolean? Why not cast it to a boolean then?</p>

<pre><code>boolean boolToEval = Boolean.parseBoolean(args[0]);
//OR
boolean boolToEval = Boolean.valueOf(args[0]);    

//THEN
(boolToEval ? printSomething() : printSomethingElse());
</code></pre>
"
"19705495","<p>What ever you are taking input as a command line argument is the String type and you want to use it as a Boolean so you need to covert a String into a boolean.</p>

<p>For doing this you have to Option either you use <code>valueOf(String s)</code> or <code>parseBoolean(String s)</code></p>

<p>so your code must look like this, </p>

<pre><code>S...
int x;
int y;
...
String stringToEval = args[0];
boolean b = Boolean.valueOf(stringToEval);

boolean b1 = Boolean.parseBoolean(stringToEval); // this also works 
...
if(b){
    printSomething();
} else printNothing();
...
</code></pre>
"
"19752725","<pre><code>int [][] net = {
     new int[] { 1, 2 },    //page 0
     new int[] { 2, 2, 4},  //page 1
     new int[] { 4 },       //page 2
     new int[] { 0, 0},     //page 3
     new int[] { 1, 2 , 4}  //page 4
};
</code></pre>
"
"19872018","<p>Or---you can also use FileReader.
(In case you don't know)---</p>

<pre><code>BufferedReader ob=new BufferedReader(new FileReader(""word.txt""));
</code></pre>
"
"19965983","<pre><code>class Transpose{
    public static String halfStepUp(String note){
        String n = null;
        if (note == ""c"") n = ""c#"";
        if (note == ""d"") n = ""d#"";
        return n;
    }
}
public class TransposeTest {
    public static void main(String... args) {
        String [] scale = new String[2];
        scale[0] = ""c"";
        scale[1] = ""d"";
        System.out.println(Transpose.halfStepUp(scale[0]));
    }
}
</code></pre>

<p>working code</p>
"
"19901038","<pre><code>     while ((line = reader.readLine()) != null)
                {
                    if (!(line.startsWith(""*"")))
                    {
//Skip line like this. just check after skip whether file ended or not! to avoid null pointer exception.
                        reader.readLine();
                        reader.readLine();
                        reader.readLine();
                        //display booking IDs of target customer
                        if (line.equals(String.valueOf(customermobilenumber)))
                        {   
                           //use null pointer check here.
                           if(reader.readLine != null)
                           {                                        
                            System.out.println (reader.readLine());
                           }
                           else
                           {
                              //File end.
                           }
                        }
                    }
                }   
</code></pre>
"
"19952649","<p>your calling the testloop method, and not requiring a return value....if you wrote it like this, then the private method would have to return something.</p>

<pre><code>String result = test.testloop();
</code></pre>
"
"19937906","<p>I would say that your <code>compare()</code> method will need to return weighed value for your <code>type</code> compareTo() difference + <code>name</code> compareTo() difference.<br>
Something like  </p>

<pre><code>public int compare(Food food1, Food food2) {
   int result = 0;
   result = food1.getType().compareTo(food2.getType()) * someMultiplier + food1.getName().compareTo(food2.getName());
   return result;
}
</code></pre>

<p>EDIT:
This is the usage that I was suggesting...</p>

<pre><code>public class ComparatorTest {

    static class ComaparableObject implements Comparable {
        private Object value1;
        private Object value2;

        public ComaparableObject(Object value1, Object value2) {
            this.value1 = value1;
            this.value2 = value2;
        }

        @Override
        public int compareTo(Object o) {
            int multiplier = 65535;
            ComaparableObject co = (ComaparableObject) o;
            int result = (value1.hashCode() * multiplier + value2.hashCode()) - (co.value1.hashCode() * multiplier + co.value2.hashCode()) ;
            return result;
        }

        public Object getValue1() {
            return value1;
        }

        public void setValue1(Object value1) {
            this.value1 = value1;
        }

        public Object getValue2() {
            return value2;
        }

        public void setValue2(Object value2) {
            this.value2 = value2;
        }

        public String toString() {
            String result = ""value1="" + value1 + "", "" + ""value2="" + value2;
            return result;
        }

    }

    public static void main(String[] args) {
        ArrayList&lt;ComaparableObject&gt; al;


        al = new ArrayList&lt;ComaparableObject&gt;();
        ComaparableObject co;
        int value1 = 2;
        co = new ComaparableObject(value1, 3);
        al.add(co);
        co = new ComaparableObject(value1, 1);
        al.add(co);
        co = new ComaparableObject(value1, 2);
        al.add(co);
        value1 = 1;
        co = new ComaparableObject(value1, 3);
        al.add(co);
        co = new ComaparableObject(value1, 1);
        al.add(co);
        co = new ComaparableObject(value1, 2);
        al.add(co);

        System.out.println(""Before sort: "" + al);

        Collections.sort(al, new Comparator&lt;ComaparableObject&gt;() {
            @Override
            public int compare(ComaparableObject co1, ComaparableObject co2) {
                int result;
                result = co1.compareTo(co2);
                return result;
            }
        });

        System.out.println(""After sort: "" + al);

        }

}
</code></pre>
"
"19951475","<p>This will remove the exception you got. From next time you don't use static values.</p>

<p><strong>Edit:</strong>
It is not a good practice to assign values to any variable by yourself. As the array is having size of 10. If user enters more than 10 students dropped then it will cause a problem.</p>

<pre><code>import java.util.*;

public class Q5 {
    static Scanner scan = new Scanner(System.in);

    public static void main(String args[]) {

        double[] list = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
        System.out.println(""enter number of students who dropped:"");
        int num = scan.nextInt();
        double[] list2 = new double[list.length-num]; // should be num-1

        System.out.println(""Enter index Of  the student who dropped "");
        for (int j = 0; j &lt; num; j++) {
            System.out.println(""student"" + j + "":"");
            int index = scan.nextInt();
            list[index] = 0;
        }

        int j = 0;
        for (int i = 0; i &lt; list.length; i++) {
            System.err.println(""""+list[i]);
            if (list[i] &gt; 0) {

                list2[j] = list[i];
                j++;
            }
        }
        System.out.print(""The original list : "");
        for (int i = 0; i &lt; list.length; i++) {
            System.out.print(list[i] + "" "");
        }

        System.out.print(""remaining students "");
        for (int i = 0; i &lt; list2.length; i++) {
            System.out.print(list2[i] + "" "");
        }
    }
}
</code></pre>
"
"19929525","<p>Try this, the shortest possible as you quoted in question,</p>

<pre><code>long millis = new Date().getTime();
System.out.println(SimpleDateFormat.getTimeInstance(SimpleDateFormat.SHORT).format(millis));
</code></pre>
"
"20064078","<p>You cant directly get it, however of course if the value was pre-populated by the server side and you were to store the value of <code>name_val</code> in a hidden field or other DOM element, then you could use javscript or jquery to access it.</p>

<pre><code>&lt;input type=""hidden"" id=""nameValue"" value=${nameValue}&gt;
</code></pre>

<p>and then access it as </p>

<pre><code>document.getElementById(""nameValue"").value;
</code></pre>

<p><strong>Update</strong></p>

<p>To add a bit of context to my answer, I am assuming that the above JSP is being called (Redirected) from a controlling servlet.</p>

<p>This servlet could set a request parameter which is sent to the JSP page</p>

<p>The JSP page could read the request parameter and store it in a hidden field</p>

<p>When the page has loaded, Javascript or Jquery could read the value from the hidden field and use it.</p>

<p>I guess this is what the OP is wanting to do, that is, use the value, not just store it in a variable.</p>
"
"19982306","<pre><code>if(checkNine.equals( ""99999"")) { 
   &lt;method-call&gt; 
}
else { 
     &lt;another - method - call&gt;
}
</code></pre>
"
"19982458","<pre><code>if (strPscId.startsWith(""99999""))
{
     bla bla
}
else
{
     sth else than bla bla
}
</code></pre>
"
"19938998","<p>The swap works because you pass the address (reference) of the array to the method.  The method then operates on that array -- the same one the other method has a reference to.</p>

<p>I really don't like the statement, ""Java is pass by value.""  I think it's really confusing. </p>

<p><HR></p>

<pre><code> public void methodA(){
     int[] values = {1,2}; 
    // MethodA stack frame has a register that contains a 
    //   memory address (let's say it's 0x1F) that points to a contiguous section of 
    //   memory sized for an integerarray of size 2. 
     methodB(values); // Pass the **memory address** (aka REFERENCE) not the register address
     System.out.println(values[0]); // Prints ""100""
 } 

 public void methodB(int[] ints){
     // MethodB stack frame now has a register with the memory address (0x1F)
     //    of 'ints' which is the same address that MethodA stack frame has.
     //    The same REFERENCE
     ints[0] = 100; // Alter the value in mem of 0x1F+0
     ints = new int[2]; // The local register overwrites the memory address of 
                        // the REFERENCE value that was there with 
                        // a new memory address -- say 0x5A
                        // since it's not storing it in the same register 
                        // as MethodA, MethodA will not reflect this.


 }
</code></pre>
"
"20002020","<p>No, it's not safe.</p>

<p><code>synchronized</code> means only one thread will enter into a particular function.
But there is a possibilty that one thread is exceuting <code>updateFile()</code> and other is doing <code>removeFile()</code>, then exception will be thrown by the JVM.</p>

<p>So, for avoiding this, put one boolean variable and toggle it when some thread enters into the function.</p>
"
"19946450","<p>To generate Random numbers in java you can use <code>ran.nextInt()</code> or please refer to <a href=""http://stackoverflow.com/questions/363681/generating-random-numbers-in-a-range-with-java"">this link</a> to see how to generate random numbers.
store those 2 random numbers (as num1 and num2).</p>

<p>To verify whether the solution after dividing <code>num1</code> and <code>num2</code> is integer or not, use this method:</p>

<pre><code>sol = num1 / num2
if (sol == (int)sol)
{
   ... //true if the solution is an integer
}
</code></pre>
"
"20080613","<p><strong>Edit: this information is for visualvm specifically, not for any other java app</strong></p>

<p>As mentioned by others, you need to modify the visualvm.conf </p>

<p>For the latest version of JvisualVM 1.3.6 on Mac, the install directories have changed.</p>

<p>It is currently in
<strong>/Applications/VisualVM.app/Contents/Resources/visualvm/etc/visualvm.conf</strong>. </p>

<p>However this may depend on where you have installed VisualVM. The easiest way to find where your VisualVM is to start it, and then look at the process using:</p>

<p>ps -ef | grep VisualVM</p>

<p>You will see something like:</p>

<p>... <strong>-Dnetbeans.dirs=/Applications/VisualVM.app/Contents/Resources/visualvm/visualvm</strong>...</p>

<p>You want to take the netbeans.dir property and look up a directory and you will find the etc folder.</p>

<p>Uncomment this line in the visualvm.conf and change the path to the jdk</p>

<pre><code>visualvm_jdkhome=""/path/to/jdk""
</code></pre>

<p>Additionally, if you are having slowness with your visualvm and you have a lot of memory, I would suggest greatly increasing the amount of memory available and running it in server mode:</p>

<pre><code>visualvm_default_options=""-J-XX:MaxPermSize=96m -J-Xmx2048m -J-Xms2048m -J-server -J-XX:+UseCompressedOops -J-XX:+UseConcMarkSweepGC -J-XX:+UseParNewGC -J-XX:NewRatio=2 -J-Dnetbeans.accept_license_class=com.sun.tools.visualvm.modules.startup.AcceptLicense -J-Dsun.jvmstat.perdata.syncWaitMs=10000 -J-Dsun.java2d.noddraw=true -J-Dsun.java2d.d3d=false""
</code></pre>
"
"20011525","<p>If you do not tell the <code>TreeSet</code> which ordering you want, it will use standard string ordering (alphabetic).</p>

<p>Use the constructor that takes a <code>Comparator&lt;String&gt;</code> and create an instance that sorts the values as you wish.</p>
"
"19952137","<p>You can use Serialization proxy, read the full object in Proxy and write your actual object as you want. Below code creates a ExampleProxy class for your class Example:</p>

<pre><code>    public class Example implements Serializable {
        private static final long serialVersionUID = 8845294179690379902L;
        public int score;
        public String name;    
        public Example(String name, int score) {
            this.name = name;
            this.score = score;
        }
        //public Date eventDate; // suppose this date object was removed from Example class

        private Object writeReplace() {
            System.out.println(""writeReplace called"");
            return new ExampleProxy(this);
        }

        private static class ExampleProxy implements Serializable {
            private static final long serialVersionUID = 8845294179690379902L;
            public int score;
            public String name;
            public Date eventDate;

            public ExampleProxy(Example example) {
                this.score = example.score;
                this.name = example.name;
                // Replace evendate with somethng you want, here: current date
                this.eventDate = new Date();
            }

            private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException{
                System.out.println(""readObject called"");            
                in.defaultReadObject();
                // here you can access whatever was written
                System.out.println(""Name:"" + name + ""Score:"" + score + ""Date:"" + eventDate);
            }

            private Object readResolve(){
                System.out.println(""readResolve called"");
                return new Example(name, score );
            }
        }

        public static void main(String[] a) throws IOException, ClassNotFoundException {
            ByteArrayOutputStream byteAryOs = new ByteArrayOutputStream();
            ObjectOutputStream oos = new ObjectOutputStream(byteAryOs);
            oos.writeObject(new Example(""Nitin"", 100));

            ByteArrayInputStream byteAryIs = new ByteArrayInputStream(byteAryOs.toByteArray());
            ObjectInputStream ois = new ObjectInputStream(byteAryIs);
            Example o = (Example)ois.readObject();

            System.out.println(o);
        }
}
</code></pre>
"
"20011697","<p>If you need a <code>Set&lt;String&gt;</code> with the names of the months and <em>sorted</em>, you may use a <code>LinkedHashSet&lt;String&gt;</code>. From <a href=""http://docs.oracle.com/javase/7/docs/api/java/util/LinkedHashSet.html"" rel=""nofollow"">its javadoc</a> (emphasis mine):</p>

<blockquote>
  <p>Hash table and linked list implementation of the Set interface, with predictable iteration order. This implementation differs from HashSet in that it maintains a doubly-linked list running through all of its entries. This linked list defines the iteration ordering, which is <strong>the order in which elements were inserted into the set</strong> (insertion-order).</p>
</blockquote>

<p>So, just do this:</p>

<pre><code>Set&lt;String&gt; months = new LinkedHashSet&lt;String&gt;();
months.add(""Jan"");
months.add(""Feb"");
months.add(""Aug"");
months.add(""Dec"");
System.out.println(months);
</code></pre>

<p>Output:</p>

<pre><code>[Jan, Feb, Aug, Dec]
</code></pre>
"
"20092137","<blockquote>
  <p>Some of the values in the HashMap are upto 16 digits long after the decimals. </p>
</blockquote>

<p>Wrong. <em>None</em> of the double values in the <code>HashMap</code> are up to 16 digits long after the decimals. Double-precision floating-point has a maximum of 15.9 significant decimal digits. Anything else is an illusion.</p>

<blockquote>
  <p>I am assuming that depending on the machine that these tests run, the last few decimal places might be inaccurate - due to the nature of how fractions are implemented on the hardware.</p>
</blockquote>

<p>Wrong again. The formats and ranges of all primitive types in Java are hardware-independent.</p>

<blockquote>
  <p>How can I modify my assert statement to enable a Window of accuracy for letting the tests pass on different machines?</p>
</blockquote>

<p>Test for equality within an <em>epsilon</em> value.</p>
"
"20120933","<p>Here you go, I added the sorting you asked for,
this code resorts the array1D[] in that special order You mentioned:</p>

<pre><code>package matrixConvertion;
import java.util.Arrays;

public class matrixConvertion {

        public static void main(String[] args)
            {

                int i,j=0;
                int count=10;
                int array2D[][]=new int[2][3];
                int array1D[]=new int[6];

                for(i=0;i&lt;2;i++)
                {
                     for(j=0;j&lt;3;j++)
                     {
                          array2D[i][j]=count;
                          count++;
                     }
                }

                for(i=0;i&lt;2;i++)
                {
                     for(j=0;j&lt;3;j++)
                     {
                          array1D[i+j+i*(array2D[0].length-1)] = array2D[i][j];                       
                     }
                }   
                System.out.println(""1D array is:"");
                System.out.println(Arrays.toString(array1D));


                Arrays.sort(array1D);
                System.out.println(""sorted 1D array is:"");
                System.out.println(Arrays.toString(array1D));
                int n=0, g=2;
                int[] reSorted=new int[array1D.length];
                for(int k=0; k&lt;array1D.length; k++)
                {   
                      reSorted[k]=array1D[array1D.length-1-n];                    
                      n+=g;
                         if(n&gt;=array1D.length)
                         {
                            n=array1D.length-1; g=-2; 
                         }
                }
                System.out.println(""reSorted 1D array is:"");
                System.out.println(Arrays.toString(reSorted));              


            }

}
</code></pre>
"
"19974132","<p>Since Java is statically typed, one good way of simulating dynamic objects is by using a Map. I would do this for passing dynamic parameters to my resolvers:</p>

<pre><code>class StrategyParameter extends Map {} 
// Map could be used directly, but this make the code more readable
</code></pre>

<p>Then, my strategy pattern becomes:
interface ClerkResolver {
    String resolveClerk(StrategyParameter strategyParameter);
}</p>

<pre><code>class DefaultClerkResolver implements ClerkResolver {

    public String resolveClerk(StrategyParameter strategyParameter) {
        // strategyParameter.get(""department"");
    }
}

class CountryClerkResolver implements ClerkResolver {

    public String resolveClerk(StrategyParameter strategyParameter) {
        // strategyParameter.get(""country"");
    }

}
</code></pre>
"
"20136160","<p>My guess is that this is because you're attempting network activity on the main thread. That's a no-no.</p>

<p>Perhaps adding a default exception handler and a breakpoint there will help-</p>

<pre><code>Thread.setDefaultUncaughtExceptionHandler( new Thread.UncaughtExceptionHandler() {
    @Override
    public void uncaughtException(Thread thread, Throwable throwable) {
        throwable.printStackTrace();
    }
});
</code></pre>
"
"20044585","<p>Using 'args' from command line arguments you can use:</p>

<pre><code>    List&lt;Double&gt; numbers = new ArrayList&lt;Double&gt;();
    for(String a:args){
        numbers.add(Double.valueOf(a));
    }        
    System.out.println(numbers);
</code></pre>
"
"20052273","<p>You can do that with <code>Class.isInstance()</code> method. In your base class, do this.</p>

<pre><code>public static boolean isAnInstance(Object obj)
{
    return BaseClass.class.isInstance(obj);
}
</code></pre>

<p>Then you can check</p>

<pre><code>if (BaseClass.isAnInstance(object))
{
    // Class of object is 'BaseClass' or
    // it extends the 'BaseClass'
}
</code></pre>

<p>Hope this helps.</p>
"
"20131893","<p>Presuming that you're not asking about the parsing, you can convert a string like ""10"" into an integer like this:</p>

<pre><code>int i = Integer.parseInt(""10"");
</code></pre>
"
"20189610","<p>You're putting your method inside the main method, effectively <em>nesting</em> it. This isn't allowed. Place your max method outside of the main method, and remove the static keyword from the class declaration.</p>

<pre><code>public class mandag25nov
{
    public static void main(Strings[] args)
    {
        max(0, 1) //place the desired arguments in here
    }

    public static int max(int a, int b)
    {
        if (a &gt; b)
        {
            return a;
        }
        else
        {
            return b;
        }
    }
}
</code></pre>
"
"20193380","<p>Try this:</p>

<pre><code>if (!(isAset ^ isBset ^ isCset ^ isDset))
</code></pre>

<p>This will true only is any one is true or else false.</p>
"
"20083731","<p>This should do the trick</p>

<pre><code>List&lt;class&gt; allClassess = HelloWorld.GetClasses();

foreach (currentClass class in  allClassess )
    currentClass.Initialize();
</code></pre>
"
"20163841","<p>No.</p>

<p>As mentioned by Peter Lawrey in the comment for the question, Java is all about object oriented programming. While certain functional aspects are doable and being put into eg. Java 8, at its core Java is not functional. <code>static</code> breaks so much of the benefits of learning how to do modern Java - not to mention all kinds of not-fun-at-all scoping problems - that there's no purpose to use them <strong><em>unless</em></strong> you're some kind of a Java wizard who really knows what happens when you use that magical keyword.</p>

<p>You are not a wizard. Java is not functional. If you want to be a wizard, you can learn. If you want to program in functional fashion, look into hybrid languages such as Scala or Groovy or alternatively explore the fully functional world, eg. Clojure.</p>
"
"20169381","<p>Why do you think <code>$cnt</code> should be equal to <code>3</code>? Shouldn't it be equal to <code>1</code> if the process is already running?</p>
"
"20083315","<p>Your lines</p>

<pre><code>Agent a = new Agent();   //creates an instance of Agent in variable a
a.generateAgent();       //creates another instance which is discarded
                         //this static method unnecessarily called on an instance
                         //the method is static, but there is no such thing as a 
                         //static object, only object instances.

Agent b = new Agent();   //creates a third instance
b.generateAgent();       //creates a fourth instance, this one thown away

a.sayHelloTo();     //method called on the first instance you created
</code></pre>

<p>You might want a method with a parameter, and call that on ""a"" and pass ""b"".  The object can keep a reference to the other object, and they can call methods on the other.</p>

<p>Maybe something like this:</p>

<pre><code>public class Agent {
    Agent neighbor;
    String name;

    public Agent(String myName) {
        //initialization code
        name = myName;
        neighbor = null;    //not strictly necessary, but included for clarity
    }

    public void introduce(Agent other) {
         neighbor = other;
    }

    public String getName() {
        return name;
    }

    public String getNameAndNeighbor() {
        if (neighbor==null) {
            return ""my name is ""+name+"" and I have no neighbor"";
        }
        else {
            return ""my name is ""+name+"" and my neighbor's name is ""+neighbor.getName();
        }
    }
}
</code></pre>

<p>And the following main code:</p>

<pre><code>Agent a = new Agent(""Harry"");
Agent b = new Agent(""Joe"");
a.introduce(b);
b.introduce(a);
System.out.println( a.getNameAndNeighbor() );

//produces ""my name is Harry and my neighbor's name is Joe""
</code></pre>

<p>Each of these objects has a member 'neighbor' which references the other object, and allows them to call methods on the other.</p>
"
"20182645","<p>How about...</p>

<pre><code>int width = 5;
for (int i = 1; i &lt;= width; i+=2){
    System.out.println(String.format(""%""+i+""s"", """").replaceAll("" "", ""*""));
}
for (int i = width-2; i &gt; 0; i-=2){
    System.out.println(String.format(""%""+i+""s"", """").replaceAll("" "", ""*""));
}
</code></pre>

<p>Or, even better yet...</p>

<pre><code>int width = 7;
double half = width / 2
for (int i = 0; i &lt; width; i++){
    System.out.println(String.format(""%""+((i &lt; half ? i : (width-i-1))*2+1)+""s"", """").replaceAll("" "", ""*""));
}
</code></pre>

<p>Gives</p>

<pre><code>*
***
*****
***
*
</code></pre>
"
"20222950","<p>I'm not really familiar with the maven assembly goal but the fact you've scoped these dependencies to compile time only could mean that these dependencies aren't included in the assembly. Could you try removing the:</p>

<p><code>&lt;scope&gt;compile&lt;/scope&gt;</code></p>

<p>Parts from your dependency declarations?</p>
"
"20118827","<p>Use Bitwise AND instead of &amp;&amp;</p>

<pre><code>   if (methodA() &amp; methodB() &amp; methodC()) {code}
</code></pre>
"
"20136161","<p>i saw your code, i think that we can do this, follow is my modified code:</p>

<pre><code>public class Triangle {

public static void main(String args[]) {

    System.out.println(""Input the number of lines you want to print."");
    Scanner a = new Scanner(System.in);
    int n = a.nextInt();
    int [] row = new int[0];
    for (int i = 0; i &lt; n; i++) {
        row = nextRow(row);
        for (int j = 0; j &lt; n - i; j++) {

            // Padding For Triangle
            System.out.print(""   "");

        }
        // Output the values
        for (int j = 0; j &lt; row.length; j++) {

            System.out.print(row[j] + ""     "");

        }
        // Start New Line
        System.out.println();
    }
}

/* set space between each other. */
public static String printSpace(int n) {
    String result = """";
    for (int i = 0; i &lt; n; i++) {
        result += ""     "";// 5 space
    }

    return result;
}

/* Find Values Of Next Row */
public static int [] nextRow(int row[]) {

    int nextRow[] = new int[row.length + 1];

    nextRow[0] = row.length + 1;
    nextRow[nextRow.length - 1] = row.length + 1;
    for (int i = 1; i &lt; nextRow.length - 1; i++) {

        nextRow[i] = 0;
    }
    return nextRow;
}
</code></pre>

<p>}</p>

<hr>

<p>may be this is answer what you want.</p>
"
"20207369","<p>Here is my code to multiply the fraction. More simpl, hopefully will answer your question.</p>

<pre><code>import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;
import java.util.StringTokenizer;

public class javatest3
{
    static int num1 = 0;
    static int num2 = 0;
    static int denom1 = 0;
    static int denom2 = 0;

    public static void main(String[] args)
    {
        javatest3 javatest3 = new javatest3();
        System.out.println(""Enter an expression (or \""quit\""): ""); // prompts
                                                                    // user for
                                                                    // input
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        String[] array = null;
        try {
            array = in.readLine().trim().split("" "");
            /*
             * I get the array[0] and array[2], it because 2/3 * 3/4
             * 2/3 is array[0], * is array[1] and 3/4 is array[2]
             */
            String[] arrayX = array[0].split(""/"");
            String[] arrayY = array[2].split(""/"");
            String result = javatest3.multiplyFaction(
                    Integer.valueOf(arrayX[0]), Integer.valueOf(arrayY[0]),
                    Integer.valueOf(arrayX[1]), Integer.valueOf(arrayY[1]));

            System.out.println(""Result: "" + result);
        }
        catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        // intro();

    }

    private String multiplyFaction(int x1, int y1, int x2, int y2)
    {
        int mf1 = x1 * y1;
        int mf2 = x2 * y2;

        return String.valueOf(mf1) + ""/"" + String.valueOf(mf2);
    }

//  public static void intro()
//  {
//      Scanner input = new Scanner(System.in);
//      String user = input.nextLine();
//      while (!user.equals(""quit"") &amp; input.hasNextLine()) { // processes code
//                                                              // when user
//                                                              // input does
//                                                              // not equal
//                                                              // quit
//          StringTokenizer chunks = new StringTokenizer(user, "" ""); // parses
//                                                                      // by
//                                                                      // white
//                                                                      // space
//          String fraction1 = chunks.nextToken(); // first fraction
//          String operand = chunks.nextToken(); // operator
//          String fraction2 = chunks.nextToken(); // second fraction
//          System.out.println(""Fraction 1: "" + fraction1);
//          System.out.println(""Operation: "" + operand);
//          System.out.println(""Fraction 2: "" + fraction2);
//          System.out.println(""Enter an expression (or \""quit\""): ""); // prompts
//                                                                      // user
//                                                                      // for
//                                                                      // more
//                                                                      // input
//
//          while (user.contains(""*"")) {
//              parse(fraction1);
//              parse(fraction2);
//              System.out.println(""hi"");
//              int num = num1 * num2;
//              int denom = denom1 * denom2;
//              System.out.println(num + ""/"" + denom);
//              user = input.next();
//
//          }
//
//      }
//  }

//  public static void parse(String fraction)
//  {
//      if (fraction.contains(""_"")) {
//          StringTokenizer mixed = new StringTokenizer(fraction, ""_"");
//          int wholeNumber = Integer.parseInt(mixed.nextToken());
//          System.out.println(wholeNumber);
//          String frac = mixed.nextToken();
//          System.out.println(frac);
//          StringTokenizer parseFraction = new StringTokenizer(frac, ""/""); // parses
//                                                                          // by
//                                                                          // forward
//                                                                          // slash
//          int num = Integer.parseInt(parseFraction.nextToken());
//          System.out.println(num);
//          int denom = Integer.parseInt(parseFraction.nextToken());
//          System.out.println(denom);
//
//      }
//      else if (!fraction.contains(""_"") &amp;&amp; fraction.contains(""/"")) {
//          StringTokenizer parseFraction = new StringTokenizer(fraction, ""/""); // parses
//                                                                              // by
//                                                                              // forward
//                                                                              // slash
//          int num = Integer.parseInt(parseFraction.nextToken());
//          System.out.println(num);
//          int denom = Integer.parseInt(parseFraction.nextToken());
//          System.out.println(denom);
//
//      }
//      else {
//          StringTokenizer whiteSpace = new StringTokenizer(fraction, "" "");
//          int num = Integer.parseInt(whiteSpace.nextToken());
//          System.out.println(num);
//      }
//  }
}
</code></pre>
"
"20209338","<p>Add a new line</p>

<pre><code>for (int i = 0; i &lt; rows; i++) {
  for (int j = 0; j &lt; cols; j++) {
    System.out.print ( intar[i][j] + "" "" );
  }
    System.out.print ( ""\n"" );
}
</code></pre>

<p>BTW You will also want to do padding</p>
"
"20317604","<p><code>catch</code> block is associated with the <code>try</code> block. So your code will be</p>

<pre><code>try {
    // read file
    //.....
} catch(IOException e) {
    System.out.println(e);
    System.exit(-1);
}
</code></pre>

<p>More reading : <a href=""http://docs.oracle.com/javase/tutorial/essential/exceptions/catch.html"" rel=""nofollow"">Oracle tutorial</a> </p>

<p>Move the <code>br</code> out of the <code>try</code> block scope. The compiler is complaining about can't recognize <code>br</code> because after try block scope <code>br</code> can not be seen. <a href=""http://java.about.com/od/s/g/Scope.htm"" rel=""nofollow"">Java Scope</a></p>
"
"20164344","<p>no, you should not make a method <code>non-private</code> because you break a encapsulation idiom.   </p>
"
"20360035","<p>Assuming all your numbers are 3 characters long, you may want to use <a href=""http://developer.android.com/reference/java/lang/String.html#substring%28int,%20int%29"" rel=""nofollow"">substring(int, int)</a> in a function like :</p>

<pre><code>public static int[] getIntegersFromString(String numbers){
    int[] result = new int[numbers.length()/3];
    from(int i=0; i&lt;(numbers.length()/3)-1; i++){
        result[i] = numbers.substring(i*3, i*3+2);
    }
    return result;
}
</code></pre>
"
"20190268","<p>You need to synchronize your ServletContext object. for eg:-</p>

<pre><code>synchronized(ctx){
 //your code here
}
</code></pre>
"
"20190372","<p>After setting precision and get as a <code>String</code> You can canvert it back to float by </p>

<p><code>float f = Float.parseFloat(YourString);</code></p>
"
"20212243","<p>try this..</p>

<pre><code>    br=new BufferedReader(new FileReader(path)); 
    br.readLine();           
    while ((line = br.readLine()) != null) {
         if (line.startsWith(""child's Last Name"")) {
                 list.add(line);
         }               
    }      
</code></pre>
"
"20309373","<p>Here is my solution</p>

<pre><code>public String countChars(String in){
 LinkedHashMapMap&lt;Character, Integer&gt; map = new LinkedHashMap&lt;Character, Integer&gt;();
 for(char c: in.toCharArray()){
   Integer count =  map.get(c);
   if(count==null){
    count=0;
   }
   count++;
   map.put(c,count);
 }
 String out ="""";
 for(Entry&lt;Character, Integer&gt; e : map.entrySet()){
    out += e.getKey()+e.getValue();
 }
 return out;
}
</code></pre>
"
"20288668","<pre><code>import org.apache.commons.lang3.StringUtils;

public class Main {

    public static void main(String[] args) {
        int amountOf_ = 10;
        System.out.println(""|"" + StringUtils.rightPad(""Word"", amountOf_, ""_"") + ""|"");
    }
}
</code></pre>
"
"20331631","<p>This is because you are not incrementing the node value at the end of the loop . Also do a null check to check the end . </p>

<pre><code>        public boolean member(Integer val){
            if(node.next!=null){
            if(node.val.equals(val) || node.next.val.equals(val)){
                System.out.println(""true"");
                node = node.next; // incrementing the node value 
                return true;
            }
            return false;
        }
    }
    else {
    if( node.val.equals(val)){
    return true;
    }
else{
return false;
}
    }
</code></pre>
"
"20334275","<p>Add to your spring xml </p>

<pre><code>&lt;context:component-scan base-package=""com.your.package"" /&gt;
</code></pre>
"
"20313882","<p>I have been using this solution, it's simple and efficient:</p>

<pre><code>                jtextfield.addKeyListener(new KeyAdapter() {
                public void keyTyped(KeyEvent e) {
                    char vChar = e.getKeyChar();
                    if (!(Character.isDigit(vChar)
                            || (vChar == KeyEvent.VK_BACK_SPACE)
                            || (vChar == KeyEvent.VK_DELETE))) {
                        e.consume();
                    }
                }
            });
</code></pre>
"
"20461113","<p><code>Out of memory heap space</code>  comes into picture is the program is going in an infinite loop.</p>

<p>Your code :</p>

<pre><code> while (true) {
        try {
            lastInput = Input.readLine();
        } catch (IOException e) {}
        if (lastInput != null) {
            System.out.println(lastInput);
            if (lastInput.startsWith(""Chat: "")) {
                sendToAllClients(lastInput.substring(7));
            }
        }
</code></pre>

<p>says that the code inside the loop will run infinite many times without any condition acting as an exit condition. Even when an issue is coming : you are catching that exception and the code keeps on continuing inside the loop.</p>

<p>This leads to <code>Out of Memory : Heap Space.</code></p>

<p>Suggesed solution :</p>

<pre><code>while (true) 
{
    try 
    {
        lastInput = Input.readLine();
    } 
    catch (IOException e) 
    {
     break;
    }
    if (lastInput != null) 
        {
           System.out.println(lastInput);
            if (lastInput.startsWith(""Chat: "")) 
            {
            sendToAllClients(lastInput.substring(7));
            }
        }
}
</code></pre>

<p>This loop would break as soon user enters any name that causes an exception(which actually acts as an exit condition foe the while loop)</p>

<p><strong>EDIT</strong></p>

<p>One area which I see could be the source of the issue could be : </p>

<pre><code>lastInput.substring(7)
</code></pre>

<p>If the <code>lastInput</code> string is of huge size that could almost fill up the <code>heap space of the JVM</code> installed on the system, then calling a <code>substring</code> from the <code>7th character to the last character</code>, would internally trigger the creation of new <code>String</code> (as Strings are immutable), &amp; with not enough heap space left, <code>substring</code> execution gives an <code>OutOfMemory exception</code>.</p>
"
"20343256","<p>in php you should use</p>

<pre><code>    ""Insert into employeedetails(FirstName,LastName,JobTitle,StartedDate,Salary,CompanyName)  values 
('"".$fname.""','"".$lname.""','"".$job.""','"".date('d/m/Y').""','"".$salary.""','"".$company.""')"";
</code></pre>
"
"20378542","<p>It looks like you are using a customized ListAdapter.
As it is not important in this case which view is the parent of the inflated view just user this:</p>

<pre><code>convertView = mInflater.inflate(R.layout.activity_main, null);
</code></pre>

<p>If you think it is necessary to put a parent for this view just use this line:</p>

<pre><code>convertView = mInflater.inflate(R.layout.activity_main, (ViewGroup)findViewById(R.layout.list_item_user_video), false);
</code></pre>
"
"20370985","<p>As a starting point, use <code>int</code> which is probably native to the architecture and you'll avoid possible implicit conversions when comparing <code>i</code> with other bits and pieces. So my bet is that both <code>byte</code> and <code>short</code> will wind up being <em>slower</em>.</p>

<p>A far cuter optimisation would be to use <code>++i</code> rather than <code>i++</code>, as the former will never be slower than the latter. (Conceptually <code>i++</code> has to return a copy even though it will be optimised out by a good java compiler).</p>
"
"20401011","<p><strong><code>StrictMode.ThreadPolicy</code></strong> was introduced since API Level 9 and the default thread policy had been changed since API Level 11, which in short, does not allow network operation </p>

<p>(eg: <code>HttpClient</code> and <code>HttpUrlConnection</code>) get executed on UI thread. If you do this, you get <strong><code>NetworkOnMainThreadException</code></strong>.</p>

<p>You can easily solve this error By two ways:- </p>

<ol>
<li><p>The recommended way of solving this is by Using <code>anAsyncTask</code> so
that the network request does not block the UI thread.</p></li>
<li><p>Alternatively, you can override this thread policy by adding the
below code into your main activity’s onCreate() method.</p></li>
</ol>

<blockquote>
<pre><code>if (android.os.Build.VERSION.SDK_INT &gt; 9) {
    StrictMode.ThreadPolicy policy = 
    new StrictMode.ThreadPolicy.Builder().permitAll().build();      
        StrictMode.setThreadPolicy(policy);
 }
</code></pre>
</blockquote>

<p>Hope this is helpful to you..</p>
"
"20401143","<p>Always use <code>AsyncTask</code> to solve this issue. </p>

<p><strong>BUT</strong>, if you're within the movie <a href=""http://en.wikipedia.org/wiki/Swordfish_%28film%29"" rel=""nofollow"">Swordfish</a>, someone points a gun at you and say ""fix it in 30 seconds"", then change your <code>targetSdkVersion</code> to <strong>9</strong> in the <code>Android Manifest</code> and the exception will stop. Don't worry, it will run on devices with version higher than 9 too. Even so, correct your code later using <code>AsyncTask</code>.</p>
"
"20381569","<p>This doesn't seem to have  <code>&lt;a&gt; &lt;/a&gt;</code> tags   so selenium might not be able to detect it as a link.</p>

<p>You may try and use</p>

<pre><code>driver.findElement(By.xpath(""//*[@class='ng-binding']"")).click();
</code></pre>

<p>if this is the only element in that page with this class .</p>
"
"20568892","<p>Try this: only if you need rotating the camera</p>

<pre><code>CameraPosition cameraPosition = new CameraPosition.Builder()
                .target(centerCoordinates)      // Sets the center of the map
                .zoom(zoom)                   // Sets the zoom
                .bearing(bearing)             // Sets the orientation of the camera to east
                .tilt(30)                   // Sets the tilt of the camera to 30 degrees
                .build();                   // Creates a CameraPosition from the builder

googleMap.animateCamera(CameraUpdateFactory.newCameraPosition(cameraPosition));
</code></pre>
"
"20589251","<pre><code>ArrayList&lt;String&gt; names = new ArrayList&lt;String&gt;();
String userInput;
Scanner scanner = new Scanner(System.in);
while (true) {
    userInput = scanner.next();
    if (userInput.equals(""done"")) {
        break;
    } else {
        names.add(userInput);
    }
}       
scanner.close();
</code></pre>
"
"20589272","<pre><code>String[] inputArray = new String[0];
do{
  String input=getinput();//replace with custom input code
  newInputArray=new String[inputArray.length+1];
  for(int i=0; i&lt;inputArray.length; i++){
    newInputArray[i]=inputArray[i];
  }
  newInputArray[inputArray.length]=input
  intputArray=newInputArray;
}while(!input.equals(""done""));
</code></pre>

<p>untested code, take it with a grain of salt.</p>
"
"20460119","<pre><code>  Scanner sc=new Scanner(System.in);
word=sc.nextLine();   
  for(int j=word.length;j&gt;=0;j--)
   {

  }
    }
</code></pre>
"
"20632303","<p>You need to initiallize the array: </p>

<pre><code> for(int i=0;i&lt;numberOfSellers;i++)
 { 
    seller[i] = new seller();
 }
</code></pre>
"
"20531512","<p>use this method :  </p>

<blockquote>
  <p>public static String md5(String input) {</p>
</blockquote>

<pre><code>    String md5 = null;

    if (null == input)
        return null;

    try {

        // Create MessageDigest object for MD5
        MessageDigest digest = MessageDigest.getInstance(""MD5"");

        // Update input string in message digest
        digest.update(input.getBytes(), 0, input.length());

        // Converts message digest value in base 16 (hex)
        md5 = new BigInteger(1, digest.digest()).toString(16);

    } catch (NoSuchAlgorithmException e) {

        e.printStackTrace();
    }
    return md5;
}
</code></pre>
"
"20499731","<pre><code>(""Deeppan"" || ""thin"")
</code></pre>

<p>is a boolean expression. equalisIgnoreCase takes a string. Therefore you need to make two seperate calls and OR the (boolean) results</p>
"
"20648877","<p>Two options: create a <code>Map&lt;String, Object&gt;</code> that connects the two, or use reflection. I prefer reflection.</p>

<p>in order to get the field:</p>

<pre><code>public class Test {
    private int dog = 10;
    private String anything = ""dog"";

    public static void main(String[] args){
        Test obj = new Test();
        Object field = obj.getClass()
                          .getDeclaredField(obj.anything)
                          .get(obj);            
        System.out.println(field);
    }
}
</code></pre>

<p>Output:</p>

<blockquote>
  <p>10</p>
</blockquote>

<p>Create an object of the class that you will use. Then use the <code>getDeclaredField()</code> method on the class of that object. This will look into the <code>private</code> fields that are set, <code>getField()</code> holds only the <code>public</code> fields. That's it.</p>

<p>I've removed the try-catch from the post because it just clutters it.</p>
"
"20500154","<p>In Java all local variables will be stored on Stack. So if u write </p>

<pre><code>class X
{  
public static void main(String args[])
{
   int a = 2;    // At this point var 'a' is stored on Stack
   {
       /*
       Now as the prev. 'main method is not yet complete so var 'a' is still present on the Stack. So at this point compiler will give error ""a is already defined in main(java.lang.String[])"" 
        */
       int a = 3;   

   }
 }
}
</code></pre>

<p>Hope this help you out</p>

<p>Thanks</p>
"
"20543920","<p>try
this way</p>

<pre><code>byte[] b=str.getBytes();
</code></pre>

<p><a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#getBytes%28%29"" rel=""nofollow"">getBytes()</a></p>

<p>Update as per your modified question,do this way</p>

<pre><code>byte[] b = str.getBytes(""UTF-8"");
</code></pre>

<p>But if you do this way then compiler will complain to add you throws declaration or surround with try-catch block
So the code will be like this</p>

<pre><code>try {
        byte[] b=str.getBytes(""UTF-8"");
    } catch (UnsupportedEncodingException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
</code></pre>
"
"20520576","<p>Use ISO-8859-1 when converting bytes to String and back</p>

<pre><code>    String s = new String(bytes, ""ISO-8859-1"");
    bytes = s.getBytes(""ISO-8859-1"");
</code></pre>
"
"20553713","<p>Answer before my is right!
You can do: <code>sprite.setColor(new Color(Color.WHITE));</code>
This is more simply for you i think...</p>
"
"20656957","<p>I usually wrap this into a private method, storing the object into a private field:</p>

<pre><code>private Properties _testProperties;
private Properties properties() {
  if (_testProperties == null) {
        InputStream inputStream = new ClassPathResource(""test.properties"").getInputStream();
       _testProperties = new Properties();
        inputStream.close();
       _testProperties.load(inputStream);
  }
  return _testProperties ;
}

public String getproperties(String property) {
   return properties().getProperty(property);
}
</code></pre>
"
"20521762","<pre><code>@Override
protected void onCreate(Bundle savedInstanceState) {
    // TODO Auto-generated method stub
    super.onCreate(savedInstanceState);
    setContentView(R.layout.prvi);

    final MediaPlayer mpButtonClick1 = MediaPlayer.create(this, R.raw.spalshm);

    boolean isOn = false;

    Button dugme = (Button) findViewById(R.id.dugme);
    dugme.setOnClickListener(new View.OnClickListener() {

        @Override
        public void onClick(View v) {
            is(!isOn) { // if not playing
                mpButtonClick1.start(); // start
                isOn = true; // now it is
            } else { // otherwise it's already on
                mpButtonClick1.stop(); // turn it off
                isOn = false; // now it's off
            }
        }
    });     
}
</code></pre>
"
"20549316","<p>This would be simpler in Java 8 with map. Here is the Java 7 version:</p>

<pre><code>    File filename = new File(""/Users/timothylee/gravity1.txt"");

    List&lt;Double&gt; doubleList = new ArrayList&lt;Double&gt;();
    try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
        String line;
        while ((line = reader.readLine()) != null) {
            doubleList.add(Double.parseDouble(line))
        }
    }

    double[] doubles = new double[doubleList.size()];
    for (int i = 0; i &lt; doubleList.size(); i++) {
        doubles[i] = doubleList.get(i);
    }
</code></pre>
"
"20561144","<p>I think You can try to use such a regex:</p>

<pre><code>\d\d\d\d\d\d\d\d\d\d
</code></pre>

<p>which is basically 10 times \d</p>
"
"20585917","<p>try in xml:</p>

<pre><code>android:fontFamily=""somefont.ttf""
</code></pre>

<p>From android 4.1+ the following font are available: <a href=""http://robotofont.com/"" rel=""nofollow"">http://robotofont.com/</a></p>

<pre><code>android:fontFamily=""sans-serif""  
android:fontFamily=""sans-serif-thin""        
android:fontFamily=""sans-serif-light""     
android:fontFamily=""sans-serif-condensed"" 
</code></pre>

<p>you can also set font programaticly:</p>

<pre><code>TextView t = (TextView) findViewById(R.id.name);
Typeface font = Typeface.createFromAsset(getAssets(),""font/somefont.ttf"");
t.setTypeface(font);
</code></pre>

<p>put the font file in a folder...</p>
"
"20585984","<p>the first index of a array is zero. not one.</p>

<pre><code>for(i = 0; i &lt; tenIntArray.length; i++)
</code></pre>

<p>so correct this.
the code that you asked is :</p>

<pre><code>    int small = Integer.MAX_VALUE;
    int i = 0;
    int index = 0;
    for(int j : tenIntArray){
        if(j &lt; small){
            small = j;
            i++;
            index = i;
        }
    }
    System.out.print(""The smallest value is""+small+""at position""+ index +""in array"");
</code></pre>
"
"20557622","<p>You can use StringTokenizer:</p>

<pre><code>String str = ""Word: Word1 Description: Desc1 Type: 1"";
StringTokenizer st = new StringTokenizer(str,"" "");

st.nextToken();
String word = st.nextToken();
St.nextToken();
String description = st.nextToken();
st.nextToken();
String type = st.nextToken();
</code></pre>
"
"20720503","<p>All the code that was showed here is invalid because the user can enter 0 and 0 should be printed out.</p>

<p>The valid code will look the following way</p>

<pre><code>do
{
    System.out.print( number % 10 );
    number = number / 10;
    if ( number != 0 )
        System.out.print( "","" );
} while ( number != 0 );
</code></pre>
"
"20723144","<p>I'm new to java, and I'm not really sure of the context for this question, but if all you want to do is output 8, you can just make it xy++ instead of x++.</p>

<pre><code>Integer x = 5;
Integer y = 2;
Integer xy = x+y;
int xy2 = x+y; // just testing to see if it makes a difference
System.out.println(""xy = "" + xy); // outputs: 7
System.out.println(""xy2 = "" + xy2); // outputs: 7

**xy++;**
System.out.println(""xy = "" + xy); // **outputs: 8**
System.out.println(""xy2 = "" + xy2); // outputs: 7
</code></pre>
"
"20594529","<p>The lines that are of great interest are:<br/></p>

<pre><code>char ch = args[0].charAt(i); //let's further refer it as line 1
</code></pre>

<p>and</p>

<pre><code>r = r * 10 + ch - '0'; //let's further refer it as line 2
</code></pre>

<p>And let's assume the argument to your program is <code>32</code>.</p>

<p>In Java, all arguments to a command line program are passed to the <code>main</code> method as <code>String</code>s. So the <code>args</code> array will contain a single element - the string ""32"".</p>

<p>The <code>for</code> loop iterates through the characters (<code>char</code> variables) of this <code>String</code>. What you have to understand is that the numeric value of a <code>char</code> representing a digit is not equal to the value of that digit. Instead, it is the numeric value given by the ASCII code of that character.</p>

<p>I.e. <code>char</code>s from <code>0</code> to <code>9</code> will have numeric values ranging from 48 to 57.</p>

<p>Let's look at line 1 (as I labeled them above). There, you isolate the character corresponding to your iteration through the <code>String</code>.</p>

<p>The statement at line 2 can be broken down for a better understanding, as follows:<br/></p>

<pre><code>int digitVal = ch - '0';
r = r * 10 + digitVal;
</code></pre>

<p>The first line in the above snippet does the following: subtract the ASCII value of the character <code>0</code> from the actual digit character. E.g. if <code>ch</code> is <code>'2'</code>, then <code>digitVal</code> will store value <code>2</code>. </p>

<p>Then, at the next line the digit numeric value is used in an arithmetic expression for building the numeric value step by step. E.g. if we are at digit <code>2</code> from number <code>32</code>, that line will do: <code>r = 3 * 10 + 2</code>, which will store <code>32</code> as an <code>int</code> value in <code>r</code>.</p>

<p>After the iteration through the digits is done, the number parsed from the <code>String</code> (e.g. <code>32</code> as an integer parsed from <code>""32""</code> as a <code>String</code>) will be stored in variable <code>r</code>. What remains to be done is print <code>r</code> multiplied by 2, which happens in the last line of the <code>main</code> method.</p>

<p>So, what happens step by step with the input <code>32</code> is the following:</p>

<p>-- read the input as a <code>String</code>; that is <code>""32""</code>;<br/>
-- initialize <code>r = 0</code>; this will store the parsed number</p>

<p>-- find the first character: <code>'3'</code> as a 'char';<br/>
-- translate it to its corresponding numeric value (not the ASCII value!); that is <code>3</code>;<br/>
-- r = r *10 + 3 = 0 * 10 + 3 = 3;</p>

<p>-- find the second character: <code>'2'</code> as a 'char';<br/>
-- translate it to its corresponding numeric value (not the ASCII value!); that is <code>2</code>;<br/>
-- r = r *10 + 2 = 3 * 10 + 2 = 32;</p>

<p>-- print r * 2</p>

<p>Anyway, this should only work as a teaching example. All the below could have been done simpler in one line of code:</p>

<pre><code>System.out.println(Integer.parseInt(args[0]) * 2);
</code></pre>

<p>This solution will also take care (i.e. throw an exception) of the case when the input is not a number, e.g. <code>""3a""</code> or <code>""Bazinga!""</code>.</p>
"
"20563475","<p>Upto Java 7 there is no double colon operator(::) in java as in C++.
But Java 8 introduce double colon operator which is used to refer the methods.</p>

<p>Example(For Static Method)</p>

<pre><code>public class TestClass {

    public void functionTest() {...}

}
</code></pre>

<p>We can call function 'functionTest()' by using double colon operator(::).</p>

<pre><code>TestClass t=new TestClass();
t::functionTest
</code></pre>

<p>If 'functionTest()' is static then we can refer directly by using class name </p>

<pre><code>TestClass::functionTest
</code></pre>

<p>There are four kinds of method references(as written in java doc)</p>

<p>For more information refer <a href=""http://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html"" rel=""nofollow"">java doc</a></p>
"
"20607856","<p>++i will increment the value of 'i', and then return the incremented value.
Example:</p>

<pre><code>int i=1;
System.out.print(++i);
//2
System.out.print(i);
//2
</code></pre>

<p>i++ will increment the value of 'i', but return the original value that 'i' held before being incremented.</p>

<pre><code>int i=1;
System.out.print(i++);
//1
System.out.print(i);
//2
</code></pre>
"
"20755339","<p>There are two parts to your question:</p>

<p>Part 1: What is the <code>&lt;M&gt;</code>?</p>

<p>The presence of a generic parameter on a method makes it a ""typed method"", which means the method has a generic type that is determined by the caller, usually by inference. It may be bounded. If the class has a type too and the method is an instance method, the two types are unrelated.</p>

<p>Part 2:</p>

<p>The generic types must match <em>exactly</em>. The reason boils down to the fact that if <code>B</code> is a subtype of <code>A</code>, <code>SomeClass&lt;T extends B&gt;</code> is not a subtype of <code>SomeClass&lt;T extends A&gt;</code>, more particularly, <code>SomeClass&lt;A&gt;</code> is not a subtype of <code>SomeClass&lt;? super A&gt;</code>.</p>
"
"20657573","<p>You can use Java reflection to access the array of <code>SomeClass</code> from a different class.</p>

<p>Here is small code for demonstrating it:</p>

<pre><code>public class POC {
    public static void main(String args[]) {
        new POC().run();
    }

    private void run() {
        SomeClass sc = new SomeClass();
        say(""BEFORE: "");
        sc.showArray();

        DifferentClass dc = new DifferentClass();
        dc.manipulateArray(sc);

        say(""---"");
        say(""AFTER: "");
        sc.showArray();
    }

    private class SomeClass {
        private int array[];

        public SomeClass() {
            array = new int[3];

            array[0] = 1;
            array[1] = 1;
            array[2] = 1;
        }

        public void showArray() {
            for (int i = 0; i &lt; array.length; i++) {
                say(i + ""&gt;"" + array[i]);
            }
        }
    }

    private class DifferentClass {
        public void manipulateArray(SomeClass sc) {
            try {
                Field arrayField = sc.getClass().getDeclaredField(""array"");
                arrayField.setAccessible(true);

                Object array = arrayField.get(sc);
                for (int i = 0; i &lt; Array.getLength(array); i++) {// equivalent to for(int i=0;i&lt;3;i++){
                    Array.set(array, i, 0); // equivalent to array[i]=0;
                }

                arrayField.setAccessible(false);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    private static void say(String msg) {
        System.out.println(msg);
    }
}
</code></pre>

<p><strong>OUTPUT</strong></p>

<pre><code>BEFORE: 
0&gt;1
1&gt;1
2&gt;1
---
AFTER: 
0&gt;0
1&gt;0
2&gt;0
</code></pre>
"
"20771020","<p>Try this:</p>

<pre><code> ServerResponse = response.toString();
 ServerResponse = ServerResponse.replaceAll(""[^a-zA-Z]"", """"); 
 list =ServerResponse.split(""\n"");
</code></pre>
"
"20680065","<p>How about </p>

<pre><code>public class ThreadsManager {
    private final static ThreadsManager instance = new ThreadsManager();
    private static String userName;

public static synchronized ThreadsManager getInstance( String user ) {
    if ( username == null ) { userName = user; }
    return instance;
}
</code></pre>

<p>That would ensure <code>userName</code> is only set the first time.</p>

<p>It is, however, potentially very confusing semantics for a singleton to take a parameter that is ignored on subsequent <code>getInstance()</code>'s - possibly even race-condition-prone, depending on your use-case.</p>

<p>Cheers,</p>
"
"20698985","<p>In the First screen take inputs with an intent..</p>

<p>like</p>

<pre><code>text = (TextView)findViewById(R.id.tv1);
edit = (EditText)findViewById(R.id.edit);
button = (Button)findViewById(R.id.bt1);
button.setOnClickListener(new OnClickListener() {
    public void onClick(View arg0) {
        String s = edit.getText().toString();
        Intent ii = new Intent(MainActivity.this, newclass.class);
        ii.putExtra(""name"", s);
        startActivity(ii);
    }
});
</code></pre>

<p>and then follow to second activity </p>

<pre><code>private TextView Textv;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.intent);
    Textv = (TextView)findViewById(R.id.tv2);
    Intent iin = getIntent();
    Bundle b = iin.getExtras();
    if (b != null)
    {
        String j = (String)b.get(""name"");
        Textv.setText(j);
    }
}
</code></pre>

<p>Like this try it..</p>
"
"20777842","<p>Your code runs right, but make sure that the file is named ""DogTestDrive.java"", because you must run it. Further, you should declare the class DogTestDrive as <code>public</code> (not necessary).</p>

<pre><code>  class Dog {
        int size;
        String breed;
        String name;

        void bark() {
            System.out.println(""Ruff! Ruff!"");
        }
    } // class Dog

    public class DogTestDrive {

            public static void main(String[] args) {
                Dog d = new Dog();
                d.size = 40;
                d.bark();
            } // end main
    } // class DogTestDrive
</code></pre>
"
"20800888","<pre><code>var json1={""username"":document.getElementById('userid').value,
               ""password"":document.getElementById('password').value, 
};

$.ajax({
    url: '/path/to/file.php',
    type: 'POST',
    dataType: 'text',//no need for setting this to JSON if you don't receive a json response.
    data: {param1: json1},
})
.done(function(response) {
    console.log(""success"");
    alert(response);
})
.fail(function() {
    console.log(""error"");
})
.always(function() {
    console.log(""complete"");
});
</code></pre>

<p>on the server you can receive you json and decode it like so:</p>

<pre><code>$myjson=json_decode($_POST['param1']);
</code></pre>
"
"20995311","<p>Use javascript to print the page from browser, but your phone must be connected to a printer.
Just try this line of code on any button click event.</p>

<pre><code>window.print();
</code></pre>
"
"20890339","<p>this is one way among many:</p>

<pre><code>public void printMatrix(int[][] matrix){
    for(int i=0;i&lt;matrix.length;i++) {
        for(int j=0;i&lt;matrix[i].length;j++) {
            System.out.print(matrix[i][j]);
        }
    }
}//end of printMatrix`enter code here
</code></pre>

<p>call it like:</p>

<pre><code>String1.printMatrix(matrix);
</code></pre>
"
"20905414","<p>I would use a <code>StringBuffer</code>. You can initialize it with a <code>String</code> and convert it back to a <code>String</code></p>
"
"20957784","<ul>
<li><p>Consider to wrap Hashtable class. It does not allow <strong>nulls</strong>, however it implements <strong>Map</strong> interface. You can do this in a way as HasSet wraps HashMap. Take into account Hashtable is synchronized.</p></li>
<li><p>Use next, but it is a really implicit and could make code reading harder</p>

<pre><code>    HashSet&lt;String&gt; set = new HashSet&lt;String&gt;() {
    @Override
    public boolean add(String s) {
        if(s == null)
            throw new NullPointerException();
        return super.add(s);
    }
};
</code></pre></li>
<li><p>Use TreeMap, but before actual using it add just one element, because it accepts null only as initial element</p></li>
</ul>
"
"20989758","<p>Another solution (than using comparable)</p>

<p>You can use <code>instanceof</code> operator in java .</p>

<p>Example : </p>

<pre><code>public &lt;T&gt; List&lt;T&gt; sortMyList(List&lt;T&gt; list){
           Collections.sort(list, new Comparator&lt;T&gt;() {
           public int compare(T o1, T o2) {
                if(o1 instanceof Employee &amp;&amp; o2 instanceof Employee)
                    return o2.getId().compareTo(o1.getId());
                else if(o1 instanceof Buildings &amp;&amp; o2 instanceof Buildings)
                      return o2.getNumOfEmployees().compareTo(o1.getNumOfEmployees());
           }
  });
} 
</code></pre>
"
"20989759","<p>You would need to make an interface containing the method you are using you could do it like so:</p>

<pre><code>interface BuildingsAndPeople{
    public long getNumber();
}
</code></pre>

<p>And then implement that in your two classes. You can do this by having getNumber  return getId() for people and return getNumOfEmployees() for buildings.
Then you can say:</p>

<pre><code>public &lt;T&gt; List&lt;T&gt; sortMyList(List&lt;T&gt; list){
   Collections.sort(list, new Comparator&lt;T&gt;() {
       public int compare(T o1, T o2) {
           return o1.getNumber().compareTo(o2.getNumber());
      }
   });
}
</code></pre>
"
"21015562","<p>Time for a little pseudocode me thinks.</p>

<p><b> Step 1 </b></p>

<p>You want to split the <code>String</code> up into <code>tokens</code>. You can do this using <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/String.html#split%28java.lang.String%29"" rel=""nofollow"">String.split()</a>.</p>

<pre><code>Let input equal ""this, is, just, a, GOOFtest"".
// It's a comma that separates each token, so let's split on that.
Let tokens equal input.split("","").
</code></pre>

<p><em><strong>NOTE:</em></strong> If you want to preserve your input as a <code>String</code>, then don't do this step.</p>

<p><b> Step 2 </b></p>

<p>Parse your data, removing <code>""GOOF""</code> as you see it. You can use the <a href=""http://docs.oracle.com/javase/6/docs/api/java/lang/String.html"" rel=""nofollow"">String.replaceAll()</a> for that.</p>

<pre><code>for every token in tokens
    let token equal token.replaceAll(""GOOF"", nothing).
</code></pre>

<p><em><strong>NOTE</em></strong>: If <code>GOOF</code> can come in different cases, it's time for some <code>regexp</code>. This is called a <code>metalanguage</code>, and it's designed to analyse and manipulate <code>String</code>s. What you want to do, is not take <code>case</code> into account, and you can achieve this using the <code>?i</code> operator.</p>

<pre><code>String regex = ""(?i)GOOF"";
String parsedInput = input.replaceAll(regex, """");
// And that's the only bit of Java you're getting!!
</code></pre>

<p><b> Step 3 </b></p>

<p>????</p>

<p><b> Step 4 </b></p>

<p>Profit! You have an array containing only the values, without <code>GOOF</code> appearing.</p>
"
"21047680","<p>Make a single folder named src, and all the folder structures will be inside it as packages.</p>

<pre><code>  My School
   |
   |----src
   |     |
   |     |---Subject_one
   |     |      |-----//.java files
   |     |
   |     |---Subject_two
   |     |      |----//.java files
   |     |
</code></pre>
"
"21223551","<p>You are using JSF 2.2 xml namespaces and obviously don't have an environment (probably an application server) which supports JSF 2.2.</p>

<p>If you want to use ""the old"" JSF 2 you have to use these namespace declarations:</p>

<pre><code>&lt;html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:f=""http://java.sun.com/jsf/core""      
      xmlns:h=""http://java.sun.com/jsf/html""&gt;
</code></pre>

<p>If you want to use JSF 2.2 you have to update your application server to support JSF 2.2.</p>
"
"21100619","<p>It is not a good practice maybe because you are comparing the <code>String s</code> with a String but you are not comparing the value, you are comparing the memory position of the <code>s</code> value.</p>
"
"21048059","<p>java code:</p>

<pre><code>Map args = new HashMap&lt;String, Boolean&gt;();
args.put(""isManufacturingKey"", true);
ZulHandler window = Preconditions.checkNotNull((ZulHandler) Executions.createComponents(""/decision_comment_window.zul"", null, args)); 
</code></pre>

<p>right access in .zul file:</p>

<pre><code>""${arg.isManufacturingKey}""
</code></pre>

<p>note: I access to parameter using <em>arg</em>  accessor</p>

<p><strong>It is working for my ZK version!!!</strong></p>
"
"21283466","<p>Use List and .contains(Object obj) method. 
So you can verify if list has the random number add before.</p>

<p>update - based on time you can lost stuck in random loop.</p>

<pre><code>    List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
    int x = 1;
    while(x &lt; 7){

                list.add(x);
                x++;
    }
    Collections.shuffle(list);

    for (Integer number : list) {
        System.out.println(number);
    }
</code></pre>

<p><a href=""http://docs.oracle.com/javase/7/docs/api/java/util/List.html#contains(java.lang.Object)"" rel=""nofollow"">http://docs.oracle.com/javase/7/docs/api/java/util/List.html#contains(java.lang.Object)</a></p>
"
"21283769","<p>You may use <code>java.util.Random</code>. And please specify if you want any random number or just the number 1,2,3,4,5,6. If you wish random numbers then , this is a basic code:</p>

<pre><code>import java.util.*;
public class randomnumber
{
    public static void main(String[] args)
    {
        Random abc = new Random();
        int[] a = new int[6];
        int limit = 100,c=0;
        int chk = 0;
        boolean y = true;
        for(;c &lt; 6;)
        {
            int x = abc.nextInt(limit+1);
            for(int i = 0;i&lt;a.length;i++)
            {
                if(x==a[i])
                {
                    y=false;
                    break;
                }
            }
            if(y)
            {
                if(c!=0)if(x == (a[c-1]+1))continue;
                a[c]=x;
                c++;
            }
        }

        for (Integer number : a) 
        {
            System.out.println(number);
        }
    }
}
</code></pre>

<p>if you don't understand the last for loop , please tell , i will update it.</p>
"
"21145212","<pre><code>import java.util.Scanner;  
class ScannerDemo{  
 public static void main(String args[]){  

   Scanner sc=new Scanner(System.in);  

   System.out.println(""Enter your age"");  
   int age=sc.nextInt();  

   System.out.println(""age:""+age);  

 }  
}   
</code></pre>
"
"21064359","<pre><code>    System.out.printf(+celsius, ""degrees Celsius is"" +fahrenheit ""degrees Fahrenheit""); 

Check your original statement. You have missed adding one +(append) to add strings.

Use this 

   System.out.printf(""%f degrees Celsius is %f degrees Fahrenheit"",celsius,fahrenheit);
</code></pre>
"
"21283910","<p>Here is the solution according to your code -</p>

<p>You just need to change the numGen method - </p>

<pre><code>public static int numGen(int Array[])
{

    int random = (int)(1+Math.random()*6);

    for(int loop = 0; loop &lt;Array.length ; loop++)
    {
        if(Array[loop] == random)
        {
            return numGen(Array);
        } 
    }


    return random;
}
</code></pre>

<p>Complete code is - </p>

<pre><code>import javax.swing.*;
public class NonRepeat
{
    public static void main(String args[])
    {

        int login = Integer.parseInt(JOptionPane.showInputDialog(""ASD""));
        while(login != 0)
        {
            int Array[] = new int [6];
            String output="""";

            for(int index = 0; index&lt;6; index++)
            {
                Array[index] = numGen(Array);


            }

            for(int index = 0; index&lt;6; index++)
            {
                output += Array[index] + "" "";
            }


            JOptionPane.showMessageDialog(null, output);

        }



    }

    public static int numGen(int Array[])
    {

        int random = (int)(1+Math.random()*6);

        for(int loop = 0; loop &lt;Array.length ; loop++)
        {
            if(Array[loop] == random)
            {
                return numGen(Array);
            } 
        }


        return random;
    }
}
</code></pre>
"
"21170802","<p>You can't use a digit as the first letter in <code>variable/method/class names</code>. for more variable naming rules <a href=""http://www.c4learn.com/java/java-variable-naming-rules/"" rel=""nofollow"">Click Here</a><br /></p>

<pre><code>public class ImageComparator implements Comparator&lt;Obj&gt; {
    @Override
    public int compare(obj obj1, obj obj2) {
        return ((obj)obj1).Id - ((obj)obj2).Id;
    }
}
</code></pre>
"
"21170861","<p>You can try:</p>

<pre><code> return v1.Id &lt; v2.Id ? -1 : v1.Id &gt; v2.Id ? 1 : 0;
</code></pre>
"
"21177731","<p>It is not possible, <br>
instead use <code>javascript alert</code>.</p>
"
"21115903","<p>Strings are immutable, you have to reassign it in this way:</p>

<pre><code>timeToDisplay = timeToDisplay.format(""%d min, %d sec"",
                TimeUnit.MILLISECONDS.toMinutes(millis),
                TimeUnit.MILLISECONDS.toSeconds(millis) -
                        TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(millis)));
</code></pre>

<p>That means that the format method cant change <code>timeToDisplay</code> it only returns a new string which is formatted.</p>
"
"21199976","<p>The presence of + operator results in new String. Here <code>s1 = s1 + "" my book""</code>, s1+ "" my book "" implicitly creates new String and store its reference to s1. So it is different from s2</p>
"
"21185737","<p>It is commonly used for constants, e.g.</p>

<pre><code>private static final String PARAM_ID = ""id"";
</code></pre>
"
"21353727","<pre><code>class F1() {
  int a;
  int b;
  void execute() {
    a = 1;
    b = 2;
    two(this);
  };
}

void two(F1 f1) {
  int c = f1.a + f1.b;
}
</code></pre>

<p>or move local variable declarations at global scope</p>

<pre><code>static int a;
void f1() {}
void f2() {};
</code></pre>
"
"21176803","<p>You can convert the sting into int</p>

<pre><code>String string = ""0 0 0 0 0 0 0 0 0 0 0 603 174"";
for(int i=0;i&lt;string.split("" "").length;i++){
    System.out.println(Integer.parseInt(string.split("" "")[i]));
}
</code></pre>
"
"21176997","<p>You can write a pattern matcher to match a number in this case it would be [0-9]+ . then you can define a pattern matcher to extract each number and convert it to interger.</p>

<pre><code>ArrayList&lt;Integer&gt; StringToInteger(String x)
{Pattern p = Pattern.compile(""a*b"");
Matcher m = p.matcher(""aaaaab"");
ArrayList&lt;Integer&gt; result = new ArrayList&lt;&gt;();
while(m.find()){
       result.add(Intger.parseInt(m.group()));
}
return result;
}
</code></pre>
"
"21253115","<p>If your regex almost works for you, you just need to prefix it with a line start ""^"":</p>

<pre><code>^(?:U\d+:|/)\%x\[(?:(-?\d+),(\d+))\]
</code></pre>
"
"21250997","<p>Integer is an Object.
You should use equal instead of == 
like</p>

<pre><code>if(a.equal(b)){
...
}
</code></pre>
"
"21251015","<pre><code>        Integer a = 100;
        Integer b = 100;
        Integer c = 1000;
        Integer d = 1000;
        if (a.equals(b)) {
            System.out.println(""a &amp; b are Equal"");
        }
        else {
            System.out.println(""a &amp; b are Not Equal"");
        }
        if (c.equals(d)) {
            System.out.println(""c &amp; d are Equal"");
        } else {
            System.out.println(""c &amp; d are Not Equal"");
        }
</code></pre>

<p>==means their pointer or reference equal,not value equal.You should call .equals method</p>
"
"21425735","<p>Use join method on Thread t1 so that the execution will wait till the execution of t1 will complete.</p>

<pre><code>t1.join();
</code></pre>
"
"21425832","<p>in short: <code>Set&lt;E&gt;</code> <code>extends</code> a superinterface <code>Iterable&lt;E&gt;</code> and so passes down the methods from <code>Iterable&lt;E&gt;</code></p>

<p>The object <code>keys</code> will thus have access to these methods.</p>

<p><a href=""http://docs.oracle.com/javase/7/docs/api/java/util/Set.html"" rel=""nofollow"">Here</a>'s the link to the docs.</p>
"
"21260085","<p>When you declare in the method signature that it is returning a data type then it must have a return statement which returns that specific type value. Otherwise you will get compile-time error.
The only exception when a method can avoid return statement even though it has return type is when there is an infinite loop or an exception is thrown. Otherwise return statement is compulsory.
Coming to your question, you can easily achieve what you are doing. If you want to terminate at a particular point as per your requirement just say,
return null;</p>

<p>It will work for all the data types except for primitive types in which case you need to do type casting to Wrapper class types appropriately.</p>

<pre><code>public int[] returnArr()  {
   if(some condition)
     return SomeIntArray;
   else
     return null;
}

public int returnInt()  {
   if(some condition)
       return 2;
   else
       return (Integer)null;
}
</code></pre>
"
"21295571","<p>Be very careful with JodaTime, the lib don't use the timezone tables of java.</p>

<pre><code>public class XMLCalendarToDateTime {

    private static DatatypeFactory df = null;
    static {
        try {
            df = DatatypeFactory.newInstance();
        } catch (DatatypeConfigurationException dce) {
            throw new IllegalStateException(
                ""Exception while obtaining DatatypeFactory instance"", dce);
        }
    }  

    private static XMLGregorianCalendar converToGregorianCal(DateTime dateTime) {
        if (dateTime == null) {
            return null;
        } else {
            GregorianCalendar gc = new GregorianCalendar();
            gc.setTimeInMillis(dateTime.getMillis());
            return df.newXMLGregorianCalendar(gc);
        }
    }

    private static DateTime convertToDateTime(XMLGregorianCalendar xmlGregorianCalendar){
         if (xmlGregorianCalendar == null) {
                return null;
            } else {
                return new DateTime(xmlGregorianCalendar.toGregorianCalendar().getTime());
            }
    }

    public static void main(String[] args) {

        final DateTime dateTime = new DateTime(2014,1,1,1,1);

        System.out.println(""date = "" + dateTime.toString());

        final XMLGregorianCalendar xmlGregorianCalendar = converToGregorianCal(dateTime);

        System.out.println(""xmlGregorianCalendar = "" + xmlGregorianCalendar);

        final DateTime dateTimeConverted = convertToDateTime(xmlGregorianCalendar);

        System.out.println(""dateTimeConverted = ""  + dateTimeConverted);

    }
}
</code></pre>
"
"21227709","<pre><code>private static int recursionTest(int num){
   while(num &lt; 10){
        recursionTest(++num);
        if(num &lt; 10){
            break;
        }
    }
    return num;
}
</code></pre>

<p>Above snippet will iterate while loop 10 times only so it will be fast.</p>
"
"21236233","<p>this regex </p>

<pre><code>String s = ""foo word &lt;word&gt; &lt;foo word foo&gt; word"".replaceAll(""word(?=([^&gt;].*?&lt;)|([^&gt;]*$))"", ""newWord"");
</code></pre>

<p>produces</p>

<pre><code>foo newWord &lt;word&gt; &lt;foo word foo&gt;
</code></pre>
"
"21430419","<p>Normally, if we need to pass parameters to a thread, we can use either of the two approaches mentioned below:</p>

<ol>
<li><p><strong>Create a custom Runnable like this:</strong></p>

<pre><code>public class MyRunnable implements Runnable{

private MyCustomObj obj;

public MyRunnable( MyCustomObj obj) {

  this.obj = obj;

}

public void run() {

  System.out.println(""Name:"" + obj.name );

}
</code></pre>

<p>}</p></li>
</ol>

<p>and then</p>

<pre><code>MyCustomObj x = new MyCustomObj();
x.name = ""test"";
Thread t = new Thread(new MyRunnable(x));
t.start();
</code></pre>

<p>2.Create custom thread like below:</p>

<pre><code>public class MyThread extends Thread{

private MyCustomObj obj;

public MyThread( MyCustomObj obj) {

this.obj = obj;

}

public void run() {

System.out.println(""Name:"" + obj.name );

}
}
</code></pre>

<p>and then   </p>

<pre><code> MyThread t = new MyThread(x);
 t.start();
</code></pre>

<p>Hope this helps you </p>
"
"21236460","<p>You can use something like this :</p>

<pre><code>String val=""&lt;blablabla word blablabla&gt; word123 &lt;word&gt;"";
String REGEX=""(?&lt;=&gt;)[^&lt;]+"";
String replaceString=""replace"";
System.out.println(val.replaceAll(REGEX, replaceString));
</code></pre>

<p><strong>Output</strong> </p>

<pre><code>&lt;blablabla word blablabla&gt;replace&lt;word&gt;
</code></pre>

<p><strong><a href=""http://regex101.com/r/oU4dW8"" rel=""nofollow"">Refer</a></strong></p>
"
"21281688","<p>Try below code....</p>

<pre><code>enter code here
List&lt;String&gt; list = new ArrayList&lt;String&gt;();
list.add(""How are you"");
list.add(""How you doing"");
list.add(""Joe"");
list.add(""Mike"");

 Collection&lt;String&gt; filtered = Collections2.filter(list,
Predicates.containsPattern(""How""));
 print(filtered);
</code></pre>
"
"21318906","<p>Forget about using Dates - they are a real pain.</p>

<p>Keep things simple. Parse ints directly from the string and store hour and minutes as ints. For example:</p>

<pre><code>String time = ""10:00"";
String parts = time.split("":"");
int hour = Integer.parseInt(parts[0]);
int minute = Integer.parseInt(parts[1]);
</code></pre>
"
"21447565","<p>How have you declared your NameController class?</p>

<p>When you write </p>

<pre><code>&lt;h:outputText value=""#{nameController.name}"" /&gt;
</code></pre>

<p>it's supposed to bind to the property name of a bean NameController present in the scope of the page.</p>

<p>So NameController should be a managed bean.</p>

<pre><code>@ManagedBean
@SessionScoped // or RequestScoped, ApplicationScoped, etc.. (depending 
               // on how you want your bean to bean managed
public class NameController{
 // contructors
 // properties
 // getter and setter    
}
</code></pre>
"
"21339241","<p>Your error was in the uppercase letter of <code>Line</code>.</p>

<p>Try this (it works):</p>

<pre><code>import java.util.Scanner;

public class StringReplace {    

private static Scanner input;

public static void main(String[] args) {

    String line; //Your problem was here
    input = new Scanner( System.in );       
    System.out.print(""Please Enter a String: "");
    line = input.nextLine(); //and here

    line = line.replace(""Wake"", ""Wake Business""); //and here
    System.out.println(line);
}
}
</code></pre>
"
"21352598","<p>use a listener interface.</p>

<pre><code>public interface CompleteListener{
  public void onComplete(String result);
}

public class A implements CompleteListener{

   public void onComplete(String result){
      // do something
   }
}

public class B extends AsyncTask {
    CompleteListener listener;

   public B (CompleteListener listener){
       this.listener = listener;
   }

   onPostExecute(String result){
      listener.onComplete(result);
   }

}
</code></pre>
"
"21312138","<p><h2>Are null layouts recommended? As other have suggested, the answer is</h2> <h1>NO</h1>. 
See <a href=""http://docs.oracle.com/javase/tutorial/uiswing/layout/index.html"" rel=""nofollow""><strong>Laying out Components in a Container</strong></a> to get some practice in with LayoutManagers</p>

<hr>

<p>Will I still answer your question? Sure. Just so you know.</p>

<blockquote>
  <p>""I am using the setBounds() method for the JLabel spacing but it's not working. Please, can any one tell me why it is not working?"" </p>
</blockquote>

<p>Yes, your bounds aren't working because the <code>JFrame</code> has a default <code>Borderlayout</code>. In order for <code>setBounds</code> to work, the layout needs to be <code>null</code>. </p>

<pre><code>setLayout(null);
</code></pre>

<p>Also, keep in mind that when you <em>do</em> use a null layout, any components in which you <em>don't</em> <code>setBounds</code> for will not appear.</p>

<hr>

<p>See <a href=""http://docs.oracle.com/javase/tutorial/uiswing/layout/index.html"" rel=""nofollow""><strong>Laying out Components in a Container</strong></a> to get some practice in with LayoutManagers</p>
"
"21331196","<p>you can use timer class for this purpose
timer class has a method for schedule
i.e. </p>

<pre><code>doAsynchronousTask = new TimerTask() {

            @Override
            public void run() {
                // timer.schedule(doAsynchronousTask, 0, 5000);
.
.
.
.
.
}
}
</code></pre>
"
"21499313","<p>Try:</p>

<pre><code>jTextField4.setText(jTextField4.getText().replaceAll(""[^0-9]"", """"));
</code></pre>
"
"21499809","<p>From jTextField events, choose keyReleased event not keyPressed!
And put this code inside the new generated handler:</p>

<pre><code>private void keyReleased(java.awt.event.KeyEvent evt) {                             
    try {
        Integer.parseInt(jTextField2.getText());
    } catch (NumberFormatException f) {
        if (!jTextField2.getText().isEmpty())
            JOptionPane.showMessageDialog(null, ""AwtsuPaytsu"");
        jTextField2.setText(jTextField2.getText().replaceAll(""[^0-9]"", """"));
        //jTextField2.setText("""");
    }
}
</code></pre>

<p><img src=""http://i.stack.imgur.com/WFdx9.png"" alt=""keyReleased event""></p>
"
"21399294","<p>Here is the code but still give me error till me where I am wrong?</p>

<pre><code>public class Atherosclerosis extends Activity{

    ScrollView scrollView;

    TextView tvabove=(TextView)findViewById(R.id.pathophysiology_id);

        @TargetApi(Build.VERSION_CODES.HONEYCOMB)
        @SuppressLint(""NewApi"")

        @Override
        protected void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            setContentView(R.layout.atherosclerosis);
             ActionBar bar = getActionBar();
                bar.setBackgroundDrawable(new ColorDrawable(Color.parseColor(""#6B8E23"")));
                getActionBar().setDisplayHomeAsUpEnabled(true);
                getActionBar().setHomeButtonEnabled(true); 
        TextView tv=(TextView)findViewById(R.id.Signandsymptompsid);

        tv.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                // TODO Auto-generated method stub
                scrollView.post(
                        new Runnable() {
                            @Override
                            public void run() {
                                new CountDownTimer(1500, 20) {
                                    @Override
                                    public void onTick(long millisUntilFinished) {
                                        scrollView.scrollTo(0, (int) (tvabove.getBottom()-millisUntilFinished));
                                    }

                                   @Override
                                   public void onFinish() {                 
                                   }
                                }.start();
                            }
                        }
                    );
            }
        });
        }
        @Override
        public boolean onCreateOptionsMenu(Menu menu) {
            // Inflate the menu; this adds items to the action bar if it is present.
            getMenuInflater().inflate(R.menu.atherosclerosis, menu);
            return true;
        }
          @Override
            public boolean onOptionsItemSelected(MenuItem item) {
                // Take appropriate action for each action item click
                switch (item.getItemId()) {
                case R.id.id_search:
                    Intent newActivity0 = new Intent(this,Search.class);     
                     startActivity(newActivity0);
                    return true;
                case R.id.id_favorit:
                   return true;

                default:
                    return super.onOptionsItemSelected(item);
                }
            }

    }
</code></pre>
"
"21354588","<p>Try do it in that way using Collections synchronized.</p>

<pre><code>public class Sequencer {

    private final AtomicInteger i = new AtomicInteger(0);

    public static void main(String[] args) {

        final Sequencer seq = new Sequencer();

        final Set&lt;Integer&gt; notSafe = new HashSet&lt;Integer&gt;();
        final Set&lt;Integer&gt; set = Collections.synchronizedSet(notSafe);
        Thread t1 = new Thread(new Runnable() {
            @Override
            public void run() {
                for (int i = 0; i &lt; 500; i++)
                    set.add(seq.getNext());

            }
        }, ""T1"");
        t1.start();


        Thread t2 = new Thread(new Runnable() {
            @Override
            public void run() {
                for (int i = 0; i &lt; 500; i++)
                    set.add(seq.getNext());

            }
        }, ""T2"");

        t2.start();

        try {
            t1.join();
            t2.join();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        System.out.println(set.size());

    }

    public int getNext() {
        return i.incrementAndGet();
    }
}
</code></pre>
"
"21400980","<p>Thank you all...</p>

<pre><code>PreparedStatement st = con.prepareStatement(""update schedule set date='""+date+""',stime='""+stime+""',etime='""+etime+""',hall='""+hall+""',loc='""+loc+""' where dept='""+dept+""' and code='""+code+""' "");

      int result=st.executeUpdate();
      if(result==1)            
             fwd=""success"";
       else
             fwd=""fail"";
       return(fwd);
</code></pre>
"
"21364321","<p>Change your query to something like this:</p>

<pre><code>""select * from Members where username="" +  username
</code></pre>

<p>It will return you only this user, there is no point on requesting all users from the database and then filter them on the application. You overload both the application and the database.</p>
"
"21422011","<p>I have written code like this.. 1st i deselected all the values in the multi select box then i selected the values which i want.. It is working properly..</p>

<pre><code>Log.info(""Clicking on Softwarepack dropdown"");
JavascriptExecutor executor31 = (JavascriptExecutor)driver;
executor31.executeScript(""document.getElementById('swpacksId').style.display='block';"");
Select select31 = new Select(driver.findElement(By.id(""swpacksId"")));
select31.deselectAll();
select31.selectByVisibleText(""ADVLEG"");
Thread.sleep(6000);
JavascriptExecutor executor32 = (JavascriptExecutor)driver;
executor32.executeScript(""document.getElementById('swpacksId').style.display='block';"");
Select select32 = new Select(driver.findElement(By.id(""swpacksId"")));
select32.selectByVisibleText(""SIP"");
</code></pre>
"
"21530777","<p>If I have to face this issue, I may use </p>

<pre><code>Switch(str){
case:strCheck
}
</code></pre>
"
"21540326","<p>Almost. There is a shorthand syntax for array creation:</p>

<pre><code>int[] arr = {3, 4};
</code></pre>

<p>Otherwise use a List which resizes automatically:</p>

<pre><code>List&lt;Integer&gt; list = new ArrayList&lt;&gt;();
list.add(3);
list.add(4);
// etc
</code></pre>
"
"21448953","<p>Java is (in fact) pass by reference. When the method is called, the reference(pointer) to the object is passed and when you modify the object you can see the modification when you return from the method. The problem with your example is that java.lang.String is immutable.</p>

<p>And what you are actually achieving with your example is output parameters.</p>

<p>Here is a slightly different version of Jeffrey Hantin:</p>

<pre><code>public static void main(String[] args) {
  StringBuilder variable = new StringBuilder(""'previous String reference'"");
  passByReference(variable);
  System.out.println(variable); // I want this to print 'new String reference'
}

public static void passByReference(StringBuilder someString) {
  String nr = ""'new String reference'"";
  someString.replace(0, nr.length() - 1, nr);
}
</code></pre>
"
"21568796","<pre><code>public static void main(String[] commandlineArguments) {
  if (commandlineArguments.length == 0) {
     System.out.println(""Please enter a least one commandline!"");
  } 
  else {
     Integer number = new Integer(0); // initialize number
     try {
        number = Integer.parseInt(commandlineArguments[0]);
     } 
     catch (NumberFormatException exception) { // NumberFormatException
        System.out.println(exception + "" is not a integer!"");
        System.exit(1); // end program
     }

     Integer power = power5(number);
     System.out.println(power);

  }
}

public static Integer power5(Integer number){
      Integer sum = 0;
if(number == 0)
{
    return 1;
}
Integer pow = 1;
for(int i = 0; i &lt; a; i++)
{
    pow *= 2;
}
sum = pow + power5(a--);
return sum;
}

}
</code></pre>
"
"21455465","<pre><code>import java.&lt;span class=""q39pbqr9"" id=""q39pbqr9_9""&gt;net&lt;/span&gt;.*;
import java.io.*;

&lt;span class=""q39pbqr9"" id=""q39pbqr9_1""&gt;public class&lt;/span&gt; A
{
    static String user = ""user"";
    static String pass = ""pass"";
    static String param_user = ""username"";
    static String param_pass = ""password"";
    static String content = """";
    static String action = ""action_url"";
    static String urlName = ""url_name"";
    public static void main(String[] args)
    {
        try
        {
            user = URLEncoder.encode(user, ""UTF-8"");
            pass = URLEncoder.encode(pass, ""UTF-8"");
            content = ""action="" + action +""&amp;amp;"" + param_user +""="" + user + ""&amp;amp;"" + param_pass + ""="" + pass;
            URL url = new URL(urlName);
            HttpURLConnection urlConnection = (HttpURLConnection)(url.openConnection());
            urlConnection.setDoInput(true);
            urlConnection.setDoOutput(true);
            urlConnection.setRequestProperty(""Content-Type"", ""application/x-www-form-urlencoded"");
            urlConnection.setRequestMethod(""POST"");
            DataOutputStream dataOutputStream = new DataOutputStream(urlConnection.getOutputStream());
            dataOutputStream.writeBytes(content);
            dataOutputStream.flush();
            dataOutputStream.close();

            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));
            String responeLine;
            StringBuilder response = new StringBuilder();
            while ((responeLine = bufferedReader.readLine()) != null)
            {
                response.append(responeLine);
            }
            System.out.println(response);
        }catch(Exception ex){ex.printStackTrace();}
    }
</code></pre>
"
"21456803","<p>Check out this online java regex tester:
<a href=""http://www.regexplanet.com/advanced/java/index.html"" rel=""nofollow"">http://www.regexplanet.com/advanced/java/index.html</a></p>

<p>I pasted in your text to 'input 1', then put in the regular expression:</p>

<pre><code>\d*[.]\d*[.]\d*[.]\d*
</code></pre>

<p>Results:</p>

<pre><code>[10,20] 0.0.21.201
[32,44] 7.202.10.100
[56,68] 0.33.189.142
</code></pre>

<p>Don't forget - when you use it in java code, you need to escape the backslashes:</p>

<pre><code>""\\d*[.]\\d*[.]\\d*[.]\\d*""
</code></pre>

<p>Also, here's a fun regex game to help you learn regular expressions:
<a href=""http://regexcrossword.com/"" rel=""nofollow"">http://regexcrossword.com/</a></p>
"
"21460951","<p>Problem: java.lang.ClassNotFoundException: org.springframework.web.servlet.DispatcherServlet in spring project.</p>

<p>By adding the below jars into WEB-INF/Lib folder we can resolve this issue.</p>

<pre><code>org.springframework.asm-3.1.4.RELEASE.jar
org.springframework.aspects-3.1.4.RELEASE.jar
org.springframework.beans-3.1.4.RELEASE.jar
org.springframework.context-3.1.4.RELEASE.jar
org.springframework.context.support-3.1.4.RELEASE.jar
org.springframework.core-3.1.4.RELEASE.jar
org.springframework.web.struts-3.1.4.RELEASE.jar
org.springframework.web.servlet-3.1.4.RELEASE.jar
org.springframework.web-3.1.4.RELEASE.jar
</code></pre>

<p>Of Course you will be added in Build Path but it will take up to Compile time only. So we have to added above jars into WEB-INF/Lib folder</p>
"
"21464252","<p><code>long</code> is a primitive type and is not a Java Class. But <code>Long</code> is a type (extends <code>Object</code>) and thus is a Java Class. you can use either because Java has a Boxing and UnBoxing feature that converts one to another automatically for you.
But beware, primitive type tends to consume less memory, but the Class type has very useful methods in it. you decide what is better for you.</p>
"
"21587419","<p>Try with: <code>^[a-z0-9_-]+@[a-z0-9_-]+\\.[a-z]{2,3}$</code></p>
"
"21589205","<p>This did the trick: </p>

<pre><code>([\\w-+]+(?:\\.[\\w-+]+)*@(?:[\\w-]+\\.)+[a-zA-Z]{2,7})
</code></pre>
"
"21478294","<pre><code>public static string RemoveSpecialCharacters(string input) {
  Regex r = new Regex(""(?:[^a-z0-9 ]|(?&lt;=['\""])s)"", RegexOptions.IgnoreCase | RegexOptions.CultureInvariant | RegexOptions.Compiled);
  return r.Replace(input, String.Empty);
}
</code></pre>
"
"21482933","<pre><code>int sum = 1;

for (int i = 2;i &lt;= num;i++) {
    sum = sum * i;
}
</code></pre>
"
"21483111","<p>Why bother computing it?</p>

<pre><code>public int factorial ( int n ) {
switch(n){
case 0: return 1;
case 1: return 1;
case 2: return 2;
case 3: return 6;
case 4: return 24;
case 5: return 120;
case 6: return 720;
case 7: return 5040;
case 8: return 40320;
case 9: return 362880;
case 10: return 3628800;
case 11: return 39916800;
case 12: return 479001600;
default : throw new IllegalArgumentException();
}
</code></pre>

<p>Source : <a href=""http://codegolf.stackexchange.com/a/16673/8806"">@Emory</a></p>
"
"21487428","<p>Edit:: 
Whoops, read too fast, you wanted numbers, not digits. I believe someone has already answered above. I also have answered the question using my original (but incorrect) approach</p>

<p><strong>Previous Answer</strong></p>

<p>Look at Java's <code>isDigit(char c)</code>. It may look something like:</p>

<pre><code>public static void getSum(string a) {
    int sum = 0;
    for(int i = 0; i &lt; a.length(); i++) {
        if(Character.isDigit(a.charAt(i))) {
            sum += Integer.parseInt(a.charAt(i));
        }
    }
    System.out.println(sum);
}
</code></pre>

<p><strong>New answer using an iterative approach</strong></p>

<pre><code>public static void getSum(String a) {
    int sum = 0;
    String num = """";
    for(int i = 0; i &lt; a.length(); i++) {
        if(Character.isDigit(a.charAt(i))) {
            num = num + a.charAt(i);
        } else {
            if(!num.equals("""")) {
                sum = sum + Integer.parseInt(num);
                num = """";
            }
        }
    }
    if(!num.equals("""")) {
        sum = sum + Integer.parseInt(num);
    }
    System.out.println(sum);
}
</code></pre>
"
"21616574","<p>You can go with that code:</p>

<pre><code>public class Deneme
{

    private  static Scanner input;
    private static ArrayList&lt;String&gt; arr;

    public static void main(String... args)
    {
        input = new Scanner(System.in);
        arr = new ArrayList&lt;&gt;();

        while (true)
        {
            System.out.print(""Please enter a value: "");
            String val = input.nextLine();
            if (arr.contains(val))
                System.out
                        .println(""Please enter some other value you've already entered : ""
                                + val);
            else
                arr.add(val);
        }

    }

}
</code></pre>
"
"21539780","<p>Try changing</p>

<pre><code>integer=Integer.parseInt(""numb.charAt(index)"");
</code></pre>

<p>into</p>

<pre><code>integer=Integer.parseInt(numb.substring(index, index + 1));
</code></pre>

<p>The original line tries to find a number within the string <code>""numb.charAt(index)""</code>, which doesn't contain any numbers.</p>

<p><strong>Also</strong>, change <code>index++</code> to <code>index + 1</code> or even <code>++index</code>, since <code>index++</code> has no effect in this case (it only increments <code>index</code> after it's been used, and just before it goes out of scope.</p>
"
"21589413","<p>Faster, and shorter:
To reverse a word, use:</p>

<pre><code>public String reverseWord(String s) {
    StringBuilder y = new StringBuilder(s);
    return y.reverse();
}
</code></pre>

<p>Now split and use this method and use Stringbuidler.append to concatenate the all.
And dont forget the space inbetween.</p>
"
"21609447","<p>This will remove the first <code>char</code> ocurring in the <code>String</code>. Added a <code>boolean</code> to know if a <code>char</code> was already removed or not.</p>

<pre><code>String removeAll(char c, String s) {

        boolean removed = false;

        String to_return = """";

        while(true) {
            if (s.equals(""""))
                return to_return;

            // at this point s is not """"
            char c2 = s.charAt(0);
            if (c2 != c)
            {
                to_return += c2;
            }
            else
            {
                if(! removed)
                    removed = true;
                else
                    to_return += c2;
            }

            s = s.substring(1);
        }

    }
</code></pre>

<p>Output example for <code>removeAll('o',""oh, hello"")</code>:</p>

<pre><code>h, hello
</code></pre>
"
"21609475","<p>Use <a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#replaceFirst%28java.lang.String,%20java.lang.String%29"" rel=""nofollow""><code>replaceFirst(String regex, String replacement)</code></a>:</p>

<pre><code>String t = ""hello"".replaceFirst(""o"", """"); // t == ""hell""
</code></pre>
"
"21632105","<p>I believe you're doing this all wrong. Your method of validation is very obscure and can be simplified. Suppose you have the following method:</p>

<pre><code>public int readNumber(final String prompt, final Scanner scanner){
    System.out.println(prompt);
    try{
        return scanner.nextInt();
    }catch(Exception ex){
        System.err.println(""Enter a valid number"");
        return readNumber(prompt, scanner);
    }
}
</code></pre>

<p>This method will print out the prompt (the first argument) and read input from the provided <code>Scanner</code> (the second argument). If the user enters something that can't be parsed as an <code>int</code>, it will invoke the same method (recursion). </p>

<p>Take out both of your loops and when you want to read an <code>int</code> from your <code>Scanner</code>, do something like:</p>

<pre><code>int value = readNumber(""Enter a quantity"", sc);
</code></pre>

<p>You know for sure that <code>Integer.MAX_VALUE &gt;= value &gt;= Integer.MIN_VALUE</code></p>
"
"21620563","<p>You can use a do while loop like this:</p>

<pre><code>public static int reverse(int number){
        int reverse = 0;
        int remainder = 0;
        do{
            remainder = number%10;
            reverse = reverse*10 + remainder;
            number = number/10;

        }while(number &gt; 0);

        return reverse;
    }
</code></pre>

<p>And for bitwise operation: here it goes:</p>

<pre><code>int number;
int i = 0, hexadecimal, rev = 0, bit;
    while (i++ &lt; NUM_BITS_INT)

    {

        bit = hexadecimal &amp; 1;

        hexadecimal = hexadecimal &gt;&gt; 1;

        rev = rev ^ bit;

        if (i &lt; NUM_BITS_INT)

            rev = rev &lt;&lt; 1;

    }
System.out.println(rev);
</code></pre>
"
"21768348","<p>As you traverse the array, compare each element to the previous element. If the two elements are equal, increment the number of consecutive equal values you have seen. If they are not equal, check to see if you've found a new maximum, and then reset that counter to 0. </p>

<pre><code>public static int consecutiveEqualElements(int[] elements) {
    int max = 0;
    int consecutive = 1;

    for (int i = 1; i &lt; elements.length; i++) {
        if (elements[i] == elements[i-1]) {
            consecutive++;
        } else {
            if (consecutive &gt; max) {
                max = consecutive;
            }
            consecutive = 1;
        }
    }

    if (consecutive &gt; max) {
        return consecutive;
    } else {
        return max;
    }
}
</code></pre>

<p>Notice that the method returns a value rather than printing it out. This makes the method more flexible, as you may not always want it to print to standard output. </p>
"
"21624943","<p>clone() is implemented by Object and returns an Object. Override clone() in your class OR cast your result to Company.</p>

<p><code>clone.add((Company) item.clone());</code></p>
"
"21655961","<p>Well...given that you're guaranteed that the arrays are sorted, what you should check for is:</p>

<ul>
<li>Are the arrays passed in the same length?  If not, fail it immediately.</li>
<li>If they are the same length...
<ul>
<li>For some starting index from 0 to the length...
<ul>
<li>If a value at <code>a[i] != b[i]</code>, fail immediately.</li>
</ul></li>
<li>Nothing seems to have fallen through the traps, so it's passed.</li>
</ul></li>
</ul>
"
"21625778","<p>There are a handful of things to note on this question.  </p>

<p>Normally == is not accurate since it compares ""memory addresses"" (or as near as that can be in the JVM) and not the contents of the objects.</p>

<p>You should override .equals() method in order to compare every significant field of the objects.  If your objects need this, they need an override too of the .hashCode() method according to Josh Bloch in <em>Effective Java</em> (or your objects would behave poorly when hashed into a Map)</p>

<p>Only if you guaranteed that your objects are immutable and that you don't create new instances for objects with the same value (say Boolean objects generated with <code>Boolean.valueOf(true/false)</code>) you could use that == ; in any other case, you need a .equals() method (or make them implement Comparable and try <code>foo.compareTo(bar) == 0</code>)</p>
"
"21664609","<p>When you write to file, you acctualy write to file cache, try calling <code>bufferedWriter.close()</code> to save all changes.</p>
"
"21705920","<p>I would use <code>Double.parseDouble</code>, because, contrary to what you believe, it does throw a <code>NumberFormatException</code> for <code>1one</code>.</p>

<pre><code>public class k {
    public static void main(String argv[]) {
      double d = Double.parseDouble(""1one"");
    }
}
</code></pre>

<p>Output:</p>

<pre><code>Exception in thread ""Main Thread"" java.lang.NumberFormatException: For input string: ""1one""
    at sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1222)
    at java.lang.Double.parseDouble(Double.java:510)
    at k.main(k.java:3)
</code></pre>

<p>If I wanted to allow both <code>,</code> and <code>.</code> and not just the decimal point specified by the locale, I would <code>replace</code> any <code>,</code> and  <code>.</code> with the locale specified decmial point.</p>
"
"21664670","<p>write these lines:     </p>

<pre><code>bufferedWriter.flush();  // flush 

// now close the bufferwriter
bufferedWriter.close();

now read your file again

while((line = bufferedReader.readLine()) != null){
  // your reading code
}
</code></pre>
"
"21706100","<p>Using a simple regex, you can check if it contains any non numerical characters like so:</p>

<pre><code>String input = ""1one2"";
String numerical = input.replaceAll(""[^0-9.]"", """");
if (input.equals(numerical)) // If you remove all non numbers, still the same string
</code></pre>

<p>After which you can parse it for a double.</p>
"
"21695086","<p>I had a similar situation, and the following process worked for me:</p>

<ol>
<li><p>In the terminal, type </p>

<pre><code>vi ~/.profile
</code></pre></li>
<li><p>Then add this line in the file, and save</p>

<pre><code>export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk&lt;version&gt;.jdk/Contents/Home
</code></pre>

<p>where version is the one on your computer, such as 1.7.0_25</p></li>
<li><p>Exit the editor, then type the following command make it become effective</p>

<pre><code>source ~/.profile 
</code></pre></li>
</ol>

<p>Then type java -version to check the result </p>

<pre><code>    java -version 
</code></pre>

<p>What is .profile? 
From:<a href=""http://computers.tutsplus.com/tutorials/speed-up-your-terminal-workflow-with-command-aliases-and-profile--mac-30515"" rel=""nofollow"">http://computers.tutsplus.com/tutorials/speed-up-your-terminal-workflow-with-command-aliases-and-profile--mac-30515</a></p>

<blockquote>
  <p>.profile file is a hidden file. It is an optional file which tells the system which commands to run when the user whose profile file it is logs in. For example, if my username is bruno and there is a .profile file in /Users/bruno/, all of its contents will be executed during the log-in procedure.</p>
</blockquote>
"
"21729345","<p>An instance of an Object can only have one type. In the case of an instance of <code>B extends A</code> then <code>this</code> will always be a <code>B</code>, even inside methods of <code>A</code>.</p>

<p>However you can always use an object of type <code>B</code> as thought it is an an object of type <code>A</code> so even though <code>getClass</code> will return a <code>B</code> all the methods within <code>A</code> can use <code>this</code> as though it were a <code>A</code>.</p>

<p>For example its completely valid to do:</p>

<pre><code> A a = new B(); // Valid as B extends A
 a.test();
</code></pre>

<p>If <code>B</code> declares a method <code>test()</code> then that version of the method will be called, even though you are referring to it as though it were an <code>A</code>.</p>

<p>This is also how things like over-riding methods can be used to change the behavior of a base class from a sub class. When you have a method <code>test()</code> in <code>A</code>, and then override the method in <code>B</code> then whenever code in <code>A</code> calls <code>this.test()</code> it will actually call the over-ridden method in <code>B</code>.</p>

<p>Your mistake comes from the assumption that Overriding is resolved at compile time. It's not, it's resolved at run time Over <em>load</em> ed methods are resolved at compile time. Over <em>ride</em> n methods are resolved at run time. Overloading and Overriding are very different things.</p>
"
"21855517","<p>If you mean by renaming using a different reference than you can simply do</p>

<pre><code>ArrayList newListRef = oldListInstance;
//use newListRef thereafter
</code></pre>

<p>If you mean to change some of the elements retaining the order then - </p>

<p><code>ArrayList</code> is dynamic in size. You can add and remove elements to and from specific index and ordering in retained. So no need to create separate List. If you want to change a specific element simply remove it and add new element at that index.</p>

<p>APIs</p>

<pre><code>public E remove(int index)
public void add(int index, E element)
</code></pre>
"
"21755205","<pre><code>public static int linearSearch(int data[], int numToFind)
{
     int found=-1;
     for (int x=0;x&lt;data.length;x++){

       if(data[x] == numToFind)
       found = x ;

       break;
     }
     return found;
}
</code></pre>

<p>Try this.     </p>
"
"21900379","<p>It will give you error because int is primitive:</p>

<pre><code>Incompatible operand types Object and int
</code></pre>

<p>Change your code to:</p>

<pre><code>if (!l.head.item.equals(new Integer(9))) {
</code></pre>

<p>Hope this helps.</p>
"
"21855509","<p>Pseudocode is a high-level description of an algorithm. Therefore, it is best to avoid using language-specific terms or lower-level expressions and structures. The goal of pseudocode is to describe an algorithm in such way that it can be implemented in <strong>any</strong> language (as much as possible).</p>

<p>For instance, avoid using terms like <code>class</code>, <code>implements</code>, <code>void</code>, <code>Override</code>, etc.</p>

<p>Although (almost) any pseudocode you write will be technically valid, you should try to follow a structured syntax, may it be you own or a renowned one. Take a look at <a href=""http://en.wikipedia.org/wiki/Pseudocode"" rel=""nofollow"">Wikipedia's page</a>, and inspire from this!</p>

<p>Raw example:</p>

<pre><code>PROCEDURE someAlgorithm(number: Integer)
    number &lt;- number + 42
    IF number &gt; 50
        number -&gt; DISPLAY
    END IF
END PROCEDURE
</code></pre>
"
"21915253","<p>The loop <code>for( ; ;)</code> is garbage. If that provides an infinite loop, it is at the control of that specific languages compiler that turns it into a infinite loop.</p>
"
"21946137","<pre><code>st = ""What's your name again?""
st.repaleAll(""\\s|'|\+"","""")
st.repaleAll(""'"","""")
</code></pre>
"
"21780890","<p>Are you looking some sort of this </p>

<pre><code>public static void main(String[] args){
        String[] arr = new String[5];
        arr[0] =  ""One"";
        arr[1] =  ""Two"";
        arr[2] =  ""One"";
        arr[3] =  ""Three"";
        arr[4] =  ""Two"";

        List&lt;String&gt; lstString = Arrays.asList(arr);
        Collections.sort(lstString);
        for(String eachString : arr){
            System.out.println(""Frequency of "" + eachString + "" is "" + getFrequency(eachString,lstString));
        }
    }

    private static int getFrequency(String word, List lstOfString){
        int frequency = 1;
        if(lstOfString != null &amp;&amp; lstOfString.size() &gt; 0){
            int firstIndex = lstOfString.indexOf(word);
            int lastIndex = lstOfString.lastIndexOf(word);
            frequency += lastIndex - firstIndex;
        }
        return frequency;
    }
</code></pre>

<p>Result : 
Frequency of One is 2
Frequency of One is 2
Frequency of Three is 1
Frequency of Two is 2
Frequency of Two is 2</p>
"
"21943682","<pre><code>System.out.println(""The largest number is "" + Math.max(number1,number2));
</code></pre>
"
"21820384","<p>Change this -</p>

<pre><code>&lt;action name=""register"" class=""com.org.my.action.RegisterAction""&gt;
</code></pre>

<p>to</p>

<pre><code> &lt;action name=""register"" class=""com.org.my.action.RegisterAction"" method=""execute""&gt;
</code></pre>

<p>in your Struts.xml file</p>

<p>Thanks</p>
"
"21987034","<p>You assume, a <code>List</code> size is mutable and <code>Collections.copy()</code> does not assume this to theoretically broaden the purpose of this class to all classes implementing the <code>List</code> interface instead of the mutable ones only.</p>
"
"22026630","<p>Here is the code sample you wanted..</p>

<pre><code>public static void printOnLines(int n, int s) {
    for (int i = 1; i &lt; n; i++) {
        System.out.print(i + "",\t"");
        if (i % 3 == 0) System.out.println();
    }
    System.out.println(n);
}
</code></pre>
"
"21920784","<p>Try this instead.</p>

<pre><code>int sum = 0;
for (int i = 0; i &lt; InputArray.size(); i++) {
    int foo = Integer.parseInt(InputArray.get(i).toString());
    sum = sum + foo;
}
</code></pre>

<p>The reason it doesn't work is because you're trying to parse an <code>int</code> from something that's not a <code>String</code>.</p>

<p>By adding the <code>.toString()</code> method, you'll get around this.</p>
"
"21947400","<pre><code>int index = 0;
while(true)
{
    if(enter button pressed)
    {
         print_item(array[index++]);
    }
}

private void print_item(String item)
{
    System.out.println(item);
}
</code></pre>

<p>You would need to add boundary checks to avoid errors.</p>
"
"21962806","<pre><code>public double accerlate ()
{
    double accerlate = speed+1;
    return accerlate;
}
</code></pre>

<p>++ is different than +1, ++ means the operation happens AFTER the assigning of the value, however +1 will happen before hand, could also do ++speed.</p>
"
"21975621","<p>Convert String to Date:</p>

<pre><code>SimpleDateFormat sdf = new SimpleDateFormat(""YYYYMMDD"");
Date date = sdf.parse(input);
</code></pre>
"
"21979509","<p>check this out</p>

<pre><code>int array2d[][] = new int[10][3];


for(int i=0; i&lt;10;i++)
for(int j=0;j&lt;3;j++)
   array2d[i][j] = array1d[(j*10) + i];
</code></pre>
"
"22097813","<pre><code>int[][] array = new int[2][3];
</code></pre>

<p>The structure is roughly:</p>

<pre><code>[[x, x], [x, x], [x, x]]
</code></pre>
"
"22160788","<p>It would have been possible to define the equality tests among wrapper classes in such a fashion that two wrapper objects that encapsulated the same numerical value would compare equal, regardless of the underlying type.  Doing so, however, requires either having all types whose instances may compare equal know about each other, or else requires defining a means via which objects will be able to compare themselves to other objects which haven't even been invented yet.  Taking the former approach would mean that even if a new numeric type was capable of representing the value 5, an <code>Integer</code> which equaled 5 could not report itself equal to an instance of the new type which also represented 5.  Taking the latter approach would allow the new object to compare equal to an <code>Integer</code> with value 5, but would require adding enormous complexity for comparatively little benefit.</p>

<p>Suppose, for example, that one has defined both a <code>BigDecimal</code> and a <code>BigRational</code> class; the former stores numbers as a <code>BigInteger</code> along with a power-of-ten scaling factor; the latter stores a pair of <code>BigInteger</code> values which represent a reduced-form fraction.  One could specify that all numeric values which represent rational numbers should be compared by converting them to <code>BigRational</code> and comparing the results.  Since every rational number would have a unique representation, such a defined method of comparison would behave as an equivalence relation.  Unfortunately, it would be horrendously slow.  In most cases, it would make more sense to convert comparands into some other form, but trying to identify the best common form for arbitrarily combinations of types would be difficult.  It's much easier to simply say being of different types is sufficient justification for the objects to be called ""different"".</p>
"
"22168345","<p>Try something like this as you don't want to use replace() function</p>

<pre><code>char[] ans=myString.toCharArray();
for(int i =0; i &lt; ans.length; i++)
{
if(ans[i]==' ')ans[i]='*';
}
String answer=new String(ans);
</code></pre>
"
"22168367","<p>Try looping the String array:  </p>

<pre><code>  String[] stringWords = myString.split("" "");
    String myString = """";
    for (String s : stringWords){
     myString = myString + ""s"" + ""*"";
    }
</code></pre>

<p>Just add the logic to deleting the last <code>*</code> of the String.</p>

<p>Using StringBuilder option:</p>

<pre><code>String[] stringWords = myString.split("" "");
StringBuilder myStringBuilder = new StringBuilder("""");
for (String s : stringWords){
   myStringBuilder.append(s).append(""*"");
}
</code></pre>
"
"22046807","<p>If you need to create the right generic type for an explicit small number of classes, you could use the <code>instanceof</code> operator ... something like</p>

<pre><code>  if (o instanceof T) { x = new Something&lt;T&gt;();}
  else if (o instanceof String) {x = new Something&lt;String&gt;();}
  else if ....
</code></pre>
"
"22074224","<p>Not all paths returns something.<br>
You could avoid that kind of mistake by adding a return after the <code>for</code> loop, or by using a return variable. It also look like your trying to search the array for the number the user typed. If so, you don't want the else case, or it will only check for the first number in <code>nums</code>.</p>

<pre><code>public static int search(int[] nums)
{
    int ret = -1;
    Scanner keyboard = new Scanner(System.in);
    System.out.println(""What value do you want?"");
    int value = keyboard.nextInt();
    for(int i=0;i&lt;nums.length;i++)
    {
       if(nums[i] == value)
       {
           ret = nums[value];
           break;
       }
    }
    return ret;
}
</code></pre>
"
"22054246","<p>Use regex expressions, eg:</p>

<pre><code>if (userInput.matches ("".*[bcdfghjklmnpqrstvwx]+.*""))
    results += ""has consonants"";
else
    results += ""no consonants"";
</code></pre>

<p>If you can ensure that no symbols will be used, then a simpler version would be:</p>

<pre><code>if (!userInput.matches ("".*[aeiou]+.*""))
    results += ""has consonants"";
else
    results += ""no consonants"";
</code></pre>

<p>Tweak to suit for case sensitivity.</p>
"
"22054494","<p><strong>It will be more efficient and readable</strong>  </p>

<pre><code>if(Pattern.matches(""[b-df-hj-np-tv-z]+"",userInput)){  
    ----code----
}
else{
    ----other code----  
}
</code></pre>
"
"22199374","<p>Try</p>

<pre><code>while ((line = in.readLine()) != null){
  System.out.println(line)
}
</code></pre>

<p>You can see that it's possible, But you should use <code>FileInputStream</code> instead of <code>FileReader</code> because <code>FileReader</code> doesn't have <code>readLine</code> method.</p>
"
"22070686","<p>Try this.</p>

<pre><code>SimpleDateFormat simpleDateFormat = new SimpleDateFormat(""dd/MM/yyyy hh:mm"");

    Date inputDate = new Date();

    System.out.println(simpleDateFormat.format(inputDate));
}
</code></pre>

<p>output : </p>

<pre><code>27/02/2014 07:25
</code></pre>
"
"22110390","<p>If the <code>&lt;div&gt;</code> has id or name then you can use <code>find_element_by_id</code> or <code>find_element_by_name</code></p>

<p>You can also try with class name, css and xpath</p>

<pre><code>find_element_by_class_name
find_element_by_css_selector
find_element_by_xpath
</code></pre>
"
"22070716","<pre><code>        SimpleDateFormat format1 = new SimpleDateFormat(""yyyy-MM-dd hh:mm:ss"");
        SimpleDateFormat format2 = new SimpleDateFormat(""MMMM dd,yyyy"");
        Date date = format1.parse(""2014-02-27 17:26:49.00"");
        System.out.println(format2.format(date));       

INPUT : 2014-02-27 17:26:49.00
OUTPUT : February 27,2014
</code></pre>
"
"22114679","<p>Will the boolean variable doesWordMatch change in the for-loop?</p>

<p>If not, I would suggest:</p>

<pre><code>if(doesWordMatch)
  for(Character[] charArr : charSets)
  {
    //dosomething
  }
}
</code></pre>
"
"22210608","<p>Your <code>PostManager</code> Class already has an <code>addPost</code> Method which ""adds"" a post to your <code>private ArrayList</code>.</p>

<p>Your question doesn't seem to make sense in this context, so I am going to assume you mean ""How do I add a post to my PostManager?"". Even then I'm not sure how you wouldn't know how to do that if you wrote the above code... but I will give you an example of how in the offchance that is what you meant.</p>

<pre><code>private PostManager pm;

void main()
{
    pm = new PostManager();

    string author = ""John"";
    Post p = new Post(author);
    md.addPost(p);

    pm.addPost(new Post(""Jane""));
}
</code></pre>

<p><strong>EDIT</strong>: I just noticed that your addPost() Method was implemented incorrectly which is why you couldn't add posts. That was my bad, as I read the code, I just assumed it actually did what it said it did.</p>
"
"22124002","<pre><code>class car{

public int speed;

public compareSpeed(car a){
if(a.speed==this.speed){
System.out.println(""same speed"")
}else
System.out.println(""different speed"")
</code></pre>

<p>Create a compare method in one of the class which accepts a variable of same class type</p>

<p>then call the method using the object as below.</p>

<pre><code>public static void main(Sring[] args){

car c1=new car();
c1.speed=10;
car c2=new car();
c2.speed=20;

c1.compare(c2);

}
</code></pre>

<p>}</p>
"
"22268893","<p>If you use Google Play Services and show Maps you should add Meta tag in AndroidManifest.xml    </p>

<pre><code>**&lt;meta-data
            android:name=""com.google.android.gms.version""
            android:value=""@integer/google_play_services_version"" /&gt;**
</code></pre>
"
"22097391","<p>You could create a switch statement</p>

<pre><code>if(enable)
{
    switch()
    {
         case enableCar:
         // do some code
         break;
         case enableComputer:
         //do some code
         break; 
    }
}
</code></pre>
"
"22244637","<p>As Mankarse already pointed out, you cannot let <code>ArrayList&lt;Animal&gt;</code> be a supertype of <code>ArrayList&lt;Dog&gt;</code> since it allows inserting elements.</p>

<p>If you would use a read-only collection/interface (don't know what this would be in java), then it should be possible.</p>
"
"22302596","<p>You can use variables of type <code>Comparable</code> and use the <code>compareTo()</code> method.</p>

<ol>
<li><code>one.compareTo(two)</code> will return > 0 if <code>one &gt; two</code></li>
<li><code>one.compareTo(two)</code> will return &lt; 0 if <code>one &lt; two</code></li>
<li><code>one.compareTo(two)</code> will return 0 if <code>one</code> and <code>two</code> are equal</li>
</ol>

<p>Go through the array, compare the current index with the previous index, and update a variable that holds the currentLargest value.</p>
"
"22305401","<p>In a given <code>String</code>, occurrences of a given <code>String</code> can be counted using <code>String#indexOf(String, int)</code> and through a loop</p>

<pre><code>String haystack = ""This is a string"";
String needle = ""i"";
int index = 0;

while (index != -1) {
    index = haystack.indexOf(needle, index + 1);

    if (index != -1) {
        System.out.println(String.format(""Found %s in %s at index %s."", needle, haystack, index));
    }
}
</code></pre>
"
"22126368","<pre><code>float round(float f,float prec)
{
    return (float) (Math.floor(f*(1.0f/prec) + 0.5)/(1.0f/prec));
}
</code></pre>

<p><strong>use</strong></p>

<pre><code>round(0.2076f,0.01f)
</code></pre>

<p><strong>result</strong></p>

<pre><code>0.21
</code></pre>
"
"22263861","<p>you shoud try indented properly .
you can try to change </p>

<pre><code>  {if(player==0)
     player=1;
   else player=0;
 }
   {if(player==0)
      System.out.println(""Computer: 'I give up! You win!"");
   else
      System.out.println(""Computer: '...You are pathetic...'"");
  }}  `enter code here`
</code></pre>

<p>with :</p>

<pre><code>  if(player==0)
      player=1;
  else player=0;

  if(player==0)
      System.out.println(""Computer: 'I give up! You win!"");
  else
      System.out.println(""Computer: '...You are pathetic...'"");
    }
}  
</code></pre>
"
"22157452","<p>Yes you always have to  <code>Clean</code> your Project and <code>Re-build</code> the Project</p>

<p>For the resources to appear in your code.</p>

<p><em>Don't ask why or who, they don't like it ;)</em> </p>
"
"22356118","<pre><code>for(int i = 1; i &lt;= 20; i++) 
    {
        toss();
      if (getsideup().equals(""heads"")) 
      {
        hcount++;
      } else 
      {
        tcount++;
      }
    }
</code></pre>
"
"22356185","<pre><code>import java.util.Random;
public class coin
{
public static String sideUp;
public int hcount=0;
public int tcount=0;

public static void toss()
     {
        Random rand = new Random();
        int sideup = rand.nextInt(2);
        if (sideup == 0)
            {
                sideUp = ""heads"";
                hcount++;
            }
            else 
            {
                sideUp  = ""tails"";
                tcount++;
            } 
      }       

  public static void main(String[] args)
  {
    for(int i=0;i&lt;20;i++)
    {toss();}
    System.out.println(""total heads = "" + hcount + "" total tails = "" + tcount);
   }
}
</code></pre>
"
"22215062","<p>For every subclass you need to create a constructor with the same signature (or not) of the super, so if you don't want any behavior in the constructor of the subclasses just add super();</p>

<p>Example:</p>

<pre><code>abstract class Graph {
  int width;
  int height;

  public Graph(int width, int height) {
    this.width = width;
    this.height = height;
  }
}

class LinearGraph extends Graph {
  public LinearGraph(int width, int height) {
    super(width, height);
  }
}
</code></pre>
"
"22309406","<p>One hour realtime from now should be this:</p>

<p><code>System.currentTimeMillis() + (60 * 60 * 1000); // 60 minutes</code></p>
"
"22167483","<p>The only function i'm still using is the IndexOf function, but that is not that hard to create for yourself. </p>

<pre><code>static void Main(string[] args)
{
    string sentence = ""are you cracy"";

    int length = Program.StringLength(sentence);

    int currentpos = 0;

    List&lt;string&gt; wordList = new List&lt;string&gt;();

    int wordCount = 0;
    while (currentpos &lt; length)
    {
        // find the next space
        int spacepos = sentence.IndexOf(' ', currentpos);

        string word;

        if (spacepos &lt; 0)
        {
            // end of string reached.
            word = sentence.Substring(currentpos, length - currentpos);
            wordList.Add(word);
            wordCount++;

            // no need to continue.
            break;
        }

        word = sentence.Substring(currentpos, spacepos - currentpos);
        wordList.Add(word);
        wordCount++;

        currentpos = spacepos + 1;
    }

    // display
    for (int i = wordList.Count - 1; i &gt;= 0; i--)
    {
        // after first word is display, add spaces to the output
        if (i &lt; wordList.Count - 1)
        {
            Console.WriteLine("" "");
        }

        // display word
        Console.WriteLine(wordList[i]);
    }
}

public static int StringLength(String sentence)
{
    int numberOfChars = 0;

    while (!sentence.Equals(""""))
    {
        sentence = sentence.Substring(1);
        ++numberOfChars;
    }

    return numberOfChars;
}
</code></pre>
"
"22291613","<p>Try that:</p>

<pre><code>    Query query = session.createQuery(""UPDATE CartItem SET removedDate = :currentDateTime ""
                    + "" WHERE id IN (Select ci.id From Cart c inner join c.items ci""
                    + "" WHERE c.id = :cartId""
                    + "" AND ci.pro.id = :pro""
                    + "" AND ci.removedDate is null)"");
</code></pre>
"
"22553724","<p>Try this encoding for your <strong>charset</strong> attribute,</p>

<pre><code>ISO-8859-5, windows-1251, KOI8-R, UTF-8
</code></pre>

<p>Please let me know if this works and i haven't tested yet :)</p>
"
"22344635","<p>It is happening because you are creating every time new object</p>

<pre><code>ArrayList&lt;String&gt; myList = new ArrayList&lt;String&gt;(); // creates an object evrytime whem main will be called.

 try { 
String sessionId = ""b03c0-000-5h6-"" + uuid.substring(0,4)
/* from where uuid is comming?? */
 + ""-000000000"";
        myList.add(sessionId); 
// thiss will add inside new arraylist not in previous,
// because everytime it is getting new object reference
  } catch(Exception e){
    e.printStackTrace();
   }

        }
</code></pre>
"
"22347584","<p>This piece of code</p>

<pre><code>result = size &gt; 0 ? (E) queue[0] : null;
</code></pre>

<p>is not the same as: </p>

<pre><code>result =queue[0];
</code></pre>

<p>What if size is queue.size()? Check this example:</p>

<pre><code>Object[] myArray= new Object[0];
myarray[0].toString() //ArrayIndexOutOfBoundsException, because there is no element 0
</code></pre>

<p>So you need to check the size of queue before extracting any element, forcing you to lock it to avoid having another thread removing/adding elements to that queue.</p>

<p><s>UPDATE: If you can assure the queue length is more than zero, then I think the lock is not necessary: <code>return queue[0]</code> will return null or the first element of the queue, as expected.</s>
See @fge answer</p>
"
"22572841","<pre><code>public static void main(String[] args) {

        int rows = 5;
        System.out.println(""------ PATTERN 1 ------"");

        for (int i = 1 ; i &lt;= rows ; i++){
            for (int j = rows; j &gt;= i ; j--){
                System.out.print(j);
            }
            System.out.println();

        }


        System.out.println(""\n------ PATTERN 2 ------"");

        for (int i = 1 ; i &lt;= rows ; i++){
            int k;
            for (k = rows ; k &gt; i; k--){
                System.out.print("" "");
            }
            for (int j = 1; j &lt;= k ; j++){
                System.out.print(j);
            }
            System.out.println();

        }

        System.out.println(""\n------ PATTERN 3 ------"");


        for (int i = rows ; i &gt;= 1 ; i--){
            int k;
            for (k = rows ; k &gt; i; k--){
                System.out.print("" "");
            }
            for (int j = 1; j &lt;= k ; j++){
                System.out.print(j);
            }
            System.out.println();   
        }

        System.out.println(""\n------ PATTERN 4 ------"");

        int whitespaces = rows/2;
        for (int i = 1 ; i &lt;= rows; i++){
            // absolute value of whitespaces
            int abs_whitespaces = 
                    (whitespaces &lt; 0 ? -whitespaces : whitespaces);
            for (int j = 0 ; j &lt; abs_whitespaces ; j++){
                System.out.print("" "");
            }

            for (int j = 1 ; j &lt;= rows - 2 * abs_whitespaces ; j++){
                System.out.print(j);
            }

            whitespaces-=1;
            System.out.println();

        }
    }
</code></pre>
"
"22486914","<p>You must do the true thing on the end of the loop like this:</p>

<pre><code>for (int i = 1; i &lt;= a; i++) {
    for (int j = 1; j &lt;= i; j++) {
        if (i % j &gt; 0) {
            // No PrimeNumber
            isprimenumber = false;
        } else {
            // Is PrimeNumber
            isprimenumber = true;
        }

    }
    if(isprimenumber)
        System.out.println(i);

}
</code></pre>

<p>you can only tell its a prime if you tested all numbers.</p>
"
"22363371","<p>You can use the fonction .equals() on two objects that implements the generic java methods equals() and hashcode() in Java.</p>

<p>The hashcode() method is used to get an integer value of your object and the equals() method uses this hash(integer) to compare and return a boolean (wheter or not they are equal). You could then compare the objects with .equals()</p>

<pre><code>public void insert( Town d ) {

  if ( d.equals(data1) &lt; 0 ) //ERROR HERE
  {
     if ( left == null )
        left = new TreeNode( d );
     else
        left.insert( d );
  }
     else if ( d.equals(data1) &gt; 0 ) //ERROR HERE
  {
     if ( right == null )
        right = new TreeNode( d );
     else
        right.insert( d );
  }
 }
}
</code></pre>

<p>Given that data is of the type Town of course. You can insert those two methods automtically with your IDE.</p>

<p>Here is a full explanation/example: <a href=""http://javarevisited.blogspot.ca/2011/02/how-to-write-equals-method-in-java.html"" rel=""nofollow"">http://javarevisited.blogspot.ca/2011/02/how-to-write-equals-method-in-java.html</a></p>
"
"22601454","<p>I don't follow what the problem is?  What are you trying to achieve which is failing?  ""But still nothing"" is unclear.</p>

<p>If I add a main() method to your class I find the Alarm instance correctly inserted in your static List:</p>

<blockquote>
<pre><code>public static void main(String[] args) {
  Alarm alarm = new Alarm(""date"", ""desc"", false);
  System.out.println(""alarms.size(): "" + alarms.size());
}
</code></pre>
</blockquote>

<p>Output: ""alarms.size(): 1"".</p>

<p>Is there some other result you're expecting?</p>
"
"22355626","<pre><code>class Generic&lt;T&gt;
{
    public T type;

    public Generic(T obj)
    {
        type = obj;
    }
}
</code></pre>

<p>There. Fixed it for you.</p>
"
"22362833","<p>Use the following code:</p>

<pre><code>final int ASCII_0 = 48;
String seq= ""101010101"";
byte[] bytes = seq.getBytes();

for (int i = 0; i &lt; bytes.length; i++) {
    byte b=bytes[i]; 
    System.out.println(b - ASCII_0);
}
</code></pre>
"
"22363104","<p>Since you are specifying <code>G&lt;?&gt;</code>, javac is expecting to figure out what the generics are (what classes do they represent). Changing the statement to <code>G t = create(o.getClass());</code> fixes the errors.</p>

<p><code>capture</code> errors generally mean that the compiler is unable to figure out the classes...</p>

<p>Its not really clear what you are trying to do... Perhaps that information would be useful in helping you more...</p>
"
"22662518","<p>Your <code>if()</code> condition is really strange I think you wanted to put <code>if (i &gt;= 0 &amp;&amp; i &lt;= (stringList.size() - 1))</code></p>
"
"22680434","<pre><code>    for(int i = 100; i &lt; 200; i++) {
        if (i&gt;100 &amp;&amp; i % 10 == 0) {
              System.out.println();
        }
        System.out.print(i);
        System.out.print("" "");
    }
</code></pre>
"
"22680502","<p>try this</p>

<pre><code>      int counter=1;
        for(int i = 100; i &lt; 200; i++) {
             if(counter==10)
    {   
counter=1;
 System.out.println(""\n"");
    }
    else
    {
            System.out.print(i++ + ""  ""); 
            counter++;   
     }   

            System.out.println("""");    
        }
</code></pre>
"
"22487766","<p>it's possible. Here is an example with flexjson:</p>

<ol>
<li>I have a list of groups, in that every groups has a list of users</li>
<li><p>The relevant code sequence:</p>

<pre><code>try (
        ByteArrayOutputStream baos = new ByteArrayOutputStream(); ObjectOutputStream oos = new ObjectOutputStream( baos );
        FileOutputStream fos = new FileOutputStream( outputFileName ); )
{
    oos.writeObject( groupList );
    fos.write( baos.toByteArray() );
}
</code></pre></li>
</ol>
"
"22407618","<pre><code>public static boolean isSorted (double [] list){
    boolean isSorted=true;
    for(int i=1; i&lt;list.length; i++){
        if (list[i] &gt; list[i+1]){
        System.out.println(""Not Sorted"");
        isSorted = false;
    }
    }
    return isSorted;
}
</code></pre>
"
"22501498","<p>You forgot to give a space before <code>""INTEGER</code> and remove the <code>_</code> (underscore) between <code>CREATE_TABLE</code></p>

<p>Add a space like below, </p>

<pre><code>static final String DATABASE_CREATE= ""CREATE TABLE"" + ""LOGIN"" +
""("" + ""ID"" + "" INTEGER PRIMARY KEY AUTOINCREMENT,"" + 
      ""USERNAME text,PASSWORD text);"";
</code></pre>
"
"22501550","<pre><code>public class LoginDataBaseAdapter {
static final String DATABASE_NAME=""login.db"";static final int DATABASE_VERSION=1;
public static final int NAME_COLUMN=1;
 static final String DATABASE_CREATE= ""CREATE TABLE "" + ""LOGIN"" +
""("" + ""ID"" + "" INTEGER PRIMARY KEY AUTOINCREMENT,"" + "" USERNAME text, PASSWORD text);"";
</code></pre>

<p>you need to add space between words and you spell <strong>TABLE</strong> is wrong.</p>
"
"22616932","<p>The ""do while"" isn't the best type of loop to use here, because you need to check the condition in the middle of the repeated part, not at the end.  It's possible to do this with ""do while"", but you end up checking the condition twice.</p>

<p>In order not to repeat code, there's a good alternative.  The first line means ""loop forever"", but it will actually just loop until the ""break"" is encountered, which happens when the user enters correct input.</p>

<pre><code>for(;;) {
    System.out.println(""\nPlease enter the floor you are on: "");
    current_Floor = in.nextInt();   
    if (current_Floor &lt;= MAX_FLOORS) {
        break;
    }

    System.out.println(""Please enter a floor which is less than 8"");
}
</code></pre>
"
"22711051","<pre><code>    boolean leapyear(int year)   
{
    if (year % 4==0) 
    {
        if (year%100==0) 
        {
           if (year%400==0)
           {
            return true;
           }
           else
           { 
              return true;
           }
       }
       else``
       {
        return false;
       }
    }
}
</code></pre>
"
"22524036","<pre><code>String[] both = (String[]) ArrayUtils.addAll(first, second);
</code></pre>

<p>or</p>

<pre><code>static String[] concat(String[] a, String[] b) {
   String[] c= new String[a.length+b.length];
   System.arraycopy(a, 0, c, 0, a.length);
   System.arraycopy(b, 0, c, a.length, b.length);
   return c;
}
</code></pre>
"
"22434646","<p>You can use <a href=""https://code.google.com/p/google-gson/"" rel=""nofollow"">gson api</a> for this purpose. Here is the sample code :</p>

<pre><code>public class Bean {
        private int Id;
        private String Name;
        private String SubTitle;
        private String Description;
        private String Date;
        private String City;
        private String State;
        private int Production;
        public int getId() {
            return Id;
        }
        public void setId(int id) {
            Id = id;
        }
        public String getName() {
            return Name;
        }
        public void setName(String name) {
            Name = name;
        }
        public String getSubTitle() {
            return SubTitle;
        }
        public void setSubTitle(String subTitle) {
            SubTitle = subTitle;
        }
        public String getDescription() {
            return Description;
        }
        public void setDescription(String description) {
            Description = description;
        }
        public String getDate() {
            return Date;
        }
        public void setDate(String date) {
            Date = date;
        }
        public String getCity() {
            return City;
        }
        public void setCity(String city) {
            City = city;
        }
        public String getState() {
            return State;
        }
        public void setState(String state) {
            State = state;
        }
        public int getProduction() {
            return Production;
        }
        public void setProduction(int production) {
            Production = production;
        }



    }
</code></pre>

<p>for testing : </p>

<pre><code>@Test
    private void test() {

        Gson g = new Gson();
        String jsonString = ""[{ \""Id\"":18, \""Name\"":\""Albume One\"", \""SubTitle\"":null, \""Description\"":null, \""Date\"":\""3/7/2014 8:00 PM\"", \""City\"":null, \""State\"":null, \""Production\"":13 }]"";
        Type token = new TypeToken&lt;List&lt;Bean&gt;&gt;(){}.getType();
        List&lt;Bean&gt; list = g.fromJson(jsonString, token);
        for (Bean bean : list) {
            System.out.println(bean.getName());
        }
    }
</code></pre>
"
"22713666","<p>You could use one simple one of the following</p>

<pre><code>String[] str = {""Hello"",""World!!!!"",""Java""};
String concat ="""";
for(String s : str)
{
    concat+=s;
}
System.out.println(concat);
</code></pre>

<p>Or using <code>StringBuilder</code> which is more efficient like this:</p>

<pre><code>String[] str={""Hello"",""World!!!!"",""Java""};
StringBuilder sb = new StringBuilder();
for(String s : str)
{
    sb.append(s);
}
System.out.println(sb.toString());
</code></pre>
"
"22438198","<p>Depending on what toolkit you use ...</p>

<pre><code>JSONArray array = parser.parse(jsonString);
for (JSONObject object : array) {
    int id = object.getInt(""Id"");
    String name = object.getString(""Name"");
    ....
}
</code></pre>
"
"22630433","<p>The initialization  of <code>etdate</code> and <code>ettime</code> should be in a method, like <code>onCreate</code>.</p>
"
"22713678","<p>You dont need Arraylist for concatenation. Try the below approach</p>

<pre><code>    String[] str={""Hello"",""World!!!!"",""Java""};
    StringBuilder finalString = new StringBuilder();
    for(int i=0;i&lt;str.length;i++)
    {
        finalString.append(str[i]);
    }
    System.out.println(finalString);
</code></pre>
"
"22718060","<p>You were close. This is the correct boolean logic you are looking for: </p>

<pre><code>if ((UserID.equals(EnteredUserID) &amp;&amp; Password.equals(EnteredPassword) &amp;&amp; StudentNumber == EnteredStudentNumber) 
|| (UserID2.equals(EnteredUserID2) &amp;&amp; Password2.equals(EnteredPassword2) &amp;&amp; StudentNumber2.Equals(EnteredStudentNumber2)))
</code></pre>

<p>Notice, the EnteredStudentNumber2 variable is a string, so you will have to use .Equals().</p>

<p>The first EnteredStudentNumber is an integer, so you can use == comparison.</p>
"
"22718111","<p>As others have stated it is possible to do this with the or operator (<code>||</code>) </p>

<p>You would want to group your checks for all the fields with parantheses around them then or for the other checks</p>

<pre><code>    if ((UserID.equals(EnteredUserID) &amp;&amp; (Password.equals(EnteredPassword)) &amp;&amp; (StudentNumber == EnteredStudentNumber))
            || (UserID2.equals(EnteredUserID) &amp;&amp; (Password2.equals(EnteredPassword)) &amp;&amp; (StudentNumber2 == EnteredStudentNumber))
            [...]
            )
</code></pre>

<p>However this probably isn't such a great idea as it's very error prone (you could accidentally check StudentNumber4 in a block that is supposed to check StudentNumber43, therefore you should be working with some kind of Iterable Data structure. That can multiple <code>List&lt;String&gt;</code>, multiple String Arrays <code>String[]</code> or lists of objects encapsulating your UserInformation (<code>List&lt;User&gt;</code> or <code>User[]</code>)</p>
"
"22664388","<p>That's easy, do it this way:</p>

<pre><code>Boolean b = false;
for(String x: list1){
    for(String y: list2){
        if(x.equalsIgnoreCase(y)){
           System.out.print((b ? "","" : """") + list1.indexOf(x));
           b = true;
        }
    }
}
</code></pre>
"
"22757475","<p>Try to use replaceAll function </p>

<pre><code>private static String getFormattedString(String variable) {
  //No need this.
  // char [] specialCharacters = {'.', '\\', '+', '*', '?', '[', '^', ']', '$', '(', ')' ,'{' ,'}', '=', '!', '&lt;', '&gt;', '|', ':', '-'};
  variable = variable.replaceAll(""."",""\\.""); //same for all.
  variable = variable.replaceAll(""+"",""\\+"");.
  variable = variable.replaceAll(""*"",""\\*"");
return formatted;
}  
</code></pre>
"
"22769845","<p>A method can only return 1 object or value. If you want to return multiple objects or values, you can return an array or list. In your case if you have a method like this</p>

<pre><code>boolean isNextCardHigher() { ... }
</code></pre>

<p>you can change that to return an array of boolean values.</p>

<pre><code>boolean[] isNextCardHigher() { ... }
</code></pre>

<p>Then inside your method you would create an array, fill it with the values you want, and return the whole array.</p>

<pre><code>boolean[] result = new boolean[2];
result[0] = same;
result[1] = higher;
return result;
</code></pre>
"
"22769938","<p>Create new Class as </p>

<pre><code>public class MyModel {
    private boolean higher = false;
    private boolean same = false;

    public boolean isHigher() {
        return higher;
    }

    public void setHigher(boolean higher) {
        this.higher = higher;
    }

    public boolean isSame() {
        return same;
    }

    public void setSame(boolean same) {
        this.same = same;
    }


}


private MyModel isNextCardHigher(TCard lastCard, TCard nextCard, HigherSame highersame, MyModel myModel ){

    if (nextCard.rank == lastCard.rank){//Higher = game over


    if(nextCard.rank == lastCard.rank){
        myModel.setSame(true);
    }

    if (nextCard.rank &gt; lastCard.rank){
        myModel.setHiger(true);
    }
    return myModel;
    }}
</code></pre>
"
"22631814","<p>The same program in Dart can be written as following in Java:</p>

<pre><code>import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Demonstration
{
  public Demonstration()
  {
    ArrayList&lt;List&lt;Integer&gt;&gt; lists = getListOfList();

    printList(lists);
  }

  // Here's the function implementation you want.
  private ArrayList&lt;List&lt;Integer&gt;&gt; getListOfList()
  {
    ArrayList&lt;List&lt;Integer&gt;&gt; list = new ArrayList&lt;&gt;();

    final int maxSize = 6;

    // The 4 nested loops still take constant time as the value of `maxSize` is constant.
    // I would have created a permutation based solution only if maxSize varied.
    for (int i = 0; i &lt; maxSize; ++i)
    {
      for (int j = 0; j &lt; maxSize; ++j)
      {
        for (int k = 0; k &lt; maxSize; ++k)
        {
          for (int w = 0; w &lt; maxSize; ++w)
          {
            list.add(Arrays.asList(i, j, k, w));
          }
        }
      }
    }

    return list;
  }

  private void printList(ArrayList&lt;List&lt;Integer&gt;&gt; lists)
  {
    lists.forEach(System.out::println); // JDK 8 standard
  }

  public static void main(String[] args)
  {
    new Demonstration();
  }
}
</code></pre>

<p>One can even write the program using a 2D array of ints. Here's how to do that: </p>

<pre><code>public class Demonstration
{
  public Demonstration2()
  {
    int[][] lists = getListOfList();

    printList(lists);
  }

  private int[][] getListOfList()
  {
    final int maxSize = 6;

    int[][] list = new int[maxSize * maxSize * maxSize * maxSize][];
    int rowIndex = 0;

    for (int i = 0; i &lt; maxSize; ++i)
    {
      for (int j = 0; j &lt; maxSize; ++j)
      {
        for (int k = 0; k &lt; maxSize; ++k)
        {
          for (int w = 0; w &lt; maxSize; ++w)
          {
            list[rowIndex++] = new int[]{i, j, k, w};
          }
        }
      }
    }

    return list;
  }

  private void printList(int[][] lists)
  {
    for (int[] list : lists)
    {
      for (int item : list)
      {
        System.out.print(item + "" "");
      }

      System.out.println();
    }
  }

  public static void main(String[] args)
  {
    new Demonstration();
  }
}
</code></pre>
"
"22517008","<p>Create a ObjectOutputStream. This has a writeShort (<a href=""http://docs.oracle.com/javase/7/docs/api/java/io/ObjectOutputStream.html#writeShort(int)"" rel=""nofollow"">http://docs.oracle.com/javase/7/docs/api/java/io/ObjectOutputStream.html#writeShort(int)</a>) method. </p>

<pre><code>ByteArrayOutputStream bos = new ByteArrayOutputStream();
ObjectOutputStream oos = new ObjectOutputStream(bos);
oos.writeShort(123);
...
</code></pre>
"
"22519382","<p>Refer to <a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#String%28byte%5b%5d%29"" rel=""nofollow"">Java Doc for String</a></p>

<p>You can construct a <code>String</code> object from <code>byte</code> array. Guess you know the rest.</p>

<pre><code>public static byte[][] splitByteArray(byte[] bytes, byte[] regex, Charset charset) {
    String str = new String(bytes, charset);
    String[] split = str.split(new String(regex, charset));
    byte[][] byteSplit = new byte[split.length][];
    for (int i = 0; i &lt; split.length; i++) {
        byteSplit[i] = split[i].getBytes(charset);
    }
    return byteSplit;
}

public static void main(String[] args) {
    Charset charset = Charset.forName(""UTF-8"");
    byte[] bytes = {
        '1', '1', ' ', '1', '1',
        'F', 'F', ' ', 'F', 'F',
        '2', '2', ' ', '2', '2', ' ', '2', '2',
        'F', 'F', ' ', 'F', 'F',
        '3', '3', ' ', '3', '3', ' ', '3', '3', ' ', '3', '3'
    };
    byte[] regex = {'F', 'F', ' ', 'F', 'F'};
    byte[][] splitted = splitByteArray(bytes, regex, charset);
    for (byte[] arr : splitted) {
        System.out.print(""["");
        for (byte b : arr) {
            System.out.print((char) b);
        }
        System.out.println(""]"");
    }
}
</code></pre>
"
"22539534","<p>It's good, but you don't need the <code>}</code>.</p>

<pre><code>import java.lang.Math;

    public class Factorial {



    public static int factorial( int iNo ) {

        // Make sure that the input argument is positive

        if (iNo &lt; 0) throw
            new IllegalArgumentException(""iNo must be &gt;= 0"");

        // Use simple look to compute factorial....

        int factorial = 1;
        for(int i = 2; i &lt;= iNo; i++)
            factorial *= i;

        return factorial;
    }


    public static void main ( String args[] ) {




    }
</code></pre>
"
"22539548","<pre><code>public static int factorial(int n)
{
  if(n == 1)
     return ?
  else
      return n* factorial(n - ?);
}
</code></pre>

<p>Maybe help you a little</p>
"
"22743791","<ol>
<li><p>Create an instance of the View in the controller</p></li>
<li><p>Change the access modifier of <code>setSize(xx,yy)</code>method from <code>private</code> to <code>public</code>.</p></li>
<li><p>replace <code>setSize</code> in <code>actionPerformed()</code> with to <code>view.setSize(xx,yy)</code>.</p></li>
</ol>
"
"22730272","<p>You should use <code>BitmapDescriptorFactory</code> instead of <code>BitmapFactory</code>.</p>
"
"22731849","<p>You should import this class:</p>

<pre><code>import com.google.android.gms.maps.model.BitmapDescriptorFactory;
</code></pre>
"
"22903904","<p>This is the same as difference between :</p>

<pre><code>if(a&gt;b &amp;&amp; b&gt;c &amp;&amp; c&gt; d)
{
    // do some thing
}
</code></pre>

<p>and</p>

<pre><code>if(a&gt;b &amp; b&gt;c &amp; c&gt; d)
{
    // do some thing
}
</code></pre>

<p>The first one &amp;&amp; is short-circuit operator whereas the second one &amp; is non-shortciruit operator.
In 1st case, if (a>b) returns false, it will not check for (b>c) and (c>d). Wheras in 2nd case, it will check for all three if conditions regardless of whether true/false.</p>

<p>In your case, the second block of code is similar to functioning of &amp; operator.</p>
"
"22786095","<p>Just use </p>

<pre><code>&lt;s:if test=""isUserFullyLogged()""&gt;&lt;/s:if&gt; or `&lt;s:if test=""isUserFullyLogged""&gt;&lt;/s:if&gt;`
</code></pre>

<p>to call that method otherwise you have to set the value of this boolean result to a variable with proper getter-setter and use <code>&lt;s:if test=""%{#userFullyLogged}""&gt;&lt;/s:if&gt;</code> </p>

<p>Thanks,
Amit Kumar Morea</p>
"
"22653737","<p>Try this 
Courtesy : <a href=""http://www.fluffycat.com/Java/HashMaps/"" rel=""nofollow"">http://www.fluffycat.com/Java/HashMaps/</a></p>

<p>HashMap methods to alter what is in the HashMap</p>

<pre><code>Object objectReplacedForKey = 
  hashMapName.put(objectKey, objectToAdd); 

hashMapName.putAll(mapToAdd); 
hashMapName.remove(keyObject);  
hashMapName.clear();
</code></pre>
"
"22654138","<p>With an <code>ArrayList</code> (that implements <code>Collection</code>) you are allowed to do this .</p>
"
"22661901","<p>First you have to create the object for the textview like this:</p>

<pre><code>TextView t=(TextView) findViewById(R.id.text);
</code></pre>
"
"22843482","<p>Parse outside if statment, then just compare :</p>

<pre><code>if(distanceTf.getText() == """")
</code></pre>
"
"22668937","<p>Try Regex:</p>

<pre><code>String pattern = ""["" + S2 + ""]""; // will take all chars from S2 to create a pattern.
String result = S1.replaceAll(S2,""""); //will replace any char from S2.
</code></pre>
"
"22943005","<p>What you are doing is creating an object of Stock and naming it the input, as far as I know you cannot create an object based on a string. You can though, if you know what objects you want them to enter, do the following: </p>

<pre><code>String input = JOptionPane.showInputDialog(null, ""Enter the name of object?”); 
Switch (input){
case String: String string  = new String();
case int: int Int = new int();
</code></pre>

<p>and so on. If this is not the idea of what you wanted to do let me know.</p>
"
"23039666","<p>Could it be because you are not initializing the <code>tab</code> variable ?</p>

<pre><code>JPanel tab = new JPanel();
</code></pre>
"
"22879843","<p>Check your import statements. Make sure you haven't imported the android R class (i.e. <code>import android.R</code>) instead of your own projects R class.</p>
"
"23012918","<p>Why are you mixing html and java.  tag is in html. This is how you do in java</p>

<pre><code>label = new JLabel(""A label"");
label.setFont(new Font(""Serif"", Font.BOLD, 14));
</code></pre>
"
"22918810","<p>i was following this question and based on the answer by Android_Dev i made changes to my code as below </p>

<p>1st class</p>

<pre><code> class blah extends activity {
 //// onCreate , initialization etc here

     public void sss(context c)
   {

    Toast(c , ""text"" , toast.LENTGH_LONG) ;

   }

  }
</code></pre>

<p>2nd Class</p>

<pre><code>public xxxx extends activity
{

Context c = getApplicationContext();
blah b = new blah(this) ;

 /// inside an onclicklistener attached to a button object, i put this
    b.sss(c) ; 

}
</code></pre>

<p>I have not included all other stuff usually found in classes extending Activity class since i just wanted to show what i did to call function from other class.
This solution was perfect for me. May or may not be useful for others though</p>
"
"22758218","<p>I think you can change ""t="" to ""abc="".</p>

<pre><code>str.replace(""t="", ""abc="");
</code></pre>
"
"23101635","<p>ok,I think you have not understand the purpose of Generic Type of Java clearly.Generic type is to define element type explicitly,it means,only when your collection only contains some type element,Generic type can help you to aviod ClassCastException.And now,absolutely there three types in your collection.so it's not suitable to use Generic Type.you can use No Generic type simply,like </p>

<pre><code>@SuppressWarnings(""rawtypes"")
ArrayList arrayList=new ArrayList();
</code></pre>
"
"23076375","<p>declare current variable as global..</p>

<p>int current = 0; // declare global..</p>

<p>and do like this..</p>

<p>for(; current &lt; cityDetailsArray.size(); current++) {
            row = new TableRow(this);</p>

<pre><code>        OnClickListener rowClickListener = new OnClickListener() {

            @Override
            public void onClick(View v) {
                // TODO Auto-generated method stub
                showDetailsView(cityDetailsArray.get(current)); //error - Cannot refer to a non-final variable current inside an inner class defined in a different method
            }
        };

        row.setOnClickListener(rowClickListener);
                //rest of the loop
</code></pre>

<p>}</p>
"
"23115213","<p>you can't use <code>==</code> on strings, you need to use the <code>String.equals</code> function. 
you can use it like that:</p>

<pre><code>        String s1 = ""H"";
        String s2 = ""e"";
        String s3 = s1+s2;
        String s4 = ""He"";
        System.out.println(s3.equals(s4));//false

        String s5=""h"";
        String s6=""h"";
        System.out.println(s5.equals(s6));//true
</code></pre>
"
"23093479","<p>Overriding hashCode() and equals() methods and using a set collection:</p>

<pre><code>@Override
public int hashCode() {
    return groupId;
}
@Override
public boolean equals(Object o) {
        return ((o instanceof MyThing) &amp;&amp; (groupId == ((MyThing)o).groupId));
}
static MyThing[] noRepetition(MyThing[] array) {
        Set&lt;MyThing&gt; set = new HashSet&lt;MyThing&gt;();
        for (MyThing s : array) {
                set.add(s);
        };
        return set.toArray(new MyThing[set.size()]);
}
</code></pre>
"
"22988714","<p>You should perform string comparison this way:</p>

<pre><code>if(op.equals(""*"")
</code></pre>

<p>Since, you are using the <code>==</code> operator for strings you are getting this error.</p>
"
"23151742","<p>check this out..</p>

<pre><code>public String altPairs(String str) {
String result = """";
for (int i = 0; i &lt; str.length(); ) {
result += str.substring(i, i+1);
i+=4;
}
return result;}
</code></pre>
"
"22890557","<p>Your String is A.B.C. so that whenever you split that it with <code>.</code> it will be give four substrings only. Even though you use <code>trim()</code> it will give four substrings. So try to remove last <code>.</code> and then split string. You will get proper output.</p>
"
"23214679","<p>Default selenium will run on 4444 port. Please create your instances as such that it takes different port each one by adding</p>

<pre><code>     -port &lt;port id/number&gt;
</code></pre>
"
"22923636","<pre><code>Image image = new ImageIcon(bufferedImage).getImage();
</code></pre>

<p>That's the way I usually do it...
OR</p>

<pre><code>Image image = (Image) bufferedImage;
</code></pre>
"
"23036910","<p>the Collection are by default Objects but since 1.5 Sun adds new mechanism to deal with objects called Generics. In other words </p>

<p>If you write </p>

<pre><code>ArrayList arr =new ArrayList(); 
</code></pre>

<p>without the generics it will work. Objects and this words for &lt; 1.4 
If you have</p>

<pre><code>List&lt;Vehicle&gt; allVehicles = new ArrayList&lt;Vehicle&gt;();
</code></pre>

<p>and you wanna transfer it to <code>ArrayList</code> of <code>Object</code>s </p>

<pre><code>List noremalArray = new ArrayList(allVehicles);
</code></pre>
"
"23131295","<p>try this,</p>

<pre><code>public class HelloWorld {
@RequestMapping(method=RequestMethod.GET)
public String printHello(ModelMap model){
    model.addAttribute();
    return new ModelAndView(""hello"",""message"", ""Hello World"");
}
</code></pre>

<p>Hope this helps!!</p>
"
"23051018","<p>I understand a lot of people are interpreting your question to mean you want to know about interfaces but I am interpreting this ""write a method which will take an unknown object as a parameter?"" to mean how do I write a method to handle unknown objects. As the other answers already tell you unless they share a common interface you can't have them all call the same method. But in case you are asking for this(which is what I think your question is asking for) this is how you would custom handle different unknown parameters...</p>

<pre><code>public void aMethod(Object... object) {
if(object==null)
{
    //whatever you want to do if no parameters are entered.
    return;
}
for (Object o : object) {
    if (o == null) {
    continue; //what to do if null entered
    }
    if (o instanceof Integer) {
    //whatever you want to do if it is an Integer
    }
    else if(o instanceof Double)
    {
    //whatever you want to do if it is a Double
    }
    else if(o instanceof Character)
    {
    //whatever you want to do if it is a Character
    }
    //and so on
 }
}
</code></pre>
"
"23063620","<p>You need to implement Google Map V2. May be following line causing the problem in the manifest uses-library <code>android:name=""com.google.android.maps""</code></p>
"
"23290045","<p>The problem is that * is a reserved character in regexes, so you need to escape it.</p>

<pre><code>replaceAll(""\\*"",letter+"""")
</code></pre>
"
"23290110","<p>‘*’ symbol is used to identify a group from the regular expression which is the first parameter of ‘replaceAll’ or ‘replaceFirst’ method</p>

<pre><code>1. Using ‘replace’ method: This would be the good choice if you want to replace a string literal and not a pattern.


2. Escaping ‘*’ symbol: If you need to a use regular expression, and your pattern has no groups identified, then you can escape any group identification symbols from your replace string as shown below:



String replaceValue = java.util.regex.Matcher.quoteReplacement(""*100"");
</code></pre>
"
"23303085","<p><b>Edit</b> As mentioned in the accepted answer, the AWT Rectangle object provides this functionality with the <code>intersects</code> method.  If you dont want to use AWT or for some other reason, below is a variant solution.</p>

<p>If you want to reinvent the wheel, then here is some stuff.
Using your example image, this will test of the black rectangle overlaps with the blue rectangle.  Also, this assumes that touching is not overlapping.</p>

<p>Each rectangle will be represented by two coordinate pairs: topLeft and bottomRight.</p>

<p>This assumes that 0, 0 is in the top left corner.</p>

<pre><code>Function xOverlapCheck(black, blue)
{
    // black left side overlaps.
    if ((black.topLeft.x &lt;= blue.bottomRight.x) &amp;&amp;
        (black.topLeft.x &gt;= blue.topLeft.x))
    {
        return true;
    }

    // black right side overlaps.
    if ((black.bottomRight.x &lt;= blue.bottomRight.x) &amp;&amp;
        (black.bottomRight.x &gt;= blue.topLeft.x))
    {
        return true;
    }

    // black fully contains blue.
    if ((black.bottomRight.x &gt;= blue.bottomRight.x) &amp;&amp;
        (black.topLeft.x &lt;= blue.topLeft.x))
    {
        return true;
    }
}


Function yOverlapCheck(black, blue)
{
    // black top side overlaps.
    if ((black.topLeft.y &gt;= blue.topLeft.y) &amp;&amp;
        (black.topLeft.y &lt;= blue.bottomRight.y))
    {
        return true;
    }

    // black bottom side overlaps.
    if ((black.bottomRight.y &gt;= blue.topLeft.y) &amp;&amp;
        (black.bottomRight.y &lt;= blue.bottomRight.y))
    {
        return true;
    }

    // black fully contains blue.
    if ((black.bottomRight.y &gt;= blue.bottomRight.y) &amp;&amp;
        (black.topLeft.y &lt;= blue.topLeft.y))
    {
        return true;
    }
}
</code></pre>

<p>Black overlaps Blue when both functions return true.</p>

<p><b>Edit:</b> use &lt;= and >= for overlap comparisons.</p>
"
"22987704","<p>That is because you have to create a class that extends <code>GUI</code> or use one already defined, that also extends <code>GUI</code>.</p>

<p>Also u can remove <code>abstract</code> keyword, to use the one you have.</p>
"
"23255200","<p>I don't know what you want the <code>toString</code> to look like for <code>A</code> and <code>B</code>, but I'll just make a guess.</p>

<pre><code>class A {
    private String getStringRepresentation() {
        return one + "" | "" + two;
    }
    public String toString() {
        return bRef.toString();
    }
}

class B {
    public String toString() {
        return three + ""["" + aRef.getStringRepresentation() + ""]""
    }
}
</code></pre>
"
"23133701","<p>You are right - <strong>strings are immutable in Java</strong>. Which means, that everytime you do something with string a new string with new contents is created.</p>

<p>The only difference is that when you explicitly call <em>new</em> operator it creates a brand new String, which is not taken from so-called ""string pool"".</p>

<p>E.g.:</p>

<pre><code>""A"" == ""A""
</code></pre>

<p>can be true (not guaranteed, though), but</p>

<pre><code>""A"" == new String(""A"")
</code></pre>

<p>is always false.</p>
"
"22990672","<pre><code>public static String getDate(long milliSeconds, String dateFormat) {
        // Create a DateFormatter object for displaying date in specified
        // format.
        SimpleDateFormat formatter = new SimpleDateFormat(dateFormat,
                Locale.getDefault());

        // Create a calendar object that will convert the date and time value in
        // milliseconds to date.
        Calendar calendar = Calendar.getInstance();
        calendar.setTimeInMillis(milliSeconds);
        return formatter.format(calendar.getTime());
    }
</code></pre>
"
"23286253","<p>To know if an ArrayList contains an element use <code>contains</code>.</p>

<pre><code>List&lt;String&gt; list = new ArrayList&lt;String&gt;();
list.add(...);

if (list.contains(""a value"")) {
   //do something
}
</code></pre>

<p>To know if a Map conatains an element use <code>containsKey</code> or <code>containsValue</code>.</p>

<pre><code>Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();
map.put(...);

if (map.containsKey(""a key"")) {
   //do something
}
</code></pre>
"
"23195909","<p>try this code </p>

<pre><code>@Override
public void onTabSelected(Tab tab, FragmentTransaction ft) {
// TODO Auto-generated method stub
 if(tab.getText().equals(""The test""){
  //the test tab is selected
 }
else if(tab.getText().equals(""Chat""){
  // the chat tab is selected
 }
}
</code></pre>
"
"23061478","<p>enhanced for loop is to iterate your list one by one where in old for loop you may loop by jumping like </p>

<pre><code>for(int i=0;i&lt;100;i+=4){ 
}
</code></pre>

<p>but if you are going to read one by one, both are same even enhanced for loop is more readable and small and sweet.</p>
"
"23264977","<p>If the resultSet size is very huge you can do it in batches by setting max limits</p>

<pre><code>query.setMaxResults(int maxResults)
</code></pre>
"
"23421503","<p>Read about ""substring"" &amp; ""split""</p>

<pre><code>System.out.print(input.substring(0,7)+""\n""+input.substring(8,25)+""\n""+input.substring(27,51));
</code></pre>

<p>OR</p>

<pre><code>String[] words = input.split("" "");
   System.out.print(words[0]+"" ""+words[1]+""\n""+words[2]+"" ""+words[3]+"" ""+words[4]+"" ""+words[5]+""\n""+words[6]+"" ""+words[7]+"" ""+words[8]+"" ""+words[9]+"" ""+words[10]);
</code></pre>
"
"23135081","<p>Staying in your context:</p>

<pre><code>public static void main(String[] a) {


    String s[]={""a"",""b"",""c"",""-"",""g"",""t"",""-"",""q"",""-"",""a"",""s"",""d"",""-"",""a"",""b"",""y""};

    int sop=0;

    String[] sdf=new String[100];
    String temp = """";

    for(int kk=0;kk&lt;s.length;kk++){
        if(s[kk].equals(""-"")){
            sdf[sop] = temp;
            temp = """";
            sop++;
        } else {
            temp += s[kk];
        }
    }
}
</code></pre>

<p>Better use a StringBuilder, this is just for understanding the logic...</p>
"
"23459363","<p>i think your problem is this line</p>

<pre><code>expListView = (ExpandableListView) this.findViewById(R.id.footer_layout);
</code></pre>

<p>This line is not actually returning you the View but null. is <code>R.id.footer_layout</code> actually an ExplandableListView?</p>
"
"23473488","<p>final variables can't be re-evaluated again runtime, If you want to use switch case you can't do like (b+c) in case clause,
instead of this do use this one,</p>

<pre><code>void add() {
    final int a = 30;
    final int b = 10;
    final int c;
    c = 20;
    final int cmp=b+c;
    switch (a) {
    case cmp:
        System.out.println(""In case b+c"");
        break;
    default:
        break;
    }
}
</code></pre>

<p>Now this will work fine for you,</p>
"
"23197656","<pre><code>function trim(s)
{    
    s.value = s.value.replace('/(^\s*)|(\s*$)/',''); 
    s.value = s.value.replace('/[ ]{2,}/gi','');     
    s.value = s.value.replace('/\n +/',""\n"");           
    return;
}
</code></pre>

<p>text box not allow the multiple space between twowords</p>
"
"23520678","<p>Your example helped a lot it nice and successfull. Other users can use this example.
In Comment Sanket has wrote the we need to change at lines mentioned below:</p>

<pre><code>in = assetManager.open(""xxxx.db"");
File outFile = new File(Environment.getExternalStorageDirectory(), ""xxxx.db"");
</code></pre>
"
"23236078","<pre><code> int i = 0;
 while((line = reader.readLine()) != null){
     if(i != 0){
     //line is not the first one.
     //do some work.
     }
     i++;
 }
</code></pre>
"
"23236130","<p>Use a linenumberreader instead.</p>

<pre><code>LineNumberReader reader = new LineNumberReader(new InputStreamReader(file.getInputStream()));
            String line1;
            while ((line1 = reader.readLine()) != null) 
            {
                if(reader.getLineNumber()==1){
                    continue;
                }
                System.out.println(line1);
            }
</code></pre>
"
"23560967","<p>Try this it ll help you.</p>

<pre><code>        Typeface font = Typeface.createFromAsset(getApplicationContext().getAssets(),""fonts/helvetica.ttf"");
</code></pre>

<p>ttf file should be in small letter. </p>
"
"23402851","<p>You have <em>two</em> problems.</p>

<p>First and foremost, you are performing <strong>integer division</strong></p>

<pre><code>double test1 = 100 * one / rolls;
</code></pre>

<p><code>100</code>, <code>one</code> and <code>rolls</code> are all <code>int</code>. This means the result is an integer, regardless of what you've declared the return type to be. This is covered in the SO question <a href=""http://stackoverflow.com/q/4685450/302916"">Why the result of 1/3=0 in java?</a>:</p>

<blockquote>
  <p>the result variable as double just causes an implicit conversion to occur after division.</p>
</blockquote>

<p>If you want <code>double</code>s, use doubles: </p>

<pre><code>double one = 432.0;
double rolls = 953.0;
</code></pre>

<p>After fixing that, your division of <code>Math.round( test1 * 100.0 ) / 100.0;</code> will produce a <code>double</code>, but probably with more than two places of precision. It's unclear at that point if you want further rounding to a specific precision, but if you only wanted to print the two digits after the decimal you could use:</p>

<pre><code>System.out.printf(""%.2f"", finalValue1);
</code></pre>
"
"23404630","<p>We can get the date in the following way</p>

<pre><code>DateFormat dfm = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"");
Date parseDate = dfm.parse(datestring);
</code></pre>

<p>Now the <code>parseDate</code> is in the format ""yyyy-MM-dd HH:mm:ss""</p>
"
"23571379","<p>Try</p>

<pre><code>import java.util.ArrayList;
import java.util.List;


public class ArrayGap {

    public static void main(String[] args) {
        int[] arr = {1, 3, 7, 2, -4};
        int high, low;
        List&lt;Integer&gt; out = new ArrayList&lt;Integer&gt;();
        for(int i=0; i&lt;arr.length - 1;  i++){
            high = arr[i];
            if(arr[i] &lt; arr[i+1]){
                for(int j=arr[i]; j&lt;arr[i+1]; j++){
                    out.add(j);
                }
            } else {
                for(int j=arr[i]; j&gt;=arr[i+1]; j--){
                    out.add(j);
                }
            }

        }
        System.out.println(out);
    }

}
</code></pre>
"
"23546135","<p>A good way is to use a static init() and call it when exception occurs.</p>

<pre><code>package com.kvvssut.misc;

public class ResetStatic {

    private static int SCORE = 0;
    private static float SPEED = 2.3f; 

    private static void init() {
        SCORE = 0;
        SPEED = 2.3f;       
    }



    public static void main(String[] args) {

        SCORE = 100;
        SPEED = 230.3f;

        try {
            throw new RuntimeException();
        } catch (Exception e) {
            init();
        }

        System.out.println(SCORE);
        System.out.println(SPEED);
    }

}
</code></pre>
"
"23571707","<p>This works. just check for array size &lt; 2 for safety.</p>

<pre><code>public static void main(String[] args) {
    int[] arr = {1, 3, 7, 2, -4};

    Integer[] result = fillArray(arr);

    for (int i = 0; i &lt; result.length; i++) {
        System.out.println(result[i]);
    }
}

private static Integer[] fillArray(int[] arr) {
    List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;(); 

    list.add(arr[0]);

    for (int i = 1; i &lt; arr.length; i++) {
        int prevItem = arr[i-1];
        int gap = arr[i] - prevItem;
        if(gap &gt; 0){
            fillGap(list, prevItem, gap, 1);
        } else if(gap &lt; 0){
            fillGap(list, prevItem, gap, -1);
        }
    }

    return list.toArray(new Integer[0]);

}

private static void fillGap(List&lt;Integer&gt; list, int start, int gap, int delta) {
    int next = start+delta;
    for (int j = 0; j &lt; Math.abs(gap); j++) {
        list.add(next);
        next = next+delta;
    }   
}
</code></pre>
"
"23288886","<p>Your aim is very unclear from the code. I presume you want some functionality like tail command in linux..if so, Below code is helpful..please run it and check it out..</p>

<pre><code>import java.io.*;

public class FileCheck {

    static long sleepTime = 1000 * 1;
    static String file_path = ""/dev/ttyO1"";

    public static void main(String[] args) throws IOException {
            BufferedReader input = new BufferedReader(new FileReader(file_path));
            String currentLine = null;
            while (true) {
                if ((currentLine = input.readLine()) != null) {
                    System.out.println(currentLine);
                    continue;
                }
                try {
                    Thread.sleep(sleepTime);
                } catch (InterruptedException e) {
                    Thread.currentThread().interrupt();
                    break;
                }
            }
            input.close();
    }
}
</code></pre>
"
"23574927","<p><code>==</code> is a relational operator, referring to the relationships that values can have with one another. </p>

<p>Also, the <code>==</code> operator obviously means ""Equal To"" and only works for <code>raw</code> data types. </p>

<p>These types include double, int, and float. However, the <code>==</code> operator will not work in a boolean expression (only true/false works). </p>

<p>So in sum, it's really how you put your program together to get this operator to work. I recommend reading JAVA programming books such as the ""JAVA 2"" Series. Hope this helped!</p>
"
"23302283","<pre><code> test.replaceAll(""This"","""").replaceAll(""this"", """")
</code></pre>
"
"23583052","<p>this is the algorithm! Good luck for your homework</p>

<pre><code>private static int howManyChar(String s, char c){
        if(s.length() == 0){
            return 0;
        }else{
            if(s.charAt(0)==c)
                return howManyChar(s.substring(1),c) + 1;
            else
                return howManyChar(s.substring(1),c);
        }

    }
</code></pre>
"
"23302311","<p>+1 for Cody S an other way is this</p>

<pre><code>String firstword =test.split("" "")[0];

test=test.replaceAll(firstword, """");
</code></pre>
"
"23583061","<p>try this</p>

<p><code>public static int howManyChar (String s, char c) {
    if (s.length()==0)
        return 0;
    return s.charAt(0) == c ? 1 : 0 + howManyChar(s.substring(1), c);
}</code></p>

<p>OR if you cannot use the substring method</p>

<p><code>public static int howManyChar (String s, char c, int pos) {
    if (pos &gt;= s.length())
        return 0;
    return s.charAt(pos) == c ? 1 : 0 + howManyChar(s, c, ++pos);
}</code></p>
"
"23583151","<pre><code>public static int howManyChar (String s, char c)
{
    index++;
        if (s.length() == index)
            return 0;
        else if(s.charAt(index) == c)
           return 1 + howManyChar(s, c);
        else
            return 0 +  howManyChar(s, c);

  }
</code></pre>

<p>Now this isn't the best soultion, I have a class level variable (index) holding the place in the string.  But without using substring I can't think of a better way to do it.</p>
"
"23583314","<p>I have a good solution without subscript...</p>

<pre><code>public class test{

   int counter=0;int last;
    public static void main(String[] args){
        test t1=new test(); //object of test
        String line=""This is a working code""; //line in which char to be counted
        char c='q'; // char to be counted
        t1.last=line.length()-1;  //setting last
        System.out.println(""In sentence: ""+line);
        if(t1.count(line, c)!=-1)
        System.out.println(""The character ""+c+"" is ""+t1.counter+"" times""); //printing result
        else
        System.out.println(""The character ""+c+"" is not found"");
    }
    public int count (String line, char c){
        if (last&lt;0){   // case for empty string or nil char.
            return counter;                     // recursion ends here and return counted
        }
        else if(line.charAt(last)==c)
        {
            counter++;  //counting
        }
        last--;  //shitin last;
        count(line, c);
        return -1;  //if even a single times is not found then return -1;
      }
}
</code></pre>

<p>It may help you...You may take line and char which is to be searched as input from Command prompt......Thank you....</p>
"
"23585939","<p>You can now develop utility method that operates with <code>JPanel</code>s. Let's call it <code>foo(JPanel p)</code>. </p>

<p>Now you can use it with any <code>JPanel</code> including <code>MyPanel</code>.  But why? You can define the method as following: <code>foo(MyPanel p)</code> and use it with <code>MyPanel</code> until you develop second panel that it called <code>OtherPanel</code>. You cannot send this <code>OtherPanel</code> to <code>foo()</code> that operates with <code>MyPanel</code> only.</p>

<p>However the first (general) version of <code>foo()</code> can be used for both and for any other class that extends <code>JPanel</code> and developed by you, by me or by any other programmer. </p>

<p>I hope that this simple example is enough to understand the need of generalization. </p>
"
"23484181","<p>Please read the following article on ""Escape Sequences"".</p>

<p><a href=""http://en.wikipedia.org/wiki/Escape_sequences_in_C"" rel=""nofollow"">http://en.wikipedia.org/wiki/Escape_sequences_in_C</a></p>

<p>Here is a small method in Java:</p>

<pre><code>private boolean equalsDoubleQuote(String string)    
{
    /*
     *  The compiler will not be able to read three double-quote characters in 
     *    align.
     *  In this case, you use a the back-slash character.
     *  It will 'escape' the character after it, allowing the compiler to
     *    read it properly
     */
    return string.equals(""\"""");
}
</code></pre>

<p>I'm not sure why I was down voted, but here is a poor comparison, bare with me.  The following encapsulation will not work because the compiler will find the first <code>*/</code> and stop the block comment there, expecting the following the text to be code.</p>

<p>This is obviously not the best comparison (because you cannot escape a string, <code>*/</code>).  The concept should be clear though.</p>

<pre><code>void example()
{
    /*
     * 
     * What does the compiler do when I place
     * 
     *         a */ right here 
     *   
     */
}
</code></pre>
"
"23626389","<p>There is one more way, i got the same situation in my project.
i solved this way</p>

<p><code>List&lt;Object[]&gt; list = HQL.list();</code></p>

<p>In above hibernate query language i know at which place what are my objects so what i did is :</p>

<pre><code>for(Object[] obj : list){
String val = String.valueOf(obj[1]);
int code =Integer.parseint(String.valueof(obj[0]));
}
</code></pre>

<p>this way you can get the mixed objects with ease, but you should know in advance at which place what value you are getting or you can just check by printing the values to know.
sorry for the bad english
I hope this help</p>
"
"23360848","<p>use reflection api to get all <code>public static final String</code> fields from MyStrings.class into an array, called strings</p>

<p>then randomly generate an integer n from 0 to numStrings - 1, </p>

<p>random string is strings[n]</p>
"
"23634109","<p>Try Guava's <a href=""http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/base/Objects.html#hashCode%28java.lang.Object...%29"" rel=""nofollow""><code>hashCode()</code></a> method or JDK7's <a href=""http://docs.oracle.com/javase/7/docs/api/java/util/Objects.html#hash%28java.lang.Object...%29"" rel=""nofollow""><code>Objects.hash()</code></a>. It's way better than writing your own. Don't repeat code yourself (and anyone else when you can use out of box solution):</p>
"
"23739618","<p>The <code>dispose</code> command is from the AWT Bundle, and this may cause problems, as you are attempting to ""close"" a swing window with an AWT command. </p>

<p>You can close the window with this command:</p>

<pre><code>windowName.setVisable(false);
</code></pre>

<p><code>windowName</code> is the name of the object representing the window. If you are extending a class, and have no object, you can use <code>this</code></p>

<p>More Information on the Dispose Method:
""In general java.awt.Window.dispose() is used on a GUI component that is
a subclass of Window, in order for that specific GUI Window object (and
its children) to properly release and destroy native UI resources (such
as the screen). Garbage collection (and the eventual exiting of the
entire VM) may happen as a result of dispose(), but is not directly
connected with the dispose() call itself."" <em>From: <a href=""https://www.java.net/node/684412"" rel=""nofollow"">https://www.java.net/node/684412</a></em></p>
"
"23517195","<p>You cant access variables in declared inside other methods.</p>

<p>To make it work, you would have to do this:</p>

<pre><code>public class TrialArray
{
    int[][] dataStorage;

    public static void main(String [] args)
    {
        dataStorage = new int[5][5];
        arrayTest();
        arrayTest2(dataStorage);
    }

    public static void arrayTest()
    {

        dataStorage[1][2] = 1;

        System.out.printf(""THIS PART WORKS"");
    }

    public static void arrayTest2(int[][] dataStorage)
    {
        dataStorage[2][2] = 3;

        System.out.printf(""THIS DOESNT"");
    }
} 
</code></pre>
"
"23790592","<p>I found the answer out. This is how I would validate the account number's.</p>

<pre><code>int number;
    while(true){
        System.out.print(""\nEnter account number: "");
        try{
            number = input.nextInt();
            break;
        }catch(Exception e){
               System.err.println(""Error: Invalid Entry! Please try only Integers"");
                input=new Scanner(System.in);
        }
    }
</code></pre>

<p>and this is how I would validate the menu item selected is a number and not a letter:</p>

<pre><code>int choice = 0;

    do {
        while(true)
        {
            System.out.println(""1. Deposit money"");
            System.out.println(""2. Withdraw money"");
            System.out.println(""3. Check balance"");
            System.out.println(""4. Create new account"");
            System.out.print(""Your choice, 0 to quit: "");
            try{

            choice = Integer.parseInt(input.next());
            break;
            }
            catch(Exception e){
                System.err.println(""Error: Invalid entry! Please Try Again!"");
                input=new Scanner(System.in);
                continue;
            }
    }
</code></pre>
"
"23431680","<pre><code>public class PrimeNumber {

public static void main(String[] args) {
    // TODO Auto-generated method stub
    ArrayList a = new ArrayList();
    for (int i = 1; i &lt;= 100; ++i) {
        if (isPrime(i))
            a.add(i);
    }
    System.out.println(""List : "" + a);

}

public static boolean isPrime(int value) {
    if (value &lt;= 1)
        return false;


    if ((value % 2) == 0)
        return (value == 2);

    for (int i = 3; i &lt;= value - 1; i++) {
        if (value % i == 0) {
            return false;             
        }
    }     

    return true;
}

}
</code></pre>
"
"23468045","<p>Let's take example from page <a href=""http://www.w3schools.com/html/html_tables.asp"" rel=""nofollow"">http://www.w3schools.com/html/html_tables.asp</a></p>

<p>Here is javascript code for getting rows in table (It included heading row also)</p>

<pre><code>document.getElementsByClassName('reference')[0].getElementsByTagName('tr').length
</code></pre>

<p>To run the javascript from web driver use </p>

<pre><code>(String) ((JavascriptExecutor) driver).executeScript(""document.getElementsByClassName('reference')[0].getElementsByTagName('tr').length"");
</code></pre>

<p>Hope this helps.</p>
"
"23684012","<p>try this code to generate a race condition</p>

<pre><code>// This class exposes a publicly accessible counter
// to help demonstrate data race problem
class Counter {
    public static long count = 0;
}

// This class implements Runnable interface
// Its run method increments the counter three times
class UseCounter implements Runnable {
    public void increment() {
        // increments the counter and prints the value
        // of the counter shared between threads
        Counter.count++;
        System.out.print(Counter.count + "" "");
    }

    public void run() {
        increment();
        increment();
        increment();
    }
}

// This class creates three threads
public class DataRace {
    public static void main(String args[]) {
        UseCounter c = new UseCounter();
        Thread t1 = new Thread(c);
        Thread t2 = new Thread(c);
        Thread t3 = new Thread(c);
        t1.start();
        t2.start();
        t3.start();
    }
}
</code></pre>

<p>and try this code to fix it</p>

<pre><code>public void increment() {
    // increments the counter and prints the value
    // of the counter shared between threads
    synchronized(this){
        Counter.count++;
        System.out.print(Counter.count + "" "");
    }
}
</code></pre>

<p>this code snippet is from the book ""Oracle Certified Professional Java SE 7 Programmer Exams 1Z0-804 and 1Z0-805"" written by SG Ganesh, Tushar Sharma</p>
"
"23885827","<p>The syntax is defined the way it is (and many answers have pointed to <a href=""http://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.4"" rel=""nofollow"">its definition</a>) to:</p>

<ol>
<li>ensure that the Java compiler (and other simpler code analysis tools) can unambiguously and quickly interpret your declaration.</li>
<li>ensure that this will be true even as the language develops later on.</li>
</ol>

<p>Imagine that we lived in a world where the <code>static</code> keyword wasn't invented yet, and when reorderings like the one that currently gives a syntax error are valid. Then, arguably, <code>static</code> might be a valid name for a Java type (like <code>int</code> or <code>String</code>). So when some genius eventually invents the keyword <code>static</code>, a declaration like:</p>

<pre><code>MyType static Foo() {
    ...
}
</code></pre>

<p>might be ambiguous: is <code>static</code> the type or the keyword? By requiring the return type to immediately precede the name of the function, the language is more <em>future-proof</em>. Java language extensions can continue to invent keywords, knowing that they'll be safe to be inserted before the return type in the declaration.</p>
"
"23700662","<pre><code>String ALL_ABRBREVIATIONS = ...; // all possible

public boolean isValid(String toCheck) {
  return ALL_ABRBREVIATIONS.contains(toCheck);
}
</code></pre>
"
"23716953","<p>To solve the problem , we must add in the pom.xml all of the following elements :</p>

<pre><code>&lt;plugin&gt;
    &lt;groupId&gt;org.eclipse.m2e&lt;/groupId&gt;
    &lt;artifactId&gt;lifecycle-mapping&lt;/artifactId&gt;
    &lt;version&gt;1.0.0&lt;/version&gt;
&lt;/plugin&gt;
</code></pre>

<p>Here is the final pom xml :</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd""&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
    &lt;groupId&gt;testMyc&lt;/groupId&gt;
    &lt;artifactId&gt;srgfrzfd&lt;/artifactId&gt;
    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
    &lt;packaging&gt;apk&lt;/packaging&gt;
    &lt;name&gt;srgfrzfd&lt;/name&gt;

    &lt;properties&gt;
        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
        &lt;platform.version&gt; 4.1.1.4
            &lt;/platform.version&gt;
        &lt;android.plugin.version&gt;3.8.2&lt;/android.plugin.version&gt;
    &lt;/properties&gt;

    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;com.google.android&lt;/groupId&gt;
            &lt;artifactId&gt;android&lt;/artifactId&gt;
            &lt;version&gt;${platform.version}&lt;/version&gt;
            &lt;scope&gt;provided&lt;/scope&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;
    &lt;build&gt;
        &lt;finalName&gt;${project.artifactId}&lt;/finalName&gt;
        &lt;pluginManagement&gt;
            &lt;plugins&gt;
                &lt;plugin&gt;
                    &lt;groupId&gt;com.jayway.maven.plugins.android.generation2&lt;/groupId&gt;
                    &lt;artifactId&gt;android-maven-plugin&lt;/artifactId&gt;
                    &lt;version&gt;${android.plugin.version}&lt;/version&gt;
                    &lt;extensions&gt;true&lt;/extensions&gt;
                &lt;/plugin&gt;
            &lt;/plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;org.eclipse.m2e&lt;/groupId&gt;
                &lt;artifactId&gt;lifecycle-mapping&lt;/artifactId&gt;
                &lt;version&gt;1.0.0&lt;/version&gt;
            &lt;/plugin&gt;
        &lt;/pluginManagement&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;groupId&gt;com.jayway.maven.plugins.android.generation2&lt;/groupId&gt;
                &lt;artifactId&gt;android-maven-plugin&lt;/artifactId&gt;
                &lt;configuration&gt;
                    &lt;sdk&gt;
                        &lt;platform&gt;16&lt;/platform&gt;
                    &lt;/sdk&gt;
                &lt;/configuration&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/build&gt;
&lt;/project&gt;
</code></pre>

<p>and the following tag in the ""lifecycle-mapping-metadata.xml"" file that is in the ""Windows"" > and preferably maven > lifecycle mapping > "" Open workspace lifecycle mapping metadata "" eclipse menu</p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;lifecycleMappingMetadata&gt;
    &lt;pluginExecutions&gt;
        &lt;pluginExecution&gt;
            &lt;pluginExecutionFilter&gt;
                &lt;groupId&gt;com.jayway.maven.plugins.android.generation2&lt;/groupId&gt;
                &lt;artifactId&gt;android-maven-plugin&lt;/artifactId&gt;
                &lt;versionRange&gt;[1.0.0,)&lt;/versionRange&gt;
                &lt;goals&gt;
                    &lt;goal&gt;consume-aar&lt;/goal&gt;
                &lt;/goals&gt;
            &lt;/pluginExecutionFilter&gt;
            &lt;action&gt;
                &lt;ignore /&gt;
            &lt;/action&gt;
        &lt;/pluginExecution&gt;
    &lt;/pluginExecutions&gt;
&lt;/lifecycleMappingMetadata&gt;
</code></pre>

<p>Save the file in your workspace in use .</p>

<p>Answer supplied set by myc1986</p>
"
"23532819","<pre><code>public static void main(String[] args){

    for(int i=5;i&gt;=1;i--){
            int otherSide = 10-i;
            int printStar = -1;     
        for(int j=1;j&lt;=9;j++){

            if(j&gt;=i &amp;&amp; j&lt;=otherSide){
                printStar*=-1;
                if(printStar==1) System.out.print(""*"");
                else System.out.print(""-"");
            }
            else
                System.out.print(""-"");
        }
        System.out.println("""");
    }

}
</code></pre>

<p>Just find the start index of the * and the part where it is last printed. Print stars alternatingly inside the range.</p>
"
"23534017","<pre><code>#include&lt;iostream&gt;
#include&lt;cstdlib&gt;
#include&lt;cstdio&gt;

#define FORN(i,n) for(i=0;i&lt;n;i++)
#define FOR1N(i,n) for(i=1;i&lt;=n;i++)
#define IFELSE(c, s, o) if(c) s else o 

using namespace std;

void print_pattern(int n)
{
    int i,k=n;
    char *stars = new char[2*n];
    char *dots = new char[k];
    FOR1N(i, 2*n) 
        IFELSE(i%2 == 0, stars[i-1]='.';, stars[i-1] = '*';);
    FORN(i, k) 
        dots[i] = '.';
    FOR1N(i, 2*n)
        IFELSE(i%2!=0, 
                printf(""%.*s%.*s%.*s\n"", k--, dots, i, stars,
                        k&gt;=0 ? k : 0, dots); , ;);
}

int main()
{
    print_pattern(5);
    system(""pause"");
    return 0;
}
</code></pre>

<p>Here's a solution to your problem written in C++ with lots of macros. Initially you find it too complicate to understand. But later on you'll discover that this code is <code>fun</code> to <code>debug</code> (well sort-of).</p>

<p>On a closing note, if you have just completed your CS101 course then I would recommend you to read Beautiful Code by Andy Oram &amp; Greg Wilson.
The book put in place pointers that answer why this code is bad. And why this code requires a unit tests and refactoring in iterations. As this code is a prime example of a legacy codebase.</p>
"
"23926723","<p>I just quickly went through your code and it seems that the problem is in your variable <code>len</code>. See the statement <code>int len=word.length();</code> on line 68. In fact it should be <code>int len=word.length()-1;</code> because the array index starts from <code>0</code>. I have not tested it, but you can give it a try.</p>
"
"23754047","<pre><code>class Animal {
  void eat() {
    System.out.println(""animal : eat"");
  }
}

class Dog extends Animal {
  void eat() {
    System.out.println(""dog : eat"");
  }
  void anotherEat() {
    super.eat();
  }
}

public class Test {
  public static void main(String[] args) {
    Animal a = new Animal();
    a.eat();
    Dog d = new Dog();
    d.eat();
    d.anotherEat();
  }
</code></pre>

<p>}</p>

<p>The output is going to be</p>

<p>animal : eat
dog : eat
animal : eat</p>

<p>The third line is printing ""animal:eat"" because we are calling super.eat(). If we called this.eat(), it would have printed as ""dog:eat"".</p>
"
"23754309","<p>maybe something like this?</p>

<pre><code>int size = 0;
try{
    while(true){
        list.get(size);
        size++;
    }
} catch(IndexOutOfBoundException e){
}
</code></pre>

<p>if you will go out of bound, exception will be thrown and you will get your size without any .size() .length</p>
"
"23593825","<p>if you don't need to add more methods of fields to your ""Ball"" , I think that this is the best way to do it:</p>

<pre><code>Toy ball = new Toy(price,minaAge,maxAge,size);
</code></pre>

<p>you are using a powerful weapon as inheritance for a nobrainer , it's like using an army to kill a mosquito</p>
"
"23795053","<p>I have not used hibernate in dropwizard, but I have used Guice and you really only need to worry about MyAppModule. That's where the magic will happen:</p>

<pre><code>public class MyAppModule extends AbstractModule {

    @Singleton
    @Provides
    public SessionFactory provideSessionFactory(MyAppConfiguration configuration) {
        HibernateBundle&lt;MyAppConfiguration&gt; hibernate = new HibernateBundle&lt;ExampleConfiguration&gt;(MyModel.class) {
            @Override
            public DataSourceFactory getDataSourceFactory(MyAppConfiguration configuration) {
                return configuration.getDataSourceFactory();
            }
        }

        return hibernate.getSessionFactory();
    }
}
</code></pre>

<p>(see <a href=""https://groups.google.com/forum/#!msg/dropwizard-user/wkG8QtBypAg/zeMfMSZkwYkJ"" rel=""nofollow"" title=""here"">here</a> for multiple Classes)</p>

<p>MyAppConfiguration.java and MyApplication.java should not have any of the hibernate bundle references in. You should then be able to @Inject a SessionFactory where ever you need it.</p>
"
"23615861","<p>Use <code>Course.courseName</code>, u will be able to access the other class variable. Hope it helps. Thanks.</p>
"
"23976505","<p>If the function does just that then simply write return false within the loop when you find your match and at the end outside your loop write  return true.  If function has additional activities to perform aftr this check, then create a boolean variable with default value true before your loop, set the boolean variable to false within loop when it matches and add a break statement. 
E.g.</p>

<pre><code>boolean Nomatch = true;
for(int i=0;i&lt;10;i++) {
 if(i==5) {
     Nomatch = false;
     break;
 }
 }
</code></pre>
"
"23823209","<p>I'm giving the same answer again. It's spectacular how many people is not using Content Providers.</p>

<p>In your situation you have a network operation, holding data in memory is not very effective way to approach your problem. You should persist data to local SQLite database after you receive it. An your list view should observe that data, and show it. Luckily there is <code>ContentProvider</code>s and <code>CursorAdapter</code>s for that. In documentation it says you don't need a <code>ContentProvider</code> and it's correct to some extent but you can add a notification URI to your cursor.</p>

<p>What you should do is load your <code>Cursor</code> from SQLite database using a <code>CursorLoader</code>, and use your <code>ListView</code> with a <code>CursorAdapter</code>. On your SQLite helper you should set a notification URI for data and register a <code>ContentObserver</code> to force load that data. Your adapter will get new cursor after every change on underlying data. You'll be happy like a puppy.</p>
"
"23637530","<p>Do-while has generally better performance characteristics if the loop body <em>must</em> execute <em>at least</em> once. If you reformulate a do-while into a while/for, you add an extra evaluation of the loop exit condition.</p>

<p>Also, do-while(false) is usable as a structured alternative for deeply nested if conditions:</p>

<pre><code>do {
   if (!condition1)
       break;
   if (!condition2)
       break;
   if (!conditionN)
       break;
   // do something
} while (false);
</code></pre>

<p>instead of:</p>

<pre><code>if (condition1) {
    if (condition2) {
        if (conditionN) {
            // do something
        }
    }
}
</code></pre>
"
"23831094","<p>The right way to create a random integer i is:   </p>

<pre><code>Double d = Math.random()*100;
int i = d.intValue();
</code></pre>
"
"23996423","<p>Look into opening files, reading them as characters. You actually just need to get a char from each, then check if they match. If they match, then increment the total counter and the match counter. If they don't, only the total counter.</p>

<p>Read more on handling files and streams here: <a href=""http://docs.oracle.com/javase/tutorial/essential/io/charstreams.html"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/essential/io/charstreams.html</a></p>

<p>An example would be this:</p>

<pre><code>     BufferedReader br1 = null;
     BufferedReader br2 = null;
     try
     {
        br1 = new BufferedReader(new InputStreamReader(new FileInputStream(new File(""a.txt"")), ""UTF-8""));
        br2 = new BufferedReader(new InputStreamReader(new FileInputStream(new File(""b.txt"")), ""UTF-8""));           
        //add logic here
     }
     catch (Exception e)
     {
        e.printStackTrace();
     }
     finally
     {
        if (br1 != null)
        {
           try
           {
              br1.close();
           }
           catch (Exception e)
           {
           }
        }
        if (br2 != null)
        {
           try
           {
              br2.close();
           }
           catch (Exception e)
           {
           }
        }
     }
</code></pre>
"
"23889832","<pre><code>public class barbershop {
    Queue WaitSeat ;
    Queue WaitRoom ;
    static barber [] bb ;
    static customer [] cc;
    barbershop(){
        WaitSeat = new PriorityQueue(4);
        WaitRoom = new PriorityQueue(13);
        bb = new barber[3];

        for(i=0;i&lt;100;i++)
        {
          cc[i] = new customer (i); 
        }

    }

}
</code></pre>
"
"23775386","<pre><code>public boolean prefixAgain(String str, int n) {
    String pre = str.substring(0, n);

    for (int i=n; i&lt;str.length()-n+1; i++)
    {
        if (str.substring(i, i+n).equals(pre))
           return true;
    }

    return false;
}
</code></pre>
"
"23944917","<p><a href=""http://docs.oracle.com/javase/7/docs/api/java/io/ObjectInputStream.html#read%28byte%5B%5D,%20int,%20int%29"" rel=""nofollow"">ObjectInputStream#read</a> doesn't guarantee it'll read the buffer.length() number of bytes.  When the read occurs on the edge of the current read ahead buffer block, it'll only return number of bytes remaining in the buffer.  It should be written this way.</p>

<pre><code>        int offset=0;
        while(offset&lt;length) {
            int cnt=ois.read(bytes,offset, length-offset); // key string bytes
            offset+=cnt;
        }
</code></pre>
"
"23808458","<p>You can use the below code get the synchronized map with class level lock.</p>

<p><strong>Map aSynchronizedMap = Collections.synchronizedMap(new HashMap());</strong></p>

<pre><code>class SomeClass {
    private Map&lt;String, String&gt; someMap = null;

    public String getValue(String key) {
        if (someMap == null) {
            synchronized (SomeClass.class) {

                  someMap  = Collections.synchronizedMap(new HashMap&lt;String, String&gt;());
                // initialize the map contents by loading some data from the database.
                // possible for the map to be empty after this.
            }
        }
        return someMap.get(key);  // the key might not exist even after initialization
    }
}
</code></pre>
"
"23819217","<p>For the first problem, I'll give you two approaches (1. is recommended):</p>

<ol>
<li><p>Use the <a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#split%28java.lang.String%29"" rel=""nofollow""><code>String.split</code></a> method to split the words up into an <em>array</em> of words, where each element is a word. Instead of one string containing all of the words, such as <code>""hello my name is Michael""</code>, it will create an array of the words, like so <code>[hello, my, name, is, Michael]</code> and that way you can use the array to access the words. Very easy:</p>

<pre><code>public static String word(int num, String words)
{
    // split words string into array by the spaces
    String[] wordArray = words.split("" ""); // or = words.split(""\\s+"");

    // if the number is within the range
    if (num &gt; 0 &amp;&amp; num &lt;= wordArray.length) {
        return wordArray[num - 1]; // return the word from the word array
    } else { // the number is not within the range of words
        return null;
    }
}
</code></pre></li>
<li><p><strong>Only use this if you cannot use arrays!</strong> Loop through the word until you have found enough spaces to match the word you want to find:</p>

<pre><code>public static String word(int num, String words)
{
    for (int i = 0; i &lt; words.length(); i++) { // every character in words
        if (words.substring(i, i+1).equals("" "")) { // if word is a space
            num = num - 1; // you've found the next word, so subtract 1 (number of words left is remaining)
        }
        if (num == 1) { // found all words
            // return this word
            int lastIndex = i+1;
            while (lastIndex &lt; words.length()) { // until end of words string
                if (words.substring(lastIndex, lastIndex+1).equals("" "")) {
                    break;
                }
                lastIndex = lastIndex + 1; // not a space so keep moving along the word
            }
            /*
            // or you could use this to find the last index:
            int lastIndex = words.indexOf("" "", i + 1); // next space after i+1
            if (lastIndex == -1) { // couldn't find another space
                lastIndex = words.length(); // so just make it the last letter in words
            }*/
            if (words.substring(i, i+1).equals("" "")) { // not the first word
                return words.substring(i+1, lastIndex);
            } else {
                return words.substring(i, lastIndex);
            }
        }
    }
    return null; // didn't find word
}
</code></pre></li>
</ol>

<p>As for the second problem, just iterate <em>backwards</em> through the string and add each letter to a new string. You add each letter from the original string to a new string, but just back to front. And you can use <a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#toUpperCase%28%29"" rel=""nofollow""><code>String.toUpperCase()</code></a> to convert the string to upper case. Something like this:</p>

<pre><code>public static String reverse(String str) {
    String reversedString = """"; // this will be the reversed string

    // for every character started at the END of the string
    for (int i = str.length() - 1; i &gt; -1; i--) {
        // add it to the reverse string
        reversedString += str.substring(i, i+1);
    }
    return reversedString.toUpperCase(); // return it in upper case
}
</code></pre>
"
"24022392","<p>add <code>android:name=""android.permission.READ_PHONE_STATE""</code> to your manifest</p>

<pre><code>TelephonyManager telephonyManager = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);    
String id = telephonyManager.getDeviceId();
</code></pre>
"
"24022463","<p>If u want to get android_id , u can use </p>

<pre><code> private String getAndroidID() {
            String androidId = Settings.Secure.getString(getContentResolver(),Settings.Secure.ANDROID_ID);
            return androidId;
        }
</code></pre>

<p>In case u want device id , u can use </p>

<pre><code>private TelephonyManager getTelephonyManager() {
        TelephonyManager telephonyManager = ( TelephonyManager )getSystemService( Context.TELEPHONY_SERVICE );
        return telephonyManager;
    }

private String getIMEIStringOfDevice() {
       String imeiString = getTelephonyManager().getDeviceId(); 
        return imeiString;
    } 
</code></pre>
"
"23826840","<p>There is no difference.
<code>a=a+10</code>; is better to use as it good to read and maintain the code.</p>
"
"23828990","<p>You would want to import the scanner and add the code to the second file. Then you can use <code>radius</code> as argument to the Circle constructor instead of just 3.</p>
"
"24216213","<p>The reason why you don't see the lower numbers is because by the time it starts writing to the output it is already past the range of int, some due to ABCD analysis / JIT some due to the slow nature of Java...</p>

<p><a href=""http://reverseblade.blogspot.com/2009/02/c-versus-c-versus-java-performance.html"" rel=""nofollow"">http://reverseblade.blogspot.com/2009/02/c-versus-c-versus-java-performance.html</a> </p>

<p>I bet if you added a memory barrier or call to  'sleep' or declare the int as <code>volatile</code> you would see more numbers in the lower range.</p>
"
"24076685","<p>The problem has nothing to do with AsyncTask, the condition has a syntax error and will show it anywhere you put it.</p>

<pre><code>if(lat&amp;&amp;lng!= null)
</code></pre>

<p>lat is not a boolean, and as such can not be evaluated inside an if, I guess what you want is:</p>

<pre><code>if (lat!=null &amp;&amp; lng!=null)
</code></pre>
"
"24114108","<p>I think you could do something like:</p>

<pre><code>String name = ""Rafael"";    
String lastname = "" Nunes"";    
String fullname = name + lastname;
</code></pre>

<p><a href=""https://ideone.com/IdVI6m"" rel=""nofollow"">Here</a> you can see the string concatenation working, and you can often visit the Java documentation.</p>
"
"24115804","<p>Please see <a href=""http://java.dzone.com/articles/how-debug-remote-java-applicat"" rel=""nofollow"">http://java.dzone.com/articles/how-debug-remote-java-applicat</a> to enable the remote debugging. 
If you are using tomcat to run your application, start tomcat with remote debug parameters
or you can start tomcat with JPDA support by using following command.</p>

<p>Windows</p>

<pre><code>&lt;tomcat bin dir&gt;/startup.bat jpda
</code></pre>

<p>*nix</p>

<pre><code>&lt;tomcat bin dir&gt;/startup.sh jpda
</code></pre>

<p>this will enable remote debugging on port 8000</p>
"
"24118788","<pre><code>Caused by: java.net.SocketTimeoutException: connect timed out
</code></pre>

<p>When you are not able to connect due to unavailability of the peer. 
Your second query, what about read? Than you will get </p>

<pre><code> Caused by: java.net.SocketTimeoutException: Read timed out
</code></pre>

<p>Third possibility <code>connection refused</code> if peer is active but refused the connection.</p>
"
"24188179","<blockquote>
  <p>...why the equals method on the generic T is assuming it's a Long.</p>
</blockquote>

<p>The reason is simple: Assuming the matrix you're testing with is of type <code>Matrix&lt;Long&gt;</code>, then <code>t1</code> <em>is</em> an instance of <code>Long</code> (the generic type just allows you to use <code>Long</code> here and has no relevance at runtime) and thus <code>Long.equals()</code> would be called.</p>

<p>In the following case <code>Integer.equals()</code> should be called:</p>

<pre><code>Matrix&lt;Integer&gt; m1 = ...;
Matrix&lt;Long&gt; m2 = ...;

m1.equals( m2 ); 
</code></pre>

<p>Since members of m1 are of type Integer, the call <code>t1.equals(t2)</code> would have the signature <code>Integer.equals(Long)</code>.</p>

<p>So what could you do to be able to get two matrices of different types but with equal values to be equal?</p>

<p>The general problem  would be that you should use <code>compareTo()</code> to check for value equality (since in some cases like <code>BigDecimal</code> mathematically equal values like 2.0 and 2.00 would not result in <code>equals()</code> returing true.</p>

<p>Unfortunately using <code>T extends Number &amp; Comparable&lt;T&gt;</code> would not be an option (see the comments for reference, as well as here: <a href=""http://stackoverflow.com/questions/480632/why-doesnt-java-lang-number-implement-comparable"">Why doesn&#39;t java.lang.Number implement Comparable?</a>), because you would not be able to call <code>Long.compareTo(Integer)</code> that way.</p>

<p>Thus you'd either have to fall back to primitive values and distinguish between integer and floating point values (thus calling <code>t1.longValue()</code> <em>or</em> <code>t1.doubleValue()</code>) or use a <code>Comparator&lt;Number&gt;</code> whose implementation of <code>compareTo(Number lhs, Number rhs)</code> would handle that. (There should be ready to use <code>Comparators</code> like this: <a href=""http://www.jidesoft.com/javadoc/com/jidesoft/comparator/NumberComparator.html"" rel=""nofollow"">http://www.jidesoft.com/javadoc/com/jidesoft/comparator/NumberComparator.html</a>).</p>

<p>If you want to support larger numbers like <code>BigInteger</code> and <code>BigDecimal</code> you could also consider using <code>BigDecimal</code> and create an instance for every value. This should result in some flexibility but would also incur some performance cost. (Disclaimer: this is just an untested idea so don't just take it as is, it is just meant to provide some input for your own thought process).</p>
"
"24201115","<p>Extend TreeMap create your own map class, In this class provide your way to sort the Map objects, for your string comparisons you can pass the Comparator with your custom logic to TreeMap class.</p>

<pre><code>http://docs.oracle.com/javase/7/docs/api/java/util/TreeMap.html
</code></pre>

<p>This way all the functionality of the Map will be available to you and you can also implement your own logic of sorting.</p>
"
"24069428","<p>You never mention your tranaction manager. You will need to either define a transaction manager in your application context xml...</p>

<pre><code>&lt;bean id=""txManager""
     class=""org.springframework.jdbc.datasource.DataSourceTransactionManager""&gt;

    &lt;property name=""dataSource"" ref=""dataSource""/&gt;
&lt;/bean&gt;
</code></pre>

<p>OR as an annotated declaration on your Bean Configuration class...</p>

<pre><code>@Configuration
@EnableTransactionManagement()
public class MyConfiguration {...}
</code></pre>
"
"24080055","<p>You have to use <a href=""http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/atomic/AtomicInteger.html"" rel=""nofollow"">AtomicInteger</a> instead:</p>

<pre><code>public static void main()
{
   AtomicInteger n = new AtomicInteger(5);
   add(n);
}

static void add(AtomicInteger n)
{
   n.addAndGet(1);
}
</code></pre>
"
"24080145","<p>Well as you have already said, use a return value!</p>

<pre><code>int add(int x){
    return x++;
}
</code></pre>

<p>Or you can use something like below ! See the code below:<br/></p>

<pre><code>public class test {

    public static void main(String args[]) {
        int x=10;
        System.out.println(""X is: "" + x);
        StringBuilder xStringBuilder = new StringBuilder(Integer.toString(x));
        add(xStringBuilder);
        x=Integer.parseInt(xStringBuilder.toString());
        System.out.println(""X is: "" + x);
    }

    private static void add(StringBuilder x) {
        int val = Integer.parseInt(x.toString());
        val++;
        x.delete(0, x.length());
        x.append(Integer.toString(val));
    }
}
</code></pre>

<p>Well this is a really bad practice! Well I am assuming this is a trick question!! :D<br/>
Also, you can use static variable!! This will be used at times...</p>

<pre><code>public class test {
    private static int x=10;
    public static void main(String args[]) {
        System.out.println(""X is: "" + x);
        add();
        System.out.println(""X is: "" + x);
    }

    private static void add() {
        x = x+1;
        System.out.println(""X is: "" + x);
    }

}
</code></pre>

<p>Remember to not pass x as argument to add function, the value will be updated inside function but outside it will be the same.<br/>
All are tricks , sometimes asked in interview. Hope this helps you.</p>
"
"24111376","<p>The problem with recursion is that to understand recursion you must first understand recursion.</p>

<p>A recursive function is a function which calls itself, or calls a function which ultimately calls the first function again.</p>

<p>You have the recursion part right, since your function calls itself, and you have an ""escape"" clause so you don't get infinite recursion (a reason for the function not to call itself).</p>

<p>What you are lacking from your example though is the actual operation you are performing.</p>

<p>Also, instead of passing a counter, you need to pass your counter and the value you are multiplying, and then you need to return said multiplied value.</p>

<pre><code>public static long recFact(int n, long val)
{
    if(n==1)
    {
        return val;
    }
    else
    {
        return recFact(n-1, val) * n;
    }
}
</code></pre>
"
"24300285","<p>You probably want to use <strong>split()</strong></p>

<p>Like this:</p>

<pre><code>String[] array = ""test01,test02,test03,exceptional,case,test04"".split("","");
</code></pre>
"
"24396693","<p>While in this case, suresh has a point about it doing an object comparison, even using two <code>double</code>s would give you false.</p>

<p>Floating point numbers (<code>float</code> and <code>double</code>) are <a href=""http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html"" rel=""nofollow"">stored as a mathematical expression</a>.  Converting a <code>double</code> to a <code>String</code> will truncate it.  So, the new double after converting it back will not have the same value as the original.</p>
"
"24147401","<p>If there are multiple space between two words use this:</p>

<blockquote>
  <p><code>text.split(""\\s+"");</code></p>
</blockquote>

<p>if input is </p>

<blockquote>
  <p><code>5  10 15</code></p>
</blockquote>

<p>then the output will be </p>

<blockquote>
  <p><code>""5"",""10"",""15""</code></p>
</blockquote>
"
"24469868","<p>You need to tyecast.</p>

<pre><code>System.out.println((FrequentPatternMiner )fpMiner);
</code></pre>

<p>Else how would the client know class of the Object that is being deserialized. Note it is not necessary to typecast just for using it in <code>sysout</code>. It will print using Objects <code>toString()</code> method.</p>

<p>Though your Exception says </p>

<pre><code>Exception in thread ""main"" java.lang.ClassNotFoundException
</code></pre>

<p>You need to add this class on the client side too. Lastly check that <code>serialVersionUID</code> is same for the class in server and client. </p>
"
"24241136","<p>If your task is not so big, you can use <code>Thread.sleep()</code> method(example 10 iteration with 10 minutes delay):</p>

<pre><code>public static void main(String[] args) throws InterruptedException {
   methodOne();

   for (int i = 0; i &lt; 10; i++) {
     Thread.sleep(600000);
     methodTwo();
   }
}
</code></pre>
"
"24400636","<p>If you prefer using java library, i suggest using <a href=""http://www.aspose.com/java/excel-component.aspx"" rel=""nofollow"">Aspose.Cell</a>. But you must pay start from $999.</p>

<p>Another alternatives is using <strong>libreoffice</strong> command line utility, for reading xlsb file, you must convert it first to csv. From terminal :</p>

<pre><code>libreoffice --headless --convert-to csv your_csv_file.csv --outdir /path/csv
</code></pre>

<p>And for convert encoding using UTF-8:</p>

<pre><code>iconv -f ISO-8859-1 -t UTF-8 your_csv_file.csv &gt; new_file_csv.csv
</code></pre>

<p>that was the best way solution i found so far if you cant call microsoft office native feature for handling XLSB file.</p>
"
"24382000","<p>Answer reference 
<a href=""http://www.tutorialspoint.com/java/util/linkedlist_remove_object.htm"" rel=""nofollow"">http://www.tutorialspoint.com/java/util/linkedlist_remove_object.htm</a></p>

<p>Description
The java.util.LinkedList.remove(Object o) method removes the first occurrence of the specified element from this list, if it is present. If this list does not contain the element, it is unchanged.</p>

<p>Declaration
Following is the declaration for java.util.LinkedList.remove() method</p>

<p>public boolean remove(Object o)
Parameters
o -- element to be removed from this list, if present</p>

<p>Return Value
This method returns true if this list contained the specified element</p>

<p>Exception
NA</p>

<p>Example
The following example shows the usage of java.util.LinkedList.remove() method.</p>

<p>package com.tutorialspoint;</p>

<p>import java.util.*;</p>

<p>public class LinkedListDemo {</p>

<p>public static void main(String[] args) {</p>

<pre><code>  // create a LinkedList
  LinkedList list = new LinkedList();

  // add some elements
  list.add(""Hello"");
  list.add(2);
  list.add(""Chocolate"");
  list.add(""10"");

  // print the list
  System.out.println(""LinkedList:"" + list);

  // remove ""10""
  System.out.println(""10 is in the list:"" + list.remove(""10""));

  // print the list
  System.out.println(""LinkedList:"" + list);
</code></pre>

<p>}
}</p>
"
"24336312","<p>You should specify the type of the exception in most cases because methods you call may throw different types of exceptions. For example, let's say you're trying to access a file in the file system, when you call the method to do this, the method can throw a <code>FileNotFoundException</code> which as the name describes, you will get when the file path you gave it does not exist. The method could also throw an <code>IOException</code> if the file does exist, but there's some other problem with the IO device or the file itself.
<br/>
<br/>
Usually, you would want to know the difference between these two errors and act accordingly, in which case you will have to put two <code>catch</code>es, one for <code>FileNotFoundException</code> and another for <code>IOException</code>.
<br/>
<br/>
If for some reason you don't care about the specific error, then you simply put one <code>catch</code> for a regular <code>Exception</code>.
<br/>
<br/>
For the answers to your other questions, you can find them here <a href=""http://docs.oracle.com/javase/tutorial/essential/exceptions/index.html"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/essential/exceptions/index.html</a></p>
"
"24550922","<p>You can have some thing like this:</p>

<pre><code>String countries = ""a, b, c, d"";
String[] countriesArray = countries.split("",""); 

for(String s : countriesArray){
    System.out.println(s);
}
</code></pre>

<p>Have all countries in a <code>String</code> and use it as explained above.</p>

<p>Please not that in this case you do not have to specify the size of the array while declaring.</p>
"
"24558563","<p>You can use a loop and equalsIgnoreCase</p>

<pre><code>testString.equalsIgnoreCase()
</code></pre>
"
"24392801","<p>I found <a href=""https://stackoverflow.com/questions/8119366/sorting-hashmap-by-values"">this post</a> that might help. One you cannot sort a Hashmap because there is no definitive order to it. If you want to sort through a <em>LinkedHashMap</em> though, this is how you do it. (A LinkedHashMap just has a definitive iterative order)</p>

<pre><code>public LinkedHashMap sortHashMapByValues(HashMap passedMap) {
   List mapKeys = new ArrayList(passedMap.keySet());
   List mapValues = new ArrayList(passedMap.values());
   Collections.sort(mapValues);
   Collections.sort(mapKeys);

   LinkedHashMap sortedMap = new LinkedHashMap();

   Iterator valueIt = mapValues.iterator();
   while (valueIt.hasNext()) {
       Object val = valueIt.next();
       Iterator keyIt = mapKeys.iterator();

       while (keyIt.hasNext()) {
           Object key = keyIt.next();
           String comp1 = passedMap.get(key).toString();
           String comp2 = val.toString();

           if (comp1.equals(comp2)){
               passedMap.remove(key);
               mapKeys.remove(key);
               sortedMap.put((String)key, (Double)val);
               break;
           }

       }

   }
   return sortedMap;
}
</code></pre>

<p>If you want to remove the lowest value on the other hand, I doubt this is the easiest thing you could do something like this to sort them.</p>

<pre><code>public static Entry&lt;String, Integer&gt; removeLowest(LinkedHashMap&lt;String, Integer&gt; map){
    Entry&lt;String, Integer&gt; lowest = null;
    for(Entry&lt;String,Integer&gt; e: map){
        if(lowest==null || e.getValue().compareTo(lowest.getValue()) &lt; 0){
            lowest = e;
        }
    }
    return lowest;
}
</code></pre>

<p>PS: Don't forget to accept my answer if it works for you.</p>

<p>Update: If you want to remove say half of the map. You would sort it first then do this.</p>

<pre><code>public static LinkedHashMap&lt;String, Integer&gt; getTopHalf(LinkedHashMap&lt;String, Integer&gt; map){
    LinkedHashMap&lt;String, Integer&gt; sorted = sortHashMapByValues(map);
    LinkedHashMap&lt;String, Integer&gt; out = new LinkedHashMap&lt;String, Integer&gt;();
    Iterator&lt;Entry&lt;String,Integer&gt;&gt; it = sorted.entrySet().iterator();
    for(int i = 0;  i&lt;map.size()/2; i++){
        Entry&lt;String, Integer&gt; e = it.next();
        out.put(e.getKey(), e.getValue());
    }
    return out;
}
</code></pre>
"
"24506819","<p>if my Guess is Correct Jegy is the other table? in that case try this!</p>

<pre><code>String SQL=""SELECT * FROM belepes A LEFT JOIN jegy B ON B.jegytipus = A.jegytipus WHERE vonalkod='""+vk+""'"";
</code></pre>
"
"24556521","<pre><code>//This enum represents the face of a coin
public enum CoinFace {
    HEADS,
    TAILS
}

public class Coin {

    //Default starting face for a coin
    private static CoinFace DEFAULT_FACE = CoinFace.TAILS;

    //The current face of the coin
    private CoinFace currentFace;

    public Coin() {
         currentFace = DEFAULT_FACE;
    }

    public void setFace(CoinFace face) {
         currentFace = face;
    }

    public CoinFace getFace() {
         return currentFace;
    }
}

public class Main {
     public static void main(String[] args) {

          //We create the coin instance
          Coin coinToToss = new Coin();

          //We will toss the coin 10 times
          for(int i = 0; i &lt; 10; i++) {
              System.out.println(""Tossing coin..."");
              coinToToss = tossCoin(coinToToss);
              System.out.println(""Got "" + coinToToss.getFace() + ""!"");
          }
     }

     private static Coin tossCoin(Coin coin) {

          //We will use the Random class for random results
          Random random = new Random();

          //We get a random enum value (coin face)
          int randomFace = random.nextInt(CoinFace.values().length);
          CoinFace tossedFace = CoinFace.values()[randomFace];

          coin.setFace(tossedFace);
          return coin;
     } 
}
</code></pre>
"
"24562612","<p>Here is a simple (and to me logical) way of setting up this variable. Your constructor:</p>

<pre><code>public bool isHeads;
Constructor()
{ isHeads=true;}
</code></pre>

<p>Flip Coin Function:</p>

<pre><code>void flipCoin()
{
 if((int)(Math.random() *2) ==1)
      isHeads = true;
 else
      isHeads = false;
}
</code></pre>

<p>Return result function:</p>

<pre><code>bool getResult()
{ return isHeads;}
</code></pre>
"
"24614609","<p>I'm not familiar with Java, but the reason why there's an extra semicolon needed is because you can define an anonymous class, inside functions. For instance:</p>

<pre><code>void routine(const int x, const int y)
{
    class { public: int x; int y; } my_instance;
    my_instance.x = x;
    my_instance.y = y;
    // ... etc
}
</code></pre>

<p>You'll usually see this more with structs than with classes, to capture some important variables of a big class.</p>

<pre><code>void f(const BigClass&amp; big_class)
{
    struct { std::string str; int i; } props;
    props.str = big_class.GetFilename();
    props.i = big_class.GetID();
    // etc...
}
</code></pre>
"
"24405655","<p>If you need check, if file is used (someone writing into it or something like that) you can use this function (in C#):</p>

<pre><code>protected virtual bool IsFileLocked(FileInfo file)
{
    FileStream stream = null;

    try
    {
        stream = file.Open(FileMode.Open, FileAccess.ReadWrite, FileShare.None);
    }
    catch (IOException)
    {
        //the file is unavailable because it is:
        //still being written to
        //or being processed by another thread
        //or does not exist (has already been processed)
        return true;
    }
    finally
    {
        if (stream != null)
            stream.Close();
    }

    //file is not locked
    return false;
}
</code></pre>

<p>or this</p>

<pre><code>public bool IsFileLocked(string filePath)
{
    try
    {
        using (File.Open(filePath, FileMode.Open)){}
    }
    catch (IOException e)
    {
        var errorCode = Marshal.GetHRForException(e) &amp; ((1 &lt;&lt; 16) - 1);

        return errorCode == 32 || errorCode == 33;
    }

    return false;
}
</code></pre>

<p>or you can try this code. It will take the path of a file and returns a <code>List&lt;Process&gt;</code> of all processes that are locking that file.</p>

<pre><code>static public class FileUtil
{
    [StructLayout(LayoutKind.Sequential)]
    struct RM_UNIQUE_PROCESS
    {
        public int dwProcessId;
        public System.Runtime.InteropServices.ComTypes.FILETIME ProcessStartTime;
    }

    const int RmRebootReasonNone = 0;
    const int CCH_RM_MAX_APP_NAME = 255;
    const int CCH_RM_MAX_SVC_NAME = 63;

    enum RM_APP_TYPE
    {
        RmUnknownApp = 0,
        RmMainWindow = 1,
        RmOtherWindow = 2,
        RmService = 3,
        RmExplorer = 4,
        RmConsole = 5,
        RmCritical = 1000
    }

    [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]
    struct RM_PROCESS_INFO
    {
        public RM_UNIQUE_PROCESS Process;

        [MarshalAs(UnmanagedType.ByValTStr, SizeConst = CCH_RM_MAX_APP_NAME + 1)]
        public string strAppName;

        [MarshalAs(UnmanagedType.ByValTStr, SizeConst = CCH_RM_MAX_SVC_NAME + 1)]
        public string strServiceShortName;

        public RM_APP_TYPE ApplicationType;
        public uint AppStatus;
        public uint TSSessionId;
        [MarshalAs(UnmanagedType.Bool)]
        public bool bRestartable;
    }

    [DllImport(""rstrtmgr.dll"", CharSet = CharSet.Unicode)]
    static extern int RmRegisterResources(uint pSessionHandle,
                                          UInt32 nFiles,
                                          string[] rgsFilenames,
                                          UInt32 nApplications,
                                          [In] RM_UNIQUE_PROCESS[] rgApplications,
                                          UInt32 nServices,
                                          string[] rgsServiceNames);

    [DllImport(""rstrtmgr.dll"", CharSet = CharSet.Auto)]
    static extern int RmStartSession(out uint pSessionHandle, int dwSessionFlags, string strSessionKey);

    [DllImport(""rstrtmgr.dll"")]
    static extern int RmEndSession(uint pSessionHandle);

    [DllImport(""rstrtmgr.dll"")]
    static extern int RmGetList(uint dwSessionHandle,
                                out uint pnProcInfoNeeded,
                                ref uint pnProcInfo,
                                [In, Out] RM_PROCESS_INFO[] rgAffectedApps,
                                ref uint lpdwRebootReasons);

    /// &lt;summary&gt;
    /// Find out what process(es) have a lock on the specified file.
    /// &lt;/summary&gt;
    /// &lt;param name=""path""&gt;Path of the file.&lt;/param&gt;
    /// &lt;returns&gt;Processes locking the file&lt;/returns&gt;
    /// &lt;remarks&gt;See also:
    /// http://msdn.microsoft.com/en-us/library/windows/desktop/aa373661(v=vs.85).aspx
    /// http://wyupdate.googlecode.com/svn-history/r401/trunk/frmFilesInUse.cs (no copyright in code at time of viewing)
    /// 
    /// &lt;/remarks&gt;
    static public List&lt;Process&gt; WhoIsLocking(string path)
    {
        uint handle;
        string key = Guid.NewGuid().ToString();
        List&lt;Process&gt; processes = new List&lt;Process&gt;();

        int res = RmStartSession(out handle, 0, key);
        if (res != 0) throw new Exception(""Could not begin restart session.  Unable to determine file locker."");

        try
        {
            const int ERROR_MORE_DATA = 234;
            uint pnProcInfoNeeded = 0,
                 pnProcInfo = 0,
                 lpdwRebootReasons = RmRebootReasonNone;

            string[] resources = new string[] { path }; // Just checking on one resource.

            res = RmRegisterResources(handle, (uint)resources.Length, resources, 0, null, 0, null);

            if (res != 0) throw new Exception(""Could not register resource."");                                    

            //Note: there's a race condition here -- the first call to RmGetList() returns
            //      the total number of process. However, when we call RmGetList() again to get
            //      the actual processes this number may have increased.
            res = RmGetList(handle, out pnProcInfoNeeded, ref pnProcInfo, null, ref lpdwRebootReasons);

            if (res == ERROR_MORE_DATA)
            {
                // Create an array to store the process results
                RM_PROCESS_INFO[] processInfo = new RM_PROCESS_INFO[pnProcInfoNeeded];
                pnProcInfo = pnProcInfoNeeded;

                // Get the list
                res = RmGetList(handle, out pnProcInfoNeeded, ref pnProcInfo, processInfo, ref lpdwRebootReasons);
                if (res == 0)
                {
                    processes = new List&lt;Process&gt;((int)pnProcInfo);

                    // Enumerate all of the results and add them to the 
                    // list to be returned
                    for (int i = 0; i &lt; pnProcInfo; i++)
                    {
                        try
                        {
                            processes.Add(Process.GetProcessById(processInfo[i].Process.dwProcessId));
                        }
                        // catch the error -- in case the process is no longer running
                        catch (ArgumentException) { }
                    }
                }
                else throw new Exception(""Could not list processes locking resource."");                    
            }
            else if (res != 0) throw new Exception(""Could not list processes locking resource. Failed to get size of result."");                    
        }
        finally
        {
            RmEndSession(handle);
        }

        return processes;
    }
}
</code></pre>
"
"24405686","<p>First check if the file exists (<code>File.Exists</code>) if so try to open for write within <code>try</code> and <code>catch</code> block, if exception is generated then it is used by another process. However finding something through exception is not the best way!</p>

<p>You can try this :</p>

<pre><code>protected virtual bool IsFileLocked(FileInfo file)
{
    FileStream stream = null;

    try
    {
        stream = file.Open(FileMode.Open, FileAccess.ReadWrite, FileShare.None);
    }
    catch (IOException)
    {
        //the file is unavailable because it is:
        //still being written to
        //or being processed by another thread
        //or does not exist (has already been processed)
        return true;
    }
    finally
    {
        if (stream != null)
            stream.Close();
    }

    //file is not locked
    return false;
}
</code></pre>
"
"24627175","<p>The dependency is declared as provided what means that the container will provide it.</p>

<p>What container are you using? I think Tomcat/Jetty won't provide that jar as it seems so Java EE. In that case just change the scope to <code>compile</code>.</p>

<pre><code>&lt;dependency&gt;
  &lt;groupId&gt;javax.ejb&lt;/groupId&gt;
  &lt;artifactId&gt;ejb-api&lt;/artifactId&gt;
  &lt;version&gt;3.0&lt;/version&gt;
  &lt;scope&gt;compile&lt;/scope&gt;
&lt;/dependency&gt;
</code></pre>

<p>More info about dependency scopes:
<a href=""http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope"" rel=""nofollow"">http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Dependency_Scope</a></p>
"
"24424080","<p><code>logi</code> is the static content of the expression.</p>

<ul>
<li><code>n?</code> means n occurs never or once</li>
<li><code>()?</code> means the expression in <code>()</code> occurs never or once</li>
<li><code>\\?</code> means <code>\</code> occurs never or once</li>
<li><code>.+</code> means any character(except new line) occurs once or more</li>
</ul>
"
"24658438","<p>Perhaps this will work well for you:</p>

<pre><code>   // Print all possible combinations
   for (ICombinatoricsVector&lt;String&gt; combination : gen) {
      System.out.println(Arrays.toString(combination.toArray()));
   }
</code></pre>
"
"24637328","<p>In most of the cases this indicates infinite recursion. Check if you are doing something of the form <code>A calling B calling A calling B calling A ...</code> where A and B are some methods/constructors. If so, restructure your code to eliminate this.   </p>
"
"24690213","<p>The below line will throw Exception because you are trying to access array index which is greater then it's size. 
System.out.print(cellPhoneNumbers[i][phones])</p>

<p>Use <code>println</code> outside the for loop to print all the elements in separate lines.</p>

<pre><code>            for (i = 0; i &lt; ROWS; i++)
            {
                int phones = Integer.parseInt(cellPhoneNumbers[i][1]);
                for (j = 0; j &lt; COL; j++)
                {
                    System.out.print(cellPhoneNumbers[i][j] + "" "");
                }
                System.out.println("""");
            }
</code></pre>

<p><code>System.out.println()</code> is to print the line and also add new line character at the end
so you print anything after that will be moved to the next line whereas <code>System.out.print()</code> does not put a new line char at the end.</p>
"
"24666867","<p>You need to change the condition of your loop</p>

<pre><code>  String[] nextLine;   
  while((nextLine = brTest.readLine()) != null) {
      ...
  }
</code></pre>

<p>ReadLine reads each line from beginning up to the occurrence of \r andor \n
You can also use <a href=""http://docs.oracle.com/javase/7/docs/api/java/util/StringTokenizer.html"" rel=""nofollow"">tokenizer</a> to split the string</p>

<pre><code>String[] test = ""this is a test"".split(""\\s"");
</code></pre>

<p>In addition it seems the file is of type CSV if it is please mention that in the question.</p>
"
"24645437","<p>This feature has been added in Java 5.</p>

<p><strong>text</strong> gets converted automatically into Integer by compiler. So basically its a syntactic sugar that can shorten your code (otherwise you would do conversions back and forth by yourself). Of course it has its price and if this happens a lot (I mean really a lot, big loops, frequent invocations and so forth), it can become a performance issue, so when using it, just remember the it happens under the hood and you'll be fine.</p>

<pre><code>Integer.valueOf(text)
</code></pre>

<p>is called under the hood</p>

<p>The feature is called autoboxing btw</p>

<p>Hope this helps</p>
"
"24723503","<pre><code>public class Calculator {
    public static void main(String args []){

        int x=10,y=5,add,sub,div,mul;

        switch (4) {
        case 1:
            add=x+y;
            System.out.print(""add :""+add);
            break;
        case 2:
            sub=x-y;
            System.out.print(""sub :""+sub);
            break;
        case 3:
            mul=x*y;
            System.out.print(""mul:""+mul);
            break;
        case 4:
            div=x/y;
            System.out.print(""div:""+div);           
        default:
            System.out.print(""invailid"");
        }
    }
}
</code></pre>
"
"24698555","<p>In my opinion using println() is much better than printf....Anyway I will answer your question using some variables (just to make it easier :)) so:</p>

<pre><code>int a,b,c,d;

a=1;
b=2;
c=3;
d=4;
System.out.printf(""%d %d %d %d \n"",a,b,c,d);
</code></pre>
"
"24647520","<p>.contains() will treat the argument inside it as string.so,try using something like</p>

<pre><code>if(Arrays.asList(EmpNo).contains(new Int (number))
</code></pre>
"
"24709682","<p>If you're interested in testing array equality (as opposed to writing out this test yourself), then you can use <code>Arrays.equals(theArray, theOtherArray)</code>.</p>
"
"24722687","<p>You should be constructing your URLs with the <code>URL</code> class (not a <code>String</code>).</p>

<p>Here is the official Java 8 Documentation:</p>

<p><a href=""http://docs.oracle.com/javase/8/docs/api/java/net/URL.html"" rel=""nofollow"">http://docs.oracle.com/javase/8/docs/api/java/net/URL.html</a></p>
"
"24546435","<p>Round the answer.</p>

<p>For instance:</p>

<pre><code>double valToRound = 172.485 - 4119.7;   
DecimalFormat df = new DecimalFormat(""#.###"");
System.out.println(df.format(valToRound));
</code></pre>

<p>Result: <code>-3947.215</code></p>
"
"24794365","<p>You can go this way:</p>

<p>First find the largest no. in the matrix, and then go for the location of that max no. in the matrix and finally checking the neighbours will solve the issue of finding #.</p>

<pre><code>a = max(matrix)
[r,c] = find(matrix == a)
</code></pre>

<p>then check for neighbors with r+/-1 and c+/-1 and u will find #.</p>
"
"24712549","<p>Here's the code try this one</p>

<pre><code> public static void main(String... args)
{
    int beer = 10;

    while(beer&gt;=1){

    if(beer&gt;1){

    System.out.print(beer + ""bottles of beer on the wall "");
    System.out.println(beer + ""bottles of beer "");
    System.out.print(""Take one down and pass it around "");

    beer = beer-1;

    System.out.println(beer + ""bottles of beer on the wall "");  

    }   

    if(beer==1){

    System.out.print(beer + ""bottles of beer on the wall "");
    System.out.println(beer + ""bottles of beer "");
    System.out.print(""Take one down and pass it around "");
    System.out.println(""no more bottles of beer on the wall. "");
    System.out.println("""");
    }

    else{

    System.out.println(""No more bottles of beer on the wall, no more bottles of beer."");
    System.out.println(""Go to the store and buy some more, 99 bottles of beer on thewall"");
    }
    beer--;
    }
}
</code></pre>
"
"24753306","<p>I tried a split on ""."" and then just parse the string for integers. </p>

<pre><code>        String a="""";
        double x = 2.4;
        a=x+"""";
        String [] v =a.split(""\\."");
        int before = Integer.parseInt(v[0]);
        int after = Integer.parseInt(v[1]);
</code></pre>
"
"24765509","<p>You could use escapeXML from the <code>org.apache.commons.lang.StringEscapeUtils</code> library, So you could use:</p>

<pre><code>String foo = StringEscapeUtils.escapeXML(""&amp; # shall be escaped!"");
</code></pre>

<p>You can also use an external library.</p>
"
"24842730","<pre><code>/**
 *
 * @author salathielgenese
 */
public class Loader
{

    /**
 * @param args the command line arguments
 */
    public static void main(String[] args)
    {
        // Init «n» to «0» by default. Even if the conversion failed, you'll get you variable to 0
        // But if the conversion goes on, then the value will be updated to args[0]
        int n = 0;
        if (null != args &amp;&amp; 0 &lt; args.length)
        {
            try
            {
                n = Integer.parseInt(args[0]);
            }
            catch (NumberFormatException e)
            {
                System.err.println(""Argument"" + args[0] + "" must be an integer."");
                System.exit(1);
            }
        }
        // The rest of your code
    }

}
</code></pre>
"
"24753042","<p>You can just use something like this:</p>

<pre><code>String output = input.substring(0, 1).toUpperCase() + input.substring(1);
</code></pre>

<p>On the other hand is isn't bad to take a look at the guava libraries.</p>

<pre><code>String output = CaseFormat.LOWER_CAMEL.to(CaseFormat.UPPER_CAMEL, entity.getEntityType()));
</code></pre>

<p>For this case only it will be overkill but it has a lot of other usefull utilities (Not only for String manipulation)</p>
"
"24765093","<ol>
<li><p>Give tomcat more memory. Use the following vm args: <code>-Xmx1600m -Xms1600m -XX:MaxPermSize=512m</code> (might be a bit of an overkill, modify the values to your taste)</p></li>
<li><p>Tomcat is infamous for memory leaks when reloading web applications. Nothing you can do about this one other than what's described in step 1.</p></li>
</ol>
"
"24668858","<p>Try setting </p>

<pre><code>DateFormat dateFormat = new SimpleDateFormat(""MMMM dd, yyyy"");
java.util.Date date3 = new java.util.Date();
date3.setHours(0);
date3.setMinutes(0);
date3.setSeconds(0);
</code></pre>
"
"24765673","<ol>
<li><code>@NotEmpty</code> is Hibernate specific you should use <code>@NotNull</code> if you want to validate your beans through JSR-303.</li>
<li>You can use BindingResult to verify as suggested by <code>@Aph1ka</code>.</li>
<li>You can have a look at spring mvc showcase for a working example.<br>
<a href=""https://github.com/spring-projects/spring-mvc-showcase/blob/master/pom.xml"" rel=""nofollow"">pom.xml</a><br>
<a href=""https://github.com/spring-projects/spring-mvc-showcase/tree/master/src/main/java/org/springframework/samples/mvc/validation"" rel=""nofollow"">validation</a></li>
</ol>
"
"24769747","<p>Use the following code:</p>

<pre><code>if(json.isNull()!= null){  //returns true only if json is not null

}
</code></pre>
"
"24804267","<p>Looks like, it is just syntactical sugar that you are interested in. Here you go:</p>

<pre><code>// write
new PrintWriter(""the-file-name.txt"", ""UTF-8"").append(""this string"").close();

// read
String thisStr = new BufferedReader(new FileReader(""the-file-name.txt"")).readLine();
System.out.println(thisStr);
</code></pre>
"
"24774736","<p>like this</p>

<pre><code>char arr[]=new char[30]; //declares an array which can hold 30 characters
    arr[2]='a';
    arr[20]='b';
</code></pre>

<p>but if you don't want to specify the length,than arraylist is something which will help you to accomplish your task because array's size is always fixed in Java</p>
"
"24820298","<p>You can set properties with build parameters (ie: myParameter) and get them in an ant script with <code>${myParameter}</code>.</p>

<p>Just make sure you don't use dots in parameters names in jenkins because there might be problems getting them in the ant script.</p>

<p>As for environment variables, i don't know, sorry.</p>
"
"24822416","<pre><code>package com.journaldev.servlet;

import java.io.File;

import javax.servlet.ServletContext;
import javax.servlet.ServletContextEvent;
import javax.servlet.ServletContextListener;
import javax.servlet.annotation.WebListener;

 @WebListener
public class FileLocationContextListener implements ServletContextListener { 



 public void contextInitialized(ServletContextEvent servletContextEvent) { 
     String rootPath = System.getProperty(""catalina.home""); 
     ServletContext ctx = servletContextEvent.getServletContext(); 
     String relativePath = ctx.getInitParameter(""tempfile.dir"");
     File file = new File(rootPath + File.separator + relativePath);
     if(!file.exists()) 
         file.mkdirs();
     System.out.println(""File Directory created to be used for storing files""); 
     ctx.setAttribute(""FILES_DIR_FILE"", file); 
     ctx.setAttribute(""FILES_DIR"", rootPath + File.separator + relativePath); 
 }


public void contextDestroyed(ServletContextEvent servletContextEvent) { 
    //do cleanup if needed 
    } 
}
</code></pre>
"
"24722367","<p>You haven't declared the variable <code>c</code> You've just stated that <code>c = a / b</code> also a/b would work better if you declared them as a <code>double</code> rather than a string as you can not divide strings.</p>
"
"24937851","<p>As of <a href=""https://github.com/thymeleaf/thymeleaf/issues/43"" rel=""nofollow"">https://github.com/thymeleaf/thymeleaf/issues/43</a> comparison of enums is not an Thymeleaf feature... Instead <strong>put your enum values to string representation</strong> and use the following - as an example:</p>

<pre><code>&lt;div th:if=""${someObject.constantEnumString == 'one'}"" th:text=""1""/&gt;
&lt;div th:unless=""${someObject.constantEnumString == 'two'}""&gt;2&lt;/div&gt;
</code></pre>

<p>you could define your enum as follows:</p>

<pre><code>public enum Constants {
    ONE (""one""),
    TWO (""two""),
    THREE (""three"");

    private String stringRep;

    Constants(String stringRep) {
        this.stringRep = stringRep;
    }

    public String getStringRep() {
        return this.stringRep;
    }
}
</code></pre>

<p>and use your .getStringRep() on your enum variable when passing your values to Thymeleaf FrontEnd...</p>
"
"24945402","<p>The reason lies behind the implementation of <a href=""http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/lang/StrictMath.java#StrictMath.pow%28double%2Cdouble%29"" rel=""nofollow""><code>Math.pow()</code></a> (JNI of default implementation). The CPU has an exponentiation module which  works with doubles as input and output. Why should Java convert that for you when you have much better control over this yourself?</p>

<p>For floor and ceil the reasons are the same, but note that:</p>

<pre><code>(int) Math.floor(d) == (int) d;   // d &gt; 0
(int) Math.ceil(d) == -(int)(-d); // d &lt; 0
</code></pre>

<p>For most cases (no warranty around or beyond <code>Integer.MAX_VALUE</code> or <code>Integer.MIN_VALUE</code>).</p>

<p>Java leaves you with</p>

<pre><code>(int) Math.pow(a,b)
</code></pre>

<p>because the result of <code>Math.pow</code> may even be <code>NaN</code> or <code>Infinity</code> depending on input.</p>
"
"24848172","<p>can't you use a simple recursion?</p>

<pre><code> public static void main(String[] args) {
    System.out.println(power10x(4,1)); //replace ur X value with 4

}


public static int power10x(int a,int val){
     if(a==0)
        return val;
     else
         return power10x(a-1,val*10);

}
</code></pre>
"
"24921189","<p>Instead of adding an <code>OnLayoutInflatedListener</code> you can extend <code>InsetActivity</code> and set your content view in <code>InsetActivity.onReadyForContent()</code>:</p>

<p><code>import android.support.wearable.activity.InsetActivity;
public class MainActivity extends InsetActivity {
...
    @Override
    public void onReadyForContent() {
        setContentView(R.layout.activity_main);
        someTextField = (TextView) findViewById(R.id.some_field);
</code></p>
"
"24838090","<p>You can try use a scanner and then iterate over all your lines, a scanner works a little like this:</p>

<pre><code>Scanner fileReader = new Scanner(new File(&lt;File to read&gt;));

while (fileReader.hasNextLine()) {
    String line = fileReader.readLine();
    &lt;Process Line&gt;
}

fileReader.close()
</code></pre>

<p>You question it's self is ambiguous as to what you want everything here is from reading to where you have to check your data is included, I can't give you a predefined way for you to work with your own code because it is your code</p>

<p>@user3843842 unfortunately I can't comment but that is indeed the basics of getting and processing the data, you might want to call a break if the data is found to quickly leave the loop</p>
"
"24838217","<p>I think what you need is how to store a map to a file, am I right? For this, you have many options. Some of them:</p>

<p>1) use standard object serialization: </p>

<p>Tutorial: <a href=""http://www.tutorialspoint.com/java/java_serialization.htm"" rel=""nofollow"">http://www.tutorialspoint.com/java/java_serialization.htm</a></p>

<pre><code>// prepare data
Map&lt;String, String&gt; data = new HashMap&lt;String, String&gt;();
data.put(""key1"", ""value1"");

// save to file
ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(new File(""config.ser"")));
oos.writeObject(data);
oos.close();

// load from file
ObjectInputStream ois = new ObjectInputStream(new FileInputStream(new File(""config.ser"")));
Object loadedUntyped = ois.readObject();
ois.close();

// you can check type here, etc.
Map&lt;String, String&gt; loadedTyped = (Map&lt;String, String&gt;) loadedUntyped;
System.out.println(""loaded: "" + loadedTyped);
</code></pre>

<p>2) use <strong>Properties</strong> object: </p>

<p>Tutorial: <a href=""http://tamanmohamed.blogspot.cz/2012/12/java-storeload-properties-file-in-both.html"" rel=""nofollow"">http://tamanmohamed.blogspot.cz/2012/12/java-storeload-properties-file-in-both.html</a></p>

<pre><code>// prepare data
Properties data = new Properties();
data.setProperty(""key1"", ""value1"");

// save data
data.store(new FileOutputStream(new File(""config.properties"")), ""example"");

// load data
Properties loaded = new Properties();
loaded.load(new FileInputStream(new File(""config.properties"")));
System.out.println(""loaded: "" + loaded);
</code></pre>

<p>3)  use your own format: you must first design your own format and implement the right writer/reader (too demanding for this case)</p>
"
"24988214","<p>There must be something wrong with the values coming from the scanner. </p>

<p>The below code works as expected.</p>

<pre><code>  boolean data[][] = {
    {true, true},
    {true, false},
    {false, false},
    {false, true}

  };

  for(boolean aa[] : data){

    boolean a = aa[0];
    boolean b = aa[1];
    System.out.println(a != b &amp;&amp; a == b);
  }
</code></pre>

<p><a href=""http://ideone.com/rgOBg6"" rel=""nofollow"">Ideone Example
</a></p>
"
"25057535","<p>did you missed type casting the character to integer?
try this: </p>

<pre><code>int ascii = (int) convert;
</code></pre>
"
"25057684","<p>Replace this line </p>

<pre><code>""int ascii = ('convert'/1);""
</code></pre>

<p>by </p>

<blockquote>
  <p>int ascii= (int)convert;</p>
</blockquote>

<p>This should work. </p>
"
"24994021","<p>For creating jar file using command line Here is the link with the example 
<a href=""http://docs.oracle.com/javase/6/docs/technotes/tools/windows/jar.html"" rel=""nofollow"">link</a></p>

<p>I personally use ant for packaging jar though. Here is one example for build file</p>

<pre><code>&lt;?xml version=""1.0""?&gt;

&lt;project name=""CodeGen"" basedir=""."" default=""build-jar""&gt; 
    &lt;property environment=""env""/&gt;
    &lt;property file=""build.properties""/&gt;
    &lt;path id=""master-classpath""&gt; 
        &lt;fileset dir=""${dependenet_jar.dir}""&gt; 
            &lt;include name=""**/*.jar""/&gt; 
    &lt;/path&gt; 

    &lt;!-- 
    ==============================================================================
    Compiles the Java files to .class files
    ==============================================================================
    --&gt;
    &lt;target name=""build"" description=""Compile source tree java files""&gt; 
        &lt;mkdir dir=""${build.dir}""/&gt; 
        &lt;javac destdir=""${build.dir}"" source=""1.6"" target=""1.6""&gt; 
            &lt;src path=""${src.dir}""/&gt; 
            &lt;classpath refid=""master-classpath""/&gt; 
        &lt;/javac&gt; 
    &lt;/target&gt; 

    &lt;!-- 
    ==============================================================================
    Cleans the existing built files
    ==============================================================================
    --&gt;
    &lt;target name=""clean"" description=""Clean the output directories""&gt; 
        &lt;delete&gt; 
            &lt;fileset dir=""${build.dir}""&gt; 
                &lt;include name=""**/*.class""/&gt; 
                &lt;include name=""**/*.jar""/&gt; 
            &lt;/fileset&gt;  
        &lt;/delete&gt; 
        &lt;delete file=""./mdcodegen.jar""/&gt;
        &lt;delete dir=""${build.dir}""/&gt;
    &lt;/target&gt; 

    &lt;!-- 
    ==============================================================================
    Builds mdcodegen.jar plugin from the .class files
    ==============================================================================
    --&gt;
    &lt;target name=""build-jar"" depends=""build"" description=""Builds the plugin JAR""&gt; 
        &lt;jar destfile=""mdcodegen.jar""&gt;
            &lt;fileset dir=""${build.dir}""/&gt;
        &lt;/jar&gt; 
    &lt;/target&gt;



&lt;/project&gt;
</code></pre>

<p>example of build.properties file</p>

<pre><code>proj.dir=.
src.dir=${proj.dir}/src
build.dir=${proj.dir}/bin
dependenet_jar.dir=C:/Program Files/dependent_jar
tools.path=${tools.dir}
</code></pre>

<p>File should be placed in project folder .You need to install ant package which is available at apache ant website and run the target with simple ant build-jar command</p>
"
"25080589","<p>Few suggestions which might help you (not related to the specific question).</p>

<ol>
<li>Choose a meaningful class name rather than <code>While_Loop</code> .</li>
<li>Do, <code>Scanner input = new Scanner(System.in);</code> before the start of the loop.</li>
<li>As soon as you read each line, do the following.</li>
<li>Split the line using <code>""\\s+""</code> .</li>
<li>Create a HashMap with Key as Count (Integer) and Value as a list of Words with that count. Create this <em>outside the loop</em>.</li>
<li><em>For each</em> split word,,get the length . and check if the map already <em>contains</em> the count, get the list (value), add he current word to it. else, add a new entry with the word as the single entry in the list.</li>
<li>Get the <code>keySet</code> of the map, add values of all keys i.e, *count * number of elements in the list*. then divide by total number of elements.</li>
<li>And yes, I know this is a <em>very big</em> change (something you might as well ignore..). But this is the right way to go.</li>
</ol>
"
"25086765","<p>you can write your own Map like this: </p>

<pre><code>public class DateHashMap implements Map&lt;String, Date&gt;{ 
..
@Override
public String put(Date key, String value) {
        // Check date...
    }
..
}
</code></pre>

<p>Sincerely, </p>

<p>Max</p>
"
"24910804","<pre><code>**Code 1 - Line 1: Does the literal ""Hello"" in the constructor get placed in the constant pool before the String constructor is called?**
</code></pre>

<p><strong>Yes</strong>, because constructor is  used to instantiate the object. </p>

<pre><code>****Code 1 - Line 2: Does ""Hello"" already exist in the pool at line 2 or is it inserted at this line?****
</code></pre>

<p>**it is already there **. it is not inserted by this line. you can check by like this.</p>

<pre><code>       String s=new String(""hello"");
String s1=s.intern();
String s2 = new String(""hello"");
String s3= s2.intern();

if (s1==s3)
{
System.out.println(""true"");
} if (s==s2)
{System.out.println(""false"");}
</code></pre>

<p><strong>Code 2 - Line 2: Is the author wrong when she says that ""Summer"" is placed in the pool at line 2?</strong></p>

<p><strong>NO</strong>. summer will not be placed at the constant pool because it is already there code2-line1 will place ""summer"" there. </p>
"
"24910880","<pre><code>    public static void main(String[] args)
    {
        String summer  = new String(""Summer"");   //Line 1: The code creates a new String object 
}
</code></pre>

<p>with the value <code>Summer</code>. This object is not placed in the String constant pool.</p>

<p>This statement is wrong. ABove line will create 2 object one is in Constant pool and other one is in heap.Whenever you will write ""ABC"" , it will go to constant pool no matter inside constructor or not.</p>

<p>Proof</p>

<pre><code>String s1 = ""Rakesh"";
String s2 = ""Rakesh"";
String s3 = ""Rakesh"".intern();
String s4 = new String(""Rakesh"");
String s5 = new String(""Rakesh"").intern();

if ( s1 == s2 ){
    System.out.println(""s1 and s2 are same"");  // 1.
}

if ( s1 == s3 ){
    System.out.println(""s1 and s3 are same"" );  // 2.
}

if ( s1 == s4 ){
    System.out.println(""s1 and s4 are same"" );  // 3.
}

if ( s1 == s5 ){
    System.out.println(""s1 and s5 are same"" );  // 4.
}will return:

s1 and s2 are same
s1 and s3 are same
s1 and s5 are same
</code></pre>
"
"24918744","<p>Join two arrays :</p>

<pre><code>        import java.util.ArrayList;
        import java.util.Arrays;
         import java.util.List;
         public class Main {
         public static void main(String args[]) {
         Int a[] = { 1,2,3 };
          Int b[] = { 4,5 };
           List list = new ArrayList(Arrays.asList(a));
            list.addAll(Arrays.asList(b));
           Object[] c = list.toArray();

    }
 }
</code></pre>

<p>Arrange one array ascending :</p>

<pre><code>             for (int j = 0; j&lt;array.length; j++) {
              for (int k = 0; k &lt; array.length; k++){
                   if (array[j] &lt; array[k]) {
                     int buffer = array[j];
                  array[j] = array[k];
               array[k] = buffer; 
               }
             }
          }
</code></pre>
"
"25050795","<p>You are iterating one too many. Change the &lt;= in the for loop to a straight &lt; and you should be good. Also, you try to access the ledPositionControl[MAX_CONTROL].  That will also fail because that is one past the last element of the array.</p>

<pre><code>        for(int i=0;i&lt;MAX_CONTROL;i++){
            ledPositionControl[i] = maxWidth/2+(i-MAX_CONTROL/2)*ledBmpSize;
            System.out.println(""LEDPOSITION = ""+i);
        }
        buttonPositionY = resetPositionY = 
                ledPositionControl[MAX_CONTROL-1]+positionControlSize;
        buttonPositionX = ledPositionControl[2];
        resetPositionX = buttonPositionX+positionControlSize*5;
</code></pre>

<p>I think the key is that you need to understand that in an array allocated to have 32 items, you cannot access array[32].  The last element of the array is array[31], because arrays are zero based, meaning they start at 0 and go up to a max index of ARRAY_SIZE-1.</p>
"
"25039474","<pre><code>Date currentDate = new Date(System.currentTimeMillis());
</code></pre>

<p>From this you can get current date of system.</p>
"
"25057362","<p>When this is executed, b is always 0.     </p>

<pre><code>arr[i]=b%10;
</code></pre>
"
"25119707","<p>Add this check in your run() method:</p>

<pre><code>if (!horse.isDead()) {
    // Spawn particles
}
</code></pre>

<p>This will prevent spawning the particles to a dead horse.</p>
"
"25046427","<p>Using <em>ANYTHING</em> except for your own implementation in equals() is GUARANTEED to be ""worse"" if you can use ... say a strictly unique ID. </p>

<p>If your ID is really unique you will most likely have the best, possible implementation with this, of course it needs to be polished quite a bit:</p>

<pre><code>@Override
public boolean equals(Object other)
{
   if(other instanceof MyClass)
   {
      MyClass obj = (MyClass)other;
      return obj.getID() == this.getID();
   }
   else
      return false;
}
</code></pre>

<p>Have a look at <a href=""http://docs.oracle.com/javase/7/docs/api/java/util/UUID.html#randomUUID()"" rel=""nofollow"">this</a>, <a href=""https://stackoverflow.com/questions/2513573/how-good-is-javas-uuid-randomuuid"">this</a> and <strong>especially</strong> <a href=""http://docs.oracle.com/javase/7/docs/api/java/util/UUID.html#nameUUIDFromBytes(byte[])"" rel=""nofollow"">this</a></p>
"
"25008011","<p>You can use this regex for substitution: <code>(-CD)?-[0-9]{4}-([a-zA-Z0-9]+)$</code> - <a href=""http://regex101.com/r/vN2uH2/1"" rel=""nofollow"">http://regex101.com/r/vN2uH2/1</a></p>

<p>Considering all strings are ended with ""-YEAR-NAME"", which YEAR takes 4 numbers and NAME takes any one or more characters including numbers and may be prepended by ""-CD"".</p>

<p>Here is something else that you could try: <code>^[^-]+(-[a-zA-Z]{1,3})?-[^-]+</code> - <a href=""http://regex101.com/r/eL6jW2/1"" rel=""nofollow"">http://regex101.com/r/eL6jW2/1</a></p>
"
"25008127","<p>This should be the replacement pattern you run first.  So we strip away to the end of the line matching dash year(4 digits) dash word characters (numbers and letters).  After that you can replace '_' with space and not worry about dashes.</p>

<pre><code>replace(""-(\\d){4}-(\\w)+$"", '')
</code></pre>
"
"25084706","<pre><code>// how can I get a Set&lt;&gt; of object of type A that implements I?
</code></pre>

<p>You cannot guarantee both in a single generic statement. You can do something like</p>

<pre><code>public void addToSet(I iInstance) {
   if(iInstance instanceof A){  
   //logic to add to your set
    }
}
</code></pre>
"
"25236516","<p>This should work. Tested. Click any button and both buttons are invisible for 5 secs and then visible again.</p>

<pre><code>import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.WindowConstants;

public class FinCSV implements ActionListener {

    JFrame frame = new JFrame(""ICON"");
    JPanel panel = new JPanel(new GridLayout(2, 1, 4, 4));
    JButton primaryButton = new JButton("" Primary Process"");
    JButton secondaryButton = new JButton("" Secondary Process"");
    JButton[] buttonsToShow = new JButton[] { primaryButton, secondaryButton };
    Job job = new Job(buttonsToShow);

    public static void main(String[] args) throws Exception {
    FinCSV msql = new FinCSV();
    msql.initGUI();
    }

    public void initGUI() {
    this.primaryButton.setActionCommand(""Primary"");
    this.secondaryButton.setActionCommand(""Secondary"");
    this.primaryButton.addActionListener(this);
    this.secondaryButton.addActionListener(this);

    this.primaryButton.setFont(new Font(""Serif"", Font.BOLD, 22));
    this.secondaryButton.setFont(new Font(""Serif"", Font.BOLD, 22));

    panel.add(this.primaryButton);
    panel.add(this.secondaryButton);
    frame.setContentPane(panel);
    frame.setSize(650, 300);
    frame.setVisible(true);
    frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    }

    public void actionPerformed(ActionEvent e) {
    if (e.getActionCommand().equals(""Primary"")) {
        secondaryButton.setVisible(false);
    } else if (e.getActionCommand().equals(""Secondary"")) {
        primaryButton.setVisible(false);
    }
    SwingUtilities.invokeLater(job);
    }
}

class Job implements Runnable {
    private final JButton[] buttonsToShow;

    public Job(JButton[] buttonsToShow) {
    this.buttonsToShow = buttonsToShow;
    }

    @Override
    public void run() {
    try {
        Thread.sleep(5000); // do your processing here !
    } catch (InterruptedException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    for (JButton jButton : buttonsToShow) {
        jButton.setVisible(true);
    }
    }
}
</code></pre>
"
"25088281","<p>There are two kinds of the If Statement statement. The first is</p>

<pre><code>if ( Expression ) Statement
</code></pre>

<p>and the second is</p>

<pre><code>if ( Expression ) Statement else Statement
</code></pre>

<p>In place of the Statements in the form above you can use any statement. It lets make such constructions</p>

<pre><code>if ( Expression ) Statement else if ( Expression ) Statement // and so on
</code></pre>

<p>Of course, you can use curly brackets</p>

<pre><code>if ( Expression ) {
    Statement
} else if ( Expression ) {
    Statement
} else if ( Expression ) {
    Statement
} else if ( Expression ) {
    Statement
} else if ( Expression ) {
    Statement
} // end so on
</code></pre>
"
"25022972","<p><code>final</code> variable are java constants. They should be initialized before class loads. </p>

<pre><code>final int x=10;
</code></pre>

<p>If your final variable is static then it's not like you have to give the value at the declaration itself, you can have something like -</p>

<pre><code>class Demo {
  static final int x;

   static {
        x = 10;
   }
}
</code></pre>

<p>static block gets executed only once, at the time of class loading</p>
"
"25196485","<p>Just update line</p>

<pre><code>((A)lb1.get(0)).y
</code></pre>
"
"25232188","<h1>The 'Future-Proof' Method of installing Java 8 on Win XP</h1>

<ol>
<li>Obtain a hex editor. The program called Hxd will work for this.</li>
<li>Download the Oracle Java 8 Online Installer called <code>jre-8u11-windows-i586-iftw.exe</code> (it is the smallest of the two Windows Executables. Running it downloads the latest Java version each time).</li>
</ol>

<p>The most recent version of Java can be obtained from this Page, there is no direct link.</p>

<p>Java SE Runtime Environment 8 Downloads</p>

<p><a href=""http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html"" rel=""nofollow"">http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html</a></p>

<ol start=""3"">
<li><p>Open <code>jre-8u11-windows-i586-iftw.exe</code> (or a newer executable) using Hxd</p></li>
<li><p>Search and Replace (in Hex Mode) the two occurrences of 
<code>RegDeleteKeyExA</code> and replace them with <code>RegDeleteKeyA</code> (the legacy API name). Remember to use hex mode:</p></li>
</ol>

<p>Replace</p>

<p>52 65 67 44 65 6C 65 74 65 4B 65 79 45 78 41</p>

<p>with</p>

<p>52 65 67 44 65 6C 65 74 65 4B 65 79 41 00 00</p>

<ol start=""5"">
<li><p>Save the File renamed as <code>jre-8u11-windows-i586-iftw__Patched.exe</code></p></li>
<li><p>Run the patched Program, if you patched it correctly it will complain that your OS is too old.</p></li>
<li><p>Dismiss the Popup and install Java 8. The Online Installer will download the newest version of Java from Oracle each time you run it.</p></li>
<li><p>Click on your Desktop's [Start] Button, right-click on ""My Computer"" and left-click on ""Properties"".</p></li>
<li><p>Click on the ""Advanced"" Tab, and then the ""Environment Variables"" Button. You do not need anything with the letters ""java"" in your <code>PATH</code> (a copy of java is installed in <code>C:\WINDOWS\system32</code>, which is in your <code>PATH</code>). Clean all the junk from your <code>PATH</code> including references to java (but, obviously, do not delete the <code>C:\WINDOWS\system32</code> Directory from your PATH Variable).</p></li>
</ol>

<p>Set the Environment Variable named JAVA_HOME (create it if necessary) to </p>

<pre><code>JAVA_HOME=C:\Program Files\Java\jre8
</code></pre>

<ol start=""10"">
<li><p>Everything should now be installed properly. You may need to reboot, but check Step 11 before you do. </p></li>
<li><p>If Java does not start (test with ""java -version"") then look for *.pack Files like this:</p></li>
</ol>

<p>cd ""c:\Program Files\java\""</p>

<p>dir /s *.pack</p>

<p>You can unpack them via one of these two methods:</p>

<ul>
<li>Unpack all files with a single command (in batch file):</li>
</ul>

<p><code>FOR /R %%f IN (*.pack) DO ""%JAVA_HOME%\bin\unpack200.exe"" -r -v ""%%f"" ""%%~pf%%~nf.jar""</code></p>

<ul>
<li>Unpack all files with a single command (command line from JRE root):</li>
</ul>

<p><code>FOR /R %f IN (*.pack) DO ""%JAVA_HOME%\bin\unpack200.exe""  -r -v ""%f""  ""%~pf%~nf.jar""</code></p>

<p>In the future when you want to update Java just re-run your patched Program and it will fetch the newest copy of Java direct from Oracle and install it. No need to re-patch or set any Environment Variables (until you get past version 8, or wish to use the JDK instead of the JRE).</p>

<p>This is a ""fix-once it should work for a while"" Solution.</p>
"
"25051289","<p>There is a simple code to generate a time with AM/PH   here is a code i give you please check this</p>

<p>import java.text.SimpleDateFormat;
import java.util.Date;</p>

<p>public class AddAMPMToFormattedDate {</p>

<p>public static void main(String[] args) {</p>

<pre><code>//create Date object
Date date = new Date();

 //formatting time to have AM/PM text using 'a' format
 String strDateFormat = ""HH:mm:ss a"";
 SimpleDateFormat sdf = new SimpleDateFormat(strDateFormat);

 System.out.println(""Time with AM/PM field : "" + sdf.format(date));
</code></pre>

<p>}
}</p>
"
"25150645","<p>Create a list of String holding char at each index. And apply the following    </p>

<pre><code> String str = ""helllllo"";// either take from user
    String[] myList = new String[str.length()];
    boolean flag = false;
    int count =0;//to count the repeating character
    myList[0] = str.charAt(0) + """";
    for (int i = 1; i &lt; str.length(); i++) {
        for (int j = 0; j &lt; i; j++) {
            //System.out.println(str.charAt(i)+""""+myList[j]);
            String temp = str.charAt(i)+"""";
            if (temp.equals(myList[j])) {
                flag = true;
                count++;
            }
        }
        if(flag){
            myList[i] = ""*"";
        }
        else{
            myList[i] = str.charAt(i)+"""";
        }
        flag = false;
    }
    for(int i =0;i&lt;myList.length;i++){
        System.out.println(myList[i]);
    }
    System.out.println(count);//prints the number of repetations
</code></pre>

<p>The code is <strong>tested</strong> and works fine.</p>
"
"25151923","<p>You cannot override <strong>static method</strong>. If you remove <strong>static</strong> in staticMethod(), when you call a.staticMethod(), then staticMethod() in B class will be called.</p>

<pre><code>class A {
public void staticMethod() {
    System.out.println(""Static method of A"");
}
}

class B extends A {
    public void staticMethod() {
        System.out.println(""Static method of B"");
    }
}

class Main {
    public static void main(String args[]) {
        B b = new B();
        A a = b;
        a.staticMethod();
    }
}

// Result: Static method of B
</code></pre>

<p>In other word, if you try to override static method, then method from super class will be called.</p>
"
"25067753","<p>Bad idea! You can't do that seriously, if you have an array. Of course you can set an index to null, but then you have to search for a null entry to reference a new contact within the array.
Note: you have an Iterator while writing </p>

<pre><code>for(Contact c: contacts){...
</code></pre>

<p>So one option is to iterate by index, but it's a bad option. Better make your Array a Set. Then you might write:</p>

<pre><code>for (Iterator&lt;Contact&gt; iter = mySet.iterator();iter.hasNext();) {
    final Contact next = iter.next();
    if(next.getName() == ""NAME"") {
         iter.remove();
         break;
    }
</code></pre>

<p>Always use Iterator.remove()! Otherwise you will get Exceptions earlier than you wish :D</p>
"
"25236720","<p>This is because you process your for inside the main thread of your code.</p>

<p>If you wand to do something heavy and still you want other parts of your code run smoothly, you should use Threads.</p>

<p>However, for your code, you can use InvokeLater to let your main thread to run part of your code after the first available time - I think it is when you are out of every function call you have up to this call (They have to be finished and control should be back to the main running routine which I believe it is update GUI for the next cycle. Please read InvokeLater help section by yourself)</p>

<p>This is how your code work if you want to disable/invisible your buttons.</p>

<pre><code>import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.WindowConstants;

public class FinCSV implements ActionListener {

    JFrame frame = new JFrame(""ICON"");
    JPanel panel = new JPanel(new GridLayout(2, 1, 4, 4));
    JButton primaryButton = new JButton("" Primary Process"");
    JButton secondaryButton = new JButton("" Secondary Process"");

    public static void main(String[] args)
            throws Exception {
        FinCSV msql = new FinCSV();
        msql.initGUI();
    }

    public void initGUI() {
        this.primaryButton.setActionCommand(""Primary"");
        this.secondaryButton.setActionCommand(""Secondary"");
        this.primaryButton.addActionListener(this);
        this.secondaryButton.addActionListener(this);

        this.primaryButton.setFont(new Font(""Serif"", Font.BOLD, 22));
        this.secondaryButton.setFont(new Font(""Serif"", Font.BOLD, 22));

        panel.add(this.primaryButton);
        panel.add(this.secondaryButton);
        frame.setContentPane(panel);
        frame.setSize(650, 300);
        frame.setVisible(true);
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    }

    @Override
    public void actionPerformed(ActionEvent e) {

        if (e.getActionCommand().equals(""Primary"")) {
            secondaryButton.setVisible(false);
            primaryButton.setEnabled(false);
            run_btn_1();

        } else if (e.getActionCommand().equals(""Secondary"")) {
            primaryButton.setVisible(false);
            secondaryButton.setEnabled(false);
            run_btn_2();
        }
    }

    public void run_btn_1() {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                for (int i = 0; i &lt; 10000; i++) {
                    System.out.println(""[ "" + (i + 1) + "" ] Inside Primary Process"");
                }
                secondaryButton.setVisible(true);
                primaryButton.setEnabled(true);
            }
        });
    }

    public void run_btn_2() {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                for (int i = 0; i &lt; 10000; i++) {
                    System.out.println(""[ "" + (i + 1) + "" ] Inside Secondary Process"");
                }
                primaryButton.setVisible(true);
                secondaryButton.setEnabled(true);
            }
        });
    }
}
</code></pre>

<p>So, all you need to do is to put something here:</p>

<pre><code>java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                //your code if you want to run it in next gui update
            }
        });
</code></pre>

<p><strong>EDITED</strong></p>

<p>Using threads:</p>

<pre><code>public void run_btn_1() {
new Thread(new Runnable() {

    @Override
    public void run() {

        //loop
        secondaryButton.setVisible(true);
        primaryButton.setEnabled(true);

    }
}).start();
}

public void run_btn_2() {
new Thread(new Runnable() {

    @Override
    public void run() {

        // loop
        primaryButton.setVisible(true);
        secondaryButton.setEnabled(true);
    }
}).start();
}
</code></pre>
"
"25294940","<p>You can replace the reference (!) to a String as often as you like:</p>

<pre><code>String A = ""Test"";
A = A.toUpperCase(); //will make A upper case
A = A.substring( 1 ); 
</code></pre>

<p>and so on. Excess usage of this may not be the best approach - it depends on the context.</p>

<p>Since some people seem to think that this can't be done with a String passed through a method:</p>

<pre><code>String modify( String x ){
    x = x.toLowerCasae();
    x = x.substring( 1 );
    return x;
}
</code></pre>

<p>and the call must, of course replace the original String reference.</p>

<pre><code>String tomod = ""abc"";
tomod = modify( tomod );
</code></pre>

<p>Three are, of course, classes better suited to this kind of String modification.</p>
"
"25083850","<p>For this example, I would recommend initializing them when you declare them. So for example, you'd do this:</p>

<pre><code>static int[] keyPara = {1, 2, 3, 4}; //put your array here
static int[] otherPara = {1, 2, 3, 4}; //put a different (or the same) array here
</code></pre>
"
"25260082","<p>Try something like:</p>

<pre><code>Class.forName(""com.mysql.jdbc.Driver"");
con = DriverManager.getConnection(""jdbc:mysql:// localhost:PORT/DBName"", ""mysql"", ""mysql"");
</code></pre>
"
"25322782","<p>I suggest you should (whenever possible) <em>always</em> use <code>++c</code> rather than <code>c++</code> as the former will <em>never</em> be slower since, conceptually, a deep copy of <code>c</code> has to be taken in the latter case in order to return the previous value.</p>

<p>Indeed many optimisers will optimise away an unnecessary deep copy but they can't easily do that if you're making use of the expression value. And you're doing just that in your case.</p>

<p>Many folk disagree though: they see it as as a micro-optimisation.</p>
"
"25215924","<p>Have you tried <a href=""http://docs.oracle.com/javase/7/docs/api/java/io/DataInputStream.html"" rel=""nofollow""><code>DataInputStream</code></a> ?</p>
"
"25342551","<ol>
<li>Iterate over the first string</li>
<li>For each character, check if the second string contains it</li>
<li>If it doesn't, add the caracter to a <code>StringBuilder</code></li>
<li>Return <code>stringBuilder.toString()</code></li>
</ol>
"
"25218324","<p>I would go with A, and encourage users (in method documetation) to pass an array to your method instead of varargs, since anonnymous array has to be created each time varargs method is called, as described <a href=""http://javarevisited.blogspot.cz/2011/09/variable-argument-in-java5-varargs.html"" rel=""nofollow"">here</a>.</p>

<p>Also you can improve your <code>add(Iterable&lt;T&gt; data)</code> method by using a <a href=""http://docs.oracle.com/javase/tutorial/extra/generics/wildcards.html"" rel=""nofollow"" title=""javadoc"">wildcard</a> and change it's signature to <code>add(Iterable&lt;? extends T&gt; data)</code>.</p>

<p><strong>Edit:</strong> (reply to @Torben's comment)</p>

<p>Let's say you call <code>add(a,b,c)</code> a <em>lot</em> and if anonymous array get's created every time, as described in the <a href=""http://javarevisited.blogspot.cz/2011/09/variable-argument-in-java5-varargs.html"" rel=""nofollow"">link</a> above, then you will waste time allocating memory on <a href=""http://en.wikipedia.org/wiki/Heap_(programming)#Dynamic_memory_allocation"" rel=""nofollow"" title=""wiki"">heap</a> as well as making your garbage collector busy.</p>

<p>On the other hand, I'm not sure how much optimization is being done, so it could not be that horrific. However you can make sure that no arrays will be created, by creating your own 1 array and keep using that:</p>

<pre><code>YourType[] arr3 = new YourType[3]; //declared as field
...
arr3[0] = a;
arr3[1] = b;
arr3[2] = c;
add(arr3);
</code></pre>

<p>But this is not thread-safe, so in multithread enviroment, make sure that each thread uses different array.</p>
"
"25307787","<p>Float, Double, float, double are not accurate in java. For example:</p>

<pre><code>double number1 = 0.58 * 100;    
System.out.println("""" + number1);
</code></pre>

<p>and the output is 57.99999999999999 not 58 as expected. BigDecimal class can be used instead for accurate performance.</p>
"
"25231250","<p>You can simply add.</p>

<pre><code>summary += word;
</code></pre>
"
"25179563","<p>I should not answer that question but well..   </p>

<pre><code>public static void main(String[] args)
    {
        double age1 = 18;
        double age2 = 35;
        double age3 = 50;
        double age4 = 44;
        double averageAge = (age1 + age2 + age3 + age4) / 4;
        DecimalFormat df = new DecimalFormat(""#."");
        String averageAgeFormatted = df.format(averageAge);
        System.out.println(averageAgeFormatted);
    }    
</code></pre>

<p>Use double for better precision but ideal solution will be if you would use BigDecimal  </p>
"
"25241207","<p>You can add this to your command line : <code>mvn install -Dmaven.test.failure.ignore=true</code>
    or use the below plugin in your pom.xml :</p>

<pre><code>&lt;plugin&gt;
    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
    &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;
    &lt;version&gt;${surefire.plugin.version}&lt;/version&gt;
    &lt;configuration&gt;
        &lt;!-- Build, even if tests fail --&gt;
        &lt;testFailureIgnore&gt;true&lt;/testFailureIgnore&gt;
    &lt;/configuration&gt;
&lt;/plugin&gt;
</code></pre>

<p>So even if any of your test fails it will ignore and continue your build process without failures.</p>
"
"25419160","<p>You create session with <code>HttpServletRequest</code> object as follows.</p>

<pre><code>HttpSession session = httpServletRequest.getSession();
</code></pre>

<p>This will give you new session if one is not already created or return existing session object.</p>
"
"25334560","<p>First of all, previous answers are correct and around the same point. You MUST let the compiler know that the you want to use (x) as a child and not parent.</p>

<p>So, and sticking with your code sample, the answer is to modify the System.out statement to the following:</p>

<pre><code> System.out.println(((Child)x).getValue());
</code></pre>
"
"25419704","<p>somewhere in you method <code>myPersonalMethodThatReturnHttpSessionObject()</code> add the following line</p>

<pre><code>HttpSession session = request.getSession(false); 
</code></pre>

<p>This will help you to find valid session.</p>
"
"25242479","<p>you can use M D answer if you want to use intent. if you want to access String from Main Activity.java you can do like this</p>

<pre><code>in your **MainActivity**

//declare a method
public static String getString() {

   String result;        

   // assign value to string here
     result = ""your assingment""

     return result;
}
</code></pre>

<p>and in your another activity</p>

<pre><code>//get value like this

  String string = MainActivity.getString();
</code></pre>

<p>This way is used to access variable whenever required.</p>
"
"25208567","<p><code>if</code>, <code>else if</code>, and <code>else</code> statements always check for truth. So <code>if(run)</code> is the same thing as <code>if(run==true)</code> or ""if run is true then...""</p>
"
"25308666","<p>Yes, you can. But this will be read as a <strong>single parameter</strong>. So you have to split it by ""|"".</p>

<p>Make sure that whole String is enclosed with <code>""</code> (double quotes).</p>

<pre><code>String[] data=null;
if(args.length&gt;0){
  data = args[0].split(""|"");
}
</code></pre>

<p>Then the String array <code>data</code> contains <code>{""something one"",""something two"",""something three""}</code></p>

<p>But I'm not quite sure why are you trying to do this.</p>
"
"25337326","<p>i have taken this table from java docs. </p>

<pre><code>Letter  Date or Time Component  Presentation    Examples
G   Era designator  Text    AD
y   Year    Year    1996; 96
M   Month in year   Month   July; Jul; 07
w   Week in year    Number  27
W   Week in month   Number  2
D   Day in year Number  189
d   Day in month    Number  10
F   Day of week in month    Number  2
E   Day in week Text    Tuesday; Tue
</code></pre>

<p>In your case just replace""Y"" to ""y"" 
 you can see <a href=""http://docs.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html"" rel=""nofollow"">Docs here</a></p>
"
"25406943","<p>You know the quote about regexps ...
Well, it doesn't help.</p>

<p>What does help, however, are (like usual) tests. And regular expressions can be tested online using websites such as <a href=""http://www.regexplanet.com/advanced/java/index.html"" rel=""nofollow"">RegExp Planet</a></p>

<p>So, when using as test string <code>{a}{long}{text with spaces}</code> I can find as a ""good"" regexp the following <code>\{([^\}]*)\}</code>. And, to quote the source site</p>

<blockquote>
  <p>Regular Expression    {([^}]<em>)}<br>
  as a Java string  ""\{([^\}]</em>)\}""</p>
</blockquote>

<p>Cause one shouldn't forget to add the double backslashes</p>
"
"25502112","<p>Try the follwing:</p>

<pre class=""lang-java prettyprint-override""><code>boolean b = ( val.equals(""b"") || val.equals(""t"") ) ? false : true;
return b;
</code></pre>
"
"25352073","<pre><code>public int testEqualsIntern() {
    int count = 0;
    String str = EMPTY;

    for(int i = 0; i &lt; ITERATIONS; i++) {
        if(str.equals(EMPTY)) {
            count++;
        }
    }
    return count;
}
</code></pre>

<p>here str.equals(EMPTY) will first check equality by == and it will return true, as both str and EMPTY both has same reference and are in string pool and the operation will become faster, but in case </p>

<pre><code>public int testEqualsNew() {
    int count = 0;
    String str = NEW_EMPTY;

    for(int i = 0; i &lt; ITERATIONS; i++) {
        if(str.equals(EMPTY)) {
            count++;
        }
    }
    return count;
}
</code></pre>

<p>EMPTY string is in string pool while NEW_EMPTY is not part of pool, and both has different references as EMPTY one is literal constants and NEW_EMPTY is not. so equals() first try to compare equality by == which will return false as both has different references, and the it will check content, so in this case equals() will take more time.</p>
"
"25298730","<p>Try something like this</p>

<pre><code>String extension = """";
int i = fileName.lastIndexOf('.');
if (i &gt;= 0) { extension = fileName.substring(i+1); }
</code></pre>

<p>which would produce the extension not including the ""."" so Notepad.txt this syntax would produce txt --- Or word.docx this syntax would produce docx</p>
"
"25464867","<p>Only one class can be declared public within a file and his name must coincide with the file name ( without the extension ). </p>

<p>Try renaming your file to <code>HackerRank.java</code>.</p>

<p>Alternatively, you can change your public class' name:</p>

<pre><code>public class YourFileName{
    ...
}
</code></pre>
"
"25326056","<p>You may want to use something like the code below (where <code>secondsToWait</code> holds the maximum number of seconds you want to wait to see if the <code>condition()</code> turns true. The varialbe <code>isCondetionMet</code> will contain true if the condition was found, or false if the code timed out waiting for the condition.</p>

<pre><code>        long endWaitTime = System.currentTimeMillis() + secondsToWait*1000;
        boolean isConditionMet = false;
        while (System.currentTimeMillis() &lt; endWaitTime &amp;&amp; !isConditionMet) {
            isConditionMet = condition();
            if (isConditionMet) {
                break;
            } else {
                Thread.sleep(1000);
            }
        }
</code></pre>
"
"25377577","<p>Try this</p>

<pre><code>String IPADDRESS_PATTERN = 
    ""(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)"";

Pattern pattern = Pattern.compile(IPADDRESS_PATTERN);
Matcher matcher = pattern.matcher(ipString);
    if (matcher.find()) {
        return matcher.group();
    }
    else{
        return ""0.0.0.0"";
    }
</code></pre>

<p><code>Credits:</code> <a href=""http://stackoverflow.com/questions/15875013/extract-ip-addresses-from-strings-using-regex"">Extract ip address from string in java</a></p>
"
"25541766","<p>Try</p>

<pre><code>DecimalFormat decimalFormat = new DecimalFormat(""#.##"");
String string1 = decimalFormat.format(10.000);
</code></pre>
"
"25386767","<p>I think you want to initialize the List with an object in it:</p>

<p>Try using an instance block, like this:</p>

<pre><code>List&lt;String&gt; list = new ArrayList&lt;String&gt;() {{
  add(""Egg"");
}};
</code></pre>
"
"25541899","<p>Try regex like this :</p>

<pre><code>public static void main(String[] args) {
    String s = ""10.0"";
    System.out.println(s.replaceAll(""[0]+$"", """").replaceAll(""(\\.)(?!.*?[1-9]+)"", """"));

}

O/P:
10

input :String s = ""10.0750"";
O/P : 10.075

input : String s = ""10.2750"";
O/P : 10.275
</code></pre>
"
"25541943","<p>try regex</p>

<pre><code>s = s.replaceAll(""\\.?0+$"", """");
</code></pre>
"
"25386792","<p>Add the command to add the object to the collection in the constructor.( But this ill advise)</p>

<p>You can create an auxiliary class that will create that object and label to the collection.</p>

<pre><code>class  WeaponFactory
{
  Collection c;
  public WeaponFactory(Collection coll){c=coll;}
  public Weapon makeWeapon(String text)   // Makes sense when the object is not String , like a Weapon class which also contains stats or something
  {
   Weapon w = new Weapon(text)
   c.add(w);
   return w;
  }
}


class Weapon
{
  String name;
  public Weapon(String text)
  {
    name = text;
  }
}
</code></pre>
"
"25519838","<p>If SuperCsvException is subclass of Exception try something like this:</p>

<pre><code>    Exception ex=null;
    try {
        while ((testBean = csvReader.read(TestBean.class, headers, getCellProcessors())) != null) {
            System.out.println(""no excpetion"");
            i = 5;
        }
    } catch (SuperCsvException csvExc) {
        System.out.println(""superCSV excpetion"");
        i = 0;
        ex=csvExc;
    } catch (Exception ex) {
        System.out.println(""excpetion"");
        i = 0;
    }
    Assert.assertNotNull(ex);
</code></pre>
"
"25525760","<p>if you are running windows
goto: </p>

<blockquote>
  <p>C:\Users\Apostolis\AppData\Roaming\NetBeans\8.0\apache-tomcat-8.0.3.0_base\conf</p>
</blockquote>

<p>and there change the tomcat-users accordingly
e.g</p>

<pre><code>&lt;tomcat-users&gt;
&lt;user username=""ide"" password=""Vh4fsrwh"" roles=""manager-script,admin""/&gt;
&lt;/tomcat-users&gt;
</code></pre>

<p>After that from Netbeans, when asked enter the username and pass e.g ide,Vh4fsrwh</p>
"
"25528569","<pre><code>TreeUtils.expandAll(tree, true);
</code></pre>
"
"25592859","<p>Although the solution shown by maszter works, it is a linear search so isn't as efficient as some of the other search methods. These include binary search etc. and they are provided with the class <code>java.util.Arrays</code> in Java with the syntax:</p>

<pre><code>Arrays.binarySearch(array, word); //A much faster approach
</code></pre>

<p>If more speed is necessary and searching is the main use of the array, I would recommend using a HashMap or HashSet instead.</p>
"
"25445992","<p>Here is a return method I made not too long ago for myself. It requires java 5 
and up I believe. Badically, you put a long of the time in millis and it returns a perfectly formatted string that is easier to read, try it:</p>

<p><code>public static String getTime(long time){ 
    long timeToEdit = time; String textToDraw = """";                  if(TimeUnit.MILLISECONDS.toMinutes(time) &gt;= 10){
    textToDraw = textToDraw + TimeUnit.MILLISECONDS.toMinutes(time);     }else{ textToDraw = textToDraw + ""0"" + TimeUnit.MILLISECONDS.toMinutes(time); } timeToEdit -= TimeUnit.MINUTES.toMillis(TimeUnit.MILLISECONDS.toMinutes(timeToEdit)); if(TimeUnit.MILLISECONDS.toSeconds(timeToEdit) &gt;= 10){ textToDraw = textToDraw + "":"" + TimeUnit.MILLISECONDS.toSeconds(timeToEdit); }else{ textToDraw = textToDraw + "":0"" + TimeUnit.MILLISECONDS.toSeconds(timeToEdit); } timeToEdit -= TimeUnit.SECONDS.toMillis(TimeUnit.MILLISECONDS.toSeconds(timeToEdit)); if(TimeUnit.MILLISECONDS.toMillis(timeToEdit) &gt;= 100){ textToDraw = textToDraw + "":"" + TimeUnit.MILLISECONDS.toMillis(timeToEdit); }else if(TimeUnit.MILLISECONDS.toMillis(timeToEdit) &gt;= 10) { textToDraw = textToDraw + "":0"" + TimeUnit.MILLISECONDS.toMillis(timeToEdit); }else{ textToDraw = textToDraw + "":00"" + TimeUnit.MILLISECONDS.toMillis(timeToEdit); } return textToDraw; }</code></p>

<p>Sorry for the ugly code formatting, im on mobile, its kinda hard to make t look nice, hopefully someone will edit it.</p>
"
"25478676","<p>Use a foreach with a boolean var</p>

<pre><code>boolean isTheSame;
For(String myArrayCodes; code;) {
  if (userCode.equals(myArrayCodes) || oldUser.equals(myArrayCodes))
    isTheSame = true;
  break;
  }
}

if (isTheSame) { // usercode or oldUser is on array
 doSomething();
}
else {
}
</code></pre>
"
"25565029","<p>Last digit You are given two numbers.</p>

<p>Given the following sequence:</p>

<pre><code>[a, a2, a3, … an-1, an]
</code></pre>

<p>calculate how many times each digit from 0 to 9 is the last digit of an element in the sequence.<br>
Your program should accept a filename as an argument that contains the input. Every line of the input file contains a pair of integers <code>a</code> and <code>n</code>.</p>

<p>Input/Output Specifications</p>

<p>Examples For example, the following input:</p>

<pre><code>a = 2, n=7
</code></pre>

<p>would produce the following output:</p>

<pre><code>0 : 0, 1 : 0, 2 : 2,3 : 0 ,4 : 2, 5 : 0, 6 : 1 ,7 : 0 , 8 : 2 , 9 : 0
</code></pre>

<p>since the last digits of the sequence would be <code>[2, 4, 8, 6, 2, 4, 8]</code>. </p>
"
"25590678","<pre><code>byte locationGen = (byte)(Math.random()*7+1);
byte[] locations = {locationGen[0], (byte)(locationGen[0]+1), (byte)(locationGen[0]+2)};
System.out.println(locations[0] + "":"" + locations[1] + "":"" +locations[2]);
</code></pre>

<p>Your loop didn't make much sense, so I dropped it. Arrayinits are done with ""{"" and ""}"" and not ""("" and "")"". Last but not least, there were a few indices missing when you tried to init the array ""locations"".</p>
"
"25590701","<p>I'm guessing you're coming to Java from something else like Python. In Java the parenthesis <code>()</code> are only used for order of operations, not lists, tuples or anything else. Furthermore, the comma operator in general expressions is a ""return last thing in the list"" type of operator. It's best to explain with an example:</p>

<pre><code>int i = 1,2,3,4; // same as int i = (1,2,3,4);
System.out.println(i); // prints 4
</code></pre>

<p>So your code needs to be something along the lines of (not sure if Java has changed recently to allow assigning arrays like such):</p>

<pre><code>byte[] locationGen = new byte[1];
for(byte i = 0; i &lt; locationGen.length; i++) {
    locationGen[i] = (byte)(Math.random()*7+1);
}
byte[] locations = {locationGen[0], locationGen[0]+1, LocationGen[0]+2};
</code></pre>

<p>Also, if you wanted to merge three arrays, you'll have to do that with another loop like such:</p>

<pre><code>byte[] locationGen = new byte[1];
for(byte i = 0; i &lt; locationGen.length; i++) {
    locationGen[i] = (byte)(Math.random()*7+1);
}
byte[] locations = new byte[locationGen.length*3];
for(int i = 0; i &lt; locationGen.length; ++i) {
    locations[i] = locationGen[i];
    locations[i+locationGen.length] = locationGen[i] + 1;
    locations[i+2*locationGen.length] = locationGen[i] + 2;
}
</code></pre>

<p>Also, as a small comment on your code, I don't see a good reason to use a byte as the counter in the for loop. All Java arrays are indexed by <code>int</code>s and using a byte likely won't save you anything. Stack variables (locals) tend to take up at least an <code>int</code>s worth of space anyway so you're not saving space, and operating on it as a strict byte likely wastes processor time. Just use an <code>int</code>.</p>
"
"25484556","<p>Have you tried to decrease the file buffer size? Maybe you should do an optimized approach to that, It looks like your buffer is getting fully loaded with the 6Gb file, that's what is blowing your app.</p>

<p>You could try increasing your jvm's HEAP size. You could run your code using
<code>java -Xms[initial heap size] -Xmx[maximum heap size]</code></p>

<p>Check <a href=""http://stackoverflow.com/questions/1596009/java-lang-outofmemoryerror-java-heap-space"">this</a> answer and see if it helps.</p>
"
"25696552","<p>Splitting the string should work faster if you write your code well enough. In fact if you already have the int-id, I see no reason to send only the string and maintain a mapping.</p>

<p>Putting into <code>HashMap</code> would need hashing the incoming string every time. So you are basically comparing the performance of the hashing function vs the code you write to append (prepending might be a bit more tricky) on sending end and to parse on receiving end.</p>

<p>OTOH, only 450 strings aren't a big deal, and if you're into it, writing your own hashing algo/function would actually be the most elegant and performant.</p>
"
"25636924","<p>Insert newline characters in the string.</p>

<h2>Code</h2>

<pre><code>String mQuestion = "" Hi I am an \n example of a \n string that is \n breaking \n correctly  on \n  
    words"";
textView.setText(mQuestion);
</code></pre>

<h2>Output:</h2>

<p><img src=""http://i.stack.imgur.com/BrFd1m.png"" alt=""enter image description here""></p>
"
"25649015","<p>class Insertionsort
{</p>

<p>int A[] = {5,2,4,6,1,3};</p>

<p>void insertionSort()
{</p>

<pre><code>for(int j=1;j&lt;A.length;j++)
{
int key = A[j];
int i = j-1;
    while(i&gt;=0 &amp;&amp; A[i]&gt;key)
    {
        A[i+1]=A[i];
        i=i-1;
    }
    A[i+1]=key;
}

for(int j = 0;j&lt;A.length;j++)
{
System.out.print(A[j] + "" "");
}
</code></pre>

<p>}</p>

<p>public static void main(String args[])
{</p>

<p>Insertionsort is = new Insertionsort();</p>

<p>is.insertionSort();</p>

<p>}</p>

<p>}</p>
"
"25751687","<p>You need to use
<code>for(i =0; i&lt;100; i++)</code>
cuz your version is ended right away</p>
"
"25680069","<p>Please try this. Remove all the spaces when defining field name with a ? and check</p>

<pre><code> SELECT data FROM test where id=?
</code></pre>
"
"25781834","<p>line <code>#1</code> will call first constructor<br>
line <code>#2</code> will call second</p>

<pre><code>public class MyObject {

  public MyObject(String arg) {
    // ...
  }

  public MyObject(String[] args) {
    // ...
  }

}
</code></pre>
"
"25566474","<p>I simplified your code to this one. This might help.</p>

<pre><code>String str = ""WOMAN"";

List&lt;String&gt; tempArr = new ArrayList&lt;String&gt;();

for (int i = 1; i &lt; str.length(); i++) {
    for (int j = i; j &lt;= str.length(); j++) {
        tempArr.add(str.substring(i - 1, j));
    }
}

String[] res = tempArr.toArray(new String[tempArr.size()]); 
</code></pre>
"
"25702916","<p>You create a JTexfield, then you need add the event keyTyped and add this code:</p>

<pre><code>JTextField txtFirstName = new JTextField();
txtFirstName.addKeyListener(new KeyAdapter() {
    @Override
    public void keyTyped(KeyEvent arg0) {
        char charecter = arg0.getKeyChar();
            if (Character.isLowerCase(charecter)) {
                arg0.setKeyChar(Character.toUpperCase(charecter));
            }
        }
    });
</code></pre>
"
"25796830","<p><code>\\(a)[0-9]+</code> this sould work</p>

<p>you cant try your regexps on this page or some similar</p>

<p><a href=""http://regex101.com/"" rel=""nofollow"">http://regex101.com/</a></p>
"
"25572599","<p>Something as below</p>

<pre><code>FTPFile[] files = client.list();
int size = files.length;
int i =0;
String a []=new String[size];

    for (FTPFile file : files) {
          System.out.println(file.getName());

           a[i] = file.getName();
           i++;
 }
</code></pre>
"
"25694732","<p>Call your write() method like this:</p>

<pre><code>.write((new String()).getBytes());
</code></pre>

<p>This will make your file empty. If that doesn't works, try with this:</p>

<pre><code>FileOutputStream erasor = new FileOutputStream(""filename.ext"");
erasor.write((new String()).toByteArray());
erasor.close(); 
</code></pre>

<p>Or just try to overwrite the file</p>

<pre><code>//open file in override mode
FileOutputStream out = new FileOutputStream(""filename.ext"");
//now anything that we write here will remove the old one so just write space ("""") here 
</code></pre>
"
"25724992","<pre><code>class prime {

    public static void main ( String args [ ] ) {

        int x, i, c = 0;

        x = Integer.parseInt(args[0]);

        for (i = 1; i &lt;= x; i++) {
            if (x % i == 0) {
                c++;
            }
        }

        if (c == 2) {
            System.out.println(""prime number"");
        } else {
            System.out.println(""not a prime number"")
        }
    }
}
</code></pre>
"
"25730761","<p>Thanks for the answers. Actually all I needed was to generate <code>equals()</code> and <code>hashode()</code> methods to include only <code>id</code> field on this occasion. I did this by selecting my constructor Source > Generate hashCode() and equals()...</p>
"
"25744883","<p><code>Iterator</code> is for iterating, not adding objects.</p>

<p><code>List</code> on the other hand is iterable (therefore it has <code>Iterator</code>) but also it is able to manage entities, therefore the <code>add</code>.</p>

<p>See definition of <code>Iterable</code> and <code>List</code> to see what is their purpose.</p>
"
"25646438","<pre><code>Object object=Class.forName(className).getConstructor().newInstance();
</code></pre>
"
"25646542","<pre><code>  // Complete class name, including Package
  String name = ""com.foo.Emp"";

  Object object = Class.forName(name).getConstructor().newInstance();
  if (object instanceof Emp) {
     // Specific logic for Emp objects
  } else if (object instanceof Dept) {
     // Specific logic for Dept objects
  }
</code></pre>

<p>Hope it helps you</p>
"
"25743384","<p>It is not necessary to create new boolean field for checking fragment's adding state. There is also a method in fragment. 
<strong>Just use it: 
<code>myFragment.isAdded()</code></strong></p>
"
"25770433","<p>The first program is:</p>

<pre><code>class timepass {
    public static void main() {
        for (int a = -1;a&lt;=5;a++) {
            for(int b = 5; b &gt;= a;b--) {
                System.out.print(""*"");   
            }
            System.out.println();
            // enter code here
        }
    }
}
</code></pre>

<p>The second program is:</p>

<pre><code>class timepass {
    public static void main() {
        for(int i = 1;i&lt;= 6;i++) {
            for(int j = 1;j&lt;= i ;j++) {
                System.out.print(""*"");
            }
            System.out.println();
        }
    }
}
</code></pre>
"
"25958035","<p>Generally, you should just convert the value to a <code>String</code> then use <code>.length()</code> property.</p>

<p>If you want to make a special case where doubles that have a <code>.0</code>, should only return their integer length, do the following. Check if the value is equal to its rounded integer value.</p>

<pre><code>public static int method(double value) {
    int rounded = (int) value;
    if (value == rounded) {
        return String.valueOf(rounded).length();
    } else {
        return String.valueOf(value).length();
    }
}

System.out.println(method(5.0)); // prints 1
System.out.println(method(5.00000)); // prints 1
System.out.println(method(55555.00)); // prints 5
</code></pre>
"
"25958050","<p>Overload your method with an int argument method, and then apply your logic as before.</p>

<pre><code>public int method(double d){
//your logic
}

public int method(int i){
//your logic
}`enter code here
</code></pre>
"
"25958103","<pre><code>int method(double value) { 
    if (value == (int) value) 
        return Integer.toString((int)value).length(); 
    else return Double.toString(value).length(); 
}
</code></pre>
"
"25788263","<p>change your string like this</p>

<pre><code>String lang = ""fr,de,gb,nl,se,es"";
</code></pre>

<p>or change like @TheLostMoind said</p>
"
"25777454","<p>You have a variable called ""currency"" and this is assigned to an Object of type NumberFormat. The only non-object types in java are the primitive types - <code>int, long, float, boolean</code> and so on, however there are equivalent objects for each of these.</p>

<p>I expect the confusion is coming from the fact that NumberFormat uses a static method to create its object, so it's doing the <code>new</code> for you under the covers.</p>

<p>Your book will probably get to the bit about Objects vs Classes as described here:  <a href=""http://docs.oracle.com/javase/tutorial/java/javaOO"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/java/javaOO</a></p>
"
"25811468","<p>There might be a couple of problems:</p>

<ol>
<li><p>If the class is in a package, make sure you specify it. eg: <code>package com.pak;</code></p></li>
<li><p>The class with main method always needs to be public. <code>public class apples{}</code></p></li>
</ol>
"
"25847590","<p>First, your prgram would not compile - main() method has wrong signature. 
Use</p>

<pre><code>public static void main(String[] args) {
...
}
</code></pre>

<p>Then change loop storing values in new array to:</p>

<pre><code>for(int i = x; i &gt;= 0; i--) {
    b[x - i] = a[i];
}
</code></pre>
"
"25865290","<p>Create xml file : </p>

<pre><code>new FileInputStream(""xml Store - Copy.xml"") ;// result xml file format incorrect ! 
</code></pre>

<p>so that, when parse the content of the given input source as an XML document
and return a new DOM object.</p>

<pre><code>Document original = null;
...
original.parse(""data.xml"");//input source as an XML document
</code></pre>
"
"25865520","<p>Create a Thread class and another Class for your methods</p>

<p>Now:</p>

<pre><code>public class ThreadTest implements Runnable {

    private int functionNumber;
    private int time2start;
    private YourClass obj;

    public ThreadTest(int functionNumber, int time2start, YourClass obj) {
        this.functionNumber = functionNumber;
        this.time2start = time2start;
        this.obj = obj;
    }

    public void run() {
        try {
            Thread.currentThread().sleep(time2start);
        } catch (Exception ex) {
        }//Time Delay before executing methods
        switch (functionNumber) {
            case 1:
                obj.runFirst();
                break;
            case 2:
                obj.runSecond();
                break;
            case 3:
                obj.runThird();
                break;
            case 4:
                obj.runFourth();
                break;
            //keep adding
        }
    }
}
</code></pre>

<p><br/><br/>then Class for your methods :</p>

<pre><code>public class YourClass {

    public void runFirst() {
        System.out.println(""First method"");
    }

    public void runSecond() {
        System.out.println(""Second method"");
    }

    public void runThird() {
        System.out.println(""Third method"");
    }

    public void runFourth() {
        System.out.println(""Fourth method"");
    }

    public void runFifth() {
        System.out.println(""Fifth method"");
    }

    public void runSixth() {
        System.out.println(""Sixth method"");
    }
}
</code></pre>

<p><br/><br/>Now this is the method for onClick event for the button:</p>

<pre><code>//on button click

ThreadTest th1 = new ThreadTest(1, 0, obj);//here obj is YourClass
ThreadTest th2 = new ThreadTest(2, 65000, obj);//65 SECONDS
//... keep adding

Thread thread1 = new Thread(th1);
Thread thread2 = new Thread(th2);
//...keep adding

thread1.start();
thread2.start();
//...keep adding
</code></pre>
"
"25874140","<p>The highest bit of a signed integer is the sign bit.   So, if you overflow an operation into that bit, you will get a negative number.   In this case you are doing it by casting.</p>

<pre><code>= 1101 1110 0000 1011 0110 1011 0011 1010 0111 0110 0011 1111 1111 1111 1111

Truncated to (int):
                     1010 0111 0110 0011 1111 1111 1111 1111


Twos' compliment transform:

                     0101 1000 1001 1100 0000 0000 0000 0001 = 1486618625
</code></pre>
"
"25912629","<p>To find this, you can use Java base Lib :</p>

<pre><code>Calendar calendar = new GregorianCalendar();
Date trialTime = new Date();   
calendar.setTime(trialTime); 
//Or setGregorianChange(date);   
System.out.println(""Week number:"" + 
    calendar.get(Calendar.WEEK_OF_YEAR));
</code></pre>

<p>Have a good day :)</p>

<p><em><a href=""http://week-number.net/programming/week-number-in-java.html"" rel=""nofollow"">http://week-number.net/programming/week-number-in-java.html</a></em></p>
"
"25885874","<p>try changing <code>input</code> to <code>object</code> in your if statement. and <code>=</code> to <code>==</code></p>
"
"25892824","<pre><code>Closing zin.close() is enough
Let me explain the sequence - when you call - zin.close() it's call close of the super class InflaterInputStream. The close method eventually call close on the stream provided as constructor which is BufferedInputStream.

Close method of ZipInputStream - 
 /**
     * Closes this input stream and releases any system resources associated
     * with the stream.
     * @exception IOException if an I/O error has occurred
     */
    public void close() throws IOException {
        if (!closed) {
        **super.close();**
            closed = true;
        }
    }

Close method of InflaterInputStream -

public void close() throws IOException {
        if (!closed) {
            if (usesDefaultInflater)
                inf.end();
        **in.close();**
            closed = true;
        }
    }

--
Close method of BufferedInputStream set the input stream as null ( in == null)-

 /**
     * Closes this input stream and releases any system resources 
     * associated with the stream. 
     * Once the stream has been closed, further read(), available(), reset(),
     * or skip() invocations will throw an IOException.
     * Closing a previously closed stream has no effect.
     *
     * @exception  IOException  if an I/O error occurs.
     */
    public void close() throws IOException {
        byte[] buffer;
        while ( (buffer = buf) != null) {
            if (bufUpdater.compareAndSet(this, buffer, null)) {
                InputStream input = in;
                **in = null;**
                if (input != null)
                    input.close();
                return;
            }
            // Else retry in case a new buf was CASed in fill()
        }
    }
</code></pre>
"
"25956398","<p>Simply for backward compatibility.  Although generics are useful for restricting the contents of a collection to a homogeneous type, it is still a valid use case to have a collection contain heterogeneous objects if you so choose.</p>

<pre><code>public static void main(String[] args)
{
    List&lt;String&gt; homogeneousStringList = new ArrayList&lt;String&gt;();

    homogeneousStringList.add(""Foo"");
    homogeneousStringList.add(""Bar"");

    List heterogeneousObjectList = new ArrayList();

    heterogeneousObjectList.add(""Foo"");
    heterogeneousObjectList.add(Integer.valueOf(1));
    heterogeneousObjectList.add(new Date());

    System.out.println(homogeneousStringList.toString());
    System.out.println(heterogeneousObjectList.toString());
}
</code></pre>

<p>Produces the following output:</p>

<p>[Foo, Bar]</p>

<p>[Foo, 1, Sun Sep 21 00:36:59 MDT 2014]</p>
"
"25922962","<p>You need to use <code>Character#toUpperCase</code>  and <code>Character#toLowerCase</code>   </p>

<pre><code>public static void main(String[] args){


            StringBuilder input = new StringBuilder(""800 Test St NY"");
            for (int i = 0; i &lt; input.length(); i++) {
                System.out.println(input.charAt(i));

                if(Character.isDigit(input.charAt(i))){
                    input.replace(i,i+1,""*"");
                }
                else if(Character.isUpperCase(input.charAt(i))) {
                    input.replace(i, i+1,Character.toString(Character.toLowerCase(input.charAt(i))));
                }
                else if(Character.isLowerCase(input.charAt(i))) {
                    input.replace(i, i+1,Character.toString(Character.toUpperCase(input.charAt(i))));
                }
                System.out.println(input);
            }
        }
</code></pre>

<p>prints (the output of above code:)</p>

<pre><code>8
*00 Test St NY
0
**0 Test St NY
0
*** Test St NY

*** Test St NY
T
*** test St NY
e
*** tEst St NY
s
*** tESt St NY
t
*** tEST St NY

*** tEST St NY
S
*** tEST st NY
t
*** tEST sT NY

*** tEST sT NY
N
*** tEST sT nY
Y
*** tEST sT ny
</code></pre>
"
"25940963","<p>That's because <code>EST</code> is <code>ET</code> outside of saving and its shift is constant and it complementary zone for daylight saving period is <code>EDT</code>.</p>

<p>Ergo you should use <code>ET</code> to get the expected behavior.
More on <a href=""http://en.wikipedia.org/wiki/Eastern_Time_Zone"" rel=""nofollow"">Wikipedia</a></p>
"
"25941208","<p>You can't use conditional statements with <code>switch</code>.</p>

<p>But you CAN do it with <code>if</code> statements! If you have a loop you can use <code>continue</code> to stop any upcoming lines and start from the beginning of the innermost loop.</p>

<pre><code>if(age&gt;76){
    // Code...
    continue;
}else if(age&gt;50){
    // More Code...
    continue;
}else{
    // Even more code...
    continue;
}
</code></pre>
"
"25986203","<p>This may help...</p>

<pre><code>int integer = 1;
    while(integer&lt;=100){
        System.out.print("" ""+integer++);
        if(integer%10==0){
            System.out.println("" ""+integer++);
            //System.out.println();
        }
    }
</code></pre>
"
"25945242","<p>Use the logical and comparison operator <code>&amp;&amp;</code></p>

<pre><code>for (int i=n1; i &lt; n2; i++){
    if (i % 2 == 0 &amp;&amp; i % 3 != 0) {
        System.out.println(i);
    }
}
</code></pre>

<p>Your <code>if</code> conditional now asks if ""i is divisible by 2 AND is not divisible by 3""</p>
"
"26236372","<p>Create a package say ImgPack and paste all your images to this package and access all the images using</p>

<pre><code>    ImageIcon ii = new ImageIcon(System.getProperty(""user.dir"")+""\\src\\ImgPack\\&lt;Imagename.extention&gt;"");
</code></pre>
"
"26005362","<p>assuming the labels between ""&lt;"" &amp; "">"" has to match and the numbers in between are identical<br>
use this pattern   </p>

<pre><code>^\d+\s&lt;([A-Z]+)&gt;\s(\d+\s)(\2)+&lt;\/(\1)&gt;$  
</code></pre>

<p><a href=""http://regex101.com/r/yW4aZ3/10"" rel=""nofollow"">Demo</a></p>

<p>or if numbers in the middle do not have to be identical and or optional:  </p>

<pre><code>^\d+\s&lt;([A-Z]+)&gt;\s(\d+\s)*&lt;\/(\1)&gt;$
</code></pre>
"
"26059709","<p>I have the solution to my post... thanks to <strong>Sander</strong>, give me some ideas...</p>

<p>The thing was change the <code>for</code> to <code>while ((CURSOR = ids.getNextCursor()) != 0);</code>.</p>

<p>And... <code>user = twitter.showUser(id);</code></p>

<p>Playing with showUser makes it possible to  get, with a slowly time, all the info about all my friends...</p>

<p>That's all. Don't use <em>user.get(i);</em></p>
"
"26272885","<p>I have used enum to store all possible return types.</p>

<pre><code>public enum Type {
INT, STRING
}
</code></pre>

<p>Define subclasses for Request and Response classes.</p>

<p>Each subclass of Request class overrides its execute method and returns its corresponding Response's subclass instance.</p>

<pre><code>public class RequestINT extends Request {
public RequestINT(){
    super(Type.INT);
}
@Override
public Response execute() {
    return new ResponseINT();
}
}


public class ResponseINT extends Response {
@Override
public Type getResponse() {
    return Type.INT;
}
}
</code></pre>

<p>Finally use that in your calling method</p>

<pre><code>public class TestExec {

public static void main(String[] args) {

    Request request1 = new RequestINT();
    Response response1 = request1.execute();
    System.out.println(response1.getResponse());

    Request request2 = new RequestSTRING();
    Response response2 = request2.execute();
    System.out.println(response2.getResponse());

}

}
</code></pre>
"
"26137657","<p>Considering parametrized build as in the case above e.g you must have set variable called <code>environment</code> in the job and getting its value from user.Now you can refer to its value in build.xml using <code>property name=""environment"" value=""$environment}</code></p>
"
"26286060","<p>How about like this ?</p>

<pre><code>package com.example.stackoverflow.oop;

public class Executor {

    public static void main(String[] args) throws Exception  {
        String req = ""helloworld"";
        String res = execute(req, String.class);
        System.out.println( ""Res:"" + res );
    }

    public static &lt;T,R&gt; R execute(T req, Class&lt;R&gt; res) throws Exception {
        System.out.println(req.toString());
        Object object = res.newInstance();
        return res.cast(object);
    }

}
-------------------------------------------------------------------------
helloworld
Res:
</code></pre>

<p>I used string as response since integer expects an argument.</p>
"
"26071486","<p><strong>Try this way,hope this will help you to solve your problem.</strong></p>

<pre><code>public class ChampionInfo extends FragmentActivity {


    GridView gridtable;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_champion_info);

        gridtable = (GridView) findViewById(R.id.gridtable);
        gridtable.setAdapter(new GridAdapter(this));

    }

    public class GridAdapter extends BaseAdapter {
        private Context mContext;
        private String[] list;
        private int[] champImage;


        public int[] getImage() {
            int[] tempImage = new int[list.length];
            for (int i = 0; i &lt; list.length; i++) {
                tempImage[i] = getResources().getIdentifier(list[i],
                        ""drawable"", getPackageName());
            }
            return tempImage;

        }

        public GridAdapter(Context c) {
            mContext = c;
            list = getResources().getStringArray(R.array.championlist);
            champImage = getImage();
        }

        public int getCount() {
            return champImage.length;
        }

        public Object getItem(int position) {
            return champImage[position];
        }

        public long getItemId(int position) {
            return position;
        }

        // create a new ImageView for each item referenced by the Adapter
        public View getView(int position, View convertView, ViewGroup parent) {
            ImageView imageView;
            if (convertView == null) {
                imageView = new ImageView(mContext);
                imageView.setLayoutParams(new GridView.LayoutParams(85, 85));
                imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
                imageView.setPadding(8, 8, 8, 8);

            } else {
                imageView = (ImageView) convertView;
            }

            imageView.setImageResource(champImage[position]);
            return imageView;
        }

        // Keep all Images in array

    }
}
</code></pre>

<p><strong>Changes :</strong></p>

<p>1.i have change application context to current context using current activity context reference : (new GridAdapter(this)</p>

<p>2.try to find image array in adapter constructor rather at class level.</p>
"
"26287276","<p>keeping it simple:</p>

<pre><code>interface Request&lt;RETURNVALUE&gt;{Response&lt;RETURNVALUE&gt; execute();}

interface Response&lt;RETURNVALUE&gt;{RETURNVALUE getValue();}

//IMPL
class Client{

String requestTypeA(){
    Request&lt;String&gt; q = new RequestA();
    return q.execute().getValue();
}
}

class RequestA implements Request&lt;String&gt;{

@Override
public Response&lt;String&gt; execute() {
    return new ResponseA();
}

}

class ResponseA implements Response&lt;String&gt;{

@Override
public String getValue() {
    return null;
}
}
</code></pre>
"
"26197153","<p>You could do it like this</p>

<pre><code>public abstract class SomeClass&lt;T&gt;{

}

public class StringSomeClass : SomeClass&lt;String&gt;{

}

public class IntegerSomeClass : SomeClass&lt;Integer&gt;{

}
</code></pre>
"
"26337963","<p>about isPrime: First of all, u should loop <code>for( j = 2; j*j &lt;= i; j++)</code></p>

<p><em>the reason for this loop is that if a number isn't prime, its factor must be less or equal to the squared root of i, so there is no need to loop after that point</em>
now, if loop didn't return false - return true`</p>

<p>about second function: use if before checking isPrime - <code>if(isPrime(i)) {add i to list}</code></p>
"
"26337985","<p>see here is your solution.</p>

<pre><code> import java.util.Scanner;
    public class Testing {

        public static void main(String args[]) {
            Scanner scnr = new Scanner(System.in);
            int number = Integer.MAX_VALUE;
            System.out.println(""Enter number to check if prime or not "");
            while (number != 0) {
                number = scnr.nextInt();
                System.out.printf(""Does %d is prime? %s %s  %s %n"", number,
                        isPrime(number), isPrimeOrNot(number), isPrimeNumber(number));
            }
        }


        /*
         * Java method to check if an integer number is prime or not.
         * @return true if number is prime, else false
         */
        public static boolean isPrime(int number) {
            int sqrt = (int) Math.sqrt(number) + 1;
            for (int i = 2; i &lt; sqrt; i++) {
                if (number % i == 0) {
                    // number is perfectly divisible - no prime
                    return false;
                }
            }
            return true;
        }


        /*
         * Second version of isPrimeNumber method, with improvement like not
         * checking for division by even number, if its not divisible by 2.
         */
        public static boolean isPrimeNumber(int number) {
            if (number == 2 || number == 3) {
                return true;
            }
            if (number % 2 == 0) {
                return false;
            }
            int sqrt = (int) Math.sqrt(number) + 1;
            for (int i = 3; i &lt; sqrt; i += 2) {
                if (number % i == 0) {
                    return false;
                }
            }
            return true;
        }


        /*
         * Third way to check if a number is prime or not.
         */
        public static String isPrimeOrNot(int num) {
            if (num &lt; 0) {
                return ""not valid"";
            }
            if (num == 0 || num == 1) {
                return ""not prime"";
            }
            if (num == 2 || num == 3) {
                return ""prime number"";
            }
            if ((num * num - 1) % 24 == 0) {
                return ""prime"";
            } else {
                return ""not prime"";
            }
        }
    }
</code></pre>
"
"26134040","<p>change you Greeter class.</p>

<pre><code>public class Greeter{
   private String inputName;    

   public Greeter(){

   }

   public Greeter (String inputName) {
     this.inputName = inputName;
   }

   public String greet()
   {
      return ""Hello "" + inputName;
   }

}
</code></pre>
"
"26132554","<p>You are missing <code>()</code> after <code>new Random</code>.</p>
"
"26242290","<blockquote>
  <p>Why does this not remove every element in my array?</p>
</blockquote>

<p>After removing each element in ArrayList next elements are moved at its position so for elements like</p>

<pre><code>a,b,c,d
</code></pre>

<p>remove(0) will produce </p>

<pre><code>b,c,d
</code></pre>

<p>but next remove(1) will this time remove element at position 1 </p>

<pre><code>b,c,d
  ^-this one
</code></pre>

<p>so you will end up with </p>

<pre><code>b,d
</code></pre>

<p>and now since size is <code>2</code> max position index is <code>1</code> so your loop ends.</p>

<hr>

<blockquote>
  <p>When i print the arraylist at the end it should be blank but it prints it with some elements still in there.</p>
</blockquote>

<p>If you want to remove all elements in list just use <code>yourList.clear()</code> method or if you want to remove them manually use <code>remove(0)</code> in each iteration (but this will be very inefficient way).</p>
"
"26373802","<p>You can change your <code>for</code> to this:</p>

<pre><code>for (int i = 0; i &lt; length - sub + 1; i++){
    System.out.println(line.substring(i, i + sub));
}
</code></pre>

<p>What this does is iterating from first character to third from last and always <code>substring</code>-ing from index to index + <code>sub</code>.</p>
"
"26248450","<pre><code>public class Assignment {
   private static int top;

   public static void main(String[] args) {
       top = 5;

       recurse("""", 1);
   }

   public static void recurse(String dots, int value) {
       System.out.println(dots + value);
       if (value == top) return;
       recurse(dots + '.', value + 1);
       System.out.println(dots + value);
   }
}
</code></pre>

<p>It executes like this:</p>

<pre><code>recurse("""", 1) {
1  print 1
   recurse(""."", 2) {
.2    print .2
      recurse("".."", 3) {
..3      print ..3
         recurse(""..."", 4) {
...4        print ...4
            recurse(""...."", 5) {
....5           print ....5
                return
            }
...4        print ...4
         }
..3      print ..3
      }
.2    print .2
   }
1  print 1
}
</code></pre>

<p>Now run it in the debugger to learn how it actually works.</p>
"
"26248516","<p>Here is one way to do it.</p>

<p>You pass in your value <code>n</code> twice. The reason is that you use <code>n1</code> to print from <strong><code>1 to n</code></strong>, and you then use <code>n2</code> to print from <strong><code>n to 1</code></strong>. You also pass in a <code>boolean</code> flag that you make true once you switch the printing order. </p>

<p>Further more, you use <code>n2</code> to reverse the value of <code>n1</code> when printing such that:</p>

<pre><code>n1 = 5, print 1
n1 = 4, print 2
// ....
</code></pre>

<p>This is done by the formula <code>n2 + 1 - n1</code> as demonstrated bellow.</p>

<p>Since you said in the comments that you cannot use loops, I made the printing of dots into another recursive function. </p>

<p>Here is the result:</p>

<pre><code>public static void printDots(int val, int condition) { 
    if(val &lt; condition - 1) { 
        System.out.print("".""); 
        printDots(val + 1, condition);
    } 
}

public static void Esc(int n1, int n2, boolean reverse){
    int val = (n2 + 1 - n1); // this gives 1 for n, 2 for n-1, 3 for n-2 etc.
    if(n1 &gt; 1 &amp;&amp; !reverse) {    // print from 1 to n 
        printDots(0, val); // print dots
        System.out.println(val);
        Esc(n1 - 1, n2, reverse);
    } else if(n1 &lt;= n2) {       // print from n to 1
        reverse = true;
        printDots(0, val); // print dots
        System.out.println(val);
        Esc(n1 + 1, n2, reverse);
    }
}

public static void main(String args[]) {
    Esc(5, 5, false);
}
</code></pre>

<p>If you want to use the exact method signature you stated in your question, you can wrap the method I gave you above inside your method:</p>

<pre><code>void Esc(int n) {
    Esc(5, 5, false);
}
</code></pre>

<p>And then call <code>Esc(5)</code> from your <code>main()</code>. You can name the methods the same because java supports <a href=""http://www.java-samples.com/showtutorial.php?tutorialid=284"" rel=""nofollow""><strong><code>method overloading</code></strong></a></p>

<p><a href=""http://ideone.com/qg9CUk"" rel=""nofollow""><strong><code>Here is a running example</code></strong></a></p>

<p>Output:</p>

<pre><code>1
.2
..3
...4
....5
...4
..3
.2
1
</code></pre>
"
"26373857","<p>this code is complicated and the cause why your sub double each loop </p>

<pre><code>   sub= + sub;
</code></pre>

<p>use ++ instead in incrementing sub</p>

<pre><code>for(int i=0; i&lt; length; i = sub){
    System.out.println(line.substring(i,sub));
    sub++;
}
</code></pre>
"
"26258660","<pre><code>  try
            {
                         String conUrl = ""jdbc:odbc:Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ="" + filepath;

                       Class.forName(""sun.jdbc.odbc.JdbcOdbcDriver"");
                           con=DriverManager.getConnection(conUrl);
            }
            catch(SQLException s)
            {
                   System.out.println(s);
            }
</code></pre>

<p>I think this link can help you
<a href=""http://java2carrer.blogspot.in/2013/06/insert-data-into-ms-access-from-excel.html"" rel=""nofollow"">http://java2carrer.blogspot.in/2013/06/insert-data-into-ms-access-from-excel.html</a></p>
"
"26172816","<pre><code>public class q7 {

    public static void main(String[] args) {
        int arr[] = {6, 22, 20, 11, 5, 18, 18, 16, 30, 9, 10, 10, 11, 5, 18, 18, 16};
        for (int i = 0; i &lt; arr.length; i++) {
            int count = 0;
            for (int j = 0; j &lt; arr.length; j++) {
                if (arr[i] == arr[j])
                  count++;
            }
            System.out.println(arr[i] + ""\toccures\t"" + count + "" times"");
        }
    }
}
</code></pre>
"
"26451613","<p>It is not just your <code>ID</code> and your whole objects in the list are the same, because you just use one <code>Customer</code> over and over you have to create new customer in every loop.</p>

<p>I mean <code>temp = new Customer();</code> must be inside your loop</p>
"
"26232608","<pre><code>public void listCharacterCodes(char a, char b){
    int j = (int) b;
    int x = (int) a;
    for(int i=x; i&lt;j ; i++) {
        System.out.println(""'"" + a + ""': "" + i);
    }
}
</code></pre>

<p><em>This</em> compiles OK for me - this is not intented to solve your logic - as others did</p>
"
"26329917","<p>You could break up your speak implementation in to two parts to allow you to pass in the Strings that you want to use for <code>oddSound</code> and <code>evenSound</code>.</p>

<pre><code>public String speak(String what){
    return getSpeakableString(what, new String(), new String());
}
protected String getSpeakableString(String what, String oddSound, String evenSound){
    //this is just copied from what you had in your question, it likely doesn't do what you actually want.
    String speakableString = new String();
    for (int i = 0; i &lt; what.length(); i++) {
        if((((int) what.charAt(i)) &amp; 1) == 1){ 
            speakableString.concat(oddSound); 
        }else if ((((int) what.charAt(i)) &amp; 1) == 0){
            speakableString.concat(evenSound);
        }
    }
    speakableString = speakableString.substring(0, speakableString.length()-1);
    return speakableString;
}

//in subclass
@Override
public String speak(String what){
    return getSpeakableString(what, ""vau"", ""uff"");
}
</code></pre>
"
"26243606","<pre><code>public static void main (String args[]){
    int leapYear = 2001; // initialize leapYear variable to 2001

    while (leapYear &lt;= 2100){
        for (int x = 0; x &lt; 10; x++){ // print ten leap years per line
            if (leapYear &gt; 2100){ // if leapYear is over 2100, stop printing
                break;
            }
            System.out.print(leapYear + "" "");
            leapYear = leapYear + 4;
        }// end of for loop
        System.out.println("" "");
        int x = 0;
    } // end of if statement

}// end of main method
</code></pre>
"
"26258952","<pre><code>for(String s: list){
    System.out.println(s.charAt(0));
}
</code></pre>

<p>Prints the character at the zeroth index of the string for each String <code>s</code> in the list</p>
"
"26257411","<p>I'm not sure of it but i believe, that it is just compiling to Anonymous inner class. <code>Consumer&lt;T&gt;</code> is an interface, so i would say that your example is almost equals to </p>

<pre><code>    giveHello(new Consumer&lt;String&gt;() {

        @Override
        public void accept(String t) {
            System.out.println(t);
        }
    });
</code></pre>

<p><strong>EDIT</strong></p>

<p>after some research, above answer is not complete and valid. Lambda expressions might be translated to anonymous inner class, but don't have to (and they usually don't). </p>
"
"26257441","<p>Lambda's in Java 8 are so called functional interfaces, that is, anonymous interfaces with one <code>default</code> method.</p>
"
"26424114","<p>This is the javascript code</p>

<pre><code>         &lt;script&gt;
  function checkEmail()
      {
     var feedback="""";
   var email=document.getElementById(""email"").value;
  var count=email.length;
  var atpos=email.indexOf('@');
   var atdot=email.lastIndexOf('.');
  var tld=email.substring(atdot);
     if(atpos&lt;1 || atdot&lt;1)
   {
   alert(""Email is  Not Valid"");
    }
      else if(atpos&gt;atdot)
     {
   alert(""Email is  Not Valid"");
    }
   else{
   alert(""Email is Valid"");
       }
      }
</code></pre>
"
"26279495","<p><code>OuterTwo d = new OuterTwo();</code> mean that any time you create <code>OuterTwo</code> instance JVM will initialize <code>d</code> variable with new instance <code>OuterTwo</code>. But to create new instance <code>OuterTwo</code> JVM needs to initialize <code>d</code> variable with new instance of <code>OuterTwo</code>. And so on and on and on.</p>

<p>Fortunately JVM do it recursively and run into stack overflow</p>
"
"26427288","<p>this <code>#([^#]*)#(?=(,|$))</code> assumes the groups end with <code>,</code> or end of line. if you have a space after (or other character) it won't get that element.</p>

<p>if you always have digits(no spaces) between the <code>#</code> you can use <code>\\#(\\d*?)\\#</code> to solve this <code>#1 #1000#,#2000#</code>, but not this <code>#1#1000#,#2000#</code></p>
"
"26281438","<pre><code>public int getMax() // get maximum value
{
    int index = -1;
    if (nelems == 0) {
    return -1;
}
   long lngMax = arr[0];
   for (int j = 1; j &lt; nelems; j++) {
       if (lngMax &lt; arr[j]) {
           lngMax = arr[j];
           index = j;
       }
   }
   return index;
}
</code></pre>

<p>Just keep track of the index of the largest element then return an int instead of a long and return the index.</p>
"
"26565228","<p>Impressed with the answers so far....Read the question first guys</p>

<p>I'll give you an outline of a solution (warning typos?). I'll leave it up to you to decide how to put commas between entries and other little intricacies incase this is a homework question. Another poster showed how to put the items in a list instead of printing them. Depending on your exact needs, you may want to merge my example with theirs.</p>

<pre><code>List&lt;String[]&gt; stringLists = ....

for(int firstListIndex = 0; firstListIndex &lt; stringLists.size(); firstListIndex++){
    String[] primaryList = stringLists.get(firstListIndex);
    for(int secondList = firstListIndex + 1; ....){
             String[] secondaryList = ....
             for(String first : primaryList){
                 for(String second : secondaryList){
                     System.out.println(first + second);
                 }
             }

    }

}
</code></pre>
"
"26312693","<p>Use following</p>

<pre><code>String a = ""nemenin yang ngebet sangat ingin belanja  [Mon Sep 22 13:46:19 ICT 2014]"";
String tok[]=a.split("" \\["");
for(String test:tok){
  System.out.println(test);
}
</code></pre>

<p><strong>Output :</strong></p>

<pre><code>nemenin yang ngebet sangat ingin belanja 
Mon Sep 22 13:46:19 ICT 2014]
</code></pre>
"
"26312834","<p>Try this</p>

<pre><code>public static void main(String[] args) {
    String str = ""nemenin yang ngebet sangat ingin belanja  [Mon Sep 22 13:46:19 ICT 2014]"";

    String strBeforeBracket = str.substring(0, str.lastIndexOf(""["") - 1);
    String strInBracket = str.substring(str.lastIndexOf(""[""),
            str.lastIndexOf(""]"") + 1);
    System.out.println(""String outside bracket  : "" + strBeforeBracket);
    System.out.println(""String in bracket   : "" + strInBracket);
}
</code></pre>

<p><strong>Output :</strong></p>

<pre><code>String outside bracket  : nemenin yang ngebet sangat ingin belanja 
String in bracket       : [Mon Sep 22 13:46:19 ICT 2014]
</code></pre>
"
"26303772","<p>Try this:</p>

<pre><code>List&lt;MyClass&gt;
</code></pre>

<p>It should work</p>
"
"26303802","<p>Define it this way:</p>

<pre><code>List&lt;MyClass&gt; list
</code></pre>
"
"26477434","<p>You try to compare String with Char in your while lopp statement.
Convert your char to int and use unicode table to look up charcode, ex. n would be 110</p>

<p>Before your loop:</p>

<pre><code>int a = 0;
</code></pre>

<p>Whithin your loop:</p>

<pre><code>a = (int)answer;
...(while a != 110 || ...)
</code></pre>
"
"26338158","<p>Perhaps you meant this?</p>

<pre><code>public static void main(String[] args) {
    Long amount = 67890L;
    NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(""en"", ""US""));
    String moneyString = formatter.format((double) amount / 1000);
    System.out.println(moneyString);
}
</code></pre>

<p>This code will print:</p>

<p>$67.89</p>
"
"26338251","<p>Use <code>BigDecimal</code> for formatting instead of <code>Long</code>:</p>

<pre><code>BigDecimal bd = BigDecimal.valueOf(amount, 3);
NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale(""en"",""US""));
formatter.setMinimumFractionDigits(3);
String moneyString = formatter.format(bd);    
System.out.println(moneyString);
</code></pre>
"
"26338348","<p>This should work :</p>

<pre><code>DecimalFormatSymbols symbols = new DecimalFormatSymbols(new Locale(""en"", ""US""));
symbols.setDecimalSeparator(',');
symbols.setGroupingSeparator('.'); 
DecimalFormat df = new DecimalFormat(""$#,##0"", symbols);
System.out.println(df.format(83000L));
//$83.000
</code></pre>
"
"26345248","<p>Modify as below assuming everything else is fine</p>

<pre><code>//here initialize 'given' array
//get the user input in a string that is 'input[0]' in your case
int count = 0; 
for (String s : given) {
   if (s != null &amp;&amp; s.matches(input[0])) {
      //it matches and print it
   } else {
      //either it's not a match or the 'given' array has a null at this index
   }
   count++;
}
</code></pre>

<p>I must say, get the user input in a string. I don't understand why you have it in <code>input</code> array.</p>
"
"26665077","<p>You could do this, using and to shorten your code:</p>

<pre><code>// We set the valid ones
if (a &gt; b) {
    em.setAlpha();
} else {
    //throw error that prevents em.persist
}
if (c &gt; d) {
    em.setBeta();
} else {
    //throw error that prevents em.persist
}
if (e &gt; f) {
    em.setOmega();
} else {
    //throw error that prevents em.persist
}

public boolean validate() {
    if ((a &gt; b) &amp;&amp; (c &gt; d) &amp;&amp; (e &gt; f)) {
        return true;
    } else {
        return false;
    }
}

if (validate()) {
    database.persist(em);
}
</code></pre>

<p>After that you can call <code>if validate()</code> to check conditions more quickly as well.</p>
"
"26687419","<p>you can use Thread.sleep(time in mil seconds)</p>

<p>ex:
Thread.sleep(10000); // sleep for 10 seconds</p>

<pre><code>JButton button = new JButton(""Test"");

    try {
        button.setEnabled(false);
        Thread.sleep(10000);
        button.setEnabled(true);
    } catch (InterruptedException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
}
</code></pre>

<p>but it must be in a separate thread or it will make all the GUI hang for 10 seconds.</p>

<p>you can post more details about the code and i can help</p>
"
"26384703","<p><code>public static LinkedList&lt;Integer&gt; switchPairs(LinkedList list) {
        ListIterator&lt;Integer&gt; iterator = list.listIterator();
        LinkedList&lt;Integer&gt; out = null;
        while (iterator != null &amp;&amp; iterator.hasNext()) {
            if (out == null) {
                out = new LinkedList&lt;Integer&gt;();
            }
            int temp = iterator.next();
            if (iterator.hasNext()) {
                out.add(iterator.next());
                out.add(temp);
            }else{
                out.add(temp);
            }
        }
        return out;
    }</code></p>
"
"26694039","<p>Use This Code,The java.util.Collections.sort() method use the best algo for sorting:</p>

<pre><code>import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;


class Point implements Comparable&lt;Point&gt;{
private int x,y;

public int getX() {return x;}
public void setX(int x) {this.x = x;}

public int getY() {return y;}
public void setY(int y) {this.y = y;}

@Override
public String toString() {
    return""(""+x+"",""+y+"")"";
}

@Override
public int compareTo(Point o) {
    if(this.x==o.x)
        return 0;
    else
        if(this.x&gt;o.x)
            return 1;
        else
            return -1;


}

}

public class SortPoint {


public static void main(String[] args) {
    ArrayList&lt;Point&gt;sortedPoints=new ArrayList&lt;Point&gt;();

    Scanner in=new Scanner(System.in);

    for(int i=0;i&lt;5;i++){
        Point p=new Point();
        p.setX(in.nextInt());
        p.setY(in.nextInt());
        sortedPoints.add(p);
    }
    in.close();
    Collections.sort(sortedPoints);
    System.out.print(sortedPoints);
}
</code></pre>

<p>}</p>

<pre><code>Provide Input as:
1 3
2 2
2 1
1 1
1 2
</code></pre>

<p>You'll get desired output.</p>
"
"26474446","<p>try this :<br/></p>

<pre><code>    try {
                ConexionBd();
                System.out.println(""rut ""+rut);
                System.out.println(""estado ""+estado);
           if(conexion!=null){
                PreparedStatement enunciado = conexion.prepareStatement(""update alumno set alu_estado = ? ""
                          + ""where alu_rut = ? ;"");
             }else{ 
  System.out.println(""conexion not initialized (null)""); 

}
              enunciado.setString(1, rut);
                enunciado.setString(2, estado);
                enunciado.execute();
                conexion.close();
                return 1;
            } catch (SQLException e) {
                return 0;
            }
</code></pre>
"
"26729906","<pre><code>Caused by: java.lang.UnsupportedOperationException: Can't convert to integer: type=0x3
        at android.content.res.TypedArray.getInteger(TypedArray.java:368)
        at com.digitalaria.gama.wheel.WheelBehavior.&lt;init&gt;(WheelBehavior.java:117)
        at com.digitalaria.gama.wheel.Wheel.&lt;init&gt;(Wheel.java:83)
        at com.digitalaria.gama.wheel.Wheel.&lt;init&gt;(Wheel.java:68)
</code></pre>

<p>I think you need to look into this one. Not sure if Wheel is something you made or downloaded, but it seems to be having a problem in its setup.</p>
"
"26497167","<p>You should be using a <code>Map</code> instead of a <code>List.</code></p>
"
"26735315","<pre><code>protected void displayNotification() {
  Log.i(""Start"", ""notification"");

  /* Invoking the default notification service */
  NotificationCompat.Builder  mBuilder = 
  new NotificationCompat.Builder(this); 

  mBuilder.setContentTitle(""New Message"");
  mBuilder.setContentText(""You've received new message."");
  mBuilder.setTicker(""New Message Alert!"");
  mBuilder.setSmallIcon(R.drawable.woman);

  /* Increase notification number every time a new notification arrives */
  mBuilder.setNumber(++numMessages);

  /* Creates an explicit intent for an Activity in your app */
  Intent resultIntent = new Intent(this, NotificationView.class);

  TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);
  stackBuilder.addParentStack(NotificationView.class);

  /* Adds the Intent that starts the Activity to the top of the stack */
  stackBuilder.addNextIntent(resultIntent);
  PendingIntent resultPendingIntent =
     stackBuilder.getPendingIntent(
        0,
        PendingIntent.FLAG_UPDATE_CURRENT
     );

  mBuilder.setContentIntent(resultPendingIntent);

  mNotificationManager =
  (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);

  /* notificationID allows you to update the notification later on. */
  mNotificationManager.notify(notificationID, mBuilder.build());
  }
</code></pre>

<p><a href=""http://www.tutorialspoint.com/android/android_notifications.htm"" rel=""nofollow"">Create and Send Notifications</a></p>
"
"26499150","<p>Your problem is that Scanner cannot use the .equals method. You need to first identify a string variable, set it equal to Scanner.ReadLine(), and then compare that to the ""quit"" string. Something like this:</p>

<pre><code>Scanner scan = new Scanner(System.in);

String input = scan.ReadLine();

if(input.equals(""quit""))
{
   //close the program
}
</code></pre>

<p>Let me know if this helps you.</p>
"
"26740187","<p>The hash code of an object is not its memory address. If you need to use a unique integer for an instance, there's a special method for that called <code>System.identityHashCode(Object)</code>.</p>

<p>The hash code is just an integer (32 bits) that is meant to give a reasonable approximation of equality. If two hash codes are different, the two objects must be different, but if they are the same they may still be different (though usually they are the same).</p>

<p>This means that if you have two different lists with exactly the same content, they will have the same hash code, but a different memory address.</p>
"
"26444609","<p>I like to present an alternative solution which needs much less code using <a href=""http://xmlbeam.org"" rel=""nofollow"" title=""XMLBeam"">XMLBeam</a> (<strong>Disclosure: I'm affiliated with that project</strong>) Having less code to maintain is important when tasks get more complicated.</p>

<pre><code>public class XMLDemo {
    public interface Projection {
    @XBRead(""/ADI/Content/@Value"")
    String getContentValue();
    }

    public static main(String[] args) {
    Projection projection = new XBProjector().io().file(""D:\\seachange\\AssetFlow Test Files\\DR-Sun3.xml"").read(Projection.class);
    System.out.println(projection.getContentValue());
    } 
}
</code></pre>
"
"26742478","<p>Create a function that will calculate the sum of  digits :</p>

<pre><code>int getDigitSum(int n) {
  return Math.floor(n/10) + n % 10;
}
</code></pre>

<p>Then use it on each value and sum the results.</p>

<p>Please note that I wrote this method only to work with numbers less than 100. You can easily create more generic method if needed.</p>
"
"26677114","<p>A way to do it is by defining a Singleton object that holds the value to be displayed on the TextView, for instance, a Integer or a String.</p>

<p>Both activities have access to read/write into this object. So when you come back to the second activity, maybe on the onResume() method..you can the following:</p>

<pre><code>public void onResume() {
   super.onResume();
   textview.setText(""""+ MySingleton.getInstance().getValue());
}
</code></pre>

<p>On the other activity:</p>

<pre><code> public void updateMethod() {
    int newValue = .....;
    MySingleton.getInstance().setValue(newValue);
 }
</code></pre>

<p>This will make sure that whenever you come back to this activity (as onResume() is called), the value will be updated into the TextView. Of course, assuming that you are updating the value from the other activity accordingly.</p>

<p>Note this is the simplest solution you can do, professionally, I would do an <em>event driven</em> solution, where the observer gets notified when the value is changed. For that you can play with <a href=""http://square.github.io/otto/"" rel=""nofollow"">http://square.github.io/otto/</a> library.</p>
"
"26584942","<pre><code> final ImageView alertStatus= (ImageView) v.findViewById(R.id.alertStatus);
v.alertStatus.setVisibility(View.INVISIBLE);
</code></pre>
"
"26791760","<p>I developed this code will solve problem:</p>

<pre><code>public static String change(String s,String s1, String s2) {
   int length = s.length();
   int x1 = s1.length();
   int x2 = s2.length();
   int x12 = s.indexOf(s1);
   int x22 = s.indexOf(s2);
   String s3=s.substring(0, x12);
   String s4 =s.substring(x12+3, x22);
   s=s3+s2+s4+s1;
   return s;
}
</code></pre>

<p>In the main use <code>change(story,word2,word1).</code></p>
"
"26708596","<p>from your above it continuously going to print the iteration so use below code.</p>

<p><strong>so use below code</strong>  </p>

<pre><code>public class mytest1 {

    String path, keyword;

    public static void main(String args[]){

        exec_script(""normal"");
    }
    public static void exec_script(String exec_path){
        for (int i=0; i&lt;10; i++){
        if (i==4){
            exec_path = ""spl"";
        }

        switch (exec_path){
        case ""spl"":
            spl_case();
            break;
        case ""normal"":
            System.out.println(""normal print"");
            break;
        case ""call_action_path"":
            System.out.println(""call action key word now"");
            break;

        }
        return;
    }
    }

    public static void spl_case(){
        System.out.println(""inside function splcase now"");
        exec_script(""call_action_path"");
    }

}
</code></pre>
"
"26663237","<p>You can try something like that using Java 8:</p>

<pre><code>Stream&lt;String&gt; lines = Files.lines(Paths.get(""c:/"", ""file.txt""));
in wordCount = lines.mapToInt(s -&gt; s.split(' ').length()).sum();
</code></pre>

<p>This function just cound a words count in file.</p>
"
"26556793","<p>I think you have to flush your writer. Do it like this:</p>

<pre class=""lang-cs prettyprint-override""><code>out.flush();
</code></pre>
"
"26556819","<p>I think that you need to call  <code>out.flush()</code>.  </p>

<p>The point of a <code>BufferedWriter</code> is that it writes data to an in memory buffer, and only sends it to the actual socket when the buffer is full or <code>flush()</code> is called.  This is for performance reasons, for example it's much more efficient to make a bunch of calls to put small bits of data into the <code>BufferedWriter</code> and then make a single call to <code>send</code> on the socket to actually send it out on the network.  Note that it works when you call <code>out.close()</code> because the <code>close</code> method flushes the writer before closing the underlying stream.</p>
"
"26771609","<p>Check below example.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>public static void main(String[] args) { 
	String firstNameArr[] = { ""diamond"", ""Iron"", ""Leather"" };
    String lastNameArr[] = { ""Leggings"", ""Boots"", ""Helmet""};
    List&lt;String&gt; fullNameList = new ArrayList&lt;String&gt;();
  
    for (String firstname : firstNameArr) {
    	for(String lastName : lastNameArr){
    		fullNameList.add((firstname+"" ""+lastName));
    	} 
    } 
}</code></pre>
</div>
</div>
</p>
"
"26771847","<pre><code>    String test1[] = { ""Diamond"", ""Iron"", ""Leather"" };
    String test2[] = { ""Leggings"", ""Boots"", ""Helmet"", ""Chestplate"" };

    List&lt;String&gt; merged = new ArrayList&lt;String&gt;();

    for (String str1 : test1) {
        for (String str2 : test2)
            merged.add(str1 + "" "" + str2);
    }
    System.out.println(merged);
</code></pre>
"
"26594703","<p>I agree with @AntonH, the best way would be to override <code>equals()</code>.</p>

<p>Easy way would be...</p>

<p>EDIT also checked for null object</p>

<pre><code>public boolean coordEquals(CoordPoint cp)
{

    boolean b = false;

    if(cp !=  null &amp;&amp; this.x == cp.x &amp;&amp; this.y == cp.y)
    {

         b = true;

    }

    return b;

}
</code></pre>
"
"26866575","<p>For your iterator try, you have NOT called the right remove method. As explained in the JavaDoc for an Iterator, remove() will return void. You may want to consider something like this:</p>

<pre><code>for(int i = 0; i &lt; accounts.size(); i++)
{
Account a = accounts.get(i);
if(a.getAccountNumber().equals(accountNumber))
{
return accounts.remove(i);
}
}
</code></pre>
"
"26795975","<pre><code>public class ColorFrame {

public JPanel panel;
public static void main(String[] args){

    JFrame frame = new JFrame();
    final JPanel panel = new JPanel();
    frame.setSize(300, 200);
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

    final JButton redButton = new JButton (""Red"");
    final JButton greenButton = new JButton (""Green"");
    final JButton blueButton = new JButton (""Blue"");

    class Listener extends JPanel implements ActionListener{

        public void actionPerformed(ActionEvent event) {
            Color color;
            if (event.getSource() == redButton){

                redButton.setBackground(Color.RED);
                panel.setBackground(Color.RED);

            } else if (event.getSource() == greenButton){

                greenButton.setBackground(Color.GREEN);
                panel.setBackground(Color.GREEN);

            } else {

                blueButton.setBackground(Color.BLUE);
                panel.setBackground(Color.BLUE);  
            }

            setBackground(Color.WHITE);
            System.out.println(Color.WHITE);
            repaint();
        }           
    }

    redButton.addActionListener(new Listener());
    greenButton.addActionListener(new Listener());
    blueButton.addActionListener(new Listener());

    panel.add(redButton); 
    panel.add(greenButton);
    panel.add(blueButton);
    frame.add(panel);       
    frame.setVisible(true);
}
</code></pre>
"
"26823473","<p>You can use the following to get the current Drawable from the ImageView.</p>

<pre><code>Drawable myDrawable = YourImageView.getDrawable();
</code></pre>

<p>Then you can go ahead and use <code>myDrawable</code> where ever you want.</p>
"
"26882682","<pre><code>String word1 = ""bar"";
String word2 = ""foo"";

String story = ""Once upon a time, there was a foo and a bar.""

story = story.replace(""foo"", ""&lt;foo /&gt;"");
story = story.replace(""bar"", ""&lt;bar /&gt;"");

story = story.replace(""&lt;foo /&gt;"", word1);
story = story.replace(""&lt;bar /&gt;"", word2);
</code></pre>
"
"26825682","<pre><code>String string = ""Bob Bakes Brownies"";
List&lt;String&gt; list = Arrays.asList(string.split("" ""));
</code></pre>
"
"26744266","<p>The return statements are out of the method. You have to put them before the close method brackets.</p>

<pre><code>public class MyClass{
    public int sum (int a, int b){
         return a + b;
    } // The return have to be before this brackets
}
</code></pre>
"
"26826224","<p><code>public ArrayList&lt;String&gt; solution(String s){</code></p>

<pre><code>    ArrayList&lt;String&gt; result = new ArrayList&lt;String&gt;();
    StringBuffer sb = new StringBuffer();
    String[] array = s.split("" "");

    for(String str:array){
        sb.append(str);
        result.add(sb.toString());
    }
    return result;
}
</code></pre>
"
"26643723","<p>Right now you have a no arg constructor that gives you set details, you need to add another constructor that will allow you to add these new details.</p>

<pre><code>DVD(String title, String director, int releaseDate, String rating, String duration );
</code></pre>
"
"26751225","<p>I think, You are parsing <code>null</code>. and thats why you are gettting <code>NumberFormatException</code>. If you get null value from mysql side. Compare it put it as a empty string <code>""""</code>. Then you will not get Exception. </p>
"
"26648225","<p>you are accessing instance of object not directly class variable. when you use direly ""i"" without reference to object its not allowed.</p>

<p>Private variable visibility is by default in with in class access .</p>

<pre><code>public class Simple {   

private int i = 6;

private static void method(Simple obj) {
    System.out.println(""Value i: "" + i);  //compile Error ::Cannot make a static reference to the non-static field i
}
public void method() {
    method(this);
}
public static void main(String[] args) {
    new Simple().method();
}

}
</code></pre>
"
"26934810","<pre><code>for (int k = 0; k&lt;3, k++){
    for (int i = 0; i&lt; 10; i++) {
        for (int j = 0; j &lt;  3;j++) {

            System.out.println(i);   
        }
        }
        System.out.println("""")};

    }
    }
</code></pre>
"
"26858535","<p>This may help You..</p>

<pre><code>SimpleDateFormat sdf=new SimpleDateFormat(""yyyy/MM/dd"");
    Calendar cal=Calendar.getInstance();
    String today=sdf.format(cal.getTime());
    System.out.println(today);

    cal.add(Calendar.DATE, 20);
    String After=sdf.format(cal.getTime());
    System.out.println(After);

    Date d1 = null;
    Date d2 = null;

    SimpleDateFormat format = new SimpleDateFormat(""yyyy/MM/dd"");

    try {
        d1 = format.parse(today);
        d2 = format.parse(After);
    } catch (ParseException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }

    long diff = d2.getTime() - d1.getTime();

    long diffDays = diff / (24 * 60 * 60 * 1000);

    System.out.println(""Difference is ""+diffDays+"" Days"");
</code></pre>
"
"26935139","<pre><code>for(int k=0;k&lt;3;k++) {  
   for (int i = 0; i&lt; 10; i++) {
       for (int j = 0; j &lt;  3;j++) {
            System.out.println(i);   
        }
    }
}
</code></pre>

<p>Although I am by far most inexperienced guy here, I think this should give exact output you're looking for.</p>
"
"26675542","<p>Object level locking is mechanism when you want to synchronize a non-static method or non-static code block such that only one thread will be able to execute the code block on given instance of the class. This should always be done to make instance level data thread safe. </p>

<pre><code>public class DemoClass
{
    public synchronized void demoMethod(){}
}

or

public class DemoClass
{
    public void demoMethod(){
        synchronized (this)
        {
            //other thread safe code
        }
    }
}

or

public class DemoClass
{
    private final Object lock = new Object();
    public void demoMethod(){
        synchronized (lock)
        {
            //other thread safe code
        }
    }
}
</code></pre>

<p>Class level locking prevents multiple threads to enter in synchronized block in any of all available instances on runtime. This means if in runtime there are 100 instances of  DemoClass, then only one thread will be able to execute demoMethod() in any one of instance at a time, and all other instances will be locked for other threads. This should always be done to make static data thread safe.</p>

<pre><code>public class DemoClass
{
    public synchronized static void demoMethod(){}
}

or

public class DemoClass
{
    public void demoMethod(){
        synchronized (DemoClass.class)
        {
            //other thread safe code
        }
    }
}

or

public class DemoClass
{
    private final static Object lock = new Object();
    public void demoMethod(){
        synchronized (lock)
        {
            //other thread safe code
        }
    }
}
</code></pre>
"
"26699634","<p>Try using a <code>long</code> value:</p>

<pre><code>long byt = file.length();
</code></pre>
"
"26719876","<p>use below code</p>

<pre><code>String v = ""[{\""id\"":\""ID1\"",\""time\"":123},{\""id\"":\""ID2\"",\""time\"":124}]"";
        String c = ""id"";
        JSONArray obj = null;
        try {
            obj = new JSONArray(v);

            ArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;();

            for (int i = 0; i &lt; obj.length(); i++) {
                JSONObject j = (JSONObject) obj.get(i);
                System.out.println(j.getString(c));
                list.add(j.getString(c));
            }

        } catch (JSONException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
</code></pre>

<p>note that i have slightly corrected the json structure too</p>

<p><strong>before</strong>
    [
      {""id"":""{ID1}"",""time"":123},
      {""id"":""{ID2}"",""time"":124}
    ]</p>

<p><strong>after</strong>
    [
      {""id"":""ID1"",""time"":123},
      {""id"":""ID2"",""time"":124}
    ]</p>
"
"27032358","<p>Try this:</p>

<pre><code>driver.findElement(By.name(""period"")).sendKeys(""Last 52 Weeks"");
</code></pre>
"
"26761044","<p>Yeah, I meet this problem too.</p>

<p>I have tried many ways to solve it.</p>

<p>One of these ways is to delete the <code>.android</code> folder or <code>.metadata</code> folder . Unfortunately , when I restart eclipse , the error happens again .</p>

<p><strong>Finally</strong>, in my case , I think this happened because of conflict between ADT version and SDK version.</p>

<p>My ADT version is 23.0.3 and Android API is 21.</p>

<p><strong>So,</strong></p>

<p>I <strong>delete</strong> the android-5 platform ( Android API 21 ) in my sdk folder
and
just <strong>keep</strong> the android-4.4 platform, everything is ok.</p>

<p>Also, we <strong>can update</strong> ADT version to solve it.</p>
"
"27099422","<p>try out this,</p>

<pre><code>  &lt;xsl:if test=""contains($customerName,'&amp;amp;')""&gt;
    &lt;xsl:value-of select=""concat(substring-before($customerName,'&amp;amp;'),substring-after($customerName,'&amp;amp;'))""/&gt;
  &lt;/xsl:if&gt;
</code></pre>
"
"26767309","<p>Yes you can use this code bellow:</p>

<pre><code>   ArrayList&lt;Double&gt; list = new ArrayList();
   boolean condition = true; 
   Scanner input = new Scanner (System.in);
   while(condition){
       list.add(input.nextDouble());
       System.out.println(""Do you want to continue Y/N ?"");
       condition = (input.nextLine().charAt(0) == 'Y');
   }
</code></pre>
"
"26964179","<p>It can be hidden by an <em>overloaded</em> redeclaration in a derived class:</p>

<pre><code>class Base
{
    public static void doSomethingStatic(){}
}

class Derived extends Base
{
    public static void doSomethingStatic(String arg){}
}
</code></pre>

<p>but only hidden to people who try to access it via the derived class.</p>
"
"27047866","<p>Array length is fairly easy. It is </p>

<pre><code>arrayName.length 
</code></pre>

<p>So you can say :</p>

<pre><code>System.out.print(   ""length  is "" +  arr.length  );
</code></pre>

<p><a href=""http://stackoverflow.com/questions/9297899/arrays-length-property"">Array&#39;s length property</a></p>
"
"27130487","<p>go through foreach and check each value separately. Code:</p>

<pre><code>for(String value:yourList) {
    if (value.contains(""p"") {
        return value;
    }
}
</code></pre>
"
"27130497","<pre><code>public static void main(String args[]) throws IOException{
     ArrayList&lt;String&gt; test = new ArrayList&lt;String&gt;();
     test.add(""football"");
     test.add(""ballkeeping"");
     test.add(""basket"");
     ArrayList&lt;Integer&gt; test1 = new ArrayList&lt;Integer&gt;();
     int counter = 0;
     for(String i : test)
     {
         if(i.contains(""p""))
         {
             test1.add(counter);
         }
         counter++;
     }
     for(int i : test1)
     {
         System.out.print("" "" + test.get(i));// print out strings that contain p
     }
 }
</code></pre>

<p>You can check each string and add the index to another arraylist of Integers if the string contains ""p"".</p>
"
"27157562","<pre><code> String line = value.toString();
   StringTokenizer tokenizer = new StringTokenizer(line);
   double percentage = 1.0 / 0.5 // replace 0.5 with the percentage you want
   int x = 0;
   while (tokenizer.hasMoreTokens()) {
         ++x;
         if (x &gt;= percentage) {
              // print here
              x = 0;
         }
   }
</code></pre>
"
"27091250","<p>import java.util.Scanner;</p>

<p>public class MixString {</p>

<pre><code>public static void main(String[] args) 
{
    String s1,s2;

    Scanner s = new Scanner(System.in);
    System.out.println(""Enter 2 strings"");
    s1 = s.nextLine();
    s2 = s.nextLine();

    mixString(s1,s2);

}

    private static void mixString(String s1, String s2) 
    {
        int a,b;
        a = s1.length();
        b = s2.length();
        char[] c = new char[a+b];
        int d = 0;
        for(int i=0,j=0;i+j&lt;=(a+b+1);i++,j++)
        {
            try {
                if(i&lt;a)
                {
                c[d]  = s1.charAt(i);
                d++;
                }
                c[d]  = s2.charAt(j);d++;
            } catch (StringIndexOutOfBoundsException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
        System.out.println(c);

    }
</code></pre>

<p>}</p>
"
"27102804","<p>Use JLabel <code>setBounds(x, y, width, height)</code> method</p>

<p>Moves and resizes this component. The new location of the top-left corner is specified by x and y, and the new size is specified by width and height. </p>
"
"26842996","<p>You are trying to compare references of two different objects using <code>==</code> so therefore it returns false. To compare the contents use:</p>

<pre><code> Arrays.equals(arr1, arr2);
</code></pre>

<p>Also, might be worth reading the following <a href=""http://stackoverflow.com/questions/7520432/java-vs-equals-confusion"">Java == vs .equals() confusion</a></p>
"
"27168458","<p>Seeing point 6, you can use these tools to see if your hardware is being the bottleneck: Assuming that you're on linux, you can use <code>VmStat</code> to see some statistics on your RAM usage, <code>top</code> or <code>atop</code> (depending on your distro) to see processes taking a toll in your CPU and RAM, <code>nload</code> and <code>iftop</code> to see what is consuming network bandwith, and <code>iotop</code> to see what is reading and writing to your disk.</p>
"
"27102859","<p><code>setPreferredSize</code> changes really the size of the label you should just try to draw it border using <code>setBorder</code> method to verify the new size, but the font size is not changed, if you want to have big font try to call <code>setFont</code> and set the new font size, here some code to start with:</p>

<pre><code>import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.border.LineBorder;

public class Test {
    public static void main(String[] args) {
        JFrame t = new JFrame();
        t.setBounds(100, 100, 500, 400);
        JLabel l = new JLabel(""Hello"");
        // new font size is 20
        l.setFont(new Font(l.getFont().getName(), l.getFont().getStyle(), 20));
        // draw label border to verify the new label size
        l.setBorder(new LineBorder(Color.BLACK));
        // change label size
        l.setPreferredSize(new Dimension(200, 200));
        t.getContentPane().setLayout(new FlowLayout());
        t.add(l);
        t.setVisible(true);
    }
}
</code></pre>
"
"27085614","<pre><code>public class ModifyArray{
public static void main(String[] args){


System.out.println(""1-REMOVE"");
System.out.println(""2-ADD"");
System.out.println(""3-EXIT"");
System.out.print(""Enter a Menu from 1-3 :  "");
int b =Keyboard.readInt();
int m = 0;
int[] arr = new int [b];
            switch(b){

                case 1: System.out.println(""REMOVE:"");
                        System.out.print(""Input a number:"");
                        int a =Keyboard.readInt();
                        for(int i=0;i&lt;arr.length;i++){
                            if(arr[i]==b){
                                System.out.print(b + "" is found at index "" + i);

                            }else{
                                System.out.print(""Numbers not found! "");
                            }

                        }



                        break;

                case 2: System.out.println(""ADD"");
                        System.out.print(""Input a number :"");
                        int z =Keyboard.readInt();


                case 3: System.out.print(""EXIT"");
                        System.exit(0);

                }




            }




        }
</code></pre>
"
"27184185","<p>You should use IF to make validations. </p>

<p>A best practice is to not throw an exception from the constructor of a class. 
Another best practice is to not make validations in the constructor of the class.
So a ruff improvement of your code would be (i didn't run it and there are still improvements to be made):</p>

<pre><code>public class CD {
    String artistname = """";
    String albumname = """";
    double cdprice = 0;
    int amountinstock = 0;

    public String ValidationMessage = """";

    public CD(final String artistname, final String albumname, final double cdprice, final int amountinstock) {
        this.artistname = artistname;
        this.albumname = albumname;
        this.cdprice = cdprice;
        this.amountinstock = amountinstock;
    }

    public boolean ValidateCD()
    {
        this.ValidationMessage = """";
        if (/*insert validation condition here*/)
        {
            this.ValidationMessage = ""CD IS NOT VALID BECAUSE TITLE IS WRONG"";
            return false;
        }
        return true;
    }

    public static void main(final String[] arg) throws Exception {

        final CD cd1 = new CD(""Muse"", ""The Resistance"", 11.99, 20);

        final boolean isValid = cd1.ValidateCD();
        if (!isValid) {
            System.out.println(cd1.ValidationMessage);
        }

    }
}
</code></pre>
"
"27193842","<p>Try <code>\\t</code> instead of <code>\t</code>. Split function needs to see the escape character.</p>
"
"27123683","<p>String pool as it is pool of string stored in heap for exp:      </p>

<pre><code>String s=""Test"";
String s1=""Test"";    
</code></pre>

<p>both gets stored in heap and refers to a single ""Test"" thus s1=s,
while </p>

<pre><code>String s=new String(""Test"");
</code></pre>

<p>is an object that also get stored in heap but different form s1=s
refer <a href=""http://www.journaldev.com/797/what-is-java-string-pool"" rel=""nofollow"">here</a></p>
"
"27187359","<p>Use a debugger.</p>

<p>Clearly the value of <code>fonOS</code> cannot be parsed as <code>Integer</code> in that instance.</p>

<p>From <a href=""https://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#parseInt%28java.lang.String,%20int%29"" rel=""nofollow"">API</a>: </p>

<blockquote>
  <p>The characters in the string must all be digits of the specified radix
  (as determined by whether Character.digit(char, int) returns a
  nonnegative value), except that the first character may be an ASCII
  minus sign '-' ('\u002D') to indicate a negative value or an ASCII
  plus sign '+' ('\u002B') to indicate a positive value.</p>
</blockquote>
"
"27219118","<p>I've had to solve this question in an interview as well. One of the conditions for the two values to be a gray code sequence is that their values only differ by 1 bit. Here is a solution to this problem:</p>

<pre><code>def isGrayCode(num1, num2):
    differences = 0
    while (num1 &gt; 0 or num2 &gt; 0):
        if ((num1 &amp; 1) != (num2 &amp; 1)):
            differences++
        num1 &gt;&gt;= 1
        num2 &gt;&gt;= 1
    return differences == 1
</code></pre>
"
"27331480","<pre><code>import java.util.Scanner;

public class Fibonacci2 {

    public static void main(String[]args){

        int a;
        try (Scanner sc = new Scanner(System.in)) {
            System.out.print(""Number of Fibonacci numbers to print: "");
            a = sc.nextInt();
            sc.close();
        }
        int c=1; /*c current number b last number*/
        int b=0;
        System.out.println(b);
        System.out.println(c);
        int bb;
        for (int z = 2; z &lt; a ; z++){
        bb = b; 
        b = c;
        c = bb + b; /*bb last last number*/
        System.out.println(z);

    }
    }
}
</code></pre>
"
"27339906","<p>The problem is that in <code>Rectangle</code>, you have methods <code>setHeight</code> and <code>setWidth</code>, which set the instance variables <code>height</code> and <code>width</code>.  In <code>Square</code>, you don't declare new instance variables.  So in order to set the height and width, you'll need to use the <code>setHeight</code> and <code>setWidth</code> methods declared in <code>Rectangle</code>.</p>

<p>However, you don't do this for a <code>Square</code>.  The <code>Square</code> class overrides the <code>setHeight</code> and <code>setWidth</code> methods.  For those to set the instance variables, they will need to call the <code>setHeight</code> and <code>setWidth</code> methods defined in <code>Rectangle</code>.  The way to do this is:</p>

<pre><code>super.setHeight(h);   // calls the Rectangle method, which sets the variable
super.setWidth(w);    
</code></pre>

<p>Since you don't use this, the <code>setHeight</code> and <code>setWidth</code> methods in <code>Square</code> just call each other, not the ones in <code>Rectangle</code>, and the result is that the <code>height</code> and <code>width</code> variables never get set.</p>
"
"27097759","<p>You must create new object from instance A</p>

<pre><code>A aa = new A();
</code></pre>

<p>OR</p>

<pre><code>public class B extends A {
    public B() {
       // need to access A
    }
}
</code></pre>
"
"27097828","<p>Inner Class seems like the best thing to do ,</p>

<pre><code>  public class A {
        B b = new B();
        private int tryToAccess;
        public void doSomething() {
             // this does something
        }

    public class B{

     public B()
         {
          tryToAccess=5;
         }
    }//B ends
   }//A ends
</code></pre>

<p><strong>Note</strong>:<em>This is just one way of going about it , here you can access <code>A</code>'s <code>private</code> variables from <code>class</code> <code>B</code></em></p>
"
"27251297","<p>this split the string by the ""."" and put them in an array. After that you can do with them as you like.   </p>

<pre><code>String[] parts = new String[4];
String a = (""number 1. number 2. number 3. number 4. "");



parts = a.split(""\\."");
String part1 = parts[0];
String part2 = parts[1]; 
String parts3 = parts[2];
String parts4 = parts[3];
</code></pre>
"
"27237448","<p>I think you can use <a href=""https://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#parseInt(java.lang.String)"" rel=""nofollow""><code>Integer.parseInt(String)</code></a>.</p>
"
"27256963","<p>By using the enhance for loop you are basically passing all the elements of the arrays to c so they can be visible on the screen. Your can also pass the elements of an array to Lists or Arraylist by using the enhance for loop. Java supports that kind of iteration. Take a look at this example. Hope it helps</p>

<pre><code> String[] myArray = {""one "", "" two"" , ""three"" , ""four""};
 List&lt;String&gt; myList = new ArrayList&lt;String&gt;();
 for(String x : myArray)
 myList.add(x);

 for(int i=0 ; i&lt;myList.size(); i++){
 System.out.printf(""%s "", myList.get(i));
</code></pre>

<p>}</p>
"
"27374651","<p>You don't understand how trim works. Here is the JavaDoc for <code>java.lang.String trim()</code> function</p>

<p>Returns a copy of the string, with leading and trailing whitespace omitted.</p>

<p>If this String object represents an empty character sequence, or the first and last characters of character sequence represented by this String object both have codes greater than '\u0020' (the space character), then a reference to this String object is returned.</p>

<p>Otherwise, if there is no character with a code greater than '\u0020' in the string, then a new String object representing an empty string is created and returned.</p>

<p>Otherwise, let k be the index of the first character in the string whose code is greater than '\u0020', and let m be the index of the last character in the string whose code is greater than '\u0020'. </p>

<p>A new String object is created, representing the substring of this string that begins with the character at index k and ends with the character at index m-that is, the result of this.substring(k, m+1).</p>

<p>This method may be used to trim whitespace (as defined above) from the beginning and end of a string.</p>

<p><strong>Returns:</strong>
A copy of this string with leading and trailing white space removed, or this string if it has no leading or trailing white space.</p>
"
"27265694","<p>Modifying answer now that I understand you want the resource identifier of your views:</p>

<pre><code>Resources res = getResources();
for (int i = 0; i &lt; ListOfView.size(); i++){
    int id = ListOfView.get(i).getId();
    try {
        Log.i(""View "", res.getResourceName(id));
    } catch (Resources.NotFoundException e) {
        Log.i(""Unknown id "" + id);
    }
}
</code></pre>
"
"27319687","<p>You need to make sure you size <code>arrayone</code> to contain at least twice the max value that <code>Die.roll()</code> can return.</p>

<p>I ran the code you've provided so far and it generated the following:</p>

<pre><code>The amount of 0 rolled as a combination of two dice is: 0
The amount of 1 rolled as a combination of two dice is: 0
The amount of 2 rolled as a combination of two dice is: 2
The amount of 3 rolled as a combination of two dice is: 1
The amount of 4 rolled as a combination of two dice is: 1
The amount of 5 rolled as a combination of two dice is: 0
The amount of 6 rolled as a combination of two dice is: 1
The amount of 7 rolled as a combination of two dice is: 2
The amount of 8 rolled as a combination of two dice is: 2
The amount of 9 rolled as a combination of two dice is: 0
The amount of 10 rolled as a combination of two dice is: 0
The amount of 11 rolled as a combination of two dice is: 1
The amount of 12 rolled as a combination of two dice is: 0
The amount of 13 rolled as a combination of two dice is: 0
</code></pre>

<p>Have you made other changes to the code?</p>
"
"27287937","<p><strong>Sample program to mouse hover using selenium java web driver :</strong></p>

<pre><code>public class mhover {

public static void main(String[] args){

   WebDriver driver = new FirefoxDriver();
   driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
   driver.get(""http://www.google.com"");
   WebElement ele = driver.findElement(By.id(""gbqfba""));
   Actions action = new Actions(driver);
   action.moveToElement(ele).build().perform();


}

}
</code></pre>
"
"27319825","<p>Surround your access to arrayone with try/catch:</p>

<pre><code>try {
  arrayone[dT]++;
} catch (ArrayIndexOutOfBoundsException e) {
  System.out.println(""The value of d1 is "" + d1);
  System.out.println(""The value of d2 is "" + d2);
}
</code></pre>

<p>Then you will see where an assumption you made is false.  </p>
"
"27418590","<p>you need to sum all possible sub array. to do that, you can do this code</p>

<pre><code>public static int maxSubsequenceSum(int[] X) {
    int max = 0;
    boolean max_init = false;
    int max_from=0;
    int max_to=0; // this is not included
    for (int i = 0; i &lt; X.length; i++) {
        for (int j = i + 1; j &lt; X.length + 1; j++) {
            int total = 0;
            for (int k = i; k &lt; j; k++) {
                total += X[k];
            }
            if (total &gt; max || !max_init){
                max = total;
                max_init = true;
                max_from = i;
                max_to = j;
           }
        }
    }
    for (int i=max_from;i&lt;max_to;i++)
       System.out.print(X[i]+"","");
    System.out.println();
    return max;
}
</code></pre>
"
"27309201","<p>Change CustomSQLiteOpenHelper code like this,</p>

<pre><code>private class CustomSQLiteOpenHelper extends SQLiteOpenHelper
{
    public CustomSQLiteOpenHelper(Context context)
    {
        super(context, DB_NAME, null, DB_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db)
    {

        String newTableQueryString = ""create table "" +
                TABLE_NAME +
                "" ("" +
                TABLE_ROW_ID + "" integer primary key autoincrement not null,"" +
                TABLE_ROW_ONE + "" text,"" +
                TABLE_ROW_TWO + "" text,"" +
                TABLE_ROW_THREE + "" text,"" +
                TABLE_ROW_FOUR + "" text"" +
                "");"";
        db.execSQL(newTableQueryString);
    }


    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion)
    {

    }
}
</code></pre>
"
"27309476","<pre><code>     public static void main(String[] args) {
        // TODO code application logic here
        String str = ""c,b,\""c,d\"""";
        System.out.println(str);
           if(str.contains(""\"""")){
              str= str.replaceAll(""\"""", "" "");
              //System.out.println(str);
              str = str.replaceAll("" "", """");
              System.out.println(str);

           }
    }       
</code></pre>

<p><img src=""http://i.stack.imgur.com/WJpH8.png"" alt=""enter image description here""></p>
"
"27440800","<p>first Pass dir as ""/download"" exact location where ur files are stored in.
 and then pass whole SD card root path
like searchAPK(new File(""/download""));</p>

<p>and code try </p>

<pre><code>private void searchAPK(File dir){
        File[] files = dir.listFiles();
        Log.i(""DIR"", ""Found "" + files.length + "" in "" + dir.getAbsolutePath());
        for (File file : files) {
            if(file.isFile() &amp;&amp; isAPK(file)){
                list.add(file);
                Log.i(""APK found"", file.getName());
            }else if(file.isDirectory()){
                searchAPK(file.getAbsoluteFile()); 
            }
        }
    }

    private boolean isAPK(File file){
        boolean is = false;
        if(file.getName().endsWith("".apk"") || file.getName().endsWith("".APK"")){
            is = true;
        }
        return is;
    }
</code></pre>

<p>File[] files = dir.listFiles();</p>

<p>file should be local array in your case</p>
"
"27322819","<p>You can print in the same line with <code>System.out.print("" _"");</code> so you <strong>can</strong> use a loop. <code>print</code> instead of <code>println</code> does not append a new line character.</p>

<pre><code>for (int i=0; i&lt;5; i++){
    System.out.print("" _"");
}
</code></pre>

<p>Will print: <code>_ _ _ _ _</code>.</p>
"
"27323075","<p>try this:</p>

<pre><code>  boolean go = true;

 System.out.println(""What's the highest roll you want? \n"");
      while(go){
      try{
      highnum = userin.nextInt();
      go = false;
     catch(Exception e){
         System.out.println(""Please type in an integer: "");
         highnum = userin.nextInt();
      }

}
</code></pre>
"
"27328562","<p>right, but I would write it like this</p>

<pre><code>   for (ListIterator&lt;E&gt; it = listIterator(); it.hasNext(); ){
     if (e == null ? it.next() == null : e.equals(it.next())) {
        return it.previousIndex();}
     } else {         
        return -1;
     }
  }
</code></pre>
"
"27398909","<p>Try to cast a[1] aiming to access s property like</p>

<pre><code>System.out.println( ((Exampleclass)a[1]).s);
</code></pre>
"
"27243325","<p>I tried to debug it again and again, this time while debugging I found that reading data from DataInputStream is the culprit here. </p>

<p>The line dataInputStream.read() reads one char at a time, and I have to convert it into String. Below is the code </p>

<pre><code>    String  ret = """";
    if(input!=null){
        for( int c = input.read(); c != -1; c = input.read() ) { //InterfaceHelper.java:695
            ret = ret + String.valueOf((char)c);
        }
    }
</code></pre>

<p>The main problem is that I am reading data into int and then convert it into char and then into String i.e. <strong><em>ret = ret + String.valueOf((char)c);</em></strong>. </p>

<p>Now I have removed the DataInputStream and used BufferInputStream and used bufferInputStream.readLine() which directly read's line in string from InputStream, so no type casting which saves lots of time in reading data from stream and hence till the time connection and stream expires it reads the data and then I close both. </p>

<p>This way my problem is resolved. I am posting my new code which helps me in solving my problem.</p>

<pre><code>   try{
        URL url = new URL(""http://example.com/someParams/SOME-ACCESS-TOKEN"");
        HttpURLConnection connection = (HttpURLConnection)url.openConnection();
        connection.setRequestMethod(""GET"");
        connection.setRequestProperty(""Content-Type"",""application/x-www-form-urlencoded"");
        connection.setRequestProperty(""Content-Language"", ""en-US"");
        connection.setRequestProperty(""X-EXAMPLE-LOGIN"", ""XXXXXXXX"");
        connection.setRequestProperty(""X-EXAMPLE-PASSWORD"", ""XXXXXX"");
        connection.setUseCaches(false);
        connection.setDoInput(true);
        connection.setDoOutput(true);
        connection.setConnectTimeout(99999999);
        connection.setReadTimeout(99999999);
        BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
        //DataInputStream input = new DataInputStream(connection.getInputStream());
        String  ret = """";
       /*   if(in!=null){
            for( int c = input.read(); c != -1; c = input.read() ) {
                ret = ret + String.valueOf((char)c);
                if(input==null || connection==null)
                    break;
            }
       }*/
       String inputLine;
       while ((inputLine = in.readLine()) != null) 
       {
            ret = ret + inputLine;
       }
       if(in!=null)
         in.close();
       if(connection!=null)
         connection.disconnect();
       if(ret!=null &amp;&amp; ret.length()&gt;0){
           return ret;
       }

   }catch(Exception e) {
      e.printStackTrace();
   }
</code></pre>
"
"27403906","<p>First, make sure to add : to your case statements.</p>

<pre><code>case 1: //Insert case statements
</code></pre>

<p>You can initialize when you declare them like so:</p>

<pre><code>String productname = """";
</code></pre>
"
"27266908","<p>If you execute the same method (<code>main</code>) in other class inside the project, must be executed perfectly. </p>

<p>The classloader is the same, but you can't access to the method <code>getStatement</code> outside the class <code>DBConnectivity</code> because the method is private. </p>

<p>You could execute this method by reflection.</p>
"
"27436654","<p>I figured out that I can just do this:</p>

<pre><code>frame.setLayout(null);
</code></pre>

<p>Then whenever I make an object to add to the Frame, I can set the location to whatever I want. I think now that these Layouts are a crutch. It isn't that hard to set the location of objects, so I will just stick with that! :)</p>
"
"27438064","<p>One approach that i would be use, without implementing the comparator is contains() method of TreeSet. It's one way, but how to do the logic is your choice.</p>

<pre><code>if(root.set.contains(t)){
    root.set.remove(t); 
}  
</code></pre>
"
"27383027","<p>If you want to add to it you could create a new list and add all the current elements to that list and then just add the object you would like after e.g</p>

<pre><code>public class Router {
  private Iterable&lt;Route&gt; routes;

  public Router(Iterable&lt;Route&gt; routes) {
    this.routes = routes;
  }
  public void addRoute(Route route) {

    //create new list
    ArrayList&lt;Route&gt; myList = new ArrayList&lt;Route&gt;();

        //iterate through current objects and add them to new list
        while(routes.iterator().hasNext()){
            myList.add(routes.iterator().next());
        }

    //add object you would like to the list
    myList.add(route);

  }
}
</code></pre>
"
"27445280","<p>You must convert you integer variables to strings before concatenating them. For example:</p>

<pre><code>c=""""+a.tostring();
</code></pre>
"
"27306985","<p>This is where the error is</p>

<pre><code>   public Pizza(int s, String t, double c)
   {
      s = size;
      t = topping;
      c = cost;
   }
</code></pre>

<p>It should be the other way around</p>

<pre><code>   public Pizza(int s, String t, double c)
   {
      sise = s;
      topping = t;
      cost = c;
   }
</code></pre>

<p>Also in the setSize() function you have it the reversed way as well</p>
"
"27307053","<p>There shouldn't be a parameter present in this method, remove the <code>double c</code></p>

<pre><code>public double getCost(double c){
  return cost;
}
</code></pre>
"
"27543862","<p>The best approach is to avoid sleep altogether, and use some API that call your code right after the screen has been refreshed. This greatly depends on the drawing libraries you are using, but you are looking for something similar to the famous requestAnimationFrame() function in JavaScript.</p>

<p>If you don't have access tu such API, then as other answer states, in Java you can make use of <code>System.nanoTime()</code> and <code>Thread.sleep(long millis, int nanos)</code>.</p>
"
"27414261","<p>I think the problem is in this: <code>e.getSource() == stopButton</code>. You should use <code>.equals()</code></p>
"
"27543908","<p>You have no guarentees as to how long the process will sleep for. In fact your program can be paused for any length of time in between sleeping and will do so thousands of times a second. there is tools for measuring the jitter in your system based on how wrong this timing is. <a href=""http://www.azulsystems.com/jHiccup"" rel=""nofollow"">http://www.azulsystems.com/jHiccup</a></p>

<p>Instead you should estimate in nanoTime when the process should have woken up next and sleep for the difference, this avoid cumulative error.</p>

<pre><code>long intervalNanos = ....
long nextNanos = System.nanoTime() + intervalNanos;
while(running) {
    doSomething();
    long now = System.nanoTime();
    if (now &gt; nextNanos) {
       // we are not keeping up.
       nextNanos = now + intervalNanos;
       continue;
    }
    long delay = (nextNanos - now) / 1000000;
    Thread.sleep(delay);
    nextNanos += intervalNanos;
}
</code></pre>
"
"27565807","<p>If you like sluggish, slow code, that is hard to debug, maintain and understand, absolutely, avoid using <code>new</code> keyword at all costs, obfuscate as much as possible!</p>
"
"27381029","<pre><code> //for example we have:""123456789""
 String S = ""123456789"";
 //you want to print ""1236789""
 String P = """";//Null
 for(int x = 0; x &lt; = 2 ; x++)
      P+=""1, 2, 3"";
 for(int x = 5; x &lt; S.length() ; x++)
      P+=""6, 7, 8, 9"";
 //final
 System.out.print(P);
}
</code></pre>
"
"27398539","<p>use your jsonsimpleobject direclty like below</p>

<pre><code>JSONObject unitsObj = parser.parse(new FileReader(""file.json"");
</code></pre>
"
"27486145","<p>As stated by other users, there are better ways to do this kind of task, but if you want to use your approach, this a functioning code snippet:</p>

<pre><code>    HashMap antwoorden1 = new HashMap();
    HashMap antwoorden2 = new HashMap();

       // Awnsers question 1
    antwoorden1.put(""Hypertext Preprocessor"", true);
    antwoorden1.put(""Hypertext PHPprocessor"", false);        
    antwoorden1.put(""Hypertext processor"", false);
    antwoorden1.put(""Preprocessor PHP"", false);
    // Awnsers question 2
    antwoorden2.put(""Model view config"", false);
    antwoorden2.put(""Model view connect"", false);        
    antwoorden2.put(""Model view controllers"", false);
    antwoorden2.put(""Model view controller"", true);  

    ArrayList&lt;HashMap&gt; alleAntwoorden =  new ArrayList&lt;HashMap&gt;();

    // Add the Hashmaps to the arrayList
    alleAntwoorden.add(antwoorden1);
    alleAntwoorden.add(antwoorden2);

    for(int i = 0; i &lt; alleAntwoorden.size(); i++)
    {

         Iterator it = (Iterator)alleAntwoorden.get(i).entrySet().iterator();

         while (it.hasNext()) {
            Map.Entry pairs = (Map.Entry)it.next();
            System.out.println(pairs.getKey() + "" = "" + pairs.getValue());
            it.remove(); // avoids a ConcurrentModificationException
        }

    }
</code></pre>
"
"27509910","<p>The <code>Date</code> Class has methods like <code>before(date)</code> and <code>after(date)</code>. You should take a look into the <code>Date</code> Class.</p>
"
"27510026","<p>So I think what you are looking for is to set the time zone of the SimpleDateFormat:</p>

<pre><code>sf.setTimeZone(TimeZone.getTimeZone(""EST""));
</code></pre>
"
"27631585","<p>I just create a project with your code. please rectify below errors. </p>

<pre><code>1) Import the java.util.List package.

2)  another error I find is this.. How don't know your requirement Cannot suggest the solution.

public MyAbstractClass(List&lt;? extends Animal&gt; animalList) {
        this.myAnimalList = animalList; &lt;==== problem you cannot assign List&lt;? extends Animal&gt; to List&lt;Animal&gt; .. Subtyping is not allowed in generic class.
    }
</code></pre>

<p><strong>One of the Solution :</strong></p>

<pre><code>public MyAbstractClass(List&lt;? extends Animal&gt; animalList) {

   myAnimalList= new ArrayList&lt;Animal&gt;();   

   for(Animal c: animalList){
        this.myAnimalList.add(c);
   }
}
</code></pre>
"
"27632008","<pre><code>    LinkedList&lt;T&gt; buk=new LinkedList&lt;T&gt;();
    //make list
    T current=buk.getFirst();
    T previous=null;

    if (fooCondition) {
        previous = current.previous;
    } else {
        previous = current;
        current = current.next;
    }
</code></pre>

<p>and the structure of T :</p>

<pre><code>Class T{
  public T previous;
  public T next;
  //rest
}
</code></pre>
"
"27485987","<pre><code>public class myBubbleSort
{
    private static int[] a;

    public static void main(String[] args)
    {
        getArray(10);
        System.out.println(""Array before sorting"");
        printArray();
        ascendingBubble();
        System.out.println(""Array after ascending sort"");
        printArray();
        descendingBubble();
        System.out.println(""Array after descending sort"");
        printArray();

        System.out.println();
        System.out.println(""Random sort"");
        getArray(10);
        bubbleSort(true);
        System.out.println(""Array after Random sort"");
        printArray();
    }

    // print the number in random array
    public static void printArray()
    {
        for (int i : a)
        {
            System.out.print(i + "" "");
        }
        System.out.println();
    }

    // generate a random array to be sorted in ascending and descending order
    public static void getArray(int size)
    {
        a = new int[size];
        int item = 0;
        for (int i = 0; i &lt; size; i++)
        {
            item = (int) (Math.random() * 100);
            a[i] = item;
        }
    }

    // sort getArray in ascending order and bubblesort it
    public static void ascendingBubble()
    {
        int temp;
        System.out.println();
        System.out.println(""Ascending sort"");
        for (int i = 0; i &lt; a.length - 1; i++)
        {
            for (int j = 0; j &lt; a.length - 1; j++)
            {
                if (a[j] &gt; a[j + 1])
                {
                    temp = a[j];
                    a[j] = a[j + 1];
                    a[j + 1] = temp;
                }
            }
        }

        bubbleSort(true);
    }

    // sort getArray in descending order and bubblesort it
    public static void descendingBubble()
    {
        int temp;
        System.out.println();
        System.out.println(""Descending sort"");

        for (int i = 0; i &lt; a.length - 1; i++)
        {
            for (int j = 0; j &lt; a.length - 1; j++)
            {
                if (a[j] &lt; a[j + 1])
                {
                    temp = a[j];
                    a[j] = a[j + 1];
                    a[j + 1] = temp;
                }
            }
        }

        bubbleSort(true);
    }

    // bubble sort algorithm
    public static void bubbleSort(boolean printTime)
    {
        boolean sorted = false;
        int pass = 1;
        int temp;
        long startTime;
        long endTime;
        long duration;

        startTime = System.nanoTime();
        while (pass &lt; a.length - 1 &amp;&amp; (!sorted))
        {
            sorted = true;
            for (int i = 0; i &lt; a.length - 1; i++)
            {
                if (a[i] &gt; a[i + 1])
                {
                    temp = a[i];
                    a[i] = a[i + 1];
                    a[i + 1] = temp;
                    sorted = false;
                }
            }
            pass = pass + 1;
        }
        endTime = System.nanoTime();
        duration = (endTime - startTime);
        if(printTime)
        {
            System.out.println(duration + "" ""+ "" nano seconds"");
        }
    }

}
</code></pre>
"
"27537196","<p>Ok, so to prevent cloning an object u have to create an    </p>

<pre><code>  public Manager cloneManager() throws CloneNotSupportedException
    {
           throw new CloneNotSupportedException(); 
    }
</code></pre>

<p>That will eventually throw an exception uppon clone.(manager).</p>
"
"27504580","<p>Add <strong>json jar</strong> to your classpath</p>

<p>or use <code>java -classpath json.jar ClassName</code></p>

<p>refer <a href=""http://stackoverflow.com/questions/16362302/java-servlet-error-with-jsonobject"">this</a></p>
"
"27539168","<p>After using Maven for a while, I want to share some of my thought.</p>

<p>Maven is essentially a plugin execution framework. When I use Maven, I found that it often passes parameters as system properties to plugins through the <code>-D</code> option. For example:</p>

<pre><code>mvn exec:java -Dexec.mainClass=org.sonatype.mavenbook.weather.Main -Dexec.args=""70112""
</code></pre>

<p>And</p>

<pre><code>mvn archetype:generate -DgroupId=org.sonatype.mavenbook -DartifactId=simple -Dpackage=org.sonatype.mavenbook -Dversion=1.0-SNAPSHOT
</code></pre>

<p>In the above commands, the <code>exec:java</code> and <code>archetype:generate</code> are the Maven <code>plugin:goal</code> part.</p>

<p>Suppose we don't use the <code>-D</code> approach. Then we have to pass in the parameters as command line arguments, which means our main program (in Maven scenario, it is the <code>mvn.bat</code>) <strong>must</strong> incorporate the parsing logic for the parameters of all the various plugins. Each time a new plugin is made and a new parameter is required, the main program have to be modified to reflect that. This is a unwanted coupling between the main program and the plugins. With the <code>-D</code> option, plugins can  pick up its parameters <strong>by itself</strong> from the system properties, which is a shortcut to decouple itself from the main program.</p>
"
"27685861","<p>Move <code>data.putExtra</code> for both <code>size</code> and <code>edData</code> keys outside <code>for</code> loop <code>data.putExtra</code> work like a Map which have a unique keys  </p>

<pre><code>// Prepare items Array 
for (int j = 0; j &lt; allEds.size(); j++) {
    items[j] = allEds.get(j).getText().toString();
}
data.putExtra(""edData"", items);
data.putExtra(""size"", str);
</code></pre>

<p>Now get <code>edData</code> as String Array instead of String from <code>Bundle</code>.</p>
"
"27580409","<p>Simply use,</p>

<pre><code>StringUtils.join(itemList, "", "");
</code></pre>
"
"27590892","<p>In java you have to declare the variables first.
This means that variables are strongly typed.</p>

<p>You cannot convert a variable into an array.</p>

<p>However you can create a new variable that is an array. </p>

<pre><code>int num = 7;

int[] arr = {num};  // arr is an array containing num
</code></pre>
"
"27595834","<p>The following code would do the trick. This is assuming the rest of the suffix and prefix are constant. </p>

<pre><code>   Pattern pattern = Pattern.compile(""^/pep/v1/clients/(.+)/tester$"");
    Matcher m = pattern.matcher(""/pep/v1/clients/ST-980/tester"");
    if (m.find()) {
        System.out.println(""clientId = "" + m.group(1));
    }
</code></pre>
"
"27672068","<p>If you just want to check if the input numbers differ by just one bit:</p>

<pre><code>public boolean checkIfDifferByOneBit(int a, int b){
    int diff = 0;
    while(a &gt; 0 &amp;&amp; b &gt; 0){
        if(a &amp; 1 != b &amp; 1)
            diff++;
        a = a &gt;&gt; 1;
        b = b &gt;&gt; 1;
    }
    if (a &gt; 0 || b &gt; 0) // a correction in the solution provided by David Jones
        return diff == 0 // In the case when a or b become zero before the other
    return diff == 1;
}
</code></pre>
"
"27657811","<p>It looks like <code>Thread.yield ()</code> is what you are looking for.</p>
"
"27616303","<pre><code>DataInputStream br=new DataInputStream(System.in);
System.out.println(""input a number"");
int n=Integer.parseInt(br.readLine(System.in));
</code></pre>
"
"27701184","<p>For first example:</p>

<pre><code>Method in A:
public Object some_method() {....}
Method in B:
public Integer some_method() {....}
</code></pre>

<p>this type of overriding possible, but rest for two example overriding not possible.</p>
"
"27668946","<pre><code>two.startsWith(one) 
</code></pre>

<p>If you aren't sure about the start position (the above assumes 0), try using the following API</p>

<pre><code>startsWith(String, offset)
</code></pre>
"
"27851237","<p>I fixed my problem., when adding   <code>System.out.println(sb.toString());</code> to the bottom. It's loading things as desired <em>when I put the files in the same directory as the gameExecutable</em></p>

<p>Don't know why it's causing issues when they're not in the same location. But it works.</p>
"
"27756544","<p>This would be my answer:</p>

<pre><code>String text = ""Anita lava la tina"";
text = text.toLowerCase().replaceAll("" "", """");

StringBuilder strb = new StringBuilder(text);

String text2 = strb.reverse().toString();

System.out.println(""Palindrome: "" + text.equals(text2));
</code></pre>
"
"27704095","<p>try using </p>

<pre><code>Intent i = new Intent(login.this, mainActivity.class);
</code></pre>

<p>hope this helps</p>
"
"27704127","<p>Did you add manifest.xml or try this code ?<br>
<code>Intent i = new Intent(login.this,mainActivity.class);</code></p>
"
"27723526","<p>at this line :</p>

<pre><code>while (lnr.readLine() != null);
</code></pre>

<p>you read more data.</p>

<p>use:</p>

<pre><code> String tmp = new String();
 do{
      linenumber++;
      System.out.println(tmp=lnr.readLine());                        
   }while (tmp != null);
</code></pre>
"
"27723677","<p>if you want it's work good use this:</p>

<pre><code>                int linenumber = 0;
                String tmp = new String();
                tmp=lnr.readLine();
                    while(tmp != null)
                    {
                        linenumber++;  
                        System.out.println(tmp);
                        tmp=lnr.readLine();

                    }
                    System.out.println(""Total number of lines : "" + linenumber);
                    lnr.close();
</code></pre>

<p>because of if the file empty it's not count!!!</p>

<p>blessing.</p>
"
"27735085","<p>For something quick/dirty, use Signals:</p>

<pre><code>boolean done = false;

// ...

Signal.handle(new Signal(""USR1""), new SignalHandler() {
    @Override
    public void handle(Signal signal) {
        // signal triggered ...
        done = true;
    }
});

// ...

while(!done) { ... }
</code></pre>

<p>Then, use <code>kill -USR1 _pid_</code> to trigger the signal.</p>
"
"27735227","<p>You could use a AtomicBoolean as in the test program below.
To suspend just type true into the console to resume type false.  The program will never exit.</p>

<pre><code>public class Test2 {
public static void main(String[] args) {
    final AtomicBoolean suspended = new AtomicBoolean(false);

    new Thread() {
        public void run() {
            while (true)
            {
                Scanner sc = new Scanner(System.in);
                boolean b = sc.nextBoolean();
                suspended.set(b);
            }
        }
    }.start();


    while(true){
        if(!suspended.get()){
            System.out.println(""working"");
            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        else{
           //System.exit(0) //if you want to exit rather than suspend uncomment.
        }
    }

}
</code></pre>

<p>}</p>
"
"27915242","<p><strong>(1) Syntax</strong></p>

<pre><code>if (conditionA &amp;&amp; conditionB) { return true; }

if (conditionA &amp;&amp; !conditionB) { return false;}
</code></pre>

<p><strong>(2) Syntax</strong></p>

<pre><code>if (conditionA) { 

    //Only conditionA is true you can write more code and other logic here
    if (conditionB) { 
        return true;
    } 
    //conditionB is true or false, you can write more code and other logic here
    return false;
}
</code></pre>

<p>Acutally these 2 Syntaxs are not same. <br/>As to your title question, there has no point to decide Which syntax is more correct from syntaxs same point?
<br/>
So, according to these differences, you should choose which syntax is meet your logic.
<br/>
Your logic might be answer for which syntax is more correct.</p>
"
"27745007","<p>A <a href=""http://en.wikipedia.org/wiki/Mask_%28computing%29"" rel=""nofollow"">mask</a>, or bitmask, is used to ""turn off"" every bit except those that are allowed to be ""seen"" through the mask.  The <code>0</code>s filter out the bit they are <code>AND</code>ed with, the <code>1</code>s allow the bit through.  A common usage is to isolate a byte-sized portion of an integer data type:  </p>

<pre><code>00000000 11111111 00000000 00000000
&amp; // Boolean AND
10010101 10010101 10010101 10010101
yields
00000000 10010101 00000000 00000000
</code></pre>
"
"27755659","<p>maybe you should try the following code: </p>

<pre><code>public void clear (int[] A, int[] B)
{
  for (int i=0; i&lt;A.length;i++)
  {
     for (int j=0; j&lt;B.length; j++)
         if(A[i]==B[j])
         {
           for (int k=i; k&lt;A.length;k++)
           A[k]=A[k+1];
           j=B.length-1; //so that the cycle for will not be executed
    }
  }
}
</code></pre>
"
"27925155","<p>the variable:
Android.Support.V7.Widget.ShareActionProvider shareActionProvider;</p>

<pre><code>this.MenuInflater.Inflate(Resource.Menu.share_action_provider, menu);
var shareItem = menu.FindItem(Resource.Id.menu_item_share_action_provider_action_bar);
MenuItemCompat.SetShowAsAction (shareItem,  MenuItemCompat.ShowAsActionIfRoom);
var actionprov = new Android.Support.V7.Widget.ShareActionProvider (this);
MenuItemCompat.SetActionProvider (shareItem, actionprov);
var test =  MenuItemCompat.GetActionProvider (shareItem);
shareActionProvider = test.JavaCast&lt;Android.Support.V7.Widget.ShareActionProvider&gt;();
var intent = new Intent(Intent.ActionSend);
intent.SetType(""text/plain"");
intent.PutExtra(Intent.ExtraText, ""ActionBarCompat is Awesome! Support Lib v7 #Xamarin"");
shareActionProvider.SetShareIntent (intent);
return base.OnCreateOptionsMenu(menu); 
</code></pre>

<p>this did the trick with me... i just created my own shareactionprovider ! and i set it myself, then get it... and maybe theres some code even thats not needed.. but its a lot of casting AND MAKE SURE you use the right ones all the time, if you just type ""ShareActionProvider"" you are in fact using V4..! instead of V7</p>
"
"27771611","<p>Allocating the maximum amount in an array will be unlikely to reach the VM limit.</p>

<p>However, if memory is a limitation, you can use the runtime's free memory to calculate it.</p>

<pre><code>int maxSize = Math.min(Integer.MAX_VALUE - 8, Runtime.getRuntime().freeMemory());
</code></pre>

<p>This assumes you are using a <code>byte</code> array (which you are), however for objects, you'd have to divide the max memory by the object size, which includes the object header (4 and 8 bytes for 32/64 bit JVMs respectively).</p>

<p>See <a href=""http://stackoverflow.com/a/8381338/3308999"">http://stackoverflow.com/a/8381338/3308999</a></p>
"
"27879164","<p>In Java, <em>Pass by reference</em> is a sugar coated way of saying that we are not going to make a copy of the actual object, instead we will be giving to you a smaller size object that will only contain the memory address of the object we are actually trying to use. This reference is then <em>passed by value</em> which is more memory efficient than copying the full object.</p>

<hr>

<p>This is the same case in c/c++ when dealing with pointers. A pointer will only contain the memory address of the actual object in question. And to pass the pointer to a function, we make a copy of the memory address of the object and encapsulate this in a pointer object. A pointer's only attributes are the memory address it contains and it's own memory address. Again this is better than making a full copy of the object in question.</p>

<p>C++ has other methods of passing objects by reference or by pointer that sometimes get just plain confusing. There is the <em>pass by reference by pointer</em> which is really just passing a pointer to an object (<code>int *&amp;</code>). A trick to knowing which is which is to read the symbols right to left. There is also (<code>int &amp;&amp;</code>), which you can read about <a href=""http://www.artima.com/cppsource/rvalue.html"" rel=""nofollow"">here</a>.</p>

<hr>

<p>You can see <em>pass-by-reference</em> as a trade-off between copying and <em>pass-by-value</em> because it sacrifices making a full copy of the object to only making a copy of it's memory address. That way you can still work with the object but not sacrifice cpu cycles(time) trying to get a copy of it.</p>

<p>The question you have asked is confusing because it is not specified whose value we are passing -the object's or the reference?. To answer your question, the value being passed is the value of the reference. So with this in mind, you can basically say that there is no real <em>pass-by-reference</em> in java because we are really just passing the value of a reference to an object.</p>

<pre><code>public static void main(String []args) {
    List&lt;Integer&gt; list = new ArrayList&lt;&gt;();
    System.out.println(list.size());
    add(list, 78);
    System.out.println(list.size());
}

public &lt;T&gt; static void add(List&lt;T&gt; list, T b) {
    list.add(b);
}
</code></pre>
"
"27901608","<pre><code>driver.manage().window().maximize(); 
WebElement scroll = driver.findElement(By.id(""ContentPlaceHolder1_EmployeeProfile_btnAccept""));   
scroll.sendKeys(Keys.PAGE_DOWN);   
driver.findElement(By.id(""ContentPlaceHolder1_EmployeeProfile_btnAccept"")).click‌​(); 
</code></pre>
"
"27983457","<p>Use</p>

<pre><code>s3.replaceAll(""\n"","""");
</code></pre>

<p>instead of </p>

<pre><code>s3.replace(""\n"","""");
</code></pre>
"
"27815207","<p>It's the same. The second condition is tested only if the first one is evaluated to true. If there's just one <code>&amp;</code> in the second condition, it would not be the same!</p>
"
"27918770","<p>Try this: </p>

<pre><code>InetAddress old = InetAddress.getLocalHost();
while(true) {
    InetAddress new = InetAddress.getLocalHost();
    if(!old.toString().equals(new.toString())) {
        System.out.println(""IP has changed to: "" + new.toString());
        System.out.println(""IP was: "" + old.toString());
        old = new;
    }
}
</code></pre>

<p>You should run this loop within a seperate Thread and change while(true) into a boolean field which you can manage from outside the thread</p>
"
"27994532","<p>Can also be written as:</p>

<pre><code>String getValue() {
    return new StringBuilder().toString();
}
</code></pre>
"
"27920681","<p>Do you mean?</p>

<pre><code>String text = ...
String text2 = text.replaceAll(""^Demo"", ""NotDemo"");
</code></pre>

<p>For regular expressions the <code>^</code> only matches the start of the string.</p>
"
"27920702","<p>Try something like:</p>

<pre><code>String myline = line.replaceAll(""^[Dd][eE][mM][Oo]"", """");
</code></pre>
"
"27832431","<p>If you can't pass any parameters to the constructor then all you can really do is initialize the object's variables to zero. The object won't contain a valid date, however, until you call your set methods which contains the validation code. The main reason for doing this is to avoid ""variable might not have initialized"" errors.</p>

<pre><code>public MyDate(){
    year = 0;
    month = 0;
    day = 0;
}
</code></pre>

<p>Just make sure that the validation code for setDay checks that the month and year don't equal zero still, otherwise it will be impossible to determine if the day value is valid.</p>
"
"27948980","<p><a href=""http://docs.oracle.com/javase/7/docs/api/java/util/WeakHashMap.html"" rel=""nofollow"">WeakHashMap</a> can fit for you? </p>

<pre><code>Set&lt;Object&gt; weakHashSet = Collections.newSetFromMap(
    Collections.synchronizedMap(new WeakHashMap&lt;Object, Boolean&gt;()
));
</code></pre>
"
"27867176","<p>how about not using a <code>Comparator</code> class and simply implementing bubble sorting ? </p>

<p>something like this,</p>

<pre><code>for (int c = 0; c &lt; (yourArrayList.size() - 1); c++) {
            for (int d = 0; d &lt; (yourArrayList.size() - c - 1); d++) {

                if (Integer.parseInt(yourArrayList.get(d).get(""number"")) &gt; Integer
                        .parseInt(yourArrayList.get(d + 1).get(""number""))) {

                    temporary = yourArrayList.get(d);
                    yourArrayList.set(d, yourArrayList.get(d + 1));
                    yourArrayList.set(d + 1, temporary);

                }
            }
        }
</code></pre>

<p><em>Look at this example,</em></p>

<pre><code>import java.util.ArrayList;
import java.util.HashMap;

public class Main {

    public static void main(String[] args) {

        ArrayList&lt;HashMap&lt;String, String&gt;&gt; yourArrayList = 
                new ArrayList&lt;HashMap&lt;String, String&gt;&gt;();

        HashMap&lt;String, String&gt; myHashMap = new HashMap&lt;String, String&gt;();

        myHashMap.put(""title"", ""first Title"");
        myHashMap.put(""date"", ""This is 1st date"");
        myHashMap.put(""number"", ""5"");
        yourArrayList.add(0, myHashMap);

        myHashMap = new HashMap&lt;String, String&gt;();

        myHashMap.put(""title"", ""Second Title"");
        myHashMap.put(""date"", ""This is 2nd date"");
        myHashMap.put(""number"", ""2"");
        yourArrayList.add(1, myHashMap);

        myHashMap = new HashMap&lt;String, String&gt;();

        myHashMap.put(""title"", ""Third Title"");
        myHashMap.put(""date"", ""This is 3rd date"");
        myHashMap.put(""number"", ""7"");
        yourArrayList.add(2, myHashMap);

        myHashMap = new HashMap&lt;String, String&gt;();

        myHashMap.put(""title"", ""Fourth Title"");
        myHashMap.put(""date"", ""This is 4th date"");
        myHashMap.put(""number"", ""0"");
        yourArrayList.add(3, myHashMap);

        System.out.println(""================="");
        System.out.println(""BEFORE SORTING"");
        System.out.println(""================="");

        for (int i = 0; i &lt; yourArrayList.size(); i++) {
            System.out.println(yourArrayList.get(i));
        }

        HashMap&lt;String, String&gt; temporary;

        for (int c = 0; c &lt; (yourArrayList.size() - 1); c++) {
            for (int d = 0; d &lt; (yourArrayList.size() - c - 1); d++) {

                if (Integer.parseInt(yourArrayList.get(d).get(""number"")) &gt; Integer
                        .parseInt(yourArrayList.get(d + 1).get(""number""))) {

                    temporary = yourArrayList.get(d);
                    yourArrayList.set(d, yourArrayList.get(d + 1));
                    yourArrayList.set(d + 1, temporary);

                }
            }
        }

        System.out.println(""================="");
        System.out.println(""AFTER SORTING"");
        System.out.println(""================="");

        for (int i = 0; i &lt; yourArrayList.size(); i++) {
            System.out.println(yourArrayList.get(i));
        }

    }

}
</code></pre>

<p><strong>Output,</strong></p>

<pre><code>=================
BEFORE SORTING
=================
{date=This is 1st date, number=5, title=first Title}
{date=This is 2nd date, number=2, title=Second Title}
{date=This is 3rd date, number=7, title=Third Title}
{date=This is 4th date, number=0, title=Fourth Title}
=================
AFTER SORTING
=================
{date=This is 4th date, number=0, title=Fourth Title}
{date=This is 2nd date, number=2, title=Second Title}
{date=This is 1st date, number=5, title=first Title}
{date=This is 3rd date, number=7, title=Third Title}
</code></pre>

<hr>

<p><strong><em>You can test it here -> <a href=""http://goo.gl/0M3rBf"" rel=""nofollow"">http://goo.gl/0M3rBf</a></em></strong></p>
"
"27962341","<p>Bouncy Castle Crypto API is a lightweight cryptography API in Java.    </p>

<pre><code>    import org.bouncycastle.crypto.*;
    import org.bouncycastle.crypto.engines.*;
    import org.bouncycastle.crypto.modes.*;
    import org.bouncycastle.crypto.params.*;

    // A simple example that uses the Bouncy Castle
    // lightweight cryptography API to perform DES
    // encryption of arbitrary data.


     public class Encryptor {

            private BufferedBlockCipher cipher;
            private KeyParameter key;


            // Initialize the cryptographic engine.
            // The key array should be at least 8 bytes long.


            public Encryptor( byte[] key ){
            /*
            cipher = new PaddedBlockCipher(
                       new CBCBlockCipher(new DESEngine()));
            */
            cipher = new PaddedBlockCipher(
                        new CBCBlockCipher(new BlowfishEngine()));
            this.key = new KeyParameter( key );
            }        

            // Initialize the cryptographic engine.
            // The string should be at least 8 chars long.

            public Encryptor( String key ){
            this( key.getBytes());
            }
            // Private routine that does the gritty work.

            private byte[] callCipher( byte[] data )
            throws CryptoException {
            int    size = cipher.getOutputSize( data.length );

            byte[] result = new byte[ size ];
            int    olen = cipher.processBytes(data,0,data.length result, 0);
                   olen += cipher.doFinal( result, olen );

            if( olen &lt; size ){
                byte[] tmp = new byte[ olen ];
                System.arraycopy(
                        result, 0, tmp, 0, olen );
                result = tmp;
            }

            return result;
        }
        // Encrypt arbitrary byte array, returning the
        // encrypted data in a different byte array.

        public synchronized byte[] encrypt( byte[] data )
        throws CryptoException {
            if( data == null || data.length == 0 ){
                return new byte[0];
            }

            cipher.init( true, key );
            return callCipher( data );
        }
       // Encrypts a string.

        public byte[] encryptString( String data )
        throws CryptoException {
            if( data == null || data.length() == 0 ){
                return new byte[0];
            }

            return encrypt( data.getBytes() );
        }
        // Decrypts arbitrary data.

        public synchronized byte[] decrypt( byte[] data )
        throws CryptoException {
            if( data == null || data.length == 0 ){
                return new byte[0];
            }

            cipher.init( false, key );
            return callCipher( data );
        }
        // Decrypts a string that was previously encoded
        // using encryptString.

        public String decryptString( byte[] data )
        throws CryptoException {
            if( data == null || data.length == 0 ){
                return """";
            }

            return new String( decrypt( data ) );
        }
    }
</code></pre>
"
"28076028","<p>If you fix i and j, you'll have to find a number  in the array that is less than or equal to <code>t - d[i] - d[j]</code>. Store a second version of you array in which every element also stores it's index. Sort this array in increasing order.</p>

<p>Now, for all pairs <code>i, j</code> with <code>i &lt; j</code> (this is just two nested for loops) you binary search for <code>t - d[i] - d[j]</code>; if such a number exists you go over all number from the left up to this number and check that their indices are greater than j, if so you add to output. Complexity is <code>O(n*n*lg n + k)</code> where k is the number of outputs that satisfy the condition.</p>

<p><strong>EDIT</strong>: OP's first post was <code>=</code> now he changed to <code>&lt;=</code>. I updated my answer.</p>
"
"27844452","<p>To achieve something like this, you would generally need to create a certain type of <a href=""http://docs.oracle.com/javase/tutorial/uiswing/events/"" rel=""nofollow"">event listener</a>. In your case, the desired action needs to be triggered on a mouse event - thus the <code>MouseAdapter</code> event listener seems like a good fit (at first glance). To use the <code>MouseAdapter</code>
 abstract class, you'd need to extend it and override the necessary methods (see <a href=""http://docs.oracle.com/javase/8/docs/api/java/awt/event/MouseAdapter.html"" rel=""nofollow"">here</a> for a full list of available methods). </p>

<p>The shortest way of achieving this is via an <a href=""http://docs.oracle.com/javase/tutorial/java/javaOO/anonymousclasses.html"" rel=""nofollow"">anonymous class</a> declaration, like so: </p>

<pre><code>cruiseSel.addMouseListener(new MouseAdapter(){
    @Override
    public void mouseClicked(MouseEvent e){
        cruiseSel.setText("""");
    }
});
</code></pre>

<p>(However, if you need to override multiple methods or the triggered logic feels complex enough, you might be better off creating a separate listener class.)</p>

<p>EDIT: Alternatively, as @HovercraftFullOfEels pointed out in the comment section, it would probably be wiser to apply the <code>FocusAdapter</code> class (see <a href=""http://docs.oracle.com/javase/7/docs/api/java/awt/event/FocusAdapter.html"" rel=""nofollow"">here</a>) in an identical fashion:</p>

<pre><code>cruiseSel.addFocusListener(new FocusAdapter(){
    @Override
    public void focusGained(FocusEvent e){
        cruiseSel.setText("""");
    }
});
</code></pre>

<p>The problem with the first solution is that it is only concerned with listening for actual MOUSE CLICKS on the text field, while the latter listens for ANY types of focus-gains on it. Thus, when using the TAB key to switch between text fields, only the second solution would perform correctly.</p>
"
"27874499","<p>The difference between int and Integer is that Integer is an object type.you can use in situation like finding the maximum number of type int , or comparing to integers</p>

<p>Integer object is already associated with methods like compare method:</p>

<pre><code>public static void method(int x, int y) {
    System.out.println(Integer.compare(x, y));
}
</code></pre>

<p>Find more at : <a href=""http://docs.oracle.com/javase/7/docs/api/"" rel=""nofollow"">http://docs.oracle.com/javase/7/docs/api/</a></p>
"
"28082833","<pre><code>&lt;application
        android:icon=""@drawable/ic_launcher""
        android:label=""@string/app_name""
        android:theme=""@style/AppTheme"" &gt;
        &lt;activity
            android:name="".first""
            android:label=""@string/title_activity_main"" &gt;
            &lt;intent-filter&gt;
                &lt;action android:name=""android.intent.action.MAIN"" /&gt;

                &lt;category android:name=""android.intent.category.LAUNCHER"" /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
        &lt;activity
            android:name="".second""
            android:label=""@string/title_activity_main"" &gt;

        &lt;/activity&gt;
    &lt;/application&gt;
</code></pre>
"
"27855415","<p>Avoid using the depriciated <a href=""http://docs.oracle.com/javase/7/docs/api/java/sql/Date.html"" rel=""nofollow"">Date()</a> constructor for setting dates, It is recommended to use <a href=""http://docs.oracle.com/javase/7/docs/api/java/util/Calendar.html"" rel=""nofollow"">Calendar</a> class</p>

<pre><code>Calendar calendar = Calendar.getInstance();
calendar.set(Calendar.YEAR, 2014);
calendar.set(Calendar.MONTH, Calendar.NOVEMBER);
calendar.set(Calendar.DAY_OF_MONTH, 25);
Date date = calendar.getTime();
</code></pre>

<p>You can also use the <a href=""http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html"" rel=""nofollow"">simpleDateFormat</a> for setting/formatting date values:-</p>

<pre><code>SimpleDateFormat sdf = new SimpleDateFormat(""dd-MM-yyyy"");
Date date = sdf.parse(""25-11-2014"");
</code></pre>
"
"27902676","<p>May be you can do like this</p>

<pre><code> String str1=""String1"";  
 String str2 = ""String2"";  
 System.out.println(""str1 "" + str1.hashCode());  
 System.out.println(""str2 = "" + str2.hashCode());  

 str1=str1 + str2;  
 System.out.println(""The hashcode str1 changed : "" + str1.hashCode());
</code></pre>

<p>Hence proved</p>
"
"28146196","<p>If I understand your problem correctly I can give a simple solution for that. Just explain that's your correct desire or not.</p>

<pre><code>public abstract class U {
    abstract String getValueString ();
}
public class A extends U{
    @Override
    String getValueString() {
        return ""Class A"";
    }
}
public class B extends U{
    @Override
    String getValueString() {
        return ""Class B"";
    }
}
public class Z {
    public static void main(String[] args) {
        System.out.println(getValue(new B()));
        ArrayList&lt;U&gt; p = new ArrayList&lt;&gt;();
        p.add(new A());
        p.add(new B());
        System.out.println(concatedValue(p));
    }

    public static String getValue(U u) {
        return u.getValueString();
    }

    public static String concatedValue(ArrayList&lt;U&gt; uList) {
        String test = """";
        for (U u : uList) {
            test += u.getValueString();
        }
        return test;
    }

}
</code></pre>

<p>You can add more classes like C , D else whatever you want.</p>
"
"28170305","<p>Its just a Typo error in 'arrayOfInts'.</p>

<pre><code>public class SortaPP {

public static void main(String[] args) {
    // change to arraysOfInts
    int[] arraysOfInts = {42,97,3,689,14,1076,3000,8,632,327,976,4215};

    for(int i=arraysOfInts.length;--i&gt;=1;){   

        for(int j = 0;j&lt;i;j++){
            if(arraysOfInts[j] &gt; arraysOfInts[j+1]){
                int temp = arraysOfInts[j];
                arraysOfInts[j] = arraysOfInts[j+1];
                arraysOfInts[j-1] = temp;
               // You will get ArrayIndexOutOfBoundsException: -1

                for (int k = 0; k &lt; arraysOfInts.length; k++){
                    System.out.print(arraysOfInts[k]+"""");
                    System.out.println();
                }   
            }
        }
    }
}                
}
</code></pre>
"
"28084706","<pre><code>var a = [2,3,-1,4,5,7,8,13,-20];
var positiveNums =  a.filter(function(num){
  return num &gt; 0
}); // [2,3,4,5,7,8,13]
var sum = positiveNums.reduce(function(a, b){
  return a+b;
}); // 42
</code></pre>
"
"28170523","<p>1) advise to read some books about algorithms, for starting <a href=""http://www.cin.ufpe.br/~grm/downloads/Data_Structures_and_Algorithms_in_Java.pdf"" rel=""nofollow"">Data Structures and Algorithms</a> </p>

<p>2) As was said in comments array<strong>s</strong>OfInts is not the same arrayOfInts</p>

<p>3) and one more moment, your third <code>for</code>:  </p>

<pre><code> for (int i = 0; i &lt; arrayOfInts.length; i++){
   System.out.print(arrayOfInts[i]+"""");
   System.out.println();
 }
</code></pre>

<p>1. you will get error: <code>Duplicate local variable i</code>
2. you will get: <code>java.lang.ArrayIndexOutOfBoundsException</code> </p>

<p>so if you want use third for use:                   </p>

<pre><code> for (int k = 0; k &lt; arrayOfInts.length-1; k++){
     System.out.print(arrayOfInts[k]+"""");
     System.out.println();
 }  
</code></pre>

<p>4)  <code>arrayOfInts[j-1]</code> very bad, because if <code>arrayOfInts[j] &gt; arrayOfInts[j+1]</code> will return <code>true</code> when <code>j == 0</code> you will get <code>java.lang.ArrayIndexOutOfBoundsException:</code>, because no element with -1 index</p>
"
"28084840","<p>Assuming the subset needs to be at most 5 numbers long, just try to find an algorithm that gives you the 5 biggest positive numbers (if the subset needs to have only 5, not at most 5, then you'll still need the 5 largest numbers.)</p>

<p>This is a suggestion that doesn't use any complex functions:</p>

<pre><code>int ans[5]; // you could declare an array of undetermined length here, if you don't want ""garbage"" in case the subarray has less than 5 members
bool beenMax[9]={false};
for (int i=0; i&lt;5; i++)
{
    int max=0; // if you need exactly five numbers in the answer, initialize max to -99999 so that it can later become the largest negative number
    for(int j=0; j&lt;9; j++)
    {
        if (!beenMax[j] &amp;&amp; a[j]&gt;max) {
            max=a[j];
            beenMax[j]=true;
        }
    }
    if (max!=0) {ans[i]=max;} // remove this if/else, but keep ans[i]=max if you need exactly 5
    else { break; }
}
</code></pre>

<p>You can later cout ans member by member or something to visualize it. Or just use the debugger.</p>

<p>Hope this helped! :)</p>
"
"27941103","<pre><code>String target = ""28 Μαρτίου 2014, 14:00"";
    Locale locale = new Locale(""el"", ""GR"");
    try
    {
        DateFormat df = new SimpleDateFormat(""dd MMM yyyy, HH:mm"", locale);
        Date result =  df.parse(target);
        System.out.println(result);
    }
    catch(ParseException e)
    {
        e.printStackTrace();
    }
</code></pre>
"
"27944098","<p>try this </p>

<pre><code> int day[] = new int[365];

    for(int i=1; i&lt;day.length; i++){
        day[i-1] = i;
        System.out.print(day[i-1]+"" "");
        if((i % 10) == 0){
            System.out.println();
        }
        if(i==day.length-1){
            day[i] = i+1;
            System.out.print(day[i]+"" "");
        }
    }
</code></pre>

<p><strong>OUTPUT</strong></p>

<pre><code>1 2 3 4 5 6 7 8 9 10 

11 12 13 14 15 16 17 18 19 20 

21 22 23 24 25 26 27 28 29 30 

31 32 33 34 35 36 37 38 39 40 

41 42 43 44 45 46 47 48 49 50 
....... 
</code></pre>
"
"28182714","<pre><code>public static int getIndex(int[] arr)
{
    long sum = 0;
    for (int i = 0; i &lt; arr.length; i++) {
        sum += arr[i];
    }

    int leftSum = 0;

    for (int i = 0; i &lt; arr.length; i++) {
        if (leftSum == sum - (arr[i] + leftSum)) {
            return i;
        }
        leftSum += arr[i];

    }
    return -1;
}
</code></pre>
"
"28182984","<p>Here's what I came up with. The basic idea is to find the minimum number and then invalidate this digit. Unfortunately that means that the original digit data is lost but you can always restore it from the user input <code>int</code>:</p>

<pre><code>int currentMin;

System.out.print(""The largest number with these digits is: "");

while(true) {
  currentMin = Math.min(digit1, Math.min(digit2, Math.min(digit3, Math.min(digit4, digit5))));
  //Invalidate the min digit
  if (currentMin == digit1) digit1 = Integer.MAX_INT;
  if (currentMin == digit2) digit2 = Integer.MAX_INT;
  if (currentMin == digit3) digit3 = Integer.MAX_INT;
  if (currentMin == digit4) digit4 = Integer.MAX_INT;
  if (currentMin == digit5) digit5 = Integer.MAX_INT;
  if (currentMin == Integer.MAX_INT) {
    break;
  } else {
    System.out.print(currentMin + "" "");
  }
}
</code></pre>
"
"27969346","<p>There is a lot of improvements that we could do to that methods, but focusing on your question, you may use an output parameter, it is easier to read and undestand.</p>

<pre><code>public String orderTime(String out dateStore){
    dateStore = """";
</code></pre>
"
"28045299","<p>Cast it as a ArrayList </p>

<pre><code>    List&lt;FootballClubNL&gt; clubs = (ArrayList&lt;FootballClubNL&gt; )in.readObject();
</code></pre>
"
"28185210","<p>Please don't ask such question here. Ans to your question may be looks like follows but once again don't ask such questions here.</p>

<pre><code>public class simple {
public static void main (String arg[])
{
for( int i = 1; i &lt;= 3; i++ ){
for( int j = 0; j &lt; i; j++ ){
if(j== i-1)
{
System.out.print(i);
}
else
{
System.out.print(i+""*"");
}
}
System.out.println("""");
}
}
} 
</code></pre>
"
"28030234","<p>Here is the code snippet:</p>

<pre><code>import java.util.regex.*;

public class RegexTest {

 public static void main(String []args){

    String regex = ""/[tT]/"";
    System.out.println(regex);
    String str = ""This is the difficult one Thats it"";
    String[] strings = str.split("" "");
    for(int i=0;i&lt;strings.length;i++) {
    regexMatch(strings[i], regex);
   }
 }

 private static regexMatch(String str, String regex) {
     Pattern p = Pattern.compile(regex);
     Matcher m = p.matcher(str);
     System.out.println(""String: ""+str+"";Result:""+m.find());
 }

}
</code></pre>

<p>Output:</p>

<pre><code>[tT]
String: This;Result:true
String: is;Result:false
String: the;Result:true
String: difficult;Result:true
String: one;Result:false
String: Thats;Result:true
String: it;Result:true
</code></pre>
"
"28245220","<p>Have you tried running your xpath in Chrome Developer tool or in Firebug?</p>

<pre><code>List&lt;WebElement&gt; allElements = driver.findElements(By.xpath(""//*[contains(@class,'x-grid-tree-node-leaf')]""));
</code></pre>

<p>should work.</p>
"
"28246201","<p>If your file is a file of raw bytes you can use <a href=""http://docs.oracle.com/javase/7/docs/api/java/nio/ByteBuffer.html"" rel=""nofollow""><code>ByteBuffer</code></a> to read the file in little endian mode, and then use <a href=""http://docs.oracle.com/javase/7/docs/api/java/nio/ByteBuffer.html#asIntBuffer()"" rel=""nofollow""><code>asIntBuffer()</code></a> to read out the <code>int</code>s through an <a href=""http://docs.oracle.com/javase/7/docs/api/java/nio/IntBuffer.html"" rel=""nofollow""><code>IntBuffer</code></a>. If you need to navigate the file, you can use <a href=""http://docs.oracle.com/javase/7/docs/api/java/nio/channels/FileChannel.html#position()"" rel=""nofollow""><code>srcChan.position(targetPosition);</code></a> to skip to your next ""field"".</p>

<pre><code>try (RandomAccessFile srcFile = new RandomAccessFile(""data/data.bin"", ""r"");
     FileChannel srcChan = srcFile.getChannel();) 
{
    //    Careful with these casts if you have large files - channel size is a long
    ByteBuffer ib = ByteBuffer.allocate((int)srcChan.size());
    ib.order(ByteOrder.LITTLE_ENDIAN);
    srcChan.read(ib);
    IntBuffer fb = ((ByteBuffer)ib.rewind()).asIntBuffer();
    while (fb.hasRemaining())
        System.out.println(fb.get());
}
</code></pre>

<p>Output:</p>

<pre>23
1094927187
17
13738</pre>

<p>If however you have a text file with a series of space delimited hex strings (the file format is unclear from your question) you'll have to add a bit of trickery to read that in, but once it is in you can use <code>ByteBuffer</code> in little-endian mode to read out the integers again.</p>

<p>The general process would be:</p>

<ol>
<li><code>inputString.split("" "")</code></li>
<li>convert each element of that <code>String</code> array into a <code>byte[]</code></li>
<li>use <code>ByteBuffer.wrap</code> to wrap the resulting <code>byte[]</code> and walk through the <code>int</code>s</li>
</ol>

<p>It probably (not compile time tested) looks something like the below (which doesn't use an <code>IntBuffer</code>, just to show an alternative method):</p>

<pre class=""lang-java prettyprint-override""><code>String input = ""17 00 00 00 53 43 43 41 11 00 00 00 AA 35 00 00"";
String[] source = input.split("" "");
byte[] sourceBytes = new byte[source.length];
for (int i = 0; i &lt; source.length; i++) {
    sourceBytes[i] = (byte)Integer.parseInt(source[i], 16);
}
ByteBuffer bb = ByteBuffer.wrap(sourceBytes);
bb.order(ByteOrder.LITTLE_ENDIAN);
while (bb.hasRemaining())
    System.out.println(bb.getInt());
</code></pre>

<p>The output is the same as for the first approach.</p>
"
"28079158","<pre><code>System.out.printf(""%.1f"", insertFloatValueHere);
</code></pre>

<p>automatically rounds to the nearest tenth</p>

<p>if you want to change the number of decimal places it rounds to:</p>

<p><code>""%.1f""</code> rounds to one place
<code>""%.2f""</code> rounds to two places
<code>""%.3f""</code> rounds to three places... etc.</p>

<pre><code>System.out.printf(""%.1f"", dArr[i]);
</code></pre>

<p>replaces:</p>

<pre><code>sprintf(result,""%3.1lf"",dArr[i]);
cout &lt;&lt; result &lt;&lt; endl;
</code></pre>
"
"28048596","<p>how about a static helper method ? You can use it on 2 objects or modify for one object only:</p>

<pre><code>public static boolean nullSafe(InvoicePos a, InvoicePos b) {
        try {
            invoicePosOne.getInvoice().getInvoiceNo();
            invoicePosOne.getInvoice().getInvoiceNo();
        } catch (NullPointerException np) {
            return false;
        }
        return true;
    }
}
</code></pre>

<p>if unsafe (NP) will return false, if save (no NP thrown) will return true. Implemented in your code:</p>

<pre><code>@Override
                public int compare(final InvoicePos invoicePosOne, final InvoicePos invoicePosTwo) {
                        if (nullSafe(invoicePosOne, invoicePosOne)){
                   return invoicePosOne.getInvoice().getInvoiceNo().compareTo(invoicePosTwo.getInvoice().getInvoiceNo());
                        } else {
                                return 0; // or what you want
                        }
                }
</code></pre>
"
"28151137","<pre><code> char c;
 Scanner input = new Scanner(System.in);
 System.out.print(""Enter a number:"");
 int ip = input.nextInt();//&lt;---- get integer
 c = (char)ip;// cast int value to char
 System.out.println(c);
</code></pre>

<p>if <code>input</code> is 97 <code>output</code> will be <code>a</code></p>
"
"28337216","<p>Try following....
(I still can't confirm whether it is the correct answer and you can confirm that)</p>

<pre><code>public static void main(String[] args) {
    String num = ""73167176531330624919225119674426574742355349194934"" +
            ""9698352031277450632623957831801698480186947885184385861560789112949495459501737958331952853208805511"" +
            ""1254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113"" +
            ""6222989342338030813533627661428280644448664523874930358907296290491560440772390713810515859307960866"" +
            ""7017242712188399879790879227492190169972088809377665727333001053367881220235421809751254540594752243"" +
            ""5258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482"" +
            ""8397224137565705605749026140797296865241453510047482166370484403199890008895243450658541227588666881"" +
            ""1642717147992444292823086346567481391912316282458617866458359124566529476545682848912883142607690042"" +
            ""2421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188"" +
            ""8458015616609791913387549920052406368991256071760605886116467109405077541002256983155200055935729725"" +
            ""71636269561882670428252483600823257530420752963450"";

    int PRODUCT_SIZE = 13;
    long highest = 0;

    for (int i = 0; i &lt; (num.length()- PRODUCT_SIZE + 1); i++) {
        long mult = 1;
        for (int j = i; j&lt; (i + PRODUCT_SIZE); j++) {
            mult *= Character.getNumericValue(num.charAt(j));
        }
        if (mult &gt; highest) {
            highest = mult;
        }
    }
    System.out.println(highest);

}
</code></pre>

<p>Cheers!</p>
"
"28370253","<p>@Edward Orlowski</p>

<p>So i got an erro</p>

<pre><code>ArrayList&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();

for (int i = 0; i &lt; 36; i++) {
  list.add(new Integer(i));
}

lottoNummer[0] = (int) ((35 * Math.random()) + 1);  
list.remove(lottoNummer[0]);
lottoNummer[1] = (int) ((35 * Math.random()) + 1); 
list.remove(lottoNummer[1]);
lottoNummer[2] = (int) ((35 * Math.random()) + 1); 
list.remove(lottoNummer[2]);
lottoNummer[3] = (int) ((35 * Math.random()) + 1); 
list.remove(lottoNummer[0]);
lottoNummer[4] = (int) ((35 * Math.random()) + 1);  
list.remove(lottoNummer[4]);
lottoNummer[5] = (int) ((35 * Math.random()) + 1);
list.remove(lottoNummer[5]);
lottoNummer[6] = (int) ((35 * Math.random()) + 1);
list.remove(lottoNummer[6]);
</code></pre>
"
"28181518","<pre><code>try this...

private static int inputStudentNumber(){
    System.out.println(""Enter the student number:"");
    int studentNum;
    int var = 1;
while(var ==1)´
{
    try{
        studentNum = in.nextInt();
        var=0;
        return studentNum;
    }catch(Exception e){
        System.out.println(""Invalid input, it can only be integer."");
        var=1;
        return inputStudentNumber();
    }
}


}
</code></pre>
"
"28374205","<p>This is a solution on c#</p>

<pre><code>bool hasAdjacentRepeats(String input)
        {
            var firstLetter = input[0];
            int flag = 1;
            foreach (var letter in input)
            {
                if (firstLetter == letter &amp;&amp; flag != 1)
                {
                    return true;
                }
                else
                {
                    firstLetter = letter;
                }
                flag = 0;
            }
            return false;
        }
</code></pre>

<p>You can use an similar algorithm:
the input has two adjacent characters which are identical.</p>
"
"28202333","<p>your car class could imlpement the Comparable interface :</p>

<pre><code>public class Car implements Comparable&lt;Car&gt;

@Override
public int compareTo(Car o) {
    return this.totalOdMiles &lt; o.totalOdMiles ? 0 : 1;
}
</code></pre>

<p>and the you can sort your array at the end of your while:</p>

<pre><code>Arrays.sort(carList);
</code></pre>

<p>this should somehow work i guess :)</p>
"
"28211327","<p>In swift , to make large string as in new line or break in multiple lines.Just put <code>\n</code>. 
It worked for me.</p>

<p>For example : <code>""This string want to break from here then it shows like this""</code></p>

<p>then just add \n (back slash n) only, do not add """" with this.</p>

<p>Now   </p>

<pre><code>""This string want to break from here **\n** then it shows like this""
</code></pre>

<p><em>output :</em></p>

<pre><code>This string want to break from here
</code></pre>

<p>then it shows like this</p>

<p>Hope it helps someone.</p>
"
"28379833","<pre><code>/*this program sort in ascending order by insertion sort */  
class InsertionSort{
public static void main(String h[]){
int[] a = {100,12,31, 5, 4, 3, 2, 1 };
int i, j, temp;
    for (i = 1; i &lt; a.length; i++)
    {
        j = i - 1;
        while (j &gt;= 0 &amp;&amp; a[j] &gt; a[i] )
        {
            temp = a[i];
            a[i] = a[j];
            a[j] = temp;
            i=j;
            j--;

        }
    }
for(int x=0; x&lt;a.length;x++){
    System.out.println(a[x]);   
  }
}
}
/*this program sort in descending order by insertion sort */  
class InsertionSort{
public static void main(String h[]){
int[] a = {100,12,31, 5, 4, 3, 2, 1 };
int i, j, temp;
    for (i = 1; i &lt; a.length; i++)
    {
        j = i - 1;
        while (j &gt;= 0 &amp;&amp; a[j] &lt; a[i] )
        {
            temp = a[i];
            a[i] = a[j];
            a[j] = temp;
            i=j;
            j--;

        }
    }
for(int x=0; x&lt;a.length;x++){
    System.out.println(a[x]);   
  }
}
}
</code></pre>
"
"28380418","<p>While loop is unnecessary here,</p>

<pre><code>                if ((a[j] &lt; a[i]))
                {
                    temp = a[i];
                    a[i] = a[j];
                    a[j] = temp;
                }
</code></pre>
"
"28407938","<pre><code>WS.url(url)
.setContentType(""application/x-www-form-urlencoded"")
.post(""param1=foo&amp;param2=bar"");
</code></pre>

<p>This method uses an HTTP POST method to send its form request. As seen from the official documentation of Play, you should had already known of the GET method.</p>

<p>这种方式是使用post方式提交表单请求，见于play的官方文档，get方式的你应该已经知道了。</p>
"
"28423870","<p>you need to use an if statement because you just want to inform the user that numbers entered are not correct</p>

<pre><code>do{
    System.out.println(""Enter your first number.""); 
    firstNumber = input.nextFloat();
    input.nextLine();


    System.out.println(""Enter your second number.""); 
    secondNumber = input.nextFloat();

    finalNumber = firstNumber % secondNumber;
    if(finalNumber!=0)
        System.out.println(""values not correct "");
}while(finalNumber!=0);
</code></pre>
"
"28223852","<p>One point you should note is that in a WHERE clause, adding an ""OR"" usually adds a lot of overhead to a query. An ""AND"" is usually much faster and requires less computing by the compiler. So I would try something that would not use that as best as possible.</p>

<p>Here is my idea of how to best optimize this:</p>

<p>1) put indexes on all 3 columns (col1, col2, col3).
2) Determining which columns to be used should, ideally, be computed in Java and based on this the query would be fired. Here is my idea (in PHP, but can be extended to Java... Sorry, not familiar enough!):</p>

<pre><code>&lt;?php

if (isset($_GET['options'])) {
$options = explode("","",$_GET['options']); // assuming you feed the columns separated with columns
}

if (isset($_GET['col1Value'])) {
$col1Value = $_GET['col1Value']; 
}

if (isset($_GET['col2Value'])) {
$col2Value = $_GET['col2Value']; 
}

if (isset($_GET['col3Value'])) {
$col3Value = $_GET['col3Value']; 
}

if (in_array(""col1"",$options)) { // check to see if 'col1' exists in array
$clause = ' and coalesce(col1,'') = $col1Value';
}

if (in_array(""col2"",$options)) { // check to see if 'col2' exists in array
$clause = $clause.' and coalesce(col2,'') = $col2Value';
}

if (in_array(""col3"",$options)) { // check to see if 'col3' exists in array
$clause = $clause.' and coalesce(col3,'') = $col3Value';
}


$sql = ""

select *
from table
where 1=1
     $clause
"";

pg_execute($databaseConnection,$sql);

?&gt;
</code></pre>

<p>This is probably not the best example as it is in PHP, but hopefully that gives you some ideas....</p>

<p>Cheers!</p>
"
"28382049","<p>With the @New annotation CDI creates simply a new instance of the class defined with the value of the @New annotation. if the value is omitted, then the type of the declared injection point is taken.</p>

<p>Without @New annotation CDI creates a proxy instance instead of the real instance. now with @New instance there is no proxy available because only a new() instance is requested. therefor is no need to call a producer method.. with @New the @Produces annotation is not called.</p>

<p>example code:</p>

<pre><code>package pl.piotrek;

import java.util.Date;
import javax.enterprise.inject.New;
import javax.enterprise.inject.Produces;
import javax.inject.Inject;
import org.jglue.cdiunit.CdiRunner;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(CdiRunner.class)
public class AtNewAndProducerTest {

    @Produces
    public Date produceDate() {
        return new Date((long)(Math.random() * 2000000000000L));
    }

    @New @Inject
    private Date d1;

    @New @Inject
    private Date d2;

    @New @Inject
    private Date d3;

    @Inject
    private Date d4;

    @Inject
    private Date d5;

    @Test
    public void test() {
        System.out.println(d1);
        System.out.println(d2);
        System.out.println(d3);
        System.out.println(d4);
        System.out.println(d5);

        // will output something like this:
        // Sat Feb 07 13:16:05 CET 2015
        // Sat Feb 07 13:16:05 CET 2015
        // Sat Feb 07 13:16:05 CET 2015
        // Mon Sep 19 12:31:29 CEST 2005
        // Sat Aug 14 21:51:06 CEST 1999
    }

}
</code></pre>

<p>you can find this example on GitHub:
<a href=""https://github.com/StefanHeimberg/stackoverflow-28379562"" rel=""nofollow"">https://github.com/StefanHeimberg/stackoverflow-28379562</a></p>
"
"28437205","<pre><code>return productName.replace (brandName, """");
</code></pre>

<p>This will replace the brandname by an empty string, essentially removing it.</p>

<p>I also suggest changing the parameter type from</p>

<pre><code>ArrayList
</code></pre>

<p>to</p>

<pre><code>ArrayList &lt;String&gt;
</code></pre>

<p>. Then you can also leave the toString conversions out.</p>
"
"28395760","<p>Java is not a loosely typed language, you have to tell the compiler what each variable is going to be. And to store this kind of structured data in Java, you should first declare a class and instantiate objects of that class. Following is how you would achieve the same thing as your PHP code:</p>

<pre><code>class Car {
    private String name, color;
    private int doors;

    Car(String name, int doors, String color) {
        this.name = name;
        this.doors = doors;
        this.color = color;
    }

    public String getName() {
        return this.name;
    }
}

public class CarMainClass {
    public static void main(String[] args) {
        Car[] aCars = new Car[2];

        aCars[0] = new Car(""vauxhall"", 5, ""black"");
        aCars[1] = new Car(""peogeot"", 3, ""red"");

        System.out.println(""First car name is: "" + aCars[0].getName());
    }
}
</code></pre>

<p>Compile using:</p>

<pre><code>javac CarMainClass.java
</code></pre>

<p>Then run:</p>

<pre><code>java CarMainClass
</code></pre>

<p>You will have to learn the basics of Java first to understand the above code.</p>
"
"28395815","<p>It seems what you are trying to achive is an 'array of cars'. So instead of creating an array of arrays, I recommend to literally implement an 'array of cars'.</p>

<p>To do this, I would define the car first, possibly in a different file:</p>

<pre><code>class Car {
  //you can make these private and use 'get' and 'set' methods instead
  public String name;
  public String color;
  public int doors;

  public Car() {
    name = """";
    color = """";
    doors = 0;
  }

  public Car(String name, String color, int doors) {
    this.name = name;
    this.color = color;
    this.doors = doors;
  }
}
</code></pre>

<p>You can use the car structure in an another module like this:</p>

<pre><code>Car[] cars = new Car[100]; //create one hundred cars
cars[11].doors = 4; //make the 12th car's number of doors to 4 
</code></pre>

<p>You can use more flexible data structures, like Vectors, List, Maps, etc... Search for Java collections, you will find tones of info.</p>
"
"28395856","<p>Instead of creating 2D Array you can create 1 class <strong>Car</strong></p>

<pre><code>   public class Car{
    private String carName;
    private String color;
    private int noOfDoors;

    public car(String carName,int door,String color){
    this.carName=carName;
    this.door=door;
    this.color=color;
    }
    public String getCarName(){
    return getCarName;
    }

    public void setCarName(String carName){
    this.carName=carName;
    }
  // Same getters(getXXX) and setters(setXXX) for other Variables
 }
</code></pre>

<p>Now create Objects of above class</p>

<pre><code> Car audi=new Car(""audi"",2,""Black"");
 Car bmw=new Car(""bmw"",4,""White"");
</code></pre>

<p>Now add these to the <code>List&lt;Cars&gt;</code></p>

<pre><code>List&lt;Car&gt; listOfCars=new ArrayList&lt;Car&gt;();
listOfCars.add(audi);
listOfCars.add(bmw);
</code></pre>

<p><strong>Now to Print First Car Name</strong></p>

<pre><code>Car firstCar=listOfCars.get(0);
System.out.println(firstCar.getCarName()); //here getter Method Helped you
</code></pre>
"
"28277321","<p>ok Tell me for which scenrio it do not work,</p>

<pre><code>declare @col1 varchar(50) 
declare @col2 varchar(50) 
declare @col13 varchar(50) 
if(@col1='')
set @col1=null
if(@col2='')
set @col2=null
if(@col13='')
set @col13=null
select * from myTable
 where 
((col1=@col1) or (@col1 is null) )
and ((col2=@col2) or (@col2 is null) ) 
and ((@col13=@col3) or (@col13 is null) 
</code></pre>
"
"28395858","<p>I would suggest to get familiar with HashMaps, Maps and ArrayLists. In Java and many other languages is something analogous to a video game cheat.</p>

<pre><code>private static Map&lt;Integer, HashMap&lt;String, String&gt; &gt; carMap = new HashMap&lt;Integer, HashMap&lt;String, String&gt; &gt;();
</code></pre>

<p>But in this case you have to understand how would OO principles help you. You can create a class with Car objects and populate a HashMap etc. </p>

<pre><code>   class Car {
     private String name, colour;....
     public Car(){....}
     public void setValues(...){....}
}
</code></pre>

<p>To achieve better what you want to I would suggest reading this and getting familiar with some design patterns. It's a bit further down the road, but do it for the lulz and seeing what it's out there. Example : <a href=""http://howtodoinjava.com/2012/10/23/implementing-factory-design-pattern-in-java/"" rel=""nofollow"">http://howtodoinjava.com/2012/10/23/implementing-factory-design-pattern-in-java/</a></p>

<p>When moving from scripting to strongly typed languages sometimes you have to change your way of thinking too.</p>
"
"28347924","<p>inside <code>onOptionsItemSelected()</code> in activity inside your switch after calling <code>createNewNote()</code> instead of returning <code>true</code> return <code>super.onOptionsItemSelected(item)</code></p>
"
"28291948","<p>All children do <em>not</em> refer to the same object. Each child object will be a new object that will have its own copy of all references declared in the parent as well as a copy of all references declared in itself. </p>

<p>If you want to access the same reference between classes, try making it <code>static</code> in the parent class.</p>
"
"28511132","<p>If you are wanting to wait for a thread to finish, try ""join"". There is a good example in the java documentation:
<a href=""http://docs.oracle.com/javase/tutorial/essential/concurrency/join.html"" rel=""nofollow"">http://docs.oracle.com/javase/tutorial/essential/concurrency/join.html</a></p>

<p>So, in your case if you want to wait for A to finish before calling start on B.</p>

<pre><code>a.start();
a.join();
b.start();
</code></pre>

<p>At least, this is what I think you are asking (Your question seems a bit unclear).</p>
"
"28511288","<p>I think that you need a MainActivity class because you just established your methods but you don't call them from a MainActivity class. </p>

<p>I guess that you want to make a non-stop comunication so I think that you can put a loop in the MainActivity class and declare both threads there, just replace ""Test"" class for a MainActivity class. </p>

<p>Or, if you want, you can put MainActivity like this: </p>

<p><code>public class Test {</code></p>

<p><code>public static void main(String[] args) {</code></p>

<pre><code>  boolean aCanTalk;

  Thread a;
  Thread b;
  void t() {
    aCanTalk = true;
    a = new Thread(new A(this));
    b = new Thread(new B(this));
    a.start();
    b.start();
}
</code></pre>

<p>}`</p>
"
"28322535","<p>Currently your code copies all the values of <code>array</code> into <code>newarray</code> every time there is an upper case character.</p>

<p>To achieve what you want, try this:</p>

<pre><code>int n = 0;

for(int i = 0 ; i&lt; array.length; i ++){
    if(Character.isUpperCase(array[i])){
       n++;
    }
}

char[] newarray = new char[array.lenght - n];
int index = 0;

for(int i = 0;i &lt; array.lenght;i++){
   if(Character.isLowerCase(array[i])){
       newarray[index++] = array[i];
   }
}
</code></pre>
"
"28373818","<p>As commented by Jon Lin</p>

<p>Your example text does not actually talk about newlines - <code>\\n</code> is the string <code>\n</code>.</p>

<p>The other fallacy is that <code>replaceAll</code> expects a regular expression as the first input. So <code>\\n</code> is actually replaced to <code>\n</code> as <code>\</code> is the escaping character, which is then interpreted as a newline character - case of double escaping, thus in your input text <code>\\</code> is not matched.</p>

<p>If you try</p>

<pre><code>text = text.replaceAll(""\\\\n"", """");
</code></pre>

<p>At least you get the expected result, as it's both a Java string and a regular expression both interpret <code>\</code> as escaping character.</p>
"
"28380754","<p>If this is not being run on the UI thread, try putting a <code>while(wallPostUserAvatar!=null);</code> after the call to the log function.  This would work because, as is, you probably have a race condition between the return and the API request and the return statement will almost always win that race.</p>
"
"28560338","<p>If you embed your instruction inside a try .. catch instruction , your program will run without problems:</p>

<pre><code>SwingUtilities.invokeLater(new Runnable(){

                        public void run()
                        {
                        try {
                        tInput.putClientProperty(""JComboBox.isTableCellEditor"", Boolean.TRUE);
                        tInput.showPopup();
                        }
                        catch   (IllegalComponentStateException e) {
                                return;
                                }

                          }
                 }); 
</code></pre>
"
"28534252","<p>The first problem I notice with your code is that it will <code>return 1</code> if the first digit of the number matches the digit your looking for.  What if you pass the number 1145?  It would return 1 instead of 2.  </p>

<p>A good base case would be checking to see if the number passed is valid (if not return 0), otherwise iterate through each digit (recursively) using a counter to count how many times the digit occurs.  I noticed @Jean-François Savard posted a pretty good code example for you.   </p>
"
"28380154","<p>Your question isn't well-enough defined for a general answer, but if you want to get rid of the fractional part, just parse it as a double and then cast it to <code>int</code> or <code>long</code>.</p>
"
"28534419","<p>Of course if you didn't need to use recursion it is a one liner using <a href=""http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html"" rel=""nofollow"">StringUtils</a></p>

<pre><code>StringUtils.countMatches(Integer.toString(number), Integer.toString(digit));
</code></pre>

<p>I realise this is not answering the question but you haven't specified why you would want / need to use recursion in this case... Is it homework perhaps?</p>
"
"28428403","<pre><code>HashSet hs = new HashSet();
                hs.addAll(arrayList);
                arrayList.clear();
                arrayList.addAll(hs);
</code></pre>
"
"28396530","<p>The simplest way to convert array into JSON is:</p>

<pre><code>JSONArray jsonArray = new JSONArray(Arrays.asList(myArray));
</code></pre>
"
"28396558","<p>I assume you want the following:</p>

<pre><code>StringBuilder builder = new StringBuilder();
for (int i = 0; i &lt; array1.length; i++)
{
    builder.append(""\"""");
    builder.append(array1[i]);
    builder.append(""\"":\"""");
    builder.append(array2[i]);
    builder.append(""\"""");
    if (i &lt; (array1.length - 1))
        builder.append("", "");
}
String result = builder.toString();
</code></pre>
"
"28420926","<p>I think that the problem is that you're not accounting for repeat digits.  You could check to make sure all the digits add up to the sample number, ie:</p>

<pre><code>1+1+0 = 2
1+0+0 = 1
1!=2
Move onto rule 3. 
</code></pre>

<p>Using this code:</p>

<pre><code>guessDigit1  + guessDigit2 + guessDigit3 == lotteryDigit1 + lotteryDigit2 + lotteryDigit3
</code></pre>

<p>I don't know if this will solve all of your problems, but it's  a start, and it should solve your immediate issue with the '110' value. Good luck!</p>
"
"28421437","<p>Instead, you want to match each digit to the remaining digits. The ""right"" way to do this would be with a Set, but it sounds like you can't use those yet. You can do it manually, it's just a bit of work to write out all the cases. Basically, you compare one digit of the guess to one digit of the lottery, then compare the remaining two guess digits to the remaining two lottery digits. Rinse repeat for each digit.</p>

<p>Would it be something like this:</p>

<pre><code>else if ((guessDigit1 == lotteryDigit2 
            || guessDigit1 == lotteryDigit3)
            &amp;&amp; (guessDigit2 == lotteryDigit1
            || guessDigit2 == lotteryDigit3)
            &amp;&amp; (guessDigit3 == lotteryDigit1
            || guessDigit3 == lotteryDigit2))
            System.out.println(""Match all digits: you win $3,000"");
</code></pre>

<p>This is all I can work with--no other formulas. A program used to turn-in my code is very particular about the input. It'll only accept what it has been set to accept.</p>
"
"28448853","<p>Try Below code </p>

<pre><code> public static void main(String[] args) {
    int[] i = {1,10,50};
    System.out.println(Arrays.toString(i));
  }
</code></pre>
"
"28701859","<p>You can create a utility method that wraps the try/catch and returns a boolean, something like:</p>

<pre><code>import java.util.*;
import java.lang.*;
import java.io.*;

class TestClass
{
    public static void main (String[] args) throws java.lang.Exception
    {
        System.out.println(TestClass.isLongString(""188237574385834583453453635""));
    }

    public static boolean isLongString(final String longNumber)
    {
        boolean isLong = false;
        try
        {
            Long.parseLong(longNumber);
            isLong = true;
        }
        catch(Exception e)
        {
            // do nothing - return default false
        }

        return isLong;
    }
}
</code></pre>
"
"28540785","<pre><code>Try this: 
package mypackage;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;
import java.util.Arrays;

public class Converter{

    final static int ARRAY_SIZE = 30;

    public static void main(String[] args){     
        int n;
        Scanner in = new Scanner(System.in);
        System.out.println(""Enter a positive integer:"");
        n = in.nextInt();
        in.close();

        if (n &lt;= 0){
            System.out.println(""ERROR:n&lt;=0"");
            return;
        }else if (n &gt; 0){
            int[] ostataci = new int[ARRAY_SIZE];
            int i = 0;
            while (n&gt;0){            
                ostataci[i] = n % 2;
                i++;
                n = n / 2;              
                System.out.printf(""%d %n"", ostataci[i]);
            }
        System.out.println(""All done!"");    
        System.out.println(Arrays.toString(ostataci));
        }
    }
}
</code></pre>
"
"28542364","<p>You can use Date.getTime() to get a long representing the number of milliseconds from Jan 1, 1970. If you want the unix time, divide it by 1000 to get the number of seconds from Jan 1, 1970.</p>

<pre><code>long unixTime = d.getTime() / 1000;
</code></pre>

<p>You can convert a unix timestamp to java.util.Date using:</p>

<pre><code>Date d = new Date(unixTime * 1000);
</code></pre>
"
"28621256","<pre><code>Try this code, the method should be as follow:

public String printNum()
{
    StringBuilder numbers = new StringBuilder();

    for (int i=0;i&lt;100;i++)
    {
        numbers.append(i+1);

        if(i&lt;99)
        {
            numbers.append("","");
        }

        System.out.println(""Roll "" + (i+ 1) + "" "");
    }

    return numbers.toString();
</code></pre>
"
"28757463","<p>Your set contains entries like (""abc"",2), yet everytime you call the function convertCharStringToNumber, you are checking if the map contains one character at a time, so if the string sent in is ""atq"", you are checking for the keys a, t, and q.  Yet, none of these keys exist in the map that you have created.  If instead that map looked like:</p>

<pre><code>  lettersToNumbers.put(""a"",2);
  lettersToNumbers.put(""b"",2"");
  lettersToNumbers.put(""c"",2"";
  //continue for the rest of the alphabet
</code></pre>

<p>Then the keys would actually be contained in the map.</p>
"
"28761632","<p>In the second iteration of <code>printStringP</code> the attribute <code>flag</code> is <code>true</code> and then the two threads are waiting.</p>
"
"28623560","<p>One way could be <code>String#split</code> the string with char <code>-</code> and ignore the first two index of return <code>String</code> array.</p>

<p>Other may be <code>String#substring(start,end)</code> where start would be 20 and end would be <code>length-1</code></p>
"
"28626235","<pre><code>public static void iterateDirectory( File directory, 
                                     boolean globo_dict_fixed, 
                                     Map&lt;String, ArrayList&lt;String&gt; &gt; fileDict,
                                     Set&lt;String&gt; GLOBO_DICT) throws IOException 
{
    for (File file : directory.listFiles()) 
    {
        if (file.isDirectory()) 
        {
            iterateDirectory(directory, globo_dict_fixed, fileDict, GLOBO_DICT );
        } 
        else 
        {   
            String line; 
            BufferedReader br = new BufferedReader(new FileReader( file ));

            String key_file_loke = file.getPath()
                       .toString()
                    .replaceAll(""/[^/]*$"", """")
                    .replaceAll(""/home/matthias/Workbench/SUTD/ISTD_50.570/assignments/practice_data/data/train/"", """")
                    .replaceAll(""/home/matthias/Workbench/SUTD/ISTD_50.570/assignments/practice_data/data/test/"", """");

            ArrayList&lt;String&gt; document_words_on_line = fileDict.get(key_file_loke);

            while((line = br.readLine()) != null) 
            {
                String[] words = line.split("" "");//those are your words

                if(globo_dict_fixed == false)
                {
                    Data_GloboPop.populate_globo_dict( words, GLOBO_DICT );
                }
                else
                {
                    String word;

                    for (int i = 0; i &lt; words.length; i++) 
                    {
                        word = words[i];

                        document_words_on_line.add(word);
                    }

                }

            }

            //put all documents from the same directory under the same key
            fileDict.put( key_file_loke , document_words_on_line );

        }
    }
}
</code></pre>
"
"28761749","<p>i think you want to replace/split the string.That you can do without knowing the length of the string.Because java takes sequence of string also to replace a particular char or sequence of char in a string. For example :-`public class Test {</p>

<pre><code>public static void main(String[] args) {


    String s=""𥑮"";
    System.out.println(s.replace(""𥑮"", ""k""));

}
}
</code></pre>

<p>`
And if you want to split the String then go for stringtokenizer.For example :-</p>

<pre><code>StringTokenizer st= new StringTokenizer(""your sentence or String"",""the problematic char/string"");
</code></pre>
"
"28761782","<p>You have used a general <code>wait()</code> with the synchronization in the method. Try using an object-synchronised version, such as <code>synchronized(this){ wait(); }</code> then whatever, to prevent cyclic dependencies of multiple threads on the same object, which is very very dangerous for any multithreaded program.</p>

<p>Or, more simply, implement a proper <code>clone()</code> method in your <code>ProducerConsumerData</code> class, and then to the 1st thread pass this object, and to the next pass its clone. Try using <code>p.clone()</code> instead of <code>p</code> in the second thread's constructor.</p>

<p>As answered above, you can make printStringP() 's notify() only get called when flag is true, not always.</p>
"
"28761891","<p>This is the classic misconception that trips up almost everyone who tries to use <code>wait</code> and <code>notify</code>. Really they are so old and broken they shouldn't even be taught any more IMHO.</p>

<p>When <code>printStringP</code> calls <code>notify()</code> <code>printStringC</code> <strong>is not waiting</strong> yet.</p>

<pre><code>class ProduceCosumeData {
    // Variable shared between threads should be volatile.
    volatile boolean flag;

    public synchronized void printStringP(int n) {
        for (int i = 0; i &lt; n; i++) {
            try {
                //for frist time flag is flase so, wait will skip
                if (flag) {
                    System.err.println(""Waiting in printStringP"");
                    wait();
                } else {
                    System.err.println(""flag now true"");
                    flag = true;    //for next time onwards wait() will get call
                }
                System.out.print(""Pay"");
                System.err.println(""printStringP notify"");
                notify();//after this why my wait() not canceling in inprintStringC()
            } catch (Exception e) {
                System.out.print(e);
            }
        }
    }

    public synchronized void printStringC(int n) {
        for (int i = 0; i &lt; n; i++) {
            try {
                System.err.println(""Waiting in printStringC"");
                wait();   // why it is not out of this after notify()
                System.out.print(""Tm"");
                System.err.println(""printStringC notify"");
                notify();
            } catch (Exception e) {
                System.out.print(e);
            }
        }
    }
}

class ProducerT extends Thread {

    ProduceCosumeData p;

    ProducerT(ProduceCosumeData p) {
        this.p = p;   // i am saving the same obj for both threads
    }

    public void run() {
        p.printStringP(10); //it will print 10 times pay
    }
}

class ConsumerT extends Thread {

    ProduceCosumeData p;

    ConsumerT(ProduceCosumeData p) {
        this.p = p;   // i am saving the same obj for both threads
    }

    public void run() {
        p.printStringC(10);   //it will print 10 times tm
    }
}

public void test() {
    ProduceCosumeData p = new ProduceCosumeData();
    ProducerT pt = new ProducerT(p); // with p obj i am creating thread
    ConsumerT ct = new ConsumerT(p); // with same p obj i am creating thread
    pt.start();
    ct.start();  //i am starting 2 threads
}
</code></pre>

<p>prints</p>

<pre><code>flag now true
PayprintStringP notify
Waiting in printStringP
Waiting in printStringC
</code></pre>

<p>To fix this <strong>don't use wait/notify</strong> it is broken for all but the very experienced. The same functionality can be achieved in a stable fashion using <code>Lock</code>s and <code>Condition</code>s or almost any other <code>java.util.concurrent</code> class.</p>
"
"28762252","<pre><code>Please find the below code snippet.

package com.java.examples;

public class ProducerConsumer {
    public static void main(String[] args) throws InterruptedException {
        ProduceCosumeData p = new ProduceCosumeData();
        ProducerT pt = new ProducerT(p); // with p obj i am creating thread
        ConsumerT ct = new ConsumerT(p); // with same p obj i am creating thread
        pt.start();
        Thread.sleep(1000);
        ct.start(); // i am starting 2 threads
    }
}

class ProduceCosumeData {
    boolean flag = false;

    public synchronized void printStringP(int n) {
        for (int i = 0; i &lt; n; i++) {
            try {
                if (flag) {
                    notify();
                } else
                    flag = true;
                System.out.println(""Pay"");
                if (i &lt;= n - 1) {
                    wait();
                } else {
                    break;
                }

            } catch (Exception e) {
                System.out.print(e);
            }
        }
        notify();
    }

    public synchronized void printStringC(int n) {
        for (int i = 0; i &lt; n; i++) {
            try {
                if (flag) {
                    System.out.println(""Tm"");
                    if (i &lt;= n - 1) {
                        notify();
                    } else {
                        break;
                    }
                } else
                    flag = false;
                wait();
            } catch (Exception e) {
                System.out.print(e);
            }
        }
    }
}

class ProducerT extends Thread {
    ProduceCosumeData p;

    ProducerT(ProduceCosumeData p) {
        this.p = p; // i am saving the same obj for both threads
    }

    public void run() {
        p.printStringP(10); // it will print 10 times pay
    }
}

class ConsumerT extends Thread {
    ProduceCosumeData p;

    ConsumerT(ProduceCosumeData p) {
        this.p = p; // i am saving the same obj for both threads
    }

    public void run() {
        p.printStringC(10); // it will print 10 times tm
    }
}
</code></pre>
"
"28766481","<p>why do you use 2 separate for loops? </p>

<pre><code>boolean duplicates=false;
            for (int j=0;j&lt;TelefonNrLista.size() - 1;j++){        
                if (TelefonNrLista(j).getTelNr().equals(TelefonNrLista(j+1).getTelNr()))
                  duplicates = true;
        }
</code></pre>
"
"28802064","<p>You can check if two numbers differ by one bit or not as follows. In this method, difference in the length of binary numbers are taken care of. Eg, the output for 11 (1011) and 3 (11) will be returned as true. 
Also, this does not solve the second criteria for Gray code adjacency. But if you only want to check if the numbers differ by one bit, the code below will help.</p>

<pre><code>class Graycode{
    public static boolean graycheck(int one, int two){
        int differences = 0;
        while (one &gt; 0 || two &gt; 0){
            // Checking if the rightmost bit is same
            if ((one &amp; 1) != (two &amp; 1)){
                differences++;
            }
            one &gt;&gt;= 1;
            two &gt;&gt;= 1;
        }
        return differences == 1;
    }
    public static void main(String[] args){
        int one = Integer.parseInt(args[0]);
        int two = Integer.parseInt(args[1]);
        System.out.println(graycheck(one,two));
    }
}
</code></pre>
"
"28633225","<pre><code>Power Table in Java
</code></pre>

<h2>Create a Power Table in Java</h2>

<pre><code>import java.util.*;    
class powerseries    
{    
    public static void main(String[] ar)    
    {    
    Scanner o=new Scanner(System.in);    
    int num,i,temp=1,temp2=1;    
    System.out.print(""\nEnter Table number for powerseries:  "");    
    num=o.nextInt();    

    for(i=1;i&lt;=10;i++)    
        {    
    System.out.println(num+"" ^ ""+i+"" = ""+(temp2*num));    
    temp2=temp2*num; /*multiply coming number*/
        }       
    }   
}   
</code></pre>
"
"28791843","<p>If you have an OnItemClickListener, the view that was clicked is passed to it. Check that the view is not null. Then, do:</p>

<pre><code>@Override
public void onItemClick(AdapterView&lt;?&gt; arg0, View viewThatWasClicked, 
                                     int position, long arg3) {
    TextView tid = (TextView) viewThatWasClicked.findViewById(R.id.tid);

    String text= tid.getText().toString();
}
</code></pre>
"
"28631717","<p>Your question can be answered as follow: </p>

<p><strong>Edit</strong></p>

<pre><code>int x = 100;
System.out.println(Integer.toBinaryString(x));
</code></pre>

<p>toBynaryString() is the function you are looking at.</p>

<p>as shown <a href=""http://stackoverflow.com/a/5263199/3871208"">here</a></p>
"
"28734869","<p>Try this code</p>

<pre><code>public static boolean recursiveMethod(int x) {
if (x &gt;= 5) {
    return true;
}
boolean isPrintedOnce = false;
if (isPrintedOnce = false) {
    if(x==0){
    System.out.println(""Printed once!""); // Print this statement only once
    }
    isPrintedOnce = true;
}
return recursiveMethod(x + 1);
}

public static void main(String[] args) {
System.out.println(recursiveMethod(0));
}
</code></pre>
"
"28861170","<pre><code>  public void actionPerformed(ActionEvent e)
  {
    if(e.getSource () == button)
    {
      test = new JFrame();
      test.setSize(300,300);
      test.setVisible (true);
      this.dispose();

    }
  }
</code></pre>

<p>Dispose AFTER creating the new Frame.</p>
"
"28892819","<p>I think You want to wait a thread.So you can Put this line inside your run() method.</p>

<pre><code>Thread.sleep(1000);
</code></pre>

<p>So every thread will held for 1 sec while completing execution.Hope this will work.Try it and let me know.</p>
"
"28755954","<p>You can just use the <code>.size()</code> method of a <code>Collection</code>.</p>

<pre><code>Map&lt;K, V&gt; myMap = ...
Collection&lt;V&gt; valueSet = myMap.values();
int size = valueSet.size();
</code></pre>
"
"28877451","<p>Lets say current Frame is FirstFrame
and clicking on JButton goes to NewFrame</p>

<pre><code>import javax.swing.*;

public class FirstFrame extends Jframe implements ActionListener{


  JButton button;    

  public FirstFrame(){
   setVisible(true);
   setSize(500,500);

    button=new JButton(""Click me"");
    button.addActionListner(this);
   add(button);     
  }

  public static void main(String[] args)
  {
   new FirstFrame();
  }

  public void actionPerformed(ActionEvent e)
   {
   if(e.getSource()==button)
    {
        NewFrame nf=new NewFrame();    // Clicking on the Button will OPEN new Frame in NewFrame.java file 
        dispose();  //this method will close the FirstFrame 
     }
   }


}
</code></pre>
"
"28759032","<p>Use this</p>

<pre><code>                JSONObject weatherArray = new JSONObject(result);
                JSONArray wArray = new JSONArray(""weather"");

                String mainWeather = ((JSONObject)wArray.getJSONObject(0)).getString(""main"");
                String mainDescription = ((JSONObject)wArray.getJSONObject(0)).getString(""description"");

                Toast.makeText(getBaseContext(), mainWeather + "" - ""
                            + mainDescription,Toast.LENGTH_SHORT).show();
</code></pre>
"
"28903908","<p>I dont know the reason why, its hapens, but you can do a replace, the underscore, by a dot.</p>

<p>something like :</p>

<pre><code>String number = 1000_000;

number = number.replace('_','.');
</code></pre>
"
"28768527","<p>When you write</p>

<pre><code>if(c==m)
</code></pre>

<p>you are simply checking for @hashcode Which might be same for two object under certain circumstances so you might not be getting any error in that line!</p>
"
"28790420","<pre><code>int countA = 0;
for(Object o : list) {
    if(o instanceof A) {
        countA++;
    }
}
return countA == list.size(); // homogenous list
</code></pre>
"
"28950194","<p>If you're saving in the database, you must set readOnly = false in @Transactional.</p>

<pre><code>@Transactional(readOnly = false, propagation = Propagation.REQUIRED)
</code></pre>
"
"28814397","<p>If you are sure about .pdf end, this is the most easiest approach</p>

<pre><code>public static void main(String[] args) {
    String pdfName = ""something.pdf"";
    String fileTracciato = pdfName.substring(0, pdfName.length()-4) + "".txt"";
    System.out.println(fileTracciato);
}    
</code></pre>

<p>The output of this method is <code>something.txt</code></p>

<p>This substring method I used just removes the last 4 characters before adding .txt</p>
"
"28950873","<p>You need to load Spring AOP for the Transactions to work. Please add the following to your configuration.</p>

<pre><code>&lt;context:load-time-weaver/&gt;
</code></pre>
"
"28814521","<p>Try this,</p>

<pre><code>String[] pdfsplits = pdfName.split("".""); 
String fileTracciato;

if(pdfsplits.size&gt;1){
    fileTracciato = pdfName.replace(pdfsplits[pdfsplits.size-1],"""")+""txt"";
}else{
    fileTracciato = pdfName+"".txt"";
}
</code></pre>
"
"28951846","<p>I'd rather use a foreach loop inside toString, like:</p>

<pre><code>public String toString()
{
     String ret = """";
     for (Camino camino : listCaminos)
     {
         ret += camino.toString() + ""\n"";
     }
     return ret;
}
</code></pre>

<p>Instead of using \n (as new line), you can use comma as your example.
Evenmore, it could be improved using StringBuilder if performance improvements are necessary.</p>
"
"28801088","<p><code>ThreadLocal</code> are local to a thread. Local variables are local to the stack (assuming you mean ""local"" as in variables declared within a method).</p>
"
"28955048","<p>Try this code:</p>

<p>If your data type is an array of integer:</p>

<pre><code>int my_array={1,2,3,4,5};

for(int i=0; i &lt; my_array.length; i++) {
    System.out.print(my_array[i] + "","");//this line will print the value with a coma (,)
}
</code></pre>

<p>If your data type is a string;</p>

<pre><code>String my_number=""1 2 3 4 5"";

for(int i=0; i &lt; my_number.length; i++){
    if(my_number.toCharArray()[i]!=' ')
       System.out.print(my_number.toCharArray()[i]+"","");
}
</code></pre>

<p>Or,</p>

<pre><code>String my_number=""1 2 3 4 5"";
my_number = my_number.replace(' ', ',');//this method (replace) will replace all space(' ') by coma(',')
System.out.println(my_number);
</code></pre>
"
"28809238","<p>Your loop should look like</p>

<pre><code>while (true) {
    System.out.print(""Choose a player: "");
    myChar = in.nextInt();
    if (myChar &gt; 0 &amp;&amp; myChar &lt; 4) {
        break; // out of the loop
    }
}
</code></pre>

<p>That is you only <code>break;</code> out of it if the scanned value is either 1, 2, or 3.</p>

<hr>

<p><em>@Ali, <code>while(true)</code> approach is perfectly fine. In fact, it's far more common to see them than a <code>do-while()</code> in actual code running out there. The downvote received is subjective and based on individual coding style preference rather than an indication on the correctness of the answer.</em></p>
"
"28866012","<p>You are not including the first number in the total sum,just remove the <code>userInput.next();</code> beforing initializing the sum to 0.Here is the code</p>

<pre><code>import java.util.Scanner;

    public class Input
    {
        public static void main(String args[])
        {
            //prompt user to enter numbers
            Scanner userInput = new Scanner(System.in);
            System.out.print(""Enter positive integers. Enter -1 to stop. "");
            int integers = 0;

            //sum is initially set to 0
            int sum = 0;

            //execute commands as long as the input does not equal -1
            while(integers != -1)
            {
                //keep gathering user input
                integers = userInput.nextInt();
                if(integers != -1)
                    sum += integers;
            }

            //print the results to the user
            System.out.println(""You entered: "" + integers + "", "");
            System.out.println(""Sum is: "" + sum);
        }
    }
</code></pre>

<p>And the output is:</p>

<pre><code>Enter positive integers. Enter -1 to stop. 10
23
-1
You entered: -1, 
Sum is: 33
</code></pre>
"
"28893974","<p>It is pretty straight forward.</p>

<pre><code>bool trigger = (true/false);
do {
    if (...) {
        if (...){...}
        else if (...) {...}
        else {
            print out retry statement;
            trigger = false; 
        }
    }
}
while (trigger == true);
</code></pre>

<p>Don't forget a semicolon at the end. </p>
"
"29007483","<p>You can cast Collection to List in this case</p>

<pre><code>((List&lt;Station&gt;)newNetwork.getStations()).get(0);
</code></pre>
"
"28936354","<pre><code>    public static int[] removeElement(int element,int[] original){
        int[] n = new int[original.length - 1];
        System.arraycopy(original, 0, n, 0, element );
        System.arraycopy(original, element+1, n, element, original.length - element-1);
        return n;// http://stackoverflow.com/questions/4870188/delete-item-from-array-and-shrink-array
    }
    public static int [] shift(int[] original){
        int[] a = new int[original.length];
        for(int k = 1 ; k &lt; original.length;k++){
            a[k-1] = original[k];
        }
        a[original.length-1] = original[0];
        return(a);
    }
    public static int minimum(int[] arr){ //Process of elimination
        if(arr.length==1){ //Base Case
           return(arr[0]); 
        }
        if(arr[0]&gt;=arr[1]){// reduction step
           return(minimum(removeElement(0,arr)));
        }else{ // tread water
            return(minimum(shift(arr)));
        }
    }// There is always a better way but this sould satisfy your teacher.
</code></pre>

<p>Give Pratik Popat an up-vote for copying my mediocre logic. </p>
"
"28937074","<pre><code>public static int min(int[] n) {
    if(n.length == 1)//base case
        return(n[0]);
    int a = n.length%2 == 0 ? 0:1;      //Awesome sauce syntax http://www.cafeaulait.org/course/week2/43.html
    int[] r =new int[n.length/2 + a];   // reduce by a factor of 2 each iteration
    for(int k = 0 ; k &lt; n.length/2 + a ; k++){    //While copying to a smaller array you might as well make comparisons.
        r[k] = n[k]&lt;=n[n.length-k-1] ? n[k] : n[n.length-k-1];//compare the beginning and end of your array, take the smaller of the two.
    }   //In the case that you have an odd number of elements the middle is always copied trough to the next iteration
    return(min(r));//This is where the recursion happens.
}   // There is always a better way but this should satisfy your teacher.
</code></pre>
"
"29033600","<p>There are 2 approaches to think about your question:</p>

<ol>
<li><p><em>the Java language definition</em></p>

<ul>
<li>language defines that the 2nd example will use short-circuit execution which means <strong>in the case the <code>if</code> statements will contain any code, the 2nd example may execute faster</strong></li>
</ul></li>
<li><p><em>the JVM optimization</em></p>

<ul>
<li><strong>the JVM runtime will remove the dead code blocks if it can proof they don't have any side-effects</strong></li>
</ul></li>
</ol>
"
"28894392","<p>You need this dependency :   </p>

<pre><code>&lt;dependency&gt;
        &lt;groupId&gt;org.codehaus.jackson&lt;/groupId&gt;
        &lt;artifactId&gt;jackson-mapper-asl&lt;/artifactId&gt;
        &lt;version&gt;&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre>

<p>Add this if already haven't :</p>

<pre><code>&lt;bean id=""jsonConverter"" class=""org.springframework.http.converter.json.MappingJacksonHttpMessageConverter""&gt;&lt;/bean&gt;
 &lt;bean class=""org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter""&gt;
&lt;property name=""messageConverters""&gt;
  &lt;list&gt;
    &lt;ref bean=""jacksonMessageConverter""/&gt;
  &lt;/list&gt;
&lt;/property&gt;
&lt;/bean&gt;
</code></pre>
"
"28923455","<blockquote>
  <p>how to seperate getters and setters from managed bean in JSF?</p>
</blockquote>

<p>Just introduce another managed bean whose purpose it is to hold your data.</p>

<pre><code>@Named
@ViewScoped
public class LoginModel implements Serializable {
    private String userName;
    private String password;

    //Getters and setters ...
}

@Named
@ViewScoped
public class LoginController implements Serializable {

    @Inject
    private LoginModel loginData;

    public String logIn(){
        if(isLoginDataValid(loginData)){
            return ""index.xhtml"";
        }
    }
}
</code></pre>

<p>Please make sure you use <code>javax.faces.view.ViewScoped</code> as the annotation. Do not use <code>javax.faces.bean.ViewScoped</code>.</p>

<p>Using part of jsf might look like.</p>

<pre><code>&lt;h:form&gt;
    &lt;table&gt;
        &lt;tr&gt;
            &lt;td&gt;Username:&lt;/td&gt;
            &lt;td&gt;
                &lt;h:inputText value=""#{loginModel.userName}""/&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt; 
            &lt;td&gt;Password:&lt;/td&gt;
            &lt;td&gt;
                &lt;h:inputText value=""#{loginModel.password}""/&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;
                &lt;h:commandButton value=""Login"" action=""#{loginController.logIn}""/&gt;          
            &lt;/td&gt;
        &lt;/tr&gt;
    &lt;/table&gt;
&lt;/h:form&gt;
</code></pre>
"
"28925629","<p>Use java's <a href=""http://docs.oracle.com/javase/7/docs/api/java/lang/String.html#substring(int)"" rel=""nofollow"">substring(int beginIndex)</a> method in String objects</p>

<pre><code>String x = ""Hello"";

System.out.print(x); // Hello

System.out.print(x.substring(1)); //ello
</code></pre>
"
"29004450","<p>the split mechanism takes regular expressions as input so you need to escape special characters with a double backslash (which will escape to a single backslash within the string)</p>

<pre><code>String [] list = myString.split(""\\?\\/"");
</code></pre>
"
"29495061","<p>Maybe you are just missing the proper PostProcessor:</p>

<pre><code>&lt;bean class=""org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"" /&gt;
</code></pre>
"
"29535740","<p>Just in case someone is working with Eclipse</p>

<p>Windows 8.1 OS | Eclipse Idle Luna</p>

<p>Declare top level variable  <code>private String username</code> Eclipse kindly generate a warning on the left of your screen click that warning and couple of suggestions show up, then select generate.<img src=""http://i.stack.imgur.com/9RlKt.png"" alt=""enter image description here"">  </p>
"
"29037848","<p>this kind of problematics are usually really easy to solve using recursive way of thinking. The solution could look like :</p>

<pre><code>public int rom2int(String s)
{               
    if(s.length() == 0)   
        // no string --&gt; 0
        return  0;
    else if(s.length() == 1)
        // One Character --&gt; Value of Character
        return valueOf(s.charAt(0)); 
    else if((valueOf(s.charAt(0)) &gt; valueOf(s.charAt(1))) ) 
        // The value is NOT followed by a greater value --&gt; We had the value
        return rom2int(s.substring(1, s.length())) + valueOf(s.charAt(0));      
    else if(valueOf(s.charAt(0)) &lt;= valueOf(s.charAt(1)) )
        // The value is followed by a greater (or same) value --&gt; We substract the value
        return rom2int(s.substring(1, s.length())) - valueOf(s.charAt(0));
    else
        // Shouldn't Happen. 0 as neutral element in in a Sum.
        return 0;
}
</code></pre>

<p>Even if recursive solution is forbidden, to my mind it is simpler to un-recursive this algorithm than find the procedural one at first try =)</p>

<p>Edit :
MY Results :</p>

<blockquote>
  <p>Value of MCCMIIX  is : 1808</p>
  
  <p>Value of IIX is : 8</p>
  
  <p>Value of IVX is : 4</p>
  
  <p>Value of IIVVL is : 38</p>
</blockquote>
"
"29015757","<p>correct is </p>

<pre><code>if(i % (j*j) == 0){
    k=0; 
    System.out.println(i);
}
</code></pre>

<p>by using <code>{}</code></p>

<p>after if put { n before syso put }</p>

<pre><code>if(i % (j*j) == 0){
    k=0; 
    System.out.println(i);
}
</code></pre>
"
"29925572","<blockquote>
  <p>A user can input data at the time of execution of the program without using a scanner class, and this can be done by using the following program.</p>
</blockquote>

<pre><code> class Demo
  { 
   public static void main(String ar[])
    {
     int ab = Integer.parseInt(ar[0]);
     int ba = Integer.parseInt(ar[1]);
     int res = ab+ba;
     System.out.print(res);
    }
  }
</code></pre>

<blockquote>
  <p>This is a basic program where a user can input data at the time of execution and get the desired result. You can add, subtract, Multiply, divide and concatenate strings, in CMD and a user can input data after compiling the java program i.e at the time of calling the class file. You just need to call the class file and then enter the data after a space.</p>
</blockquote>

<p><code>C:\Users\Lenovo\Desktop&gt;java Demo 5 2</code></p>

<blockquote>
  <p>Here ab= 5 and ba= 2. A user can have any number or string if he wants. </p>
</blockquote>
"
"29015905","<p>Why dont't you translate it exctly? That would be:</p>

<pre><code>import java.util.*;
public class squarefree {

public static void main(String[] args) {
   int i, j, k;

   for(i=1; i&lt;59; i++){
    k=1;
    for(j=2; j&lt;1; j++)
        if(i % (j*j) == 0)
            k=0; 
    if (k)
        System.out.println(i);
   }
   System.out.println(i);
}
</code></pre>
"
"29905751","<p><strong>replace ""mipmap"" with ""drawable""</strong></p>

<p>I had the same problem while following a tutorial and i found out that my AndroidManifest.xml file had the following code :-</p>

<p><code>android:icon=""@mipmap/ic_launcher</code></p>

<p>so I changed R.drawable to R.mipmap it solved the problem . Wherever I found out drawable I replaced it with mipmap. Good to check for mipmap with android studio 1.1.
for more info :-<a href=""https://androidbycode.wordpress.com/2015/02/14/goodbye-launcher-drawables-hello-mipmaps/"" rel=""nofollow"">https://androidbycode.wordpress.com/2015/02/14/goodbye-launcher-drawables-hello-mipmaps/</a></p>
"
"29058550","<p>This answer is based on an assumed reading of OPs notation,
that ""X->Y-Z"" means ""thread X runs to completion before Y and Z start"".</p>

<p>Patching Eng. Fouad's answer to match OP's circumstance:</p>

<pre><code>Thread A = ...;
Thread B = ...;
Thread C ...
Thread D ...

if (input==0)
  {  A.start(); // start thread A
     A.join(); // wait here until thread A finishes
     C.start();
     C.join();
     B.start();
     D.start();
     B.join();
     D.join();
   }
else
  {  A.start(); 
     A.join(); 
     D.start();
     D.join();
     B.start();
     C.start();
     B.join();
     C.join();
   }
</code></pre>

<p>As a slight optimization, the A.start();A.join() pair of statements can be lifted above the conditional.</p>

<p>What OP appears to want to do is define dynamic partial orders over threads.  His particular example is solvable as above.  In general, a static partial order (each arm of the ""if"" above) can't be accomplished by the parent thread using ""starts"" and ""joins""; the individual threads have to do the joins to ensure they get invoked in the right order.  To do a dynamic partial order, each thread will have to check the predecessors based on the condition.</p>

<p>Imagine input==0 causes A->B, A->C, D->C, otherwise A->D, B->D, B->C:
You need a messier solution like this (forgive my Java, I am not an expert):</p>

<pre><code>Thread A = new Thread(workerA)...;
Thread B = new Thread(workerB)...;
Thread C = new Thread(workerC)...;
Thread D = new Thread(workerD)...;

workerA() {
   ... 
}

workerB() {
   if (input==0)
       A.join();
   ...
}

workerC() {
  if (input==0)
     { A.join(); D.join(); }
  else B.join();
...
}

workerD() {
  if (input==1)
     { A.join(); B.join(); }
  ...
}

A.start(); // start thread A
B.start();
C.start();
D.start();
if (input==0)
   { B.join(); C.join(); }
else { C.join(); D.join(); }
</code></pre>

<p>I've assumed that Java threads can see variables from the parent thread if properly scoped.  I've also assumed that you can join to a thread more than once, e.g., several calls to A.join() from various places are OK.</p>

<p>If you have 10-12 threads with a complex partial order, it is pretty hard to write this and get it right. There are languages in which you can express the partial orders directly to avoid having to write all that start/join goo. </p>
"
"30101601","<p>just add this line in your eclipse.ini</p>

<pre><code>Dorg.eclipse.ecf.provider.filetransfer.excludeContributors=org.eclipse.ecf.provider.filetransfer.httpclient4
</code></pre>

<p>and restart eclipse!</p>

<p>if it persist , check the parameters of network connections in <code>Tools &gt; preferences &gt; general &gt; Network connections</code></p>
"
"29062038","<pre><code>package com.mkyong.regex;

        import java.util.regex.Matcher;
        import java.util.regex.Pattern;

 public class HexValidator{

    private Pattern pattern;
    private Matcher matcher;

    private static final String HEX_PATTERN = ""^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"";

    public HexValidator(){
        pattern = Pattern.compile(HEX_PATTERN);
    }

    /**
     * Validate hex with regular expression
     * @param hex hex for validation
     * @return true valid hex, false invalid hex
     */
    public boolean validate(final String hex){

        matcher = pattern.matcher(hex);
        return matcher.matches();

    }
}
</code></pre>
"
"29293185","<pre><code>import java.util.*;

class Time
{
    static Scanner in=new Scanner(System.in);
    public static void main(String[] args)
    {
        int time1,time2,totalTime;
        System.out.println(""Enter the first time in military:"");
        time1=in.nextInt();
        System.out.println(""Enter the second time in military:"");
        time2=in.nextInt();
        totalTime=time2-time1;
        String temp=Integer.toString(totalTime);
        char hour=temp.charAt(0);
        String min=temp.substring(1,3);
        System.out.println(hour+"" hours ""+min+"" minutes"");
    }
}
</code></pre>
"
"30214576","<p>we can close
the question
i got the answer from a colleague</p>

<p>we should write to the log4j config file</p>

<pre><code>&lt;logger name=""packageName.Class"" additivity=""false""&gt;
    &lt;level value=""INFO"" /&gt;
    &lt;appender-ref ref=""fileAppender"" /&gt;
&lt;/logger&gt;
</code></pre>
"
"29351409","<pre><code>public class ThreadScenarioTest {

    public static void main(String[] args) {
        EvenOddService evenOddService = new EvenOddService();
        Runnable oddRunnable = () -&gt; {
            while (true) {
                evenOddService.setOddThread(true);
                evenOddService.printOddNumber();
            }
        };
        Runnable evenRunnable = () -&gt; {
            while (true) {
                evenOddService.setOddThread(false);
                evenOddService.printEvenNumber();
            }
        };
        Thread oddThread = new Thread(oddRunnable);
        Thread evenThread = new Thread(evenRunnable);
        oddThread.start();
        evenThread.start();
    }
}

public class EvenOddService {

    private int counter = 0;
    private boolean isOddThread;

    public boolean isOddThread() {
        return isOddThread;
    }

    public void setOddThread(boolean isOddThread) {
        this.isOddThread = isOddThread;
    }

    public synchronized void printOddNumber() {
        if (isOddThread) {
            try {
                System.out.println(""odd  :: "" + ++counter);
                notifyAll();
                Thread.sleep(1000);
                wait();
            } catch (InterruptedException exception) {
            }
        }
    }

    public synchronized void printEvenNumber() {
        if (!isOddThread) {
            try {
                System.out.println(""even :: "" + ++counter);
                notifyAll();
                Thread.sleep(1000);
                wait();
            } catch (InterruptedException exception) {
            }
        }
    }
}
</code></pre>
"
"29482955","<p>A solution, not the fastest but clear.</p>

<pre><code>public boolean prefixAgain(String str, int n) {
  String prefix = str.substring(0,n); // prefix String
  int index = str.indexOf(prefix); //first loc of prefix
  if(str.lastIndexOf(prefix) &gt; index){ //see if it appears again
  return true; 
  }
  else return false; //if we get here, doesn't appear again, false
}
</code></pre>
"
"29514895","<p>I've had the same problem and I've got solution at <a href=""http://www.datanucleus.org/servlet/jira/browse/NUCENHANCER-73"" rel=""nofollow"">this web-site</a> with adding these lines:</p>

<pre><code>@Transient 
protected Object[] jdoDetachedState; 
</code></pre>

<p>This helped for me. Maybe, this will help anybody.</p>
"