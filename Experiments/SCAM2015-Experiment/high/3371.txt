public class ThreadExample {
    private static volatile int x;

    private static class Incrementer implements Runnable {
        @Override
        public void run() {
            while (!Thread.currentThread().isInterrupted()) {
                x++;
                try {
                    Thread.sleep(500L);
                }
                catch (InterruptedException e) {
                    return;
                }
            }
        }
    }

    private static class Reader implements Runnable {
        @Override
        public void run() {
            while (!Thread.currentThread().isInterrupted()) {
                System.out.println(x);
                try {
                    Thread.sleep(100L);
                }
                catch (InterruptedException e) {
                    return;
                }
            }
        }
    }

    public static void main(String[] args) throws InterruptedException {
        Thread t1 = new Thread(new Incrementer());
        Thread t2 = new Thread(new Reader());
        t1.start();
        t2.start();

        try {
            Thread.sleep(5000L);
        }
        finally {
            t1.interrupt();
            t2.interrupt();
        }
    }
}